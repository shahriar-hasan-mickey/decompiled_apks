record `com.google.crypto.tink.shaded.protobuf.d$b` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.d` @kind class {
  `boolean` `com.google.crypto.tink.shaded.protobuf.d$b.a` @AccessFlag PRIVATE_FINAL;
  `byte`[] `com.google.crypto.tink.shaded.protobuf.d$b.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.crypto.tink.shaded.protobuf.d$b.c` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.d$b.d` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.d$b.e` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.d$b.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object, `boolean` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.<init>:(Ljava/nio/ByteBuffer;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L45c254.  v0:= 0I;
  #L45c256.  call `<init>`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/d$a;)V` @kind direct;
  #L45c25c.  v1.`com.google.crypto.tink.shaded.protobuf.d$b.a` @type ^`boolean` := v3 @kind boolean;
  #L45c260.  call temp:= `array`(v2) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L45c266.  v3:= temp @kind object;
  #L45c268.  v1.`com.google.crypto.tink.shaded.protobuf.d$b.b` @type ^`byte`[] := v3 @kind object;
  #L45c26c.  call temp:= `arrayOffset`(v2) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L45c272.  v3:= temp;
  #L45c274.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L45c27a.  v0:= temp;
  #L45c27c.  v3:= v3 + v0 @kind int;
  #L45c27e.  v1.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v3;
  #L45c282.  call temp:= `arrayOffset`(v2) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L45c288.  v3:= temp;
  #L45c28a.  call temp:= `limit`(v2) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L45c290.  v2:= temp;
  #L45c292.  v3:= v3 + v2 @kind int;
  #L45c294.  v1.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int` := v3;
  #L45c298.  return @kind void;
}
procedure `boolean` `O`(`com.google.crypto.tink.shaded.protobuf.d$b` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L45b63c.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45b640.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int`;
  #L45b644.  if v0 != v1 then goto L45b64c;
  #L45b648.  v0:= 1I;
  #L45b64a.  goto L45b64e;
  #L45b64c.  v0:= 0I;
  #L45b64e.  return v0;
}
procedure `byte` `P`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.P:()B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L45b71c.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45b720.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int`;
  #L45b724.  if v0 == v1 then goto L45b73a;
  #L45b728.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.b` @type ^`byte`[] @kind object;
  #L45b72c.  v2:= v0 + 1;
  #L45b730.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v2;
  #L45b734.  v0:= v1[v0] @kind byte;
  #L45b738.  return v0;
  #L45b73a.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45b740.  v0:= temp @kind object;
  #L45b742.  throw v0;
}
procedure `java.lang.Object` `Q`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType` v2 @kind object, `java.lang.Class` v3 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Q:(Lcom/google/crypto/tink/shaded/protobuf/WireFormat$FieldType;Ljava/lang/Class;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L45badc.  v0:= `@@com.google.crypto.tink.shaded.protobuf.d$a.a` @type ^`int`[] @kind object;
  #L45bae0.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L45bae6.  v2:= temp;
  #L45bae8.  v2:= v0[v2];
  #L45baec.  goto L45bc1c;
  #L45baf2.  v2:= new `java.lang.RuntimeException`;
  #L45baf6.  v3:= "unsupported field type." @kind object;
  #L45bafa.  call `<init>`(v2, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45bb00.  throw v2;
  #L45bb02.  call temp:= `u`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.u:()J` @kind virtual;
  #L45bb08.  v2:= temp @kind wide;
  #L45bb0a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45bb10.  v2:= temp @kind object;
  #L45bb12.  return v2 @kind object;
  #L45bb14.  call temp:= `g`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.g:()I` @kind virtual;
  #L45bb1a.  v2:= temp;
  #L45bb1c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45bb22.  v2:= temp @kind object;
  #L45bb24.  return v2 @kind object;
  #L45bb26.  call temp:= `M`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.M:()Ljava/lang/String;` @kind virtual;
  #L45bb2c.  v2:= temp @kind object;
  #L45bb2e.  return v2 @kind object;
  #L45bb30.  call temp:= `C`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.C:()J` @kind virtual;
  #L45bb36.  v2:= temp @kind wide;
  #L45bb38.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45bb3e.  v2:= temp @kind object;
  #L45bb40.  return v2 @kind object;
  #L45bb42.  call temp:= `l`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.l:()I` @kind virtual;
  #L45bb48.  v2:= temp;
  #L45bb4a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45bb50.  v2:= temp @kind object;
  #L45bb52.  return v2 @kind object;
  #L45bb54.  call temp:= `e`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e:()J` @kind virtual;
  #L45bb5a.  v2:= temp @kind wide;
  #L45bb5c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45bb62.  v2:= temp @kind object;
  #L45bb64.  return v2 @kind object;
  #L45bb66.  call temp:= `H`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.H:()I` @kind virtual;
  #L45bb6c.  v2:= temp;
  #L45bb6e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45bb74.  v2:= temp @kind object;
  #L45bb76.  return v2 @kind object;
  #L45bb78.  call temp:= `D`(v1, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.D:(Ljava/lang/Class;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind virtual;
  #L45bb7e.  v2:= temp @kind object;
  #L45bb80.  return v2 @kind object;
  #L45bb82.  call temp:= `L`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.L:()J` @kind virtual;
  #L45bb88.  v2:= temp @kind wide;
  #L45bb8a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45bb90.  v2:= temp @kind object;
  #L45bb92.  return v2 @kind object;
  #L45bb94.  call temp:= `q`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.q:()I` @kind virtual;
  #L45bb9a.  v2:= temp;
  #L45bb9c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45bba2.  v2:= temp @kind object;
  #L45bba4.  return v2 @kind object;
  #L45bba6.  call temp:= `readFloat`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.readFloat:()F` @kind virtual;
  #L45bbac.  v2:= temp;
  #L45bbae.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L45bbb4.  v2:= temp @kind object;
  #L45bbb6.  return v2 @kind object;
  #L45bbb8.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.a:()J` @kind virtual;
  #L45bbbe.  v2:= temp @kind wide;
  #L45bbc0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45bbc6.  v2:= temp @kind object;
  #L45bbc8.  return v2 @kind object;
  #L45bbca.  call temp:= `x`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.x:()I` @kind virtual;
  #L45bbd0.  v2:= temp;
  #L45bbd2.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45bbd8.  v2:= temp @kind object;
  #L45bbda.  return v2 @kind object;
  #L45bbdc.  call temp:= `k`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.k:()I` @kind virtual;
  #L45bbe2.  v2:= temp;
  #L45bbe4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45bbea.  v2:= temp @kind object;
  #L45bbec.  return v2 @kind object;
  #L45bbee.  call temp:= `readDouble`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.readDouble:()D` @kind virtual;
  #L45bbf4.  v2:= temp @kind wide;
  #L45bbf6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L45bbfc.  v2:= temp @kind object;
  #L45bbfe.  return v2 @kind object;
  #L45bc00.  call temp:= `p`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.p:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L45bc06.  v2:= temp @kind object;
  #L45bc08.  return v2 @kind object;
  #L45bc0a.  call temp:= `d`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.d:()Z` @kind virtual;
  #L45bc10.  v2:= temp;
  #L45bc12.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L45bc18.  v2:= temp @kind object;
  #L45bc1a.  return v2 @kind object;
  #L45bc1c.  switch v2
                  | 1 => goto L45bc0a
                  | 2 => goto L45bc00
                  | 3 => goto L45bbee
                  | 4 => goto L45bbdc
                  | 5 => goto L45bbca
                  | 6 => goto L45bbb8
                  | 7 => goto L45bba6
                  | 8 => goto L45bb94
                  | 9 => goto L45bb82
                  | 10 => goto L45bb78
                  | 11 => goto L45bb66
                  | 12 => goto L45bb54
                  | 13 => goto L45bb42
                  | 14 => goto L45bb30
                  | 15 => goto L45bb26
                  | 16 => goto L45bb14
                  | 17 => goto L45bb02
                  | else => goto L45baf2;
}
procedure `java.lang.Object` `R`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.m0` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.R:(Lcom/google/crypto/tink/shaded/protobuf/m0;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L45bc78.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.f` @type ^`int`;
  #L45bc7c.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45bc80.  call temp:= `getTagFieldNumber`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagFieldNumber:(I)I` @kind static;
  #L45bc86.  v1:= temp;
  #L45bc88.  v2:= 4I;
  #L45bc8a.  call temp:= `a`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L45bc90.  v1:= temp;
  #L45bc92.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.f` @type ^`int` := v1;
  #L45bc96.  call temp:= `newInstance`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/m0;.newInstance:()Ljava/lang/Object;` @kind interface;
  #L45bc9c.  v1:= temp @kind object;
  #L45bc9e.  call `e`(v4, v1, v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/m0;.e:(Ljava/lang/Object;Lcom/google/crypto/tink/shaded/protobuf/k0;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @kind interface;
  #L45bca4.  call `b`(v4, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/m0;.b:(Ljava/lang/Object;)V` @kind interface;
  #L45bcaa.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45bcae.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.f` @type ^`int`;
  #L45bcb2.  if v4 != v5 then goto L45bcbc;
  #L45bcb6.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.f` @type ^`int` := v0;
  #L45bcba.  return v1 @kind object;
  #L45bcbc.  call temp:= `g`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.g:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45bcc2.  v4:= temp @kind object;
  #L45bcc4.  throw v4;
  #L45bcc6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45bcc8.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.f` @type ^`int` := v0;
  #L45bccc.  throw v4;
  catch `java.lang.Throwable` @[L45bc96..L45bcb2] goto L45bcc6;
  catch `java.lang.Throwable` @[L45bcbc..L45bcc6] goto L45bcc6;
}
procedure `int` `S`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.S:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L45b8dc.  v0:= 4I;
  #L45b8de.  call `c0`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.c0:(I)V` @kind direct;
  #L45b8e4.  call temp:= `T`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.T:()I` @kind direct;
  #L45b8ea.  v0:= temp;
  #L45b8ec.  return v0;
}
procedure `int` `T`(`com.google.crypto.tink.shaded.protobuf.d$b` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.T:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45b900.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45b904.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.b` @type ^`byte`[] @kind object;
  #L45b908.  v2:= v0 + 4;
  #L45b90c.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v2;
  #L45b910.  v2:= v1[v0] @kind byte;
  #L45b914.  v2:= v2 ^& 255;
  #L45b918.  v3:= v0 + 1;
  #L45b91c.  v3:= v1[v3] @kind byte;
  #L45b920.  v3:= v3 ^& 255;
  #L45b924.  v3:= v3 ^< 8;
  #L45b928.  v2:= v2 ^| v3 @kind int;
  #L45b92a.  v3:= v0 + 2;
  #L45b92e.  v3:= v1[v3] @kind byte;
  #L45b932.  v3:= v3 ^& 255;
  #L45b936.  v3:= v3 ^< 16;
  #L45b93a.  v2:= v2 ^| v3 @kind int;
  #L45b93c.  v0:= v0 + 3;
  #L45b940.  v0:= v1[v0] @kind byte;
  #L45b944.  v0:= v0 ^& 255;
  #L45b948.  v0:= v0 ^< 24;
  #L45b94c.  v0:= v0 ^| v2 @kind int;
  #L45b94e.  return v0;
}
procedure `long` `U`(`com.google.crypto.tink.shaded.protobuf.d$b` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.U:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L45bf14.  v0:= 8I;
  #L45bf18.  call `c0`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.c0:(I)V` @kind direct;
  #L45bf1e.  call temp:= `V`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.V:()J` @kind direct;
  #L45bf24.  v0:= temp @kind wide;
  #L45bf26.  return v0 @kind wide;
}
procedure `long` `V`(`com.google.crypto.tink.shaded.protobuf.d$b` v9 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.V:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L45bf38.  v0:= v9.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45bf3c.  v1:= v9.`com.google.crypto.tink.shaded.protobuf.d$b.b` @type ^`byte`[] @kind object;
  #L45bf40.  v2:= v0 + 8;
  #L45bf44.  v9.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v2;
  #L45bf48.  v2:= v1[v0] @kind byte;
  #L45bf4c.  v2:= (`long`) v2 @kind i2l;
  #L45bf4e.  v4:= 255L;
  #L45bf52.  v2:= v2 ^& v4 @kind long;
  #L45bf54.  v6:= v0 + 1;
  #L45bf58.  v6:= v1[v6] @kind byte;
  #L45bf5c.  v6:= (`long`) v6 @kind i2l;
  #L45bf5e.  v6:= v6 ^& v4 @kind long;
  #L45bf60.  v8:= 8I;
  #L45bf64.  v6:= v6 ^< v8 @kind long;
  #L45bf66.  v2:= v2 ^| v6 @kind long;
  #L45bf68.  v6:= v0 + 2;
  #L45bf6c.  v6:= v1[v6] @kind byte;
  #L45bf70.  v6:= (`long`) v6 @kind i2l;
  #L45bf72.  v6:= v6 ^& v4 @kind long;
  #L45bf74.  v8:= 16I;
  #L45bf78.  v6:= v6 ^< v8 @kind long;
  #L45bf7a.  v2:= v2 ^| v6 @kind long;
  #L45bf7c.  v6:= v0 + 3;
  #L45bf80.  v6:= v1[v6] @kind byte;
  #L45bf84.  v6:= (`long`) v6 @kind i2l;
  #L45bf86.  v6:= v6 ^& v4 @kind long;
  #L45bf88.  v8:= 24I;
  #L45bf8c.  v6:= v6 ^< v8 @kind long;
  #L45bf8e.  v2:= v2 ^| v6 @kind long;
  #L45bf90.  v6:= v0 + 4;
  #L45bf94.  v6:= v1[v6] @kind byte;
  #L45bf98.  v6:= (`long`) v6 @kind i2l;
  #L45bf9a.  v6:= v6 ^& v4 @kind long;
  #L45bf9c.  v8:= 32I;
  #L45bfa0.  v6:= v6 ^< v8 @kind long;
  #L45bfa2.  v2:= v2 ^| v6 @kind long;
  #L45bfa4.  v6:= v0 + 5;
  #L45bfa8.  v6:= v1[v6] @kind byte;
  #L45bfac.  v6:= (`long`) v6 @kind i2l;
  #L45bfae.  v6:= v6 ^& v4 @kind long;
  #L45bfb0.  v8:= 40I;
  #L45bfb4.  v6:= v6 ^< v8 @kind long;
  #L45bfb6.  v2:= v2 ^| v6 @kind long;
  #L45bfb8.  v6:= v0 + 6;
  #L45bfbc.  v6:= v1[v6] @kind byte;
  #L45bfc0.  v6:= (`long`) v6 @kind i2l;
  #L45bfc2.  v6:= v6 ^& v4 @kind long;
  #L45bfc4.  v8:= 48I;
  #L45bfc8.  v6:= v6 ^< v8 @kind long;
  #L45bfca.  v2:= v2 ^| v6 @kind long;
  #L45bfcc.  v0:= v0 + 7;
  #L45bfd0.  v0:= v1[v0] @kind byte;
  #L45bfd4.  v0:= (`long`) v0 @kind i2l;
  #L45bfd6.  v0:= v0 ^& v4 @kind long;
  #L45bfd8.  v4:= 56I;
  #L45bfdc.  v0:= v0 ^< v4 @kind long;
  #L45bfde.  v0:= v0 ^| v2 @kind long;
  #L45bfe0.  return v0 @kind wide;
}
procedure `java.lang.Object` `W`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.m0` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.W:(Lcom/google/crypto/tink/shaded/protobuf/m0;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L45bd4c.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45bd52.  v0:= temp;
  #L45bd54.  call `c0`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.c0:(I)V` @kind direct;
  #L45bd5a.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int`;
  #L45bd5e.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45bd62.  v2:= v2 + v0 @kind int;
  #L45bd64.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int` := v2;
  #L45bd68.  call temp:= `newInstance`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/m0;.newInstance:()Ljava/lang/Object;` @kind interface;
  #L45bd6e.  v0:= temp @kind object;
  #L45bd70.  call `e`(v4, v0, v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/m0;.e:(Ljava/lang/Object;Lcom/google/crypto/tink/shaded/protobuf/k0;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @kind interface;
  #L45bd76.  call `b`(v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/m0;.b:(Ljava/lang/Object;)V` @kind interface;
  #L45bd7c.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45bd80.  if v4 != v2 then goto L45bd8a;
  #L45bd84.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int` := v1;
  #L45bd88.  return v0 @kind object;
  #L45bd8a.  call temp:= `g`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.g:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45bd90.  v4:= temp @kind object;
  #L45bd92.  throw v4;
  #L45bd94.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45bd96.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int` := v1;
  #L45bd9a.  throw v4;
  catch `java.lang.Throwable` @[L45bd68..L45bd80] goto L45bd94;
  catch `java.lang.Throwable` @[L45bd8a..L45bd94] goto L45bd94;
}
procedure `int` `Z`(`com.google.crypto.tink.shaded.protobuf.d$b` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L45b9d4.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45b9d8.  v1:= v5.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int`;
  #L45b9dc.  if v1 == v0 then goto L45bac2;
  #L45b9e0.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.d$b.b` @type ^`byte`[] @kind object;
  #L45b9e4.  v3:= v0 + 1;
  #L45b9e8.  v0:= v2[v0] @kind byte;
  #L45b9ec.  if v0 < 0 then goto L45b9f6;
  #L45b9f0.  v5.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v3;
  #L45b9f4.  return v0;
  #L45b9f6.  v1:= v1 - v3 @kind int;
  #L45b9f8.  v4:= 9I;
  #L45b9fc.  if v1 >= v4 then goto L45ba0c;
  #L45ba00.  call temp:= `b0`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.b0:()J` @kind direct;
  #L45ba06.  v0:= temp @kind wide;
  #L45ba08.  v1:= (`int`) v0 @kind l2i;
  #L45ba0a.  return v1;
  #L45ba0c.  v1:= v3 + 1;
  #L45ba10.  v3:= v2[v3] @kind byte;
  #L45ba14.  v3:= v3 ^< 7;
  #L45ba18.  v0:= v0 ^~ v3 @kind int;
  #L45ba1a.  if v0 >= 0 then goto L45ba24;
  #L45ba1e.  v0:= v0 ^~ -128;
  #L45ba22.  goto L45babc;
  #L45ba24.  v3:= v1 + 1;
  #L45ba28.  v1:= v2[v1] @kind byte;
  #L45ba2c.  v1:= v1 ^< 14;
  #L45ba30.  v0:= v0 ^~ v1 @kind int;
  #L45ba32.  if v0 < 0 then goto L45ba3e;
  #L45ba36.  v0:= v0 ^~ 16256;
  #L45ba3a.  v1:= v3;
  #L45ba3c.  goto L45babc;
  #L45ba3e.  v1:= v3 + 1;
  #L45ba42.  v3:= v2[v3] @kind byte;
  #L45ba46.  v3:= v3 ^< 21;
  #L45ba4a.  v0:= v0 ^~ v3 @kind int;
  #L45ba4c.  if v0 >= 0 then goto L45ba5a;
  #L45ba50.  v2:= -2080896I;
  #L45ba56.  v0:= v0 ^~ v2 @kind int;
  #L45ba58.  goto L45babc;
  #L45ba5a.  v3:= v1 + 1;
  #L45ba5e.  v1:= v2[v1] @kind byte;
  #L45ba62.  v4:= v1 ^< 28;
  #L45ba66.  v0:= v0 ^~ v4 @kind int;
  #L45ba68.  v4:= 266354560I;
  #L45ba6e.  v0:= v0 ^~ v4 @kind int;
  #L45ba70.  if v1 >= 0 then goto L45ba3a;
  #L45ba74.  v1:= v3 + 1;
  #L45ba78.  v3:= v2[v3] @kind byte;
  #L45ba7c.  if v3 >= 0 then goto L45babc;
  #L45ba80.  v3:= v1 + 1;
  #L45ba84.  v1:= v2[v1] @kind byte;
  #L45ba88.  if v1 >= 0 then goto L45ba3a;
  #L45ba8c.  v1:= v3 + 1;
  #L45ba90.  v3:= v2[v3] @kind byte;
  #L45ba94.  if v3 >= 0 then goto L45babc;
  #L45ba98.  v3:= v1 + 1;
  #L45ba9c.  v1:= v2[v1] @kind byte;
  #L45baa0.  if v1 >= 0 then goto L45ba3a;
  #L45baa4.  v1:= v3 + 1;
  #L45baa8.  v2:= v2[v3] @kind byte;
  #L45baac.  if v2 < 0 then goto L45bab2;
  #L45bab0.  goto L45babc;
  #L45bab2.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.e:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45bab8.  v0:= temp @kind object;
  #L45baba.  throw v0;
  #L45babc.  v5.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v1;
  #L45bac0.  return v0;
  #L45bac2.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45bac8.  v0:= temp @kind object;
  #L45baca.  throw v0;
}
procedure `long` `b0`(`com.google.crypto.tink.shaded.protobuf.d$b` v6 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.b0:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45c208.  v0:= 0L;
  #L45c20c.  v2:= 0I;
  #L45c20e.  v3:= 64I;
  #L45c212.  if v2 >= v3 then goto L45c238;
  #L45c216.  call temp:= `P`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.P:()B` @kind direct;
  #L45c21c.  v3:= temp;
  #L45c21e.  v4:= v3 ^& 127;
  #L45c222.  v4:= (`long`) v4 @kind i2l;
  #L45c224.  v4:= v4 ^< v2 @kind long;
  #L45c226.  v0:= v0 ^| v4 @kind long;
  #L45c228.  v3:= v3 ^& 128;
  #L45c22c.  if v3 != 0 then goto L45c232;
  #L45c230.  return v0 @kind wide;
  #L45c232.  v2:= v2 + 7;
  #L45c236.  goto L45c20e;
  #L45c238.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.e:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45c23e.  v0:= temp @kind object;
  #L45c240.  throw v0;
}
procedure `void` `c0`(`com.google.crypto.tink.shaded.protobuf.d$b` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.c0:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L45d6ac.  if v3 < 0 then goto L45d6c0;
  #L45d6b0.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int`;
  #L45d6b4.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d6b8.  v0:= v0 - v1 @kind int;
  #L45d6ba.  if v3 > v0 then goto L45d6c0;
  #L45d6be.  return @kind void;
  #L45d6c0.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45d6c6.  v3:= temp @kind object;
  #L45d6c8.  throw v3;
}
procedure `void` `d0`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.d0:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L45d6dc.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d6e0.  if v0 != v2 then goto L45d6e6;
  #L45d6e4.  return @kind void;
  #L45d6e6.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45d6ec.  v2:= temp @kind object;
  #L45d6ee.  throw v2;
}
procedure `void` `e0`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L45d700.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d704.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45d70a.  v0:= temp;
  #L45d70c.  if v0 != v2 then goto L45d712;
  #L45d710.  return @kind void;
  #L45d712.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45d718.  v2:= temp @kind object;
  #L45d71a.  throw v2;
}
procedure `void` `f0`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.f0:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L45d72c.  call `c0`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.c0:(I)V` @kind direct;
  #L45d732.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d736.  v0:= v0 + v2 @kind int;
  #L45d738.  v1.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45d73c.  return @kind void;
}
procedure `void` `g0`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.g0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L45d750.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.f` @type ^`int`;
  #L45d754.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d758.  call temp:= `getTagFieldNumber`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagFieldNumber:(I)I` @kind static;
  #L45d75e.  v1:= temp;
  #L45d760.  v2:= 4I;
  #L45d762.  call temp:= `a`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L45d768.  v1:= temp;
  #L45d76a.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.f` @type ^`int` := v1;
  #L45d76e.  call temp:= `E`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.E:()I` @kind virtual;
  #L45d774.  v1:= temp;
  #L45d776.  v2:= 2147483647I;
  #L45d77c.  if v1 == v2 then goto L45d78c;
  #L45d780.  call temp:= `G`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.G:()Z` @kind virtual;
  #L45d786.  v1:= temp;
  #L45d788.  if v1 != 0 then goto L45d76e;
  #L45d78c.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d790.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.f` @type ^`int`;
  #L45d794.  if v1 != v2 then goto L45d79e;
  #L45d798.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.f` @type ^`int` := v0;
  #L45d79c.  return @kind void;
  #L45d79e.  call temp:= `g`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.g:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45d7a4.  v0:= temp @kind object;
  #L45d7a6.  throw v0;
}
procedure `void` `h0`(`com.google.crypto.tink.shaded.protobuf.d$b` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.h0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L45d7b8.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int`;
  #L45d7bc.  v1:= v5.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d7c0.  v0:= v0 - v1 @kind int;
  #L45d7c2.  v2:= 10I;
  #L45d7c6.  if v0 < v2 then goto L45d7ee;
  #L45d7ca.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.d$b.b` @type ^`byte`[] @kind object;
  #L45d7ce.  v3:= 0I;
  #L45d7d0.  if v3 >= v2 then goto L45d7ee;
  #L45d7d4.  v4:= v1 + 1;
  #L45d7d8.  v1:= v0[v1] @kind byte;
  #L45d7dc.  if v1 < 0 then goto L45d7e6;
  #L45d7e0.  v5.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v4;
  #L45d7e4.  return @kind void;
  #L45d7e6.  v3:= v3 + 1;
  #L45d7ea.  v1:= v4;
  #L45d7ec.  goto L45d7d0;
  #L45d7ee.  call `i0`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.i0:()V` @kind direct;
  #L45d7f4.  return @kind void;
}
procedure `void` `i0`(`com.google.crypto.tink.shaded.protobuf.d$b` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.i0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L45d808.  v0:= 0I;
  #L45d80a.  v1:= 10I;
  #L45d80e.  if v0 >= v1 then goto L45d826;
  #L45d812.  call temp:= `P`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.P:()B` @kind direct;
  #L45d818.  v1:= temp;
  #L45d81a.  if v1 < 0 then goto L45d820;
  #L45d81e.  return @kind void;
  #L45d820.  v0:= v0 + 1;
  #L45d824.  goto L45d80a;
  #L45d826.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.e:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45d82c.  v0:= temp @kind object;
  #L45d82e.  throw v0;
}
procedure `void` `j0`(`com.google.crypto.tink.shaded.protobuf.d$b` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.j0:(I)V` @AccessFlag PRIVATE {
    temp;

  #L45d840.  call `c0`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.c0:(I)V` @kind direct;
  #L45d846.  v1:= v1 ^& 3;
  #L45d84a.  if v1 != 0 then goto L45d850;
  #L45d84e.  return @kind void;
  #L45d850.  call temp:= `g`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.g:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45d856.  v1:= temp @kind object;
  #L45d858.  throw v1;
}
procedure `void` `k0`(`com.google.crypto.tink.shaded.protobuf.d$b` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.k0:(I)V` @AccessFlag PRIVATE {
    temp;

  #L45d86c.  call `c0`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.c0:(I)V` @kind direct;
  #L45d872.  v1:= v1 ^& 7;
  #L45d876.  if v1 != 0 then goto L45d87c;
  #L45d87a.  return @kind void;
  #L45d87c.  call temp:= `g`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.g:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45d882.  v1:= temp @kind object;
  #L45d884.  throw v1;
}
procedure `java.lang.Object` `A`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.m0` v2 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.A:(Lcom/google/crypto/tink/shaded/protobuf/m0;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45bdf4.  v0:= 2I;
  #L45bdf6.  call `e0`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45bdfc.  call temp:= `W`(v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.W:(Lcom/google/crypto/tink/shaded/protobuf/m0;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind direct;
  #L45be02.  v2:= temp @kind object;
  #L45be04.  return v2 @kind object;
}
procedure `void` `B`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.B:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45c6c8.  v0:= instanceof @variable v4 @type ^`com.google.crypto.tink.shaded.protobuf.o` @kind boolean;
  #L45c6cc.  v1:= 5I;
  #L45c6ce.  v2:= 2I;
  #L45c6d0.  if v0 == 0 then goto L45c758;
  #L45c6d4.  v4:= (`com.google.crypto.tink.shaded.protobuf.o`) v4 @kind object;
  #L45c6d8.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c6dc.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45c6e2.  v0:= temp;
  #L45c6e4.  if v0 == v2 then goto L45c72c;
  #L45c6e8.  if v0 != v1 then goto L45c722;
  #L45c6ec.  call temp:= `x`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.x:()I` @kind virtual;
  #L45c6f2.  v0:= temp;
  #L45c6f4.  call `addInt`(v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @kind virtual;
  #L45c6fa.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45c700.  v0:= temp;
  #L45c702.  if v0 == 0 then goto L45c708;
  #L45c706.  return @kind void;
  #L45c708.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c70c.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c712.  v1:= temp;
  #L45c714.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c718.  if v1 == v2 then goto L45c6ec;
  #L45c71c.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45c720.  return @kind void;
  #L45c722.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45c728.  v4:= temp @kind object;
  #L45c72a.  throw v4;
  #L45c72c.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c732.  v0:= temp;
  #L45c734.  call `j0`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.j0:(I)V` @kind direct;
  #L45c73a.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c73e.  v1:= v1 + v0 @kind int;
  #L45c740.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c744.  if v0 >= v1 then goto L45c7e8;
  #L45c748.  call temp:= `T`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.T:()I` @kind direct;
  #L45c74e.  v0:= temp;
  #L45c750.  call `addInt`(v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @kind virtual;
  #L45c756.  goto L45c740;
  #L45c758.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c75c.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45c762.  v0:= temp;
  #L45c764.  if v0 == v2 then goto L45c7b4;
  #L45c768.  if v0 != v1 then goto L45c7aa;
  #L45c76c.  call temp:= `x`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.x:()I` @kind virtual;
  #L45c772.  v0:= temp;
  #L45c774.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45c77a.  v0:= temp @kind object;
  #L45c77c.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c782.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45c788.  v0:= temp;
  #L45c78a.  if v0 == 0 then goto L45c790;
  #L45c78e.  return @kind void;
  #L45c790.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c794.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c79a.  v1:= temp;
  #L45c79c.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c7a0.  if v1 == v2 then goto L45c76c;
  #L45c7a4.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45c7a8.  return @kind void;
  #L45c7aa.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45c7b0.  v4:= temp @kind object;
  #L45c7b2.  throw v4;
  #L45c7b4.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c7ba.  v0:= temp;
  #L45c7bc.  call `j0`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.j0:(I)V` @kind direct;
  #L45c7c2.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c7c6.  v1:= v1 + v0 @kind int;
  #L45c7c8.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c7cc.  if v0 >= v1 then goto L45c7e8;
  #L45c7d0.  call temp:= `T`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.T:()I` @kind direct;
  #L45c7d6.  v0:= temp;
  #L45c7d8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45c7de.  v0:= temp @kind object;
  #L45c7e0.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c7e6.  goto L45c7c8;
  #L45c7e8.  return @kind void;
}
procedure `long` `C`(`com.google.crypto.tink.shaded.protobuf.d$b` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.C:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45c018.  v0:= 0I;
  #L45c01a.  call `e0`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45c020.  call temp:= `a0`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.a0:()J` @kind virtual;
  #L45c026.  v0:= temp @kind wide;
  #L45c028.  call temp:= `decodeZigZag64`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag64:(J)J` @kind static;
  #L45c02e.  v0:= temp @kind wide;
  #L45c030.  return v0 @kind wide;
}
procedure `java.lang.Object` `D`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this, `java.lang.Class` v2 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.D:(Ljava/lang/Class;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45bdc0.  v0:= 2I;
  #L45bdc2.  call `e0`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45bdc8.  call temp:= `a`() @signature `Lcom/google/crypto/tink/shaded/protobuf/h0;.a:()Lcom/google/crypto/tink/shaded/protobuf/h0;` @kind static;
  #L45bdce.  v0:= temp @kind object;
  #L45bdd0.  call temp:= `d`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/h0;.d:(Ljava/lang/Class;)Lcom/google/crypto/tink/shaded/protobuf/m0;` @kind virtual;
  #L45bdd6.  v2:= temp @kind object;
  #L45bdd8.  call temp:= `W`(v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.W:(Lcom/google/crypto/tink/shaded/protobuf/m0;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind direct;
  #L45bdde.  v2:= temp @kind object;
  #L45bde0.  return v2 @kind object;
}
procedure `int` `E`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.E:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45b814.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45b81a.  v0:= temp;
  #L45b81c.  v1:= 2147483647I;
  #L45b822.  if v0 == 0 then goto L45b828;
  #L45b826.  return v1;
  #L45b828.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45b82e.  v0:= temp;
  #L45b830.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int` := v0;
  #L45b834.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.f` @type ^`int`;
  #L45b838.  if v0 != v2 then goto L45b83e;
  #L45b83c.  return v1;
  #L45b83e.  call temp:= `getTagFieldNumber`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagFieldNumber:(I)I` @kind static;
  #L45b844.  v0:= temp;
  #L45b846.  return v0;
}
procedure `void` `F`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.F:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45c930.  v0:= instanceof @variable v4 @type ^`com.google.crypto.tink.shaded.protobuf.m` @kind boolean;
  #L45c934.  v1:= 5I;
  #L45c936.  v2:= 2I;
  #L45c938.  if v0 == 0 then goto L45c9c8;
  #L45c93c.  v4:= (`com.google.crypto.tink.shaded.protobuf.m`) v4 @kind object;
  #L45c940.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c944.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45c94a.  v0:= temp;
  #L45c94c.  if v0 == v2 then goto L45c994;
  #L45c950.  if v0 != v1 then goto L45c98a;
  #L45c954.  call temp:= `readFloat`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.readFloat:()F` @kind virtual;
  #L45c95a.  v0:= temp;
  #L45c95c.  call `addFloat`(v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.addFloat:(F)V` @kind virtual;
  #L45c962.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45c968.  v0:= temp;
  #L45c96a.  if v0 == 0 then goto L45c970;
  #L45c96e.  return @kind void;
  #L45c970.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c974.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c97a.  v1:= temp;
  #L45c97c.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c980.  if v1 == v2 then goto L45c954;
  #L45c984.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45c988.  return @kind void;
  #L45c98a.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45c990.  v4:= temp @kind object;
  #L45c992.  throw v4;
  #L45c994.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c99a.  v0:= temp;
  #L45c99c.  call `j0`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.j0:(I)V` @kind direct;
  #L45c9a2.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c9a6.  v1:= v1 + v0 @kind int;
  #L45c9a8.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c9ac.  if v0 >= v1 then goto L45ca60;
  #L45c9b0.  call temp:= `T`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.T:()I` @kind direct;
  #L45c9b6.  v0:= temp;
  #L45c9b8.  call temp:= `intBitsToFloat`(v0) @signature `Ljava/lang/Float;.intBitsToFloat:(I)F` @kind static;
  #L45c9be.  v0:= temp;
  #L45c9c0.  call `addFloat`(v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.addFloat:(F)V` @kind virtual;
  #L45c9c6.  goto L45c9a8;
  #L45c9c8.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c9cc.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45c9d2.  v0:= temp;
  #L45c9d4.  if v0 == v2 then goto L45ca24;
  #L45c9d8.  if v0 != v1 then goto L45ca1a;
  #L45c9dc.  call temp:= `readFloat`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.readFloat:()F` @kind virtual;
  #L45c9e2.  v0:= temp;
  #L45c9e4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L45c9ea.  v0:= temp @kind object;
  #L45c9ec.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c9f2.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45c9f8.  v0:= temp;
  #L45c9fa.  if v0 == 0 then goto L45ca00;
  #L45c9fe.  return @kind void;
  #L45ca00.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45ca04.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45ca0a.  v1:= temp;
  #L45ca0c.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45ca10.  if v1 == v2 then goto L45c9dc;
  #L45ca14.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45ca18.  return @kind void;
  #L45ca1a.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45ca20.  v4:= temp @kind object;
  #L45ca22.  throw v4;
  #L45ca24.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45ca2a.  v0:= temp;
  #L45ca2c.  call `j0`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.j0:(I)V` @kind direct;
  #L45ca32.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45ca36.  v1:= v1 + v0 @kind int;
  #L45ca38.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45ca3c.  if v0 >= v1 then goto L45ca60;
  #L45ca40.  call temp:= `T`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.T:()I` @kind direct;
  #L45ca46.  v0:= temp;
  #L45ca48.  call temp:= `intBitsToFloat`(v0) @signature `Ljava/lang/Float;.intBitsToFloat:(I)F` @kind static;
  #L45ca4e.  v0:= temp;
  #L45ca50.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L45ca56.  v0:= temp @kind object;
  #L45ca58.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45ca5e.  goto L45ca38;
  #L45ca60.  return @kind void;
}
procedure `boolean` `G`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.G:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45b688.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45b68e.  v0:= temp;
  #L45b690.  if v0 != 0 then goto L45b706;
  #L45b694.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45b698.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.f` @type ^`int`;
  #L45b69c.  if v0 != v1 then goto L45b6a2;
  #L45b6a0.  goto L45b706;
  #L45b6a2.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45b6a8.  v0:= temp;
  #L45b6aa.  v1:= 1I;
  #L45b6ac.  if v0 == 0 then goto L45b6fe;
  #L45b6b0.  if v0 == v1 then goto L45b6f2;
  #L45b6b4.  v2:= 2I;
  #L45b6b6.  if v0 == v2 then goto L45b6e2;
  #L45b6ba.  v2:= 3I;
  #L45b6bc.  if v0 == v2 then goto L45b6da;
  #L45b6c0.  v2:= 5I;
  #L45b6c2.  if v0 != v2 then goto L45b6d0;
  #L45b6c6.  v0:= 4I;
  #L45b6c8.  call `f0`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.f0:(I)V` @kind direct;
  #L45b6ce.  return v1;
  #L45b6d0.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45b6d6.  v0:= temp @kind object;
  #L45b6d8.  throw v0;
  #L45b6da.  call `g0`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.g0:()V` @kind direct;
  #L45b6e0.  return v1;
  #L45b6e2.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45b6e8.  v0:= temp;
  #L45b6ea.  call `f0`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.f0:(I)V` @kind direct;
  #L45b6f0.  return v1;
  #L45b6f2.  v0:= 8I;
  #L45b6f6.  call `f0`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.f0:(I)V` @kind direct;
  #L45b6fc.  return v1;
  #L45b6fe.  call `h0`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.h0:()V` @kind direct;
  #L45b704.  return v1;
  #L45b706.  v0:= 0I;
  #L45b708.  return v0;
}
procedure `int` `H`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.H:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b960.  v0:= 5I;
  #L45b962.  call `e0`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45b968.  call temp:= `S`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.S:()I` @kind direct;
  #L45b96e.  v0:= temp;
  #L45b970.  return v0;
}
procedure `void` `I`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.I:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45c3f8.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c3fc.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45c402.  v0:= temp;
  #L45c404.  v1:= 2I;
  #L45c406.  if v0 != v1 then goto L45c440;
  #L45c40a.  call temp:= `p`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.p:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L45c410.  v0:= temp @kind object;
  #L45c412.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c418.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45c41e.  v0:= temp;
  #L45c420.  if v0 == 0 then goto L45c426;
  #L45c424.  return @kind void;
  #L45c426.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c42a.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c430.  v1:= temp;
  #L45c432.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c436.  if v1 == v2 then goto L45c40a;
  #L45c43a.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45c43e.  return @kind void;
  #L45c440.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45c446.  v4:= temp @kind object;
  #L45c448.  throw v4;
}
procedure `void` `J`(`com.google.crypto.tink.shaded.protobuf.d$b` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.J:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45c45c.  v0:= instanceof @variable v5 @type ^`com.google.crypto.tink.shaded.protobuf.h` @kind boolean;
  #L45c460.  v1:= 2I;
  #L45c462.  v2:= 1I;
  #L45c464.  if v0 == 0 then goto L45c4f6;
  #L45c468.  v0:= v5 @kind object;
  #L45c46a.  v0:= (`com.google.crypto.tink.shaded.protobuf.h`) v0 @kind object;
  #L45c46e.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c472.  call temp:= `getTagWireType`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45c478.  v5:= temp;
  #L45c47a.  if v5 == v2 then goto L45c4c0;
  #L45c47e.  if v5 != v1 then goto L45c4b6;
  #L45c482.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c488.  v5:= temp;
  #L45c48a.  call `k0`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.k0:(I)V` @kind direct;
  #L45c490.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c494.  v1:= v1 + v5 @kind int;
  #L45c496.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c49a.  if v5 >= v1 then goto L45c546;
  #L45c49e.  call temp:= `V`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.V:()J` @kind direct;
  #L45c4a4.  v2:= temp @kind wide;
  #L45c4a6.  call temp:= `longBitsToDouble`(v2) @signature `Ljava/lang/Double;.longBitsToDouble:(J)D` @kind static;
  #L45c4ac.  v2:= temp @kind wide;
  #L45c4ae.  call `addDouble`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/h;.addDouble:(D)V` @kind virtual;
  #L45c4b4.  goto L45c496;
  #L45c4b6.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45c4bc.  v5:= temp @kind object;
  #L45c4be.  throw v5;
  #L45c4c0.  call temp:= `readDouble`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.readDouble:()D` @kind virtual;
  #L45c4c6.  v1:= temp @kind wide;
  #L45c4c8.  call `addDouble`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/h;.addDouble:(D)V` @kind virtual;
  #L45c4ce.  call temp:= `O`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45c4d4.  v5:= temp;
  #L45c4d6.  if v5 == 0 then goto L45c4dc;
  #L45c4da.  return @kind void;
  #L45c4dc.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c4e0.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c4e6.  v1:= temp;
  #L45c4e8.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c4ec.  if v1 == v2 then goto L45c4c0;
  #L45c4f0.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v5;
  #L45c4f4.  return @kind void;
  #L45c4f6.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c4fa.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45c500.  v0:= temp;
  #L45c502.  if v0 == v2 then goto L45c552;
  #L45c506.  if v0 != v1 then goto L45c548;
  #L45c50a.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c510.  v0:= temp;
  #L45c512.  call `k0`(v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.k0:(I)V` @kind direct;
  #L45c518.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c51c.  v1:= v1 + v0 @kind int;
  #L45c51e.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c522.  if v0 >= v1 then goto L45c546;
  #L45c526.  call temp:= `V`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.V:()J` @kind direct;
  #L45c52c.  v2:= temp @kind wide;
  #L45c52e.  call temp:= `longBitsToDouble`(v2) @signature `Ljava/lang/Double;.longBitsToDouble:(J)D` @kind static;
  #L45c534.  v2:= temp @kind wide;
  #L45c536.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L45c53c.  v0:= temp @kind object;
  #L45c53e.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c544.  goto L45c51e;
  #L45c546.  return @kind void;
  #L45c548.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45c54e.  v5:= temp @kind object;
  #L45c550.  throw v5;
  #L45c552.  call temp:= `readDouble`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.readDouble:()D` @kind virtual;
  #L45c558.  v0:= temp @kind wide;
  #L45c55a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L45c560.  v0:= temp @kind object;
  #L45c562.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c568.  call temp:= `O`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45c56e.  v0:= temp;
  #L45c570.  if v0 == 0 then goto L45c576;
  #L45c574.  return @kind void;
  #L45c576.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c57a.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c580.  v1:= temp;
  #L45c582.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c586.  if v1 == v2 then goto L45c552;
  #L45c58a.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45c58e.  return @kind void;
}
procedure `void` `K`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this, `java.util.List` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.m0` v5 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.K:(Ljava/util/List;Lcom/google/crypto/tink/shaded/protobuf/m0;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45ca74.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45ca78.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45ca7e.  v0:= temp;
  #L45ca80.  v1:= 3I;
  #L45ca82.  if v0 != v1 then goto L45cabc;
  #L45ca86.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45ca8a.  call temp:= `R`(v3, v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.R:(Lcom/google/crypto/tink/shaded/protobuf/m0;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind direct;
  #L45ca90.  v1:= temp @kind object;
  #L45ca92.  call temp:= `add`(v4, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45ca98.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45ca9e.  v1:= temp;
  #L45caa0.  if v1 == 0 then goto L45caa6;
  #L45caa4.  return @kind void;
  #L45caa6.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45caaa.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cab0.  v2:= temp;
  #L45cab2.  if v2 == v0 then goto L45ca8a;
  #L45cab6.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v1;
  #L45caba.  return @kind void;
  #L45cabc.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45cac2.  v4:= temp @kind object;
  #L45cac4.  throw v4;
}
procedure `long` `L`(`com.google.crypto.tink.shaded.protobuf.d$b` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.L:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45bef0.  v0:= 0I;
  #L45bef2.  call `e0`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45bef8.  call temp:= `a0`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.a0:()J` @kind virtual;
  #L45befe.  v0:= temp @kind wide;
  #L45bf00.  return v0 @kind wide;
}
procedure `java.lang.String` `M`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.M:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45beb0.  v0:= 1I;
  #L45beb2.  call temp:= `X`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.X:(Z)Ljava/lang/String;` @kind virtual;
  #L45beb8.  v0:= temp @kind object;
  #L45beba.  return v0 @kind object;
}
procedure `java.lang.String` `X`(`com.google.crypto.tink.shaded.protobuf.d$b` v4 @kind this, `boolean` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.X:(Z)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45be34.  v0:= 2I;
  #L45be36.  call `e0`(v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45be3c.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45be42.  v0:= temp;
  #L45be44.  if v0 != 0 then goto L45be4e;
  #L45be48.  v5:= "" @kind object;
  #L45be4c.  return v5 @kind object;
  #L45be4e.  call `c0`(v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.c0:(I)V` @kind direct;
  #L45be54.  if v5 == 0 then goto L45be7c;
  #L45be58.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.b` @type ^`byte`[] @kind object;
  #L45be5c.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45be60.  v2:= v1 + v0 @kind int;
  #L45be64.  call temp:= `u`(v5, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.u:([BII)Z` @kind static;
  #L45be6a.  v5:= temp;
  #L45be6c.  if v5 == 0 then goto L45be72;
  #L45be70.  goto L45be7c;
  #L45be72.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45be78.  v5:= temp @kind object;
  #L45be7a.  throw v5;
  #L45be7c.  v5:= new `java.lang.String`;
  #L45be80.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.b` @type ^`byte`[] @kind object;
  #L45be84.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45be88.  v3:= `@@com.google.crypto.tink.shaded.protobuf.Internal.a` @type ^`java.nio.charset.Charset` @kind object;
  #L45be8c.  call `<init>`(v5, v1, v2, v0, v3) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L45be92.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45be96.  v1:= v1 + v0 @kind int;
  #L45be98.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v1;
  #L45be9c.  return v5 @kind object;
}
procedure `void` `Y`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this, `java.util.List` v4 @kind object, `boolean` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Y:(Ljava/util/List;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45d388.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d38c.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45d392.  v0:= temp;
  #L45d394.  v1:= 2I;
  #L45d396.  if v0 != v1 then goto L45d418;
  #L45d39a.  v0:= instanceof @variable v4 @type ^`com.google.crypto.tink.shaded.protobuf.LazyStringList` @kind boolean;
  #L45d39e.  if v0 == 0 then goto L45d3e2;
  #L45d3a2.  if v5 != 0 then goto L45d3e2;
  #L45d3a6.  v0:= v4 @kind object;
  #L45d3a8.  v0:= (`com.google.crypto.tink.shaded.protobuf.LazyStringList`) v0 @kind object;
  #L45d3ac.  call temp:= `p`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.p:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L45d3b2.  v4:= temp @kind object;
  #L45d3b4.  call `add`(v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/LazyStringList;.add:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @kind interface;
  #L45d3ba.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45d3c0.  v4:= temp;
  #L45d3c2.  if v4 == 0 then goto L45d3c8;
  #L45d3c6.  return @kind void;
  #L45d3c8.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d3cc.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d3d2.  v5:= temp;
  #L45d3d4.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d3d8.  if v5 == v1 then goto L45d3ac;
  #L45d3dc.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v4;
  #L45d3e0.  return @kind void;
  #L45d3e2.  call temp:= `X`(v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.X:(Z)Ljava/lang/String;` @kind virtual;
  #L45d3e8.  v0:= temp @kind object;
  #L45d3ea.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d3f0.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45d3f6.  v0:= temp;
  #L45d3f8.  if v0 == 0 then goto L45d3fe;
  #L45d3fc.  return @kind void;
  #L45d3fe.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d402.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d408.  v1:= temp;
  #L45d40a.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d40e.  if v1 == v2 then goto L45d3e2;
  #L45d412.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45d416.  return @kind void;
  #L45d418.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45d41e.  v4:= temp @kind object;
  #L45d420.  throw v4;
}
procedure `long` `a`(`com.google.crypto.tink.shaded.protobuf.d$b` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45becc.  v0:= 1I;
  #L45bece.  call `e0`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45bed4.  call temp:= `U`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.U:()J` @kind direct;
  #L45beda.  v0:= temp @kind wide;
  #L45bedc.  return v0 @kind wide;
}
procedure `long` `a0`(`com.google.crypto.tink.shaded.protobuf.d$b` v11 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.a0:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L45c068.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c06c.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int`;
  #L45c070.  if v1 == v0 then goto L45c1ec;
  #L45c074.  v2:= v11.`com.google.crypto.tink.shaded.protobuf.d$b.b` @type ^`byte`[] @kind object;
  #L45c078.  v3:= v0 + 1;
  #L45c07c.  v0:= v2[v0] @kind byte;
  #L45c080.  if v0 < 0 then goto L45c08c;
  #L45c084.  v11.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v3;
  #L45c088.  v0:= (`long`) v0 @kind i2l;
  #L45c08a.  return v0 @kind wide;
  #L45c08c.  v1:= v1 - v3 @kind int;
  #L45c08e.  v4:= 9I;
  #L45c092.  if v1 >= v4 then goto L45c0a0;
  #L45c096.  call temp:= `b0`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.b0:()J` @kind direct;
  #L45c09c.  v0:= temp @kind wide;
  #L45c09e.  return v0 @kind wide;
  #L45c0a0.  v1:= v3 + 1;
  #L45c0a4.  v3:= v2[v3] @kind byte;
  #L45c0a8.  v3:= v3 ^< 7;
  #L45c0ac.  v0:= v0 ^~ v3 @kind int;
  #L45c0ae.  if v0 >= 0 then goto L45c0bc;
  #L45c0b2.  v0:= v0 ^~ -128;
  #L45c0b6.  v2:= (`long`) v0 @kind i2l;
  #L45c0b8.  goto L45c1e6;
  #L45c0bc.  v3:= v1 + 1;
  #L45c0c0.  v1:= v2[v1] @kind byte;
  #L45c0c4.  v1:= v1 ^< 14;
  #L45c0c8.  v0:= v0 ^~ v1 @kind int;
  #L45c0ca.  if v0 < 0 then goto L45c0de;
  #L45c0ce.  v0:= v0 ^~ 16256;
  #L45c0d2.  v0:= (`long`) v0 @kind i2l;
  #L45c0d4.  v9:= v0 @kind wide;
  #L45c0d6.  v1:= v3;
  #L45c0d8.  v2:= v9 @kind wide;
  #L45c0da.  goto L45c1e6;
  #L45c0de.  v1:= v3 + 1;
  #L45c0e2.  v3:= v2[v3] @kind byte;
  #L45c0e6.  v3:= v3 ^< 21;
  #L45c0ea.  v0:= v0 ^~ v3 @kind int;
  #L45c0ec.  if v0 >= 0 then goto L45c0fa;
  #L45c0f0.  v2:= -2080896I;
  #L45c0f6.  v0:= v0 ^~ v2 @kind int;
  #L45c0f8.  goto L45c0b6;
  #L45c0fa.  v3:= (`long`) v0 @kind i2l;
  #L45c0fc.  v0:= v1 + 1;
  #L45c100.  v1:= v2[v1] @kind byte;
  #L45c104.  v5:= (`long`) v1 @kind i2l;
  #L45c106.  v1:= 28I;
  #L45c10a.  v5:= v5 ^< v1 @kind long;
  #L45c10c.  v3:= v3 ^~ v5 @kind long;
  #L45c10e.  v5:= 0L;
  #L45c112.  v1:= lcmp(v3, v5);
  #L45c116.  if v1 < 0 then goto L45c128;
  #L45c11a.  v1:= 266354560L;
  #L45c120.  v2:= v3 ^~ v1 @kind long;
  #L45c124.  v1:= v0;
  #L45c126.  goto L45c1e6;
  #L45c128.  v1:= v0 + 1;
  #L45c12c.  v0:= v2[v0] @kind byte;
  #L45c130.  v7:= (`long`) v0 @kind i2l;
  #L45c132.  v0:= 35I;
  #L45c136.  v7:= v7 ^< v0 @kind long;
  #L45c138.  v3:= v3 ^~ v7 @kind long;
  #L45c13a.  v0:= lcmp(v3, v5);
  #L45c13e.  if v0 >= 0 then goto L45c152;
  #L45c142.  v5:= -34093383808L;
  #L45c14c.  v2:= v3 ^~ v5 @kind long;
  #L45c150.  goto L45c1e6;
  #L45c152.  v0:= v1 + 1;
  #L45c156.  v1:= v2[v1] @kind byte;
  #L45c15a.  v7:= (`long`) v1 @kind i2l;
  #L45c15c.  v1:= 42I;
  #L45c160.  v7:= v7 ^< v1 @kind long;
  #L45c162.  v3:= v3 ^~ v7 @kind long;
  #L45c164.  v1:= lcmp(v3, v5);
  #L45c168.  if v1 < 0 then goto L45c178;
  #L45c16c.  v1:= 4363953127296L;
  #L45c176.  goto L45c120;
  #L45c178.  v1:= v0 + 1;
  #L45c17c.  v0:= v2[v0] @kind byte;
  #L45c180.  v7:= (`long`) v0 @kind i2l;
  #L45c182.  v0:= 49I;
  #L45c186.  v7:= v7 ^< v0 @kind long;
  #L45c188.  v3:= v3 ^~ v7 @kind long;
  #L45c18a.  v0:= lcmp(v3, v5);
  #L45c18e.  if v0 >= 0 then goto L45c19e;
  #L45c192.  v5:= -558586000294016L;
  #L45c19c.  goto L45c14c;
  #L45c19e.  v0:= v1 + 1;
  #L45c1a2.  v1:= v2[v1] @kind byte;
  #L45c1a6.  v7:= (`long`) v1 @kind i2l;
  #L45c1a8.  v1:= 56I;
  #L45c1ac.  v7:= v7 ^< v1 @kind long;
  #L45c1ae.  v3:= v3 ^~ v7 @kind long;
  #L45c1b0.  v7:= 71499008037633920L;
  #L45c1ba.  v3:= v3 ^~ v7 @kind long;
  #L45c1bc.  v1:= lcmp(v3, v5);
  #L45c1c0.  if v1 >= 0 then goto L45c1e2;
  #L45c1c4.  v1:= v0 + 1;
  #L45c1c8.  v0:= v2[v0] @kind byte;
  #L45c1cc.  v7:= (`long`) v0 @kind i2l;
  #L45c1ce.  v0:= lcmp(v7, v5);
  #L45c1d2.  if v0 < 0 then goto L45c1d8;
  #L45c1d6.  goto L45c1e4;
  #L45c1d8.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.e:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45c1de.  v0:= temp @kind object;
  #L45c1e0.  throw v0;
  #L45c1e2.  v1:= v0;
  #L45c1e4.  v2:= v3 @kind wide;
  #L45c1e6.  v11.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v1;
  #L45c1ea.  return v2 @kind wide;
  #L45c1ec.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L45c1f2.  v0:= temp @kind object;
  #L45c1f4.  throw v0;
}
procedure `void` `b`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.b:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45ce94.  v0:= instanceof @variable v4 @type ^`com.google.crypto.tink.shaded.protobuf.o` @kind boolean;
  #L45ce98.  v1:= 5I;
  #L45ce9a.  v2:= 2I;
  #L45ce9c.  if v0 == 0 then goto L45cf24;
  #L45cea0.  v4:= (`com.google.crypto.tink.shaded.protobuf.o`) v4 @kind object;
  #L45cea4.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45cea8.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45ceae.  v0:= temp;
  #L45ceb0.  if v0 == v2 then goto L45cef8;
  #L45ceb4.  if v0 != v1 then goto L45ceee;
  #L45ceb8.  call temp:= `H`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.H:()I` @kind virtual;
  #L45cebe.  v0:= temp;
  #L45cec0.  call `addInt`(v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @kind virtual;
  #L45cec6.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45cecc.  v0:= temp;
  #L45cece.  if v0 == 0 then goto L45ced4;
  #L45ced2.  return @kind void;
  #L45ced4.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45ced8.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cede.  v1:= temp;
  #L45cee0.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45cee4.  if v1 == v2 then goto L45ceb8;
  #L45cee8.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45ceec.  return @kind void;
  #L45ceee.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45cef4.  v4:= temp @kind object;
  #L45cef6.  throw v4;
  #L45cef8.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cefe.  v0:= temp;
  #L45cf00.  call `j0`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.j0:(I)V` @kind direct;
  #L45cf06.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cf0a.  v1:= v1 + v0 @kind int;
  #L45cf0c.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cf10.  if v0 >= v1 then goto L45cfb4;
  #L45cf14.  call temp:= `T`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.T:()I` @kind direct;
  #L45cf1a.  v0:= temp;
  #L45cf1c.  call `addInt`(v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @kind virtual;
  #L45cf22.  goto L45cf0c;
  #L45cf24.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45cf28.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45cf2e.  v0:= temp;
  #L45cf30.  if v0 == v2 then goto L45cf80;
  #L45cf34.  if v0 != v1 then goto L45cf76;
  #L45cf38.  call temp:= `H`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.H:()I` @kind virtual;
  #L45cf3e.  v0:= temp;
  #L45cf40.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45cf46.  v0:= temp @kind object;
  #L45cf48.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45cf4e.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45cf54.  v0:= temp;
  #L45cf56.  if v0 == 0 then goto L45cf5c;
  #L45cf5a.  return @kind void;
  #L45cf5c.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cf60.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cf66.  v1:= temp;
  #L45cf68.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45cf6c.  if v1 == v2 then goto L45cf38;
  #L45cf70.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45cf74.  return @kind void;
  #L45cf76.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45cf7c.  v4:= temp @kind object;
  #L45cf7e.  throw v4;
  #L45cf80.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cf86.  v0:= temp;
  #L45cf88.  call `j0`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.j0:(I)V` @kind direct;
  #L45cf8e.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cf92.  v1:= v1 + v0 @kind int;
  #L45cf94.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cf98.  if v0 >= v1 then goto L45cfb4;
  #L45cf9c.  call temp:= `T`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.T:()I` @kind direct;
  #L45cfa2.  v0:= temp;
  #L45cfa4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45cfaa.  v0:= temp @kind object;
  #L45cfac.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45cfb2.  goto L45cf94;
  #L45cfb4.  return @kind void;
}
procedure `void` `c`(`com.google.crypto.tink.shaded.protobuf.d$b` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.c:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45d234.  v0:= instanceof @variable v5 @type ^`com.google.crypto.tink.shaded.protobuf.r` @kind boolean;
  #L45d238.  v1:= 2I;
  #L45d23a.  if v0 == 0 then goto L45d2c6;
  #L45d23e.  v0:= v5 @kind object;
  #L45d240.  v0:= (`com.google.crypto.tink.shaded.protobuf.r`) v0 @kind object;
  #L45d244.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d248.  call temp:= `getTagWireType`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45d24e.  v5:= temp;
  #L45d250.  if v5 == 0 then goto L45d290;
  #L45d254.  if v5 != v1 then goto L45d286;
  #L45d258.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d25e.  v5:= temp;
  #L45d260.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d264.  v1:= v1 + v5 @kind int;
  #L45d266.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d26a.  if v5 >= v1 then goto L45d310;
  #L45d26e.  call temp:= `a0`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.a0:()J` @kind virtual;
  #L45d274.  v2:= temp @kind wide;
  #L45d276.  call temp:= `decodeZigZag64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag64:(J)J` @kind static;
  #L45d27c.  v2:= temp @kind wide;
  #L45d27e.  call `addLong`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addLong:(J)V` @kind virtual;
  #L45d284.  goto L45d266;
  #L45d286.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45d28c.  v5:= temp @kind object;
  #L45d28e.  throw v5;
  #L45d290.  call temp:= `C`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.C:()J` @kind virtual;
  #L45d296.  v1:= temp @kind wide;
  #L45d298.  call `addLong`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addLong:(J)V` @kind virtual;
  #L45d29e.  call temp:= `O`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45d2a4.  v5:= temp;
  #L45d2a6.  if v5 == 0 then goto L45d2ac;
  #L45d2aa.  return @kind void;
  #L45d2ac.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d2b0.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d2b6.  v1:= temp;
  #L45d2b8.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d2bc.  if v1 == v2 then goto L45d290;
  #L45d2c0.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v5;
  #L45d2c4.  return @kind void;
  #L45d2c6.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d2ca.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45d2d0.  v0:= temp;
  #L45d2d2.  if v0 == 0 then goto L45d31c;
  #L45d2d6.  if v0 != v1 then goto L45d312;
  #L45d2da.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d2e0.  v0:= temp;
  #L45d2e2.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d2e6.  v1:= v1 + v0 @kind int;
  #L45d2e8.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d2ec.  if v0 >= v1 then goto L45d310;
  #L45d2f0.  call temp:= `a0`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.a0:()J` @kind virtual;
  #L45d2f6.  v2:= temp @kind wide;
  #L45d2f8.  call temp:= `decodeZigZag64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag64:(J)J` @kind static;
  #L45d2fe.  v2:= temp @kind wide;
  #L45d300.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45d306.  v0:= temp @kind object;
  #L45d308.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d30e.  goto L45d2e8;
  #L45d310.  return @kind void;
  #L45d312.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45d318.  v5:= temp @kind object;
  #L45d31a.  throw v5;
  #L45d31c.  call temp:= `C`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.C:()J` @kind virtual;
  #L45d322.  v0:= temp @kind wide;
  #L45d324.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45d32a.  v0:= temp @kind object;
  #L45d32c.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d332.  call temp:= `O`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45d338.  v0:= temp;
  #L45d33a.  if v0 == 0 then goto L45d340;
  #L45d33e.  return @kind void;
  #L45d340.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d344.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d34a.  v1:= temp;
  #L45d34c.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d350.  if v1 == v2 then goto L45d31c;
  #L45d354.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45d358.  return @kind void;
}
procedure `boolean` `d`(`com.google.crypto.tink.shaded.protobuf.d$b` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45b660.  v0:= 0I;
  #L45b662.  call `e0`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45b668.  call temp:= `Z`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45b66e.  v1:= temp;
  #L45b670.  if v1 == 0 then goto L45b676;
  #L45b674.  v0:= 1I;
  #L45b676.  return v0;
}
procedure `long` `e`(`com.google.crypto.tink.shaded.protobuf.d$b` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45bff4.  v0:= 1I;
  #L45bff6.  call `e0`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45bffc.  call temp:= `U`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.U:()J` @kind direct;
  #L45c002.  v0:= temp @kind wide;
  #L45c004.  return v0 @kind wide;
}
procedure `void` `f`(`com.google.crypto.tink.shaded.protobuf.d$b` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.f:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45d578.  v0:= instanceof @variable v5 @type ^`com.google.crypto.tink.shaded.protobuf.r` @kind boolean;
  #L45d57c.  v1:= 2I;
  #L45d57e.  if v0 == 0 then goto L45d60a;
  #L45d582.  v0:= v5 @kind object;
  #L45d584.  v0:= (`com.google.crypto.tink.shaded.protobuf.r`) v0 @kind object;
  #L45d588.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d58c.  call temp:= `getTagWireType`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45d592.  v5:= temp;
  #L45d594.  if v5 == 0 then goto L45d5d4;
  #L45d598.  if v5 != v1 then goto L45d5ca;
  #L45d59c.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d5a2.  v5:= temp;
  #L45d5a4.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d5a8.  v1:= v1 + v5 @kind int;
  #L45d5aa.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d5ae.  if v5 >= v1 then goto L45d5c2;
  #L45d5b2.  call temp:= `a0`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.a0:()J` @kind virtual;
  #L45d5b8.  v2:= temp @kind wide;
  #L45d5ba.  call `addLong`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addLong:(J)V` @kind virtual;
  #L45d5c0.  goto L45d5aa;
  #L45d5c2.  call `d0`(v4, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.d0:(I)V` @kind direct;
  #L45d5c8.  goto L45d652;
  #L45d5ca.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45d5d0.  v5:= temp @kind object;
  #L45d5d2.  throw v5;
  #L45d5d4.  call temp:= `u`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.u:()J` @kind virtual;
  #L45d5da.  v1:= temp @kind wide;
  #L45d5dc.  call `addLong`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addLong:(J)V` @kind virtual;
  #L45d5e2.  call temp:= `O`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45d5e8.  v5:= temp;
  #L45d5ea.  if v5 == 0 then goto L45d5f0;
  #L45d5ee.  return @kind void;
  #L45d5f0.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d5f4.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d5fa.  v1:= temp;
  #L45d5fc.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d600.  if v1 == v2 then goto L45d5d4;
  #L45d604.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v5;
  #L45d608.  return @kind void;
  #L45d60a.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d60e.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45d614.  v0:= temp;
  #L45d616.  if v0 == 0 then goto L45d65e;
  #L45d61a.  if v0 != v1 then goto L45d654;
  #L45d61e.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d624.  v0:= temp;
  #L45d626.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d62a.  v1:= v1 + v0 @kind int;
  #L45d62c.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d630.  if v0 >= v1 then goto L45d64c;
  #L45d634.  call temp:= `a0`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.a0:()J` @kind virtual;
  #L45d63a.  v2:= temp @kind wide;
  #L45d63c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45d642.  v0:= temp @kind object;
  #L45d644.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d64a.  goto L45d62c;
  #L45d64c.  call `d0`(v4, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.d0:(I)V` @kind direct;
  #L45d652.  return @kind void;
  #L45d654.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45d65a.  v5:= temp @kind object;
  #L45d65c.  throw v5;
  #L45d65e.  call temp:= `u`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.u:()J` @kind virtual;
  #L45d664.  v0:= temp @kind wide;
  #L45d666.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45d66c.  v0:= temp @kind object;
  #L45d66e.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d674.  call temp:= `O`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45d67a.  v0:= temp;
  #L45d67c.  if v0 == 0 then goto L45d682;
  #L45d680.  return @kind void;
  #L45d682.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d686.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d68c.  v1:= temp;
  #L45d68e.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d692.  if v1 == v2 then goto L45d65e;
  #L45d696.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45d69a.  return @kind void;
}
procedure `int` `g`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b9b0.  v0:= 0I;
  #L45b9b2.  call `e0`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45b9b8.  call temp:= `Z`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45b9be.  v0:= temp;
  #L45b9c0.  return v0;
}
procedure `int` `getTag`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.getTag:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b858.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45b85c.  return v0;
}
procedure `void` `h`(`com.google.crypto.tink.shaded.protobuf.d$b` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.h:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45cc0c.  v0:= instanceof @variable v5 @type ^`com.google.crypto.tink.shaded.protobuf.r` @kind boolean;
  #L45cc10.  v1:= 2I;
  #L45cc12.  if v0 == 0 then goto L45cc9e;
  #L45cc16.  v0:= v5 @kind object;
  #L45cc18.  v0:= (`com.google.crypto.tink.shaded.protobuf.r`) v0 @kind object;
  #L45cc1c.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45cc20.  call temp:= `getTagWireType`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45cc26.  v5:= temp;
  #L45cc28.  if v5 == 0 then goto L45cc68;
  #L45cc2c.  if v5 != v1 then goto L45cc5e;
  #L45cc30.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cc36.  v5:= temp;
  #L45cc38.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cc3c.  v1:= v1 + v5 @kind int;
  #L45cc3e.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cc42.  if v5 >= v1 then goto L45cc56;
  #L45cc46.  call temp:= `a0`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.a0:()J` @kind virtual;
  #L45cc4c.  v2:= temp @kind wide;
  #L45cc4e.  call `addLong`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addLong:(J)V` @kind virtual;
  #L45cc54.  goto L45cc3e;
  #L45cc56.  call `d0`(v4, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.d0:(I)V` @kind direct;
  #L45cc5c.  goto L45cce6;
  #L45cc5e.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45cc64.  v5:= temp @kind object;
  #L45cc66.  throw v5;
  #L45cc68.  call temp:= `L`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.L:()J` @kind virtual;
  #L45cc6e.  v1:= temp @kind wide;
  #L45cc70.  call `addLong`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addLong:(J)V` @kind virtual;
  #L45cc76.  call temp:= `O`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45cc7c.  v5:= temp;
  #L45cc7e.  if v5 == 0 then goto L45cc84;
  #L45cc82.  return @kind void;
  #L45cc84.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cc88.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cc8e.  v1:= temp;
  #L45cc90.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45cc94.  if v1 == v2 then goto L45cc68;
  #L45cc98.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v5;
  #L45cc9c.  return @kind void;
  #L45cc9e.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45cca2.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45cca8.  v0:= temp;
  #L45ccaa.  if v0 == 0 then goto L45ccf2;
  #L45ccae.  if v0 != v1 then goto L45cce8;
  #L45ccb2.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45ccb8.  v0:= temp;
  #L45ccba.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45ccbe.  v1:= v1 + v0 @kind int;
  #L45ccc0.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45ccc4.  if v0 >= v1 then goto L45cce0;
  #L45ccc8.  call temp:= `a0`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.a0:()J` @kind virtual;
  #L45ccce.  v2:= temp @kind wide;
  #L45ccd0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45ccd6.  v0:= temp @kind object;
  #L45ccd8.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45ccde.  goto L45ccc0;
  #L45cce0.  call `d0`(v4, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.d0:(I)V` @kind direct;
  #L45cce6.  return @kind void;
  #L45cce8.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45ccee.  v5:= temp @kind object;
  #L45ccf0.  throw v5;
  #L45ccf2.  call temp:= `L`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.L:()J` @kind virtual;
  #L45ccf8.  v0:= temp @kind wide;
  #L45ccfa.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45cd00.  v0:= temp @kind object;
  #L45cd02.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45cd08.  call temp:= `O`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45cd0e.  v0:= temp;
  #L45cd10.  if v0 == 0 then goto L45cd16;
  #L45cd14.  return @kind void;
  #L45cd16.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cd1a.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cd20.  v1:= temp;
  #L45cd22.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45cd26.  if v1 == v2 then goto L45ccf2;
  #L45cd2a.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45cd2e.  return @kind void;
}
procedure `void` `i`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.i:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45c5a0.  v0:= instanceof @variable v4 @type ^`com.google.crypto.tink.shaded.protobuf.o` @kind boolean;
  #L45c5a4.  v1:= 2I;
  #L45c5a6.  if v0 == 0 then goto L45c62a;
  #L45c5aa.  v0:= v4 @kind object;
  #L45c5ac.  v0:= (`com.google.crypto.tink.shaded.protobuf.o`) v0 @kind object;
  #L45c5b0.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c5b4.  call temp:= `getTagWireType`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45c5ba.  v4:= temp;
  #L45c5bc.  if v4 == 0 then goto L45c5f4;
  #L45c5c0.  if v4 != v1 then goto L45c5ea;
  #L45c5c4.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c5ca.  v4:= temp;
  #L45c5cc.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c5d0.  v1:= v1 + v4 @kind int;
  #L45c5d2.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c5d6.  if v4 >= v1 then goto L45c66c;
  #L45c5da.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c5e0.  v4:= temp;
  #L45c5e2.  call `addInt`(v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @kind virtual;
  #L45c5e8.  goto L45c5d2;
  #L45c5ea.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45c5f0.  v4:= temp @kind object;
  #L45c5f2.  throw v4;
  #L45c5f4.  call temp:= `k`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.k:()I` @kind virtual;
  #L45c5fa.  v4:= temp;
  #L45c5fc.  call `addInt`(v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @kind virtual;
  #L45c602.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45c608.  v4:= temp;
  #L45c60a.  if v4 == 0 then goto L45c610;
  #L45c60e.  return @kind void;
  #L45c610.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c614.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c61a.  v1:= temp;
  #L45c61c.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c620.  if v1 == v2 then goto L45c5f4;
  #L45c624.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v4;
  #L45c628.  return @kind void;
  #L45c62a.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c62e.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45c634.  v0:= temp;
  #L45c636.  if v0 == 0 then goto L45c678;
  #L45c63a.  if v0 != v1 then goto L45c66e;
  #L45c63e.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c644.  v0:= temp;
  #L45c646.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c64a.  v1:= v1 + v0 @kind int;
  #L45c64c.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c650.  if v0 >= v1 then goto L45c66c;
  #L45c654.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c65a.  v0:= temp;
  #L45c65c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45c662.  v0:= temp @kind object;
  #L45c664.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c66a.  goto L45c64c;
  #L45c66c.  return @kind void;
  #L45c66e.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45c674.  v4:= temp @kind object;
  #L45c676.  throw v4;
  #L45c678.  call temp:= `k`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.k:()I` @kind virtual;
  #L45c67e.  v0:= temp;
  #L45c680.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45c686.  v0:= temp @kind object;
  #L45c688.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c68e.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45c694.  v0:= temp;
  #L45c696.  if v0 == 0 then goto L45c69c;
  #L45c69a.  return @kind void;
  #L45c69c.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c6a0.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c6a6.  v1:= temp;
  #L45c6a8.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c6ac.  if v1 == v2 then goto L45c678;
  #L45c6b0.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45c6b4.  return @kind void;
}
procedure `java.lang.Object` `j`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.m0` v2 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.j:(Lcom/google/crypto/tink/shaded/protobuf/m0;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45bd28.  v0:= 3I;
  #L45bd2a.  call `e0`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45bd30.  call temp:= `R`(v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.R:(Lcom/google/crypto/tink/shaded/protobuf/m0;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind direct;
  #L45bd36.  v2:= temp @kind object;
  #L45bd38.  return v2 @kind object;
}
procedure `int` `k`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.k:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b870.  v0:= 0I;
  #L45b872.  call `e0`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45b878.  call temp:= `Z`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45b87e.  v0:= temp;
  #L45b880.  return v0;
}
procedure `int` `l`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.l:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b984.  v0:= 0I;
  #L45b986.  call `e0`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45b98c.  call temp:= `Z`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45b992.  v0:= temp;
  #L45b994.  call temp:= `decodeZigZag32`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag32:(I)I` @kind static;
  #L45b99a.  v0:= temp;
  #L45b99c.  return v0;
}
procedure `java.lang.Object` `m`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this, `java.lang.Class` v2 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.m:(Ljava/lang/Class;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45bcf4.  v0:= 3I;
  #L45bcf6.  call `e0`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45bcfc.  call temp:= `a`() @signature `Lcom/google/crypto/tink/shaded/protobuf/h0;.a:()Lcom/google/crypto/tink/shaded/protobuf/h0;` @kind static;
  #L45bd02.  v0:= temp @kind object;
  #L45bd04.  call temp:= `d`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/h0;.d:(Ljava/lang/Class;)Lcom/google/crypto/tink/shaded/protobuf/m0;` @kind virtual;
  #L45bd0a.  v2:= temp @kind object;
  #L45bd0c.  call temp:= `R`(v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.R:(Lcom/google/crypto/tink/shaded/protobuf/m0;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind direct;
  #L45bd12.  v2:= temp @kind object;
  #L45bd14.  return v2 @kind object;
}
procedure `void` `n`(`com.google.crypto.tink.shaded.protobuf.d$b` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.n:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45c2ac.  v0:= instanceof @variable v5 @type ^`com.google.crypto.tink.shaded.protobuf.e` @kind boolean;
  #L45c2b0.  v1:= 1I;
  #L45c2b2.  v2:= 0I;
  #L45c2b4.  v3:= 2I;
  #L45c2b6.  if v0 == 0 then goto L45c34c;
  #L45c2ba.  v0:= v5 @kind object;
  #L45c2bc.  v0:= (`com.google.crypto.tink.shaded.protobuf.e`) v0 @kind object;
  #L45c2c0.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c2c4.  call temp:= `getTagWireType`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45c2ca.  v5:= temp;
  #L45c2cc.  if v5 == 0 then goto L45c316;
  #L45c2d0.  if v5 != v3 then goto L45c30c;
  #L45c2d4.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c2da.  v5:= temp;
  #L45c2dc.  v3:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c2e0.  v3:= v3 + v5 @kind int;
  #L45c2e2.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c2e6.  if v5 >= v3 then goto L45c304;
  #L45c2ea.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c2f0.  v5:= temp;
  #L45c2f2.  if v5 == 0 then goto L45c2fa;
  #L45c2f6.  v5:= 1I;
  #L45c2f8.  goto L45c2fc;
  #L45c2fa.  v5:= 0I;
  #L45c2fc.  call `addBoolean`(v0, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/e;.addBoolean:(Z)V` @kind virtual;
  #L45c302.  goto L45c2e2;
  #L45c304.  call `d0`(v4, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.d0:(I)V` @kind direct;
  #L45c30a.  goto L45c39e;
  #L45c30c.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45c312.  v5:= temp @kind object;
  #L45c314.  throw v5;
  #L45c316.  call temp:= `d`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.d:()Z` @kind virtual;
  #L45c31c.  v5:= temp;
  #L45c31e.  call `addBoolean`(v0, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/e;.addBoolean:(Z)V` @kind virtual;
  #L45c324.  call temp:= `O`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45c32a.  v5:= temp;
  #L45c32c.  if v5 == 0 then goto L45c332;
  #L45c330.  return @kind void;
  #L45c332.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c336.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c33c.  v1:= temp;
  #L45c33e.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c342.  if v1 == v2 then goto L45c316;
  #L45c346.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v5;
  #L45c34a.  return @kind void;
  #L45c34c.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c350.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45c356.  v0:= temp;
  #L45c358.  if v0 == 0 then goto L45c3aa;
  #L45c35c.  if v0 != v3 then goto L45c3a0;
  #L45c360.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c366.  v0:= temp;
  #L45c368.  v3:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c36c.  v3:= v3 + v0 @kind int;
  #L45c36e.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c372.  if v0 >= v3 then goto L45c398;
  #L45c376.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c37c.  v0:= temp;
  #L45c37e.  if v0 == 0 then goto L45c386;
  #L45c382.  v0:= 1I;
  #L45c384.  goto L45c388;
  #L45c386.  v0:= 0I;
  #L45c388.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L45c38e.  v0:= temp @kind object;
  #L45c390.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c396.  goto L45c36e;
  #L45c398.  call `d0`(v4, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.d0:(I)V` @kind direct;
  #L45c39e.  return @kind void;
  #L45c3a0.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45c3a6.  v5:= temp @kind object;
  #L45c3a8.  throw v5;
  #L45c3aa.  call temp:= `d`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.d:()Z` @kind virtual;
  #L45c3b0.  v0:= temp;
  #L45c3b2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L45c3b8.  v0:= temp @kind object;
  #L45c3ba.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c3c0.  call temp:= `O`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45c3c6.  v0:= temp;
  #L45c3c8.  if v0 == 0 then goto L45c3ce;
  #L45c3cc.  return @kind void;
  #L45c3ce.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c3d2.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c3d8.  v1:= temp;
  #L45c3da.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c3de.  if v1 == v2 then goto L45c3aa;
  #L45c3e2.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45c3e6.  return @kind void;
}
procedure `void` `o`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.o:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d434.  v0:= 1I;
  #L45d436.  call `Y`(v1, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Y:(Ljava/util/List;Z)V` @kind virtual;
  #L45d43c.  return @kind void;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `p`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.p:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45b754.  v0:= 2I;
  #L45b756.  call `e0`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45b75c.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45b762.  v0:= temp;
  #L45b764.  if v0 != 0 then goto L45b76e;
  #L45b768.  v0:= `@@com.google.crypto.tink.shaded.protobuf.ByteString.EMPTY` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L45b76c.  return v0 @kind object;
  #L45b76e.  call `c0`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.c0:(I)V` @kind direct;
  #L45b774.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.a` @type ^`boolean` @kind boolean;
  #L45b778.  if v1 == 0 then goto L45b78e;
  #L45b77c.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.b` @type ^`byte`[] @kind object;
  #L45b780.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45b784.  call temp:= `l`(v1, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.l:([BII)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L45b78a.  v1:= temp @kind object;
  #L45b78c.  goto L45b79e;
  #L45b78e.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.b` @type ^`byte`[] @kind object;
  #L45b792.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45b796.  call temp:= `copyFrom`(v1, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([BII)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L45b79c.  v1:= temp @kind object;
  #L45b79e.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45b7a2.  v2:= v2 + v0 @kind int;
  #L45b7a4.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v2;
  #L45b7a8.  return v1 @kind object;
}
procedure `int` `q`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.q:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b8b8.  v0:= 0I;
  #L45b8ba.  call `e0`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45b8c0.  call temp:= `Z`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45b8c6.  v0:= temp;
  #L45b8c8.  return v0;
}
procedure `void` `r`(`com.google.crypto.tink.shaded.protobuf.d$b` v7 @kind this, `java.util.Map` v8 @kind object, `com.google.crypto.tink.shaded.protobuf.MapEntryLite$b` v9 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v10 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.r:(Ljava/util/Map;Lcom/google/crypto/tink/shaded/protobuf/MapEntryLite$b;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L45cd40.  v0:= 2I;
  #L45cd42.  call `e0`(v7, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45cd48.  call temp:= `Z`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cd4e.  v1:= temp;
  #L45cd50.  call `c0`(v7, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.c0:(I)V` @kind direct;
  #L45cd56.  v2:= v7.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int`;
  #L45cd5a.  v3:= v7.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cd5e.  v3:= v3 + v1 @kind int;
  #L45cd60.  v7.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int` := v3;
  #L45cd64.  v1:= v9.`com.google.crypto.tink.shaded.protobuf.MapEntryLite$b.b` @type ^`java.lang.Object` @kind object;
  #L45cd68.  v3:= v9.`com.google.crypto.tink.shaded.protobuf.MapEntryLite$b.d` @type ^`java.lang.Object` @kind object;
  #L45cd6c.  call temp:= `E`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.E:()I` @kind virtual;
  #L45cd72.  v4:= temp;
  #L45cd74.  v5:= 2147483647I;
  #L45cd7a.  if v4 != v5 then goto L45cd8a;
  #L45cd7e.  call temp:= `put`(v8, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45cd84.  v7.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int` := v2;
  #L45cd88.  return @kind void;
  #L45cd8a.  v5:= 1I;
  #L45cd8c.  v6:= "Unable to parse map entry." @kind object;
  #L45cd90.  if v4 == v5 then goto L45cdcc;
  #L45cd94.  if v4 == v0 then goto L45cdb2;
  #L45cd98.  call temp:= `G`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.G:()Z` @kind virtual;
  #L45cd9e.  v4:= temp;
  #L45cda0.  if v4 == 0 then goto L45cda6;
  #L45cda4.  goto L45cd6c;
  #L45cda6.  v4:= new `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException`;
  #L45cdaa.  call `<init>`(v4, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cdb0.  throw v4;
  #L45cdb2.  v4:= v9.`com.google.crypto.tink.shaded.protobuf.MapEntryLite$b.c` @type ^`com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType` @kind object;
  #L45cdb6.  v5:= v9.`com.google.crypto.tink.shaded.protobuf.MapEntryLite$b.d` @type ^`java.lang.Object` @kind object;
  #L45cdba.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L45cdc0.  v5:= temp @kind object;
  #L45cdc2.  call temp:= `Q`(v7, v4, v5, v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Q:(Lcom/google/crypto/tink/shaded/protobuf/WireFormat$FieldType;Ljava/lang/Class;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind direct;
  #L45cdc8.  v3:= temp @kind object;
  #L45cdca.  goto L45cd6c;
  #L45cdcc.  v4:= v9.`com.google.crypto.tink.shaded.protobuf.MapEntryLite$b.a` @type ^`com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType` @kind object;
  #L45cdd0.  v5:= 0I;
  #L45cdd2.  call temp:= `Q`(v7, v4, v5, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Q:(Lcom/google/crypto/tink/shaded/protobuf/WireFormat$FieldType;Ljava/lang/Class;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind direct;
  #L45cdd8.  v1:= temp @kind object;
  #L45cdda.  goto L45cd6c;
  #L45cddc.  call temp:= `G`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.G:()Z` @kind virtual;
  #L45cde2.  v4:= temp;
  #L45cde4.  if v4 == 0 then goto L45cdea;
  #L45cde8.  goto L45cd6c;
  #L45cdea.  v8:= new `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException`;
  #L45cdee.  call `<init>`(v8, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cdf4.  throw v8;
  #L45cdf6.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45cdf8.  v7.`com.google.crypto.tink.shaded.protobuf.d$b.d` @type ^`int` := v2;
  #L45cdfc.  throw v8;
  catch `java.lang.Throwable` @[L45cd64..L45cd84] goto L45cdf6;
  catch `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException$InvalidWireTypeException` @[L45cd98..L45cdda] goto L45cddc;
  catch `java.lang.Throwable` @[L45cd98..L45cdda] goto L45cdf6;
  catch `java.lang.Throwable` @[L45cddc..L45cdf6] goto L45cdf6;
}
procedure `double` `readDouble`(`com.google.crypto.tink.shaded.protobuf.d$b` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.readDouble:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45b7bc.  v0:= 1I;
  #L45b7be.  call `e0`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45b7c4.  call temp:= `U`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.U:()J` @kind direct;
  #L45b7ca.  v0:= temp @kind wide;
  #L45b7cc.  call temp:= `longBitsToDouble`(v0) @signature `Ljava/lang/Double;.longBitsToDouble:(J)D` @kind static;
  #L45b7d2.  v0:= temp @kind wide;
  #L45b7d4.  return v0 @kind wide;
}
procedure `float` `readFloat`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.readFloat:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b7e8.  v0:= 5I;
  #L45b7ea.  call `e0`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45b7f0.  call temp:= `S`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.S:()I` @kind direct;
  #L45b7f6.  v0:= temp;
  #L45b7f8.  call temp:= `intBitsToFloat`(v0) @signature `Ljava/lang/Float;.intBitsToFloat:(I)F` @kind static;
  #L45b7fe.  v0:= temp;
  #L45b800.  return v0;
}
procedure `java.lang.String` `readString`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.readString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45be18.  v0:= 0I;
  #L45be1a.  call temp:= `X`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.X:(Z)Ljava/lang/String;` @kind virtual;
  #L45be20.  v0:= temp @kind object;
  #L45be22.  return v0 @kind object;
}
procedure `void` `readStringList`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.readStringList:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d36c.  v0:= 0I;
  #L45d36e.  call `Y`(v1, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Y:(Ljava/util/List;Z)V` @kind virtual;
  #L45d374.  return @kind void;
}
procedure `void` `s`(`com.google.crypto.tink.shaded.protobuf.d$b` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.s:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45c7fc.  v0:= instanceof @variable v5 @type ^`com.google.crypto.tink.shaded.protobuf.r` @kind boolean;
  #L45c800.  v1:= 2I;
  #L45c802.  v2:= 1I;
  #L45c804.  if v0 == 0 then goto L45c88e;
  #L45c808.  v0:= v5 @kind object;
  #L45c80a.  v0:= (`com.google.crypto.tink.shaded.protobuf.r`) v0 @kind object;
  #L45c80e.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c812.  call temp:= `getTagWireType`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45c818.  v5:= temp;
  #L45c81a.  if v5 == v2 then goto L45c858;
  #L45c81e.  if v5 != v1 then goto L45c84e;
  #L45c822.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c828.  v5:= temp;
  #L45c82a.  call `k0`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.k0:(I)V` @kind direct;
  #L45c830.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c834.  v1:= v1 + v5 @kind int;
  #L45c836.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c83a.  if v5 >= v1 then goto L45c8d6;
  #L45c83e.  call temp:= `V`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.V:()J` @kind direct;
  #L45c844.  v2:= temp @kind wide;
  #L45c846.  call `addLong`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addLong:(J)V` @kind virtual;
  #L45c84c.  goto L45c836;
  #L45c84e.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45c854.  v5:= temp @kind object;
  #L45c856.  throw v5;
  #L45c858.  call temp:= `a`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.a:()J` @kind virtual;
  #L45c85e.  v1:= temp @kind wide;
  #L45c860.  call `addLong`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addLong:(J)V` @kind virtual;
  #L45c866.  call temp:= `O`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45c86c.  v5:= temp;
  #L45c86e.  if v5 == 0 then goto L45c874;
  #L45c872.  return @kind void;
  #L45c874.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c878.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c87e.  v1:= temp;
  #L45c880.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c884.  if v1 == v2 then goto L45c858;
  #L45c888.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v5;
  #L45c88c.  return @kind void;
  #L45c88e.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c892.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45c898.  v0:= temp;
  #L45c89a.  if v0 == v2 then goto L45c8e2;
  #L45c89e.  if v0 != v1 then goto L45c8d8;
  #L45c8a2.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c8a8.  v0:= temp;
  #L45c8aa.  call `k0`(v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.k0:(I)V` @kind direct;
  #L45c8b0.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c8b4.  v1:= v1 + v0 @kind int;
  #L45c8b6.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c8ba.  if v0 >= v1 then goto L45c8d6;
  #L45c8be.  call temp:= `V`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.V:()J` @kind direct;
  #L45c8c4.  v2:= temp @kind wide;
  #L45c8c6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45c8cc.  v0:= temp @kind object;
  #L45c8ce.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c8d4.  goto L45c8b6;
  #L45c8d6.  return @kind void;
  #L45c8d8.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45c8de.  v5:= temp @kind object;
  #L45c8e0.  throw v5;
  #L45c8e2.  call temp:= `a`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.a:()J` @kind virtual;
  #L45c8e8.  v0:= temp @kind wide;
  #L45c8ea.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45c8f0.  v0:= temp @kind object;
  #L45c8f2.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45c8f8.  call temp:= `O`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45c8fe.  v0:= temp;
  #L45c900.  if v0 == 0 then goto L45c906;
  #L45c904.  return @kind void;
  #L45c906.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45c90a.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45c910.  v1:= temp;
  #L45c912.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45c916.  if v1 == v2 then goto L45c8e2;
  #L45c91a.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45c91e.  return @kind void;
}
procedure `void` `t`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.t:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45d0fc.  v0:= instanceof @variable v4 @type ^`com.google.crypto.tink.shaded.protobuf.o` @kind boolean;
  #L45d100.  v1:= 2I;
  #L45d102.  if v0 == 0 then goto L45d18e;
  #L45d106.  v0:= v4 @kind object;
  #L45d108.  v0:= (`com.google.crypto.tink.shaded.protobuf.o`) v0 @kind object;
  #L45d10c.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d110.  call temp:= `getTagWireType`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45d116.  v4:= temp;
  #L45d118.  if v4 == 0 then goto L45d158;
  #L45d11c.  if v4 != v1 then goto L45d14e;
  #L45d120.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d126.  v4:= temp;
  #L45d128.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d12c.  v1:= v1 + v4 @kind int;
  #L45d12e.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d132.  if v4 >= v1 then goto L45d1d8;
  #L45d136.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d13c.  v4:= temp;
  #L45d13e.  call temp:= `decodeZigZag32`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag32:(I)I` @kind static;
  #L45d144.  v4:= temp;
  #L45d146.  call `addInt`(v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @kind virtual;
  #L45d14c.  goto L45d12e;
  #L45d14e.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45d154.  v4:= temp @kind object;
  #L45d156.  throw v4;
  #L45d158.  call temp:= `l`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.l:()I` @kind virtual;
  #L45d15e.  v4:= temp;
  #L45d160.  call `addInt`(v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @kind virtual;
  #L45d166.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45d16c.  v4:= temp;
  #L45d16e.  if v4 == 0 then goto L45d174;
  #L45d172.  return @kind void;
  #L45d174.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d178.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d17e.  v1:= temp;
  #L45d180.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d184.  if v1 == v2 then goto L45d158;
  #L45d188.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v4;
  #L45d18c.  return @kind void;
  #L45d18e.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d192.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45d198.  v0:= temp;
  #L45d19a.  if v0 == 0 then goto L45d1e4;
  #L45d19e.  if v0 != v1 then goto L45d1da;
  #L45d1a2.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d1a8.  v0:= temp;
  #L45d1aa.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d1ae.  v1:= v1 + v0 @kind int;
  #L45d1b0.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d1b4.  if v0 >= v1 then goto L45d1d8;
  #L45d1b8.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d1be.  v0:= temp;
  #L45d1c0.  call temp:= `decodeZigZag32`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag32:(I)I` @kind static;
  #L45d1c6.  v0:= temp;
  #L45d1c8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45d1ce.  v0:= temp @kind object;
  #L45d1d0.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d1d6.  goto L45d1b0;
  #L45d1d8.  return @kind void;
  #L45d1da.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45d1e0.  v4:= temp @kind object;
  #L45d1e2.  throw v4;
  #L45d1e4.  call temp:= `l`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.l:()I` @kind virtual;
  #L45d1ea.  v0:= temp;
  #L45d1ec.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45d1f2.  v0:= temp @kind object;
  #L45d1f4.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d1fa.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45d200.  v0:= temp;
  #L45d202.  if v0 == 0 then goto L45d208;
  #L45d206.  return @kind void;
  #L45d208.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d20c.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d212.  v1:= temp;
  #L45d214.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d218.  if v1 == v2 then goto L45d1e4;
  #L45d21c.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45d220.  return @kind void;
}
procedure `long` `u`(`com.google.crypto.tink.shaded.protobuf.d$b` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.u:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45c044.  v0:= 0I;
  #L45c046.  call `e0`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45c04c.  call temp:= `a0`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.a0:()J` @kind virtual;
  #L45c052.  v0:= temp @kind wide;
  #L45c054.  return v0 @kind wide;
}
procedure `void` `v`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.v:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45d450.  v0:= instanceof @variable v4 @type ^`com.google.crypto.tink.shaded.protobuf.o` @kind boolean;
  #L45d454.  v1:= 2I;
  #L45d456.  if v0 == 0 then goto L45d4da;
  #L45d45a.  v0:= v4 @kind object;
  #L45d45c.  v0:= (`com.google.crypto.tink.shaded.protobuf.o`) v0 @kind object;
  #L45d460.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d464.  call temp:= `getTagWireType`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45d46a.  v4:= temp;
  #L45d46c.  if v4 == 0 then goto L45d4a4;
  #L45d470.  if v4 != v1 then goto L45d49a;
  #L45d474.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d47a.  v4:= temp;
  #L45d47c.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d480.  v1:= v1 + v4 @kind int;
  #L45d482.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d486.  if v4 >= v1 then goto L45d51c;
  #L45d48a.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d490.  v4:= temp;
  #L45d492.  call `addInt`(v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @kind virtual;
  #L45d498.  goto L45d482;
  #L45d49a.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45d4a0.  v4:= temp @kind object;
  #L45d4a2.  throw v4;
  #L45d4a4.  call temp:= `g`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.g:()I` @kind virtual;
  #L45d4aa.  v4:= temp;
  #L45d4ac.  call `addInt`(v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @kind virtual;
  #L45d4b2.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45d4b8.  v4:= temp;
  #L45d4ba.  if v4 == 0 then goto L45d4c0;
  #L45d4be.  return @kind void;
  #L45d4c0.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d4c4.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d4ca.  v1:= temp;
  #L45d4cc.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d4d0.  if v1 == v2 then goto L45d4a4;
  #L45d4d4.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v4;
  #L45d4d8.  return @kind void;
  #L45d4da.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d4de.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45d4e4.  v0:= temp;
  #L45d4e6.  if v0 == 0 then goto L45d528;
  #L45d4ea.  if v0 != v1 then goto L45d51e;
  #L45d4ee.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d4f4.  v0:= temp;
  #L45d4f6.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d4fa.  v1:= v1 + v0 @kind int;
  #L45d4fc.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d500.  if v0 >= v1 then goto L45d51c;
  #L45d504.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d50a.  v0:= temp;
  #L45d50c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45d512.  v0:= temp @kind object;
  #L45d514.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d51a.  goto L45d4fc;
  #L45d51c.  return @kind void;
  #L45d51e.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45d524.  v4:= temp @kind object;
  #L45d526.  throw v4;
  #L45d528.  call temp:= `g`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.g:()I` @kind virtual;
  #L45d52e.  v0:= temp;
  #L45d530.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45d536.  v0:= temp @kind object;
  #L45d538.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d53e.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45d544.  v0:= temp;
  #L45d546.  if v0 == 0 then goto L45d54c;
  #L45d54a.  return @kind void;
  #L45d54c.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d550.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d556.  v1:= temp;
  #L45d558.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d55c.  if v1 == v2 then goto L45d528;
  #L45d560.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45d564.  return @kind void;
}
procedure `void` `w`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this, `java.util.List` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.m0` v5 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.w:(Ljava/util/List;Lcom/google/crypto/tink/shaded/protobuf/m0;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45ce30.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45ce34.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45ce3a.  v0:= temp;
  #L45ce3c.  v1:= 2I;
  #L45ce3e.  if v0 != v1 then goto L45ce78;
  #L45ce42.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45ce46.  call temp:= `W`(v3, v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.W:(Lcom/google/crypto/tink/shaded/protobuf/m0;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind direct;
  #L45ce4c.  v1:= temp @kind object;
  #L45ce4e.  call temp:= `add`(v4, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45ce54.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45ce5a.  v1:= temp;
  #L45ce5c.  if v1 == 0 then goto L45ce62;
  #L45ce60.  return @kind void;
  #L45ce62.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45ce66.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45ce6c.  v2:= temp;
  #L45ce6e.  if v2 == v0 then goto L45ce46;
  #L45ce72.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v1;
  #L45ce76.  return @kind void;
  #L45ce78.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45ce7e.  v4:= temp @kind object;
  #L45ce80.  throw v4;
}
procedure `int` `x`(`com.google.crypto.tink.shaded.protobuf.d$b` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.x:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45b894.  v0:= 5I;
  #L45b896.  call `e0`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e0:(I)V` @kind direct;
  #L45b89c.  call temp:= `S`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.S:()I` @kind direct;
  #L45b8a2.  v0:= temp;
  #L45b8a4.  return v0;
}
procedure `void` `y`(`com.google.crypto.tink.shaded.protobuf.d$b` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.y:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45cfc8.  v0:= instanceof @variable v5 @type ^`com.google.crypto.tink.shaded.protobuf.r` @kind boolean;
  #L45cfcc.  v1:= 2I;
  #L45cfce.  v2:= 1I;
  #L45cfd0.  if v0 == 0 then goto L45d05a;
  #L45cfd4.  v0:= v5 @kind object;
  #L45cfd6.  v0:= (`com.google.crypto.tink.shaded.protobuf.r`) v0 @kind object;
  #L45cfda.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45cfde.  call temp:= `getTagWireType`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45cfe4.  v5:= temp;
  #L45cfe6.  if v5 == v2 then goto L45d024;
  #L45cfea.  if v5 != v1 then goto L45d01a;
  #L45cfee.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cff4.  v5:= temp;
  #L45cff6.  call `k0`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.k0:(I)V` @kind direct;
  #L45cffc.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d000.  v1:= v1 + v5 @kind int;
  #L45d002.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d006.  if v5 >= v1 then goto L45d0a2;
  #L45d00a.  call temp:= `V`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.V:()J` @kind direct;
  #L45d010.  v2:= temp @kind wide;
  #L45d012.  call `addLong`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addLong:(J)V` @kind virtual;
  #L45d018.  goto L45d002;
  #L45d01a.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45d020.  v5:= temp @kind object;
  #L45d022.  throw v5;
  #L45d024.  call temp:= `e`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e:()J` @kind virtual;
  #L45d02a.  v1:= temp @kind wide;
  #L45d02c.  call `addLong`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addLong:(J)V` @kind virtual;
  #L45d032.  call temp:= `O`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45d038.  v5:= temp;
  #L45d03a.  if v5 == 0 then goto L45d040;
  #L45d03e.  return @kind void;
  #L45d040.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d044.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d04a.  v1:= temp;
  #L45d04c.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d050.  if v1 == v2 then goto L45d024;
  #L45d054.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v5;
  #L45d058.  return @kind void;
  #L45d05a.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d05e.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45d064.  v0:= temp;
  #L45d066.  if v0 == v2 then goto L45d0ae;
  #L45d06a.  if v0 != v1 then goto L45d0a4;
  #L45d06e.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d074.  v0:= temp;
  #L45d076.  call `k0`(v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.k0:(I)V` @kind direct;
  #L45d07c.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d080.  v1:= v1 + v0 @kind int;
  #L45d082.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d086.  if v0 >= v1 then goto L45d0a2;
  #L45d08a.  call temp:= `V`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.V:()J` @kind direct;
  #L45d090.  v2:= temp @kind wide;
  #L45d092.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45d098.  v0:= temp @kind object;
  #L45d09a.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d0a0.  goto L45d082;
  #L45d0a2.  return @kind void;
  #L45d0a4.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45d0aa.  v5:= temp @kind object;
  #L45d0ac.  throw v5;
  #L45d0ae.  call temp:= `e`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.e:()J` @kind virtual;
  #L45d0b4.  v0:= temp @kind wide;
  #L45d0b6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L45d0bc.  v0:= temp @kind object;
  #L45d0be.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45d0c4.  call temp:= `O`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45d0ca.  v0:= temp;
  #L45d0cc.  if v0 == 0 then goto L45d0d2;
  #L45d0d0.  return @kind void;
  #L45d0d2.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45d0d6.  call temp:= `Z`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45d0dc.  v1:= temp;
  #L45d0de.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45d0e2.  if v1 == v2 then goto L45d0ae;
  #L45d0e6.  v4.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45d0ea.  return @kind void;
}
procedure `void` `z`(`com.google.crypto.tink.shaded.protobuf.d$b` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.z:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45cad8.  v0:= instanceof @variable v4 @type ^`com.google.crypto.tink.shaded.protobuf.o` @kind boolean;
  #L45cadc.  v1:= 2I;
  #L45cade.  if v0 == 0 then goto L45cb6a;
  #L45cae2.  v0:= v4 @kind object;
  #L45cae4.  v0:= (`com.google.crypto.tink.shaded.protobuf.o`) v0 @kind object;
  #L45cae8.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45caec.  call temp:= `getTagWireType`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45caf2.  v4:= temp;
  #L45caf4.  if v4 == 0 then goto L45cb34;
  #L45caf8.  if v4 != v1 then goto L45cb2a;
  #L45cafc.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cb02.  v4:= temp;
  #L45cb04.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cb08.  v1:= v1 + v4 @kind int;
  #L45cb0a.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cb0e.  if v4 >= v1 then goto L45cb22;
  #L45cb12.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cb18.  v4:= temp;
  #L45cb1a.  call `addInt`(v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @kind virtual;
  #L45cb20.  goto L45cb0a;
  #L45cb22.  call `d0`(v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.d0:(I)V` @kind direct;
  #L45cb28.  goto L45cbb2;
  #L45cb2a.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45cb30.  v4:= temp @kind object;
  #L45cb32.  throw v4;
  #L45cb34.  call temp:= `q`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.q:()I` @kind virtual;
  #L45cb3a.  v4:= temp;
  #L45cb3c.  call `addInt`(v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @kind virtual;
  #L45cb42.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45cb48.  v4:= temp;
  #L45cb4a.  if v4 == 0 then goto L45cb50;
  #L45cb4e.  return @kind void;
  #L45cb50.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cb54.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cb5a.  v1:= temp;
  #L45cb5c.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45cb60.  if v1 == v2 then goto L45cb34;
  #L45cb64.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v4;
  #L45cb68.  return @kind void;
  #L45cb6a.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45cb6e.  call temp:= `getTagWireType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L45cb74.  v0:= temp;
  #L45cb76.  if v0 == 0 then goto L45cbbe;
  #L45cb7a.  if v0 != v1 then goto L45cbb4;
  #L45cb7e.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cb84.  v0:= temp;
  #L45cb86.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cb8a.  v1:= v1 + v0 @kind int;
  #L45cb8c.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cb90.  if v0 >= v1 then goto L45cbac;
  #L45cb94.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cb9a.  v0:= temp;
  #L45cb9c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45cba2.  v0:= temp @kind object;
  #L45cba4.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45cbaa.  goto L45cb8c;
  #L45cbac.  call `d0`(v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.d0:(I)V` @kind direct;
  #L45cbb2.  return @kind void;
  #L45cbb4.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L45cbba.  v4:= temp @kind object;
  #L45cbbc.  throw v4;
  #L45cbbe.  call temp:= `q`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.q:()I` @kind virtual;
  #L45cbc4.  v0:= temp;
  #L45cbc6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45cbcc.  v0:= temp @kind object;
  #L45cbce.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45cbd4.  call temp:= `O`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.O:()Z` @kind direct;
  #L45cbda.  v0:= temp;
  #L45cbdc.  if v0 == 0 then goto L45cbe2;
  #L45cbe0.  return @kind void;
  #L45cbe2.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int`;
  #L45cbe6.  call temp:= `Z`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/d$b;.Z:()I` @kind direct;
  #L45cbec.  v1:= temp;
  #L45cbee.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.d$b.e` @type ^`int`;
  #L45cbf2.  if v1 == v2 then goto L45cbbe;
  #L45cbf6.  v3.`com.google.crypto.tink.shaded.protobuf.d$b.c` @type ^`int` := v0;
  #L45cbfa.  return @kind void;
}
