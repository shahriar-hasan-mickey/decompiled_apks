record `com.google.crypto.tink.shaded.protobuf.u0` @kind class @AccessFlag FINAL {
}
global `com.google.crypto.tink.shaded.protobuf.u0$b` `@@com.google.crypto.tink.shaded.protobuf.u0.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L48a04c.  call temp:= `p`() @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.p:()Z` @kind static;
  #L48a052.  v0:= temp;
  #L48a054.  if v0 == 0 then goto L48a070;
  #L48a058.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/b;.c:()Z` @kind static;
  #L48a05e.  v0:= temp;
  #L48a060.  if v0 != 0 then goto L48a070;
  #L48a064.  v0:= new `com.google.crypto.tink.shaded.protobuf.u0$e`;
  #L48a068.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$e;.<init>:()V` @kind direct;
  #L48a06e.  goto L48a07a;
  #L48a070.  v0:= new `com.google.crypto.tink.shaded.protobuf.u0$c`;
  #L48a074.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$c;.<init>:()V` @kind direct;
  #L48a07a.  `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` := v0 @kind object;
  #L48a07e.  return @kind void;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.a:(II)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L489c50.  call temp:= `o`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.o:(II)I` @kind static;
  #L489c56.  v0:= temp;
  #L489c58.  return v0;
}
procedure `int` `b`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.b:(III)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L489c6c.  call temp:= `p`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.p:(III)I` @kind static;
  #L489c72.  v0:= temp;
  #L489c74.  return v0;
}
procedure `int` `c`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.c:([BII)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L489c88.  call temp:= `r`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.r:([BII)I` @kind static;
  #L489c8e.  v0:= temp;
  #L489c90.  return v0;
}
procedure `int` `d`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.d:(I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L489ca4.  call temp:= `n`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.n:(I)I` @kind static;
  #L489caa.  v0:= temp;
  #L489cac.  return v0;
}
procedure `int` `e`(`java.nio.ByteBuffer` v0 @kind object, `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.e:(Ljava/nio/ByteBuffer;II)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L489cc0.  call temp:= `m`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.m:(Ljava/nio/ByteBuffer;II)I` @kind static;
  #L489cc6.  v0:= temp;
  #L489cc8.  return v0;
}
procedure `int` `f`(`java.nio.ByteBuffer` v0 @kind object, `int` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.f:(Ljava/nio/ByteBuffer;III)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L489cdc.  call temp:= `q`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.q:(Ljava/nio/ByteBuffer;III)I` @kind static;
  #L489ce2.  v0:= temp;
  #L489ce4.  return v0;
}
procedure `java.lang.String` `g`(`java.nio.ByteBuffer` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.g:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L48a02c.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L48a030.  call temp:= `a`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.a:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @kind virtual;
  #L48a036.  v1:= temp @kind object;
  #L48a038.  return v1 @kind object;
}
procedure `java.lang.String` `h`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.h:([BII)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L48a00c.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L48a010.  call temp:= `b`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.b:([BII)Ljava/lang/String;` @kind virtual;
  #L48a016.  v1:= temp @kind object;
  #L48a018.  return v1 @kind object;
}
procedure `int` `i`(`java.lang.CharSequence` v1 @kind object, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.i:(Ljava/lang/CharSequence;[BII)I` @AccessFlag STATIC {
    temp;
    v0;

  #L489cf8.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L489cfc.  call temp:= `e`(v0, v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.e:(Ljava/lang/CharSequence;[BII)I` @kind virtual;
  #L489d02.  v1:= temp;
  #L489d04.  return v1;
}
procedure `void` `j`(`java.lang.CharSequence` v1 @kind object, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.j:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L48a090.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L48a094.  call `f`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.f:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L48a09a.  return @kind void;
}
procedure `int` `k`(`java.lang.CharSequence` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.k:(Ljava/lang/CharSequence;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L489d18.  call temp:= `length`(v5) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L489d1e.  v0:= temp;
  #L489d20.  v1:= 0I;
  #L489d22.  if v1 >= v0 then goto L489d3c;
  #L489d26.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L489d2c.  v2:= temp;
  #L489d2e.  v3:= 128I;
  #L489d32.  if v2 >= v3 then goto L489d3c;
  #L489d36.  v1:= v1 + 1;
  #L489d3a.  goto L489d22;
  #L489d3c.  v2:= v0;
  #L489d3e.  if v1 >= v0 then goto L489d6c;
  #L489d42.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L489d48.  v3:= temp;
  #L489d4a.  v4:= 2048I;
  #L489d4e.  if v3 >= v4 then goto L489d62;
  #L489d52.  v3:= v3 - 127;
  #L489d56.  v3:= v3 ^>> 31;
  #L489d5a.  v2:= v2 + v3 @kind int;
  #L489d5c.  v1:= v1 + 1;
  #L489d60.  goto L489d3e;
  #L489d62.  call temp:= `l`(v5, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.l:(Ljava/lang/CharSequence;I)I` @kind static;
  #L489d68.  v5:= temp;
  #L489d6a.  v2:= v2 + v5 @kind int;
  #L489d6c.  if v2 < v0 then goto L489d72;
  #L489d70.  return v2;
  #L489d72.  v5:= new `java.lang.IllegalArgumentException`;
  #L489d76.  v0:= new `java.lang.StringBuilder`;
  #L489d7a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L489d80.  v1:= "UTF-8 length does not fit in int: " @kind object;
  #L489d84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L489d8a.  v1:= (`long`) v2 @kind i2l;
  #L489d8c.  v3:= 4294967296L;
  #L489d96.  v1:= v1 + v3 @kind long;
  #L489d98.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L489d9e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L489da4.  v0:= temp @kind object;
  #L489da6.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L489dac.  throw v5;
}
procedure `int` `l`(`java.lang.CharSequence` v4 @kind object, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.l:(Ljava/lang/CharSequence;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L489dc0.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L489dc6.  v0:= temp;
  #L489dc8.  v1:= 0I;
  #L489dca.  if v5 >= v0 then goto L489e2a;
  #L489dce.  call temp:= `charAt`(v4, v5) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L489dd4.  v2:= temp;
  #L489dd6.  v3:= 2048I;
  #L489dda.  if v2 >= v3 then goto L489dea;
  #L489dde.  v2:= v2 - 127;
  #L489de2.  v2:= v2 ^>> 31;
  #L489de6.  v1:= v1 + v2 @kind int;
  #L489de8.  goto L489e24;
  #L489dea.  v1:= v1 + 2;
  #L489dee.  v3:= 55296I;
  #L489df4.  if v3 > v2 then goto L489e24;
  #L489df8.  v3:= 57343I;
  #L489dfe.  if v2 > v3 then goto L489e24;
  #L489e02.  call temp:= `codePointAt`(v4, v5) @signature `Ljava/lang/Character;.codePointAt:(Ljava/lang/CharSequence;I)I` @kind static;
  #L489e08.  v2:= temp;
  #L489e0a.  v3:= 65536I;
  #L489e0e.  if v2 < v3 then goto L489e18;
  #L489e12.  v5:= v5 + 1;
  #L489e16.  goto L489e24;
  #L489e18.  v4:= new `com.google.crypto.tink.shaded.protobuf.u0$d`;
  #L489e1c.  call `<init>`(v4, v5, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$d;.<init>:(II)V` @kind direct;
  #L489e22.  throw v4;
  #L489e24.  v5:= v5 + 1;
  #L489e28.  goto L489dca;
  #L489e2a.  return v1;
}
procedure `int` `m`(`java.nio.ByteBuffer` v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.m:(Ljava/nio/ByteBuffer;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L489e3c.  v8:= v8 + -7;
  #L489e40.  v0:= v7;
  #L489e42.  if v0 >= v8 then goto L489e6c;
  #L489e46.  call temp:= `getLong`(v6, v0) @signature `Ljava/nio/ByteBuffer;.getLong:(I)J` @kind virtual;
  #L489e4c.  v1:= temp @kind wide;
  #L489e4e.  v3:= -2.937446524422997E-306D;
  #L489e58.  v1:= v1 ^& v3 @kind long;
  #L489e5a.  v3:= 0L;
  #L489e5e.  v5:= lcmp(v1, v3);
  #L489e62.  if v5 != 0 then goto L489e6c;
  #L489e66.  v0:= v0 + 8;
  #L489e6a.  goto L489e42;
  #L489e6c.  v0:= v0 - v7 @kind int;
  #L489e6e.  return v0;
}
procedure `int` `n`(`int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.n:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L489ee4.  v0:= -12I;
  #L489ee8.  if v1 <= v0 then goto L489eee;
  #L489eec.  v1:= -1I;
  #L489eee.  return v1;
}
procedure `int` `o`(`int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.o:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L489f00.  v0:= -12I;
  #L489f04.  if v1 > v0 then goto L489f1a;
  #L489f08.  v0:= -65I;
  #L489f0c.  if v2 <= v0 then goto L489f12;
  #L489f10.  goto L489f1a;
  #L489f12.  v2:= v2 ^< 8;
  #L489f16.  v1:= v1 ^~ v2 @kind int;
  #L489f18.  goto L489f1c;
  #L489f1a.  v1:= -1I;
  #L489f1c.  return v1;
}
procedure `int` `p`(`int` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.p:(III)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L489f30.  v0:= -12I;
  #L489f34.  if v1 > v0 then goto L489f54;
  #L489f38.  v0:= -65I;
  #L489f3c.  if v2 > v0 then goto L489f54;
  #L489f40.  if v3 <= v0 then goto L489f46;
  #L489f44.  goto L489f54;
  #L489f46.  v2:= v2 ^< 8;
  #L489f4a.  v1:= v1 ^~ v2 @kind int;
  #L489f4c.  v2:= v3 ^< 16;
  #L489f50.  v1:= v1 ^~ v2 @kind int;
  #L489f52.  goto L489f56;
  #L489f54.  v1:= -1I;
  #L489f56.  return v1;
}
procedure `int` `q`(`java.nio.ByteBuffer` v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.q:(Ljava/nio/ByteBuffer;III)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L489f68.  if v5 == 0 then goto L489fb2;
  #L489f6c.  v0:= 1I;
  #L489f6e.  if v5 == v0 then goto L489fa0;
  #L489f72.  v1:= 2I;
  #L489f74.  if v5 != v1 then goto L489f94;
  #L489f78.  call temp:= `get`(v2, v4) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L489f7e.  v5:= temp;
  #L489f80.  v4:= v4 + v0 @kind int;
  #L489f82.  call temp:= `get`(v2, v4) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L489f88.  v2:= temp;
  #L489f8a.  call temp:= `p`(v3, v5, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.p:(III)I` @kind static;
  #L489f90.  v2:= temp;
  #L489f92.  return v2;
  #L489f94.  v2:= new `java.lang.AssertionError`;
  #L489f98.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L489f9e.  throw v2;
  #L489fa0.  call temp:= `get`(v2, v4) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L489fa6.  v2:= temp;
  #L489fa8.  call temp:= `o`(v3, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.o:(II)I` @kind static;
  #L489fae.  v2:= temp;
  #L489fb0.  return v2;
  #L489fb2.  call temp:= `n`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.n:(I)I` @kind static;
  #L489fb8.  v2:= temp;
  #L489fba.  return v2;
}
procedure `int` `r`(`byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.r:([BII)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L489e80.  v0:= v4 + -1;
  #L489e84.  v0:= v3[v0] @kind byte;
  #L489e88.  v5:= v5 - v4 @kind int;
  #L489e8a.  if v5 == 0 then goto L489ec8;
  #L489e8e.  v1:= 1I;
  #L489e90.  if v5 == v1 then goto L489eba;
  #L489e94.  v2:= 2I;
  #L489e96.  if v5 != v2 then goto L489eae;
  #L489e9a.  v5:= v3[v4] @kind byte;
  #L489e9e.  v4:= v4 + v1 @kind int;
  #L489ea0.  v3:= v3[v4] @kind byte;
  #L489ea4.  call temp:= `p`(v0, v5, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.p:(III)I` @kind static;
  #L489eaa.  v3:= temp;
  #L489eac.  return v3;
  #L489eae.  v3:= new `java.lang.AssertionError`;
  #L489eb2.  call `<init>`(v3) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L489eb8.  throw v3;
  #L489eba.  v3:= v3[v4] @kind byte;
  #L489ebe.  call temp:= `o`(v0, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.o:(II)I` @kind static;
  #L489ec4.  v3:= temp;
  #L489ec6.  return v3;
  #L489ec8.  call temp:= `n`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.n:(I)I` @kind static;
  #L489ece.  v3:= temp;
  #L489ed0.  return v3;
}
procedure `boolean` `s`(`java.nio.ByteBuffer` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.s:(Ljava/nio/ByteBuffer;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L489c20.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L489c24.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L489c2a.  v1:= temp;
  #L489c2c.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L489c32.  v2:= temp;
  #L489c34.  call temp:= `i`(v0, v3, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.i:(Ljava/nio/ByteBuffer;II)Z` @kind virtual;
  #L489c3a.  v3:= temp;
  #L489c3c.  return v3;
}
procedure `boolean` `t`(`byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.t:([B)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L489bdc.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L489be0.  v1:= length @variable v3;
  #L489be2.  v2:= 0I;
  #L489be4.  call temp:= `j`(v0, v3, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.j:([BII)Z` @kind virtual;
  #L489bea.  v3:= temp;
  #L489bec.  return v3;
}
procedure `boolean` `u`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.u:([BII)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L489c00.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L489c04.  call temp:= `j`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.j:([BII)Z` @kind virtual;
  #L489c0a.  v1:= temp;
  #L489c0c.  return v1;
}
procedure `int` `v`(`int` v1 , `java.nio.ByteBuffer` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.v:(ILjava/nio/ByteBuffer;II)I` @AccessFlag STATIC {
    temp;
    v0;

  #L489fec.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L489ff0.  call temp:= `k`(v0, v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.k:(ILjava/nio/ByteBuffer;II)I` @kind virtual;
  #L489ff6.  v1:= temp;
  #L489ff8.  return v1;
}
procedure `int` `w`(`int` v1 , `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.w:(I[BII)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L489fcc.  v0:= `@@com.google.crypto.tink.shaded.protobuf.u0.a` @type ^`com.google.crypto.tink.shaded.protobuf.u0$b` @kind object;
  #L489fd0.  call temp:= `l`(v0, v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$b;.l:(I[BII)I` @kind virtual;
  #L489fd6.  v1:= temp;
  #L489fd8.  return v1;
}
