record `com.google.crypto.tink.shaded.protobuf.i0` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.a` @kind class, `java.util.RandomAccess` @kind interface {
  `java.lang.Object`[] `com.google.crypto.tink.shaded.protobuf.i0.b` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.i0.c` @AccessFlag PRIVATE;
}
global `com.google.crypto.tink.shaded.protobuf.i0` `@@com.google.crypto.tink.shaded.protobuf.i0.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L48164c.  v0:= new `com.google.crypto.tink.shaded.protobuf.i0`;
  #L481650.  v1:= 0I;
  #L481652.  v2:= new `java.lang.Object`[v1];
  #L481656.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.<init>:([Ljava/lang/Object;I)V` @kind direct;
  #L48165c.  `@@com.google.crypto.tink.shaded.protobuf.i0.d` @type ^`com.google.crypto.tink.shaded.protobuf.i0` := v0 @kind object;
  #L481660.  call `makeImmutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.makeImmutable:()V` @kind virtual;
  #L481666.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.i0` v0 @kind this, `java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.<init>:([Ljava/lang/Object;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L481678.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.<init>:()V` @kind direct;
  #L48167e.  v0.`com.google.crypto.tink.shaded.protobuf.i0.b` @type ^`java.lang.Object`[] := v1 @kind object;
  #L481682.  v0.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int` := v2;
  #L481686.  return @kind void;
}
procedure `java.lang.Object`[] `a`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.a:(I)[Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4815ec.  v0:= new `java.lang.Object`[v0];
  #L4815f0.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.i0` `b`() @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.b:()Lcom/google/crypto/tink/shaded/protobuf/i0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4814c8.  v0:= `@@com.google.crypto.tink.shaded.protobuf.i0.d` @type ^`com.google.crypto.tink.shaded.protobuf.i0` @kind object;
  #L4814cc.  return v0 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.shaded.protobuf.i0` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.c:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L481740.  if v2 < 0 then goto L48174e;
  #L481744.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int`;
  #L481748.  if v2 >= v0 then goto L48174e;
  #L48174c.  return @kind void;
  #L48174e.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L481752.  call temp:= `d`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.d:(I)Ljava/lang/String;` @kind direct;
  #L481758.  v2:= temp @kind object;
  #L48175a.  call `<init>`(v0, v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L481760.  throw v0;
}
procedure `java.lang.String` `d`(`com.google.crypto.tink.shaded.protobuf.i0` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.d:(I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L481604.  v0:= new `java.lang.StringBuilder`;
  #L481608.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48160e.  v1:= "Index:" @kind object;
  #L481612.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L481618.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L48161e.  v3:= ", Size:" @kind object;
  #L481622.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L481628.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int`;
  #L48162c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L481632.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L481638.  v3:= temp @kind object;
  #L48163a.  return v3 @kind object;
}
procedure `void` `add`(`com.google.crypto.tink.shaded.protobuf.i0` v4 @kind this, `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L481698.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L48169e.  if v5 < 0 then goto L48171c;
  #L4816a2.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int`;
  #L4816a6.  if v5 > v0 then goto L48171c;
  #L4816aa.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.i0.b` @type ^`java.lang.Object`[] @kind object;
  #L4816ae.  v2:= length @variable v1;
  #L4816b0.  if v0 >= v2 then goto L4816c2;
  #L4816b4.  v2:= v5 + 1;
  #L4816b8.  v0:= v0 - v5 @kind int;
  #L4816ba.  call `arraycopy`(v1, v5, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4816c0.  goto L4816fa;
  #L4816c2.  v0:= v0 * 3;
  #L4816c6.  v0:= v0 / 2;
  #L4816ca.  v0:= v0 + 1;
  #L4816ce.  call temp:= `a`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.a:(I)[Ljava/lang/Object;` @kind static;
  #L4816d4.  v0:= temp @kind object;
  #L4816d6.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.i0.b` @type ^`java.lang.Object`[] @kind object;
  #L4816da.  v2:= 0I;
  #L4816dc.  call `arraycopy`(v1, v2, v0, v2, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4816e2.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.i0.b` @type ^`java.lang.Object`[] @kind object;
  #L4816e6.  v2:= v5 + 1;
  #L4816ea.  v3:= v4.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int`;
  #L4816ee.  v3:= v3 - v5 @kind int;
  #L4816f0.  call `arraycopy`(v1, v5, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4816f6.  v4.`com.google.crypto.tink.shaded.protobuf.i0.b` @type ^`java.lang.Object`[] := v0 @kind object;
  #L4816fa.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.i0.b` @type ^`java.lang.Object`[] @kind object;
  #L4816fe.  v0[v5]:= v6 @kind object;
  #L481702.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int`;
  #L481706.  v5:= v5 + 1;
  #L48170a.  v4.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int` := v5;
  #L48170e.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L481712.  v5:= v5 + 1;
  #L481716.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L48171a.  return @kind void;
  #L48171c.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L481720.  call temp:= `d`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.d:(I)Ljava/lang/String;` @kind direct;
  #L481726.  v5:= temp @kind object;
  #L481728.  call `<init>`(v6, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48172e.  throw v6;
}
procedure `boolean` `add`(`com.google.crypto.tink.shaded.protobuf.i0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L481450.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L481456.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int`;
  #L48145a.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.i0.b` @type ^`java.lang.Object`[] @kind object;
  #L48145e.  v2:= length @variable v1;
  #L481460.  v3:= 1I;
  #L481462.  if v0 != v2 then goto L48147c;
  #L481466.  v0:= v0 * 3;
  #L48146a.  v0:= v0 / 2;
  #L48146e.  v0:= v0 + v3 @kind int;
  #L481470.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L481476.  v0:= temp @kind object;
  #L481478.  v4.`com.google.crypto.tink.shaded.protobuf.i0.b` @type ^`java.lang.Object`[] := v0 @kind object;
  #L48147c.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.i0.b` @type ^`java.lang.Object`[] @kind object;
  #L481480.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int`;
  #L481484.  v2:= v1 + 1;
  #L481488.  v4.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int` := v2;
  #L48148c.  v0[v1]:= v5 @kind object;
  #L481490.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L481494.  v5:= v5 + v3 @kind int;
  #L481496.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L48149a.  return v3;
}
procedure `com.google.crypto.tink.shaded.protobuf.i0` `e`(`com.google.crypto.tink.shaded.protobuf.i0` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.e:(I)Lcom/google/crypto/tink/shaded/protobuf/i0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4814e0.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int`;
  #L4814e4.  if v3 < v0 then goto L481504;
  #L4814e8.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.i0.b` @type ^`java.lang.Object`[] @kind object;
  #L4814ec.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L4814f2.  v3:= temp @kind object;
  #L4814f4.  v0:= new `com.google.crypto.tink.shaded.protobuf.i0`;
  #L4814f8.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int`;
  #L4814fc.  call `<init>`(v0, v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.<init>:([Ljava/lang/Object;I)V` @kind direct;
  #L481502.  return v0 @kind object;
  #L481504.  v3:= new `java.lang.IllegalArgumentException`;
  #L481508.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L48150e.  throw v3;
}
procedure `java.lang.Object` `get`(`com.google.crypto.tink.shaded.protobuf.i0` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L481538.  call `c`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.c:(I)V` @kind direct;
  #L48153e.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.i0.b` @type ^`java.lang.Object`[] @kind object;
  #L481542.  v2:= v0[v2] @kind object;
  #L481546.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList` `mutableCopyWithCapacity`(`com.google.crypto.tink.shaded.protobuf.i0` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$ProtobufList;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4814ac.  call temp:= `e`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.e:(I)Lcom/google/crypto/tink/shaded/protobuf/i0;` @kind virtual;
  #L4814b2.  v1:= temp @kind object;
  #L4814b4.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`com.google.crypto.tink.shaded.protobuf.i0` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L481558.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L48155e.  call `c`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.c:(I)V` @kind direct;
  #L481564.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.i0.b` @type ^`java.lang.Object`[] @kind object;
  #L481568.  v1:= v0[v5] @kind object;
  #L48156c.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int`;
  #L481570.  v3:= v2 + -1;
  #L481574.  if v5 >= v3 then goto L481588;
  #L481578.  v3:= v5 + 1;
  #L48157c.  v2:= v2 - v5 @kind int;
  #L48157e.  v2:= v2 + -1;
  #L481582.  call `arraycopy`(v0, v3, v0, v5, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L481588.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int`;
  #L48158c.  v5:= v5 + -1;
  #L481590.  v4.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int` := v5;
  #L481594.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L481598.  v5:= v5 + 1;
  #L48159c.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L4815a0.  return v1 @kind object;
}
procedure `java.lang.Object` `set`(`com.google.crypto.tink.shaded.protobuf.i0` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4815b4.  call `ensureIsMutable`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L4815ba.  call `c`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.c:(I)V` @kind direct;
  #L4815c0.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.i0.b` @type ^`java.lang.Object`[] @kind object;
  #L4815c4.  v1:= v0[v3] @kind object;
  #L4815c8.  v0[v3]:= v4 @kind object;
  #L4815cc.  v3:= v2.`java.util.AbstractList.modCount` @type ^`int`;
  #L4815d0.  v3:= v3 + 1;
  #L4815d4.  v2.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L4815d8.  return v1 @kind object;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.i0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/i0;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L481520.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.i0.c` @type ^`int`;
  #L481524.  return v0;
}
