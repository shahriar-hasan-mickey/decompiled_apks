record `com.google.crypto.tink.shaded.protobuf.l0$d` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `com.google.crypto.tink.shaded.protobuf.l0$c` `com.google.crypto.tink.shaded.protobuf.l0$d.a` @AccessFlag PRIVATE;
  `com.google.crypto.tink.shaded.protobuf.ByteString$h` `com.google.crypto.tink.shaded.protobuf.l0$d.b` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.l0$d.c` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.l0$d.d` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.l0$d.e` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.l0$d.f` @AccessFlag PRIVATE;
  `com.google.crypto.tink.shaded.protobuf.l0` `com.google.crypto.tink.shaded.protobuf.l0$d.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.l0$d` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.l0` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/l0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48204c.  v0.`com.google.crypto.tink.shaded.protobuf.l0$d.g` @type ^`com.google.crypto.tink.shaded.protobuf.l0` := v1 @kind object;
  #L482050.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L482056.  call `b`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.b:()V` @kind direct;
  #L48205c.  return @kind void;
}
procedure `void` `a`(`com.google.crypto.tink.shaded.protobuf.l0$d` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L482070.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$h` @kind object;
  #L482074.  if v0 == 0 then goto L4820cc;
  #L482078.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int`;
  #L48207c.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.c` @type ^`int`;
  #L482080.  if v0 != v1 then goto L4820cc;
  #L482084.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.e` @type ^`int`;
  #L482088.  v0:= v0 + v1 @kind int;
  #L48208a.  v2.`com.google.crypto.tink.shaded.protobuf.l0$d.e` @type ^`int` := v0;
  #L48208e.  v0:= 0I;
  #L482090.  v2.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int` := v0;
  #L482094.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.a` @type ^`com.google.crypto.tink.shaded.protobuf.l0$c` @kind object;
  #L482098.  call temp:= `hasNext`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$c;.hasNext:()Z` @kind virtual;
  #L48209e.  v1:= temp;
  #L4820a0.  if v1 == 0 then goto L4820c2;
  #L4820a4.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.a` @type ^`com.google.crypto.tink.shaded.protobuf.l0$c` @kind object;
  #L4820a8.  call temp:= `c`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$c;.c:()Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;` @kind virtual;
  #L4820ae.  v0:= temp @kind object;
  #L4820b0.  v2.`com.google.crypto.tink.shaded.protobuf.l0$d.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$h` := v0 @kind object;
  #L4820b4.  call temp:= `size`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L4820ba.  v0:= temp;
  #L4820bc.  v2.`com.google.crypto.tink.shaded.protobuf.l0$d.c` @type ^`int` := v0;
  #L4820c0.  goto L4820cc;
  #L4820c2.  v1:= 0I;
  #L4820c4.  v2.`com.google.crypto.tink.shaded.protobuf.l0$d.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$h` := v1 @kind object;
  #L4820c8.  v2.`com.google.crypto.tink.shaded.protobuf.l0$d.c` @type ^`int` := v0;
  #L4820cc.  return @kind void;
}
procedure `void` `b`(`com.google.crypto.tink.shaded.protobuf.l0$d` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4820e0.  v0:= new `com.google.crypto.tink.shaded.protobuf.l0$c`;
  #L4820e4.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.l0$d.g` @type ^`com.google.crypto.tink.shaded.protobuf.l0` @kind object;
  #L4820e8.  v2:= 0I;
  #L4820ea.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$c;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/l0$a;)V` @kind direct;
  #L4820f0.  v3.`com.google.crypto.tink.shaded.protobuf.l0$d.a` @type ^`com.google.crypto.tink.shaded.protobuf.l0$c` := v0 @kind object;
  #L4820f4.  call temp:= `c`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$c;.c:()Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;` @kind virtual;
  #L4820fa.  v0:= temp @kind object;
  #L4820fc.  v3.`com.google.crypto.tink.shaded.protobuf.l0$d.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$h` := v0 @kind object;
  #L482100.  call temp:= `size`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L482106.  v0:= temp;
  #L482108.  v3.`com.google.crypto.tink.shaded.protobuf.l0$d.c` @type ^`int` := v0;
  #L48210c.  v0:= 0I;
  #L48210e.  v3.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int` := v0;
  #L482112.  v3.`com.google.crypto.tink.shaded.protobuf.l0$d.e` @type ^`int` := v0;
  #L482116.  return @kind void;
}
procedure `int` `c`(`com.google.crypto.tink.shaded.protobuf.l0$d` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.c:([BII)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L481fa0.  v0:= v7;
  #L481fa2.  if v0 <= 0 then goto L481fea;
  #L481fa6.  call `a`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.a:()V` @kind direct;
  #L481fac.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.l0$d.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$h` @kind object;
  #L481fb0.  if v1 != 0 then goto L481fb6;
  #L481fb4.  goto L481fea;
  #L481fb6.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.l0$d.c` @type ^`int`;
  #L481fba.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int`;
  #L481fbe.  v1:= v1 - v2 @kind int;
  #L481fc0.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L481fc6.  v1:= temp;
  #L481fc8.  if v5 == 0 then goto L481fdc;
  #L481fcc.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.l0$d.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$h` @kind object;
  #L481fd0.  v3:= v4.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int`;
  #L481fd4.  call `copyTo`(v2, v5, v3, v6, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyTo:([BIII)V` @kind virtual;
  #L481fda.  v6:= v6 + v1 @kind int;
  #L481fdc.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int`;
  #L481fe0.  v2:= v2 + v1 @kind int;
  #L481fe2.  v4.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int` := v2;
  #L481fe6.  v0:= v0 - v1 @kind int;
  #L481fe8.  goto L481fa2;
  #L481fea.  v7:= v7 - v0 @kind int;
  #L481fec.  return v7;
}
procedure `int` `available`(`com.google.crypto.tink.shaded.protobuf.l0$d` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L481ef4.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.e` @type ^`int`;
  #L481ef8.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int`;
  #L481efc.  v0:= v0 + v1 @kind int;
  #L481efe.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.l0$d.g` @type ^`com.google.crypto.tink.shaded.protobuf.l0` @kind object;
  #L481f02.  call temp:= `size`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.size:()I` @kind virtual;
  #L481f08.  v1:= temp;
  #L481f0a.  v1:= v1 - v0 @kind int;
  #L481f0c.  return v1;
}
procedure `void` `mark`(`com.google.crypto.tink.shaded.protobuf.l0$d` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.mark:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L482128.  v2:= v1.`com.google.crypto.tink.shaded.protobuf.l0$d.e` @type ^`int`;
  #L48212c.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int`;
  #L482130.  v2:= v2 + v0 @kind int;
  #L482132.  v1.`com.google.crypto.tink.shaded.protobuf.l0$d.f` @type ^`int` := v2;
  #L482136.  return @kind void;
}
procedure `boolean` `markSupported`(`com.google.crypto.tink.shaded.protobuf.l0$d` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.markSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L481ee0.  v0:= 1I;
  #L481ee2.  return v0;
}
procedure `int` `read`(`com.google.crypto.tink.shaded.protobuf.l0$d` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L481f20.  call `a`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.a:()V` @kind direct;
  #L481f26.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.l0$d.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$h` @kind object;
  #L481f2a.  if v0 != 0 then goto L481f32;
  #L481f2e.  v0:= -1I;
  #L481f30.  return v0;
  #L481f32.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int`;
  #L481f36.  v2:= v1 + 1;
  #L481f3a.  v3.`com.google.crypto.tink.shaded.protobuf.l0$d.d` @type ^`int` := v2;
  #L481f3e.  call temp:= `byteAt`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.byteAt:(I)B` @kind virtual;
  #L481f44.  v0:= temp;
  #L481f46.  v0:= v0 ^& 255;
  #L481f4a.  return v0;
}
procedure `int` `read`(`com.google.crypto.tink.shaded.protobuf.l0$d` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L481f5c.  if v2 == 0 then goto L481f8c;
  #L481f60.  if v3 < 0 then goto L481f80;
  #L481f64.  if v4 < 0 then goto L481f80;
  #L481f68.  v0:= length @variable v2;
  #L481f6a.  v0:= v0 - v3 @kind int;
  #L481f6c.  if v4 > v0 then goto L481f80;
  #L481f70.  call temp:= `c`(v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.c:([BII)I` @kind direct;
  #L481f76.  v2:= temp;
  #L481f78.  if v2 != 0 then goto L481f7e;
  #L481f7c.  v2:= -1I;
  #L481f7e.  return v2;
  #L481f80.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L481f84.  call `<init>`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L481f8a.  throw v2;
  #L481f8c.  v2:= 0I;
  #L481f8e.  throw v2;
}
procedure `void` `reset`(`com.google.crypto.tink.shaded.protobuf.l0$d` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L482148.  @monitorenter v3
  #L48214a.  call `b`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.b:()V` @kind direct;
  #L482150.  v0:= 0I;
  #L482152.  v1:= 0I;
  #L482154.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.l0$d.f` @type ^`int`;
  #L482158.  call temp:= `c`(v3, v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.c:([BII)I` @kind direct;
  #L48215e.  @monitorexit v3
  #L482160.  return @kind void;
  #L482162.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L482164.  @monitorexit v3
  #L482166.  throw v0;
  catch `java.lang.Throwable` @[L48214a..L48215e] goto L482162;
}
procedure `long` `skip`(`com.google.crypto.tink.shaded.protobuf.l0$d` v3 @kind this, `long` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L482000.  v0:= 0L;
  #L482004.  v2:= lcmp(v4, v0);
  #L482008.  if v2 < 0 then goto L48202e;
  #L48200c.  v0:= 2147483647L;
  #L482012.  v2:= lcmp(v4, v0);
  #L482016.  if v2 <= 0 then goto L48201c;
  #L48201a.  v4:= v0 @kind wide;
  #L48201c.  v0:= 0I;
  #L48201e.  v1:= 0I;
  #L482020.  v5:= (`int`) v4 @kind l2i;
  #L482022.  call temp:= `c`(v3, v0, v1, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.c:([BII)I` @kind direct;
  #L482028.  v4:= temp;
  #L48202a.  v4:= (`long`) v4 @kind i2l;
  #L48202c.  return v4 @kind wide;
  #L48202e.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L482032.  call `<init>`(v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L482038.  throw v4;
}
