record `com.google.crypto.tink.shaded.protobuf.ByteString$i` @kind class @AccessFlag  extends `com.google.crypto.tink.shaded.protobuf.ByteString$h` @kind class {
  `byte`[] `com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @AccessFlag PROTECTED_FINAL;
}
global `long` `@@com.google.crypto.tink.shaded.protobuf.ByteString$i.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L45e730.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;.<init>:()V` @kind direct;
  #L45e736.  if v1 == 0 then goto L45e740;
  #L45e73a.  v0.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] := v1 @kind object;
  #L45e73e.  return @kind void;
  #L45e740.  v1:= 0I;
  #L45e742.  throw v1;
}
procedure `java.nio.ByteBuffer` `asReadOnlyByteBuffer`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L45e6d4.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e6d8.  call temp:= `o`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L45e6de.  v1:= temp;
  #L45e6e0.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L45e6e6.  v2:= temp;
  #L45e6e8.  call temp:= `wrap`(v0, v1, v2) @signature `Ljava/nio/ByteBuffer;.wrap:([BII)Ljava/nio/ByteBuffer;` @kind static;
  #L45e6ee.  v0:= temp @kind object;
  #L45e6f0.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L45e6f6.  v0:= temp @kind object;
  #L45e6f8.  return v0 @kind object;
}
procedure `java.util.List` `asReadOnlyByteBufferList`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.asReadOnlyByteBufferList:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L45e70c.  call temp:= `asReadOnlyByteBuffer`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L45e712.  v0:= temp @kind object;
  #L45e714.  call temp:= `singletonList`(v0) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L45e71a.  v0:= temp @kind object;
  #L45e71c.  return v0 @kind object;
}
procedure `byte` `byteAt`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.byteAt:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45e548.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e54c.  v2:= v0[v2] @kind byte;
  #L45e550.  return v2;
}
procedure `void` `copyTo`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.copyTo:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L45e754.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e758.  call temp:= `o`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L45e75e.  v1:= temp;
  #L45e760.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L45e766.  v2:= temp;
  #L45e768.  call temp:= `put`(v4, v0, v1, v2) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L45e76e.  return @kind void;
}
procedure `void` `copyToInternal`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.copyToInternal:([BIII)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L45e780.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e784.  call `arraycopy`(v0, v3, v2, v4, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L45e78a.  return @kind void;
}
procedure `byte` `e`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.e:(I)B` @AccessFlag  {
    temp;
    v0;

  #L45e564.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e568.  v2:= v0[v2] @kind byte;
  #L45e56c.  return v2;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45e35c.  v0:= 1I;
  #L45e35e.  if v5 != v4 then goto L45e364;
  #L45e362.  return v0;
  #L45e364.  v1:= instanceof @variable v5 @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind boolean;
  #L45e368.  v2:= 0I;
  #L45e36a.  if v1 != 0 then goto L45e370;
  #L45e36e.  return v2;
  #L45e370.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L45e376.  v1:= temp;
  #L45e378.  v3:= v5 @kind object;
  #L45e37a.  v3:= (`com.google.crypto.tink.shaded.protobuf.ByteString`) v3 @kind object;
  #L45e37e.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45e384.  v3:= temp;
  #L45e386.  if v1 == v3 then goto L45e38c;
  #L45e38a.  return v2;
  #L45e38c.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L45e392.  v1:= temp;
  #L45e394.  if v1 != 0 then goto L45e39a;
  #L45e398.  return v0;
  #L45e39a.  v0:= instanceof @variable v5 @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$i` @kind boolean;
  #L45e39e.  if v0 == 0 then goto L45e3d6;
  #L45e3a2.  v5:= (`com.google.crypto.tink.shaded.protobuf.ByteString$i`) v5 @kind object;
  #L45e3a6.  call temp:= `peekCachedHashCode`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.peekCachedHashCode:()I` @kind virtual;
  #L45e3ac.  v0:= temp;
  #L45e3ae.  call temp:= `peekCachedHashCode`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.peekCachedHashCode:()I` @kind virtual;
  #L45e3b4.  v1:= temp;
  #L45e3b6.  if v0 == 0 then goto L45e3c4;
  #L45e3ba.  if v1 == 0 then goto L45e3c4;
  #L45e3be.  if v0 == v1 then goto L45e3c4;
  #L45e3c2.  return v2;
  #L45e3c4.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L45e3ca.  v0:= temp;
  #L45e3cc.  call temp:= `n`(v4, v5, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.n:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;II)Z` @kind virtual;
  #L45e3d2.  v5:= temp;
  #L45e3d4.  return v5;
  #L45e3d6.  call temp:= `equals`(v5, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45e3dc.  v5:= temp;
  #L45e3de.  return v5;
}
procedure `boolean` `isValidUtf8`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.isValidUtf8:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L45e518.  call temp:= `o`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L45e51e.  v0:= temp;
  #L45e520.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e524.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L45e52a.  v2:= temp;
  #L45e52c.  v2:= v2 + v0 @kind int;
  #L45e52e.  call temp:= `u`(v1, v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.u:([BII)Z` @kind static;
  #L45e534.  v0:= temp;
  #L45e536.  return v0;
}
procedure `void` `m`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteOutput` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.m:(Lcom/google/crypto/tink/shaded/protobuf/ByteOutput;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L45e79c.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e7a0.  call temp:= `o`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L45e7a6.  v1:= temp;
  #L45e7a8.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L45e7ae.  v2:= temp;
  #L45e7b0.  call `writeLazy`(v4, v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteOutput;.writeLazy:([BII)V` @kind virtual;
  #L45e7b6.  return @kind void;
}
procedure `boolean` `n`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v5 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.n:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;II)Z` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L45e3f0.  call temp:= `size`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45e3f6.  v0:= temp;
  #L45e3f8.  if v8 > v0 then goto L45e4ca;
  #L45e3fc.  v0:= v7 + v8 @kind int;
  #L45e400.  call temp:= `size`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45e406.  v1:= temp;
  #L45e408.  if v0 > v1 then goto L45e478;
  #L45e40c.  v1:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$i` @kind boolean;
  #L45e410.  v2:= 0I;
  #L45e412.  if v1 == 0 then goto L45e45e;
  #L45e416.  v6:= (`com.google.crypto.tink.shaded.protobuf.ByteString$i`) v6 @kind object;
  #L45e41a.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e41e.  v1:= v6.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e422.  call temp:= `o`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L45e428.  v3:= temp;
  #L45e42a.  v3:= v3 + v8 @kind int;
  #L45e42c.  call temp:= `o`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L45e432.  v8:= temp;
  #L45e434.  call temp:= `o`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L45e43a.  v6:= temp;
  #L45e43c.  v6:= v6 + v7 @kind int;
  #L45e43e.  if v8 >= v3 then goto L45e45a;
  #L45e442.  v7:= v0[v8] @kind byte;
  #L45e446.  v4:= v1[v6] @kind byte;
  #L45e44a.  if v7 == v4 then goto L45e450;
  #L45e44e.  return v2;
  #L45e450.  v8:= v8 + 1;
  #L45e454.  v6:= v6 + 1;
  #L45e458.  goto L45e43e;
  #L45e45a.  v6:= 1I;
  #L45e45c.  return v6;
  #L45e45e.  call temp:= `substring`(v6, v7, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L45e464.  v6:= temp @kind object;
  #L45e466.  call temp:= `substring`(v5, v2, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L45e46c.  v7:= temp @kind object;
  #L45e46e.  call temp:= `equals`(v6, v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45e474.  v6:= temp;
  #L45e476.  return v6;
  #L45e478.  v0:= new `java.lang.IllegalArgumentException`;
  #L45e47c.  v1:= new `java.lang.StringBuilder`;
  #L45e480.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45e486.  v2:= "Ran off end of other: " @kind object;
  #L45e48a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e490.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e496.  v7:= ", " @kind object;
  #L45e49a.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e4a0.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e4a6.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e4ac.  call temp:= `size`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45e4b2.  v6:= temp;
  #L45e4b4.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e4ba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45e4c0.  v6:= temp @kind object;
  #L45e4c2.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45e4c8.  throw v0;
  #L45e4ca.  v6:= new `java.lang.IllegalArgumentException`;
  #L45e4ce.  v7:= new `java.lang.StringBuilder`;
  #L45e4d2.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45e4d8.  v0:= "Length too large: " @kind object;
  #L45e4dc.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e4e2.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e4e8.  call temp:= `size`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L45e4ee.  v8:= temp;
  #L45e4f0.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e4f6.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45e4fc.  v7:= temp @kind object;
  #L45e4fe.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45e504.  throw v6;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newCodedInput`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.newCodedInput:()Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45e5c4.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e5c8.  call temp:= `o`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L45e5ce.  v1:= temp;
  #L45e5d0.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L45e5d6.  v2:= temp;
  #L45e5d8.  v3:= 1I;
  #L45e5da.  call temp:= `c`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.c:([BIIZ)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L45e5e0.  v0:= temp @kind object;
  #L45e5e2.  return v0 @kind object;
}
procedure `java.io.InputStream` `newInput`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.newInput:()Ljava/io/InputStream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45e674.  v0:= new `java.io.ByteArrayInputStream`;
  #L45e678.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e67c.  call temp:= `o`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L45e682.  v2:= temp;
  #L45e684.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L45e68a.  v3:= temp;
  #L45e68c.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/io/ByteArrayInputStream;.<init>:([BII)V` @kind direct;
  #L45e692.  return v0 @kind object;
}
procedure `int` `o`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L45e5f4.  v0:= 0I;
  #L45e5f6.  return v0;
}
procedure `int` `partialHash`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.partialHash:(III)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L45e608.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e60c.  call temp:= `o`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L45e612.  v1:= temp;
  #L45e614.  v1:= v1 + v4 @kind int;
  #L45e616.  call temp:= `e`(v3, v0, v1, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.e:(I[BII)I` @kind static;
  #L45e61c.  v3:= temp;
  #L45e61e.  return v3;
}
procedure `int` `partialIsValidUtf8`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.partialIsValidUtf8:(III)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L45e630.  call temp:= `o`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L45e636.  v0:= temp;
  #L45e638.  v0:= v0 + v3 @kind int;
  #L45e63a.  v3:= v1.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e63e.  v4:= v4 + v0 @kind int;
  #L45e640.  call temp:= `w`(v2, v3, v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.w:(I[BII)I` @kind static;
  #L45e646.  v2:= temp;
  #L45e648.  return v2;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45e65c.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e660.  v0:= length @variable v0;
  #L45e662.  return v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `substring`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L45e580.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L45e586.  v0:= temp;
  #L45e588.  call temp:= `d`(v4, v5, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.d:(III)I` @kind static;
  #L45e58e.  v5:= temp;
  #L45e590.  if v5 != 0 then goto L45e59a;
  #L45e594.  v4:= `@@com.google.crypto.tink.shaded.protobuf.ByteString.EMPTY` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L45e598.  return v4 @kind object;
  #L45e59a.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$e`;
  #L45e59e.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e5a2.  call temp:= `o`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L45e5a8.  v2:= temp;
  #L45e5aa.  v2:= v2 + v4 @kind int;
  #L45e5ac.  call `<init>`(v0, v1, v2, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$e;.<init>:([BII)V` @kind direct;
  #L45e5b2.  return v0 @kind object;
}
procedure `java.lang.String` `toStringInternal`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v4 @kind this, `java.nio.charset.Charset` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.toStringInternal:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45e6a4.  v0:= new `java.lang.String`;
  #L45e6a8.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.ByteString$i.d` @type ^`byte`[] @kind object;
  #L45e6ac.  call temp:= `o`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.o:()I` @kind virtual;
  #L45e6b2.  v2:= temp;
  #L45e6b4.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.size:()I` @kind virtual;
  #L45e6ba.  v3:= temp;
  #L45e6bc.  call `<init>`(v0, v1, v2, v3, v5) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L45e6c2.  return v0 @kind object;
}
procedure `void` `writeTo`(`com.google.crypto.tink.shaded.protobuf.ByteString$i` v1 @kind this, `java.io.OutputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.writeTo:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L45e7c8.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L45e7ce.  v0:= temp @kind object;
  #L45e7d0.  call `write`(v2, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L45e7d6.  return @kind void;
}
