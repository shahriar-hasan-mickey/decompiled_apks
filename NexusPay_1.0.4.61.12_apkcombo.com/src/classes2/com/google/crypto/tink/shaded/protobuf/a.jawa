record `com.google.crypto.tink.shaded.protobuf.a` @kind class @AccessFlag ABSTRACT extends `java.util.AbstractList` @kind class, `com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList` @kind interface {
  `boolean` `com.google.crypto.tink.shaded.protobuf.a.a` @AccessFlag PRIVATE;
}
global `int` `@@com.google.crypto.tink.shaded.protobuf.a.DEFAULT_CAPACITY` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.a` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L459b04.  call `<init>`(v1) @signature `Ljava/util/AbstractList;.<init>:()V` @kind direct;
  #L459b0a.  v0:= 1I;
  #L459b0c.  v1.`com.google.crypto.tink.shaded.protobuf.a.a` @type ^`boolean` := v0 @kind boolean;
  #L459b10.  return @kind void;
}
procedure `void` `add`(`int` v0 , `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `add`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L459970.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L459976.  call temp:= `add`(v0, v1) @signature `Ljava/util/AbstractList;.add:(Ljava/lang/Object;)Z` @kind super;
  #L45997c.  v1:= temp;
  #L45997e.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L459990.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L459996.  call temp:= `addAll`(v0, v1, v2) @signature `Ljava/util/AbstractList;.addAll:(ILjava/util/Collection;)Z` @kind super;
  #L45999c.  v1:= temp;
  #L45999e.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L4599b0.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L4599b6.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/AbstractList;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L4599bc.  v1:= temp;
  #L4599be.  return v1;
}
procedure `void` `clear`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.clear:()V` @AccessFlag PUBLIC {
    temp;

  #L459b24.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L459b2a.  call `clear`(v0) @signature `Ljava/util/AbstractList;.clear:()V` @kind super;
  #L459b30.  return @kind void;
}
procedure `void` `ensureIsMutable`(`com.google.crypto.tink.shaded.protobuf.a` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L459b44.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.a.a` @type ^`boolean` @kind boolean;
  #L459b48.  if v0 == 0 then goto L459b4e;
  #L459b4c.  return @kind void;
  #L459b4e.  v0:= new `java.lang.UnsupportedOperationException`;
  #L459b52.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L459b58.  throw v0;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.a` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4599d0.  v0:= 1I;
  #L4599d2.  if v7 != v6 then goto L4599d8;
  #L4599d6.  return v0;
  #L4599d8.  v1:= instanceof @variable v7 @type ^`java.util.List` @kind boolean;
  #L4599dc.  v2:= 0I;
  #L4599de.  if v1 != 0 then goto L4599e4;
  #L4599e2.  return v2;
  #L4599e4.  v1:= instanceof @variable v7 @type ^`java.util.RandomAccess` @kind boolean;
  #L4599e8.  if v1 != 0 then goto L4599f6;
  #L4599ec.  call temp:= `equals`(v6, v7) @signature `Ljava/util/AbstractList;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L4599f2.  v7:= temp;
  #L4599f4.  return v7;
  #L4599f6.  v7:= (`java.util.List`) v7 @kind object;
  #L4599fa.  call temp:= `size`(v6) @signature `Ljava/util/AbstractList;.size:()I` @kind virtual;
  #L459a00.  v1:= temp;
  #L459a02.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L459a08.  v3:= temp;
  #L459a0a.  if v1 == v3 then goto L459a10;
  #L459a0e.  return v2;
  #L459a10.  v3:= 0I;
  #L459a12.  if v3 >= v1 then goto L459a3a;
  #L459a16.  call temp:= `get`(v6, v3) @signature `Ljava/util/AbstractList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L459a1c.  v4:= temp @kind object;
  #L459a1e.  call temp:= `get`(v7, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L459a24.  v5:= temp @kind object;
  #L459a26.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L459a2c.  v4:= temp;
  #L459a2e.  if v4 != 0 then goto L459a34;
  #L459a32.  return v2;
  #L459a34.  v3:= v3 + 1;
  #L459a38.  goto L459a12;
  #L459a3a.  return v0;
}
procedure `int` `hashCode`(`com.google.crypto.tink.shaded.protobuf.a` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L459ac4.  call temp:= `size`(v4) @signature `Ljava/util/AbstractList;.size:()I` @kind virtual;
  #L459aca.  v0:= temp;
  #L459acc.  v1:= 1I;
  #L459ace.  v2:= 0I;
  #L459ad0.  if v2 >= v0 then goto L459af0;
  #L459ad4.  v1:= v1 * 31;
  #L459ad8.  call temp:= `get`(v4, v2) @signature `Ljava/util/AbstractList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L459ade.  v3:= temp @kind object;
  #L459ae0.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L459ae6.  v3:= temp;
  #L459ae8.  v1:= v1 + v3 @kind int;
  #L459aea.  v2:= v2 + 1;
  #L459aee.  goto L459ad0;
  #L459af0.  return v1;
}
procedure `boolean` `isModifiable`(`com.google.crypto.tink.shaded.protobuf.a` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.isModifiable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459a4c.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.a.a` @type ^`boolean` @kind boolean;
  #L459a50.  return v0;
}
procedure `void` `makeImmutable`(`com.google.crypto.tink.shaded.protobuf.a` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.makeImmutable:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L459b6c.  v0:= 0I;
  #L459b6e.  v1.`com.google.crypto.tink.shaded.protobuf.a.a` @type ^`boolean` := v0 @kind boolean;
  #L459b72.  return @kind void;
}
procedure `java.lang.Object` `remove`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `remove`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L459a64.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L459a6a.  call temp:= `remove`(v0, v1) @signature `Ljava/util/AbstractList;.remove:(Ljava/lang/Object;)Z` @kind super;
  #L459a70.  v1:= temp;
  #L459a72.  return v1;
}
procedure `boolean` `removeAll`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L459a84.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L459a8a.  call temp:= `removeAll`(v0, v1) @signature `Ljava/util/AbstractList;.removeAll:(Ljava/util/Collection;)Z` @kind super;
  #L459a90.  v1:= temp;
  #L459a92.  return v1;
}
procedure `boolean` `retainAll`(`com.google.crypto.tink.shaded.protobuf.a` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L459aa4.  call `ensureIsMutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L459aaa.  call temp:= `retainAll`(v0, v1) @signature `Ljava/util/AbstractList;.retainAll:(Ljava/util/Collection;)Z` @kind super;
  #L459ab0.  v1:= temp;
  #L459ab2.  return v1;
}
procedure `java.lang.Object` `set`(`int` v0 , `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
