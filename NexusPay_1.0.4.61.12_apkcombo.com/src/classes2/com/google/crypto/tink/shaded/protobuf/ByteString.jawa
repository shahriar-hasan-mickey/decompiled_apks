record `com.google.crypto.tink.shaded.protobuf.ByteString` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Iterable` @kind interface, `java.io.Serializable` @kind interface {
  `int` `com.google.crypto.tink.shaded.protobuf.ByteString.a` @AccessFlag PRIVATE;
}
global `com.google.crypto.tink.shaded.protobuf.ByteString` `@@com.google.crypto.tink.shaded.protobuf.ByteString.EMPTY` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.shaded.protobuf.ByteString$f` `@@com.google.crypto.tink.shaded.protobuf.ByteString.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Comparator` `@@com.google.crypto.tink.shaded.protobuf.ByteString.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L45f44c.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$i`;
  #L45f450.  v1:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L45f454.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @kind direct;
  #L45f45a.  `@@com.google.crypto.tink.shaded.protobuf.ByteString.EMPTY` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` := v0 @kind object;
  #L45f45e.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/b;.c:()Z` @kind static;
  #L45f464.  v0:= temp;
  #L45f466.  v1:= 0I;
  #L45f468.  if v0 == 0 then goto L45f478;
  #L45f46c.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$j`;
  #L45f470.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$j;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString$a;)V` @kind direct;
  #L45f476.  goto L45f482;
  #L45f478.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$d`;
  #L45f47c.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$d;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString$a;)V` @kind direct;
  #L45f482.  `@@com.google.crypto.tink.shaded.protobuf.ByteString.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$f` := v0 @kind object;
  #L45f486.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$b`;
  #L45f48a.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$b;.<init>:()V` @kind direct;
  #L45f490.  `@@com.google.crypto.tink.shaded.protobuf.ByteString.c` @type ^`java.util.Comparator` := v0 @kind object;
  #L45f494.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L45f4a8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45f4ae.  v0:= 0I;
  #L45f4b0.  v1.`com.google.crypto.tink.shaded.protobuf.ByteString.a` @type ^`int` := v0;
  #L45f4b4.  return @kind void;
}
procedure `int` `a`(`byte` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.a:(B)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L45f154.  call temp:= `h`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.h:(B)I` @kind static;
  #L45f15a.  v0:= temp;
  #L45f15c.  return v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `b`(`java.util.Iterator` v2 @kind object, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.b:(Ljava/util/Iterator;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L45ece4.  v0:= 1I;
  #L45ece6.  if v3 < v0 then goto L45ed1c;
  #L45ecea.  if v3 != v0 then goto L45ecfc;
  #L45ecee.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L45ecf4.  v2:= temp @kind object;
  #L45ecf6.  v2:= (`com.google.crypto.tink.shaded.protobuf.ByteString`) v2 @kind object;
  #L45ecfa.  goto L45ed1a;
  #L45ecfc.  v0:= v3 ^>> 1;
  #L45ed00.  call temp:= `b`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.b:(Ljava/util/Iterator;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L45ed06.  v1:= temp @kind object;
  #L45ed08.  v3:= v3 - v0 @kind int;
  #L45ed0a.  call temp:= `b`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.b:(Ljava/util/Iterator;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L45ed10.  v2:= temp @kind object;
  #L45ed12.  call temp:= `concat`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.concat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L45ed18.  v2:= temp @kind object;
  #L45ed1a.  return v2 @kind object;
  #L45ed1c.  v2:= new `java.lang.IllegalArgumentException`;
  #L45ed20.  v0:= new `java.lang.Object`[v0];
  #L45ed24.  v1:= 0I;
  #L45ed26.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45ed2c.  v3:= temp @kind object;
  #L45ed2e.  v0[v1]:= v3 @kind object;
  #L45ed32.  v3:= "length (%s) must be >= 1" @kind object;
  #L45ed36.  call temp:= `format`(v3, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L45ed3c.  v3:= temp @kind object;
  #L45ed3e.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ed44.  throw v2;
}
procedure `void` `c`(`int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.c:(II)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45f4c8.  v0:= v3 + 1;
  #L45f4cc.  v0:= v4 - v0 @kind int;
  #L45f4d0.  v0:= v0 ^| v3 @kind int;
  #L45f4d2.  if v0 >= 0 then goto L45f546;
  #L45f4d6.  if v3 >= 0 then goto L45f508;
  #L45f4da.  v4:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L45f4de.  v0:= new `java.lang.StringBuilder`;
  #L45f4e2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45f4e8.  v1:= "Index < 0: " @kind object;
  #L45f4ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f4f2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f4f8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45f4fe.  v3:= temp @kind object;
  #L45f500.  call `<init>`(v4, v3) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f506.  throw v4;
  #L45f508.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L45f50c.  v1:= new `java.lang.StringBuilder`;
  #L45f510.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45f516.  v2:= "Index > length: " @kind object;
  #L45f51a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f520.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f526.  v3:= ", " @kind object;
  #L45f52a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f530.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f536.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45f53c.  v3:= temp @kind object;
  #L45f53e.  call `<init>`(v0, v3) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f544.  throw v0;
  #L45f546.  return @kind void;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFrom`(`java.lang.Iterable` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/lang/Iterable;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45ee30.  v0:= instanceof @variable v3 @type ^`java.util.Collection` @kind boolean;
  #L45ee34.  if v0 != 0 then goto L45ee5a;
  #L45ee38.  v0:= 0I;
  #L45ee3a.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L45ee40.  v1:= temp @kind object;
  #L45ee42.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L45ee48.  v2:= temp;
  #L45ee4a.  if v2 == 0 then goto L45ee68;
  #L45ee4e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L45ee54.  v0:= v0 + 1;
  #L45ee58.  goto L45ee42;
  #L45ee5a.  v0:= v3 @kind object;
  #L45ee5c.  v0:= (`java.util.Collection`) v0 @kind object;
  #L45ee60.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L45ee66.  v0:= temp;
  #L45ee68.  if v0 != 0 then goto L45ee72;
  #L45ee6c.  v3:= `@@com.google.crypto.tink.shaded.protobuf.ByteString.EMPTY` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L45ee70.  return v3 @kind object;
  #L45ee72.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L45ee78.  v3:= temp @kind object;
  #L45ee7a.  call temp:= `b`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.b:(Ljava/util/Iterator;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L45ee80.  v3:= temp @kind object;
  #L45ee82.  return v3 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFrom`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ee94.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$i`;
  #L45ee98.  call temp:= `getBytes`(v1, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L45ee9e.  v1:= temp @kind object;
  #L45eea0.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @kind direct;
  #L45eea6.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFrom`(`java.lang.String` v1 @kind object, `java.nio.charset.Charset` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/lang/String;Ljava/nio/charset/Charset;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45eeb8.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$i`;
  #L45eebc.  call temp:= `getBytes`(v1, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L45eec2.  v1:= temp @kind object;
  #L45eec4.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @kind direct;
  #L45eeca.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFrom`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45eedc.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L45eee2.  v0:= temp;
  #L45eee4.  call temp:= `copyFrom`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/nio/ByteBuffer;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L45eeea.  v1:= temp @kind object;
  #L45eeec.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFrom`(`java.nio.ByteBuffer` v2 @kind object, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/nio/ByteBuffer;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45ef00.  call temp:= `remaining`(v2) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L45ef06.  v0:= temp;
  #L45ef08.  v1:= 0I;
  #L45ef0a.  call temp:= `d`(v1, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.d:(III)I` @kind static;
  #L45ef10.  v3:= new `byte`[v3];
  #L45ef14.  call temp:= `get`(v2, v3) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L45ef1a.  v2:= new `com.google.crypto.tink.shaded.protobuf.ByteString$i`;
  #L45ef1e.  call `<init>`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @kind direct;
  #L45ef24.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFrom`(`byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45eddc.  v0:= length @variable v2;
  #L45edde.  v1:= 0I;
  #L45ede0.  call temp:= `copyFrom`(v2, v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([BII)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L45ede6.  v2:= temp @kind object;
  #L45ede8.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFrom`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([BII)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45edfc.  v0:= v3 + v4 @kind int;
  #L45ee00.  v1:= length @variable v2;
  #L45ee02.  call temp:= `d`(v3, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.d:(III)I` @kind static;
  #L45ee08.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$i`;
  #L45ee0c.  v1:= `@@com.google.crypto.tink.shaded.protobuf.ByteString.b` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString$f` @kind object;
  #L45ee10.  call temp:= `a`(v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$f;.a:([BII)[B` @kind interface;
  #L45ee16.  v2:= temp @kind object;
  #L45ee18.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @kind direct;
  #L45ee1e.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `copyFromUtf8`(`java.lang.String` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFromUtf8:(Ljava/lang/String;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45ef38.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$i`;
  #L45ef3c.  v1:= `@@com.google.crypto.tink.shaded.protobuf.Internal.a` @type ^`java.nio.charset.Charset` @kind object;
  #L45ef40.  call temp:= `getBytes`(v2, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L45ef46.  v2:= temp @kind object;
  #L45ef48.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @kind direct;
  #L45ef4e.  return v0 @kind object;
}
procedure `int` `d`(`int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.d:(III)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45f170.  v0:= v4 - v3 @kind int;
  #L45f174.  v1:= v3 ^| v4 @kind int;
  #L45f178.  v1:= v1 ^| v0 @kind int;
  #L45f17a.  v2:= v5 - v4 @kind int;
  #L45f17e.  v1:= v1 ^| v2 @kind int;
  #L45f180.  if v1 >= 0 then goto L45f240;
  #L45f184.  if v3 < 0 then goto L45f208;
  #L45f188.  if v4 >= v3 then goto L45f1ca;
  #L45f18c.  v5:= new `java.lang.IndexOutOfBoundsException`;
  #L45f190.  v0:= new `java.lang.StringBuilder`;
  #L45f194.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45f19a.  v1:= "Beginning index larger than ending index: " @kind object;
  #L45f19e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f1a4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f1aa.  v3:= ", " @kind object;
  #L45f1ae.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f1b4.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f1ba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45f1c0.  v3:= temp @kind object;
  #L45f1c2.  call `<init>`(v5, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f1c8.  throw v5;
  #L45f1ca.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L45f1ce.  v0:= new `java.lang.StringBuilder`;
  #L45f1d2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45f1d8.  v1:= "End index: " @kind object;
  #L45f1dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f1e2.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f1e8.  v4:= " >= " @kind object;
  #L45f1ec.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f1f2.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f1f8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45f1fe.  v4:= temp @kind object;
  #L45f200.  call `<init>`(v3, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f206.  throw v3;
  #L45f208.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L45f20c.  v5:= new `java.lang.StringBuilder`;
  #L45f210.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45f216.  v0:= "Beginning index: " @kind object;
  #L45f21a.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f220.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f226.  v3:= " < 0" @kind object;
  #L45f22a.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f230.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45f236.  v3:= temp @kind object;
  #L45f238.  call `<init>`(v4, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f23e.  throw v4;
  #L45f240.  return v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString$g` `f`(`int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.f:(I)Lcom/google/crypto/tink/shaded/protobuf/ByteString$g;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L45f0f8.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$g`;
  #L45f0fc.  v1:= 0I;
  #L45f0fe.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$g;.<init>:(ILcom/google/crypto/tink/shaded/protobuf/ByteString$a;)V` @kind direct;
  #L45f104.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `g`(`java.io.InputStream` v5 @kind object, `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.g:(Ljava/io/InputStream;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L45ef60.  v0:= new `byte`[v6];
  #L45ef64.  v1:= 0I;
  #L45ef66.  v2:= 0I;
  #L45ef68.  if v2 >= v6 then goto L45ef84;
  #L45ef6c.  v3:= v6 - v2 @kind int;
  #L45ef70.  call temp:= `read`(v5, v0, v2, v3) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L45ef76.  v3:= temp;
  #L45ef78.  v4:= -1I;
  #L45ef7a.  if v3 != v4 then goto L45ef80;
  #L45ef7e.  goto L45ef84;
  #L45ef80.  v2:= v2 + v3 @kind int;
  #L45ef82.  goto L45ef68;
  #L45ef84.  if v2 != 0 then goto L45ef8c;
  #L45ef88.  v5:= 0I;
  #L45ef8a.  return v5 @kind object;
  #L45ef8c.  call temp:= `copyFrom`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([BII)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L45ef92.  v5:= temp @kind object;
  #L45ef94.  return v5 @kind object;
}
procedure `int` `h`(`byte` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.h:(B)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L45f2a4.  v0:= v0 ^& 255;
  #L45f2a8.  return v0;
}
procedure `java.lang.String` `i`(`com.google.crypto.tink.shaded.protobuf.ByteString` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.i:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L45f3b4.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45f3ba.  v0:= temp;
  #L45f3bc.  v1:= 50I;
  #L45f3c0.  if v0 > v1 then goto L45f3ce;
  #L45f3c4.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/q0;.a:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Ljava/lang/String;` @kind static;
  #L45f3ca.  v0:= temp @kind object;
  #L45f3cc.  goto L45f406;
  #L45f3ce.  v0:= new `java.lang.StringBuilder`;
  #L45f3d2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45f3d8.  v1:= 0I;
  #L45f3da.  v2:= 47I;
  #L45f3de.  call temp:= `substring`(v3, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L45f3e4.  v1:= temp @kind object;
  #L45f3e6.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/q0;.a:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Ljava/lang/String;` @kind static;
  #L45f3ec.  v1:= temp @kind object;
  #L45f3ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f3f4.  v1:= "..." @kind object;
  #L45f3f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45f3fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45f404.  v0:= temp @kind object;
  #L45f406.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `j`(`java.nio.ByteBuffer` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.j:(Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45f088.  call temp:= `hasArray`(v3) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L45f08e.  v0:= temp;
  #L45f090.  if v0 == 0 then goto L45f0c0;
  #L45f094.  call temp:= `arrayOffset`(v3) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L45f09a.  v0:= temp;
  #L45f09c.  call temp:= `array`(v3) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L45f0a2.  v1:= temp @kind object;
  #L45f0a4.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L45f0aa.  v2:= temp;
  #L45f0ac.  v0:= v0 + v2 @kind int;
  #L45f0ae.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L45f0b4.  v3:= temp;
  #L45f0b6.  call temp:= `l`(v1, v0, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.l:([BII)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L45f0bc.  v3:= temp @kind object;
  #L45f0be.  return v3 @kind object;
  #L45f0c0.  v0:= new `com.google.crypto.tink.shaded.protobuf.e0`;
  #L45f0c4.  call `<init>`(v0, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L45f0ca.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `k`(`byte`[] v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.k:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag STATIC {
    temp;
    v0;

  #L45f050.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$i`;
  #L45f054.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$i;.<init>:([B)V` @kind direct;
  #L45f05a.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `l`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.l:([BII)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag STATIC {
    temp;
    v0;

  #L45f06c.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$e`;
  #L45f070.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$e;.<init>:([BII)V` @kind direct;
  #L45f076.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString$Output` `newOutput`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.newOutput:()Lcom/google/crypto/tink/shaded/protobuf/ByteString$Output;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45f118.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$Output`;
  #L45f11c.  v1:= 128I;
  #L45f120.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$Output;.<init>:(I)V` @kind direct;
  #L45f126.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString$Output` `newOutput`(`int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.newOutput:(I)Lcom/google/crypto/tink/shaded/protobuf/ByteString$Output;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f138.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$Output`;
  #L45f13c.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$Output;.<init>:(I)V` @kind direct;
  #L45f142.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `readFrom`(`java.io.InputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.readFrom:(Ljava/io/InputStream;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45efa8.  v0:= 256I;
  #L45efac.  v1:= 8192I;
  #L45efb0.  call temp:= `readFrom`(v2, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.readFrom:(Ljava/io/InputStream;II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L45efb6.  v2:= temp @kind object;
  #L45efb8.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `readFrom`(`java.io.InputStream` v0 @kind object, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.readFrom:(Ljava/io/InputStream;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L45efcc.  call temp:= `readFrom`(v0, v1, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.readFrom:(Ljava/io/InputStream;II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L45efd2.  v0:= temp @kind object;
  #L45efd4.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `readFrom`(`java.io.InputStream` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.readFrom:(Ljava/io/InputStream;II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45efe8.  v0:= new `java.util.ArrayList`;
  #L45efec.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L45eff2.  call temp:= `g`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.g:(Ljava/io/InputStream;I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L45eff8.  v1:= temp @kind object;
  #L45effa.  if v1 != 0 then goto L45f008;
  #L45effe.  call temp:= `copyFrom`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/lang/Iterable;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L45f004.  v2:= temp @kind object;
  #L45f006.  return v2 @kind object;
  #L45f008.  call temp:= `add`(v0, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45f00e.  v3:= v3 * 2;
  #L45f012.  call temp:= `min`(v3, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L45f018.  v3:= temp;
  #L45f01a.  goto L45eff2;
}
procedure `java.util.Comparator` `unsignedLexicographicalComparator`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.unsignedLexicographicalComparator:()Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45f418.  v0:= `@@com.google.crypto.tink.shaded.protobuf.ByteString.c` @type ^`java.util.Comparator` @kind object;
  #L45f41c.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `asReadOnlyByteBuffer`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `asReadOnlyByteBufferList`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.asReadOnlyByteBufferList:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte` `byteAt`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.byteAt:(I)B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `concat`(`com.google.crypto.tink.shaded.protobuf.ByteString` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.concat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L45ed58.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45ed5e.  v0:= temp;
  #L45ed60.  v1:= 2147483647I;
  #L45ed66.  v1:= v1 - v0 @kind int;
  #L45ed68.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45ed6e.  v0:= temp;
  #L45ed70.  if v1 < v0 then goto L45ed7e;
  #L45ed74.  call temp:= `p`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.p:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L45ed7a.  v4:= temp @kind object;
  #L45ed7c.  return v4 @kind object;
  #L45ed7e.  v0:= new `java.lang.IllegalArgumentException`;
  #L45ed82.  v1:= new `java.lang.StringBuilder`;
  #L45ed86.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45ed8c.  v2:= "ByteString would be too long: " @kind object;
  #L45ed90.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45ed96.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45ed9c.  v2:= temp;
  #L45ed9e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45eda4.  v2:= "+" @kind object;
  #L45eda8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45edae.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45edb4.  v4:= temp;
  #L45edb6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45edbc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45edc2.  v4:= temp @kind object;
  #L45edc4.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45edca.  throw v0;
}
procedure `void` `copyTo`(`java.nio.ByteBuffer` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyTo:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `copyTo`(`com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyTo:([BI)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45f558.  call temp:= `size`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45f55e.  v0:= temp;
  #L45f560.  v1:= 0I;
  #L45f562.  call `copyTo`(v2, v3, v1, v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyTo:([BIII)V` @kind virtual;
  #L45f568.  return @kind void;
}
procedure `void` `copyTo`(`com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyTo:([BIII)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L45f57c.  v0:= v4 + v6 @kind int;
  #L45f580.  call temp:= `size`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45f586.  v1:= temp;
  #L45f588.  call temp:= `d`(v4, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.d:(III)I` @kind static;
  #L45f58e.  v0:= v5 + v6 @kind int;
  #L45f592.  v1:= length @variable v3;
  #L45f594.  call temp:= `d`(v5, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.d:(III)I` @kind static;
  #L45f59a.  if v6 <= 0 then goto L45f5a4;
  #L45f59e.  call `copyToInternal`(v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyToInternal:([BIII)V` @kind virtual;
  #L45f5a4.  return @kind void;
}
procedure `void` `copyToInternal`(`byte`[] v0 @kind object, `int` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyToInternal:([BIII)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `byte` `e`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.e:(I)B` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `endsWith`(`com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.endsWith:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L45ebf4.  call temp:= `size`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45ebfa.  v0:= temp;
  #L45ebfc.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45ec02.  v1:= temp;
  #L45ec04.  if v0 < v1 then goto L45ec32;
  #L45ec08.  call temp:= `size`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45ec0e.  v0:= temp;
  #L45ec10.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45ec16.  v1:= temp;
  #L45ec18.  v0:= v0 - v1 @kind int;
  #L45ec1a.  call temp:= `substring`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L45ec20.  v0:= temp @kind object;
  #L45ec22.  call temp:= `equals`(v0, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45ec28.  v3:= temp;
  #L45ec2a.  if v3 == 0 then goto L45ec32;
  #L45ec2e.  v3:= 1I;
  #L45ec30.  goto L45ec34;
  #L45ec32.  v3:= 0I;
  #L45ec34.  return v3;
}
procedure `boolean` `equals`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getTreeDepth`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.getTreeDepth:()I` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L45f254.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.ByteString.a` @type ^`int`;
  #L45f258.  if v0 != 0 then goto L45f278;
  #L45f25c.  call temp:= `size`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45f262.  v0:= temp;
  #L45f264.  v1:= 0I;
  #L45f266.  call temp:= `partialHash`(v2, v0, v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialHash:(III)I` @kind virtual;
  #L45f26c.  v0:= temp;
  #L45f26e.  if v0 != 0 then goto L45f274;
  #L45f272.  v0:= 1I;
  #L45f274.  v2.`com.google.crypto.tink.shaded.protobuf.ByteString.a` @type ^`int` := v0;
  #L45f278.  return v0;
}
procedure `boolean` `isBalanced`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.isBalanced:()Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L45ec48.  call temp:= `size`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45ec4e.  v0:= temp;
  #L45ec50.  if v0 != 0 then goto L45ec58;
  #L45ec54.  v0:= 1I;
  #L45ec56.  goto L45ec5a;
  #L45ec58.  v0:= 0I;
  #L45ec5a.  return v0;
}
procedure `boolean` `isValidUtf8`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.isValidUtf8:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString$ByteIterator` `iterator`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.iterator:()Lcom/google/crypto/tink/shaded/protobuf/ByteString$ByteIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45f0dc.  v0:= new `com.google.crypto.tink.shaded.protobuf.ByteString$a`;
  #L45f0e0.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$a;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @kind direct;
  #L45f0e6.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L45f430.  call temp:= `iterator`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.iterator:()Lcom/google/crypto/tink/shaded/protobuf/ByteString$ByteIterator;` @kind virtual;
  #L45f436.  v0:= temp @kind object;
  #L45f438.  return v0 @kind object;
}
procedure `void` `m`(`com.google.crypto.tink.shaded.protobuf.ByteOutput` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.m:(Lcom/google/crypto/tink/shaded/protobuf/ByteOutput;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newCodedInput`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.newCodedInput:()Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.io.InputStream` `newInput`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.newInput:()Ljava/io/InputStream;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `partialHash`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialHash:(III)I` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `partialIsValidUtf8`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialIsValidUtf8:(III)I` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `peekCachedHashCode`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.peekCachedHashCode:()I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L45f28c.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.ByteString.a` @type ^`int`;
  #L45f290.  return v0;
}
procedure `int` `size`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `startsWith`(`com.google.crypto.tink.shaded.protobuf.ByteString` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.startsWith:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L45ec6c.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45ec72.  v0:= temp;
  #L45ec74.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45ec7a.  v1:= temp;
  #L45ec7c.  v2:= 0I;
  #L45ec7e.  if v0 < v1 then goto L45eca0;
  #L45ec82.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45ec88.  v0:= temp;
  #L45ec8a.  call temp:= `substring`(v3, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L45ec90.  v0:= temp @kind object;
  #L45ec92.  call temp:= `equals`(v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45ec98.  v4:= temp;
  #L45ec9a.  if v4 == 0 then goto L45eca0;
  #L45ec9e.  v2:= 1I;
  #L45eca0.  return v2;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `substring`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L45f02c.  call temp:= `size`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45f032.  v0:= temp;
  #L45f034.  call temp:= `substring`(v1, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L45f03a.  v2:= temp @kind object;
  #L45f03c.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `substring`(`int` v0 , `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `toByteArray`(`com.google.crypto.tink.shaded.protobuf.ByteString` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L45ecb4.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45ecba.  v0:= temp;
  #L45ecbc.  if v0 != 0 then goto L45ecc6;
  #L45ecc0.  v0:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L45ecc4.  return v0 @kind object;
  #L45ecc6.  v1:= new `byte`[v0];
  #L45ecca.  v2:= 0I;
  #L45eccc.  call `copyToInternal`(v3, v1, v2, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyToInternal:([BIII)V` @kind virtual;
  #L45ecd2.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.google.crypto.tink.shaded.protobuf.ByteString` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45f2bc.  v0:= `@@java.util.Locale.ROOT` @type ^`java.util.Locale` @kind object;
  #L45f2c0.  v1:= 3I;
  #L45f2c2.  v1:= new `java.lang.Object`[v1];
  #L45f2c6.  call temp:= `identityHashCode`(v4) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L45f2cc.  v2:= temp;
  #L45f2ce.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L45f2d4.  v2:= temp @kind object;
  #L45f2d6.  v3:= 0I;
  #L45f2d8.  v1[v3]:= v2 @kind object;
  #L45f2dc.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45f2e2.  v2:= temp;
  #L45f2e4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45f2ea.  v2:= temp @kind object;
  #L45f2ec.  v3:= 1I;
  #L45f2ee.  v1[v3]:= v2 @kind object;
  #L45f2f2.  call temp:= `i`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.i:()Ljava/lang/String;` @kind direct;
  #L45f2f8.  v2:= temp @kind object;
  #L45f2fa.  v3:= 2I;
  #L45f2fc.  v1[v3]:= v2 @kind object;
  #L45f300.  v2:= "<ByteString@%s size=%d contents=\"%s\">" @kind object;
  #L45f304.  call temp:= `format`(v0, v2, v1) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L45f30a.  v0:= temp @kind object;
  #L45f30c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L45f320.  call temp:= `forName`(v3) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L45f326.  v0:= temp @kind object;
  #L45f328.  call temp:= `toString`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L45f32e.  v3:= temp @kind object;
  #L45f330.  return v3 @kind object;
  #L45f332.  v0:= Exception @type ^`java.nio.charset.UnsupportedCharsetException` @kind object;
  #L45f334.  v1:= new `java.io.UnsupportedEncodingException`;
  #L45f338.  call `<init>`(v1, v3) @signature `Ljava/io/UnsupportedEncodingException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45f33e.  call temp:= `initCause`(v1, v0) @signature `Ljava/io/UnsupportedEncodingException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L45f344.  throw v1;
  catch `java.nio.charset.UnsupportedCharsetException` @[L45f320..L45f330] goto L45f332;
}
procedure `java.lang.String` `toString`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L45f368.  call temp:= `size`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45f36e.  v0:= temp;
  #L45f370.  if v0 != 0 then goto L45f37a;
  #L45f374.  v2:= "" @kind object;
  #L45f378.  goto L45f382;
  #L45f37a.  call temp:= `toStringInternal`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toStringInternal:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L45f380.  v2:= temp @kind object;
  #L45f382.  return v2 @kind object;
}
procedure `java.lang.String` `toStringInternal`(`java.nio.charset.Charset` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toStringInternal:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toStringUtf8`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toStringUtf8:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L45f394.  v0:= `@@com.google.crypto.tink.shaded.protobuf.Internal.a` @type ^`java.nio.charset.Charset` @kind object;
  #L45f398.  call temp:= `toString`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L45f39e.  v0:= temp @kind object;
  #L45f3a0.  return v0 @kind object;
}
procedure `void` `writeTo`(`java.io.OutputStream` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.writeTo:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
