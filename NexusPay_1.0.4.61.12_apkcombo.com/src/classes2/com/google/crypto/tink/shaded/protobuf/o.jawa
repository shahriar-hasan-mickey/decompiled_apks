record `com.google.crypto.tink.shaded.protobuf.o` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.a` @kind class, `com.google.crypto.tink.shaded.protobuf.Internal$IntList` @kind interface, `java.util.RandomAccess` @kind interface, `com.google.crypto.tink.shaded.protobuf.g0` @kind interface {
  `int`[] `com.google.crypto.tink.shaded.protobuf.o.b` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.o.c` @AccessFlag PRIVATE;
}
global `com.google.crypto.tink.shaded.protobuf.o` `@@com.google.crypto.tink.shaded.protobuf.o.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L472cdc.  v0:= new `com.google.crypto.tink.shaded.protobuf.o`;
  #L472ce0.  v1:= 0I;
  #L472ce2.  v2:= new `int`[v1];
  #L472ce6.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.<init>:([II)V` @kind direct;
  #L472cec.  `@@com.google.crypto.tink.shaded.protobuf.o.d` @type ^`com.google.crypto.tink.shaded.protobuf.o` := v0 @kind object;
  #L472cf0.  call `makeImmutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.makeImmutable:()V` @kind virtual;
  #L472cf6.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.o` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L472d08.  v0:= 10I;
  #L472d0c.  v0:= new `int`[v0];
  #L472d10.  v1:= 0I;
  #L472d12.  call `<init>`(v2, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.<init>:([II)V` @kind direct;
  #L472d18.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.<init>:([II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L472d2c.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.<init>:()V` @kind direct;
  #L472d32.  v0.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] := v1 @kind object;
  #L472d36.  v0.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int` := v2;
  #L472d3a.  return @kind void;
}
procedure `void` `c`(`com.google.crypto.tink.shaded.protobuf.o` v4 @kind this, `int` v5 , `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.c:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L472de0.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L472de6.  if v5 < 0 then goto L472e5c;
  #L472dea.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472dee.  if v5 > v0 then goto L472e5c;
  #L472df2.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472df6.  v2:= length @variable v1;
  #L472df8.  if v0 >= v2 then goto L472e0a;
  #L472dfc.  v2:= v5 + 1;
  #L472e00.  v0:= v0 - v5 @kind int;
  #L472e02.  call `arraycopy`(v1, v5, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L472e08.  goto L472e3a;
  #L472e0a.  v0:= v0 * 3;
  #L472e0e.  v0:= v0 / 2;
  #L472e12.  v0:= v0 + 1;
  #L472e16.  v0:= new `int`[v0];
  #L472e1a.  v2:= 0I;
  #L472e1c.  call `arraycopy`(v1, v2, v0, v2, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L472e22.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472e26.  v2:= v5 + 1;
  #L472e2a.  v3:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472e2e.  v3:= v3 - v5 @kind int;
  #L472e30.  call `arraycopy`(v1, v5, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L472e36.  v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] := v0 @kind object;
  #L472e3a.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472e3e.  v0[v5]:= v6;
  #L472e42.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472e46.  v5:= v5 + 1;
  #L472e4a.  v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int` := v5;
  #L472e4e.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L472e52.  v5:= v5 + 1;
  #L472e56.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L472e5a.  return @kind void;
  #L472e5c.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L472e60.  call temp:= `g`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.g:(I)Ljava/lang/String;` @kind direct;
  #L472e66.  v5:= temp @kind object;
  #L472e68.  call `<init>`(v6, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L472e6e.  throw v6;
}
procedure `com.google.crypto.tink.shaded.protobuf.o` `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.d:()Lcom/google/crypto/tink/shaded/protobuf/o;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L472a7c.  v0:= `@@com.google.crypto.tink.shaded.protobuf.o.d` @type ^`com.google.crypto.tink.shaded.protobuf.o` @kind object;
  #L472a80.  return v0 @kind object;
}
procedure `void` `e`(`com.google.crypto.tink.shaded.protobuf.o` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.e:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L472e80.  if v2 < 0 then goto L472e8e;
  #L472e84.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472e88.  if v2 >= v0 then goto L472e8e;
  #L472e8c.  return @kind void;
  #L472e8e.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L472e92.  call temp:= `g`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.g:(I)Ljava/lang/String;` @kind direct;
  #L472e98.  v2:= temp @kind object;
  #L472e9a.  call `<init>`(v0, v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L472ea0.  throw v0;
}
procedure `java.lang.String` `g`(`com.google.crypto.tink.shaded.protobuf.o` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.g:(I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L472c94.  v0:= new `java.lang.StringBuilder`;
  #L472c98.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L472c9e.  v1:= "Index:" @kind object;
  #L472ca2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L472ca8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L472cae.  v3:= ", Size:" @kind object;
  #L472cb2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L472cb8.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472cbc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L472cc2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L472cc8.  v3:= temp @kind object;
  #L472cca.  return v3 @kind object;
}
procedure `void` `a`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 , `java.lang.Integer` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.a:(ILjava/lang/Integer;)V` @AccessFlag PUBLIC {
    temp;

  #L472d4c.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L472d52.  v2:= temp;
  #L472d54.  call `c`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.c:(II)V` @kind direct;
  #L472d5a.  return @kind void;
}
procedure `void` `add`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L472d6c.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L472d70.  call `a`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.a:(ILjava/lang/Integer;)V` @kind virtual;
  #L472d76.  return @kind void;
}
procedure `boolean` `add`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4728e4.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L4728e8.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.b:(Ljava/lang/Integer;)Z` @kind virtual;
  #L4728ee.  v1:= temp;
  #L4728f0.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.o` v5 @kind this, `java.util.Collection` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L472904.  call `ensureIsMutable`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L47290a.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L472910.  v0:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.o` @kind boolean;
  #L472914.  if v0 != 0 then goto L472922;
  #L472918.  call temp:= `addAll`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L47291e.  v6:= temp;
  #L472920.  return v6;
  #L472922.  v6:= (`com.google.crypto.tink.shaded.protobuf.o`) v6 @kind object;
  #L472926.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L47292a.  v1:= 0I;
  #L47292c.  if v0 != 0 then goto L472932;
  #L472930.  return v1;
  #L472932.  v2:= 2147483647I;
  #L472938.  v3:= v5.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L47293c.  v2:= v2 - v3 @kind int;
  #L47293e.  if v2 < v0 then goto L472982;
  #L472942.  v3:= v3 + v0 @kind int;
  #L472944.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472948.  v2:= length @variable v0;
  #L47294a.  if v3 <= v2 then goto L47295a;
  #L47294e.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L472954.  v0:= temp @kind object;
  #L472956.  v5.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] := v0 @kind object;
  #L47295a.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L47295e.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472962.  v4:= v5.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472966.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L47296a.  call `arraycopy`(v0, v1, v2, v4, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L472970.  v5.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int` := v3;
  #L472974.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L472978.  v0:= 1I;
  #L47297a.  v6:= v6 + v0 @kind int;
  #L47297c.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L472980.  return v0;
  #L472982.  v6:= new `java.lang.OutOfMemoryError`;
  #L472986.  call `<init>`(v6) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L47298c.  throw v6;
}
procedure `void` `addInt`(`com.google.crypto.tink.shaded.protobuf.o` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L472d88.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L472d8e.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472d92.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472d96.  v2:= length @variable v1;
  #L472d98.  if v0 != v2 then goto L472db8;
  #L472d9c.  v2:= v0 * 3;
  #L472da0.  v2:= v2 / 2;
  #L472da4.  v2:= v2 + 1;
  #L472da8.  v2:= new `int`[v2];
  #L472dac.  v3:= 0I;
  #L472dae.  call `arraycopy`(v1, v3, v2, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L472db4.  v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] := v2 @kind object;
  #L472db8.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472dbc.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472dc0.  v2:= v1 + 1;
  #L472dc4.  v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int` := v2;
  #L472dc8.  v0[v1]:= v5;
  #L472dcc.  return @kind void;
}
procedure `boolean` `b`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `java.lang.Integer` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.b:(Ljava/lang/Integer;)Z` @AccessFlag PUBLIC {
    temp;

  #L4728c0.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4728c6.  v1:= temp;
  #L4728c8.  call `addInt`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.addInt:(I)V` @kind virtual;
  #L4728ce.  v1:= 1I;
  #L4728d0.  return v1;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.o` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4729a0.  v0:= 1I;
  #L4729a2.  if v5 != v6 then goto L4729a8;
  #L4729a6.  return v0;
  #L4729a8.  v1:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.o` @kind boolean;
  #L4729ac.  if v1 != 0 then goto L4729ba;
  #L4729b0.  call temp:= `equals`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L4729b6.  v6:= temp;
  #L4729b8.  return v6;
  #L4729ba.  v6:= (`com.google.crypto.tink.shaded.protobuf.o`) v6 @kind object;
  #L4729be.  v1:= v5.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L4729c2.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L4729c6.  v3:= 0I;
  #L4729c8.  if v1 == v2 then goto L4729ce;
  #L4729cc.  return v3;
  #L4729ce.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L4729d2.  v1:= 0I;
  #L4729d4.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L4729d8.  if v1 >= v2 then goto L4729f4;
  #L4729dc.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L4729e0.  v2:= v2[v1];
  #L4729e4.  v4:= v6[v1];
  #L4729e8.  if v2 == v4 then goto L4729ee;
  #L4729ec.  return v3;
  #L4729ee.  v1:= v1 + 1;
  #L4729f2.  goto L4729d4;
  #L4729f4.  return v0;
}
procedure `java.lang.Integer` `f`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.f:(I)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;

  #L472b88.  call temp:= `getInt`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.getInt:(I)I` @kind virtual;
  #L472b8e.  v1:= temp;
  #L472b90.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L472b96.  v1:= temp @kind object;
  #L472b98.  return v1 @kind object;
}
procedure `java.lang.Object` `get`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L472c3c.  call temp:= `f`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.f:(I)Ljava/lang/Integer;` @kind virtual;
  #L472c42.  v1:= temp @kind object;
  #L472c44.  return v1 @kind object;
}
procedure `int` `getInt`(`com.google.crypto.tink.shaded.protobuf.o` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.getInt:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L472af0.  call `e`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.e:(I)V` @kind direct;
  #L472af6.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472afa.  v2:= v0[v2];
  #L472afe.  return v2;
}
procedure `java.lang.Integer` `h`(`com.google.crypto.tink.shaded.protobuf.o` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.h:(I)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L472bac.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L472bb2.  call `e`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.e:(I)V` @kind direct;
  #L472bb8.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472bbc.  v1:= v0[v5];
  #L472bc0.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472bc4.  v3:= v2 + -1;
  #L472bc8.  if v5 >= v3 then goto L472bdc;
  #L472bcc.  v3:= v5 + 1;
  #L472bd0.  v2:= v2 - v5 @kind int;
  #L472bd2.  v2:= v2 + -1;
  #L472bd6.  call `arraycopy`(v0, v3, v0, v5, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L472bdc.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472be0.  v5:= v5 + -1;
  #L472be4.  v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int` := v5;
  #L472be8.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L472bec.  v5:= v5 + 1;
  #L472bf0.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L472bf4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L472bfa.  v5:= temp @kind object;
  #L472bfc.  return v5 @kind object;
}
procedure `int` `hashCode`(`com.google.crypto.tink.shaded.protobuf.o` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L472b10.  v0:= 1I;
  #L472b12.  v1:= 0I;
  #L472b14.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472b18.  if v1 >= v2 then goto L472b30;
  #L472b1c.  v0:= v0 * 31;
  #L472b20.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472b24.  v2:= v2[v1];
  #L472b28.  v0:= v0 + v2 @kind int;
  #L472b2a.  v1:= v1 + 1;
  #L472b2e.  goto L472b14;
  #L472b30.  return v0;
}
procedure `java.lang.Integer` `i`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 , `java.lang.Integer` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.i:(ILjava/lang/Integer;)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;

  #L472c10.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L472c16.  v2:= temp;
  #L472c18.  call temp:= `setInt`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.setInt:(II)I` @kind virtual;
  #L472c1e.  v1:= temp;
  #L472c20.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L472c26.  v1:= temp @kind object;
  #L472c28.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$IntList` `mutableCopyWithCapacity`(`com.google.crypto.tink.shaded.protobuf.o` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$IntList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L472a94.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472a98.  if v3 < v0 then goto L472ab8;
  #L472a9c.  v0:= new `com.google.crypto.tink.shaded.protobuf.o`;
  #L472aa0.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472aa4.  call temp:= `copyOf`(v1, v3) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L472aaa.  v3:= temp @kind object;
  #L472aac.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472ab0.  call `<init>`(v0, v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.<init>:([II)V` @kind direct;
  #L472ab6.  return v0 @kind object;
  #L472ab8.  v3:= new `java.lang.IllegalArgumentException`;
  #L472abc.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L472ac2.  throw v3;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList` `mutableCopyWithCapacity`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$ProtobufList;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L472ad4.  call temp:= `mutableCopyWithCapacity`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$IntList;` @kind virtual;
  #L472ada.  v1:= temp @kind object;
  #L472adc.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L472c58.  call temp:= `h`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.h:(I)Ljava/lang/Integer;` @kind virtual;
  #L472c5e.  v1:= temp @kind object;
  #L472c60.  return v1 @kind object;
}
procedure `boolean` `remove`(`com.google.crypto.tink.shaded.protobuf.o` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L472a08.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L472a0e.  v0:= 0I;
  #L472a10.  v1:= 0I;
  #L472a12.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472a16.  if v1 >= v2 then goto L472a6a;
  #L472a1a.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472a1e.  v2:= v2[v1];
  #L472a22.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L472a28.  v2:= temp @kind object;
  #L472a2a.  call temp:= `equals`(v5, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L472a30.  v2:= temp;
  #L472a32.  if v2 == 0 then goto L472a64;
  #L472a36.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472a3a.  v0:= v1 + 1;
  #L472a3e.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472a42.  v2:= v2 - v1 @kind int;
  #L472a44.  v3:= 1I;
  #L472a46.  v2:= v2 - v3 @kind int;
  #L472a48.  call `arraycopy`(v5, v0, v5, v1, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L472a4e.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472a52.  v5:= v5 - v3 @kind int;
  #L472a54.  v4.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int` := v5;
  #L472a58.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L472a5c.  v5:= v5 + v3 @kind int;
  #L472a5e.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L472a62.  return v3;
  #L472a64.  v1:= v1 + 1;
  #L472a68.  goto L472a12;
  #L472a6a.  return v0;
}
procedure `void` `removeRange`(`com.google.crypto.tink.shaded.protobuf.o` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.removeRange:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L472eb4.  call `ensureIsMutable`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L472eba.  if v4 < v3 then goto L472ee8;
  #L472ebe.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472ec2.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472ec6.  v1:= v1 - v4 @kind int;
  #L472ec8.  call `arraycopy`(v0, v4, v0, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L472ece.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472ed2.  v4:= v4 - v3 @kind int;
  #L472ed4.  v0:= v0 - v4 @kind int;
  #L472ed6.  v2.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int` := v0;
  #L472eda.  v3:= v2.`java.util.AbstractList.modCount` @type ^`int`;
  #L472ede.  v3:= v3 + 1;
  #L472ee2.  v2.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L472ee6.  return @kind void;
  #L472ee8.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L472eec.  v4:= "toIndex < fromIndex" @kind object;
  #L472ef0.  call `<init>`(v3, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L472ef6.  throw v3;
}
procedure `java.lang.Object` `set`(`com.google.crypto.tink.shaded.protobuf.o` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L472c74.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L472c78.  call temp:= `i`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.i:(ILjava/lang/Integer;)Ljava/lang/Integer;` @kind virtual;
  #L472c7e.  v1:= temp @kind object;
  #L472c80.  return v1 @kind object;
}
procedure `int` `setInt`(`com.google.crypto.tink.shaded.protobuf.o` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.setInt:(II)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L472b44.  call `ensureIsMutable`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L472b4a.  call `e`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.e:(I)V` @kind direct;
  #L472b50.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.o.b` @type ^`int`[] @kind object;
  #L472b54.  v1:= v0[v3];
  #L472b58.  v0[v3]:= v4;
  #L472b5c.  return v1;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.o` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/o;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L472b70.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.o.c` @type ^`int`;
  #L472b74.  return v0;
}
