record `com.google.crypto.tink.shaded.protobuf.e0$a` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `java.nio.ByteBuffer` `com.google.crypto.tink.shaded.protobuf.e0$a.a` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.shaded.protobuf.e0` `com.google.crypto.tink.shaded.protobuf.e0$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.e0$a` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.e0` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0$a;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/e0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L480e44.  v0.`com.google.crypto.tink.shaded.protobuf.e0$a.b` @type ^`com.google.crypto.tink.shaded.protobuf.e0` := v1 @kind object;
  #L480e48.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L480e4e.  v1:= v0.`com.google.crypto.tink.shaded.protobuf.e0$a.b` @type ^`com.google.crypto.tink.shaded.protobuf.e0` @kind object;
  #L480e52.  call temp:= `o`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.o:(Lcom/google/crypto/tink/shaded/protobuf/e0;)Ljava/nio/ByteBuffer;` @kind static;
  #L480e58.  v1:= temp @kind object;
  #L480e5a.  call temp:= `slice`(v1) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L480e60.  v1:= temp @kind object;
  #L480e62.  v0.`com.google.crypto.tink.shaded.protobuf.e0$a.a` @type ^`java.nio.ByteBuffer` := v1 @kind object;
  #L480e66.  return @kind void;
}
procedure `int` `available`(`com.google.crypto.tink.shaded.protobuf.e0$a` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0$a;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480da8.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L480dac.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L480db2.  v0:= temp;
  #L480db4.  return v0;
}
procedure `void` `mark`(`com.google.crypto.tink.shaded.protobuf.e0$a` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0$a;.mark:(I)V` @AccessFlag PUBLIC {
    temp;

  #L480e78.  v1:= v0.`com.google.crypto.tink.shaded.protobuf.e0$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L480e7c.  call temp:= `mark`(v1) @signature `Ljava/nio/ByteBuffer;.mark:()Ljava/nio/Buffer;` @kind virtual;
  #L480e82.  return @kind void;
}
procedure `boolean` `markSupported`(`com.google.crypto.tink.shaded.protobuf.e0$a` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0$a;.markSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480d94.  v0:= 1I;
  #L480d96.  return v0;
}
procedure `int` `read`(`com.google.crypto.tink.shaded.protobuf.e0$a` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0$a;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480dc8.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L480dcc.  call temp:= `hasRemaining`(v0) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L480dd2.  v0:= temp;
  #L480dd4.  if v0 != 0 then goto L480ddc;
  #L480dd8.  v0:= -1I;
  #L480dda.  return v0;
  #L480ddc.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L480de0.  call temp:= `get`(v0) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L480de6.  v0:= temp;
  #L480de8.  v0:= v0 ^& 255;
  #L480dec.  return v0;
}
procedure `int` `read`(`com.google.crypto.tink.shaded.protobuf.e0$a` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0$a;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480e00.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L480e04.  call temp:= `hasRemaining`(v0) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L480e0a.  v0:= temp;
  #L480e0c.  if v0 != 0 then goto L480e14;
  #L480e10.  v2:= -1I;
  #L480e12.  return v2;
  #L480e14.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L480e18.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L480e1e.  v0:= temp;
  #L480e20.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L480e26.  v4:= temp;
  #L480e28.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L480e2c.  call temp:= `get`(v0, v2, v3, v4) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L480e32.  return v4;
}
procedure `void` `reset`(`com.google.crypto.tink.shaded.protobuf.e0$a` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0$a;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L480e94.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.e0$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L480e98.  call temp:= `reset`(v0) @signature `Ljava/nio/ByteBuffer;.reset:()Ljava/nio/Buffer;` @kind virtual;
  #L480e9e.  return @kind void;
  #L480ea0.  v0:= Exception @type ^`java.nio.InvalidMarkException` @kind object;
  #L480ea2.  v1:= new `java.io.IOException`;
  #L480ea6.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L480eac.  throw v1;
  catch `java.nio.InvalidMarkException` @[L480e94..L480e9e] goto L480ea0;
}
