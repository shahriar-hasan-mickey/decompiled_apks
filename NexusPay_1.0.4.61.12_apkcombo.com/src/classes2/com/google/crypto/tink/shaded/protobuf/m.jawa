record `com.google.crypto.tink.shaded.protobuf.m` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.a` @kind class, `com.google.crypto.tink.shaded.protobuf.Internal$FloatList` @kind interface, `java.util.RandomAccess` @kind interface, `com.google.crypto.tink.shaded.protobuf.g0` @kind interface {
  `float`[] `com.google.crypto.tink.shaded.protobuf.m.b` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.m.c` @AccessFlag PRIVATE;
}
global `com.google.crypto.tink.shaded.protobuf.m` `@@com.google.crypto.tink.shaded.protobuf.m.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L47008c.  v0:= new `com.google.crypto.tink.shaded.protobuf.m`;
  #L470090.  v1:= 0I;
  #L470092.  v2:= new `float`[v1];
  #L470096.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.<init>:([FI)V` @kind direct;
  #L47009c.  `@@com.google.crypto.tink.shaded.protobuf.m.d` @type ^`com.google.crypto.tink.shaded.protobuf.m` := v0 @kind object;
  #L4700a0.  call `makeImmutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.makeImmutable:()V` @kind virtual;
  #L4700a6.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.m` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4700b8.  v0:= 10I;
  #L4700bc.  v0:= new `float`[v0];
  #L4700c0.  v1:= 0I;
  #L4700c2.  call `<init>`(v2, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.<init>:([FI)V` @kind direct;
  #L4700c8.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.m` v0 @kind this, `float`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.<init>:([FI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4700dc.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.<init>:()V` @kind direct;
  #L4700e2.  v0.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] := v1 @kind object;
  #L4700e6.  v0.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int` := v2;
  #L4700ea.  return @kind void;
}
procedure `void` `c`(`com.google.crypto.tink.shaded.protobuf.m` v4 @kind this, `int` v5 , `float` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.c:(IF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L470190.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L470196.  if v5 < 0 then goto L47020c;
  #L47019a.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L47019e.  if v5 > v0 then goto L47020c;
  #L4701a2.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L4701a6.  v2:= length @variable v1;
  #L4701a8.  if v0 >= v2 then goto L4701ba;
  #L4701ac.  v2:= v5 + 1;
  #L4701b0.  v0:= v0 - v5 @kind int;
  #L4701b2.  call `arraycopy`(v1, v5, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4701b8.  goto L4701ea;
  #L4701ba.  v0:= v0 * 3;
  #L4701be.  v0:= v0 / 2;
  #L4701c2.  v0:= v0 + 1;
  #L4701c6.  v0:= new `float`[v0];
  #L4701ca.  v2:= 0I;
  #L4701cc.  call `arraycopy`(v1, v2, v0, v2, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4701d2.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L4701d6.  v2:= v5 + 1;
  #L4701da.  v3:= v4.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L4701de.  v3:= v3 - v5 @kind int;
  #L4701e0.  call `arraycopy`(v1, v5, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4701e6.  v4.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] := v0 @kind object;
  #L4701ea.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L4701ee.  v0[v5]:= v6;
  #L4701f2.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L4701f6.  v5:= v5 + 1;
  #L4701fa.  v4.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int` := v5;
  #L4701fe.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L470202.  v5:= v5 + 1;
  #L470206.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L47020a.  return @kind void;
  #L47020c.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L470210.  call temp:= `g`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.g:(I)Ljava/lang/String;` @kind direct;
  #L470216.  v5:= temp @kind object;
  #L470218.  call `<init>`(v6, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47021e.  throw v6;
}
procedure `com.google.crypto.tink.shaded.protobuf.m` `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.d:()Lcom/google/crypto/tink/shaded/protobuf/m;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46fe24.  v0:= `@@com.google.crypto.tink.shaded.protobuf.m.d` @type ^`com.google.crypto.tink.shaded.protobuf.m` @kind object;
  #L46fe28.  return v0 @kind object;
}
procedure `void` `e`(`com.google.crypto.tink.shaded.protobuf.m` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.e:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L470230.  if v2 < 0 then goto L47023e;
  #L470234.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L470238.  if v2 >= v0 then goto L47023e;
  #L47023c.  return @kind void;
  #L47023e.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L470242.  call temp:= `g`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.g:(I)Ljava/lang/String;` @kind direct;
  #L470248.  v2:= temp @kind object;
  #L47024a.  call `<init>`(v0, v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L470250.  throw v0;
}
procedure `java.lang.String` `g`(`com.google.crypto.tink.shaded.protobuf.m` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.g:(I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L470044.  v0:= new `java.lang.StringBuilder`;
  #L470048.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47004e.  v1:= "Index:" @kind object;
  #L470052.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L470058.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47005e.  v3:= ", Size:" @kind object;
  #L470062.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L470068.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L47006c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L470072.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L470078.  v3:= temp @kind object;
  #L47007a.  return v3 @kind object;
}
procedure `void` `a`(`com.google.crypto.tink.shaded.protobuf.m` v0 @kind this, `int` v1 , `java.lang.Float` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.a:(ILjava/lang/Float;)V` @AccessFlag PUBLIC {
    temp;

  #L4700fc.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L470102.  v2:= temp;
  #L470104.  call `c`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.c:(IF)V` @kind direct;
  #L47010a.  return @kind void;
}
procedure `void` `add`(`com.google.crypto.tink.shaded.protobuf.m` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L47011c.  v2:= (`java.lang.Float`) v2 @kind object;
  #L470120.  call `a`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.a:(ILjava/lang/Float;)V` @kind virtual;
  #L470126.  return @kind void;
}
procedure `boolean` `add`(`com.google.crypto.tink.shaded.protobuf.m` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L46fc7c.  v1:= (`java.lang.Float`) v1 @kind object;
  #L46fc80.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.b:(Ljava/lang/Float;)Z` @kind virtual;
  #L46fc86.  v1:= temp;
  #L46fc88.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.m` v5 @kind this, `java.util.Collection` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L46fc9c.  call `ensureIsMutable`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L46fca2.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L46fca8.  v0:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.m` @kind boolean;
  #L46fcac.  if v0 != 0 then goto L46fcba;
  #L46fcb0.  call temp:= `addAll`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L46fcb6.  v6:= temp;
  #L46fcb8.  return v6;
  #L46fcba.  v6:= (`com.google.crypto.tink.shaded.protobuf.m`) v6 @kind object;
  #L46fcbe.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46fcc2.  v1:= 0I;
  #L46fcc4.  if v0 != 0 then goto L46fcca;
  #L46fcc8.  return v1;
  #L46fcca.  v2:= 2147483647I;
  #L46fcd0.  v3:= v5.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46fcd4.  v2:= v2 - v3 @kind int;
  #L46fcd6.  if v2 < v0 then goto L46fd1a;
  #L46fcda.  v3:= v3 + v0 @kind int;
  #L46fcdc.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L46fce0.  v2:= length @variable v0;
  #L46fce2.  if v3 <= v2 then goto L46fcf2;
  #L46fce6.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([FI)[F` @kind static;
  #L46fcec.  v0:= temp @kind object;
  #L46fcee.  v5.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] := v0 @kind object;
  #L46fcf2.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L46fcf6.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L46fcfa.  v4:= v5.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46fcfe.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46fd02.  call `arraycopy`(v0, v1, v2, v4, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L46fd08.  v5.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int` := v3;
  #L46fd0c.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L46fd10.  v0:= 1I;
  #L46fd12.  v6:= v6 + v0 @kind int;
  #L46fd14.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L46fd18.  return v0;
  #L46fd1a.  v6:= new `java.lang.OutOfMemoryError`;
  #L46fd1e.  call `<init>`(v6) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L46fd24.  throw v6;
}
procedure `void` `addFloat`(`com.google.crypto.tink.shaded.protobuf.m` v4 @kind this, `float` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.addFloat:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L470138.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L47013e.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L470142.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L470146.  v2:= length @variable v1;
  #L470148.  if v0 != v2 then goto L470168;
  #L47014c.  v2:= v0 * 3;
  #L470150.  v2:= v2 / 2;
  #L470154.  v2:= v2 + 1;
  #L470158.  v2:= new `float`[v2];
  #L47015c.  v3:= 0I;
  #L47015e.  call `arraycopy`(v1, v3, v2, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L470164.  v4.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] := v2 @kind object;
  #L470168.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L47016c.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L470170.  v2:= v1 + 1;
  #L470174.  v4.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int` := v2;
  #L470178.  v0[v1]:= v5;
  #L47017c.  return @kind void;
}
procedure `boolean` `b`(`com.google.crypto.tink.shaded.protobuf.m` v0 @kind this, `java.lang.Float` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.b:(Ljava/lang/Float;)Z` @AccessFlag PUBLIC {
    temp;

  #L46fc58.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L46fc5e.  v1:= temp;
  #L46fc60.  call `addFloat`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.addFloat:(F)V` @kind virtual;
  #L46fc66.  v1:= 1I;
  #L46fc68.  return v1;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.m` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L46fd38.  v0:= 1I;
  #L46fd3a.  if v5 != v6 then goto L46fd40;
  #L46fd3e.  return v0;
  #L46fd40.  v1:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.m` @kind boolean;
  #L46fd44.  if v1 != 0 then goto L46fd52;
  #L46fd48.  call temp:= `equals`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L46fd4e.  v6:= temp;
  #L46fd50.  return v6;
  #L46fd52.  v6:= (`com.google.crypto.tink.shaded.protobuf.m`) v6 @kind object;
  #L46fd56.  v1:= v5.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46fd5a.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46fd5e.  v3:= 0I;
  #L46fd60.  if v1 == v2 then goto L46fd66;
  #L46fd64.  return v3;
  #L46fd66.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L46fd6a.  v1:= 0I;
  #L46fd6c.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46fd70.  if v1 >= v2 then goto L46fd9c;
  #L46fd74.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L46fd78.  v2:= v2[v1];
  #L46fd7c.  call temp:= `floatToIntBits`(v2) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L46fd82.  v2:= temp;
  #L46fd84.  v4:= v6[v1];
  #L46fd88.  call temp:= `floatToIntBits`(v4) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L46fd8e.  v4:= temp;
  #L46fd90.  if v2 == v4 then goto L46fd96;
  #L46fd94.  return v3;
  #L46fd96.  v1:= v1 + 1;
  #L46fd9a.  goto L46fd6c;
  #L46fd9c.  return v0;
}
procedure `java.lang.Float` `f`(`com.google.crypto.tink.shaded.protobuf.m` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.f:(I)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;

  #L46ff38.  call temp:= `getFloat`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.getFloat:(I)F` @kind virtual;
  #L46ff3e.  v1:= temp;
  #L46ff40.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L46ff46.  v1:= temp @kind object;
  #L46ff48.  return v1 @kind object;
}
procedure `java.lang.Object` `get`(`com.google.crypto.tink.shaded.protobuf.m` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L46ffec.  call temp:= `f`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.f:(I)Ljava/lang/Float;` @kind virtual;
  #L46fff2.  v1:= temp @kind object;
  #L46fff4.  return v1 @kind object;
}
procedure `float` `getFloat`(`com.google.crypto.tink.shaded.protobuf.m` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.getFloat:(I)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46fe98.  call `e`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.e:(I)V` @kind direct;
  #L46fe9e.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L46fea2.  v2:= v0[v2];
  #L46fea6.  return v2;
}
procedure `java.lang.Float` `h`(`com.google.crypto.tink.shaded.protobuf.m` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.h:(I)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L46ff5c.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L46ff62.  call `e`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.e:(I)V` @kind direct;
  #L46ff68.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L46ff6c.  v1:= v0[v5];
  #L46ff70.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46ff74.  v3:= v2 + -1;
  #L46ff78.  if v5 >= v3 then goto L46ff8c;
  #L46ff7c.  v3:= v5 + 1;
  #L46ff80.  v2:= v2 - v5 @kind int;
  #L46ff82.  v2:= v2 + -1;
  #L46ff86.  call `arraycopy`(v0, v3, v0, v5, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L46ff8c.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46ff90.  v5:= v5 + -1;
  #L46ff94.  v4.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int` := v5;
  #L46ff98.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L46ff9c.  v5:= v5 + 1;
  #L46ffa0.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L46ffa4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L46ffaa.  v5:= temp @kind object;
  #L46ffac.  return v5 @kind object;
}
procedure `int` `hashCode`(`com.google.crypto.tink.shaded.protobuf.m` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L46fee4.  v0:= 1I;
  #L46fee6.  v1:= 0I;
  #L46fee8.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46feec.  if v1 >= v2 then goto L46ff0c;
  #L46fef0.  v0:= v0 * 31;
  #L46fef4.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L46fef8.  v2:= v2[v1];
  #L46fefc.  call temp:= `floatToIntBits`(v2) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L46ff02.  v2:= temp;
  #L46ff04.  v0:= v0 + v2 @kind int;
  #L46ff06.  v1:= v1 + 1;
  #L46ff0a.  goto L46fee8;
  #L46ff0c.  return v0;
}
procedure `java.lang.Float` `i`(`com.google.crypto.tink.shaded.protobuf.m` v0 @kind this, `int` v1 , `java.lang.Float` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.i:(ILjava/lang/Float;)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;

  #L46ffc0.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L46ffc6.  v2:= temp;
  #L46ffc8.  call temp:= `setFloat`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.setFloat:(IF)F` @kind virtual;
  #L46ffce.  v1:= temp;
  #L46ffd0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L46ffd6.  v1:= temp @kind object;
  #L46ffd8.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$FloatList` `mutableCopyWithCapacity`(`com.google.crypto.tink.shaded.protobuf.m` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$FloatList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46fe3c.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46fe40.  if v3 < v0 then goto L46fe60;
  #L46fe44.  v0:= new `com.google.crypto.tink.shaded.protobuf.m`;
  #L46fe48.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L46fe4c.  call temp:= `copyOf`(v1, v3) @signature `Ljava/util/Arrays;.copyOf:([FI)[F` @kind static;
  #L46fe52.  v3:= temp @kind object;
  #L46fe54.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46fe58.  call `<init>`(v0, v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.<init>:([FI)V` @kind direct;
  #L46fe5e.  return v0 @kind object;
  #L46fe60.  v3:= new `java.lang.IllegalArgumentException`;
  #L46fe64.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L46fe6a.  throw v3;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList` `mutableCopyWithCapacity`(`com.google.crypto.tink.shaded.protobuf.m` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$ProtobufList;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L46fe7c.  call temp:= `mutableCopyWithCapacity`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$FloatList;` @kind virtual;
  #L46fe82.  v1:= temp @kind object;
  #L46fe84.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`com.google.crypto.tink.shaded.protobuf.m` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L470008.  call temp:= `h`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.h:(I)Ljava/lang/Float;` @kind virtual;
  #L47000e.  v1:= temp @kind object;
  #L470010.  return v1 @kind object;
}
procedure `boolean` `remove`(`com.google.crypto.tink.shaded.protobuf.m` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L46fdb0.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L46fdb6.  v0:= 0I;
  #L46fdb8.  v1:= 0I;
  #L46fdba.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46fdbe.  if v1 >= v2 then goto L46fe12;
  #L46fdc2.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L46fdc6.  v2:= v2[v1];
  #L46fdca.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L46fdd0.  v2:= temp @kind object;
  #L46fdd2.  call temp:= `equals`(v5, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L46fdd8.  v2:= temp;
  #L46fdda.  if v2 == 0 then goto L46fe0c;
  #L46fdde.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L46fde2.  v0:= v1 + 1;
  #L46fde6.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46fdea.  v2:= v2 - v1 @kind int;
  #L46fdec.  v3:= 1I;
  #L46fdee.  v2:= v2 - v3 @kind int;
  #L46fdf0.  call `arraycopy`(v5, v0, v5, v1, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L46fdf6.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46fdfa.  v5:= v5 - v3 @kind int;
  #L46fdfc.  v4.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int` := v5;
  #L46fe00.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L46fe04.  v5:= v5 + v3 @kind int;
  #L46fe06.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L46fe0a.  return v3;
  #L46fe0c.  v1:= v1 + 1;
  #L46fe10.  goto L46fdba;
  #L46fe12.  return v0;
}
procedure `void` `removeRange`(`com.google.crypto.tink.shaded.protobuf.m` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.removeRange:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L470264.  call `ensureIsMutable`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L47026a.  if v4 < v3 then goto L470298;
  #L47026e.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L470272.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L470276.  v1:= v1 - v4 @kind int;
  #L470278.  call `arraycopy`(v0, v4, v0, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L47027e.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L470282.  v4:= v4 - v3 @kind int;
  #L470284.  v0:= v0 - v4 @kind int;
  #L470286.  v2.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int` := v0;
  #L47028a.  v3:= v2.`java.util.AbstractList.modCount` @type ^`int`;
  #L47028e.  v3:= v3 + 1;
  #L470292.  v2.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L470296.  return @kind void;
  #L470298.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L47029c.  v4:= "toIndex < fromIndex" @kind object;
  #L4702a0.  call `<init>`(v3, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4702a6.  throw v3;
}
procedure `java.lang.Object` `set`(`com.google.crypto.tink.shaded.protobuf.m` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L470024.  v2:= (`java.lang.Float`) v2 @kind object;
  #L470028.  call temp:= `i`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.i:(ILjava/lang/Float;)Ljava/lang/Float;` @kind virtual;
  #L47002e.  v1:= temp @kind object;
  #L470030.  return v1 @kind object;
}
procedure `float` `setFloat`(`com.google.crypto.tink.shaded.protobuf.m` v2 @kind this, `int` v3 , `float` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.setFloat:(IF)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46feb8.  call `ensureIsMutable`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L46febe.  call `e`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.e:(I)V` @kind direct;
  #L46fec4.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.m.b` @type ^`float`[] @kind object;
  #L46fec8.  v1:= v0[v3];
  #L46fecc.  v0[v3]:= v4;
  #L46fed0.  return v1;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.m` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/m;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46ff20.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.m.c` @type ^`int`;
  #L46ff24.  return v0;
}
