record `com.google.crypto.tink.shaded.protobuf.e0` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.ByteString$h` @kind class {
  `java.nio.ByteBuffer` `com.google.crypto.tink.shaded.protobuf.e0.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4812ac.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;.<init>:()V` @kind direct;
  #L4812b2.  v0:= "buffer" @kind object;
  #L4812b6.  call temp:= `b`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.b:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4812bc.  call temp:= `slice`(v2) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L4812c2.  v2:= temp @kind object;
  #L4812c4.  call temp:= `nativeOrder`() @signature `Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;` @kind static;
  #L4812ca.  v0:= temp @kind object;
  #L4812cc.  call temp:= `order`(v2, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L4812d2.  v2:= temp @kind object;
  #L4812d4.  v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L4812d8.  return @kind void;
}
procedure `java.nio.ByteBuffer` `o`(`com.google.crypto.tink.shaded.protobuf.e0` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.o:(Lcom/google/crypto/tink/shaded/protobuf/e0;)Ljava/nio/ByteBuffer;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4811ac.  v0:= v0.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4811b0.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `p`(`com.google.crypto.tink.shaded.protobuf.e0` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.p:(II)Ljava/nio/ByteBuffer;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4811e4.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4811e8.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L4811ee.  v0:= temp;
  #L4811f0.  if v4 < v0 then goto L48123e;
  #L4811f4.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4811f8.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L4811fe.  v0:= temp;
  #L481200.  if v5 > v0 then goto L48123e;
  #L481204.  if v4 > v5 then goto L48123e;
  #L481208.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L48120c.  call temp:= `slice`(v0) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L481212.  v0:= temp @kind object;
  #L481214.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L481218.  call temp:= `position`(v1) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L48121e.  v1:= temp;
  #L481220.  v4:= v4 - v1 @kind int;
  #L481222.  call temp:= `position`(v0, v4) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L481228.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L48122c.  call temp:= `position`(v4) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L481232.  v4:= temp;
  #L481234.  v5:= v5 - v4 @kind int;
  #L481236.  call temp:= `limit`(v0, v5) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L48123c.  return v0 @kind object;
  #L48123e.  v0:= new `java.lang.IllegalArgumentException`;
  #L481242.  v1:= 2I;
  #L481244.  v1:= new `java.lang.Object`[v1];
  #L481248.  v2:= 0I;
  #L48124a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L481250.  v4:= temp @kind object;
  #L481252.  v1[v2]:= v4 @kind object;
  #L481256.  v4:= 1I;
  #L481258.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L48125e.  v5:= temp @kind object;
  #L481260.  v1[v4]:= v5 @kind object;
  #L481264.  v4:= "Invalid indices [%d, %d]" @kind object;
  #L481268.  call temp:= `format`(v4, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L48126e.  v4:= temp @kind object;
  #L481270.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L481276.  throw v0;
}
procedure `void` `readObject`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `java.io.ObjectInputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L48133c.  v2:= new `java.io.InvalidObjectException`;
  #L481340.  v0:= "NioByteString instances are not to be serialized directly" @kind object;
  #L481344.  call `<init>`(v2, v0) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48134a.  throw v2;
}
procedure `java.lang.Object` `writeReplace`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L481118.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L48111c.  call temp:= `slice`(v0) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L481122.  v0:= temp @kind object;
  #L481124.  call temp:= `copyFrom`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:(Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48112a.  v0:= temp @kind object;
  #L48112c.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `asReadOnlyByteBuffer`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4811c4.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4811c8.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L4811ce.  v0:= temp @kind object;
  #L4811d0.  return v0 @kind object;
}
procedure `java.util.List` `asReadOnlyByteBufferList`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.asReadOnlyByteBufferList:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L481288.  call temp:= `asReadOnlyByteBuffer`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L48128e.  v0:= temp @kind object;
  #L481290.  call temp:= `singletonList`(v0) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L481296.  v0:= temp @kind object;
  #L481298.  return v0 @kind object;
}
procedure `byte` `byteAt`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.byteAt:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480fb4.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L480fb8.  call temp:= `get`(v0, v2) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L480fbe.  v2:= temp;
  #L480fc0.  return v2;
  #L480fc2.  v2:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L480fc4.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L480fc8.  call temp:= `getMessage`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L480fce.  v2:= temp @kind object;
  #L480fd0.  call `<init>`(v0, v2) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L480fd6.  throw v0;
  #L480fd8.  v2:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L480fda.  throw v2;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L480fb4..L480fc0] goto L480fd8;
  catch `java.lang.IndexOutOfBoundsException` @[L480fb4..L480fc0] goto L480fc2;
}
procedure `void` `copyTo`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.copyTo:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4812ec.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4812f0.  call temp:= `slice`(v0) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L4812f6.  v0:= temp @kind object;
  #L4812f8.  call temp:= `put`(v2, v0) @signature `Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L4812fe.  return @kind void;
}
procedure `void` `copyToInternal`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.copyToInternal:([BIII)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L481310.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L481314.  call temp:= `slice`(v0) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L48131a.  v0:= temp @kind object;
  #L48131c.  call temp:= `position`(v0, v3) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L481322.  call temp:= `get`(v0, v2, v4, v5) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L481328.  return @kind void;
}
procedure `byte` `e`(`com.google.crypto.tink.shaded.protobuf.e0` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.e:(I)B` @AccessFlag PUBLIC {
    temp;

  #L480ffc.  call temp:= `byteAt`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.byteAt:(I)B` @kind virtual;
  #L481002.  v1:= temp;
  #L481004.  return v1;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.e0` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L480ed0.  v0:= 1I;
  #L480ed2.  if v6 != v5 then goto L480ed8;
  #L480ed6.  return v0;
  #L480ed8.  v1:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind boolean;
  #L480edc.  v2:= 0I;
  #L480ede.  if v1 != 0 then goto L480ee4;
  #L480ee2.  return v2;
  #L480ee4.  v1:= v6 @kind object;
  #L480ee6.  v1:= (`com.google.crypto.tink.shaded.protobuf.ByteString`) v1 @kind object;
  #L480eea.  call temp:= `size`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.size:()I` @kind virtual;
  #L480ef0.  v3:= temp;
  #L480ef2.  call temp:= `size`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L480ef8.  v4:= temp;
  #L480efa.  if v3 == v4 then goto L480f00;
  #L480efe.  return v2;
  #L480f00.  call temp:= `size`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.size:()I` @kind virtual;
  #L480f06.  v2:= temp;
  #L480f08.  if v2 != 0 then goto L480f0e;
  #L480f0c.  return v0;
  #L480f0e.  v0:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.e0` @kind boolean;
  #L480f12.  if v0 == 0 then goto L480f2c;
  #L480f16.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L480f1a.  v6:= (`com.google.crypto.tink.shaded.protobuf.e0`) v6 @kind object;
  #L480f1e.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L480f22.  call temp:= `equals`(v0, v6) @signature `Ljava/nio/ByteBuffer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L480f28.  v6:= temp;
  #L480f2a.  return v6;
  #L480f2c.  v0:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.l0` @kind boolean;
  #L480f30.  if v0 == 0 then goto L480f3e;
  #L480f34.  call temp:= `equals`(v6, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L480f3a.  v6:= temp;
  #L480f3c.  return v6;
  #L480f3e.  v6:= v5.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L480f42.  call temp:= `asReadOnlyByteBuffer`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L480f48.  v0:= temp @kind object;
  #L480f4a.  call temp:= `equals`(v6, v0) @signature `Ljava/nio/ByteBuffer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L480f50.  v6:= temp;
  #L480f52.  return v6;
}
procedure `boolean` `isValidUtf8`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.isValidUtf8:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480f94.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L480f98.  call temp:= `s`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.s:(Ljava/nio/ByteBuffer;)Z` @kind static;
  #L480f9e.  v0:= temp;
  #L480fa0.  return v0;
}
procedure `void` `m`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteOutput` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.m:(Lcom/google/crypto/tink/shaded/protobuf/ByteOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L48135c.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L481360.  call temp:= `slice`(v0) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L481366.  v0:= temp @kind object;
  #L481368.  call `writeLazy`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteOutput;.writeLazy:(Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L48136e.  return @kind void;
}
procedure `boolean` `n`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.n:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;II)Z` @AccessFlag  {
    temp;
    v0;

  #L480f64.  v0:= 0I;
  #L480f66.  call temp:= `substring`(v1, v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L480f6c.  v0:= temp @kind object;
  #L480f6e.  v4:= v4 + v3 @kind int;
  #L480f70.  call temp:= `substring`(v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L480f76.  v2:= temp @kind object;
  #L480f78.  call temp:= `equals`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L480f7e.  v2:= temp;
  #L480f80.  return v2;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newCodedInput`(`com.google.crypto.tink.shaded.protobuf.e0` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.newCodedInput:()Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L481068.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L48106c.  v1:= 1I;
  #L48106e.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.b:(Ljava/nio/ByteBuffer;Z)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L481074.  v0:= temp @kind object;
  #L481076.  return v0 @kind object;
}
procedure `java.io.InputStream` `newInput`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.newInput:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4810fc.  v0:= new `com.google.crypto.tink.shaded.protobuf.e0$a`;
  #L481100.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0$a;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/e0;)V` @kind direct;
  #L481106.  return v0 @kind object;
}
procedure `int` `partialHash`(`com.google.crypto.tink.shaded.protobuf.e0` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.partialHash:(III)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L481088.  v0:= v4;
  #L48108a.  v1:= v4 + v5 @kind int;
  #L48108e.  if v0 >= v1 then goto L4810aa;
  #L481092.  v3:= v3 * 31;
  #L481096.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L48109a.  call temp:= `get`(v1, v0) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L4810a0.  v1:= temp;
  #L4810a2.  v3:= v3 + v1 @kind int;
  #L4810a4.  v0:= v0 + 1;
  #L4810a8.  goto L48108a;
  #L4810aa.  return v3;
}
procedure `int` `partialIsValidUtf8`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.partialIsValidUtf8:(III)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4810bc.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4810c0.  v4:= v4 + v3 @kind int;
  #L4810c2.  call temp:= `v`(v2, v0, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.v:(ILjava/nio/ByteBuffer;II)I` @kind static;
  #L4810c8.  v2:= temp;
  #L4810ca.  return v2;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4810dc.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4810e0.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L4810e6.  v0:= temp;
  #L4810e8.  return v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `substring`(`com.google.crypto.tink.shaded.protobuf.e0` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC {
    temp;

  #L481018.  call temp:= `p`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.p:(II)Ljava/nio/ByteBuffer;` @kind direct;
  #L48101e.  v1:= temp @kind object;
  #L481020.  v2:= new `com.google.crypto.tink.shaded.protobuf.e0`;
  #L481024.  call `<init>`(v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L48102a.  return v2 @kind object;
  #L48102c.  v1:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L48102e.  v2:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L481032.  call temp:= `getMessage`(v1) @signature `Ljava/lang/IndexOutOfBoundsException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L481038.  v1:= temp @kind object;
  #L48103a.  call `<init>`(v2, v1) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L481040.  throw v2;
  #L481042.  v1:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L481044.  throw v1;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L481018..L48102a] goto L481042;
  catch `java.lang.IndexOutOfBoundsException` @[L481018..L48102a] goto L48102c;
}
procedure `java.lang.String` `toStringInternal`(`com.google.crypto.tink.shaded.protobuf.e0` v4 @kind this, `java.nio.charset.Charset` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.toStringInternal:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L481140.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L481144.  call temp:= `hasArray`(v0) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L48114a.  v0:= temp;
  #L48114c.  if v0 == 0 then goto L481184;
  #L481150.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L481154.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L48115a.  v0:= temp @kind object;
  #L48115c.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L481160.  call temp:= `arrayOffset`(v1) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L481166.  v1:= temp;
  #L481168.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L48116c.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L481172.  v2:= temp;
  #L481174.  v1:= v1 + v2 @kind int;
  #L481176.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.e0.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L48117a.  call temp:= `remaining`(v2) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L481180.  v2:= temp;
  #L481182.  goto L481190;
  #L481184.  call temp:= `toByteArray`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L48118a.  v0:= temp @kind object;
  #L48118c.  v1:= 0I;
  #L48118e.  v2:= length @variable v0;
  #L481190.  v3:= new `java.lang.String`;
  #L481194.  call `<init>`(v3, v0, v1, v2, v5) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L48119a.  return v3 @kind object;
}
procedure `void` `writeTo`(`com.google.crypto.tink.shaded.protobuf.e0` v1 @kind this, `java.io.OutputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/e0;.writeTo:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L481380.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L481386.  v0:= temp @kind object;
  #L481388.  call `write`(v2, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L48138e.  return @kind void;
}
