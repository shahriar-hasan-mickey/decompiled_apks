record `com.google.crypto.tink.shaded.protobuf.u` @kind class @AccessFlag  extends `com.google.crypto.tink.shaded.protobuf.t` @kind interface {
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.u` v0 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/u;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L476ca4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L476caa.  return @kind void;
}
procedure `int` `i`(`int` v3 , `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u;.i:(ILjava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L476ba4.  v4:= (`com.google.crypto.tink.shaded.protobuf.MapFieldLite`) v4 @kind object;
  #L476ba8.  v5:= (`com.google.crypto.tink.shaded.protobuf.MapEntryLite`) v5 @kind object;
  #L476bac.  call temp:= `isEmpty`(v4) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L476bb2.  v0:= temp;
  #L476bb4.  v1:= 0I;
  #L476bb6.  if v0 == 0 then goto L476bbc;
  #L476bba.  return v1;
  #L476bbc.  call temp:= `entrySet`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/MapFieldLite;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L476bc2.  v4:= temp @kind object;
  #L476bc4.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L476bca.  v4:= temp @kind object;
  #L476bcc.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L476bd2.  v0:= temp;
  #L476bd4.  if v0 == 0 then goto L476c00;
  #L476bd8.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L476bde.  v0:= temp @kind object;
  #L476be0.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L476be4.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L476bea.  v2:= temp @kind object;
  #L476bec.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L476bf2.  v0:= temp @kind object;
  #L476bf4.  call temp:= `computeMessageSize`(v5, v3, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/MapEntryLite;.computeMessageSize:(ILjava/lang/Object;Ljava/lang/Object;)I` @kind virtual;
  #L476bfa.  v0:= temp;
  #L476bfc.  v1:= v1 + v0 @kind int;
  #L476bfe.  goto L476bcc;
  #L476c00.  return v1;
}
procedure `com.google.crypto.tink.shaded.protobuf.MapFieldLite` `j`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u;.j:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/crypto/tink/shaded/protobuf/MapFieldLite;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L476b48.  v1:= (`com.google.crypto.tink.shaded.protobuf.MapFieldLite`) v1 @kind object;
  #L476b4c.  v2:= (`com.google.crypto.tink.shaded.protobuf.MapFieldLite`) v2 @kind object;
  #L476b50.  call temp:= `isEmpty`(v2) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L476b56.  v0:= temp;
  #L476b58.  if v0 != 0 then goto L476b76;
  #L476b5c.  call temp:= `isMutable`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/MapFieldLite;.isMutable:()Z` @kind virtual;
  #L476b62.  v0:= temp;
  #L476b64.  if v0 != 0 then goto L476b70;
  #L476b68.  call temp:= `mutableCopy`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/MapFieldLite;.mutableCopy:()Lcom/google/crypto/tink/shaded/protobuf/MapFieldLite;` @kind virtual;
  #L476b6e.  v1:= temp @kind object;
  #L476b70.  call `mergeFrom`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/MapFieldLite;.mergeFrom:(Lcom/google/crypto/tink/shaded/protobuf/MapFieldLite;)V` @kind virtual;
  #L476b76.  return v1 @kind object;
}
procedure `java.lang.Object` `a`(`com.google.crypto.tink.shaded.protobuf.u` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L476c14.  call temp:= `j`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u;.j:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/crypto/tink/shaded/protobuf/MapFieldLite;` @kind static;
  #L476c1a.  v1:= temp @kind object;
  #L476c1c.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MapEntryLite$b` `b`(`com.google.crypto.tink.shaded.protobuf.u` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u;.b:(Ljava/lang/Object;)Lcom/google/crypto/tink/shaded/protobuf/MapEntryLite$b;` @AccessFlag PUBLIC {
    temp;

  #L476b28.  v1:= (`com.google.crypto.tink.shaded.protobuf.MapEntryLite`) v1 @kind object;
  #L476b2c.  call temp:= `b`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/MapEntryLite;.b:()Lcom/google/crypto/tink/shaded/protobuf/MapEntryLite$b;` @kind virtual;
  #L476b32.  v1:= temp @kind object;
  #L476b34.  return v1 @kind object;
}
procedure `java.util.Map` `c`(`com.google.crypto.tink.shaded.protobuf.u` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u;.c:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;

  #L476c8c.  v1:= (`com.google.crypto.tink.shaded.protobuf.MapFieldLite`) v1 @kind object;
  #L476c90.  return v1 @kind object;
}
procedure `java.lang.Object` `d`(`com.google.crypto.tink.shaded.protobuf.u` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L476c30.  call temp:= `emptyMapField`() @signature `Lcom/google/crypto/tink/shaded/protobuf/MapFieldLite;.emptyMapField:()Lcom/google/crypto/tink/shaded/protobuf/MapFieldLite;` @kind static;
  #L476c36.  v1:= temp @kind object;
  #L476c38.  call temp:= `mutableCopy`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/MapFieldLite;.mutableCopy:()Lcom/google/crypto/tink/shaded/protobuf/MapFieldLite;` @kind virtual;
  #L476c3e.  v1:= temp @kind object;
  #L476c40.  return v1 @kind object;
}
procedure `java.util.Map` `e`(`com.google.crypto.tink.shaded.protobuf.u` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u;.e:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;

  #L476c74.  v1:= (`com.google.crypto.tink.shaded.protobuf.MapFieldLite`) v1 @kind object;
  #L476c78.  return v1 @kind object;
}
procedure `java.lang.Object` `f`(`com.google.crypto.tink.shaded.protobuf.u` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L476c54.  v0:= v2 @kind object;
  #L476c56.  v0:= (`com.google.crypto.tink.shaded.protobuf.MapFieldLite`) v0 @kind object;
  #L476c5a.  call `makeImmutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/MapFieldLite;.makeImmutable:()V` @kind virtual;
  #L476c60.  return v2 @kind object;
}
procedure `int` `g`(`com.google.crypto.tink.shaded.protobuf.u` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u;.g:(ILjava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;

  #L476b88.  call temp:= `i`(v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u;.i:(ILjava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L476b8e.  v1:= temp;
  #L476b90.  return v1;
}
procedure `boolean` `h`(`com.google.crypto.tink.shaded.protobuf.u` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/u;.h:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L476b04.  v1:= (`com.google.crypto.tink.shaded.protobuf.MapFieldLite`) v1 @kind object;
  #L476b08.  call temp:= `isMutable`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/MapFieldLite;.isMutable:()Z` @kind virtual;
  #L476b0e.  v1:= temp;
  #L476b10.  v1:= v1 ^~ 1;
  #L476b14.  return v1;
}
