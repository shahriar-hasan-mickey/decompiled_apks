record `com.google.crypto.tink.shaded.protobuf.r` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.a` @kind class, `com.google.crypto.tink.shaded.protobuf.Internal$LongList` @kind interface, `java.util.RandomAccess` @kind interface, `com.google.crypto.tink.shaded.protobuf.g0` @kind interface {
  `long`[] `com.google.crypto.tink.shaded.protobuf.r.b` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.r.c` @AccessFlag PRIVATE;
}
global `com.google.crypto.tink.shaded.protobuf.r` `@@com.google.crypto.tink.shaded.protobuf.r.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L475ccc.  v0:= new `com.google.crypto.tink.shaded.protobuf.r`;
  #L475cd0.  v1:= 0I;
  #L475cd2.  v2:= new `long`[v1];
  #L475cd6.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.<init>:([JI)V` @kind direct;
  #L475cdc.  `@@com.google.crypto.tink.shaded.protobuf.r.d` @type ^`com.google.crypto.tink.shaded.protobuf.r` := v0 @kind object;
  #L475ce0.  call `makeImmutable`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.makeImmutable:()V` @kind virtual;
  #L475ce6.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L475cf8.  v0:= 10I;
  #L475cfc.  v0:= new `long`[v0];
  #L475d00.  v1:= 0I;
  #L475d02.  call `<init>`(v2, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.<init>:([JI)V` @kind direct;
  #L475d08.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.r` v0 @kind this, `long`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.<init>:([JI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L475d1c.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.<init>:()V` @kind direct;
  #L475d22.  v0.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] := v1 @kind object;
  #L475d26.  v0.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int` := v2;
  #L475d2a.  return @kind void;
}
procedure `void` `c`(`com.google.crypto.tink.shaded.protobuf.r` v4 @kind this, `int` v5 , `long` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.c:(IJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L475d78.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L475d7e.  if v5 < 0 then goto L475df4;
  #L475d82.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475d86.  if v5 > v0 then goto L475df4;
  #L475d8a.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475d8e.  v2:= length @variable v1;
  #L475d90.  if v0 >= v2 then goto L475da2;
  #L475d94.  v2:= v5 + 1;
  #L475d98.  v0:= v0 - v5 @kind int;
  #L475d9a.  call `arraycopy`(v1, v5, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L475da0.  goto L475dd2;
  #L475da2.  v0:= v0 * 3;
  #L475da6.  v0:= v0 / 2;
  #L475daa.  v0:= v0 + 1;
  #L475dae.  v0:= new `long`[v0];
  #L475db2.  v2:= 0I;
  #L475db4.  call `arraycopy`(v1, v2, v0, v2, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L475dba.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475dbe.  v2:= v5 + 1;
  #L475dc2.  v3:= v4.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475dc6.  v3:= v3 - v5 @kind int;
  #L475dc8.  call `arraycopy`(v1, v5, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L475dce.  v4.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] := v0 @kind object;
  #L475dd2.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475dd6.  v0[v5]:= v6 @kind wide;
  #L475dda.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475dde.  v5:= v5 + 1;
  #L475de2.  v4.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int` := v5;
  #L475de6.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L475dea.  v5:= v5 + 1;
  #L475dee.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L475df2.  return @kind void;
  #L475df4.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L475df8.  call temp:= `g`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.g:(I)Ljava/lang/String;` @kind direct;
  #L475dfe.  v5:= temp @kind object;
  #L475e00.  call `<init>`(v6, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L475e06.  throw v6;
}
procedure `com.google.crypto.tink.shaded.protobuf.r` `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.d:()Lcom/google/crypto/tink/shaded/protobuf/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L475ac0.  v0:= `@@com.google.crypto.tink.shaded.protobuf.r.d` @type ^`com.google.crypto.tink.shaded.protobuf.r` @kind object;
  #L475ac4.  return v0 @kind object;
}
procedure `void` `e`(`com.google.crypto.tink.shaded.protobuf.r` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.e:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L475e70.  if v2 < 0 then goto L475e7e;
  #L475e74.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475e78.  if v2 >= v0 then goto L475e7e;
  #L475e7c.  return @kind void;
  #L475e7e.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L475e82.  call temp:= `g`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.g:(I)Ljava/lang/String;` @kind direct;
  #L475e88.  v2:= temp @kind object;
  #L475e8a.  call `<init>`(v0, v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L475e90.  throw v0;
}
procedure `java.lang.String` `g`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.g:(I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L475c38.  v0:= new `java.lang.StringBuilder`;
  #L475c3c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L475c42.  v1:= "Index:" @kind object;
  #L475c46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L475c4c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L475c52.  v3:= ", Size:" @kind object;
  #L475c56.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L475c5c.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475c60.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L475c66.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L475c6c.  v3:= temp @kind object;
  #L475c6e.  return v3 @kind object;
}
procedure `void` `a`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this, `int` v3 , `java.lang.Long` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.a:(ILjava/lang/Long;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L475d3c.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L475d42.  v0:= temp @kind wide;
  #L475d44.  call `c`(v2, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.c:(IJ)V` @kind direct;
  #L475d4a.  return @kind void;
}
procedure `void` `add`(`com.google.crypto.tink.shaded.protobuf.r` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L475d5c.  v2:= (`java.lang.Long`) v2 @kind object;
  #L475d60.  call `a`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.a:(ILjava/lang/Long;)V` @kind virtual;
  #L475d66.  return @kind void;
}
procedure `boolean` `add`(`com.google.crypto.tink.shaded.protobuf.r` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4758c8.  v1:= (`java.lang.Long`) v1 @kind object;
  #L4758cc.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.b:(Ljava/lang/Long;)Z` @kind virtual;
  #L4758d2.  v1:= temp;
  #L4758d4.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.r` v5 @kind this, `java.util.Collection` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4758e8.  call `ensureIsMutable`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L4758ee.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4758f4.  v0:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.r` @kind boolean;
  #L4758f8.  if v0 != 0 then goto L475906;
  #L4758fc.  call temp:= `addAll`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L475902.  v6:= temp;
  #L475904.  return v6;
  #L475906.  v6:= (`com.google.crypto.tink.shaded.protobuf.r`) v6 @kind object;
  #L47590a.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L47590e.  v1:= 0I;
  #L475910.  if v0 != 0 then goto L475916;
  #L475914.  return v1;
  #L475916.  v2:= 2147483647I;
  #L47591c.  v3:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475920.  v2:= v2 - v3 @kind int;
  #L475922.  if v2 < v0 then goto L475966;
  #L475926.  v3:= v3 + v0 @kind int;
  #L475928.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L47592c.  v2:= length @variable v0;
  #L47592e.  if v3 <= v2 then goto L47593e;
  #L475932.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([JI)[J` @kind static;
  #L475938.  v0:= temp @kind object;
  #L47593a.  v5.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] := v0 @kind object;
  #L47593e.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475942.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475946.  v4:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L47594a.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L47594e.  call `arraycopy`(v0, v1, v2, v4, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L475954.  v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int` := v3;
  #L475958.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L47595c.  v0:= 1I;
  #L47595e.  v6:= v6 + v0 @kind int;
  #L475960.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L475964.  return v0;
  #L475966.  v6:= new `java.lang.OutOfMemoryError`;
  #L47596a.  call `<init>`(v6) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L475970.  throw v6;
}
procedure `void` `addLong`(`com.google.crypto.tink.shaded.protobuf.r` v4 @kind this, `long` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addLong:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L475e18.  call `ensureIsMutable`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L475e1e.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475e22.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475e26.  v2:= length @variable v1;
  #L475e28.  if v0 != v2 then goto L475e48;
  #L475e2c.  v2:= v0 * 3;
  #L475e30.  v2:= v2 / 2;
  #L475e34.  v2:= v2 + 1;
  #L475e38.  v2:= new `long`[v2];
  #L475e3c.  v3:= 0I;
  #L475e3e.  call `arraycopy`(v1, v3, v2, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L475e44.  v4.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] := v2 @kind object;
  #L475e48.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475e4c.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475e50.  v2:= v1 + 1;
  #L475e54.  v4.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int` := v2;
  #L475e58.  v0[v1]:= v5 @kind wide;
  #L475e5c.  return @kind void;
}
procedure `boolean` `b`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this, `java.lang.Long` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.b:(Ljava/lang/Long;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4758a4.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4758aa.  v0:= temp @kind wide;
  #L4758ac.  call `addLong`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.addLong:(J)V` @kind virtual;
  #L4758b2.  v3:= 1I;
  #L4758b4.  return v3;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.r` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L475984.  v0:= 1I;
  #L475986.  if v8 != v9 then goto L47598c;
  #L47598a.  return v0;
  #L47598c.  v1:= instanceof @variable v9 @type ^`com.google.crypto.tink.shaded.protobuf.r` @kind boolean;
  #L475990.  if v1 != 0 then goto L47599e;
  #L475994.  call temp:= `equals`(v8, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L47599a.  v9:= temp;
  #L47599c.  return v9;
  #L47599e.  v9:= (`com.google.crypto.tink.shaded.protobuf.r`) v9 @kind object;
  #L4759a2.  v1:= v8.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L4759a6.  v2:= v9.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L4759aa.  v3:= 0I;
  #L4759ac.  if v1 == v2 then goto L4759b2;
  #L4759b0.  return v3;
  #L4759b2.  v9:= v9.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L4759b6.  v1:= 0I;
  #L4759b8.  v2:= v8.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L4759bc.  if v1 >= v2 then goto L4759dc;
  #L4759c0.  v2:= v8.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L4759c4.  v4:= v2[v1] @kind wide;
  #L4759c8.  v6:= v9[v1] @kind wide;
  #L4759cc.  v2:= lcmp(v4, v6);
  #L4759d0.  if v2 == 0 then goto L4759d6;
  #L4759d4.  return v3;
  #L4759d6.  v1:= v1 + 1;
  #L4759da.  goto L4759b8;
  #L4759dc.  return v0;
}
procedure `java.lang.Long` `f`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.f:(I)Ljava/lang/Long;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L475b2c.  call temp:= `getLong`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.getLong:(I)J` @kind virtual;
  #L475b32.  v0:= temp @kind wide;
  #L475b34.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L475b3a.  v3:= temp @kind object;
  #L475b3c.  return v3 @kind object;
}
procedure `java.lang.Object` `get`(`com.google.crypto.tink.shaded.protobuf.r` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L475be0.  call temp:= `f`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.f:(I)Ljava/lang/Long;` @kind virtual;
  #L475be6.  v1:= temp @kind object;
  #L475be8.  return v1 @kind object;
}
procedure `long` `getLong`(`com.google.crypto.tink.shaded.protobuf.r` v3 @kind this, `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.getLong:(I)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L475c80.  call `e`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.e:(I)V` @kind direct;
  #L475c86.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475c8a.  v1:= v0[v4] @kind wide;
  #L475c8e.  return v1 @kind wide;
}
procedure `java.lang.Long` `h`(`com.google.crypto.tink.shaded.protobuf.r` v5 @kind this, `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.h:(I)Ljava/lang/Long;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L475b50.  call `ensureIsMutable`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L475b56.  call `e`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.e:(I)V` @kind direct;
  #L475b5c.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475b60.  v1:= v0[v6] @kind wide;
  #L475b64.  v3:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475b68.  v4:= v3 + -1;
  #L475b6c.  if v6 >= v4 then goto L475b80;
  #L475b70.  v4:= v6 + 1;
  #L475b74.  v3:= v3 - v6 @kind int;
  #L475b76.  v3:= v3 + -1;
  #L475b7a.  call `arraycopy`(v0, v4, v0, v6, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L475b80.  v6:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475b84.  v6:= v6 + -1;
  #L475b88.  v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int` := v6;
  #L475b8c.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L475b90.  v6:= v6 + 1;
  #L475b94.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L475b98.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L475b9e.  v6:= temp @kind object;
  #L475ba0.  return v6 @kind object;
}
procedure `int` `hashCode`(`com.google.crypto.tink.shaded.protobuf.r` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L475ad8.  v0:= 1I;
  #L475ada.  v1:= 0I;
  #L475adc.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475ae0.  if v1 >= v2 then goto L475b00;
  #L475ae4.  v0:= v0 * 31;
  #L475ae8.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475aec.  v3:= v2[v1] @kind wide;
  #L475af0.  call temp:= `hashLong`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/Internal;.hashLong:(J)I` @kind static;
  #L475af6.  v2:= temp;
  #L475af8.  v0:= v0 + v2 @kind int;
  #L475afa.  v1:= v1 + 1;
  #L475afe.  goto L475adc;
  #L475b00.  return v0;
}
procedure `java.lang.Long` `i`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this, `int` v3 , `java.lang.Long` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.i:(ILjava/lang/Long;)Ljava/lang/Long;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L475bb4.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L475bba.  v0:= temp @kind wide;
  #L475bbc.  call temp:= `setLong`(v2, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.setLong:(IJ)J` @kind virtual;
  #L475bc2.  v3:= temp @kind wide;
  #L475bc4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L475bca.  v3:= temp @kind object;
  #L475bcc.  return v3 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$LongList` `mutableCopyWithCapacity`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$LongList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L475a64.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475a68.  if v3 < v0 then goto L475a88;
  #L475a6c.  v0:= new `com.google.crypto.tink.shaded.protobuf.r`;
  #L475a70.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475a74.  call temp:= `copyOf`(v1, v3) @signature `Ljava/util/Arrays;.copyOf:([JI)[J` @kind static;
  #L475a7a.  v3:= temp @kind object;
  #L475a7c.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475a80.  call `<init>`(v0, v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.<init>:([JI)V` @kind direct;
  #L475a86.  return v0 @kind object;
  #L475a88.  v3:= new `java.lang.IllegalArgumentException`;
  #L475a8c.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L475a92.  throw v3;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList` `mutableCopyWithCapacity`(`com.google.crypto.tink.shaded.protobuf.r` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$ProtobufList;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L475aa4.  call temp:= `mutableCopyWithCapacity`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.mutableCopyWithCapacity:(I)Lcom/google/crypto/tink/shaded/protobuf/Internal$LongList;` @kind virtual;
  #L475aaa.  v1:= temp @kind object;
  #L475aac.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`com.google.crypto.tink.shaded.protobuf.r` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L475bfc.  call temp:= `h`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.h:(I)Ljava/lang/Long;` @kind virtual;
  #L475c02.  v1:= temp @kind object;
  #L475c04.  return v1 @kind object;
}
procedure `boolean` `remove`(`com.google.crypto.tink.shaded.protobuf.r` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4759f0.  call `ensureIsMutable`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L4759f6.  v0:= 0I;
  #L4759f8.  v1:= 0I;
  #L4759fa.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L4759fe.  if v1 >= v2 then goto L475a52;
  #L475a02.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475a06.  v3:= v2[v1] @kind wide;
  #L475a0a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L475a10.  v2:= temp @kind object;
  #L475a12.  call temp:= `equals`(v6, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L475a18.  v2:= temp;
  #L475a1a.  if v2 == 0 then goto L475a4c;
  #L475a1e.  v6:= v5.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475a22.  v0:= v1 + 1;
  #L475a26.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475a2a.  v2:= v2 - v1 @kind int;
  #L475a2c.  v3:= 1I;
  #L475a2e.  v2:= v2 - v3 @kind int;
  #L475a30.  call `arraycopy`(v6, v0, v6, v1, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L475a36.  v6:= v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475a3a.  v6:= v6 - v3 @kind int;
  #L475a3c.  v5.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int` := v6;
  #L475a40.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L475a44.  v6:= v6 + v3 @kind int;
  #L475a46.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L475a4a.  return v3;
  #L475a4c.  v1:= v1 + 1;
  #L475a50.  goto L4759fa;
  #L475a52.  return v0;
}
procedure `void` `removeRange`(`com.google.crypto.tink.shaded.protobuf.r` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.removeRange:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L475ea4.  call `ensureIsMutable`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L475eaa.  if v4 < v3 then goto L475ed8;
  #L475eae.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475eb2.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475eb6.  v1:= v1 - v4 @kind int;
  #L475eb8.  call `arraycopy`(v0, v4, v0, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L475ebe.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475ec2.  v4:= v4 - v3 @kind int;
  #L475ec4.  v0:= v0 - v4 @kind int;
  #L475ec6.  v2.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int` := v0;
  #L475eca.  v3:= v2.`java.util.AbstractList.modCount` @type ^`int`;
  #L475ece.  v3:= v3 + 1;
  #L475ed2.  v2.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L475ed6.  return @kind void;
  #L475ed8.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L475edc.  v4:= "toIndex < fromIndex" @kind object;
  #L475ee0.  call `<init>`(v3, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L475ee6.  throw v3;
}
procedure `java.lang.Object` `set`(`com.google.crypto.tink.shaded.protobuf.r` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L475c18.  v2:= (`java.lang.Long`) v2 @kind object;
  #L475c1c.  call temp:= `i`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.i:(ILjava/lang/Long;)Ljava/lang/Long;` @kind virtual;
  #L475c22.  v1:= temp @kind object;
  #L475c24.  return v1 @kind object;
}
procedure `long` `setLong`(`com.google.crypto.tink.shaded.protobuf.r` v3 @kind this, `int` v4 , `long` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.setLong:(IJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L475ca0.  call `ensureIsMutable`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/a;.ensureIsMutable:()V` @kind virtual;
  #L475ca6.  call `e`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.e:(I)V` @kind direct;
  #L475cac.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.r.b` @type ^`long`[] @kind object;
  #L475cb0.  v1:= v0[v4] @kind wide;
  #L475cb4.  v0[v4]:= v5 @kind wide;
  #L475cb8.  return v1 @kind wide;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.r` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/r;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L475b14.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.r.c` @type ^`int`;
  #L475b18.  return v0;
}
