record `com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` @kind class @AccessFlag ABSTRACT extends `com.google.crypto.tink.shaded.protobuf.CodedOutputStream` @kind class {
  `byte`[] `com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @AccessFlag FINAL;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.f` @AccessFlag FINAL;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @AccessFlag ;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L466488.  v0:= 0I;
  #L46648a.  call `<init>`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$a;)V` @kind direct;
  #L466490.  if v2 < 0 then goto L4664b0;
  #L466494.  v0:= 20I;
  #L466498.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L46649e.  v2:= temp;
  #L4664a0.  v2:= new `byte`[v2];
  #L4664a4.  v1.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] := v2 @kind object;
  #L4664a8.  v2:= length @variable v2;
  #L4664aa.  v1.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.f` @type ^`int` := v2;
  #L4664ae.  return @kind void;
  #L4664b0.  v2:= new `java.lang.IllegalArgumentException`;
  #L4664b4.  v0:= "bufferSize must be >= 0" @kind object;
  #L4664b8.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4664be.  throw v2;
}
procedure `int` `getTotalBytesWritten`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.getTotalBytesWritten:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L466450.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L466454.  return v0;
}
procedure `void` `p`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v3 @kind this, `byte` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.p:(B)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4664d0.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L4664d4.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L4664d8.  v2:= v1 + 1;
  #L4664dc.  v3.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L4664e0.  v0[v1]:= v4 @kind byte;
  #L4664e4.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L4664e8.  v4:= v4 + 1;
  #L4664ec.  v3.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v4;
  #L4664f0.  return @kind void;
}
procedure `void` `q`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.q:(I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L466504.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L466508.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L46650c.  v2:= v1 + 1;
  #L466510.  v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L466514.  v3:= v5 ^& 255;
  #L466518.  v3:= (`byte`) v3 @kind i2b;
  #L46651a.  v0[v1]:= v3 @kind byte;
  #L46651e.  v1:= v2 + 1;
  #L466522.  v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v1;
  #L466526.  v3:= v5 ^> 8;
  #L46652a.  v3:= v3 ^& 255;
  #L46652e.  v3:= (`byte`) v3 @kind i2b;
  #L466530.  v0[v2]:= v3 @kind byte;
  #L466534.  v2:= v1 + 1;
  #L466538.  v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L46653c.  v3:= v5 ^> 16;
  #L466540.  v3:= v3 ^& 255;
  #L466544.  v3:= (`byte`) v3 @kind i2b;
  #L466546.  v0[v1]:= v3 @kind byte;
  #L46654a.  v1:= v2 + 1;
  #L46654e.  v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v1;
  #L466552.  v5:= v5 ^> 24;
  #L466556.  v5:= v5 ^& 255;
  #L46655a.  v5:= (`byte`) v5 @kind i2b;
  #L46655c.  v0[v2]:= v5 @kind byte;
  #L466560.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L466564.  v5:= v5 + 4;
  #L466568.  v4.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v5;
  #L46656c.  return @kind void;
}
procedure `void` `r`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v8 @kind this, `long` v9 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.r:(J)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L466580.  v0:= v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L466584.  v1:= v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L466588.  v2:= v1 + 1;
  #L46658c.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L466590.  v3:= 255L;
  #L466594.  v5:= v9 ^& v3 @kind long;
  #L466598.  v6:= (`int`) v5 @kind l2i;
  #L46659a.  v5:= (`byte`) v6 @kind i2b;
  #L46659c.  v0[v1]:= v5 @kind byte;
  #L4665a0.  v1:= v2 + 1;
  #L4665a4.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v1;
  #L4665a8.  v5:= 8I;
  #L4665ac.  v6:= v9 ^> v5 @kind long;
  #L4665b0.  v6:= v6 ^& v3 @kind long;
  #L4665b2.  v7:= (`int`) v6 @kind l2i;
  #L4665b4.  v6:= (`byte`) v7 @kind i2b;
  #L4665b6.  v0[v2]:= v6 @kind byte;
  #L4665ba.  v2:= v1 + 1;
  #L4665be.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L4665c2.  v6:= 16I;
  #L4665c6.  v6:= v9 ^> v6 @kind long;
  #L4665ca.  v6:= v6 ^& v3 @kind long;
  #L4665cc.  v7:= (`int`) v6 @kind l2i;
  #L4665ce.  v6:= (`byte`) v7 @kind i2b;
  #L4665d0.  v0[v1]:= v6 @kind byte;
  #L4665d4.  v1:= v2 + 1;
  #L4665d8.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v1;
  #L4665dc.  v6:= 24I;
  #L4665e0.  v6:= v9 ^> v6 @kind long;
  #L4665e4.  v3:= v3 ^& v6 @kind long;
  #L4665e6.  v4:= (`int`) v3 @kind l2i;
  #L4665e8.  v3:= (`byte`) v4 @kind i2b;
  #L4665ea.  v0[v2]:= v3 @kind byte;
  #L4665ee.  v2:= v1 + 1;
  #L4665f2.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L4665f6.  v3:= 32I;
  #L4665fa.  v3:= v9 ^> v3 @kind long;
  #L4665fe.  v4:= (`int`) v3 @kind l2i;
  #L466600.  v3:= v4 ^& 255;
  #L466604.  v3:= (`byte`) v3 @kind i2b;
  #L466606.  v0[v1]:= v3 @kind byte;
  #L46660a.  v1:= v2 + 1;
  #L46660e.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v1;
  #L466612.  v3:= 40I;
  #L466616.  v3:= v9 ^> v3 @kind long;
  #L46661a.  v4:= (`int`) v3 @kind l2i;
  #L46661c.  v3:= v4 ^& 255;
  #L466620.  v3:= (`byte`) v3 @kind i2b;
  #L466622.  v0[v2]:= v3 @kind byte;
  #L466626.  v2:= v1 + 1;
  #L46662a.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L46662e.  v3:= 48I;
  #L466632.  v3:= v9 ^> v3 @kind long;
  #L466636.  v4:= (`int`) v3 @kind l2i;
  #L466638.  v3:= v4 ^& 255;
  #L46663c.  v3:= (`byte`) v3 @kind i2b;
  #L46663e.  v0[v1]:= v3 @kind byte;
  #L466642.  v1:= v2 + 1;
  #L466646.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v1;
  #L46664a.  v1:= 56I;
  #L46664e.  v9:= v9 ^> v1 @kind long;
  #L466650.  v10:= (`int`) v9 @kind l2i;
  #L466652.  v9:= v10 ^& 255;
  #L466656.  v9:= (`byte`) v9 @kind i2b;
  #L466658.  v0[v2]:= v9 @kind byte;
  #L46665c.  v9:= v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L466660.  v9:= v9 + v5 @kind int;
  #L466662.  v8.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v9;
  #L466666.  return @kind void;
}
procedure `void` `s`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.s:(I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L466678.  if v3 < 0 then goto L466684;
  #L46667c.  call `u`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.u:(I)V` @kind virtual;
  #L466682.  goto L46668c;
  #L466684.  v0:= (`long`) v3 @kind i2l;
  #L466686.  call `v`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.v:(J)V` @kind virtual;
  #L46668c.  return @kind void;
}
procedure `int` `spaceLeft`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.spaceLeft:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L466468.  v0:= new `java.lang.UnsupportedOperationException`;
  #L46646c.  v1:= "spaceLeft() can only be called on CodedOutputStreams that are writing to a flat array or ByteBuffer." @kind object;
  #L466470.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L466476.  throw v0;
}
procedure `void` `t`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.t:(II)V` @AccessFlag FINAL {
    temp;

  #L4666a0.  call temp:= `a`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L4666a6.  v1:= temp;
  #L4666a8.  call `u`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.u:(I)V` @kind virtual;
  #L4666ae.  return @kind void;
}
procedure `void` `u`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v6 @kind this, `int` v7 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.u:(I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4666c0.  call temp:= `a`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.a:()Z` @kind static;
  #L4666c6.  v0:= temp;
  #L4666c8.  if v0 == 0 then goto L466732;
  #L4666cc.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L4666d0.  v0:= (`long`) v0 @kind i2l;
  #L4666d2.  v2:= v7 ^& -128;
  #L4666d6.  if v2 != 0 then goto L46670a;
  #L4666da.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L4666de.  v3:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L4666e2.  v4:= v3 + 1;
  #L4666e6.  v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v4;
  #L4666ea.  v3:= (`long`) v3 @kind i2l;
  #L4666ec.  v7:= (`byte`) v7 @kind i2b;
  #L4666ee.  call `O`(v2, v3, v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L4666f4.  v7:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L4666f8.  v2:= (`long`) v7 @kind i2l;
  #L4666fa.  v2:= v2 - v0 @kind long;
  #L4666fc.  v7:= (`int`) v2 @kind l2i;
  #L4666fe.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L466702.  v0:= v0 + v7 @kind int;
  #L466704.  v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v0;
  #L466708.  return @kind void;
  #L46670a.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L46670e.  v3:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L466712.  v4:= v3 + 1;
  #L466716.  v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v4;
  #L46671a.  v3:= (`long`) v3 @kind i2l;
  #L46671c.  v5:= v7 ^& 127;
  #L466720.  v5:= v5 ^| 128;
  #L466724.  v5:= (`byte`) v5 @kind i2b;
  #L466726.  call `O`(v2, v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L46672c.  v7:= v7 ^>> 7;
  #L466730.  goto L4666d2;
  #L466732.  v0:= v7 ^& -128;
  #L466736.  if v0 != 0 then goto L46675e;
  #L46673a.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L46673e.  v1:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L466742.  v2:= v1 + 1;
  #L466746.  v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L46674a.  v7:= (`byte`) v7 @kind i2b;
  #L46674c.  v0[v1]:= v7 @kind byte;
  #L466750.  v7:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L466754.  v7:= v7 + 1;
  #L466758.  v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v7;
  #L46675c.  return @kind void;
  #L46675e.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L466762.  v1:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L466766.  v2:= v1 + 1;
  #L46676a.  v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L46676e.  v2:= v7 ^& 127;
  #L466772.  v2:= v2 ^| 128;
  #L466776.  v2:= (`byte`) v2 @kind i2b;
  #L466778.  v0[v1]:= v2 @kind byte;
  #L46677c.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L466780.  v0:= v0 + 1;
  #L466784.  v6.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v0;
  #L466788.  v7:= v7 ^>> 7;
  #L46678c.  goto L466732;
}
procedure `void` `v`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b` v11 @kind this, `long` v12 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream$b;.v:(J)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4667a0.  call temp:= `a`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.a:()Z` @kind static;
  #L4667a6.  v0:= temp;
  #L4667a8.  v1:= 7I;
  #L4667aa.  v2:= 0L;
  #L4667ae.  v4:= -128L;
  #L4667b2.  if v0 == 0 then goto L466822;
  #L4667b6.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L4667ba.  v6:= (`long`) v0 @kind i2l;
  #L4667bc.  v8:= v12 ^& v4 @kind long;
  #L4667c0.  v0:= lcmp(v8, v2);
  #L4667c4.  if v0 != 0 then goto L4667fa;
  #L4667c8.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L4667cc.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L4667d0.  v2:= v1 + 1;
  #L4667d4.  v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L4667d8.  v1:= (`long`) v1 @kind i2l;
  #L4667da.  v13:= (`int`) v12 @kind l2i;
  #L4667dc.  v12:= (`byte`) v13 @kind i2b;
  #L4667de.  call `O`(v0, v1, v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L4667e4.  v12:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L4667e8.  v12:= (`long`) v12 @kind i2l;
  #L4667ea.  v12:= v12 - v6 @kind long;
  #L4667ec.  v13:= (`int`) v12 @kind l2i;
  #L4667ee.  v12:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L4667f2.  v12:= v12 + v13 @kind int;
  #L4667f4.  v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v12;
  #L4667f8.  return @kind void;
  #L4667fa.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L4667fe.  v8:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L466802.  v9:= v8 + 1;
  #L466806.  v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v9;
  #L46680a.  v8:= (`long`) v8 @kind i2l;
  #L46680c.  v10:= (`int`) v12 @kind l2i;
  #L46680e.  v10:= v10 ^& 127;
  #L466812.  v10:= v10 ^| 128;
  #L466816.  v10:= (`byte`) v10 @kind i2b;
  #L466818.  call `O`(v0, v8, v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.O:([BJB)V` @kind static;
  #L46681e.  v12:= v12 ^>> v1 @kind long;
  #L466820.  goto L4667bc;
  #L466822.  v6:= v12 ^& v4 @kind long;
  #L466826.  v0:= lcmp(v6, v2);
  #L46682a.  if v0 != 0 then goto L466854;
  #L46682e.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L466832.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L466836.  v2:= v1 + 1;
  #L46683a.  v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v2;
  #L46683e.  v13:= (`int`) v12 @kind l2i;
  #L466840.  v12:= (`byte`) v13 @kind i2b;
  #L466842.  v0[v1]:= v12 @kind byte;
  #L466846.  v12:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L46684a.  v12:= v12 + 1;
  #L46684e.  v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v12;
  #L466852.  return @kind void;
  #L466854.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.e` @type ^`byte`[] @kind object;
  #L466858.  v6:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int`;
  #L46685c.  v7:= v6 + 1;
  #L466860.  v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.g` @type ^`int` := v7;
  #L466864.  v7:= (`int`) v12 @kind l2i;
  #L466866.  v7:= v7 ^& 127;
  #L46686a.  v7:= v7 ^| 128;
  #L46686e.  v7:= (`byte`) v7 @kind i2b;
  #L466870.  v0[v6]:= v7 @kind byte;
  #L466874.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int`;
  #L466878.  v0:= v0 + 1;
  #L46687c.  v11.`com.google.crypto.tink.shaded.protobuf.CodedOutputStream$b.h` @type ^`int` := v0;
  #L466880.  v12:= v12 ^>> v1 @kind long;
  #L466882.  goto L466822;
}
