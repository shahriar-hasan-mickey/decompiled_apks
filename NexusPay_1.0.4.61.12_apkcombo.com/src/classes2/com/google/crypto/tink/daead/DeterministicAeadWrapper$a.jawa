record `com.google.crypto.tink.daead.DeterministicAeadWrapper$a` @kind class @AccessFlag  extends `com.google.crypto.tink.DeterministicAead` @kind interface {
  `com.google.crypto.tink.PrimitiveSet` `com.google.crypto.tink.daead.DeterministicAeadWrapper$a.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.crypto.tink.daead.DeterministicAeadWrapper$a` v0 @kind this, `com.google.crypto.tink.PrimitiveSet` v1 @kind object) @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper$a;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42c5a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42c5ae.  v0.`com.google.crypto.tink.daead.DeterministicAeadWrapper$a.a` @type ^`com.google.crypto.tink.PrimitiveSet` := v1 @kind object;
  #L42c5b2.  return @kind void;
}
procedure `byte`[] `decryptDeterministically`(`com.google.crypto.tink.daead.DeterministicAeadWrapper$a` v6 @kind this, `byte`[] v7 @kind object, `byte`[] v8 @kind object) @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper$a;.decryptDeterministically:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L42c42c.  v0:= length @variable v7;
  #L42c42e.  v1:= 5I;
  #L42c430.  if v0 <= v1 then goto L42c4c6;
  #L42c434.  v0:= 0I;
  #L42c436.  call temp:= `copyOfRange`(v7, v0, v1) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L42c43c.  v0:= temp @kind object;
  #L42c43e.  v2:= length @variable v7;
  #L42c440.  call temp:= `copyOfRange`(v7, v1, v2) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L42c446.  v1:= temp @kind object;
  #L42c448.  v2:= v6.`com.google.crypto.tink.daead.DeterministicAeadWrapper$a.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L42c44c.  call temp:= `getPrimitive`(v2, v0) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimitive:([B)Ljava/util/List;` @kind virtual;
  #L42c452.  v0:= temp @kind object;
  #L42c454.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42c45a.  v0:= temp @kind object;
  #L42c45c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42c462.  v2:= temp;
  #L42c464.  if v2 == 0 then goto L42c4c6;
  #L42c468.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42c46e.  v2:= temp @kind object;
  #L42c470.  v2:= (`com.google.crypto.tink.PrimitiveSet$Entry`) v2 @kind object;
  #L42c474.  call temp:= `getPrimitive`(v2) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L42c47a.  v2:= temp @kind object;
  #L42c47c.  v2:= (`com.google.crypto.tink.DeterministicAead`) v2 @kind object;
  #L42c480.  call temp:= `decryptDeterministically`(v2, v1, v8) @signature `Lcom/google/crypto/tink/DeterministicAead;.decryptDeterministically:([B[B)[B` @kind interface;
  #L42c486.  v7:= temp @kind object;
  #L42c488.  return v7 @kind object;
  #L42c48a.  v2:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L42c48c.  call temp:= `a`() @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper;.a:()Ljava/util/logging/Logger;` @kind static;
  #L42c492.  v3:= temp @kind object;
  #L42c494.  v4:= new `java.lang.StringBuilder`;
  #L42c498.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42c49e.  v5:= "ciphertext prefix matches a key, but cannot decrypt: " @kind object;
  #L42c4a2.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c4a8.  call temp:= `toString`(v2) @signature `Ljava/security/GeneralSecurityException;.toString:()Ljava/lang/String;` @kind virtual;
  #L42c4ae.  v2:= temp @kind object;
  #L42c4b0.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c4b6.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42c4bc.  v2:= temp @kind object;
  #L42c4be.  call `info`(v3, v2) @signature `Ljava/util/logging/Logger;.info:(Ljava/lang/String;)V` @kind virtual;
  #L42c4c4.  goto L42c45c;
  #L42c4c6.  v0:= v6.`com.google.crypto.tink.daead.DeterministicAeadWrapper$a.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L42c4ca.  call temp:= `getRawPrimitives`(v0) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getRawPrimitives:()Ljava/util/List;` @kind virtual;
  #L42c4d0.  v0:= temp @kind object;
  #L42c4d2.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42c4d8.  v0:= temp @kind object;
  #L42c4da.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42c4e0.  v1:= temp;
  #L42c4e2.  if v1 == 0 then goto L42c50c;
  #L42c4e6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42c4ec.  v1:= temp @kind object;
  #L42c4ee.  v1:= (`com.google.crypto.tink.PrimitiveSet$Entry`) v1 @kind object;
  #L42c4f2.  call temp:= `getPrimitive`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L42c4f8.  v1:= temp @kind object;
  #L42c4fa.  v1:= (`com.google.crypto.tink.DeterministicAead`) v1 @kind object;
  #L42c4fe.  call temp:= `decryptDeterministically`(v1, v7, v8) @signature `Lcom/google/crypto/tink/DeterministicAead;.decryptDeterministically:([B[B)[B` @kind interface;
  #L42c504.  v7:= temp @kind object;
  #L42c506.  return v7 @kind object;
  #L42c508.  
  #L42c50a.  goto L42c4da;
  #L42c50c.  v7:= new `java.security.GeneralSecurityException`;
  #L42c510.  v8:= "decryption failed" @kind object;
  #L42c514.  call `<init>`(v7, v8) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42c51a.  throw v7;
  catch `java.security.GeneralSecurityException` @[L42c474..L42c488] goto L42c48a;
  catch `java.security.GeneralSecurityException` @[L42c4f2..L42c506] goto L42c508;
}
procedure `byte`[] `encryptDeterministically`(`com.google.crypto.tink.daead.DeterministicAeadWrapper$a` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper$a;.encryptDeterministically:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42c548.  v0:= 2I;
  #L42c54a.  v0:= new `byte`[][v0];
  #L42c54e.  v1:= v3.`com.google.crypto.tink.daead.DeterministicAeadWrapper$a.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L42c552.  call temp:= `getPrimary`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L42c558.  v1:= temp @kind object;
  #L42c55a.  call temp:= `getIdentifier`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getIdentifier:()[B` @kind virtual;
  #L42c560.  v1:= temp @kind object;
  #L42c562.  v2:= 0I;
  #L42c564.  v0[v2]:= v1 @kind object;
  #L42c568.  v1:= v3.`com.google.crypto.tink.daead.DeterministicAeadWrapper$a.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L42c56c.  call temp:= `getPrimary`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L42c572.  v1:= temp @kind object;
  #L42c574.  call temp:= `getPrimitive`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L42c57a.  v1:= temp @kind object;
  #L42c57c.  v1:= (`com.google.crypto.tink.DeterministicAead`) v1 @kind object;
  #L42c580.  call temp:= `encryptDeterministically`(v1, v4, v5) @signature `Lcom/google/crypto/tink/DeterministicAead;.encryptDeterministically:([B[B)[B` @kind interface;
  #L42c586.  v4:= temp @kind object;
  #L42c588.  v5:= 1I;
  #L42c58a.  v0[v5]:= v4 @kind object;
  #L42c58e.  call temp:= `concat`(v0) @signature `Lcom/google/crypto/tink/subtle/Bytes;.concat:([[B)[B` @kind static;
  #L42c594.  v4:= temp @kind object;
  #L42c596.  return v4 @kind object;
}
