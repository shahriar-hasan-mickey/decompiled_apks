record `com.google.crypto.tink.daead.DeterministicAeadConfig` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@com.google.crypto.tink.daead.DeterministicAeadConfig.AES_SIV_TYPE_URL` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.RegistryConfig` `@@com.google.crypto.tink.daead.DeterministicAeadConfig.LATEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.RegistryConfig` `@@com.google.crypto.tink.daead.DeterministicAeadConfig.TINK_1_1_0` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/daead/DeterministicAeadConfig;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L42c254.  v0:= new `com.google.crypto.tink.daead.AesSivKeyManager`;
  #L42c258.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/daead/AesSivKeyManager;.<init>:()V` @kind direct;
  #L42c25e.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/daead/AesSivKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L42c264.  v0:= temp @kind object;
  #L42c266.  `@@com.google.crypto.tink.daead.DeterministicAeadConfig.AES_SIV_TYPE_URL` @type ^`java.lang.String` := v0 @kind object;
  #L42c26a.  call temp:= `getDefaultInstance`() @signature `Lcom/google/crypto/tink/proto/RegistryConfig;.getDefaultInstance:()Lcom/google/crypto/tink/proto/RegistryConfig;` @kind static;
  #L42c270.  v0:= temp @kind object;
  #L42c272.  `@@com.google.crypto.tink.daead.DeterministicAeadConfig.TINK_1_1_0` @type ^`com.google.crypto.tink.proto.RegistryConfig` := v0 @kind object;
  #L42c276.  call temp:= `getDefaultInstance`() @signature `Lcom/google/crypto/tink/proto/RegistryConfig;.getDefaultInstance:()Lcom/google/crypto/tink/proto/RegistryConfig;` @kind static;
  #L42c27c.  v0:= temp @kind object;
  #L42c27e.  `@@com.google.crypto.tink.daead.DeterministicAeadConfig.LATEST` @type ^`com.google.crypto.tink.proto.RegistryConfig` := v0 @kind object;
  #L42c282.  call `init`() @signature `Lcom/google/crypto/tink/daead/DeterministicAeadConfig;.init:()V` @kind static;
  #L42c288.  return @kind void;
  #L42c28a.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L42c28c.  v1:= new `java.lang.ExceptionInInitializerError`;
  #L42c290.  call `<init>`(v1, v0) @signature `Ljava/lang/ExceptionInInitializerError;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L42c296.  throw v1;
  catch `java.security.GeneralSecurityException` @[L42c282..L42c288] goto L42c28a;
}
procedure `void` `<init>`(`com.google.crypto.tink.daead.DeterministicAeadConfig` v0 @kind this) @signature `Lcom/google/crypto/tink/daead/DeterministicAeadConfig;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L42c2b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42c2be.  return @kind void;
}
procedure `void` `init`() @signature `Lcom/google/crypto/tink/daead/DeterministicAeadConfig;.init:()V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L42c2d0.  call `register`() @signature `Lcom/google/crypto/tink/daead/DeterministicAeadConfig;.register:()V` @kind static;
  #L42c2d6.  return @kind void;
}
procedure `void` `register`() @signature `Lcom/google/crypto/tink/daead/DeterministicAeadConfig;.register:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42c2e8.  v0:= 1I;
  #L42c2ea.  call `register`(v0) @signature `Lcom/google/crypto/tink/daead/AesSivKeyManager;.register:(Z)V` @kind static;
  #L42c2f0.  call `register`() @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper;.register:()V` @kind static;
  #L42c2f6.  return @kind void;
}
