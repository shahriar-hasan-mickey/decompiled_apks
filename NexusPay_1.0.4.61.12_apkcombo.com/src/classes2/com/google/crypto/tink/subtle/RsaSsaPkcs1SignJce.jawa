record `com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.PublicKeySign` @kind interface {
  `java.security.interfaces.RSAPrivateCrtKey` `com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce.a` @AccessFlag PRIVATE_FINAL;
  `java.security.interfaces.RSAPublicKey` `com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce` v2 @kind this, `java.security.interfaces.RSAPrivateCrtKey` v3 @kind object, `com.google.crypto.tink.subtle.Enums$HashType` v4 @kind object) @signature `Lcom/google/crypto/tink/subtle/RsaSsaPkcs1SignJce;.<init>:(Ljava/security/interfaces/RSAPrivateCrtKey;Lcom/google/crypto/tink/subtle/Enums$HashType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L49d650.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49d656.  call `validateSignatureHash`(v4) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateSignatureHash:(Lcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind static;
  #L49d65c.  call temp:= `getModulus`(v3) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getModulus:()Ljava/math/BigInteger;` @kind interface;
  #L49d662.  v0:= temp @kind object;
  #L49d664.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L49d66a.  v0:= temp;
  #L49d66c.  call `validateRsaModulusSize`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaModulusSize:(I)V` @kind static;
  #L49d672.  call temp:= `getPublicExponent`(v3) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPublicExponent:()Ljava/math/BigInteger;` @kind interface;
  #L49d678.  v0:= temp @kind object;
  #L49d67a.  call `validateRsaPublicExponent`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaPublicExponent:(Ljava/math/BigInteger;)V` @kind static;
  #L49d680.  v2.`com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce.a` @type ^`java.security.interfaces.RSAPrivateCrtKey` := v3 @kind object;
  #L49d684.  call temp:= `toRsaSsaPkcs1Algo`(v4) @signature `Lcom/google/crypto/tink/subtle/SubtleUtil;.toRsaSsaPkcs1Algo:(Lcom/google/crypto/tink/subtle/Enums$HashType;)Ljava/lang/String;` @kind static;
  #L49d68a.  v4:= temp @kind object;
  #L49d68c.  v2.`com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce.c` @type ^`java.lang.String` := v4 @kind object;
  #L49d690.  v4:= `@@com.google.crypto.tink.subtle.EngineFactory.KEY_FACTORY` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L49d694.  v0:= "RSA" @kind object;
  #L49d698.  call temp:= `getInstance`(v4, v0) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L49d69e.  v4:= temp @kind object;
  #L49d6a0.  v4:= (`java.security.KeyFactory`) v4 @kind object;
  #L49d6a4.  v0:= new `java.security.spec.RSAPublicKeySpec`;
  #L49d6a8.  call temp:= `getModulus`(v3) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getModulus:()Ljava/math/BigInteger;` @kind interface;
  #L49d6ae.  v1:= temp @kind object;
  #L49d6b0.  call temp:= `getPublicExponent`(v3) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPublicExponent:()Ljava/math/BigInteger;` @kind interface;
  #L49d6b6.  v3:= temp @kind object;
  #L49d6b8.  call `<init>`(v0, v1, v3) @signature `Ljava/security/spec/RSAPublicKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L49d6be.  call temp:= `generatePublic`(v4, v0) @signature `Ljava/security/KeyFactory;.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;` @kind virtual;
  #L49d6c4.  v3:= temp @kind object;
  #L49d6c6.  v3:= (`java.security.interfaces.RSAPublicKey`) v3 @kind object;
  #L49d6ca.  v2.`com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce.b` @type ^`java.security.interfaces.RSAPublicKey` := v3 @kind object;
  #L49d6ce.  return @kind void;
}
procedure `byte`[] `sign`(`com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce` v3 @kind this, `byte`[] v4 @kind object) @signature `Lcom/google/crypto/tink/subtle/RsaSsaPkcs1SignJce;.sign:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L49d5d0.  v0:= `@@com.google.crypto.tink.subtle.EngineFactory.SIGNATURE` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L49d5d4.  v1:= v3.`com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce.c` @type ^`java.lang.String` @kind object;
  #L49d5d8.  call temp:= `getInstance`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L49d5de.  v0:= temp @kind object;
  #L49d5e0.  v0:= (`java.security.Signature`) v0 @kind object;
  #L49d5e4.  v1:= v3.`com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce.a` @type ^`java.security.interfaces.RSAPrivateCrtKey` @kind object;
  #L49d5e8.  call `initSign`(v0, v1) @signature `Ljava/security/Signature;.initSign:(Ljava/security/PrivateKey;)V` @kind virtual;
  #L49d5ee.  call `update`(v0, v4) @signature `Ljava/security/Signature;.update:([B)V` @kind virtual;
  #L49d5f4.  call temp:= `sign`(v0) @signature `Ljava/security/Signature;.sign:()[B` @kind virtual;
  #L49d5fa.  v0:= temp @kind object;
  #L49d5fc.  v1:= `@@com.google.crypto.tink.subtle.EngineFactory.SIGNATURE` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L49d600.  v2:= v3.`com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce.c` @type ^`java.lang.String` @kind object;
  #L49d604.  call temp:= `getInstance`(v1, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L49d60a.  v1:= temp @kind object;
  #L49d60c.  v1:= (`java.security.Signature`) v1 @kind object;
  #L49d610.  v2:= v3.`com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce.b` @type ^`java.security.interfaces.RSAPublicKey` @kind object;
  #L49d614.  call `initVerify`(v1, v2) @signature `Ljava/security/Signature;.initVerify:(Ljava/security/PublicKey;)V` @kind virtual;
  #L49d61a.  call `update`(v1, v4) @signature `Ljava/security/Signature;.update:([B)V` @kind virtual;
  #L49d620.  call temp:= `verify`(v1, v0) @signature `Ljava/security/Signature;.verify:([B)Z` @kind virtual;
  #L49d626.  v4:= temp;
  #L49d628.  if v4 == 0 then goto L49d62e;
  #L49d62c.  return v0 @kind object;
  #L49d62e.  v4:= new `java.lang.RuntimeException`;
  #L49d632.  v0:= "Security bug: RSA signature computation error" @kind object;
  #L49d636.  call `<init>`(v4, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49d63c.  throw v4;
}
