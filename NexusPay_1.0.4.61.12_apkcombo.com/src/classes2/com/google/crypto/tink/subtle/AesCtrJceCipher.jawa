record `com.google.crypto.tink.subtle.AesCtrJceCipher` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.subtle.IndCpaCipher` @kind interface {
  `javax.crypto.spec.SecretKeySpec` `com.google.crypto.tink.subtle.AesCtrJceCipher.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.crypto.tink.subtle.AesCtrJceCipher.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.crypto.tink.subtle.AesCtrJceCipher.c` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.ThreadLocal` `@@com.google.crypto.tink.subtle.AesCtrJceCipher.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/subtle/AesCtrJceCipher;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L490ee8.  v0:= new `com.google.crypto.tink.subtle.AesCtrJceCipher$a`;
  #L490eec.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/subtle/AesCtrJceCipher$a;.<init>:()V` @kind direct;
  #L490ef2.  `@@com.google.crypto.tink.subtle.AesCtrJceCipher.d` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L490ef6.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.AesCtrJceCipher` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/google/crypto/tink/subtle/AesCtrJceCipher;.<init>:([BI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L490f08.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L490f0e.  v0:= length @variable v3;
  #L490f10.  call `validateAesKeySize`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateAesKeySize:(I)V` @kind static;
  #L490f16.  v0:= new `javax.crypto.spec.SecretKeySpec`;
  #L490f1a.  v1:= "AES" @kind object;
  #L490f1e.  call `<init>`(v0, v3, v1) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L490f24.  v2.`com.google.crypto.tink.subtle.AesCtrJceCipher.a` @type ^`javax.crypto.spec.SecretKeySpec` := v0 @kind object;
  #L490f28.  v3:= `@@com.google.crypto.tink.subtle.AesCtrJceCipher.d` @type ^`java.lang.ThreadLocal` @kind object;
  #L490f2c.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L490f32.  v3:= temp @kind object;
  #L490f34.  v3:= (`javax.crypto.Cipher`) v3 @kind object;
  #L490f38.  call temp:= `getBlockSize`(v3) @signature `Ljavax/crypto/Cipher;.getBlockSize:()I` @kind virtual;
  #L490f3e.  v3:= temp;
  #L490f40.  v2.`com.google.crypto.tink.subtle.AesCtrJceCipher.c` @type ^`int` := v3;
  #L490f44.  v0:= 12I;
  #L490f48.  if v4 < v0 then goto L490f56;
  #L490f4c.  if v4 > v3 then goto L490f56;
  #L490f50.  v2.`com.google.crypto.tink.subtle.AesCtrJceCipher.b` @type ^`int` := v4;
  #L490f54.  return @kind void;
  #L490f56.  v3:= new `java.security.GeneralSecurityException`;
  #L490f5a.  v4:= "invalid IV size" @kind object;
  #L490f5e.  call `<init>`(v3, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L490f64.  throw v3;
}
procedure `void` `a`(`com.google.crypto.tink.subtle.AesCtrJceCipher` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 , `byte`[] v11 @kind object, `int` v12 , `byte`[] v13 @kind object, `boolean` v14 ) @signature `Lcom/google/crypto/tink/subtle/AesCtrJceCipher;.a:([BII[BI[BZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L490f78.  v0:= `@@com.google.crypto.tink.subtle.AesCtrJceCipher.d` @type ^`java.lang.ThreadLocal` @kind object;
  #L490f7c.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L490f82.  v0:= temp @kind object;
  #L490f84.  v1:= v0 @kind object;
  #L490f86.  v1:= (`javax.crypto.Cipher`) v1 @kind object;
  #L490f8a.  v0:= v7.`com.google.crypto.tink.subtle.AesCtrJceCipher.c` @type ^`int`;
  #L490f8e.  v0:= new `byte`[v0];
  #L490f92.  v2:= v7.`com.google.crypto.tink.subtle.AesCtrJceCipher.b` @type ^`int`;
  #L490f96.  v3:= 0I;
  #L490f98.  call `arraycopy`(v13, v3, v0, v3, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L490f9e.  v13:= new `javax.crypto.spec.IvParameterSpec`;
  #L490fa2.  call `<init>`(v13, v0) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L490fa8.  if v14 == 0 then goto L490fba;
  #L490fac.  v14:= 1I;
  #L490fae.  v0:= v7.`com.google.crypto.tink.subtle.AesCtrJceCipher.a` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L490fb2.  call `init`(v1, v14, v0, v13) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L490fb8.  goto L490fc6;
  #L490fba.  v14:= 2I;
  #L490fbc.  v0:= v7.`com.google.crypto.tink.subtle.AesCtrJceCipher.a` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L490fc0.  call `init`(v1, v14, v0, v13) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L490fc6.  v2:= v8 @kind object;
  #L490fc8.  v3:= v9;
  #L490fca.  v4:= v10;
  #L490fcc.  v5:= v11 @kind object;
  #L490fce.  v6:= v12;
  #L490fd0.  call temp:= `doFinal`(v1, v2, v3, v4, v5, v6) @signature `Ljavax/crypto/Cipher;.doFinal:([BII[BI)I` @kind virtual;
  #L490fd6.  v8:= temp;
  #L490fd8.  if v8 != v10 then goto L490fde;
  #L490fdc.  return @kind void;
  #L490fde.  v8:= new `java.security.GeneralSecurityException`;
  #L490fe2.  v9:= "stored output's length does not match input's length" @kind object;
  #L490fe6.  call `<init>`(v8, v9) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L490fec.  throw v8;
}
procedure `byte`[] `decrypt`(`com.google.crypto.tink.subtle.AesCtrJceCipher` v10 @kind this, `byte`[] v11 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesCtrJceCipher;.decrypt:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L490e00.  v0:= length @variable v11;
  #L490e02.  v1:= v10.`com.google.crypto.tink.subtle.AesCtrJceCipher.b` @type ^`int`;
  #L490e06.  if v0 < v1 then goto L490e3a;
  #L490e0a.  v8:= new `byte`[v1];
  #L490e0e.  v0:= 0I;
  #L490e10.  call `arraycopy`(v11, v0, v8, v0, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L490e16.  v0:= length @variable v11;
  #L490e18.  v4:= v10.`com.google.crypto.tink.subtle.AesCtrJceCipher.b` @type ^`int`;
  #L490e1c.  v0:= v0 - v4 @kind int;
  #L490e1e.  v0:= new `byte`[v0];
  #L490e22.  v1:= length @variable v11;
  #L490e24.  v5:= v1 - v4 @kind int;
  #L490e28.  v7:= 0I;
  #L490e2a.  v9:= 0I;
  #L490e2c.  v2:= v10 @kind object;
  #L490e2e.  v3:= v11 @kind object;
  #L490e30.  v6:= v0 @kind object;
  #L490e32.  call `a`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/google/crypto/tink/subtle/AesCtrJceCipher;.a:([BII[BI[BZ)V` @kind direct;
  #L490e38.  return v0 @kind object;
  #L490e3a.  v11:= new `java.security.GeneralSecurityException`;
  #L490e3e.  v0:= "ciphertext too short" @kind object;
  #L490e42.  call `<init>`(v11, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L490e48.  throw v11;
}
procedure `byte`[] `encrypt`(`com.google.crypto.tink.subtle.AesCtrJceCipher` v10 @kind this, `byte`[] v11 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesCtrJceCipher;.encrypt:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L490e5c.  v0:= length @variable v11;
  #L490e5e.  v1:= v10.`com.google.crypto.tink.subtle.AesCtrJceCipher.b` @type ^`int`;
  #L490e62.  v2:= 2147483647I;
  #L490e68.  v3:= v2 - v1 @kind int;
  #L490e6c.  if v0 > v3 then goto L490ea4;
  #L490e70.  v0:= length @variable v11;
  #L490e72.  v0:= v0 + v1 @kind int;
  #L490e74.  v0:= new `byte`[v0];
  #L490e78.  call temp:= `randBytes`(v1) @signature `Lcom/google/crypto/tink/subtle/Random;.randBytes:(I)[B` @kind static;
  #L490e7e.  v8:= temp @kind object;
  #L490e80.  v1:= v10.`com.google.crypto.tink.subtle.AesCtrJceCipher.b` @type ^`int`;
  #L490e84.  v2:= 0I;
  #L490e86.  call `arraycopy`(v8, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L490e8c.  v4:= 0I;
  #L490e8e.  v5:= length @variable v11;
  #L490e90.  v7:= v10.`com.google.crypto.tink.subtle.AesCtrJceCipher.b` @type ^`int`;
  #L490e94.  v9:= 1I;
  #L490e96.  v2:= v10 @kind object;
  #L490e98.  v3:= v11 @kind object;
  #L490e9a.  v6:= v0 @kind object;
  #L490e9c.  call `a`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/google/crypto/tink/subtle/AesCtrJceCipher;.a:([BII[BI[BZ)V` @kind direct;
  #L490ea2.  return v0 @kind object;
  #L490ea4.  v11:= new `java.security.GeneralSecurityException`;
  #L490ea8.  v0:= new `java.lang.StringBuilder`;
  #L490eac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L490eb2.  v1:= "plaintext length can not exceed " @kind object;
  #L490eb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L490ebc.  v1:= v10.`com.google.crypto.tink.subtle.AesCtrJceCipher.b` @type ^`int`;
  #L490ec0.  v2:= v2 - v1 @kind int;
  #L490ec2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L490ec8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L490ece.  v0:= temp @kind object;
  #L490ed0.  call `<init>`(v11, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L490ed6.  throw v11;
}
