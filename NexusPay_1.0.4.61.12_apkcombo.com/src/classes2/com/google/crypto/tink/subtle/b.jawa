record `com.google.crypto.tink.subtle.b` @kind class @AccessFlag  extends `com.google.crypto.tink.subtle.c` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.b` v0 @kind this, `byte`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/subtle/b;.<init>:([BI)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4941f0.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/subtle/c;.<init>:([BI)V` @kind direct;
  #L4941f6.  return @kind void;
}
procedure `int`[] `b`(`com.google.crypto.tink.subtle.b` v3 @kind this, `int`[] v4 @kind object, `int` v5 ) @signature `Lcom/google/crypto/tink/subtle/b;.b:([II)[I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L494174.  v0:= length @variable v4;
  #L494176.  call temp:= `e`(v3) @signature `Lcom/google/crypto/tink/subtle/b;.e:()I` @kind virtual;
  #L49417c.  v1:= temp;
  #L49417e.  v1:= v1 / 4;
  #L494182.  v2:= 0I;
  #L494184.  if v0 != v1 then goto L4941b0;
  #L494188.  v0:= 16I;
  #L49418c.  v0:= new `int`[v0];
  #L494190.  v1:= v3.`com.google.crypto.tink.subtle.c.a` @type ^`int`[] @kind object;
  #L494194.  call `i`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/c;.i:([I[I)V` @kind static;
  #L49419a.  v1:= 12I;
  #L49419e.  v0[v1]:= v5;
  #L4941a2.  v5:= 13I;
  #L4941a6.  v1:= length @variable v4;
  #L4941a8.  call `arraycopy`(v4, v2, v0, v5, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4941ae.  return v0 @kind object;
  #L4941b0.  v5:= new `java.lang.IllegalArgumentException`;
  #L4941b4.  v0:= 1I;
  #L4941b6.  v0:= new `java.lang.Object`[v0];
  #L4941ba.  v4:= length @variable v4;
  #L4941bc.  v4:= v4 * 32;
  #L4941c0.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4941c6.  v4:= temp @kind object;
  #L4941c8.  v0[v2]:= v4 @kind object;
  #L4941cc.  v4:= "ChaCha20 uses 96-bit nonces, but got a %d-bit nonce" @kind object;
  #L4941d0.  call temp:= `format`(v4, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4941d6.  v4:= temp @kind object;
  #L4941d8.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4941de.  throw v5;
}
procedure `int` `e`(`com.google.crypto.tink.subtle.b` v1 @kind this) @signature `Lcom/google/crypto/tink/subtle/b;.e:()I` @AccessFlag  {
    temp;
    v0;

  #L49415c.  v0:= 12I;
  #L494160.  return v0;
}
