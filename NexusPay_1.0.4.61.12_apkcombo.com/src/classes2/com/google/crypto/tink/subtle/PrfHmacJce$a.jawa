record `com.google.crypto.tink.subtle.PrfHmacJce$a` @kind class @AccessFlag  extends `java.lang.ThreadLocal` @kind class {
  `com.google.crypto.tink.subtle.PrfHmacJce` `com.google.crypto.tink.subtle.PrfHmacJce$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.PrfHmacJce$a` v0 @kind this, `com.google.crypto.tink.subtle.PrfHmacJce` v1 @kind object) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce$a;.<init>:(Lcom/google/crypto/tink/subtle/PrfHmacJce;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49ce30.  v0.`com.google.crypto.tink.subtle.PrfHmacJce$a.a` @type ^`com.google.crypto.tink.subtle.PrfHmacJce` := v1 @kind object;
  #L49ce34.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L49ce3a.  return @kind void;
}
procedure `javax.crypto.Mac` `a`(`com.google.crypto.tink.subtle.PrfHmacJce$a` v2 @kind this) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce$a;.a:()Ljavax/crypto/Mac;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L49cdd0.  v0:= `@@com.google.crypto.tink.subtle.EngineFactory.MAC` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L49cdd4.  v1:= v2.`com.google.crypto.tink.subtle.PrfHmacJce$a.a` @type ^`com.google.crypto.tink.subtle.PrfHmacJce` @kind object;
  #L49cdd8.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce;.a:(Lcom/google/crypto/tink/subtle/PrfHmacJce;)Ljava/lang/String;` @kind static;
  #L49cdde.  v1:= temp @kind object;
  #L49cde0.  call temp:= `getInstance`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L49cde6.  v0:= temp @kind object;
  #L49cde8.  v0:= (`javax.crypto.Mac`) v0 @kind object;
  #L49cdec.  v1:= v2.`com.google.crypto.tink.subtle.PrfHmacJce$a.a` @type ^`com.google.crypto.tink.subtle.PrfHmacJce` @kind object;
  #L49cdf0.  call temp:= `b`(v1) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce;.b:(Lcom/google/crypto/tink/subtle/PrfHmacJce;)Ljava/security/Key;` @kind static;
  #L49cdf6.  v1:= temp @kind object;
  #L49cdf8.  call `init`(v0, v1) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L49cdfe.  return v0 @kind object;
  #L49ce00.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L49ce02.  v1:= new `java.lang.IllegalStateException`;
  #L49ce06.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L49ce0c.  throw v1;
  catch `java.security.GeneralSecurityException` @[L49cdd0..L49cdfe] goto L49ce00;
}
procedure `java.lang.Object` `initialValue`(`com.google.crypto.tink.subtle.PrfHmacJce$a` v1 @kind this) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce$a;.initialValue:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L49cdb4.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce$a;.a:()Ljavax/crypto/Mac;` @kind virtual;
  #L49cdba.  v0:= temp @kind object;
  #L49cdbc.  return v0 @kind object;
}
