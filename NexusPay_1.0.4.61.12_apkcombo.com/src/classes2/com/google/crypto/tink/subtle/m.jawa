record `com.google.crypto.tink.subtle.m` @kind class @AccessFlag  extends `java.nio.channels.WritableByteChannel` @kind interface {
  `java.nio.channels.WritableByteChannel` `com.google.crypto.tink.subtle.m.a` @AccessFlag PRIVATE;
  `com.google.crypto.tink.subtle.StreamSegmentEncrypter` `com.google.crypto.tink.subtle.m.b` @AccessFlag PRIVATE;
  `java.nio.ByteBuffer` `com.google.crypto.tink.subtle.m.c` @AccessFlag ;
  `java.nio.ByteBuffer` `com.google.crypto.tink.subtle.m.d` @AccessFlag ;
  `int` `com.google.crypto.tink.subtle.m.e` @AccessFlag PRIVATE;
  `boolean` `com.google.crypto.tink.subtle.m.f` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.m` v2 @kind this, `com.google.crypto.tink.subtle.i` v3 @kind object, `java.nio.channels.WritableByteChannel` v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/subtle/m;.<init>:(Lcom/google/crypto/tink/subtle/i;Ljava/nio/channels/WritableByteChannel;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L49ee54.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49ee5a.  v0:= 1I;
  #L49ee5c.  v2.`com.google.crypto.tink.subtle.m.f` @type ^`boolean` := v0 @kind boolean;
  #L49ee60.  v2.`com.google.crypto.tink.subtle.m.a` @type ^`java.nio.channels.WritableByteChannel` := v4 @kind object;
  #L49ee64.  call temp:= `newStreamSegmentEncrypter`(v3, v5) @signature `Lcom/google/crypto/tink/subtle/i;.newStreamSegmentEncrypter:([B)Lcom/google/crypto/tink/subtle/StreamSegmentEncrypter;` @kind virtual;
  #L49ee6a.  v5:= temp @kind object;
  #L49ee6c.  v2.`com.google.crypto.tink.subtle.m.b` @type ^`com.google.crypto.tink.subtle.StreamSegmentEncrypter` := v5 @kind object;
  #L49ee70.  call temp:= `getPlaintextSegmentSize`(v3) @signature `Lcom/google/crypto/tink/subtle/i;.getPlaintextSegmentSize:()I` @kind virtual;
  #L49ee76.  v5:= temp;
  #L49ee78.  v2.`com.google.crypto.tink.subtle.m.e` @type ^`int` := v5;
  #L49ee7c.  call temp:= `allocate`(v5) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L49ee82.  v5:= temp @kind object;
  #L49ee84.  v2.`com.google.crypto.tink.subtle.m.c` @type ^`java.nio.ByteBuffer` := v5 @kind object;
  #L49ee88.  v0:= v2.`com.google.crypto.tink.subtle.m.e` @type ^`int`;
  #L49ee8c.  call temp:= `getCiphertextOffset`(v3) @signature `Lcom/google/crypto/tink/subtle/i;.getCiphertextOffset:()I` @kind virtual;
  #L49ee92.  v1:= temp;
  #L49ee94.  v0:= v0 - v1 @kind int;
  #L49ee96.  call temp:= `limit`(v5, v0) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L49ee9c.  call temp:= `getCiphertextSegmentSize`(v3) @signature `Lcom/google/crypto/tink/subtle/i;.getCiphertextSegmentSize:()I` @kind virtual;
  #L49eea2.  v3:= temp;
  #L49eea4.  call temp:= `allocate`(v3) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L49eeaa.  v3:= temp @kind object;
  #L49eeac.  v2.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` := v3 @kind object;
  #L49eeb0.  v5:= v2.`com.google.crypto.tink.subtle.m.b` @type ^`com.google.crypto.tink.subtle.StreamSegmentEncrypter` @kind object;
  #L49eeb4.  call temp:= `getHeader`(v5) @signature `Lcom/google/crypto/tink/subtle/StreamSegmentEncrypter;.getHeader:()Ljava/nio/ByteBuffer;` @kind interface;
  #L49eeba.  v5:= temp @kind object;
  #L49eebc.  call temp:= `put`(v3, v5) @signature `Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L49eec2.  v3:= v2.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49eec6.  call temp:= `flip`(v3) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L49eecc.  v3:= v2.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49eed0.  call temp:= `write`(v4, v3) @signature `Ljava/nio/channels/WritableByteChannel;.write:(Ljava/nio/ByteBuffer;)I` @kind interface;
  #L49eed6.  return @kind void;
}
procedure `void` `close`(`com.google.crypto.tink.subtle.m` v4 @kind this) @signature `Lcom/google/crypto/tink/subtle/m;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L49eee8.  @monitorenter v4
  #L49eeea.  v0:= v4.`com.google.crypto.tink.subtle.m.f` @type ^`boolean` @kind boolean;
  #L49eeee.  if v0 != 0 then goto L49eef6;
  #L49eef2.  @monitorexit v4
  #L49eef4.  return @kind void;
  #L49eef6.  v0:= v4.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49eefa.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49ef00.  v0:= temp;
  #L49ef02.  if v0 <= 0 then goto L49ef2c;
  #L49ef06.  v0:= v4.`com.google.crypto.tink.subtle.m.a` @type ^`java.nio.channels.WritableByteChannel` @kind object;
  #L49ef0a.  v1:= v4.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ef0e.  call temp:= `write`(v0, v1) @signature `Ljava/nio/channels/WritableByteChannel;.write:(Ljava/nio/ByteBuffer;)I` @kind interface;
  #L49ef14.  v0:= temp;
  #L49ef16.  if v0 <= 0 then goto L49ef1c;
  #L49ef1a.  goto L49eef6;
  #L49ef1c.  v0:= new `java.io.IOException`;
  #L49ef20.  v1:= "Failed to write ciphertext before closing" @kind object;
  #L49ef24.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49ef2a.  throw v0;
  #L49ef2c.  v0:= v4.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ef30.  call temp:= `clear`(v0) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L49ef36.  v0:= v4.`com.google.crypto.tink.subtle.m.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ef3a.  call temp:= `flip`(v0) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L49ef40.  v0:= v4.`com.google.crypto.tink.subtle.m.b` @type ^`com.google.crypto.tink.subtle.StreamSegmentEncrypter` @kind object;
  #L49ef44.  v1:= v4.`com.google.crypto.tink.subtle.m.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ef48.  v2:= 1I;
  #L49ef4a.  v3:= v4.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ef4e.  call `encryptSegment`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/subtle/StreamSegmentEncrypter;.encryptSegment:(Ljava/nio/ByteBuffer;ZLjava/nio/ByteBuffer;)V` @kind interface;
  #L49ef54.  v0:= v4.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ef58.  call temp:= `flip`(v0) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L49ef5e.  v0:= v4.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ef62.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49ef68.  v0:= temp;
  #L49ef6a.  if v0 <= 0 then goto L49ef94;
  #L49ef6e.  v0:= v4.`com.google.crypto.tink.subtle.m.a` @type ^`java.nio.channels.WritableByteChannel` @kind object;
  #L49ef72.  v1:= v4.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ef76.  call temp:= `write`(v0, v1) @signature `Ljava/nio/channels/WritableByteChannel;.write:(Ljava/nio/ByteBuffer;)I` @kind interface;
  #L49ef7c.  v0:= temp;
  #L49ef7e.  if v0 <= 0 then goto L49ef84;
  #L49ef82.  goto L49ef5e;
  #L49ef84.  v0:= new `java.io.IOException`;
  #L49ef88.  v1:= "Failed to write ciphertext before closing" @kind object;
  #L49ef8c.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49ef92.  throw v0;
  #L49ef94.  v0:= v4.`com.google.crypto.tink.subtle.m.a` @type ^`java.nio.channels.WritableByteChannel` @kind object;
  #L49ef98.  call `close`(v0) @signature `Ljava/nio/channels/WritableByteChannel;.close:()V` @kind interface;
  #L49ef9e.  v0:= 0I;
  #L49efa0.  v4.`com.google.crypto.tink.subtle.m.f` @type ^`boolean` := v0 @kind boolean;
  #L49efa4.  @monitorexit v4
  #L49efa6.  return @kind void;
  #L49efa8.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L49efaa.  v1:= new `java.io.IOException`;
  #L49efae.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L49efb4.  throw v1;
  #L49efb6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49efb8.  @monitorexit v4
  #L49efba.  throw v0;
  catch `java.lang.Throwable` @[L49eeea..L49eeee] goto L49efb6;
  catch `java.lang.Throwable` @[L49eef6..L49ef2c] goto L49efb6;
  catch `java.security.GeneralSecurityException` @[L49ef2c..L49ef54] goto L49efa8;
  catch `java.lang.Throwable` @[L49ef2c..L49ef54] goto L49efb6;
  catch `java.lang.Throwable` @[L49ef54..L49efa4] goto L49efb6;
  catch `java.lang.Throwable` @[L49efaa..L49efb6] goto L49efb6;
}
procedure `boolean` `isOpen`(`com.google.crypto.tink.subtle.m` v1 @kind this) @signature `Lcom/google/crypto/tink/subtle/m;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49ecb4.  v0:= v1.`com.google.crypto.tink.subtle.m.f` @type ^`boolean` @kind boolean;
  #L49ecb8.  return v0;
}
procedure `int` `write`(`com.google.crypto.tink.subtle.m` v6 @kind this, `java.nio.ByteBuffer` v7 @kind object) @signature `Lcom/google/crypto/tink/subtle/m;.write:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49eccc.  @monitorenter v6
  #L49ecce.  v0:= v6.`com.google.crypto.tink.subtle.m.f` @type ^`boolean` @kind boolean;
  #L49ecd2.  if v0 == 0 then goto L49edfc;
  #L49ecd6.  v0:= v6.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ecda.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49ece0.  v0:= temp;
  #L49ece2.  if v0 <= 0 then goto L49ecf4;
  #L49ece6.  v0:= v6.`com.google.crypto.tink.subtle.m.a` @type ^`java.nio.channels.WritableByteChannel` @kind object;
  #L49ecea.  v1:= v6.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ecee.  call temp:= `write`(v0, v1) @signature `Ljava/nio/channels/WritableByteChannel;.write:(Ljava/nio/ByteBuffer;)I` @kind interface;
  #L49ecf4.  call temp:= `position`(v7) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L49ecfa.  v0:= temp;
  #L49ecfc.  call temp:= `remaining`(v7) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49ed02.  v1:= temp;
  #L49ed04.  v2:= v6.`com.google.crypto.tink.subtle.m.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ed08.  call temp:= `remaining`(v2) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49ed0e.  v2:= temp;
  #L49ed10.  if v1 <= v2 then goto L49ede4;
  #L49ed14.  v1:= v6.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ed18.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49ed1e.  v1:= temp;
  #L49ed20.  if v1 <= 0 then goto L49ed32;
  #L49ed24.  call temp:= `position`(v7) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L49ed2a.  v7:= temp;
  #L49ed2c.  v7:= v7 - v0 @kind int;
  #L49ed2e.  @monitorexit v6
  #L49ed30.  return v7;
  #L49ed32.  v1:= v6.`com.google.crypto.tink.subtle.m.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ed36.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49ed3c.  v1:= temp;
  #L49ed3e.  call temp:= `slice`(v7) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L49ed44.  v2:= temp @kind object;
  #L49ed46.  call temp:= `limit`(v2, v1) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L49ed4c.  call temp:= `position`(v7) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L49ed52.  v3:= temp;
  #L49ed54.  v3:= v3 + v1 @kind int;
  #L49ed56.  call temp:= `position`(v7, v3) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L49ed5c.  v1:= v6.`com.google.crypto.tink.subtle.m.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ed60.  call temp:= `flip`(v1) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L49ed66.  v1:= v6.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ed6a.  call temp:= `clear`(v1) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L49ed70.  call temp:= `remaining`(v2) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49ed76.  v1:= temp;
  #L49ed78.  v3:= 0I;
  #L49ed7a.  if v1 == 0 then goto L49ed92;
  #L49ed7e.  v1:= v6.`com.google.crypto.tink.subtle.m.b` @type ^`com.google.crypto.tink.subtle.StreamSegmentEncrypter` @kind object;
  #L49ed82.  v4:= v6.`com.google.crypto.tink.subtle.m.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ed86.  v5:= v6.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ed8a.  call `encryptSegment`(v1, v4, v2, v3, v5) @signature `Lcom/google/crypto/tink/subtle/StreamSegmentEncrypter;.encryptSegment:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;ZLjava/nio/ByteBuffer;)V` @kind interface;
  #L49ed90.  goto L49eda4;
  #L49ed92.  v1:= v6.`com.google.crypto.tink.subtle.m.b` @type ^`com.google.crypto.tink.subtle.StreamSegmentEncrypter` @kind object;
  #L49ed96.  v2:= v6.`com.google.crypto.tink.subtle.m.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ed9a.  v4:= v6.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ed9e.  call `encryptSegment`(v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/subtle/StreamSegmentEncrypter;.encryptSegment:(Ljava/nio/ByteBuffer;ZLjava/nio/ByteBuffer;)V` @kind interface;
  #L49eda4.  v1:= v6.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49eda8.  call temp:= `flip`(v1) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L49edae.  v1:= v6.`com.google.crypto.tink.subtle.m.a` @type ^`java.nio.channels.WritableByteChannel` @kind object;
  #L49edb2.  v2:= v6.`com.google.crypto.tink.subtle.m.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49edb6.  call temp:= `write`(v1, v2) @signature `Ljava/nio/channels/WritableByteChannel;.write:(Ljava/nio/ByteBuffer;)I` @kind interface;
  #L49edbc.  v1:= v6.`com.google.crypto.tink.subtle.m.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49edc0.  call temp:= `clear`(v1) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L49edc6.  v1:= v6.`com.google.crypto.tink.subtle.m.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49edca.  v2:= v6.`com.google.crypto.tink.subtle.m.e` @type ^`int`;
  #L49edce.  call temp:= `limit`(v1, v2) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L49edd4.  goto L49ecfc;
  #L49edd6.  v7:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L49edd8.  v0:= new `java.io.IOException`;
  #L49eddc.  call `<init>`(v0, v7) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L49ede2.  throw v0;
  #L49ede4.  v1:= v6.`com.google.crypto.tink.subtle.m.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49ede8.  call temp:= `put`(v1, v7) @signature `Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L49edee.  call temp:= `position`(v7) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L49edf4.  v7:= temp;
  #L49edf6.  v7:= v7 - v0 @kind int;
  #L49edf8.  @monitorexit v6
  #L49edfa.  return v7;
  #L49edfc.  v7:= new `java.nio.channels.ClosedChannelException`;
  #L49ee00.  call `<init>`(v7) @signature `Ljava/nio/channels/ClosedChannelException;.<init>:()V` @kind direct;
  #L49ee06.  throw v7;
  #L49ee08.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49ee0a.  @monitorexit v6
  #L49ee0c.  throw v7;
  catch `java.lang.Throwable` @[L49ecce..L49ed2c] goto L49ee08;
  catch `java.lang.Throwable` @[L49ed32..L49ed5c] goto L49ee08;
  catch `java.security.GeneralSecurityException` @[L49ed5c..L49eda4] goto L49edd6;
  catch `java.lang.Throwable` @[L49ed5c..L49eda4] goto L49ee08;
  catch `java.lang.Throwable` @[L49eda4..L49edf6] goto L49ee08;
  catch `java.lang.Throwable` @[L49edfc..L49ee08] goto L49ee08;
}
