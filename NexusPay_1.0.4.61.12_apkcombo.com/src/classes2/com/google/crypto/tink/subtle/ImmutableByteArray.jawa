record `com.google.crypto.tink.subtle.ImmutableByteArray` @kind class @AccessFlag PUBLIC_FINAL {
  `byte`[] `com.google.crypto.tink.subtle.ImmutableByteArray.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.ImmutableByteArray` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/subtle/ImmutableByteArray;.<init>:([BII)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L49bc8c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49bc92.  v0:= new `byte`[v5];
  #L49bc96.  v2.`com.google.crypto.tink.subtle.ImmutableByteArray.a` @type ^`byte`[] := v0 @kind object;
  #L49bc9a.  v1:= 0I;
  #L49bc9c.  call `arraycopy`(v3, v4, v0, v1, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L49bca2.  return @kind void;
}
procedure `com.google.crypto.tink.subtle.ImmutableByteArray` `of`(`byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/ImmutableByteArray;.of:([B)Lcom/google/crypto/tink/subtle/ImmutableByteArray;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L49bc30.  if v2 != 0 then goto L49bc38;
  #L49bc34.  v2:= 0I;
  #L49bc36.  return v2 @kind object;
  #L49bc38.  v0:= 0I;
  #L49bc3a.  v1:= length @variable v2;
  #L49bc3c.  call temp:= `of`(v2, v0, v1) @signature `Lcom/google/crypto/tink/subtle/ImmutableByteArray;.of:([BII)Lcom/google/crypto/tink/subtle/ImmutableByteArray;` @kind static;
  #L49bc42.  v2:= temp @kind object;
  #L49bc44.  return v2 @kind object;
}
procedure `com.google.crypto.tink.subtle.ImmutableByteArray` `of`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/subtle/ImmutableByteArray;.of:([BII)Lcom/google/crypto/tink/subtle/ImmutableByteArray;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49bc58.  v0:= new `com.google.crypto.tink.subtle.ImmutableByteArray`;
  #L49bc5c.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/subtle/ImmutableByteArray;.<init>:([BII)V` @kind direct;
  #L49bc62.  return v0 @kind object;
}
procedure `byte`[] `getBytes`(`com.google.crypto.tink.subtle.ImmutableByteArray` v4 @kind this) @signature `Lcom/google/crypto/tink/subtle/ImmutableByteArray;.getBytes:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L49bc08.  v0:= v4.`com.google.crypto.tink.subtle.ImmutableByteArray.a` @type ^`byte`[] @kind object;
  #L49bc0c.  v1:= length @variable v0;
  #L49bc0e.  v1:= new `byte`[v1];
  #L49bc12.  v2:= length @variable v0;
  #L49bc14.  v3:= 0I;
  #L49bc16.  call `arraycopy`(v0, v3, v1, v3, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L49bc1c.  return v1 @kind object;
}
procedure `int` `getLength`(`com.google.crypto.tink.subtle.ImmutableByteArray` v1 @kind this) @signature `Lcom/google/crypto/tink/subtle/ImmutableByteArray;.getLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49bc74.  v0:= v1.`com.google.crypto.tink.subtle.ImmutableByteArray.a` @type ^`byte`[] @kind object;
  #L49bc78.  v0:= length @variable v0;
  #L49bc7a.  return v0;
}
