record `com.google.crypto.tink.subtle.AesEaxJce` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.Aead` @kind interface {
  `byte`[] `com.google.crypto.tink.subtle.AesEaxJce.a` @AccessFlag PRIVATE_FINAL;
  `byte`[] `com.google.crypto.tink.subtle.AesEaxJce.b` @AccessFlag PRIVATE_FINAL;
  `javax.crypto.spec.SecretKeySpec` `com.google.crypto.tink.subtle.AesEaxJce.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.crypto.tink.subtle.AesEaxJce.d` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.ThreadLocal` `@@com.google.crypto.tink.subtle.AesEaxJce.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.ThreadLocal` `@@com.google.crypto.tink.subtle.AesEaxJce.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4914e4.  v0:= new `com.google.crypto.tink.subtle.AesEaxJce$a`;
  #L4914e8.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce$a;.<init>:()V` @kind direct;
  #L4914ee.  `@@com.google.crypto.tink.subtle.AesEaxJce.e` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L4914f2.  v0:= new `com.google.crypto.tink.subtle.AesEaxJce$b`;
  #L4914f6.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce$b;.<init>:()V` @kind direct;
  #L4914fc.  `@@com.google.crypto.tink.subtle.AesEaxJce.f` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L491500.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.AesEaxJce` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.<init>:([BI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L491514.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49151a.  v0:= 16I;
  #L49151e.  v1:= 12I;
  #L491522.  if v4 == v1 then goto L49153c;
  #L491526.  if v4 != v0 then goto L49152c;
  #L49152a.  goto L49153c;
  #L49152c.  v3:= new `java.lang.IllegalArgumentException`;
  #L491530.  v4:= "IV size should be either 12 or 16 bytes" @kind object;
  #L491534.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49153a.  throw v3;
  #L49153c.  v2.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int` := v4;
  #L491540.  v4:= length @variable v3;
  #L491542.  call `validateAesKeySize`(v4) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateAesKeySize:(I)V` @kind static;
  #L491548.  v4:= new `javax.crypto.spec.SecretKeySpec`;
  #L49154c.  v1:= "AES" @kind object;
  #L491550.  call `<init>`(v4, v3, v1) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L491556.  v2.`com.google.crypto.tink.subtle.AesEaxJce.c` @type ^`javax.crypto.spec.SecretKeySpec` := v4 @kind object;
  #L49155a.  v3:= `@@com.google.crypto.tink.subtle.AesEaxJce.e` @type ^`java.lang.ThreadLocal` @kind object;
  #L49155e.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L491564.  v3:= temp @kind object;
  #L491566.  v3:= (`javax.crypto.Cipher`) v3 @kind object;
  #L49156a.  v4:= 1I;
  #L49156c.  v1:= v2.`com.google.crypto.tink.subtle.AesEaxJce.c` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L491570.  call `init`(v3, v4, v1) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L491576.  v4:= new `byte`[v0];
  #L49157a.  call temp:= `doFinal`(v3, v4) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L491580.  v3:= temp @kind object;
  #L491582.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.a:([B)[B` @kind static;
  #L491588.  v3:= temp @kind object;
  #L49158a.  v2.`com.google.crypto.tink.subtle.AesEaxJce.a` @type ^`byte`[] := v3 @kind object;
  #L49158e.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.a:([B)[B` @kind static;
  #L491594.  v3:= temp @kind object;
  #L491596.  v2.`com.google.crypto.tink.subtle.AesEaxJce.b` @type ^`byte`[] := v3 @kind object;
  #L49159a.  return @kind void;
}
procedure `byte`[] `a`(`byte`[] v6 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.a:([B)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49132c.  v0:= 16I;
  #L491330.  v0:= new `byte`[v0];
  #L491334.  v1:= 0I;
  #L491336.  v2:= 0I;
  #L491338.  v3:= 15I;
  #L49133c.  if v2 >= v3 then goto L491368;
  #L491340.  v3:= v6[v2] @kind byte;
  #L491344.  v3:= v3 ^< 1;
  #L491348.  v4:= v2 + 1;
  #L49134c.  v5:= v6[v4] @kind byte;
  #L491350.  v5:= v5 ^& 255;
  #L491354.  v5:= v5 ^>> 7;
  #L491358.  v3:= v3 ^~ v5 @kind int;
  #L49135a.  v3:= v3 ^& 255;
  #L49135e.  v3:= (`byte`) v3 @kind i2b;
  #L491360.  v0[v2]:= v3 @kind byte;
  #L491364.  v2:= v4;
  #L491366.  goto L491338;
  #L491368.  v2:= v6[v3] @kind byte;
  #L49136c.  v2:= v2 ^< 1;
  #L491370.  v6:= v6[v1] @kind byte;
  #L491374.  v6:= v6 ^& 128;
  #L491378.  if v6 != 0 then goto L49137e;
  #L49137c.  goto L491382;
  #L49137e.  v1:= 135I;
  #L491382.  v6:= v2 ^~ v1 @kind int;
  #L491386.  v6:= (`byte`) v6 @kind i2b;
  #L491388.  v0[v3]:= v6 @kind byte;
  #L49138c.  return v0 @kind object;
}
procedure `byte`[] `b`(`com.google.crypto.tink.subtle.AesEaxJce` v6 @kind this, `javax.crypto.Cipher` v7 @kind object, `int` v8 , `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.b:(Ljavax/crypto/Cipher;I[BII)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4913a0.  v0:= 16I;
  #L4913a4.  v1:= new `byte`[v0];
  #L4913a8.  v2:= 15I;
  #L4913ac.  v8:= (`byte`) v8 @kind i2b;
  #L4913ae.  v1[v2]:= v8 @kind byte;
  #L4913b2.  if v11 != 0 then goto L4913cc;
  #L4913b6.  v8:= v6.`com.google.crypto.tink.subtle.AesEaxJce.a` @type ^`byte`[] @kind object;
  #L4913ba.  call temp:= `d`(v1, v8) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.d:([B[B)[B` @kind static;
  #L4913c0.  v8:= temp @kind object;
  #L4913c2.  call temp:= `doFinal`(v7, v8) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L4913c8.  v7:= temp @kind object;
  #L4913ca.  return v7 @kind object;
  #L4913cc.  call temp:= `doFinal`(v7, v1) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L4913d2.  v8:= temp @kind object;
  #L4913d4.  v1:= 0I;
  #L4913d6.  v2:= 0I;
  #L4913d8.  v3:= v11 - v2 @kind int;
  #L4913dc.  if v3 <= v0 then goto L491410;
  #L4913e0.  v3:= 0I;
  #L4913e2.  if v3 >= v0 then goto L491402;
  #L4913e6.  v4:= v8[v3] @kind byte;
  #L4913ea.  v5:= v10 + v2 @kind int;
  #L4913ee.  v5:= v5 + v3 @kind int;
  #L4913f0.  v5:= v9[v5] @kind byte;
  #L4913f4.  v4:= v4 ^~ v5 @kind int;
  #L4913f6.  v4:= (`byte`) v4 @kind i2b;
  #L4913f8.  v8[v3]:= v4 @kind byte;
  #L4913fc.  v3:= v3 + 1;
  #L491400.  goto L4913e2;
  #L491402.  call temp:= `doFinal`(v7, v8) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L491408.  v8:= temp @kind object;
  #L49140a.  v2:= v2 + 16;
  #L49140e.  goto L4913d8;
  #L491410.  v2:= v2 + v10 @kind int;
  #L491412.  v10:= v10 + v11 @kind int;
  #L491414.  call temp:= `copyOfRange`(v9, v2, v10) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L49141a.  v9:= temp @kind object;
  #L49141c.  call temp:= `c`(v6, v9) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.c:([B)[B` @kind direct;
  #L491422.  v9:= temp @kind object;
  #L491424.  call temp:= `d`(v8, v9) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.d:([B[B)[B` @kind static;
  #L49142a.  v8:= temp @kind object;
  #L49142c.  call temp:= `doFinal`(v7, v8) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L491432.  v7:= temp @kind object;
  #L491434.  return v7 @kind object;
}
procedure `byte`[] `c`(`com.google.crypto.tink.subtle.AesEaxJce` v4 @kind this, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.c:([B)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L491448.  v0:= length @variable v5;
  #L49144a.  v1:= 16I;
  #L49144e.  if v0 != v1 then goto L491460;
  #L491452.  v0:= v4.`com.google.crypto.tink.subtle.AesEaxJce.a` @type ^`byte`[] @kind object;
  #L491456.  call temp:= `d`(v5, v0) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.d:([B[B)[B` @kind static;
  #L49145c.  v5:= temp @kind object;
  #L49145e.  return v5 @kind object;
  #L491460.  v0:= v4.`com.google.crypto.tink.subtle.AesEaxJce.b` @type ^`byte`[] @kind object;
  #L491464.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L49146a.  v0:= temp @kind object;
  #L49146c.  v1:= 0I;
  #L49146e.  v2:= length @variable v5;
  #L491470.  if v1 >= v2 then goto L49148a;
  #L491474.  v2:= v0[v1] @kind byte;
  #L491478.  v3:= v5[v1] @kind byte;
  #L49147c.  v2:= v2 ^~ v3 @kind int;
  #L49147e.  v2:= (`byte`) v2 @kind i2b;
  #L491480.  v0[v1]:= v2 @kind byte;
  #L491484.  v1:= v1 + 1;
  #L491488.  goto L49146e;
  #L49148a.  v1:= length @variable v5;
  #L49148c.  v5:= length @variable v5;
  #L49148e.  v5:= v0[v5] @kind byte;
  #L491492.  v5:= v5 ^~ 128;
  #L491496.  v5:= (`byte`) v5 @kind i2b;
  #L491498.  v0[v1]:= v5 @kind byte;
  #L49149c.  return v0 @kind object;
}
procedure `byte`[] `d`(`byte`[] v5 @kind object, `byte`[] v6 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.d:([B[B)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4914b0.  v0:= length @variable v5;
  #L4914b2.  v1:= new `byte`[v0];
  #L4914b6.  v2:= 0I;
  #L4914b8.  if v2 >= v0 then goto L4914d2;
  #L4914bc.  v3:= v5[v2] @kind byte;
  #L4914c0.  v4:= v6[v2] @kind byte;
  #L4914c4.  v3:= v3 ^~ v4 @kind int;
  #L4914c6.  v3:= (`byte`) v3 @kind i2b;
  #L4914c8.  v1[v2]:= v3 @kind byte;
  #L4914cc.  v2:= v2 + 1;
  #L4914d0.  goto L4914b8;
  #L4914d2.  return v1 @kind object;
}
procedure `byte`[] `decrypt`(`com.google.crypto.tink.subtle.AesEaxJce` v13 @kind this, `byte`[] v14 @kind object, `byte`[] v15 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.decrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L4910f0.  v0:= length @variable v14;
  #L4910f2.  v1:= v13.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L4910f6.  v0:= v0 - v1 @kind int;
  #L4910f8.  v1:= 16I;
  #L4910fc.  v0:= v0 - v1 @kind int;
  #L4910fe.  if v0 < 0 then goto L4911de;
  #L491102.  v2:= `@@com.google.crypto.tink.subtle.AesEaxJce.e` @type ^`java.lang.ThreadLocal` @kind object;
  #L491106.  call temp:= `get`(v2) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L49110c.  v2:= temp @kind object;
  #L49110e.  v9:= v2 @kind object;
  #L491110.  v9:= (`javax.crypto.Cipher`) v9 @kind object;
  #L491114.  v2:= v13.`com.google.crypto.tink.subtle.AesEaxJce.c` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L491118.  v10:= 1I;
  #L49111a.  call `init`(v9, v10, v2) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L491120.  v5:= 0I;
  #L491122.  v7:= 0I;
  #L491124.  v8:= v13.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L491128.  v3:= v13 @kind object;
  #L49112a.  v4:= v9 @kind object;
  #L49112c.  v6:= v14 @kind object;
  #L49112e.  call temp:= `b`(v3, v4, v5, v6, v7, v8) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.b:(Ljavax/crypto/Cipher;I[BII)[B` @kind direct;
  #L491134.  v11:= temp @kind object;
  #L491136.  v12:= 0I;
  #L491138.  if v15 != 0 then goto L491140;
  #L49113c.  v15:= new `byte`[v12];
  #L491140.  v6:= v15 @kind object;
  #L491142.  v5:= 1I;
  #L491144.  v7:= 0I;
  #L491146.  v8:= length @variable v6;
  #L491148.  v3:= v13 @kind object;
  #L49114a.  v4:= v9 @kind object;
  #L49114c.  call temp:= `b`(v3, v4, v5, v6, v7, v8) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.b:(Ljavax/crypto/Cipher;I[BII)[B` @kind direct;
  #L491152.  v15:= temp @kind object;
  #L491154.  v4:= 2I;
  #L491156.  v6:= v13.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L49115a.  v2:= v13 @kind object;
  #L49115c.  v3:= v9 @kind object;
  #L49115e.  v5:= v14 @kind object;
  #L491160.  v7:= v0;
  #L491162.  call temp:= `b`(v2, v3, v4, v5, v6, v7) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.b:(Ljavax/crypto/Cipher;I[BII)[B` @kind direct;
  #L491168.  v2:= temp @kind object;
  #L49116a.  v3:= length @variable v14;
  #L49116c.  v3:= v3 - v1 @kind int;
  #L49116e.  v4:= 0I;
  #L491170.  if v12 >= v1 then goto L491198;
  #L491174.  v5:= v3 + v12 @kind int;
  #L491178.  v5:= v14[v5] @kind byte;
  #L49117c.  v6:= v15[v12] @kind byte;
  #L491180.  v5:= v5 ^~ v6 @kind int;
  #L491182.  v6:= v11[v12] @kind byte;
  #L491186.  v5:= v5 ^~ v6 @kind int;
  #L491188.  v6:= v2[v12] @kind byte;
  #L49118c.  v5:= v5 ^~ v6 @kind int;
  #L49118e.  v4:= v4 ^| v5 @kind int;
  #L491190.  v4:= (`byte`) v4 @kind i2b;
  #L491192.  v12:= v12 + 1;
  #L491196.  goto L491170;
  #L491198.  if v4 != 0 then goto L4911ce;
  #L49119c.  v15:= `@@com.google.crypto.tink.subtle.AesEaxJce.f` @type ^`java.lang.ThreadLocal` @kind object;
  #L4911a0.  call temp:= `get`(v15) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L4911a6.  v15:= temp @kind object;
  #L4911a8.  v15:= (`javax.crypto.Cipher`) v15 @kind object;
  #L4911ac.  v1:= v13.`com.google.crypto.tink.subtle.AesEaxJce.c` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L4911b0.  v2:= new `javax.crypto.spec.IvParameterSpec`;
  #L4911b4.  call `<init>`(v2, v11) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L4911ba.  call `init`(v15, v10, v1, v2) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L4911c0.  v1:= v13.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L4911c4.  call temp:= `doFinal`(v15, v14, v1, v0) @signature `Ljavax/crypto/Cipher;.doFinal:([BII)[B` @kind virtual;
  #L4911ca.  v14:= temp @kind object;
  #L4911cc.  return v14 @kind object;
  #L4911ce.  v14:= new `javax.crypto.AEADBadTagException`;
  #L4911d2.  v15:= "tag mismatch" @kind object;
  #L4911d6.  call `<init>`(v14, v15) @signature `Ljavax/crypto/AEADBadTagException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4911dc.  throw v14;
  #L4911de.  v14:= new `java.security.GeneralSecurityException`;
  #L4911e2.  v15:= "ciphertext too short" @kind object;
  #L4911e6.  call `<init>`(v14, v15) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4911ec.  throw v14;
}
procedure `byte`[] `encrypt`(`com.google.crypto.tink.subtle.AesEaxJce` v15 @kind this, `byte`[] v16 @kind object, `byte`[] v17 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.encrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L491200.  v6:= v15 @kind object;
  #L491202.  v7:= v16 @kind object;
  #L491206.  v0:= length @variable v7;
  #L491208.  v1:= v6.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L49120c.  v2:= 2147483647I;
  #L491212.  v2:= v2 - v1 @kind int;
  #L491214.  v8:= 16I;
  #L491218.  v2:= v2 - v8 @kind int;
  #L49121a.  if v0 > v2 then goto L49130a;
  #L49121e.  v0:= length @variable v7;
  #L491220.  v0:= v0 + v1 @kind int;
  #L491222.  v0:= v0 + v8 @kind int;
  #L491224.  v9:= new `byte`[v0];
  #L491228.  call temp:= `randBytes`(v1) @signature `Lcom/google/crypto/tink/subtle/Random;.randBytes:(I)[B` @kind static;
  #L49122e.  v3:= temp @kind object;
  #L491230.  v0:= v6.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L491234.  v10:= 0I;
  #L491236.  call `arraycopy`(v3, v10, v9, v10, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L49123c.  v0:= `@@com.google.crypto.tink.subtle.AesEaxJce.e` @type ^`java.lang.ThreadLocal` @kind object;
  #L491240.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L491246.  v0:= temp @kind object;
  #L491248.  v11:= v0 @kind object;
  #L49124a.  v11:= (`javax.crypto.Cipher`) v11 @kind object;
  #L49124e.  v0:= v6.`com.google.crypto.tink.subtle.AesEaxJce.c` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L491252.  v12:= 1I;
  #L491254.  call `init`(v11, v12, v0) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L49125a.  v2:= 0I;
  #L49125c.  v4:= 0I;
  #L49125e.  v5:= length @variable v3;
  #L491260.  v0:= v15 @kind object;
  #L491262.  v1:= v11 @kind object;
  #L491264.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.b:(Ljavax/crypto/Cipher;I[BII)[B` @kind direct;
  #L49126a.  v13:= temp @kind object;
  #L49126c.  if v17 != 0 then goto L491278;
  #L491270.  v0:= new `byte`[v10];
  #L491274.  v3:= v0 @kind object;
  #L491276.  goto L49127c;
  #L491278.  v3:= v17 @kind object;
  #L49127c.  v2:= 1I;
  #L49127e.  v4:= 0I;
  #L491280.  v5:= length @variable v3;
  #L491282.  v0:= v15 @kind object;
  #L491284.  v1:= v11 @kind object;
  #L491286.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.b:(Ljavax/crypto/Cipher;I[BII)[B` @kind direct;
  #L49128c.  v14:= temp @kind object;
  #L49128e.  v0:= `@@com.google.crypto.tink.subtle.AesEaxJce.f` @type ^`java.lang.ThreadLocal` @kind object;
  #L491292.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L491298.  v0:= temp @kind object;
  #L49129a.  v0:= (`javax.crypto.Cipher`) v0 @kind object;
  #L49129e.  v1:= v6.`com.google.crypto.tink.subtle.AesEaxJce.c` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L4912a2.  v2:= new `javax.crypto.spec.IvParameterSpec`;
  #L4912a6.  call `<init>`(v2, v13) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L4912ac.  call `init`(v0, v12, v1, v2) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L4912b2.  v2:= 0I;
  #L4912b4.  v3:= length @variable v7;
  #L4912b6.  v5:= v6.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L4912ba.  v1:= v16 @kind object;
  #L4912be.  v4:= v9 @kind object;
  #L4912c0.  call temp:= `doFinal`(v0, v1, v2, v3, v4, v5) @signature `Ljavax/crypto/Cipher;.doFinal:([BII[BI)I` @kind virtual;
  #L4912c6.  v2:= 2I;
  #L4912c8.  v4:= v6.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L4912cc.  v5:= length @variable v7;
  #L4912ce.  v0:= v15 @kind object;
  #L4912d0.  v1:= v11 @kind object;
  #L4912d2.  v3:= v9 @kind object;
  #L4912d4.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/subtle/AesEaxJce;.b:(Ljavax/crypto/Cipher;I[BII)[B` @kind direct;
  #L4912da.  v0:= temp @kind object;
  #L4912dc.  v1:= length @variable v7;
  #L4912de.  v2:= v6.`com.google.crypto.tink.subtle.AesEaxJce.d` @type ^`int`;
  #L4912e2.  v1:= v1 + v2 @kind int;
  #L4912e4.  if v10 >= v8 then goto L491308;
  #L4912e8.  v2:= v1 + v10 @kind int;
  #L4912ec.  v3:= v14[v10] @kind byte;
  #L4912f0.  v4:= v13[v10] @kind byte;
  #L4912f4.  v3:= v3 ^~ v4 @kind int;
  #L4912f6.  v4:= v0[v10] @kind byte;
  #L4912fa.  v3:= v3 ^~ v4 @kind int;
  #L4912fc.  v3:= (`byte`) v3 @kind i2b;
  #L4912fe.  v9[v2]:= v3 @kind byte;
  #L491302.  v10:= v10 + 1;
  #L491306.  goto L4912e4;
  #L491308.  return v9 @kind object;
  #L49130a.  v0:= new `java.security.GeneralSecurityException`;
  #L49130e.  v1:= "plaintext too long" @kind object;
  #L491312.  call `<init>`(v0, v1) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L491318.  throw v0;
}
