record `com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b` @kind class @AccessFlag  extends `com.google.crypto.tink.subtle.StreamSegmentEncrypter` @kind interface {
  `javax.crypto.spec.SecretKeySpec` `com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.a` @AccessFlag PRIVATE_FINAL;
  `javax.crypto.Cipher` `com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.b` @AccessFlag PRIVATE_FINAL;
  `byte`[] `com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.c` @AccessFlag PRIVATE_FINAL;
  `java.nio.ByteBuffer` `com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.d` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b` v3 @kind this, `com.google.crypto.tink.subtle.AesGcmHkdfStreaming` v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming$b;.<init>:(Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L491700.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L491706.  v0:= 0L;
  #L49170a.  v3.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.e` @type ^`long` := v0 @kind wide;
  #L49170e.  call temp:= `a`() @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;.a:()Ljavax/crypto/Cipher;` @kind static;
  #L491714.  v2:= temp @kind object;
  #L491716.  v3.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.b` @type ^`javax.crypto.Cipher` := v2 @kind object;
  #L49171a.  v3.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.e` @type ^`long` := v0 @kind wide;
  #L49171e.  call temp:= `b`(v4) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;.b:(Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;)[B` @kind static;
  #L491724.  v0:= temp @kind object;
  #L491726.  call temp:= `c`() @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;.c:()[B` @kind static;
  #L49172c.  v1:= temp @kind object;
  #L49172e.  v3.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.c` @type ^`byte`[] := v1 @kind object;
  #L491732.  call temp:= `getHeaderLength`(v4) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;.getHeaderLength:()I` @kind virtual;
  #L491738.  v1:= temp;
  #L49173a.  call temp:= `allocate`(v1) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L491740.  v1:= temp @kind object;
  #L491742.  v3.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.d` @type ^`java.nio.ByteBuffer` := v1 @kind object;
  #L491746.  call temp:= `getHeaderLength`(v4) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;.getHeaderLength:()I` @kind virtual;
  #L49174c.  v2:= temp;
  #L49174e.  v2:= (`byte`) v2 @kind i2b;
  #L491750.  call temp:= `put`(v1, v2) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L491756.  v1:= v3.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49175a.  call temp:= `put`(v1, v0) @signature `Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L491760.  v1:= v3.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L491764.  v2:= v3.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.c` @type ^`byte`[] @kind object;
  #L491768.  call temp:= `put`(v1, v2) @signature `Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L49176e.  v1:= v3.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L491772.  call temp:= `flip`(v1) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L491778.  call temp:= `d`(v4, v0, v5) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;.d:(Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;[B[B)Ljavax/crypto/spec/SecretKeySpec;` @kind static;
  #L49177e.  v4:= temp @kind object;
  #L491780.  v3.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.a` @type ^`javax.crypto.spec.SecretKeySpec` := v4 @kind object;
  #L491784.  return @kind void;
}
procedure `void` `encryptSegment`(`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b` v6 @kind this, `java.nio.ByteBuffer` v7 @kind object, `java.nio.ByteBuffer` v8 @kind object, `boolean` v9 , `java.nio.ByteBuffer` v10 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming$b;.encryptSegment:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;ZLjava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4917f8.  @monitorenter v6
  #L4917fa.  v0:= v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.b` @type ^`javax.crypto.Cipher` @kind object;
  #L4917fe.  v1:= 1I;
  #L491800.  v2:= v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.a` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L491804.  v3:= v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.c` @type ^`byte`[] @kind object;
  #L491808.  v4:= v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.e` @type ^`long` @kind wide;
  #L49180c.  call temp:= `e`(v3, v4, v9) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;.e:([BJZ)Ljavax/crypto/spec/GCMParameterSpec;` @kind static;
  #L491812.  v9:= temp @kind object;
  #L491814.  call `init`(v0, v1, v2, v9) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L49181a.  v0:= v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.e` @type ^`long` @kind wide;
  #L49181e.  v2:= 1L;
  #L491822.  v0:= v0 + v2 @kind long;
  #L491824.  v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.e` @type ^`long` := v0 @kind wide;
  #L491828.  call temp:= `hasRemaining`(v8) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L49182e.  v9:= temp;
  #L491830.  if v9 == 0 then goto L49184a;
  #L491834.  v9:= v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.b` @type ^`javax.crypto.Cipher` @kind object;
  #L491838.  call temp:= `update`(v9, v7, v10) @signature `Ljavax/crypto/Cipher;.update:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L49183e.  v7:= v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.b` @type ^`javax.crypto.Cipher` @kind object;
  #L491842.  call temp:= `doFinal`(v7, v8, v10) @signature `Ljavax/crypto/Cipher;.doFinal:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L491848.  goto L491854;
  #L49184a.  v8:= v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.b` @type ^`javax.crypto.Cipher` @kind object;
  #L49184e.  call temp:= `doFinal`(v8, v7, v10) @signature `Ljavax/crypto/Cipher;.doFinal:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L491854.  @monitorexit v6
  #L491856.  return @kind void;
  #L491858.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49185a.  @monitorexit v6
  #L49185c.  throw v7;
  catch `java.lang.Throwable` @[L4917fa..L491854] goto L491858;
}
procedure `void` `encryptSegment`(`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b` v6 @kind this, `java.nio.ByteBuffer` v7 @kind object, `boolean` v8 , `java.nio.ByteBuffer` v9 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming$b;.encryptSegment:(Ljava/nio/ByteBuffer;ZLjava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L491798.  @monitorenter v6
  #L49179a.  v0:= v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.b` @type ^`javax.crypto.Cipher` @kind object;
  #L49179e.  v1:= 1I;
  #L4917a0.  v2:= v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.a` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L4917a4.  v3:= v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.c` @type ^`byte`[] @kind object;
  #L4917a8.  v4:= v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.e` @type ^`long` @kind wide;
  #L4917ac.  call temp:= `e`(v3, v4, v8) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming;.e:([BJZ)Ljavax/crypto/spec/GCMParameterSpec;` @kind static;
  #L4917b2.  v8:= temp @kind object;
  #L4917b4.  call `init`(v0, v1, v2, v8) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L4917ba.  v0:= v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.e` @type ^`long` @kind wide;
  #L4917be.  v2:= 1L;
  #L4917c2.  v0:= v0 + v2 @kind long;
  #L4917c4.  v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.e` @type ^`long` := v0 @kind wide;
  #L4917c8.  v8:= v6.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.b` @type ^`javax.crypto.Cipher` @kind object;
  #L4917cc.  call temp:= `doFinal`(v8, v7, v9) @signature `Ljavax/crypto/Cipher;.doFinal:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L4917d2.  @monitorexit v6
  #L4917d4.  return @kind void;
  #L4917d6.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4917d8.  @monitorexit v6
  #L4917da.  throw v7;
  catch `java.lang.Throwable` @[L49179a..L4917d2] goto L4917d6;
}
procedure `java.nio.ByteBuffer` `getHeader`(`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b` v1 @kind this) @signature `Lcom/google/crypto/tink/subtle/AesGcmHkdfStreaming$b;.getHeader:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4916e0.  v0:= v1.`com.google.crypto.tink.subtle.AesGcmHkdfStreaming$b.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4916e4.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L4916ea.  v0:= temp @kind object;
  #L4916ec.  return v0 @kind object;
}
