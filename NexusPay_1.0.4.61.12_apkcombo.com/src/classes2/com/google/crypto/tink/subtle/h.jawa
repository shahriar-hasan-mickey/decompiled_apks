record `com.google.crypto.tink.subtle.h` @kind class @AccessFlag FINAL {
}
global `int`[] `@@com.google.crypto.tink.subtle.h.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@com.google.crypto.tink.subtle.h.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@com.google.crypto.tink.subtle.h.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@com.google.crypto.tink.subtle.h.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/subtle/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L49a928.  v0:= 10I;
  #L49a92c.  v1:= new `int`[v0];
  #L49a930.  goto L49a968;
  #L49a936.  `@@com.google.crypto.tink.subtle.h.a` @type ^`int`[] := v1 @kind object;
  #L49a93a.  v0:= new `int`[v0];
  #L49a93e.  goto L49a998;
  #L49a944.  `@@com.google.crypto.tink.subtle.h.b` @type ^`int`[] := v0 @kind object;
  #L49a948.  v0:= 2I;
  #L49a94a.  v1:= new `int`[v0];
  #L49a94e.  goto L49a9c8;
  #L49a954.  `@@com.google.crypto.tink.subtle.h.c` @type ^`int`[] := v1 @kind object;
  #L49a958.  v0:= new `int`[v0];
  #L49a95c.  goto L49a9d8;
  #L49a962.  `@@com.google.crypto.tink.subtle.h.d` @type ^`int`[] := v0 @kind object;
  #L49a966.  return @kind void;
  #L49a968.  v1:= (0I, 3I, 6I, 9I, 12I, 16I, 19I, 22I, 25I, 28I) @kind object;
  #L49a997.  goto L49a936;
  #L49a998.  v0:= (0I, 2I, 3I, 5I, 6I, 0I, 1I, 3I, 4I, 6I) @kind object;
  #L49a9c7.  goto L49a944;
  #L49a9c8.  v1:= (67108863I, 33554431I) @kind object;
  #L49a9d7.  goto L49a954;
  #L49a9d8.  v0:= (26I, 25I) @kind object;
  #L49a9e7.  goto L49a962;
}
procedure `byte`[] `a`(`long`[] v14 @kind object) @signature `Lcom/google/crypto/tink/subtle/h;.a:([J)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L49a580.  v0:= 10I;
  #L49a584.  call temp:= `copyOf`(v14, v0) @signature `Ljava/util/Arrays;.copyOf:([JI)[J` @kind static;
  #L49a58a.  v14:= temp @kind object;
  #L49a58c.  v1:= 0I;
  #L49a58e.  v2:= 0I;
  #L49a590.  v3:= 25I;
  #L49a594.  v4:= 31I;
  #L49a598.  v5:= 2I;
  #L49a59a.  v6:= 9I;
  #L49a59e.  if v2 >= v5 then goto L49a628;
  #L49a5a2.  v5:= 0I;
  #L49a5a4.  if v5 >= v6 then goto L49a5ec;
  #L49a5a8.  v7:= v14[v5] @kind wide;
  #L49a5ac.  v9:= v14[v5] @kind wide;
  #L49a5b0.  v9:= v9 ^> v4 @kind long;
  #L49a5b2.  v7:= v7 ^& v9 @kind long;
  #L49a5b4.  v9:= `@@com.google.crypto.tink.subtle.h.d` @type ^`int`[] @kind object;
  #L49a5b8.  v10:= v5 ^& 1;
  #L49a5bc.  v11:= v9[v10];
  #L49a5c0.  v7:= v7 ^> v11 @kind long;
  #L49a5c2.  v8:= (`int`) v7 @kind l2i;
  #L49a5c4.  v7:= -v8 @kind int;
  #L49a5c6.  v11:= v14[v5] @kind wide;
  #L49a5ca.  v8:= v9[v10];
  #L49a5ce.  v8:= v7 ^< v8 @kind int;
  #L49a5d2.  v8:= (`long`) v8 @kind i2l;
  #L49a5d4.  v11:= v11 + v8 @kind long;
  #L49a5d6.  v14[v5]:= v11 @kind wide;
  #L49a5da.  v5:= v5 + 1;
  #L49a5de.  v8:= v14[v5] @kind wide;
  #L49a5e2.  v10:= (`long`) v7 @kind i2l;
  #L49a5e4.  v8:= v8 - v10 @kind long;
  #L49a5e6.  v14[v5]:= v8 @kind wide;
  #L49a5ea.  goto L49a5a4;
  #L49a5ec.  v7:= v14[v6] @kind wide;
  #L49a5f0.  v9:= v14[v6] @kind wide;
  #L49a5f4.  v4:= v9 ^> v4 @kind long;
  #L49a5f8.  v4:= v4 ^& v7 @kind long;
  #L49a5fa.  v3:= v4 ^> v3 @kind long;
  #L49a5fe.  v4:= (`int`) v3 @kind l2i;
  #L49a600.  v3:= -v4 @kind int;
  #L49a602.  v4:= v14[v6] @kind wide;
  #L49a606.  v7:= v3 ^< 25;
  #L49a60a.  v7:= (`long`) v7 @kind i2l;
  #L49a60c.  v4:= v4 + v7 @kind long;
  #L49a60e.  v14[v6]:= v4 @kind wide;
  #L49a612.  v4:= v14[v1] @kind wide;
  #L49a616.  v3:= v3 * 19;
  #L49a61a.  v6:= (`long`) v3 @kind i2l;
  #L49a61c.  v4:= v4 - v6 @kind long;
  #L49a61e.  v14[v1]:= v4 @kind wide;
  #L49a622.  v2:= v2 + 1;
  #L49a626.  goto L49a590;
  #L49a628.  v7:= v14[v1] @kind wide;
  #L49a62c.  v9:= v14[v1] @kind wide;
  #L49a630.  v9:= v9 ^> v4 @kind long;
  #L49a632.  v7:= v7 ^& v9 @kind long;
  #L49a634.  v2:= 26I;
  #L49a638.  v7:= v7 ^> v2 @kind long;
  #L49a63a.  v2:= (`int`) v7 @kind l2i;
  #L49a63c.  v2:= -v2 @kind int;
  #L49a63e.  v7:= v14[v1] @kind wide;
  #L49a642.  v4:= v2 ^< 26;
  #L49a646.  v9:= (`long`) v4 @kind i2l;
  #L49a648.  v7:= v7 + v9 @kind long;
  #L49a64a.  v14[v1]:= v7 @kind wide;
  #L49a64e.  v4:= 1I;
  #L49a650.  v7:= v14[v4] @kind wide;
  #L49a654.  v9:= (`long`) v2 @kind i2l;
  #L49a656.  v7:= v7 - v9 @kind long;
  #L49a658.  v14[v4]:= v7 @kind wide;
  #L49a65c.  v2:= 0I;
  #L49a65e.  if v2 >= v5 then goto L49a6a8;
  #L49a662.  v7:= 0I;
  #L49a664.  if v7 >= v6 then goto L49a6a2;
  #L49a668.  v8:= v14[v7] @kind wide;
  #L49a66c.  v10:= `@@com.google.crypto.tink.subtle.h.d` @type ^`int`[] @kind object;
  #L49a670.  v11:= v7 ^& 1;
  #L49a674.  v10:= v10[v11];
  #L49a678.  v8:= v8 ^> v10 @kind long;
  #L49a67a.  v9:= (`int`) v8 @kind l2i;
  #L49a67c.  v12:= v14[v7] @kind wide;
  #L49a680.  v8:= `@@com.google.crypto.tink.subtle.h.c` @type ^`int`[] @kind object;
  #L49a684.  v8:= v8[v11];
  #L49a688.  v10:= (`long`) v8 @kind i2l;
  #L49a68a.  v10:= v10 ^& v12 @kind long;
  #L49a68c.  v14[v7]:= v10 @kind wide;
  #L49a690.  v7:= v7 + 1;
  #L49a694.  v10:= v14[v7] @kind wide;
  #L49a698.  v8:= (`long`) v9 @kind i2l;
  #L49a69a.  v10:= v10 + v8 @kind long;
  #L49a69c.  v14[v7]:= v10 @kind wide;
  #L49a6a0.  goto L49a664;
  #L49a6a2.  v2:= v2 + 1;
  #L49a6a6.  goto L49a65e;
  #L49a6a8.  v7:= v14[v6] @kind wide;
  #L49a6ac.  v2:= v7 ^> v3 @kind long;
  #L49a6b0.  v3:= (`int`) v2 @kind l2i;
  #L49a6b2.  v7:= v14[v6] @kind wide;
  #L49a6b6.  v9:= 33554431L;
  #L49a6bc.  v7:= v7 ^& v9 @kind long;
  #L49a6be.  v14[v6]:= v7 @kind wide;
  #L49a6c2.  v6:= v14[v1] @kind wide;
  #L49a6c6.  v3:= v3 * 19;
  #L49a6ca.  v2:= (`long`) v3 @kind i2l;
  #L49a6cc.  v6:= v6 + v2 @kind long;
  #L49a6ce.  v14[v1]:= v6 @kind wide;
  #L49a6d2.  v2:= v14[v1] @kind wide;
  #L49a6d6.  v3:= (`int`) v2 @kind l2i;
  #L49a6d8.  v2:= 67108845I;
  #L49a6de.  call temp:= `d`(v3, v2) @signature `Lcom/google/crypto/tink/subtle/h;.d:(II)I` @kind static;
  #L49a6e4.  v3:= temp;
  #L49a6e6.  v6:= 1I;
  #L49a6e8.  if v6 >= v0 then goto L49a70e;
  #L49a6ec.  v7:= v14[v6] @kind wide;
  #L49a6f0.  v8:= (`int`) v7 @kind l2i;
  #L49a6f2.  v7:= `@@com.google.crypto.tink.subtle.h.c` @type ^`int`[] @kind object;
  #L49a6f6.  v9:= v6 ^& 1;
  #L49a6fa.  v7:= v7[v9];
  #L49a6fe.  call temp:= `b`(v8, v7) @signature `Lcom/google/crypto/tink/subtle/h;.b:(II)I` @kind static;
  #L49a704.  v7:= temp;
  #L49a706.  v3:= v3 ^& v7 @kind int;
  #L49a708.  v6:= v6 + 1;
  #L49a70c.  goto L49a6e8;
  #L49a70e.  v6:= v14[v1] @kind wide;
  #L49a712.  v2:= v2 ^& v3 @kind int;
  #L49a714.  v8:= (`long`) v2 @kind i2l;
  #L49a716.  v6:= v6 - v8 @kind long;
  #L49a718.  v14[v1]:= v6 @kind wide;
  #L49a71c.  v6:= v14[v4] @kind wide;
  #L49a720.  v2:= 33554431I;
  #L49a726.  v2:= v2 ^& v3 @kind int;
  #L49a728.  v8:= (`long`) v2 @kind i2l;
  #L49a72a.  v6:= v6 - v8 @kind long;
  #L49a72c.  v14[v4]:= v6 @kind wide;
  #L49a730.  v2:= 2I;
  #L49a732.  if v2 >= v0 then goto L49a75e;
  #L49a736.  v6:= v14[v2] @kind wide;
  #L49a73a.  v10:= 67108863I;
  #L49a740.  v10:= v10 ^& v3 @kind int;
  #L49a742.  v10:= (`long`) v10 @kind i2l;
  #L49a744.  v6:= v6 - v10 @kind long;
  #L49a746.  v14[v2]:= v6 @kind wide;
  #L49a74a.  v6:= v2 + 1;
  #L49a74e.  v10:= v14[v6] @kind wide;
  #L49a752.  v10:= v10 - v8 @kind long;
  #L49a754.  v14[v6]:= v10 @kind wide;
  #L49a758.  v2:= v2 + 2;
  #L49a75c.  goto L49a732;
  #L49a75e.  v2:= 0I;
  #L49a760.  if v2 >= v0 then goto L49a77c;
  #L49a764.  v6:= v14[v2] @kind wide;
  #L49a768.  v3:= `@@com.google.crypto.tink.subtle.h.b` @type ^`int`[] @kind object;
  #L49a76c.  v3:= v3[v2];
  #L49a770.  v6:= v6 ^< v3 @kind long;
  #L49a772.  v14[v2]:= v6 @kind wide;
  #L49a776.  v2:= v2 + 1;
  #L49a77a.  goto L49a760;
  #L49a77c.  v2:= 32I;
  #L49a780.  v2:= new `byte`[v2];
  #L49a784.  if v1 >= v0 then goto L49a818;
  #L49a788.  v3:= `@@com.google.crypto.tink.subtle.h.a` @type ^`int`[] @kind object;
  #L49a78c.  v6:= v3[v1];
  #L49a790.  v7:= v2[v6] @kind byte;
  #L49a794.  v7:= (`long`) v7 @kind i2l;
  #L49a796.  v9:= v14[v1] @kind wide;
  #L49a79a.  v11:= 255L;
  #L49a79e.  v9:= v9 ^& v11 @kind long;
  #L49a7a0.  v7:= v7 ^| v9 @kind long;
  #L49a7a2.  v8:= (`int`) v7 @kind l2i;
  #L49a7a4.  v7:= (`byte`) v8 @kind i2b;
  #L49a7a6.  v2[v6]:= v7 @kind byte;
  #L49a7aa.  v6:= v3[v1];
  #L49a7ae.  v6:= v6 + v4 @kind int;
  #L49a7b0.  v7:= v2[v6] @kind byte;
  #L49a7b4.  v7:= (`long`) v7 @kind i2l;
  #L49a7b6.  v9:= v14[v1] @kind wide;
  #L49a7ba.  v13:= 8I;
  #L49a7be.  v9:= v9 ^> v13 @kind long;
  #L49a7c0.  v9:= v9 ^& v11 @kind long;
  #L49a7c2.  v7:= v7 ^| v9 @kind long;
  #L49a7c4.  v8:= (`int`) v7 @kind l2i;
  #L49a7c6.  v7:= (`byte`) v8 @kind i2b;
  #L49a7c8.  v2[v6]:= v7 @kind byte;
  #L49a7cc.  v6:= v3[v1];
  #L49a7d0.  v6:= v6 + v5 @kind int;
  #L49a7d2.  v7:= v2[v6] @kind byte;
  #L49a7d6.  v7:= (`long`) v7 @kind i2l;
  #L49a7d8.  v9:= v14[v1] @kind wide;
  #L49a7dc.  v13:= 16I;
  #L49a7e0.  v9:= v9 ^> v13 @kind long;
  #L49a7e2.  v9:= v9 ^& v11 @kind long;
  #L49a7e4.  v7:= v7 ^| v9 @kind long;
  #L49a7e6.  v8:= (`int`) v7 @kind l2i;
  #L49a7e8.  v7:= (`byte`) v8 @kind i2b;
  #L49a7ea.  v2[v6]:= v7 @kind byte;
  #L49a7ee.  v3:= v3[v1];
  #L49a7f2.  v3:= v3 + 3;
  #L49a7f6.  v6:= v2[v3] @kind byte;
  #L49a7fa.  v6:= (`long`) v6 @kind i2l;
  #L49a7fc.  v8:= v14[v1] @kind wide;
  #L49a800.  v10:= 24I;
  #L49a804.  v8:= v8 ^> v10 @kind long;
  #L49a806.  v8:= v8 ^& v11 @kind long;
  #L49a808.  v6:= v6 ^| v8 @kind long;
  #L49a80a.  v7:= (`int`) v6 @kind l2i;
  #L49a80c.  v6:= (`byte`) v7 @kind i2b;
  #L49a80e.  v2[v3]:= v6 @kind byte;
  #L49a812.  v1:= v1 + 1;
  #L49a816.  goto L49a784;
  #L49a818.  return v2 @kind object;
}
procedure `int` `b`(`int` v0 , `int` v1 ) @signature `Lcom/google/crypto/tink/subtle/h;.b:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L49a82c.  v0:= v0 ^~ v1 @kind int;
  #L49a82e.  v0:= ~v0 @kind int;
  #L49a830.  v1:= v0 ^< 16;
  #L49a834.  v0:= v0 ^& v1 @kind int;
  #L49a836.  v1:= v0 ^< 8;
  #L49a83a.  v0:= v0 ^& v1 @kind int;
  #L49a83c.  v1:= v0 ^< 4;
  #L49a840.  v0:= v0 ^& v1 @kind int;
  #L49a842.  v1:= v0 ^< 2;
  #L49a846.  v0:= v0 ^& v1 @kind int;
  #L49a848.  v1:= v0 ^< 1;
  #L49a84c.  v0:= v0 ^& v1 @kind int;
  #L49a84e.  v0:= v0 ^> 31;
  #L49a852.  return v0;
}
procedure `long`[] `c`(`byte`[] v9 @kind object) @signature `Lcom/google/crypto/tink/subtle/h;.c:([B)[J` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L49a880.  v0:= 10I;
  #L49a884.  v1:= new `long`[v0];
  #L49a888.  v2:= 0I;
  #L49a88a.  if v2 >= v0 then goto L49a914;
  #L49a88e.  v3:= `@@com.google.crypto.tink.subtle.h.a` @type ^`int`[] @kind object;
  #L49a892.  v4:= v3[v2];
  #L49a896.  v4:= v9[v4] @kind byte;
  #L49a89a.  v4:= v4 ^& 255;
  #L49a89e.  v4:= (`long`) v4 @kind i2l;
  #L49a8a0.  v6:= v3[v2];
  #L49a8a4.  v6:= v6 + 1;
  #L49a8a8.  v6:= v9[v6] @kind byte;
  #L49a8ac.  v6:= v6 ^& 255;
  #L49a8b0.  v6:= (`long`) v6 @kind i2l;
  #L49a8b2.  v8:= 8I;
  #L49a8b6.  v6:= v6 ^< v8 @kind long;
  #L49a8b8.  v4:= v4 ^| v6 @kind long;
  #L49a8ba.  v6:= v3[v2];
  #L49a8be.  v6:= v6 + 2;
  #L49a8c2.  v6:= v9[v6] @kind byte;
  #L49a8c6.  v6:= v6 ^& 255;
  #L49a8ca.  v6:= (`long`) v6 @kind i2l;
  #L49a8cc.  v8:= 16I;
  #L49a8d0.  v6:= v6 ^< v8 @kind long;
  #L49a8d2.  v4:= v4 ^| v6 @kind long;
  #L49a8d4.  v3:= v3[v2];
  #L49a8d8.  v3:= v3 + 3;
  #L49a8dc.  v3:= v9[v3] @kind byte;
  #L49a8e0.  v3:= v3 ^& 255;
  #L49a8e4.  v6:= (`long`) v3 @kind i2l;
  #L49a8e6.  v3:= 24I;
  #L49a8ea.  v6:= v6 ^< v3 @kind long;
  #L49a8ec.  v3:= v4 ^| v6 @kind long;
  #L49a8f0.  v5:= `@@com.google.crypto.tink.subtle.h.b` @type ^`int`[] @kind object;
  #L49a8f4.  v5:= v5[v2];
  #L49a8f8.  v3:= v3 ^> v5 @kind long;
  #L49a8fa.  v5:= `@@com.google.crypto.tink.subtle.h.c` @type ^`int`[] @kind object;
  #L49a8fe.  v6:= v2 ^& 1;
  #L49a902.  v5:= v5[v6];
  #L49a906.  v5:= (`long`) v5 @kind i2l;
  #L49a908.  v3:= v3 ^& v5 @kind long;
  #L49a90a.  v1[v2]:= v3 @kind wide;
  #L49a90e.  v2:= v2 + 1;
  #L49a912.  goto L49a88a;
  #L49a914.  return v1 @kind object;
}
procedure `int` `d`(`int` v0 , `int` v1 ) @signature `Lcom/google/crypto/tink/subtle/h;.d:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L49a864.  v0:= v0 - v1 @kind int;
  #L49a866.  v0:= v0 ^> 31;
  #L49a86a.  v0:= ~v0 @kind int;
  #L49a86c.  return v0;
}
procedure `void` `e`(`long`[] v11 @kind object, `long`[] v12 @kind object) @signature `Lcom/google/crypto/tink/subtle/h;.e:([J[J)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L49a9f8.  v0:= 10I;
  #L49a9fc.  v1:= new `long`[v0];
  #L49aa00.  v2:= new `long`[v0];
  #L49aa04.  v3:= new `long`[v0];
  #L49aa08.  v4:= new `long`[v0];
  #L49aa0c.  v5:= new `long`[v0];
  #L49aa10.  v6:= new `long`[v0];
  #L49aa14.  v7:= new `long`[v0];
  #L49aa18.  v8:= new `long`[v0];
  #L49aa1c.  v9:= new `long`[v0];
  #L49aa20.  v10:= new `long`[v0];
  #L49aa24.  call `l`(v1, v12) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aa2a.  call `l`(v10, v1) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aa30.  call `l`(v9, v10) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aa36.  call `f`(v2, v9, v12) @signature `Lcom/google/crypto/tink/subtle/h;.f:([J[J[J)V` @kind static;
  #L49aa3c.  call `f`(v3, v2, v1) @signature `Lcom/google/crypto/tink/subtle/h;.f:([J[J[J)V` @kind static;
  #L49aa42.  call `l`(v9, v3) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aa48.  call `f`(v4, v9, v2) @signature `Lcom/google/crypto/tink/subtle/h;.f:([J[J[J)V` @kind static;
  #L49aa4e.  call `l`(v9, v4) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aa54.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aa5a.  call `l`(v9, v10) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aa60.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aa66.  call `l`(v9, v10) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aa6c.  call `f`(v5, v9, v4) @signature `Lcom/google/crypto/tink/subtle/h;.f:([J[J[J)V` @kind static;
  #L49aa72.  call `l`(v9, v5) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aa78.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aa7e.  v12:= 2I;
  #L49aa80.  v1:= 2I;
  #L49aa82.  if v1 >= v0 then goto L49aa98;
  #L49aa86.  call `l`(v9, v10) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aa8c.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aa92.  v1:= v1 + 2;
  #L49aa96.  goto L49aa82;
  #L49aa98.  call `f`(v6, v10, v5) @signature `Lcom/google/crypto/tink/subtle/h;.f:([J[J[J)V` @kind static;
  #L49aa9e.  call `l`(v9, v6) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aaa4.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aaaa.  v1:= 2I;
  #L49aaac.  v2:= 20I;
  #L49aab0.  if v1 >= v2 then goto L49aac6;
  #L49aab4.  call `l`(v9, v10) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aaba.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aac0.  v1:= v1 + 2;
  #L49aac4.  goto L49aaac;
  #L49aac6.  call `f`(v9, v10, v6) @signature `Lcom/google/crypto/tink/subtle/h;.f:([J[J[J)V` @kind static;
  #L49aacc.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aad2.  call `l`(v9, v10) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aad8.  v1:= 2I;
  #L49aada.  if v1 >= v0 then goto L49aaf0;
  #L49aade.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aae4.  call `l`(v9, v10) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aaea.  v1:= v1 + 2;
  #L49aaee.  goto L49aada;
  #L49aaf0.  call `f`(v7, v9, v5) @signature `Lcom/google/crypto/tink/subtle/h;.f:([J[J[J)V` @kind static;
  #L49aaf6.  call `l`(v9, v7) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49aafc.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab02.  v0:= 2I;
  #L49ab04.  v1:= 50I;
  #L49ab08.  if v0 >= v1 then goto L49ab1e;
  #L49ab0c.  call `l`(v9, v10) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab12.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab18.  v0:= v0 + 2;
  #L49ab1c.  goto L49ab04;
  #L49ab1e.  call `f`(v8, v10, v7) @signature `Lcom/google/crypto/tink/subtle/h;.f:([J[J[J)V` @kind static;
  #L49ab24.  call `l`(v10, v8) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab2a.  call `l`(v9, v10) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab30.  v0:= 2I;
  #L49ab32.  v2:= 100I;
  #L49ab36.  if v0 >= v2 then goto L49ab4c;
  #L49ab3a.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab40.  call `l`(v9, v10) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab46.  v0:= v0 + 2;
  #L49ab4a.  goto L49ab32;
  #L49ab4c.  call `f`(v10, v9, v8) @signature `Lcom/google/crypto/tink/subtle/h;.f:([J[J[J)V` @kind static;
  #L49ab52.  call `l`(v9, v10) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab58.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab5e.  if v12 >= v1 then goto L49ab74;
  #L49ab62.  call `l`(v9, v10) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab68.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab6e.  v12:= v12 + 2;
  #L49ab72.  goto L49ab5e;
  #L49ab74.  call `f`(v9, v10, v7) @signature `Lcom/google/crypto/tink/subtle/h;.f:([J[J[J)V` @kind static;
  #L49ab7a.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab80.  call `l`(v9, v10) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab86.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab8c.  call `l`(v9, v10) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab92.  call `l`(v10, v9) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @kind static;
  #L49ab98.  call `f`(v11, v10, v3) @signature `Lcom/google/crypto/tink/subtle/h;.f:([J[J[J)V` @kind static;
  #L49ab9e.  return @kind void;
}
procedure `void` `f`(`long`[] v1 @kind object, `long`[] v2 @kind object, `long`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/h;.f:([J[J[J)V` @AccessFlag STATIC {
    temp;
    v0;

  #L49abb0.  v0:= 19I;
  #L49abb4.  v0:= new `long`[v0];
  #L49abb8.  call `g`(v0, v2, v3) @signature `Lcom/google/crypto/tink/subtle/h;.g:([J[J[J)V` @kind static;
  #L49abbe.  call `h`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/h;.h:([J[J)V` @kind static;
  #L49abc4.  return @kind void;
}
procedure `void` `g`(`long`[] v18 @kind object, `long`[] v19 @kind object, `long`[] v20 @kind object) @signature `Lcom/google/crypto/tink/subtle/h;.g:([J[J[J)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L49abd8.  v0:= 0I;
  #L49abda.  v1:= v19[v0] @kind wide;
  #L49abde.  v3:= v20[v0] @kind wide;
  #L49abe2.  v1:= v1 * v3 @kind long;
  #L49abe6.  v18[v0]:= v1 @kind wide;
  #L49abea.  v1:= v19[v0] @kind wide;
  #L49abee.  v3:= 1I;
  #L49abf0.  v4:= v20[v3] @kind wide;
  #L49abf4.  v1:= v1 * v4 @kind long;
  #L49abf8.  v4:= v19[v3] @kind wide;
  #L49abfc.  v6:= v20[v0] @kind wide;
  #L49ac00.  v4:= v4 * v6 @kind long;
  #L49ac04.  v1:= v1 + v4 @kind long;
  #L49ac06.  v18[v3]:= v1 @kind wide;
  #L49ac0a.  v1:= v19[v3] @kind wide;
  #L49ac0e.  v4:= 2L;
  #L49ac12.  v1:= v1 * v4 @kind long;
  #L49ac16.  v6:= v20[v3] @kind wide;
  #L49ac1a.  v1:= v1 * v6 @kind long;
  #L49ac1e.  v6:= v19[v0] @kind wide;
  #L49ac22.  v8:= 2I;
  #L49ac24.  v9:= v20[v8] @kind wide;
  #L49ac28.  v6:= v6 * v9 @kind long;
  #L49ac2c.  v1:= v1 + v6 @kind long;
  #L49ac2e.  v6:= v19[v8] @kind wide;
  #L49ac32.  v9:= v20[v0] @kind wide;
  #L49ac36.  v6:= v6 * v9 @kind long;
  #L49ac3a.  v1:= v1 + v6 @kind long;
  #L49ac3c.  v18[v8]:= v1 @kind wide;
  #L49ac40.  v1:= v19[v3] @kind wide;
  #L49ac44.  v6:= v20[v8] @kind wide;
  #L49ac48.  v1:= v1 * v6 @kind long;
  #L49ac4c.  v6:= v19[v8] @kind wide;
  #L49ac50.  v9:= v20[v3] @kind wide;
  #L49ac54.  v6:= v6 * v9 @kind long;
  #L49ac58.  v1:= v1 + v6 @kind long;
  #L49ac5a.  v6:= v19[v0] @kind wide;
  #L49ac5e.  v9:= 3I;
  #L49ac60.  v10:= v20[v9] @kind wide;
  #L49ac64.  v6:= v6 * v10 @kind long;
  #L49ac68.  v1:= v1 + v6 @kind long;
  #L49ac6a.  v6:= v19[v9] @kind wide;
  #L49ac6e.  v10:= v20[v0] @kind wide;
  #L49ac72.  v6:= v6 * v10 @kind long;
  #L49ac76.  v1:= v1 + v6 @kind long;
  #L49ac78.  v18[v9]:= v1 @kind wide;
  #L49ac7c.  v1:= v19[v8] @kind wide;
  #L49ac80.  v6:= v20[v8] @kind wide;
  #L49ac84.  v1:= v1 * v6 @kind long;
  #L49ac88.  v6:= v19[v3] @kind wide;
  #L49ac8c.  v10:= v20[v9] @kind wide;
  #L49ac90.  v6:= v6 * v10 @kind long;
  #L49ac94.  v10:= v19[v9] @kind wide;
  #L49ac98.  v12:= v20[v3] @kind wide;
  #L49ac9c.  v10:= v10 * v12 @kind long;
  #L49aca0.  v6:= v6 + v10 @kind long;
  #L49aca2.  v6:= v6 * v4 @kind long;
  #L49aca6.  v1:= v1 + v6 @kind long;
  #L49aca8.  v6:= v19[v0] @kind wide;
  #L49acac.  v10:= 4I;
  #L49acae.  v11:= v20[v10] @kind wide;
  #L49acb2.  v6:= v6 * v11 @kind long;
  #L49acb6.  v1:= v1 + v6 @kind long;
  #L49acb8.  v6:= v19[v10] @kind wide;
  #L49acbc.  v11:= v20[v0] @kind wide;
  #L49acc0.  v6:= v6 * v11 @kind long;
  #L49acc4.  v1:= v1 + v6 @kind long;
  #L49acc6.  v18[v10]:= v1 @kind wide;
  #L49acca.  v1:= v19[v8] @kind wide;
  #L49acce.  v6:= v20[v9] @kind wide;
  #L49acd2.  v1:= v1 * v6 @kind long;
  #L49acd6.  v6:= v19[v9] @kind wide;
  #L49acda.  v11:= v20[v8] @kind wide;
  #L49acde.  v6:= v6 * v11 @kind long;
  #L49ace2.  v1:= v1 + v6 @kind long;
  #L49ace4.  v6:= v19[v3] @kind wide;
  #L49ace8.  v11:= v20[v10] @kind wide;
  #L49acec.  v6:= v6 * v11 @kind long;
  #L49acf0.  v1:= v1 + v6 @kind long;
  #L49acf2.  v6:= v19[v10] @kind wide;
  #L49acf6.  v11:= v20[v3] @kind wide;
  #L49acfa.  v6:= v6 * v11 @kind long;
  #L49acfe.  v1:= v1 + v6 @kind long;
  #L49ad00.  v6:= v19[v0] @kind wide;
  #L49ad04.  v11:= 5I;
  #L49ad06.  v12:= v20[v11] @kind wide;
  #L49ad0a.  v6:= v6 * v12 @kind long;
  #L49ad0e.  v1:= v1 + v6 @kind long;
  #L49ad10.  v6:= v19[v11] @kind wide;
  #L49ad14.  v12:= v20[v0] @kind wide;
  #L49ad18.  v6:= v6 * v12 @kind long;
  #L49ad1c.  v1:= v1 + v6 @kind long;
  #L49ad1e.  v18[v11]:= v1 @kind wide;
  #L49ad22.  v1:= v19[v9] @kind wide;
  #L49ad26.  v6:= v20[v9] @kind wide;
  #L49ad2a.  v1:= v1 * v6 @kind long;
  #L49ad2e.  v6:= v19[v3] @kind wide;
  #L49ad32.  v12:= v20[v11] @kind wide;
  #L49ad36.  v6:= v6 * v12 @kind long;
  #L49ad3a.  v1:= v1 + v6 @kind long;
  #L49ad3c.  v6:= v19[v11] @kind wide;
  #L49ad40.  v12:= v20[v3] @kind wide;
  #L49ad44.  v6:= v6 * v12 @kind long;
  #L49ad48.  v1:= v1 + v6 @kind long;
  #L49ad4a.  v1:= v1 * v4 @kind long;
  #L49ad4e.  v6:= v19[v8] @kind wide;
  #L49ad52.  v12:= v20[v10] @kind wide;
  #L49ad56.  v6:= v6 * v12 @kind long;
  #L49ad5a.  v1:= v1 + v6 @kind long;
  #L49ad5c.  v6:= v19[v10] @kind wide;
  #L49ad60.  v12:= v20[v8] @kind wide;
  #L49ad64.  v6:= v6 * v12 @kind long;
  #L49ad68.  v1:= v1 + v6 @kind long;
  #L49ad6a.  v6:= v19[v0] @kind wide;
  #L49ad6e.  v12:= 6I;
  #L49ad70.  v13:= v20[v12] @kind wide;
  #L49ad74.  v6:= v6 * v13 @kind long;
  #L49ad78.  v1:= v1 + v6 @kind long;
  #L49ad7a.  v6:= v19[v12] @kind wide;
  #L49ad7e.  v13:= v20[v0] @kind wide;
  #L49ad82.  v6:= v6 * v13 @kind long;
  #L49ad86.  v1:= v1 + v6 @kind long;
  #L49ad88.  v18[v12]:= v1 @kind wide;
  #L49ad8c.  v1:= v19[v9] @kind wide;
  #L49ad90.  v6:= v20[v10] @kind wide;
  #L49ad94.  v1:= v1 * v6 @kind long;
  #L49ad98.  v6:= v19[v10] @kind wide;
  #L49ad9c.  v13:= v20[v9] @kind wide;
  #L49ada0.  v6:= v6 * v13 @kind long;
  #L49ada4.  v1:= v1 + v6 @kind long;
  #L49ada6.  v6:= v19[v8] @kind wide;
  #L49adaa.  v13:= v20[v11] @kind wide;
  #L49adae.  v6:= v6 * v13 @kind long;
  #L49adb2.  v1:= v1 + v6 @kind long;
  #L49adb4.  v6:= v19[v11] @kind wide;
  #L49adb8.  v13:= v20[v8] @kind wide;
  #L49adbc.  v6:= v6 * v13 @kind long;
  #L49adc0.  v1:= v1 + v6 @kind long;
  #L49adc2.  v6:= v19[v3] @kind wide;
  #L49adc6.  v13:= v20[v12] @kind wide;
  #L49adca.  v6:= v6 * v13 @kind long;
  #L49adce.  v1:= v1 + v6 @kind long;
  #L49add0.  v6:= v19[v12] @kind wide;
  #L49add4.  v13:= v20[v3] @kind wide;
  #L49add8.  v6:= v6 * v13 @kind long;
  #L49addc.  v1:= v1 + v6 @kind long;
  #L49adde.  v6:= v19[v0] @kind wide;
  #L49ade2.  v13:= 7I;
  #L49ade4.  v14:= v20[v13] @kind wide;
  #L49ade8.  v6:= v6 * v14 @kind long;
  #L49adec.  v1:= v1 + v6 @kind long;
  #L49adee.  v6:= v19[v13] @kind wide;
  #L49adf2.  v14:= v20[v0] @kind wide;
  #L49adf6.  v6:= v6 * v14 @kind long;
  #L49adfa.  v1:= v1 + v6 @kind long;
  #L49adfc.  v18[v13]:= v1 @kind wide;
  #L49ae00.  v1:= v19[v10] @kind wide;
  #L49ae04.  v6:= v20[v10] @kind wide;
  #L49ae08.  v1:= v1 * v6 @kind long;
  #L49ae0c.  v6:= v19[v9] @kind wide;
  #L49ae10.  v14:= v20[v11] @kind wide;
  #L49ae14.  v6:= v6 * v14 @kind long;
  #L49ae18.  v14:= v19[v11] @kind wide;
  #L49ae1c.  v16:= v20[v9] @kind wide;
  #L49ae20.  v14:= v14 * v16 @kind long;
  #L49ae24.  v6:= v6 + v14 @kind long;
  #L49ae26.  v14:= v19[v3] @kind wide;
  #L49ae2a.  v16:= v20[v13] @kind wide;
  #L49ae2e.  v14:= v14 * v16 @kind long;
  #L49ae32.  v6:= v6 + v14 @kind long;
  #L49ae34.  v14:= v19[v13] @kind wide;
  #L49ae38.  v16:= v20[v3] @kind wide;
  #L49ae3c.  v14:= v14 * v16 @kind long;
  #L49ae40.  v6:= v6 + v14 @kind long;
  #L49ae42.  v6:= v6 * v4 @kind long;
  #L49ae46.  v1:= v1 + v6 @kind long;
  #L49ae48.  v6:= v19[v8] @kind wide;
  #L49ae4c.  v14:= v20[v12] @kind wide;
  #L49ae50.  v6:= v6 * v14 @kind long;
  #L49ae54.  v1:= v1 + v6 @kind long;
  #L49ae56.  v6:= v19[v12] @kind wide;
  #L49ae5a.  v14:= v20[v8] @kind wide;
  #L49ae5e.  v6:= v6 * v14 @kind long;
  #L49ae62.  v1:= v1 + v6 @kind long;
  #L49ae64.  v6:= v19[v0] @kind wide;
  #L49ae68.  v14:= 8I;
  #L49ae6c.  v15:= v20[v14] @kind wide;
  #L49ae70.  v6:= v6 * v15 @kind long;
  #L49ae74.  v1:= v1 + v6 @kind long;
  #L49ae76.  v6:= v19[v14] @kind wide;
  #L49ae7a.  v15:= v20[v0] @kind wide;
  #L49ae7e.  v6:= v6 * v15 @kind long;
  #L49ae82.  v1:= v1 + v6 @kind long;
  #L49ae84.  v18[v14]:= v1 @kind wide;
  #L49ae88.  v1:= v19[v10] @kind wide;
  #L49ae8c.  v6:= v20[v11] @kind wide;
  #L49ae90.  v1:= v1 * v6 @kind long;
  #L49ae94.  v6:= v19[v11] @kind wide;
  #L49ae98.  v15:= v20[v10] @kind wide;
  #L49ae9c.  v6:= v6 * v15 @kind long;
  #L49aea0.  v1:= v1 + v6 @kind long;
  #L49aea2.  v6:= v19[v9] @kind wide;
  #L49aea6.  v15:= v20[v12] @kind wide;
  #L49aeaa.  v6:= v6 * v15 @kind long;
  #L49aeae.  v1:= v1 + v6 @kind long;
  #L49aeb0.  v6:= v19[v12] @kind wide;
  #L49aeb4.  v15:= v20[v9] @kind wide;
  #L49aeb8.  v6:= v6 * v15 @kind long;
  #L49aebc.  v1:= v1 + v6 @kind long;
  #L49aebe.  v6:= v19[v8] @kind wide;
  #L49aec2.  v15:= v20[v13] @kind wide;
  #L49aec6.  v6:= v6 * v15 @kind long;
  #L49aeca.  v1:= v1 + v6 @kind long;
  #L49aecc.  v6:= v19[v13] @kind wide;
  #L49aed0.  v15:= v20[v8] @kind wide;
  #L49aed4.  v6:= v6 * v15 @kind long;
  #L49aed8.  v1:= v1 + v6 @kind long;
  #L49aeda.  v6:= v19[v3] @kind wide;
  #L49aede.  v15:= v20[v14] @kind wide;
  #L49aee2.  v6:= v6 * v15 @kind long;
  #L49aee6.  v1:= v1 + v6 @kind long;
  #L49aee8.  v6:= v19[v14] @kind wide;
  #L49aeec.  v15:= v20[v3] @kind wide;
  #L49aef0.  v6:= v6 * v15 @kind long;
  #L49aef4.  v1:= v1 + v6 @kind long;
  #L49aef6.  v6:= v19[v0] @kind wide;
  #L49aefa.  v15:= 9I;
  #L49aefe.  v16:= v20[v15] @kind wide;
  #L49af02.  v6:= v6 * v16 @kind long;
  #L49af06.  v1:= v1 + v6 @kind long;
  #L49af08.  v6:= v19[v15] @kind wide;
  #L49af0c.  v16:= v20[v0] @kind wide;
  #L49af10.  v6:= v6 * v16 @kind long;
  #L49af14.  v1:= v1 + v6 @kind long;
  #L49af16.  v18[v15]:= v1 @kind wide;
  #L49af1a.  v0:= v19[v11] @kind wide;
  #L49af1e.  v6:= v20[v11] @kind wide;
  #L49af22.  v0:= v0 * v6 @kind long;
  #L49af26.  v6:= v19[v9] @kind wide;
  #L49af2a.  v16:= v20[v13] @kind wide;
  #L49af2e.  v6:= v6 * v16 @kind long;
  #L49af32.  v0:= v0 + v6 @kind long;
  #L49af34.  v6:= v19[v13] @kind wide;
  #L49af38.  v16:= v20[v9] @kind wide;
  #L49af3c.  v6:= v6 * v16 @kind long;
  #L49af40.  v0:= v0 + v6 @kind long;
  #L49af42.  v6:= v19[v3] @kind wide;
  #L49af46.  v16:= v20[v15] @kind wide;
  #L49af4a.  v6:= v6 * v16 @kind long;
  #L49af4e.  v0:= v0 + v6 @kind long;
  #L49af50.  v6:= v19[v15] @kind wide;
  #L49af54.  v2:= v20[v3] @kind wide;
  #L49af58.  v6:= v6 * v2 @kind long;
  #L49af5c.  v0:= v0 + v6 @kind long;
  #L49af5e.  v0:= v0 * v4 @kind long;
  #L49af62.  v2:= v19[v10] @kind wide;
  #L49af66.  v6:= v20[v12] @kind wide;
  #L49af6a.  v2:= v2 * v6 @kind long;
  #L49af6e.  v0:= v0 + v2 @kind long;
  #L49af70.  v2:= v19[v12] @kind wide;
  #L49af74.  v6:= v20[v10] @kind wide;
  #L49af78.  v2:= v2 * v6 @kind long;
  #L49af7c.  v0:= v0 + v2 @kind long;
  #L49af7e.  v2:= v19[v8] @kind wide;
  #L49af82.  v6:= v20[v14] @kind wide;
  #L49af86.  v2:= v2 * v6 @kind long;
  #L49af8a.  v0:= v0 + v2 @kind long;
  #L49af8c.  v2:= v19[v14] @kind wide;
  #L49af90.  v6:= v20[v8] @kind wide;
  #L49af94.  v2:= v2 * v6 @kind long;
  #L49af98.  v0:= v0 + v2 @kind long;
  #L49af9a.  v2:= 10I;
  #L49af9e.  v18[v2]:= v0 @kind wide;
  #L49afa2.  v0:= v19[v11] @kind wide;
  #L49afa6.  v2:= v20[v12] @kind wide;
  #L49afaa.  v0:= v0 * v2 @kind long;
  #L49afae.  v2:= v19[v12] @kind wide;
  #L49afb2.  v6:= v20[v11] @kind wide;
  #L49afb6.  v2:= v2 * v6 @kind long;
  #L49afba.  v0:= v0 + v2 @kind long;
  #L49afbc.  v2:= v19[v10] @kind wide;
  #L49afc0.  v6:= v20[v13] @kind wide;
  #L49afc4.  v2:= v2 * v6 @kind long;
  #L49afc8.  v0:= v0 + v2 @kind long;
  #L49afca.  v2:= v19[v13] @kind wide;
  #L49afce.  v6:= v20[v10] @kind wide;
  #L49afd2.  v2:= v2 * v6 @kind long;
  #L49afd6.  v0:= v0 + v2 @kind long;
  #L49afd8.  v2:= v19[v9] @kind wide;
  #L49afdc.  v6:= v20[v14] @kind wide;
  #L49afe0.  v2:= v2 * v6 @kind long;
  #L49afe4.  v0:= v0 + v2 @kind long;
  #L49afe6.  v2:= v19[v14] @kind wide;
  #L49afea.  v6:= v20[v9] @kind wide;
  #L49afee.  v2:= v2 * v6 @kind long;
  #L49aff2.  v0:= v0 + v2 @kind long;
  #L49aff4.  v2:= v19[v8] @kind wide;
  #L49aff8.  v6:= v20[v15] @kind wide;
  #L49affc.  v2:= v2 * v6 @kind long;
  #L49b000.  v0:= v0 + v2 @kind long;
  #L49b002.  v2:= v19[v15] @kind wide;
  #L49b006.  v6:= v20[v8] @kind wide;
  #L49b00a.  v2:= v2 * v6 @kind long;
  #L49b00e.  v0:= v0 + v2 @kind long;
  #L49b010.  v2:= 11I;
  #L49b014.  v18[v2]:= v0 @kind wide;
  #L49b018.  v0:= v19[v12] @kind wide;
  #L49b01c.  v2:= v20[v12] @kind wide;
  #L49b020.  v0:= v0 * v2 @kind long;
  #L49b024.  v2:= v19[v11] @kind wide;
  #L49b028.  v6:= v20[v13] @kind wide;
  #L49b02c.  v2:= v2 * v6 @kind long;
  #L49b030.  v6:= v19[v13] @kind wide;
  #L49b034.  v16:= v20[v11] @kind wide;
  #L49b038.  v6:= v6 * v16 @kind long;
  #L49b03c.  v2:= v2 + v6 @kind long;
  #L49b03e.  v6:= v19[v9] @kind wide;
  #L49b042.  v16:= v20[v15] @kind wide;
  #L49b046.  v6:= v6 * v16 @kind long;
  #L49b04a.  v2:= v2 + v6 @kind long;
  #L49b04c.  v6:= v19[v15] @kind wide;
  #L49b050.  v8:= v20[v9] @kind wide;
  #L49b054.  v6:= v6 * v8 @kind long;
  #L49b058.  v2:= v2 + v6 @kind long;
  #L49b05a.  v2:= v2 * v4 @kind long;
  #L49b05e.  v0:= v0 + v2 @kind long;
  #L49b060.  v2:= v19[v10] @kind wide;
  #L49b064.  v6:= v20[v14] @kind wide;
  #L49b068.  v2:= v2 * v6 @kind long;
  #L49b06c.  v0:= v0 + v2 @kind long;
  #L49b06e.  v2:= v19[v14] @kind wide;
  #L49b072.  v6:= v20[v10] @kind wide;
  #L49b076.  v2:= v2 * v6 @kind long;
  #L49b07a.  v0:= v0 + v2 @kind long;
  #L49b07c.  v2:= 12I;
  #L49b080.  v18[v2]:= v0 @kind wide;
  #L49b084.  v0:= v19[v12] @kind wide;
  #L49b088.  v2:= v20[v13] @kind wide;
  #L49b08c.  v0:= v0 * v2 @kind long;
  #L49b090.  v2:= v19[v13] @kind wide;
  #L49b094.  v6:= v20[v12] @kind wide;
  #L49b098.  v2:= v2 * v6 @kind long;
  #L49b09c.  v0:= v0 + v2 @kind long;
  #L49b09e.  v2:= v19[v11] @kind wide;
  #L49b0a2.  v6:= v20[v14] @kind wide;
  #L49b0a6.  v2:= v2 * v6 @kind long;
  #L49b0aa.  v0:= v0 + v2 @kind long;
  #L49b0ac.  v2:= v19[v14] @kind wide;
  #L49b0b0.  v6:= v20[v11] @kind wide;
  #L49b0b4.  v2:= v2 * v6 @kind long;
  #L49b0b8.  v0:= v0 + v2 @kind long;
  #L49b0ba.  v2:= v19[v10] @kind wide;
  #L49b0be.  v6:= v20[v15] @kind wide;
  #L49b0c2.  v2:= v2 * v6 @kind long;
  #L49b0c6.  v0:= v0 + v2 @kind long;
  #L49b0c8.  v2:= v19[v15] @kind wide;
  #L49b0cc.  v6:= v20[v10] @kind wide;
  #L49b0d0.  v2:= v2 * v6 @kind long;
  #L49b0d4.  v0:= v0 + v2 @kind long;
  #L49b0d6.  v2:= 13I;
  #L49b0da.  v18[v2]:= v0 @kind wide;
  #L49b0de.  v0:= v19[v13] @kind wide;
  #L49b0e2.  v2:= v20[v13] @kind wide;
  #L49b0e6.  v0:= v0 * v2 @kind long;
  #L49b0ea.  v2:= v19[v11] @kind wide;
  #L49b0ee.  v6:= v20[v15] @kind wide;
  #L49b0f2.  v2:= v2 * v6 @kind long;
  #L49b0f6.  v0:= v0 + v2 @kind long;
  #L49b0f8.  v2:= v19[v15] @kind wide;
  #L49b0fc.  v6:= v20[v11] @kind wide;
  #L49b100.  v2:= v2 * v6 @kind long;
  #L49b104.  v0:= v0 + v2 @kind long;
  #L49b106.  v0:= v0 * v4 @kind long;
  #L49b10a.  v2:= v19[v12] @kind wide;
  #L49b10e.  v6:= v20[v14] @kind wide;
  #L49b112.  v2:= v2 * v6 @kind long;
  #L49b116.  v0:= v0 + v2 @kind long;
  #L49b118.  v2:= v19[v14] @kind wide;
  #L49b11c.  v6:= v20[v12] @kind wide;
  #L49b120.  v2:= v2 * v6 @kind long;
  #L49b124.  v0:= v0 + v2 @kind long;
  #L49b126.  v2:= 14I;
  #L49b12a.  v18[v2]:= v0 @kind wide;
  #L49b12e.  v0:= v19[v13] @kind wide;
  #L49b132.  v2:= v20[v14] @kind wide;
  #L49b136.  v0:= v0 * v2 @kind long;
  #L49b13a.  v2:= v19[v14] @kind wide;
  #L49b13e.  v6:= v20[v13] @kind wide;
  #L49b142.  v2:= v2 * v6 @kind long;
  #L49b146.  v0:= v0 + v2 @kind long;
  #L49b148.  v2:= v19[v12] @kind wide;
  #L49b14c.  v6:= v20[v15] @kind wide;
  #L49b150.  v2:= v2 * v6 @kind long;
  #L49b154.  v0:= v0 + v2 @kind long;
  #L49b156.  v2:= v19[v15] @kind wide;
  #L49b15a.  v6:= v20[v12] @kind wide;
  #L49b15e.  v2:= v2 * v6 @kind long;
  #L49b162.  v0:= v0 + v2 @kind long;
  #L49b164.  v2:= 15I;
  #L49b168.  v18[v2]:= v0 @kind wide;
  #L49b16c.  v0:= v19[v14] @kind wide;
  #L49b170.  v2:= v20[v14] @kind wide;
  #L49b174.  v0:= v0 * v2 @kind long;
  #L49b178.  v2:= v19[v13] @kind wide;
  #L49b17c.  v6:= v20[v15] @kind wide;
  #L49b180.  v2:= v2 * v6 @kind long;
  #L49b184.  v6:= v19[v15] @kind wide;
  #L49b188.  v8:= v20[v13] @kind wide;
  #L49b18c.  v6:= v6 * v8 @kind long;
  #L49b190.  v2:= v2 + v6 @kind long;
  #L49b192.  v2:= v2 * v4 @kind long;
  #L49b196.  v0:= v0 + v2 @kind long;
  #L49b198.  v2:= 16I;
  #L49b19c.  v18[v2]:= v0 @kind wide;
  #L49b1a0.  v0:= v19[v14] @kind wide;
  #L49b1a4.  v2:= v20[v15] @kind wide;
  #L49b1a8.  v0:= v0 * v2 @kind long;
  #L49b1ac.  v2:= v19[v15] @kind wide;
  #L49b1b0.  v6:= v20[v14] @kind wide;
  #L49b1b4.  v2:= v2 * v6 @kind long;
  #L49b1b8.  v0:= v0 + v2 @kind long;
  #L49b1ba.  v2:= 17I;
  #L49b1be.  v18[v2]:= v0 @kind wide;
  #L49b1c2.  v0:= v19[v15] @kind wide;
  #L49b1c6.  v0:= v0 * v4 @kind long;
  #L49b1ca.  v2:= v20[v15] @kind wide;
  #L49b1ce.  v0:= v0 * v2 @kind long;
  #L49b1d2.  v2:= 18I;
  #L49b1d6.  v18[v2]:= v0 @kind wide;
  #L49b1da.  return @kind void;
}
procedure `void` `h`(`long`[] v3 @kind object, `long`[] v4 @kind object) @signature `Lcom/google/crypto/tink/subtle/h;.h:([J[J)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49b1ec.  v0:= length @variable v3;
  #L49b1ee.  v1:= 19I;
  #L49b1f2.  v2:= 0I;
  #L49b1f4.  if v0 != v1 then goto L49b1fa;
  #L49b1f8.  goto L49b208;
  #L49b1fa.  v0:= new `long`[v1];
  #L49b1fe.  v1:= length @variable v3;
  #L49b200.  call `arraycopy`(v3, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L49b206.  v3:= v0 @kind object;
  #L49b208.  call `j`(v3) @signature `Lcom/google/crypto/tink/subtle/h;.j:([J)V` @kind static;
  #L49b20e.  call `i`(v3) @signature `Lcom/google/crypto/tink/subtle/h;.i:([J)V` @kind static;
  #L49b214.  v0:= 10I;
  #L49b218.  call `arraycopy`(v3, v2, v4, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L49b21e.  return @kind void;
}
procedure `void` `i`(`long`[] v12 @kind object) @signature `Lcom/google/crypto/tink/subtle/h;.i:([J)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L49b230.  v0:= 10I;
  #L49b234.  v1:= 0L;
  #L49b238.  v12[v0]:= v1 @kind wide;
  #L49b23c.  v3:= 0I;
  #L49b23e.  v4:= 0I;
  #L49b240.  v5:= 26I;
  #L49b244.  v6:= 67108864L;
  #L49b24a.  if v4 >= v0 then goto L49b29e;
  #L49b24e.  v8:= v12[v4] @kind wide;
  #L49b252.  v8:= v8 / v6 @kind long;
  #L49b254.  v6:= v12[v4] @kind wide;
  #L49b258.  v10:= v8 ^< v5 @kind long;
  #L49b25c.  v6:= v6 - v10 @kind long;
  #L49b25e.  v12[v4]:= v6 @kind wide;
  #L49b262.  v5:= v4 + 1;
  #L49b266.  v6:= v12[v5] @kind wide;
  #L49b26a.  v6:= v6 + v8 @kind long;
  #L49b26c.  v12[v5]:= v6 @kind wide;
  #L49b270.  v6:= v12[v5] @kind wide;
  #L49b274.  v8:= 33554432L;
  #L49b27a.  v6:= v6 / v8 @kind long;
  #L49b27c.  v8:= v12[v5] @kind wide;
  #L49b280.  v10:= 25I;
  #L49b284.  v10:= v6 ^< v10 @kind long;
  #L49b288.  v8:= v8 - v10 @kind long;
  #L49b28a.  v12[v5]:= v8 @kind wide;
  #L49b28e.  v4:= v4 + 2;
  #L49b292.  v8:= v12[v4] @kind wide;
  #L49b296.  v8:= v8 + v6 @kind long;
  #L49b298.  v12[v4]:= v8 @kind wide;
  #L49b29c.  goto L49b240;
  #L49b29e.  v8:= v12[v3] @kind wide;
  #L49b2a2.  v10:= v12[v0] @kind wide;
  #L49b2a6.  v4:= 4I;
  #L49b2a8.  v10:= v10 ^< v4 @kind long;
  #L49b2aa.  v8:= v8 + v10 @kind long;
  #L49b2ac.  v12[v3]:= v8 @kind wide;
  #L49b2b0.  v8:= v12[v3] @kind wide;
  #L49b2b4.  v10:= v12[v0] @kind wide;
  #L49b2b8.  v4:= 1I;
  #L49b2ba.  v10:= v10 ^< v4 @kind long;
  #L49b2bc.  v8:= v8 + v10 @kind long;
  #L49b2be.  v12[v3]:= v8 @kind wide;
  #L49b2c2.  v8:= v12[v3] @kind wide;
  #L49b2c6.  v10:= v12[v0] @kind wide;
  #L49b2ca.  v8:= v8 + v10 @kind long;
  #L49b2cc.  v12[v3]:= v8 @kind wide;
  #L49b2d0.  v12[v0]:= v1 @kind wide;
  #L49b2d4.  v0:= v12[v3] @kind wide;
  #L49b2d8.  v0:= v0 / v6 @kind long;
  #L49b2da.  v6:= v12[v3] @kind wide;
  #L49b2de.  v8:= v0 ^< v5 @kind long;
  #L49b2e2.  v6:= v6 - v8 @kind long;
  #L49b2e4.  v12[v3]:= v6 @kind wide;
  #L49b2e8.  v2:= v12[v4] @kind wide;
  #L49b2ec.  v2:= v2 + v0 @kind long;
  #L49b2ee.  v12[v4]:= v2 @kind wide;
  #L49b2f2.  return @kind void;
}
procedure `void` `j`(`long`[] v8 @kind object) @signature `Lcom/google/crypto/tink/subtle/h;.j:([J)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49b304.  v0:= 8I;
  #L49b308.  v1:= v8[v0] @kind wide;
  #L49b30c.  v3:= 18I;
  #L49b310.  v4:= v8[v3] @kind wide;
  #L49b314.  v6:= 4I;
  #L49b316.  v4:= v4 ^< v6 @kind long;
  #L49b318.  v1:= v1 + v4 @kind long;
  #L49b31a.  v8[v0]:= v1 @kind wide;
  #L49b31e.  v1:= v8[v0] @kind wide;
  #L49b322.  v4:= v8[v3] @kind wide;
  #L49b326.  v7:= 1I;
  #L49b328.  v4:= v4 ^< v7 @kind long;
  #L49b32a.  v1:= v1 + v4 @kind long;
  #L49b32c.  v8[v0]:= v1 @kind wide;
  #L49b330.  v1:= v8[v0] @kind wide;
  #L49b334.  v3:= v8[v3] @kind wide;
  #L49b338.  v1:= v1 + v3 @kind long;
  #L49b33a.  v8[v0]:= v1 @kind wide;
  #L49b33e.  v0:= 7I;
  #L49b340.  v1:= v8[v0] @kind wide;
  #L49b344.  v3:= 17I;
  #L49b348.  v4:= v8[v3] @kind wide;
  #L49b34c.  v4:= v4 ^< v6 @kind long;
  #L49b34e.  v1:= v1 + v4 @kind long;
  #L49b350.  v8[v0]:= v1 @kind wide;
  #L49b354.  v1:= v8[v0] @kind wide;
  #L49b358.  v4:= v8[v3] @kind wide;
  #L49b35c.  v4:= v4 ^< v7 @kind long;
  #L49b35e.  v1:= v1 + v4 @kind long;
  #L49b360.  v8[v0]:= v1 @kind wide;
  #L49b364.  v1:= v8[v0] @kind wide;
  #L49b368.  v3:= v8[v3] @kind wide;
  #L49b36c.  v1:= v1 + v3 @kind long;
  #L49b36e.  v8[v0]:= v1 @kind wide;
  #L49b372.  v0:= 6I;
  #L49b374.  v1:= v8[v0] @kind wide;
  #L49b378.  v3:= 16I;
  #L49b37c.  v4:= v8[v3] @kind wide;
  #L49b380.  v4:= v4 ^< v6 @kind long;
  #L49b382.  v1:= v1 + v4 @kind long;
  #L49b384.  v8[v0]:= v1 @kind wide;
  #L49b388.  v1:= v8[v0] @kind wide;
  #L49b38c.  v4:= v8[v3] @kind wide;
  #L49b390.  v4:= v4 ^< v7 @kind long;
  #L49b392.  v1:= v1 + v4 @kind long;
  #L49b394.  v8[v0]:= v1 @kind wide;
  #L49b398.  v1:= v8[v0] @kind wide;
  #L49b39c.  v3:= v8[v3] @kind wide;
  #L49b3a0.  v1:= v1 + v3 @kind long;
  #L49b3a2.  v8[v0]:= v1 @kind wide;
  #L49b3a6.  v0:= 5I;
  #L49b3a8.  v1:= v8[v0] @kind wide;
  #L49b3ac.  v3:= 15I;
  #L49b3b0.  v4:= v8[v3] @kind wide;
  #L49b3b4.  v4:= v4 ^< v6 @kind long;
  #L49b3b6.  v1:= v1 + v4 @kind long;
  #L49b3b8.  v8[v0]:= v1 @kind wide;
  #L49b3bc.  v1:= v8[v0] @kind wide;
  #L49b3c0.  v4:= v8[v3] @kind wide;
  #L49b3c4.  v4:= v4 ^< v7 @kind long;
  #L49b3c6.  v1:= v1 + v4 @kind long;
  #L49b3c8.  v8[v0]:= v1 @kind wide;
  #L49b3cc.  v1:= v8[v0] @kind wide;
  #L49b3d0.  v3:= v8[v3] @kind wide;
  #L49b3d4.  v1:= v1 + v3 @kind long;
  #L49b3d6.  v8[v0]:= v1 @kind wide;
  #L49b3da.  v0:= v8[v6] @kind wide;
  #L49b3de.  v2:= 14I;
  #L49b3e2.  v3:= v8[v2] @kind wide;
  #L49b3e6.  v3:= v3 ^< v6 @kind long;
  #L49b3e8.  v0:= v0 + v3 @kind long;
  #L49b3ea.  v8[v6]:= v0 @kind wide;
  #L49b3ee.  v0:= v8[v6] @kind wide;
  #L49b3f2.  v3:= v8[v2] @kind wide;
  #L49b3f6.  v3:= v3 ^< v7 @kind long;
  #L49b3f8.  v0:= v0 + v3 @kind long;
  #L49b3fa.  v8[v6]:= v0 @kind wide;
  #L49b3fe.  v0:= v8[v6] @kind wide;
  #L49b402.  v2:= v8[v2] @kind wide;
  #L49b406.  v0:= v0 + v2 @kind long;
  #L49b408.  v8[v6]:= v0 @kind wide;
  #L49b40c.  v0:= 3I;
  #L49b40e.  v1:= v8[v0] @kind wide;
  #L49b412.  v3:= 13I;
  #L49b416.  v4:= v8[v3] @kind wide;
  #L49b41a.  v4:= v4 ^< v6 @kind long;
  #L49b41c.  v1:= v1 + v4 @kind long;
  #L49b41e.  v8[v0]:= v1 @kind wide;
  #L49b422.  v1:= v8[v0] @kind wide;
  #L49b426.  v4:= v8[v3] @kind wide;
  #L49b42a.  v4:= v4 ^< v7 @kind long;
  #L49b42c.  v1:= v1 + v4 @kind long;
  #L49b42e.  v8[v0]:= v1 @kind wide;
  #L49b432.  v1:= v8[v0] @kind wide;
  #L49b436.  v3:= v8[v3] @kind wide;
  #L49b43a.  v1:= v1 + v3 @kind long;
  #L49b43c.  v8[v0]:= v1 @kind wide;
  #L49b440.  v0:= 2I;
  #L49b442.  v1:= v8[v0] @kind wide;
  #L49b446.  v3:= 12I;
  #L49b44a.  v4:= v8[v3] @kind wide;
  #L49b44e.  v4:= v4 ^< v6 @kind long;
  #L49b450.  v1:= v1 + v4 @kind long;
  #L49b452.  v8[v0]:= v1 @kind wide;
  #L49b456.  v1:= v8[v0] @kind wide;
  #L49b45a.  v4:= v8[v3] @kind wide;
  #L49b45e.  v4:= v4 ^< v7 @kind long;
  #L49b460.  v1:= v1 + v4 @kind long;
  #L49b462.  v8[v0]:= v1 @kind wide;
  #L49b466.  v1:= v8[v0] @kind wide;
  #L49b46a.  v3:= v8[v3] @kind wide;
  #L49b46e.  v1:= v1 + v3 @kind long;
  #L49b470.  v8[v0]:= v1 @kind wide;
  #L49b474.  v0:= v8[v7] @kind wide;
  #L49b478.  v2:= 11I;
  #L49b47c.  v3:= v8[v2] @kind wide;
  #L49b480.  v3:= v3 ^< v6 @kind long;
  #L49b482.  v0:= v0 + v3 @kind long;
  #L49b484.  v8[v7]:= v0 @kind wide;
  #L49b488.  v0:= v8[v7] @kind wide;
  #L49b48c.  v3:= v8[v2] @kind wide;
  #L49b490.  v3:= v3 ^< v7 @kind long;
  #L49b492.  v0:= v0 + v3 @kind long;
  #L49b494.  v8[v7]:= v0 @kind wide;
  #L49b498.  v0:= v8[v7] @kind wide;
  #L49b49c.  v2:= v8[v2] @kind wide;
  #L49b4a0.  v0:= v0 + v2 @kind long;
  #L49b4a2.  v8[v7]:= v0 @kind wide;
  #L49b4a6.  v0:= 0I;
  #L49b4a8.  v1:= v8[v0] @kind wide;
  #L49b4ac.  v3:= 10I;
  #L49b4b0.  v4:= v8[v3] @kind wide;
  #L49b4b4.  v4:= v4 ^< v6 @kind long;
  #L49b4b6.  v1:= v1 + v4 @kind long;
  #L49b4b8.  v8[v0]:= v1 @kind wide;
  #L49b4bc.  v1:= v8[v0] @kind wide;
  #L49b4c0.  v4:= v8[v3] @kind wide;
  #L49b4c4.  v4:= v4 ^< v7 @kind long;
  #L49b4c6.  v1:= v1 + v4 @kind long;
  #L49b4c8.  v8[v0]:= v1 @kind wide;
  #L49b4cc.  v1:= v8[v0] @kind wide;
  #L49b4d0.  v3:= v8[v3] @kind wide;
  #L49b4d4.  v1:= v1 + v3 @kind long;
  #L49b4d6.  v8[v0]:= v1 @kind wide;
  #L49b4da.  return @kind void;
}
procedure `void` `k`(`long`[] v3 @kind object, `long`[] v4 @kind object, `long` v5 ) @signature `Lcom/google/crypto/tink/subtle/h;.k:([J[JJ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49b4ec.  v0:= 0I;
  #L49b4ee.  v1:= 10I;
  #L49b4f2.  if v0 >= v1 then goto L49b508;
  #L49b4f6.  v1:= v4[v0] @kind wide;
  #L49b4fa.  v1:= v1 * v5 @kind long;
  #L49b4fe.  v3[v0]:= v1 @kind wide;
  #L49b502.  v0:= v0 + 1;
  #L49b506.  goto L49b4ee;
  #L49b508.  return @kind void;
}
procedure `void` `l`(`long`[] v1 @kind object, `long`[] v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/h;.l:([J[J)V` @AccessFlag STATIC {
    temp;
    v0;

  #L49b51c.  v0:= 19I;
  #L49b520.  v0:= new `long`[v0];
  #L49b524.  call `m`(v0, v2) @signature `Lcom/google/crypto/tink/subtle/h;.m:([J[J)V` @kind static;
  #L49b52a.  call `h`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/h;.h:([J[J)V` @kind static;
  #L49b530.  return @kind void;
}
procedure `void` `m`(`long`[] v23 @kind object, `long`[] v24 @kind object) @signature `Lcom/google/crypto/tink/subtle/h;.m:([J[J)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L49b544.  v0:= 0I;
  #L49b546.  v1:= v24[v0] @kind wide;
  #L49b54a.  v3:= v24[v0] @kind wide;
  #L49b54e.  v1:= v1 * v3 @kind long;
  #L49b552.  v23[v0]:= v1 @kind wide;
  #L49b556.  v1:= v24[v0] @kind wide;
  #L49b55a.  v3:= 2L;
  #L49b55e.  v1:= v1 * v3 @kind long;
  #L49b562.  v5:= 1I;
  #L49b564.  v6:= v24[v5] @kind wide;
  #L49b568.  v1:= v1 * v6 @kind long;
  #L49b56c.  v23[v5]:= v1 @kind wide;
  #L49b570.  v1:= v24[v5] @kind wide;
  #L49b574.  v6:= v24[v5] @kind wide;
  #L49b578.  v1:= v1 * v6 @kind long;
  #L49b57c.  v6:= v24[v0] @kind wide;
  #L49b580.  v8:= 2I;
  #L49b582.  v9:= v24[v8] @kind wide;
  #L49b586.  v6:= v6 * v9 @kind long;
  #L49b58a.  v1:= v1 + v6 @kind long;
  #L49b58c.  v1:= v1 * v3 @kind long;
  #L49b590.  v23[v8]:= v1 @kind wide;
  #L49b594.  v1:= v24[v5] @kind wide;
  #L49b598.  v6:= v24[v8] @kind wide;
  #L49b59c.  v1:= v1 * v6 @kind long;
  #L49b5a0.  v6:= v24[v0] @kind wide;
  #L49b5a4.  v9:= 3I;
  #L49b5a6.  v10:= v24[v9] @kind wide;
  #L49b5aa.  v6:= v6 * v10 @kind long;
  #L49b5ae.  v1:= v1 + v6 @kind long;
  #L49b5b0.  v1:= v1 * v3 @kind long;
  #L49b5b4.  v23[v9]:= v1 @kind wide;
  #L49b5b8.  v1:= v24[v8] @kind wide;
  #L49b5bc.  v6:= v24[v8] @kind wide;
  #L49b5c0.  v1:= v1 * v6 @kind long;
  #L49b5c4.  v6:= v24[v5] @kind wide;
  #L49b5c8.  v10:= 4L;
  #L49b5cc.  v6:= v6 * v10 @kind long;
  #L49b5d0.  v12:= v24[v9] @kind wide;
  #L49b5d4.  v6:= v6 * v12 @kind long;
  #L49b5d8.  v1:= v1 + v6 @kind long;
  #L49b5da.  v6:= v24[v0] @kind wide;
  #L49b5de.  v6:= v6 * v3 @kind long;
  #L49b5e2.  v12:= 4I;
  #L49b5e4.  v13:= v24[v12] @kind wide;
  #L49b5e8.  v6:= v6 * v13 @kind long;
  #L49b5ec.  v1:= v1 + v6 @kind long;
  #L49b5ee.  v23[v12]:= v1 @kind wide;
  #L49b5f2.  v1:= v24[v8] @kind wide;
  #L49b5f6.  v6:= v24[v9] @kind wide;
  #L49b5fa.  v1:= v1 * v6 @kind long;
  #L49b5fe.  v6:= v24[v5] @kind wide;
  #L49b602.  v13:= v24[v12] @kind wide;
  #L49b606.  v6:= v6 * v13 @kind long;
  #L49b60a.  v1:= v1 + v6 @kind long;
  #L49b60c.  v6:= v24[v0] @kind wide;
  #L49b610.  v13:= 5I;
  #L49b612.  v14:= v24[v13] @kind wide;
  #L49b616.  v6:= v6 * v14 @kind long;
  #L49b61a.  v1:= v1 + v6 @kind long;
  #L49b61c.  v1:= v1 * v3 @kind long;
  #L49b620.  v23[v13]:= v1 @kind wide;
  #L49b624.  v1:= v24[v9] @kind wide;
  #L49b628.  v6:= v24[v9] @kind wide;
  #L49b62c.  v1:= v1 * v6 @kind long;
  #L49b630.  v6:= v24[v8] @kind wide;
  #L49b634.  v14:= v24[v12] @kind wide;
  #L49b638.  v6:= v6 * v14 @kind long;
  #L49b63c.  v1:= v1 + v6 @kind long;
  #L49b63e.  v6:= v24[v0] @kind wide;
  #L49b642.  v14:= 6I;
  #L49b644.  v15:= v24[v14] @kind wide;
  #L49b648.  v6:= v6 * v15 @kind long;
  #L49b64c.  v1:= v1 + v6 @kind long;
  #L49b64e.  v6:= v24[v5] @kind wide;
  #L49b652.  v6:= v6 * v3 @kind long;
  #L49b656.  v15:= v24[v13] @kind wide;
  #L49b65a.  v6:= v6 * v15 @kind long;
  #L49b65e.  v1:= v1 + v6 @kind long;
  #L49b660.  v1:= v1 * v3 @kind long;
  #L49b664.  v23[v14]:= v1 @kind wide;
  #L49b668.  v1:= v24[v9] @kind wide;
  #L49b66c.  v6:= v24[v12] @kind wide;
  #L49b670.  v1:= v1 * v6 @kind long;
  #L49b674.  v6:= v24[v8] @kind wide;
  #L49b678.  v15:= v24[v13] @kind wide;
  #L49b67c.  v6:= v6 * v15 @kind long;
  #L49b680.  v1:= v1 + v6 @kind long;
  #L49b682.  v6:= v24[v5] @kind wide;
  #L49b686.  v15:= v24[v14] @kind wide;
  #L49b68a.  v6:= v6 * v15 @kind long;
  #L49b68e.  v1:= v1 + v6 @kind long;
  #L49b690.  v6:= v24[v0] @kind wide;
  #L49b694.  v15:= 7I;
  #L49b696.  v16:= v24[v15] @kind wide;
  #L49b69a.  v6:= v6 * v16 @kind long;
  #L49b69e.  v1:= v1 + v6 @kind long;
  #L49b6a0.  v1:= v1 * v3 @kind long;
  #L49b6a4.  v23[v15]:= v1 @kind wide;
  #L49b6a8.  v1:= v24[v12] @kind wide;
  #L49b6ac.  v6:= v24[v12] @kind wide;
  #L49b6b0.  v1:= v1 * v6 @kind long;
  #L49b6b4.  v6:= v24[v8] @kind wide;
  #L49b6b8.  v16:= v24[v14] @kind wide;
  #L49b6bc.  v6:= v6 * v16 @kind long;
  #L49b6c0.  v16:= v24[v0] @kind wide;
  #L49b6c4.  v18:= 8I;
  #L49b6c8.  v19:= v24[v18] @kind wide;
  #L49b6cc.  v16:= v16 * v19 @kind long;
  #L49b6d0.  v6:= v6 + v16 @kind long;
  #L49b6d4.  v16:= v24[v5] @kind wide;
  #L49b6d8.  v19:= v24[v15] @kind wide;
  #L49b6dc.  v16:= v16 * v19 @kind long;
  #L49b6e0.  v19:= v24[v9] @kind wide;
  #L49b6e4.  v21:= v24[v13] @kind wide;
  #L49b6e8.  v19:= v19 * v21 @kind long;
  #L49b6ec.  v16:= v16 + v19 @kind long;
  #L49b6f0.  v16:= v16 * v3 @kind long;
  #L49b6f4.  v6:= v6 + v16 @kind long;
  #L49b6f8.  v6:= v6 * v3 @kind long;
  #L49b6fc.  v1:= v1 + v6 @kind long;
  #L49b6fe.  v23[v18]:= v1 @kind wide;
  #L49b702.  v1:= v24[v12] @kind wide;
  #L49b706.  v6:= v24[v13] @kind wide;
  #L49b70a.  v1:= v1 * v6 @kind long;
  #L49b70e.  v6:= v24[v9] @kind wide;
  #L49b712.  v16:= v24[v14] @kind wide;
  #L49b716.  v6:= v6 * v16 @kind long;
  #L49b71a.  v1:= v1 + v6 @kind long;
  #L49b71c.  v6:= v24[v8] @kind wide;
  #L49b720.  v16:= v24[v15] @kind wide;
  #L49b724.  v6:= v6 * v16 @kind long;
  #L49b728.  v1:= v1 + v6 @kind long;
  #L49b72a.  v6:= v24[v5] @kind wide;
  #L49b72e.  v16:= v24[v18] @kind wide;
  #L49b732.  v6:= v6 * v16 @kind long;
  #L49b736.  v1:= v1 + v6 @kind long;
  #L49b738.  v6:= v24[v0] @kind wide;
  #L49b73c.  v0:= 9I;
  #L49b740.  v16:= v24[v0] @kind wide;
  #L49b744.  v6:= v6 * v16 @kind long;
  #L49b748.  v1:= v1 + v6 @kind long;
  #L49b74a.  v1:= v1 * v3 @kind long;
  #L49b74e.  v23[v0]:= v1 @kind wide;
  #L49b752.  v1:= v24[v13] @kind wide;
  #L49b756.  v6:= v24[v13] @kind wide;
  #L49b75a.  v1:= v1 * v6 @kind long;
  #L49b75e.  v6:= v24[v12] @kind wide;
  #L49b762.  v16:= v24[v14] @kind wide;
  #L49b766.  v6:= v6 * v16 @kind long;
  #L49b76a.  v1:= v1 + v6 @kind long;
  #L49b76c.  v6:= v24[v8] @kind wide;
  #L49b770.  v16:= v24[v18] @kind wide;
  #L49b774.  v6:= v6 * v16 @kind long;
  #L49b778.  v1:= v1 + v6 @kind long;
  #L49b77a.  v6:= v24[v9] @kind wide;
  #L49b77e.  v16:= v24[v15] @kind wide;
  #L49b782.  v6:= v6 * v16 @kind long;
  #L49b786.  v16:= v24[v5] @kind wide;
  #L49b78a.  v19:= v24[v0] @kind wide;
  #L49b78e.  v16:= v16 * v19 @kind long;
  #L49b792.  v6:= v6 + v16 @kind long;
  #L49b796.  v6:= v6 * v3 @kind long;
  #L49b79a.  v1:= v1 + v6 @kind long;
  #L49b79c.  v1:= v1 * v3 @kind long;
  #L49b7a0.  v5:= 10I;
  #L49b7a4.  v23[v5]:= v1 @kind wide;
  #L49b7a8.  v1:= v24[v13] @kind wide;
  #L49b7ac.  v5:= v24[v14] @kind wide;
  #L49b7b0.  v1:= v1 * v5 @kind long;
  #L49b7b4.  v5:= v24[v12] @kind wide;
  #L49b7b8.  v16:= v24[v15] @kind wide;
  #L49b7bc.  v5:= v5 * v16 @kind long;
  #L49b7c0.  v1:= v1 + v5 @kind long;
  #L49b7c2.  v5:= v24[v9] @kind wide;
  #L49b7c6.  v16:= v24[v18] @kind wide;
  #L49b7ca.  v5:= v5 * v16 @kind long;
  #L49b7ce.  v1:= v1 + v5 @kind long;
  #L49b7d0.  v5:= v24[v8] @kind wide;
  #L49b7d4.  v7:= v24[v0] @kind wide;
  #L49b7d8.  v5:= v5 * v7 @kind long;
  #L49b7dc.  v1:= v1 + v5 @kind long;
  #L49b7de.  v1:= v1 * v3 @kind long;
  #L49b7e2.  v5:= 11I;
  #L49b7e6.  v23[v5]:= v1 @kind wide;
  #L49b7ea.  v1:= v24[v14] @kind wide;
  #L49b7ee.  v5:= v24[v14] @kind wide;
  #L49b7f2.  v1:= v1 * v5 @kind long;
  #L49b7f6.  v5:= v24[v12] @kind wide;
  #L49b7fa.  v7:= v24[v18] @kind wide;
  #L49b7fe.  v5:= v5 * v7 @kind long;
  #L49b802.  v7:= v24[v13] @kind wide;
  #L49b806.  v16:= v24[v15] @kind wide;
  #L49b80a.  v7:= v7 * v16 @kind long;
  #L49b80e.  v16:= v24[v9] @kind wide;
  #L49b812.  v19:= v24[v0] @kind wide;
  #L49b816.  v16:= v16 * v19 @kind long;
  #L49b81a.  v7:= v7 + v16 @kind long;
  #L49b81e.  v7:= v7 * v3 @kind long;
  #L49b822.  v5:= v5 + v7 @kind long;
  #L49b824.  v5:= v5 * v3 @kind long;
  #L49b828.  v1:= v1 + v5 @kind long;
  #L49b82a.  v5:= 12I;
  #L49b82e.  v23[v5]:= v1 @kind wide;
  #L49b832.  v1:= v24[v14] @kind wide;
  #L49b836.  v5:= v24[v15] @kind wide;
  #L49b83a.  v1:= v1 * v5 @kind long;
  #L49b83e.  v5:= v24[v13] @kind wide;
  #L49b842.  v7:= v24[v18] @kind wide;
  #L49b846.  v5:= v5 * v7 @kind long;
  #L49b84a.  v1:= v1 + v5 @kind long;
  #L49b84c.  v5:= v24[v12] @kind wide;
  #L49b850.  v7:= v24[v0] @kind wide;
  #L49b854.  v5:= v5 * v7 @kind long;
  #L49b858.  v1:= v1 + v5 @kind long;
  #L49b85a.  v1:= v1 * v3 @kind long;
  #L49b85e.  v5:= 13I;
  #L49b862.  v23[v5]:= v1 @kind wide;
  #L49b866.  v1:= v24[v15] @kind wide;
  #L49b86a.  v5:= v24[v15] @kind wide;
  #L49b86e.  v1:= v1 * v5 @kind long;
  #L49b872.  v5:= v24[v14] @kind wide;
  #L49b876.  v7:= v24[v18] @kind wide;
  #L49b87a.  v5:= v5 * v7 @kind long;
  #L49b87e.  v1:= v1 + v5 @kind long;
  #L49b880.  v5:= v24[v13] @kind wide;
  #L49b884.  v5:= v5 * v3 @kind long;
  #L49b888.  v7:= v24[v0] @kind wide;
  #L49b88c.  v5:= v5 * v7 @kind long;
  #L49b890.  v1:= v1 + v5 @kind long;
  #L49b892.  v1:= v1 * v3 @kind long;
  #L49b896.  v5:= 14I;
  #L49b89a.  v23[v5]:= v1 @kind wide;
  #L49b89e.  v1:= v24[v15] @kind wide;
  #L49b8a2.  v5:= v24[v18] @kind wide;
  #L49b8a6.  v1:= v1 * v5 @kind long;
  #L49b8aa.  v5:= v24[v14] @kind wide;
  #L49b8ae.  v7:= v24[v0] @kind wide;
  #L49b8b2.  v5:= v5 * v7 @kind long;
  #L49b8b6.  v1:= v1 + v5 @kind long;
  #L49b8b8.  v1:= v1 * v3 @kind long;
  #L49b8bc.  v5:= 15I;
  #L49b8c0.  v23[v5]:= v1 @kind wide;
  #L49b8c4.  v1:= v24[v18] @kind wide;
  #L49b8c8.  v5:= v24[v18] @kind wide;
  #L49b8cc.  v1:= v1 * v5 @kind long;
  #L49b8d0.  v5:= v24[v15] @kind wide;
  #L49b8d4.  v5:= v5 * v10 @kind long;
  #L49b8d8.  v7:= v24[v0] @kind wide;
  #L49b8dc.  v5:= v5 * v7 @kind long;
  #L49b8e0.  v1:= v1 + v5 @kind long;
  #L49b8e2.  v5:= 16I;
  #L49b8e6.  v23[v5]:= v1 @kind wide;
  #L49b8ea.  v1:= v24[v18] @kind wide;
  #L49b8ee.  v1:= v1 * v3 @kind long;
  #L49b8f2.  v5:= v24[v0] @kind wide;
  #L49b8f6.  v1:= v1 * v5 @kind long;
  #L49b8fa.  v5:= 17I;
  #L49b8fe.  v23[v5]:= v1 @kind wide;
  #L49b902.  v1:= v24[v0] @kind wide;
  #L49b906.  v1:= v1 * v3 @kind long;
  #L49b90a.  v3:= v24[v0] @kind wide;
  #L49b90e.  v1:= v1 * v3 @kind long;
  #L49b912.  v0:= 18I;
  #L49b916.  v23[v0]:= v1 @kind wide;
  #L49b91a.  return @kind void;
}
procedure `void` `n`(`long`[] v0 @kind object, `long`[] v1 @kind object) @signature `Lcom/google/crypto/tink/subtle/h;.n:([J[J)V` @AccessFlag STATIC {
    temp;

  #L49b92c.  call `o`(v0, v1, v0) @signature `Lcom/google/crypto/tink/subtle/h;.o:([J[J[J)V` @kind static;
  #L49b932.  return @kind void;
}
procedure `void` `o`(`long`[] v5 @kind object, `long`[] v6 @kind object, `long`[] v7 @kind object) @signature `Lcom/google/crypto/tink/subtle/h;.o:([J[J[J)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L49b944.  v0:= 0I;
  #L49b946.  v1:= 10I;
  #L49b94a.  if v0 >= v1 then goto L49b962;
  #L49b94e.  v1:= v6[v0] @kind wide;
  #L49b952.  v3:= v7[v0] @kind wide;
  #L49b956.  v1:= v1 - v3 @kind long;
  #L49b958.  v5[v0]:= v1 @kind wide;
  #L49b95c.  v0:= v0 + 1;
  #L49b960.  goto L49b946;
  #L49b962.  return @kind void;
}
procedure `void` `p`(`long`[] v0 @kind object, `long`[] v1 @kind object) @signature `Lcom/google/crypto/tink/subtle/h;.p:([J[J)V` @AccessFlag STATIC {
    temp;

  #L49b974.  call `q`(v0, v0, v1) @signature `Lcom/google/crypto/tink/subtle/h;.q:([J[J[J)V` @kind static;
  #L49b97a.  return @kind void;
}
procedure `void` `q`(`long`[] v5 @kind object, `long`[] v6 @kind object, `long`[] v7 @kind object) @signature `Lcom/google/crypto/tink/subtle/h;.q:([J[J[J)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L49b98c.  v0:= 0I;
  #L49b98e.  v1:= 10I;
  #L49b992.  if v0 >= v1 then goto L49b9aa;
  #L49b996.  v1:= v6[v0] @kind wide;
  #L49b99a.  v3:= v7[v0] @kind wide;
  #L49b99e.  v1:= v1 + v3 @kind long;
  #L49b9a0.  v5[v0]:= v1 @kind wide;
  #L49b9a4.  v0:= v0 + 1;
  #L49b9a8.  goto L49b98e;
  #L49b9aa.  return @kind void;
}
