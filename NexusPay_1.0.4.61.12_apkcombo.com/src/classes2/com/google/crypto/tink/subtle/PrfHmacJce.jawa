record `com.google.crypto.tink.subtle.PrfHmacJce` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.prf.Prf` @kind interface {
  `java.lang.ThreadLocal` `com.google.crypto.tink.subtle.PrfHmacJce.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.crypto.tink.subtle.PrfHmacJce.b` @AccessFlag PRIVATE_FINAL;
  `java.security.Key` `com.google.crypto.tink.subtle.PrfHmacJce.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.crypto.tink.subtle.PrfHmacJce.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.PrfHmacJce` v4 @kind this, `java.lang.String` v5 @kind object, `java.security.Key` v6 @kind object) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce;.<init>:(Ljava/lang/String;Ljava/security/Key;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L49cef4.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49cefa.  v0:= new `com.google.crypto.tink.subtle.PrfHmacJce$a`;
  #L49cefe.  call `<init>`(v0, v4) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce$a;.<init>:(Lcom/google/crypto/tink/subtle/PrfHmacJce;)V` @kind direct;
  #L49cf04.  v4.`com.google.crypto.tink.subtle.PrfHmacJce.a` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L49cf08.  v4.`com.google.crypto.tink.subtle.PrfHmacJce.b` @type ^`java.lang.String` := v5 @kind object;
  #L49cf0c.  v4.`com.google.crypto.tink.subtle.PrfHmacJce.c` @type ^`java.security.Key` := v6 @kind object;
  #L49cf10.  call temp:= `getEncoded`(v6) @signature `Ljava/security/Key;.getEncoded:()[B` @kind interface;
  #L49cf16.  v6:= temp @kind object;
  #L49cf18.  v6:= length @variable v6;
  #L49cf1a.  v0:= 16I;
  #L49cf1e.  if v6 < v0 then goto L49cff8;
  #L49cf22.  v6:= -1I;
  #L49cf24.  call temp:= `hashCode`(v5) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L49cf2a.  v0:= temp;
  #L49cf2c.  v1:= 3I;
  #L49cf2e.  v2:= 2I;
  #L49cf30.  v3:= 1I;
  #L49cf32.  goto L49d008;
  #L49cf38.  goto L49cf88;
  #L49cf3a.  v0:= "HMACSHA512" @kind object;
  #L49cf3e.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L49cf44.  v0:= temp;
  #L49cf46.  if v0 == 0 then goto L49cf88;
  #L49cf4a.  v6:= 3I;
  #L49cf4c.  goto L49cf88;
  #L49cf4e.  v0:= "HMACSHA384" @kind object;
  #L49cf52.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L49cf58.  v0:= temp;
  #L49cf5a.  if v0 == 0 then goto L49cf88;
  #L49cf5e.  v6:= 2I;
  #L49cf60.  goto L49cf88;
  #L49cf62.  v0:= "HMACSHA256" @kind object;
  #L49cf66.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L49cf6c.  v0:= temp;
  #L49cf6e.  if v0 == 0 then goto L49cf88;
  #L49cf72.  v6:= 1I;
  #L49cf74.  goto L49cf88;
  #L49cf76.  v0:= "HMACSHA1" @kind object;
  #L49cf7a.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L49cf80.  v0:= temp;
  #L49cf82.  if v0 == 0 then goto L49cf88;
  #L49cf86.  v6:= 0I;
  #L49cf88.  if v6 == 0 then goto L49cfe4;
  #L49cf8c.  if v6 == v3 then goto L49cfda;
  #L49cf90.  if v6 == v2 then goto L49cfd0;
  #L49cf94.  if v6 != v1 then goto L49cfa2;
  #L49cf98.  v5:= 64I;
  #L49cf9c.  v4.`com.google.crypto.tink.subtle.PrfHmacJce.d` @type ^`int` := v5;
  #L49cfa0.  goto L49cfec;
  #L49cfa2.  v6:= new `java.security.NoSuchAlgorithmException`;
  #L49cfa6.  v0:= new `java.lang.StringBuilder`;
  #L49cfaa.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49cfb0.  v1:= "unknown Hmac algorithm: " @kind object;
  #L49cfb4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49cfba.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49cfc0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49cfc6.  v5:= temp @kind object;
  #L49cfc8.  call `<init>`(v6, v5) @signature `Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49cfce.  throw v6;
  #L49cfd0.  v5:= 48I;
  #L49cfd4.  v4.`com.google.crypto.tink.subtle.PrfHmacJce.d` @type ^`int` := v5;
  #L49cfd8.  goto L49cfec;
  #L49cfda.  v5:= 32I;
  #L49cfde.  v4.`com.google.crypto.tink.subtle.PrfHmacJce.d` @type ^`int` := v5;
  #L49cfe2.  goto L49cfec;
  #L49cfe4.  v5:= 20I;
  #L49cfe8.  v4.`com.google.crypto.tink.subtle.PrfHmacJce.d` @type ^`int` := v5;
  #L49cfec.  v5:= v4.`com.google.crypto.tink.subtle.PrfHmacJce.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L49cff0.  call temp:= `get`(v5) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L49cff6.  return @kind void;
  #L49cff8.  v5:= new `java.security.InvalidAlgorithmParameterException`;
  #L49cffc.  v6:= "key size too small, need at least 16 bytes" @kind object;
  #L49d000.  call `<init>`(v5, v6) @signature `Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49d006.  throw v5;
  #L49d008.  switch v0
                  | -1823053428 => goto L49cf76
                  | 392315118 => goto L49cf62
                  | 392316170 => goto L49cf4e
                  | 392317873 => goto L49cf3a
                  | else => goto L49cf38;
}
procedure `java.lang.String` `a`(`com.google.crypto.tink.subtle.PrfHmacJce` v0 @kind object) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce;.a:(Lcom/google/crypto/tink/subtle/PrfHmacJce;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L49cec4.  v0:= v0.`com.google.crypto.tink.subtle.PrfHmacJce.b` @type ^`java.lang.String` @kind object;
  #L49cec8.  return v0 @kind object;
}
procedure `java.security.Key` `b`(`com.google.crypto.tink.subtle.PrfHmacJce` v0 @kind object) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce;.b:(Lcom/google/crypto/tink/subtle/PrfHmacJce;)Ljava/security/Key;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L49cedc.  v0:= v0.`com.google.crypto.tink.subtle.PrfHmacJce.c` @type ^`java.security.Key` @kind object;
  #L49cee0.  return v0 @kind object;
}
procedure `byte`[] `compute`(`com.google.crypto.tink.subtle.PrfHmacJce` v1 @kind this, `byte`[] v2 @kind object, `int` v3 ) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce;.compute:([BI)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49ce4c.  v0:= v1.`com.google.crypto.tink.subtle.PrfHmacJce.d` @type ^`int`;
  #L49ce50.  if v3 > v0 then goto L49ce8c;
  #L49ce54.  v0:= v1.`com.google.crypto.tink.subtle.PrfHmacJce.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L49ce58.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L49ce5e.  v0:= temp @kind object;
  #L49ce60.  v0:= (`javax.crypto.Mac`) v0 @kind object;
  #L49ce64.  call `update`(v0, v2) @signature `Ljavax/crypto/Mac;.update:([B)V` @kind virtual;
  #L49ce6a.  v2:= v1.`com.google.crypto.tink.subtle.PrfHmacJce.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L49ce6e.  call temp:= `get`(v2) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L49ce74.  v2:= temp @kind object;
  #L49ce76.  v2:= (`javax.crypto.Mac`) v2 @kind object;
  #L49ce7a.  call temp:= `doFinal`(v2) @signature `Ljavax/crypto/Mac;.doFinal:()[B` @kind virtual;
  #L49ce80.  v2:= temp @kind object;
  #L49ce82.  call temp:= `copyOf`(v2, v3) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L49ce88.  v2:= temp @kind object;
  #L49ce8a.  return v2 @kind object;
  #L49ce8c.  v2:= new `java.security.InvalidAlgorithmParameterException`;
  #L49ce90.  v3:= "tag size too big" @kind object;
  #L49ce94.  call `<init>`(v2, v3) @signature `Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49ce9a.  throw v2;
}
procedure `int` `getMaxOutputLength`(`com.google.crypto.tink.subtle.PrfHmacJce` v1 @kind this) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce;.getMaxOutputLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49ceac.  v0:= v1.`com.google.crypto.tink.subtle.PrfHmacJce.d` @type ^`int`;
  #L49ceb0.  return v0;
}
