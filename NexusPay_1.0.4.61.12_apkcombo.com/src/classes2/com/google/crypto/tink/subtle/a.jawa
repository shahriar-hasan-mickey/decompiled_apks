record `com.google.crypto.tink.subtle.a` @kind class @AccessFlag  {
}
procedure `byte`[] `a`(`byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/a;.a:([B)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L4922f0.  v0:= length @variable v2;
  #L4922f2.  v1:= 16I;
  #L4922f6.  if v0 >= v1 then goto L49230e;
  #L4922fa.  call temp:= `copyOf`(v2, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L492300.  v0:= temp @kind object;
  #L492302.  v2:= length @variable v2;
  #L492304.  v1:= -128I;
  #L492308.  v0[v2]:= v1 @kind byte;
  #L49230c.  return v0 @kind object;
  #L49230e.  v2:= new `java.lang.IllegalArgumentException`;
  #L492312.  v0:= "x must be smaller than a block." @kind object;
  #L492316.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49231c.  throw v2;
}
procedure `byte`[] `b`(`byte`[] v6 @kind object) @signature `Lcom/google/crypto/tink/subtle/a;.b:([B)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L492330.  v0:= length @variable v6;
  #L492332.  v1:= 16I;
  #L492336.  if v0 != v1 then goto L4923a0;
  #L49233a.  v0:= new `byte`[v1];
  #L49233e.  v2:= 0I;
  #L492340.  v3:= 0I;
  #L492342.  v4:= 15I;
  #L492346.  if v3 >= v1 then goto L492384;
  #L49234a.  v5:= v6[v3] @kind byte;
  #L49234e.  v5:= v5 ^< 1;
  #L492352.  v5:= v5 ^& 254;
  #L492356.  v5:= (`byte`) v5 @kind i2b;
  #L492358.  v0[v3]:= v5 @kind byte;
  #L49235c.  if v3 >= v4 then goto L49237e;
  #L492360.  v4:= v0[v3] @kind byte;
  #L492364.  v5:= v3 + 1;
  #L492368.  v5:= v6[v5] @kind byte;
  #L49236c.  v5:= v5 ^> 7;
  #L492370.  v5:= v5 ^& 1;
  #L492374.  v5:= (`byte`) v5 @kind i2b;
  #L492376.  v4:= v4 ^| v5 @kind int;
  #L492378.  v4:= (`byte`) v4 @kind i2b;
  #L49237a.  v0[v3]:= v4 @kind byte;
  #L49237e.  v3:= v3 + 1;
  #L492382.  goto L492342;
  #L492384.  v1:= v0[v4] @kind byte;
  #L492388.  v6:= v6[v2] @kind byte;
  #L49238c.  v6:= v6 ^> 7;
  #L492390.  v6:= v6 ^& 135;
  #L492394.  v6:= (`byte`) v6 @kind i2b;
  #L492396.  v6:= v6 ^~ v1 @kind int;
  #L492398.  v6:= (`byte`) v6 @kind i2b;
  #L49239a.  v0[v4]:= v6 @kind byte;
  #L49239e.  return v0 @kind object;
  #L4923a0.  v6:= new `java.lang.IllegalArgumentException`;
  #L4923a4.  v0:= "value must be a block." @kind object;
  #L4923a8.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4923ae.  throw v6;
}
