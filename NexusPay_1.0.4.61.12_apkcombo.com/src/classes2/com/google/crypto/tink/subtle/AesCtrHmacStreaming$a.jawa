record `com.google.crypto.tink.subtle.AesCtrHmacStreaming$a` @kind class @AccessFlag  extends `com.google.crypto.tink.subtle.StreamSegmentDecrypter` @kind interface {
  `javax.crypto.spec.SecretKeySpec` `com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.a` @AccessFlag PRIVATE;
  `javax.crypto.spec.SecretKeySpec` `com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.b` @AccessFlag PRIVATE;
  `javax.crypto.Cipher` `com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.c` @AccessFlag PRIVATE;
  `javax.crypto.Mac` `com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.d` @AccessFlag PRIVATE;
  `byte`[] `com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.e` @AccessFlag PRIVATE;
  `com.google.crypto.tink.subtle.AesCtrHmacStreaming` `com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L4902f8.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a` v0 @kind this, `com.google.crypto.tink.subtle.AesCtrHmacStreaming` v1 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming$a;.<init>:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49030c.  v0.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` := v1 @kind object;
  #L490310.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L490316.  return @kind void;
}
procedure `void` `decryptSegment`(`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a` v5 @kind this, `java.nio.ByteBuffer` v6 @kind object, `int` v7 , `boolean` v8 , `java.nio.ByteBuffer` v9 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming$a;.decryptSegment:(Ljava/nio/ByteBuffer;IZLjava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L490328.  @monitorenter v5
  #L49032a.  call temp:= `position`(v6) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L490330.  v0:= temp;
  #L490332.  v1:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L490336.  v2:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.e` @type ^`byte`[] @kind object;
  #L49033a.  v3:= (`long`) v7 @kind i2l;
  #L49033c.  call temp:= `h`(v1, v2, v3, v8) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.h:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;[BJZ)[B` @kind static;
  #L490342.  v7:= temp @kind object;
  #L490344.  call temp:= `remaining`(v6) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49034a.  v8:= temp;
  #L49034c.  v1:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L490350.  call temp:= `i`(v1) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.i:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;)I` @kind static;
  #L490356.  v1:= temp;
  #L490358.  if v8 < v1 then goto L49042a;
  #L49035c.  v1:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L490360.  call temp:= `i`(v1) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.i:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;)I` @kind static;
  #L490366.  v1:= temp;
  #L490368.  v8:= v8 - v1 @kind int;
  #L49036a.  v0:= v0 + v8 @kind int;
  #L49036c.  call temp:= `duplicate`(v6) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L490372.  v8:= temp @kind object;
  #L490374.  call temp:= `limit`(v8, v0) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L49037a.  call temp:= `duplicate`(v6) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L490380.  v1:= temp @kind object;
  #L490382.  call temp:= `position`(v1, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L490388.  v2:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.d` @type ^`javax.crypto.Mac` @kind object;
  #L49038c.  v3:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.b` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L490390.  call `init`(v2, v3) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L490396.  v2:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.d` @type ^`javax.crypto.Mac` @kind object;
  #L49039a.  call `update`(v2, v7) @signature `Ljavax/crypto/Mac;.update:([B)V` @kind virtual;
  #L4903a0.  v2:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.d` @type ^`javax.crypto.Mac` @kind object;
  #L4903a4.  call `update`(v2, v8) @signature `Ljavax/crypto/Mac;.update:(Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L4903aa.  v8:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.d` @type ^`javax.crypto.Mac` @kind object;
  #L4903ae.  call temp:= `doFinal`(v8) @signature `Ljavax/crypto/Mac;.doFinal:()[B` @kind virtual;
  #L4903b4.  v8:= temp @kind object;
  #L4903b6.  v2:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L4903ba.  call temp:= `i`(v2) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.i:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;)I` @kind static;
  #L4903c0.  v2:= temp;
  #L4903c2.  call temp:= `copyOf`(v8, v2) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L4903c8.  v8:= temp @kind object;
  #L4903ca.  v2:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L4903ce.  call temp:= `i`(v2) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.i:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;)I` @kind static;
  #L4903d4.  v2:= temp;
  #L4903d6.  v2:= new `byte`[v2];
  #L4903da.  call temp:= `get`(v1, v2) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L4903e0.  call temp:= `equal`(v2, v8) @signature `Lcom/google/crypto/tink/subtle/Bytes;.equal:([B[B)Z` @kind static;
  #L4903e6.  v8:= temp;
  #L4903e8.  if v8 == 0 then goto L49041a;
  #L4903ec.  call temp:= `limit`(v6, v0) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L4903f2.  v8:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.c` @type ^`javax.crypto.Cipher` @kind object;
  #L4903f6.  v0:= 1I;
  #L4903f8.  v1:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.a` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L4903fc.  v2:= new `javax.crypto.spec.IvParameterSpec`;
  #L490400.  call `<init>`(v2, v7) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L490406.  call `init`(v8, v0, v1, v2) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L49040c.  v7:= v5.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.c` @type ^`javax.crypto.Cipher` @kind object;
  #L490410.  call temp:= `doFinal`(v7, v6, v9) @signature `Ljavax/crypto/Cipher;.doFinal:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L490416.  @monitorexit v5
  #L490418.  return @kind void;
  #L49041a.  v6:= new `java.security.GeneralSecurityException`;
  #L49041e.  v7:= "Tag mismatch" @kind object;
  #L490422.  call `<init>`(v6, v7) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L490428.  throw v6;
  #L49042a.  v6:= new `java.security.GeneralSecurityException`;
  #L49042e.  v7:= "Ciphertext too short" @kind object;
  #L490432.  call `<init>`(v6, v7) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L490438.  throw v6;
  #L49043a.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49043c.  @monitorexit v5
  #L49043e.  throw v6;
  catch `java.lang.Throwable` @[L49032a..L490416] goto L49043a;
  catch `java.lang.Throwable` @[L49041a..L49043a] goto L49043a;
}
procedure `void` `init`(`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a` v2 @kind this, `java.nio.ByteBuffer` v3 @kind object, `byte`[] v4 @kind object) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming$a;.init:(Ljava/nio/ByteBuffer;[B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L490464.  @monitorenter v2
  #L490466.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49046c.  v0:= temp;
  #L49046e.  v1:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L490472.  call temp:= `getHeaderLength`(v1) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.getHeaderLength:()I` @kind virtual;
  #L490478.  v1:= temp;
  #L49047a.  if v0 != v1 then goto L49051c;
  #L49047e.  call temp:= `get`(v3) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L490484.  v0:= temp;
  #L490486.  v1:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L49048a.  call temp:= `getHeaderLength`(v1) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.getHeaderLength:()I` @kind virtual;
  #L490490.  v1:= temp;
  #L490492.  if v0 != v1 then goto L49050c;
  #L490496.  v0:= 7I;
  #L490498.  v0:= new `byte`[v0];
  #L49049c.  v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.e` @type ^`byte`[] := v0 @kind object;
  #L4904a0.  v0:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L4904a4.  call temp:= `j`(v0) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.j:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;)I` @kind static;
  #L4904aa.  v0:= temp;
  #L4904ac.  v0:= new `byte`[v0];
  #L4904b0.  call temp:= `get`(v3, v0) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L4904b6.  v1:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.e` @type ^`byte`[] @kind object;
  #L4904ba.  call temp:= `get`(v3, v1) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L4904c0.  v3:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L4904c4.  call temp:= `e`(v3, v0, v4) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.e:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;[B[B)[B` @kind static;
  #L4904ca.  v3:= temp @kind object;
  #L4904cc.  v4:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L4904d0.  call temp:= `f`(v4, v3) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.f:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;[B)Ljavax/crypto/spec/SecretKeySpec;` @kind static;
  #L4904d6.  v4:= temp @kind object;
  #L4904d8.  v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.a` @type ^`javax.crypto.spec.SecretKeySpec` := v4 @kind object;
  #L4904dc.  v4:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L4904e0.  call temp:= `g`(v4, v3) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.g:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;[B)Ljavax/crypto/spec/SecretKeySpec;` @kind static;
  #L4904e6.  v3:= temp @kind object;
  #L4904e8.  v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.b` @type ^`javax.crypto.spec.SecretKeySpec` := v3 @kind object;
  #L4904ec.  call temp:= `a`() @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.a:()Ljavax/crypto/Cipher;` @kind static;
  #L4904f2.  v3:= temp @kind object;
  #L4904f4.  v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.c` @type ^`javax.crypto.Cipher` := v3 @kind object;
  #L4904f8.  v3:= v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.f` @type ^`com.google.crypto.tink.subtle.AesCtrHmacStreaming` @kind object;
  #L4904fc.  call temp:= `b`(v3) @signature `Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;.b:(Lcom/google/crypto/tink/subtle/AesCtrHmacStreaming;)Ljavax/crypto/Mac;` @kind static;
  #L490502.  v3:= temp @kind object;
  #L490504.  v2.`com.google.crypto.tink.subtle.AesCtrHmacStreaming$a.d` @type ^`javax.crypto.Mac` := v3 @kind object;
  #L490508.  @monitorexit v2
  #L49050a.  return @kind void;
  #L49050c.  v3:= new `java.security.GeneralSecurityException`;
  #L490510.  v4:= "Invalid ciphertext" @kind object;
  #L490514.  call `<init>`(v3, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49051a.  throw v3;
  #L49051c.  v3:= new `java.security.InvalidAlgorithmParameterException`;
  #L490520.  v4:= "Invalid header length" @kind object;
  #L490524.  call `<init>`(v3, v4) @signature `Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49052a.  throw v3;
  #L49052c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49052e.  @monitorexit v2
  #L490530.  throw v3;
  catch `java.lang.Throwable` @[L490466..L490508] goto L49052c;
  catch `java.lang.Throwable` @[L49050c..L49052c] goto L49052c;
}
