record `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `byte`[] `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.a` @AccessFlag PRIVATE_FINAL;
  `javax.crypto.Mac` `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @AccessFlag PRIVATE;
  `byte`[] `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.c` @AccessFlag PRIVATE;
  `java.nio.ByteBuffer` `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.e` @AccessFlag PRIVATE;
  `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b` v0 @kind this, `com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` v1 @kind object, `byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.<init>:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a0814.  v0.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` := v1 @kind object;
  #L4a0818.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L4a081e.  v1:= -1I;
  #L4a0820.  v0.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.e` @type ^`int` := v1;
  #L4a0824.  v1:= length @variable v2;
  #L4a0826.  call temp:= `copyOf`(v2, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L4a082c.  v1:= temp @kind object;
  #L4a082e.  v0.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.a` @type ^`byte`[] := v1 @kind object;
  #L4a0832.  return @kind void;
}
procedure `void` `a`(`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b` v4 @kind this) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a0844.  v0:= `@@com.google.crypto.tink.subtle.EngineFactory.MAC` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L4a0848.  v1:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L4a084c.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.a:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L4a0852.  v1:= temp @kind object;
  #L4a0854.  call temp:= `b`(v1) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.b:(Lcom/google/crypto/tink/subtle/Enums$HashType;)Ljava/lang/String;` @kind static;
  #L4a085a.  v1:= temp @kind object;
  #L4a085c.  call temp:= `getInstance`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L4a0862.  v0:= temp @kind object;
  #L4a0864.  v0:= (`javax.crypto.Mac`) v0 @kind object;
  #L4a0868.  v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` := v0 @kind object;
  #L4a086c.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L4a0870.  call temp:= `c`(v0) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.c:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)[B` @kind static;
  #L4a0876.  v0:= temp @kind object;
  #L4a0878.  if v0 == 0 then goto L4a08c6;
  #L4a087c.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L4a0880.  call temp:= `c`(v0) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.c:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)[B` @kind static;
  #L4a0886.  v0:= temp @kind object;
  #L4a0888.  v0:= length @variable v0;
  #L4a088a.  if v0 != 0 then goto L4a0890;
  #L4a088e.  goto L4a08c6;
  #L4a0890.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L4a0894.  v1:= new `javax.crypto.spec.SecretKeySpec`;
  #L4a0898.  v2:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L4a089c.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.c:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)[B` @kind static;
  #L4a08a2.  v2:= temp @kind object;
  #L4a08a4.  v3:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L4a08a8.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.a:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L4a08ae.  v3:= temp @kind object;
  #L4a08b0.  call temp:= `b`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.b:(Lcom/google/crypto/tink/subtle/Enums$HashType;)Ljava/lang/String;` @kind static;
  #L4a08b6.  v3:= temp @kind object;
  #L4a08b8.  call `<init>`(v1, v2, v3) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L4a08be.  call `init`(v0, v1) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L4a08c4.  goto L4a08fe;
  #L4a08c6.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L4a08ca.  v1:= new `javax.crypto.spec.SecretKeySpec`;
  #L4a08ce.  v2:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L4a08d2.  call temp:= `getMacLength`(v2) @signature `Ljavax/crypto/Mac;.getMacLength:()I` @kind virtual;
  #L4a08d8.  v2:= temp;
  #L4a08da.  v2:= new `byte`[v2];
  #L4a08de.  v3:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L4a08e2.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.a:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L4a08e8.  v3:= temp @kind object;
  #L4a08ea.  call temp:= `b`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.b:(Lcom/google/crypto/tink/subtle/Enums$HashType;)Ljava/lang/String;` @kind static;
  #L4a08f0.  v3:= temp @kind object;
  #L4a08f2.  call `<init>`(v1, v2, v3) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L4a08f8.  call `init`(v0, v1) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L4a08fe.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L4a0902.  v1:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L4a0906.  call temp:= `d`(v1) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.d:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)[B` @kind static;
  #L4a090c.  v1:= temp @kind object;
  #L4a090e.  call `update`(v0, v1) @signature `Ljavax/crypto/Mac;.update:([B)V` @kind virtual;
  #L4a0914.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L4a0918.  call temp:= `doFinal`(v0) @signature `Ljavax/crypto/Mac;.doFinal:()[B` @kind virtual;
  #L4a091e.  v0:= temp @kind object;
  #L4a0920.  v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.c` @type ^`byte`[] := v0 @kind object;
  #L4a0924.  v0:= 0I;
  #L4a0926.  call temp:= `allocateDirect`(v0) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L4a092c.  v1:= temp @kind object;
  #L4a092e.  v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @type ^`java.nio.ByteBuffer` := v1 @kind object;
  #L4a0932.  call temp:= `mark`(v1) @signature `Ljava/nio/ByteBuffer;.mark:()Ljava/nio/Buffer;` @kind virtual;
  #L4a0938.  v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.e` @type ^`int` := v0;
  #L4a093c.  return @kind void;
  #L4a093e.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L4a0940.  v1:= new `java.io.IOException`;
  #L4a0944.  v2:= "Creating HMac failed" @kind object;
  #L4a0948.  call `<init>`(v1, v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L4a094e.  throw v1;
  catch `java.security.GeneralSecurityException` @[L4a0844..L4a086c] goto L4a093e;
}
procedure `void` `b`(`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b` v4 @kind this) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a0970.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L4a0974.  v1:= new `javax.crypto.spec.SecretKeySpec`;
  #L4a0978.  v2:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.c` @type ^`byte`[] @kind object;
  #L4a097c.  v3:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.f` @type ^`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf` @kind object;
  #L4a0980.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.a:(Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L4a0986.  v3:= temp @kind object;
  #L4a0988.  call temp:= `b`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf;.b:(Lcom/google/crypto/tink/subtle/Enums$HashType;)Ljava/lang/String;` @kind static;
  #L4a098e.  v3:= temp @kind object;
  #L4a0990.  call `<init>`(v1, v2, v3) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L4a0996.  call `init`(v0, v1) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L4a099c.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4a09a0.  call temp:= `reset`(v0) @signature `Ljava/nio/ByteBuffer;.reset:()Ljava/nio/Buffer;` @kind virtual;
  #L4a09a6.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L4a09aa.  v1:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4a09ae.  call `update`(v0, v1) @signature `Ljavax/crypto/Mac;.update:(Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L4a09b4.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L4a09b8.  v1:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.a` @type ^`byte`[] @kind object;
  #L4a09bc.  call `update`(v0, v1) @signature `Ljavax/crypto/Mac;.update:([B)V` @kind virtual;
  #L4a09c2.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.e` @type ^`int`;
  #L4a09c6.  v0:= v0 + 1;
  #L4a09ca.  v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.e` @type ^`int` := v0;
  #L4a09ce.  v1:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L4a09d2.  v0:= (`byte`) v0 @kind i2b;
  #L4a09d4.  call `update`(v1, v0) @signature `Ljavax/crypto/Mac;.update:(B)V` @kind virtual;
  #L4a09da.  v0:= v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` @kind object;
  #L4a09de.  call temp:= `doFinal`(v0) @signature `Ljavax/crypto/Mac;.doFinal:()[B` @kind virtual;
  #L4a09e4.  v0:= temp @kind object;
  #L4a09e6.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L4a09ec.  v0:= temp @kind object;
  #L4a09ee.  v4.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L4a09f2.  call temp:= `mark`(v0) @signature `Ljava/nio/ByteBuffer;.mark:()Ljava/nio/Buffer;` @kind virtual;
  #L4a09f8.  return @kind void;
}
procedure `int` `read`(`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b` v4 @kind this) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a0710.  v0:= 1I;
  #L4a0712.  v1:= new `byte`[v0];
  #L4a0716.  v2:= 0I;
  #L4a0718.  call temp:= `read`(v4, v1, v2, v0) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.read:([BII)I` @kind virtual;
  #L4a071e.  v3:= temp;
  #L4a0720.  if v3 != v0 then goto L4a072e;
  #L4a0724.  v0:= v1[v2] @kind byte;
  #L4a0728.  v0:= v0 ^& 255;
  #L4a072c.  return v0;
  #L4a072e.  v0:= -1I;
  #L4a0730.  if v3 != v0 then goto L4a0736;
  #L4a0734.  return v3;
  #L4a0736.  v0:= new `java.io.IOException`;
  #L4a073a.  v1:= "Reading failed" @kind object;
  #L4a073e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a0744.  throw v0;
}
procedure `int` `read`(`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a0758.  v0:= length @variable v3;
  #L4a075a.  v1:= 0I;
  #L4a075c.  call temp:= `read`(v2, v3, v1, v0) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.read:([BII)I` @kind virtual;
  #L4a0762.  v3:= temp;
  #L4a0764.  return v3;
}
procedure `int` `read`(`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b` v3 @kind this, `byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a0778.  v0:= v3.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.e` @type ^`int`;
  #L4a077c.  v1:= -1I;
  #L4a077e.  if v0 != v1 then goto L4a0788;
  #L4a0782.  call `a`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.a:()V` @kind direct;
  #L4a0788.  v0:= 0I;
  #L4a078a.  if v0 >= v6 then goto L4a07da;
  #L4a078e.  v1:= v3.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4a0792.  call temp:= `hasRemaining`(v1) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L4a0798.  v1:= temp;
  #L4a079a.  if v1 != 0 then goto L4a07b2;
  #L4a079e.  v1:= v3.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.e` @type ^`int`;
  #L4a07a2.  v2:= 255I;
  #L4a07a6.  if v1 != v2 then goto L4a07ac;
  #L4a07aa.  return v0;
  #L4a07ac.  call `b`(v3) @signature `Lcom/google/crypto/tink/subtle/prf/HkdfStreamingPrf$b;.b:()V` @kind direct;
  #L4a07b2.  v1:= v6 - v0 @kind int;
  #L4a07b6.  v2:= v3.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4a07ba.  call temp:= `remaining`(v2) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L4a07c0.  v2:= temp;
  #L4a07c2.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L4a07c8.  v1:= temp;
  #L4a07ca.  v2:= v3.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L4a07ce.  call temp:= `get`(v2, v4, v5, v1) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L4a07d4.  v5:= v5 + v1 @kind int;
  #L4a07d6.  v0:= v0 + v1 @kind int;
  #L4a07d8.  goto L4a078a;
  #L4a07da.  return v0;
  #L4a07dc.  v4:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L4a07de.  v5:= 0I;
  #L4a07e0.  v3.`com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$b.b` @type ^`javax.crypto.Mac` := v5 @kind object;
  #L4a07e4.  v5:= new `java.io.IOException`;
  #L4a07e8.  v6:= "HkdfInputStream failed" @kind object;
  #L4a07ec.  call `<init>`(v5, v6, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L4a07f2.  throw v5;
  catch `java.security.GeneralSecurityException` @[L4a0778..L4a07d4] goto L4a07dc;
}
