record `com.google.crypto.tink.subtle.f$a` @kind class @AccessFlag  {
  `long`[] `com.google.crypto.tink.subtle.f$a.a` @AccessFlag FINAL;
  `long`[] `com.google.crypto.tink.subtle.f$a.b` @AccessFlag FINAL;
  `long`[] `com.google.crypto.tink.subtle.f$a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.f$a` v3 @kind this) @signature `Lcom/google/crypto/tink/subtle/f$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L494d7c.  v0:= 10I;
  #L494d80.  v1:= new `long`[v0];
  #L494d84.  v2:= new `long`[v0];
  #L494d88.  v0:= new `long`[v0];
  #L494d8c.  call `<init>`(v3, v1, v2, v0) @signature `Lcom/google/crypto/tink/subtle/f$a;.<init>:([J[J[J)V` @kind direct;
  #L494d92.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.f$a` v2 @kind this, `com.google.crypto.tink.subtle.f$a` v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/f$a;.<init>:(Lcom/google/crypto/tink/subtle/f$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L494da4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L494daa.  v0:= v3.`com.google.crypto.tink.subtle.f$a.a` @type ^`long`[] @kind object;
  #L494dae.  v1:= 10I;
  #L494db2.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([JI)[J` @kind static;
  #L494db8.  v0:= temp @kind object;
  #L494dba.  v2.`com.google.crypto.tink.subtle.f$a.a` @type ^`long`[] := v0 @kind object;
  #L494dbe.  v0:= v3.`com.google.crypto.tink.subtle.f$a.b` @type ^`long`[] @kind object;
  #L494dc2.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([JI)[J` @kind static;
  #L494dc8.  v0:= temp @kind object;
  #L494dca.  v2.`com.google.crypto.tink.subtle.f$a.b` @type ^`long`[] := v0 @kind object;
  #L494dce.  v3:= v3.`com.google.crypto.tink.subtle.f$a.c` @type ^`long`[] @kind object;
  #L494dd2.  call temp:= `copyOf`(v3, v1) @signature `Ljava/util/Arrays;.copyOf:([JI)[J` @kind static;
  #L494dd8.  v3:= temp @kind object;
  #L494dda.  v2.`com.google.crypto.tink.subtle.f$a.c` @type ^`long`[] := v3 @kind object;
  #L494dde.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.f$a` v0 @kind this, `long`[] v1 @kind object, `long`[] v2 @kind object, `long`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/f$a;.<init>:([J[J[J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L494df0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L494df6.  v0.`com.google.crypto.tink.subtle.f$a.a` @type ^`long`[] := v1 @kind object;
  #L494dfa.  v0.`com.google.crypto.tink.subtle.f$a.b` @type ^`long`[] := v2 @kind object;
  #L494dfe.  v0.`com.google.crypto.tink.subtle.f$a.c` @type ^`long`[] := v3 @kind object;
  #L494e02.  return @kind void;
}
procedure `void` `a`(`com.google.crypto.tink.subtle.f$a` v2 @kind this, `com.google.crypto.tink.subtle.f$a` v3 @kind object, `int` v4 ) @signature `Lcom/google/crypto/tink/subtle/f$a;.a:(Lcom/google/crypto/tink/subtle/f$a;I)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L494e14.  v0:= v2.`com.google.crypto.tink.subtle.f$a.a` @type ^`long`[] @kind object;
  #L494e18.  v1:= v3.`com.google.crypto.tink.subtle.f$a.a` @type ^`long`[] @kind object;
  #L494e1c.  call `a`(v0, v1, v4) @signature `Lcom/google/crypto/tink/subtle/e;.a:([J[JI)V` @kind static;
  #L494e22.  v0:= v2.`com.google.crypto.tink.subtle.f$a.b` @type ^`long`[] @kind object;
  #L494e26.  v1:= v3.`com.google.crypto.tink.subtle.f$a.b` @type ^`long`[] @kind object;
  #L494e2a.  call `a`(v0, v1, v4) @signature `Lcom/google/crypto/tink/subtle/e;.a:([J[JI)V` @kind static;
  #L494e30.  v0:= v2.`com.google.crypto.tink.subtle.f$a.c` @type ^`long`[] @kind object;
  #L494e34.  v3:= v3.`com.google.crypto.tink.subtle.f$a.c` @type ^`long`[] @kind object;
  #L494e38.  call `a`(v0, v3, v4) @signature `Lcom/google/crypto/tink/subtle/e;.a:([J[JI)V` @kind static;
  #L494e3e.  return @kind void;
}
procedure `void` `b`(`com.google.crypto.tink.subtle.f$a` v2 @kind this, `long`[] v3 @kind object, `long`[] v4 @kind object) @signature `Lcom/google/crypto/tink/subtle/f$a;.b:([J[J)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L494e50.  v0:= 0I;
  #L494e52.  v1:= 10I;
  #L494e56.  call `arraycopy`(v4, v0, v3, v0, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L494e5c.  return @kind void;
}
