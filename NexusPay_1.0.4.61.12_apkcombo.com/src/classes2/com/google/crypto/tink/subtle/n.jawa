record `com.google.crypto.tink.subtle.n` @kind class @AccessFlag  extends `java.io.FilterOutputStream` @kind class {
  `com.google.crypto.tink.subtle.StreamSegmentEncrypter` `com.google.crypto.tink.subtle.n.a` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.subtle.n.b` @AccessFlag PRIVATE;
  `java.nio.ByteBuffer` `com.google.crypto.tink.subtle.n.c` @AccessFlag ;
  `java.nio.ByteBuffer` `com.google.crypto.tink.subtle.n.d` @AccessFlag ;
  `boolean` `com.google.crypto.tink.subtle.n.e` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.n` v0 @kind this, `com.google.crypto.tink.subtle.i` v1 @kind object, `java.io.OutputStream` v2 @kind object, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/n;.<init>:(Lcom/google/crypto/tink/subtle/i;Ljava/io/OutputStream;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49effc.  call `<init>`(v0, v2) @signature `Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L49f002.  call temp:= `newStreamSegmentEncrypter`(v1, v3) @signature `Lcom/google/crypto/tink/subtle/i;.newStreamSegmentEncrypter:([B)Lcom/google/crypto/tink/subtle/StreamSegmentEncrypter;` @kind virtual;
  #L49f008.  v2:= temp @kind object;
  #L49f00a.  v0.`com.google.crypto.tink.subtle.n.a` @type ^`com.google.crypto.tink.subtle.StreamSegmentEncrypter` := v2 @kind object;
  #L49f00e.  call temp:= `getPlaintextSegmentSize`(v1) @signature `Lcom/google/crypto/tink/subtle/i;.getPlaintextSegmentSize:()I` @kind virtual;
  #L49f014.  v2:= temp;
  #L49f016.  v0.`com.google.crypto.tink.subtle.n.b` @type ^`int` := v2;
  #L49f01a.  call temp:= `allocate`(v2) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L49f020.  v2:= temp @kind object;
  #L49f022.  v0.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L49f026.  call temp:= `getCiphertextSegmentSize`(v1) @signature `Lcom/google/crypto/tink/subtle/i;.getCiphertextSegmentSize:()I` @kind virtual;
  #L49f02c.  v2:= temp;
  #L49f02e.  call temp:= `allocate`(v2) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L49f034.  v2:= temp @kind object;
  #L49f036.  v0.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L49f03a.  v2:= v0.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f03e.  v3:= v0.`com.google.crypto.tink.subtle.n.b` @type ^`int`;
  #L49f042.  call temp:= `getCiphertextOffset`(v1) @signature `Lcom/google/crypto/tink/subtle/i;.getCiphertextOffset:()I` @kind virtual;
  #L49f048.  v1:= temp;
  #L49f04a.  v3:= v3 - v1 @kind int;
  #L49f04c.  call temp:= `limit`(v2, v3) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L49f052.  v1:= v0.`com.google.crypto.tink.subtle.n.a` @type ^`com.google.crypto.tink.subtle.StreamSegmentEncrypter` @kind object;
  #L49f056.  call temp:= `getHeader`(v1) @signature `Lcom/google/crypto/tink/subtle/StreamSegmentEncrypter;.getHeader:()Ljava/nio/ByteBuffer;` @kind interface;
  #L49f05c.  v1:= temp @kind object;
  #L49f05e.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49f064.  v2:= temp;
  #L49f066.  v2:= new `byte`[v2];
  #L49f06a.  call temp:= `get`(v1, v2) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L49f070.  v1:= v0.`java.io.FilterOutputStream.out` @type ^`java.io.OutputStream` @kind object;
  #L49f074.  call `write`(v1, v2) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L49f07a.  v1:= 1I;
  #L49f07c.  v0.`com.google.crypto.tink.subtle.n.e` @type ^`boolean` := v1 @kind boolean;
  #L49f080.  return @kind void;
}
procedure `void` `close`(`com.google.crypto.tink.subtle.n` v4 @kind this) @signature `Lcom/google/crypto/tink/subtle/n;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L49f094.  @monitorenter v4
  #L49f096.  v0:= v4.`com.google.crypto.tink.subtle.n.e` @type ^`boolean` @kind boolean;
  #L49f09a.  if v0 != 0 then goto L49f0a2;
  #L49f09e.  @monitorexit v4
  #L49f0a0.  return @kind void;
  #L49f0a2.  v0:= v4.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f0a6.  call temp:= `flip`(v0) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L49f0ac.  v0:= v4.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f0b0.  call temp:= `clear`(v0) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L49f0b6.  v0:= v4.`com.google.crypto.tink.subtle.n.a` @type ^`com.google.crypto.tink.subtle.StreamSegmentEncrypter` @kind object;
  #L49f0ba.  v1:= v4.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f0be.  v2:= 1I;
  #L49f0c0.  v3:= v4.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f0c4.  call `encryptSegment`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/subtle/StreamSegmentEncrypter;.encryptSegment:(Ljava/nio/ByteBuffer;ZLjava/nio/ByteBuffer;)V` @kind interface;
  #L49f0ca.  v0:= v4.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f0ce.  call temp:= `flip`(v0) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L49f0d4.  v0:= v4.`java.io.FilterOutputStream.out` @type ^`java.io.OutputStream` @kind object;
  #L49f0d8.  v1:= v4.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f0dc.  call temp:= `array`(v1) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L49f0e2.  v1:= temp @kind object;
  #L49f0e4.  v2:= v4.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f0e8.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L49f0ee.  v2:= temp;
  #L49f0f0.  v3:= v4.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f0f4.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49f0fa.  v3:= temp;
  #L49f0fc.  call `write`(v0, v1, v2, v3) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L49f102.  v0:= 0I;
  #L49f104.  v4.`com.google.crypto.tink.subtle.n.e` @type ^`boolean` := v0 @kind boolean;
  #L49f108.  call `close`(v4) @signature `Ljava/io/FilterOutputStream;.close:()V` @kind super;
  #L49f10e.  @monitorexit v4
  #L49f110.  return @kind void;
  #L49f112.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L49f114.  v1:= new `java.io.IOException`;
  #L49f118.  v2:= new `java.lang.StringBuilder`;
  #L49f11c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49f122.  v3:= "ptBuffer.remaining():" @kind object;
  #L49f126.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49f12c.  v3:= v4.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f130.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49f136.  v3:= temp;
  #L49f138.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L49f13e.  v3:= " ctBuffer.remaining():" @kind object;
  #L49f142.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49f148.  v3:= v4.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f14c.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49f152.  v3:= temp;
  #L49f154.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L49f15a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49f160.  v2:= temp @kind object;
  #L49f162.  call `<init>`(v1, v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L49f168.  throw v1;
  #L49f16a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49f16c.  @monitorexit v4
  #L49f16e.  throw v0;
  catch `java.lang.Throwable` @[L49f096..L49f09a] goto L49f16a;
  catch `java.security.GeneralSecurityException` @[L49f0a2..L49f0ca] goto L49f112;
  catch `java.lang.Throwable` @[L49f0a2..L49f0ca] goto L49f16a;
  catch `java.lang.Throwable` @[L49f0ca..L49f10e] goto L49f16a;
  catch `java.lang.Throwable` @[L49f114..L49f16a] goto L49f16a;
}
procedure `void` `write`(`com.google.crypto.tink.subtle.n` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/subtle/n;.write:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49f2dc.  v0:= 1I;
  #L49f2de.  v0:= new `byte`[v0];
  #L49f2e2.  v3:= (`byte`) v3 @kind i2b;
  #L49f2e4.  v1:= 0I;
  #L49f2e6.  v0[v1]:= v3 @kind byte;
  #L49f2ea.  call `write`(v2, v0) @signature `Lcom/google/crypto/tink/subtle/n;.write:([B)V` @kind virtual;
  #L49f2f0.  return @kind void;
}
procedure `void` `write`(`com.google.crypto.tink.subtle.n` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/n;.write:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49f1a8.  v0:= length @variable v3;
  #L49f1aa.  v1:= 0I;
  #L49f1ac.  call `write`(v2, v3, v1, v0) @signature `Lcom/google/crypto/tink/subtle/n;.write:([BII)V` @kind virtual;
  #L49f1b2.  return @kind void;
}
procedure `void` `write`(`com.google.crypto.tink.subtle.n` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/google/crypto/tink/subtle/n;.write:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L49f1c4.  @monitorenter v5
  #L49f1c6.  v0:= v5.`com.google.crypto.tink.subtle.n.e` @type ^`boolean` @kind boolean;
  #L49f1ca.  if v0 == 0 then goto L49f28c;
  #L49f1ce.  v0:= v5.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f1d2.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49f1d8.  v0:= temp;
  #L49f1da.  if v8 <= v0 then goto L49f27e;
  #L49f1de.  v0:= v5.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f1e2.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49f1e8.  v0:= temp;
  #L49f1ea.  call temp:= `wrap`(v6, v7, v0) @signature `Ljava/nio/ByteBuffer;.wrap:([BII)Ljava/nio/ByteBuffer;` @kind static;
  #L49f1f0.  v1:= temp @kind object;
  #L49f1f2.  v7:= v7 + v0 @kind int;
  #L49f1f4.  v8:= v8 - v0 @kind int;
  #L49f1f6.  v0:= v5.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f1fa.  call temp:= `flip`(v0) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L49f200.  v0:= v5.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f204.  call temp:= `clear`(v0) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L49f20a.  v0:= v5.`com.google.crypto.tink.subtle.n.a` @type ^`com.google.crypto.tink.subtle.StreamSegmentEncrypter` @kind object;
  #L49f20e.  v2:= v5.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f212.  v3:= 0I;
  #L49f214.  v4:= v5.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f218.  call `encryptSegment`(v0, v2, v1, v3, v4) @signature `Lcom/google/crypto/tink/subtle/StreamSegmentEncrypter;.encryptSegment:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;ZLjava/nio/ByteBuffer;)V` @kind interface;
  #L49f21e.  v0:= v5.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f222.  call temp:= `flip`(v0) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L49f228.  v0:= v5.`java.io.FilterOutputStream.out` @type ^`java.io.OutputStream` @kind object;
  #L49f22c.  v1:= v5.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f230.  call temp:= `array`(v1) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L49f236.  v1:= temp @kind object;
  #L49f238.  v2:= v5.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f23c.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L49f242.  v2:= temp;
  #L49f244.  v3:= v5.`com.google.crypto.tink.subtle.n.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f248.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L49f24e.  v3:= temp;
  #L49f250.  call `write`(v0, v1, v2, v3) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L49f256.  v0:= v5.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f25a.  call temp:= `clear`(v0) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L49f260.  v0:= v5.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f264.  v1:= v5.`com.google.crypto.tink.subtle.n.b` @type ^`int`;
  #L49f268.  call temp:= `limit`(v0, v1) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L49f26e.  goto L49f1ce;
  #L49f270.  v6:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L49f272.  v7:= new `java.io.IOException`;
  #L49f276.  call `<init>`(v7, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L49f27c.  throw v7;
  #L49f27e.  v0:= v5.`com.google.crypto.tink.subtle.n.c` @type ^`java.nio.ByteBuffer` @kind object;
  #L49f282.  call temp:= `put`(v0, v6, v7, v8) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L49f288.  @monitorexit v5
  #L49f28a.  return @kind void;
  #L49f28c.  v6:= new `java.io.IOException`;
  #L49f290.  v7:= "Trying to write to closed stream" @kind object;
  #L49f294.  call `<init>`(v6, v7) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49f29a.  throw v6;
  #L49f29c.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49f29e.  @monitorexit v5
  #L49f2a0.  throw v6;
  catch `java.lang.Throwable` @[L49f1c6..L49f1f2] goto L49f29c;
  catch `java.security.GeneralSecurityException` @[L49f1f6..L49f21e] goto L49f270;
  catch `java.lang.Throwable` @[L49f1f6..L49f21e] goto L49f29c;
  catch `java.lang.Throwable` @[L49f21e..L49f288] goto L49f29c;
  catch `java.lang.Throwable` @[L49f28c..L49f29c] goto L49f29c;
}
