record `com.google.crypto.tink.subtle.EciesHkdfSenderKem$KemKey` @kind class @AccessFlag PUBLIC_FINAL {
  `com.google.crypto.tink.subtle.ImmutableByteArray` `com.google.crypto.tink.subtle.EciesHkdfSenderKem$KemKey.a` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.subtle.ImmutableByteArray` `com.google.crypto.tink.subtle.EciesHkdfSenderKem$KemKey.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.EciesHkdfSenderKem$KemKey` v0 @kind this, `byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/EciesHkdfSenderKem$KemKey;.<init>:([B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L494ca8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L494cae.  call temp:= `of`(v1) @signature `Lcom/google/crypto/tink/subtle/ImmutableByteArray;.of:([B)Lcom/google/crypto/tink/subtle/ImmutableByteArray;` @kind static;
  #L494cb4.  v1:= temp @kind object;
  #L494cb6.  v0.`com.google.crypto.tink.subtle.EciesHkdfSenderKem$KemKey.a` @type ^`com.google.crypto.tink.subtle.ImmutableByteArray` := v1 @kind object;
  #L494cba.  call temp:= `of`(v2) @signature `Lcom/google/crypto/tink/subtle/ImmutableByteArray;.of:([B)Lcom/google/crypto/tink/subtle/ImmutableByteArray;` @kind static;
  #L494cc0.  v1:= temp @kind object;
  #L494cc2.  v0.`com.google.crypto.tink.subtle.EciesHkdfSenderKem$KemKey.b` @type ^`com.google.crypto.tink.subtle.ImmutableByteArray` := v1 @kind object;
  #L494cc6.  return @kind void;
}
procedure `byte`[] `getKemBytes`(`com.google.crypto.tink.subtle.EciesHkdfSenderKem$KemKey` v1 @kind this) @signature `Lcom/google/crypto/tink/subtle/EciesHkdfSenderKem$KemKey;.getKemBytes:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L494c58.  v0:= v1.`com.google.crypto.tink.subtle.EciesHkdfSenderKem$KemKey.a` @type ^`com.google.crypto.tink.subtle.ImmutableByteArray` @kind object;
  #L494c5c.  if v0 != 0 then goto L494c64;
  #L494c60.  v0:= 0I;
  #L494c62.  return v0 @kind object;
  #L494c64.  call temp:= `getBytes`(v0) @signature `Lcom/google/crypto/tink/subtle/ImmutableByteArray;.getBytes:()[B` @kind virtual;
  #L494c6a.  v0:= temp @kind object;
  #L494c6c.  return v0 @kind object;
}
procedure `byte`[] `getSymmetricKey`(`com.google.crypto.tink.subtle.EciesHkdfSenderKem$KemKey` v1 @kind this) @signature `Lcom/google/crypto/tink/subtle/EciesHkdfSenderKem$KemKey;.getSymmetricKey:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L494c80.  v0:= v1.`com.google.crypto.tink.subtle.EciesHkdfSenderKem$KemKey.b` @type ^`com.google.crypto.tink.subtle.ImmutableByteArray` @kind object;
  #L494c84.  if v0 != 0 then goto L494c8c;
  #L494c88.  v0:= 0I;
  #L494c8a.  return v0 @kind object;
  #L494c8c.  call temp:= `getBytes`(v0) @signature `Lcom/google/crypto/tink/subtle/ImmutableByteArray;.getBytes:()[B` @kind virtual;
  #L494c92.  v0:= temp @kind object;
  #L494c94.  return v0 @kind object;
}
