record `com.google.crypto.tink.subtle.PemKeyType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `com.google.crypto.tink.subtle.PemKeyType.algorithm` @AccessFlag PUBLIC_FINAL;
  `com.google.crypto.tink.subtle.Enums$HashType` `com.google.crypto.tink.subtle.PemKeyType.hash` @AccessFlag PUBLIC_FINAL;
  `int` `com.google.crypto.tink.subtle.PemKeyType.keySizeInBits` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `com.google.crypto.tink.subtle.PemKeyType.keyType` @AccessFlag PUBLIC_FINAL;
}
global `com.google.crypto.tink.subtle.PemKeyType`[] `@@com.google.crypto.tink.subtle.PemKeyType.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.lang.String` `@@com.google.crypto.tink.subtle.PemKeyType.BEGIN` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.ECDSA_P256_SHA256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.ECDSA_P384_SHA384` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.ECDSA_P521_SHA512` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `java.lang.String` `@@com.google.crypto.tink.subtle.PemKeyType.END` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.crypto.tink.subtle.PemKeyType.MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.crypto.tink.subtle.PemKeyType.PRIVATE_KEY` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.crypto.tink.subtle.PemKeyType.PUBLIC_KEY` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_2048_SHA256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_3072_SHA256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_4096_SHA256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_4096_SHA512` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_2048_SHA256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_3072_SHA256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_4096_SHA256` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.subtle.PemKeyType` `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_4096_SHA512` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L49c494.  v7:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L49c498.  v6:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA256` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L49c49c.  v1:= "RSA_PSS_2048_SHA256" @kind object;
  #L49c4a0.  v2:= 0I;
  #L49c4a2.  v3:= "RSA" @kind object;
  #L49c4a6.  v4:= "RSASSA-PSS" @kind object;
  #L49c4aa.  v5:= 2048I;
  #L49c4ae.  v0:= v7 @kind object;
  #L49c4b0.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L49c4b6.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_2048_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v7 @kind object;
  #L49c4ba.  v0:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L49c4be.  v14:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA256` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L49c4c2.  v9:= "RSA_PSS_3072_SHA256" @kind object;
  #L49c4c6.  v10:= 1I;
  #L49c4c8.  v11:= "RSA" @kind object;
  #L49c4cc.  v12:= "RSASSA-PSS" @kind object;
  #L49c4d0.  v13:= 3072I;
  #L49c4d4.  v8:= v0 @kind object;
  #L49c4d6.  call `<init>`(v8, v9, v10, v11, v12, v13, v14) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L49c4dc.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_3072_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v0 @kind object;
  #L49c4e0.  v0:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L49c4e4.  v7:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA256` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L49c4e8.  v2:= "RSA_PSS_4096_SHA256" @kind object;
  #L49c4ec.  v3:= 2I;
  #L49c4ee.  v4:= "RSA" @kind object;
  #L49c4f2.  v5:= "RSASSA-PSS" @kind object;
  #L49c4f6.  v6:= 4096I;
  #L49c4fa.  v1:= v0 @kind object;
  #L49c4fc.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L49c502.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_4096_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v0 @kind object;
  #L49c506.  v0:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L49c50a.  v14:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA512` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L49c50e.  v9:= "RSA_PSS_4096_SHA512" @kind object;
  #L49c512.  v10:= 3I;
  #L49c514.  v11:= "RSA" @kind object;
  #L49c518.  v12:= "RSASSA-PSS" @kind object;
  #L49c51c.  v13:= 4096I;
  #L49c520.  v8:= v0 @kind object;
  #L49c522.  call `<init>`(v8, v9, v10, v11, v12, v13, v14) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L49c528.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_4096_SHA512` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v0 @kind object;
  #L49c52c.  v0:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L49c530.  v7:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA256` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L49c534.  v2:= "RSA_SIGN_PKCS1_2048_SHA256" @kind object;
  #L49c538.  v3:= 4I;
  #L49c53a.  v4:= "RSA" @kind object;
  #L49c53e.  v5:= "RSASSA-PKCS1-v1_5" @kind object;
  #L49c542.  v6:= 2048I;
  #L49c546.  v1:= v0 @kind object;
  #L49c548.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L49c54e.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_2048_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v0 @kind object;
  #L49c552.  v0:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L49c556.  v14:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA256` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L49c55a.  v9:= "RSA_SIGN_PKCS1_3072_SHA256" @kind object;
  #L49c55e.  v10:= 5I;
  #L49c560.  v11:= "RSA" @kind object;
  #L49c564.  v12:= "RSASSA-PKCS1-v1_5" @kind object;
  #L49c568.  v13:= 3072I;
  #L49c56c.  v8:= v0 @kind object;
  #L49c56e.  call `<init>`(v8, v9, v10, v11, v12, v13, v14) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L49c574.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_3072_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v0 @kind object;
  #L49c578.  v0:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L49c57c.  v7:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA256` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L49c580.  v2:= "RSA_SIGN_PKCS1_4096_SHA256" @kind object;
  #L49c584.  v3:= 6I;
  #L49c586.  v4:= "RSA" @kind object;
  #L49c58a.  v5:= "RSASSA-PKCS1-v1_5" @kind object;
  #L49c58e.  v6:= 4096I;
  #L49c592.  v1:= v0 @kind object;
  #L49c594.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L49c59a.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_4096_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v0 @kind object;
  #L49c59e.  v0:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L49c5a2.  v14:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA512` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L49c5a6.  v9:= "RSA_SIGN_PKCS1_4096_SHA512" @kind object;
  #L49c5aa.  v10:= 7I;
  #L49c5ac.  v11:= "RSA" @kind object;
  #L49c5b0.  v12:= "RSASSA-PKCS1-v1_5" @kind object;
  #L49c5b4.  v13:= 4096I;
  #L49c5b8.  v8:= v0 @kind object;
  #L49c5ba.  call `<init>`(v8, v9, v10, v11, v12, v13, v14) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L49c5c0.  `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_4096_SHA512` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v0 @kind object;
  #L49c5c4.  v0:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L49c5c8.  v7:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA256` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L49c5cc.  v2:= "ECDSA_P256_SHA256" @kind object;
  #L49c5d0.  v3:= 8I;
  #L49c5d4.  v4:= "EC" @kind object;
  #L49c5d8.  v5:= "ECDSA" @kind object;
  #L49c5dc.  v6:= 256I;
  #L49c5e0.  v1:= v0 @kind object;
  #L49c5e2.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L49c5e8.  `@@com.google.crypto.tink.subtle.PemKeyType.ECDSA_P256_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v0 @kind object;
  #L49c5ec.  v0:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L49c5f0.  v14:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA384` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L49c5f4.  v9:= "ECDSA_P384_SHA384" @kind object;
  #L49c5f8.  v10:= 9I;
  #L49c5fc.  v11:= "EC" @kind object;
  #L49c600.  v12:= "ECDSA" @kind object;
  #L49c604.  v13:= 384I;
  #L49c608.  v8:= v0 @kind object;
  #L49c60a.  call `<init>`(v8, v9, v10, v11, v12, v13, v14) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L49c610.  `@@com.google.crypto.tink.subtle.PemKeyType.ECDSA_P384_SHA384` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v0 @kind object;
  #L49c614.  v0:= new `com.google.crypto.tink.subtle.PemKeyType`;
  #L49c618.  v7:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA512` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L49c61c.  v2:= "ECDSA_P521_SHA512" @kind object;
  #L49c620.  v3:= 10I;
  #L49c624.  v4:= "EC" @kind object;
  #L49c628.  v5:= "ECDSA" @kind object;
  #L49c62c.  v6:= 521I;
  #L49c630.  v1:= v0 @kind object;
  #L49c632.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L49c638.  `@@com.google.crypto.tink.subtle.PemKeyType.ECDSA_P521_SHA512` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v0 @kind object;
  #L49c63c.  v1:= 11I;
  #L49c640.  v1:= new `com.google.crypto.tink.subtle.PemKeyType`[v1];
  #L49c644.  v2:= `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_2048_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` @kind object;
  #L49c648.  v3:= 0I;
  #L49c64a.  v1[v3]:= v2 @kind object;
  #L49c64e.  v2:= `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_3072_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` @kind object;
  #L49c652.  v3:= 1I;
  #L49c654.  v1[v3]:= v2 @kind object;
  #L49c658.  v2:= `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_4096_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` @kind object;
  #L49c65c.  v3:= 2I;
  #L49c65e.  v1[v3]:= v2 @kind object;
  #L49c662.  v2:= `@@com.google.crypto.tink.subtle.PemKeyType.RSA_PSS_4096_SHA512` @type ^`com.google.crypto.tink.subtle.PemKeyType` @kind object;
  #L49c666.  v3:= 3I;
  #L49c668.  v1[v3]:= v2 @kind object;
  #L49c66c.  v2:= `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_2048_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` @kind object;
  #L49c670.  v3:= 4I;
  #L49c672.  v1[v3]:= v2 @kind object;
  #L49c676.  v2:= `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_3072_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` @kind object;
  #L49c67a.  v3:= 5I;
  #L49c67c.  v1[v3]:= v2 @kind object;
  #L49c680.  v2:= `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_4096_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` @kind object;
  #L49c684.  v3:= 6I;
  #L49c686.  v1[v3]:= v2 @kind object;
  #L49c68a.  v2:= `@@com.google.crypto.tink.subtle.PemKeyType.RSA_SIGN_PKCS1_4096_SHA512` @type ^`com.google.crypto.tink.subtle.PemKeyType` @kind object;
  #L49c68e.  v3:= 7I;
  #L49c690.  v1[v3]:= v2 @kind object;
  #L49c694.  v2:= `@@com.google.crypto.tink.subtle.PemKeyType.ECDSA_P256_SHA256` @type ^`com.google.crypto.tink.subtle.PemKeyType` @kind object;
  #L49c698.  v3:= 8I;
  #L49c69c.  v1[v3]:= v2 @kind object;
  #L49c6a0.  v2:= `@@com.google.crypto.tink.subtle.PemKeyType.ECDSA_P384_SHA384` @type ^`com.google.crypto.tink.subtle.PemKeyType` @kind object;
  #L49c6a4.  v3:= 9I;
  #L49c6a8.  v1[v3]:= v2 @kind object;
  #L49c6ac.  v2:= 10I;
  #L49c6b0.  v1[v2]:= v0 @kind object;
  #L49c6b4.  `@@com.google.crypto.tink.subtle.PemKeyType.$VALUES` @type ^`com.google.crypto.tink.subtle.PemKeyType`[] := v1 @kind object;
  #L49c6b8.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.PemKeyType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `com.google.crypto.tink.subtle.Enums$HashType` v6 @kind object) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILcom/google/crypto/tink/subtle/Enums$HashType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L49c6cc.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L49c6d2.  v0.`com.google.crypto.tink.subtle.PemKeyType.keyType` @type ^`java.lang.String` := v3 @kind object;
  #L49c6d6.  v0.`com.google.crypto.tink.subtle.PemKeyType.algorithm` @type ^`java.lang.String` := v4 @kind object;
  #L49c6da.  v0.`com.google.crypto.tink.subtle.PemKeyType.keySizeInBits` @type ^`int` := v5;
  #L49c6de.  v0.`com.google.crypto.tink.subtle.PemKeyType.hash` @type ^`com.google.crypto.tink.subtle.Enums$HashType` := v6 @kind object;
  #L49c6e2.  return @kind void;
}
procedure `java.security.Key` `getPrivateKey`(`com.google.crypto.tink.subtle.PemKeyType` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.getPrivateKey:([B)Ljava/security/Key;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L49c1c0.  v0:= `@@com.google.crypto.tink.subtle.EngineFactory.KEY_FACTORY` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L49c1c4.  v1:= v2.`com.google.crypto.tink.subtle.PemKeyType.keyType` @type ^`java.lang.String` @kind object;
  #L49c1c8.  call temp:= `getInstance`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L49c1ce.  v0:= temp @kind object;
  #L49c1d0.  v0:= (`java.security.KeyFactory`) v0 @kind object;
  #L49c1d4.  v1:= new `java.security.spec.PKCS8EncodedKeySpec`;
  #L49c1d8.  call `<init>`(v1, v3) @signature `Ljava/security/spec/PKCS8EncodedKeySpec;.<init>:([B)V` @kind direct;
  #L49c1de.  call temp:= `generatePrivate`(v0, v1) @signature `Ljava/security/KeyFactory;.generatePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;` @kind virtual;
  #L49c1e4.  v3:= temp @kind object;
  #L49c1e6.  call temp:= `validate`(v2, v3) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.validate:(Ljava/security/Key;)Ljava/security/Key;` @kind direct;
  #L49c1ec.  v3:= temp @kind object;
  #L49c1ee.  return v3 @kind object;
}
procedure `java.security.Key` `getPublicKey`(`com.google.crypto.tink.subtle.PemKeyType` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.getPublicKey:([B)Ljava/security/Key;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L49c200.  v0:= `@@com.google.crypto.tink.subtle.EngineFactory.KEY_FACTORY` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L49c204.  v1:= v2.`com.google.crypto.tink.subtle.PemKeyType.keyType` @type ^`java.lang.String` @kind object;
  #L49c208.  call temp:= `getInstance`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L49c20e.  v0:= temp @kind object;
  #L49c210.  v0:= (`java.security.KeyFactory`) v0 @kind object;
  #L49c214.  v1:= new `java.security.spec.X509EncodedKeySpec`;
  #L49c218.  call `<init>`(v1, v3) @signature `Ljava/security/spec/X509EncodedKeySpec;.<init>:([B)V` @kind direct;
  #L49c21e.  call temp:= `generatePublic`(v0, v1) @signature `Ljava/security/KeyFactory;.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;` @kind virtual;
  #L49c224.  v3:= temp @kind object;
  #L49c226.  call temp:= `validate`(v2, v3) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.validate:(Ljava/security/Key;)Ljava/security/Key;` @kind direct;
  #L49c22c.  v3:= temp @kind object;
  #L49c22e.  return v3 @kind object;
}
procedure `java.security.Key` `validate`(`com.google.crypto.tink.subtle.PemKeyType` v5 @kind this, `java.security.Key` v6 @kind object) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.validate:(Ljava/security/Key;)Ljava/security/Key;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L49c370.  v0:= v5.`com.google.crypto.tink.subtle.PemKeyType.keyType` @type ^`java.lang.String` @kind object;
  #L49c374.  v1:= "RSA" @kind object;
  #L49c378.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L49c37e.  v0:= temp;
  #L49c380.  v1:= 1I;
  #L49c382.  v2:= 0I;
  #L49c384.  v3:= 2I;
  #L49c386.  if v0 == 0 then goto L49c3e2;
  #L49c38a.  v0:= v6 @kind object;
  #L49c38c.  v0:= (`java.security.interfaces.RSAKey`) v0 @kind object;
  #L49c390.  call temp:= `getModulus`(v0) @signature `Ljava/security/interfaces/RSAKey;.getModulus:()Ljava/math/BigInteger;` @kind interface;
  #L49c396.  v0:= temp @kind object;
  #L49c398.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L49c39e.  v0:= temp;
  #L49c3a0.  v4:= v5.`com.google.crypto.tink.subtle.PemKeyType.keySizeInBits` @type ^`int`;
  #L49c3a4.  if v0 != v4 then goto L49c3aa;
  #L49c3a8.  goto L49c414;
  #L49c3aa.  v6:= new `java.security.GeneralSecurityException`;
  #L49c3ae.  v3:= new `java.lang.Object`[v3];
  #L49c3b2.  v4:= v5.`com.google.crypto.tink.subtle.PemKeyType.keySizeInBits` @type ^`int`;
  #L49c3b6.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49c3bc.  v4:= temp @kind object;
  #L49c3be.  v3[v2]:= v4 @kind object;
  #L49c3c2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49c3c8.  v0:= temp @kind object;
  #L49c3ca.  v3[v1]:= v0 @kind object;
  #L49c3ce.  v0:= "invalid RSA key size, want %d got %d" @kind object;
  #L49c3d2.  call temp:= `format`(v0, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L49c3d8.  v0:= temp @kind object;
  #L49c3da.  call `<init>`(v6, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49c3e0.  throw v6;
  #L49c3e2.  v0:= v6 @kind object;
  #L49c3e4.  v0:= (`java.security.interfaces.ECKey`) v0 @kind object;
  #L49c3e8.  call temp:= `getParams`(v0) @signature `Ljava/security/interfaces/ECKey;.getParams:()Ljava/security/spec/ECParameterSpec;` @kind interface;
  #L49c3ee.  v0:= temp @kind object;
  #L49c3f0.  call temp:= `isNistEcParameterSpec`(v0) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves;.isNistEcParameterSpec:(Ljava/security/spec/ECParameterSpec;)Z` @kind static;
  #L49c3f6.  v4:= temp;
  #L49c3f8.  if v4 == 0 then goto L49c44e;
  #L49c3fc.  call temp:= `getCurve`(v0) @signature `Ljava/security/spec/ECParameterSpec;.getCurve:()Ljava/security/spec/EllipticCurve;` @kind virtual;
  #L49c402.  v0:= temp @kind object;
  #L49c404.  call temp:= `c`(v0) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves;.c:(Ljava/security/spec/EllipticCurve;)I` @kind static;
  #L49c40a.  v0:= temp;
  #L49c40c.  v4:= v5.`com.google.crypto.tink.subtle.PemKeyType.keySizeInBits` @type ^`int`;
  #L49c410.  if v0 != v4 then goto L49c416;
  #L49c414.  return v6 @kind object;
  #L49c416.  v6:= new `java.security.GeneralSecurityException`;
  #L49c41a.  v3:= new `java.lang.Object`[v3];
  #L49c41e.  v4:= v5.`com.google.crypto.tink.subtle.PemKeyType.keySizeInBits` @type ^`int`;
  #L49c422.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49c428.  v4:= temp @kind object;
  #L49c42a.  v3[v2]:= v4 @kind object;
  #L49c42e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49c434.  v0:= temp @kind object;
  #L49c436.  v3[v1]:= v0 @kind object;
  #L49c43a.  v0:= "invalid EC key size, want %d got %d" @kind object;
  #L49c43e.  call temp:= `format`(v0, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L49c444.  v0:= temp @kind object;
  #L49c446.  call `<init>`(v6, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49c44c.  throw v6;
  #L49c44e.  v6:= new `java.security.GeneralSecurityException`;
  #L49c452.  v1:= new `java.lang.StringBuilder`;
  #L49c456.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49c45c.  v2:= "unsupport EC spec: " @kind object;
  #L49c460.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49c466.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L49c46c.  v0:= temp @kind object;
  #L49c46e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49c474.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49c47a.  v0:= temp @kind object;
  #L49c47c.  call `<init>`(v6, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49c482.  throw v6;
}
procedure `com.google.crypto.tink.subtle.PemKeyType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.valueOf:(Ljava/lang/String;)Lcom/google/crypto/tink/subtle/PemKeyType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49c178.  v0:= constclass @type ^`com.google.crypto.tink.subtle.PemKeyType` @kind object;
  #L49c17c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L49c182.  v1:= temp @kind object;
  #L49c184.  v1:= (`com.google.crypto.tink.subtle.PemKeyType`) v1 @kind object;
  #L49c188.  return v1 @kind object;
}
procedure `com.google.crypto.tink.subtle.PemKeyType`[] `values`() @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.values:()[Lcom/google/crypto/tink/subtle/PemKeyType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49c19c.  v0:= `@@com.google.crypto.tink.subtle.PemKeyType.$VALUES` @type ^`com.google.crypto.tink.subtle.PemKeyType`[] @kind object;
  #L49c1a0.  call temp:= `clone`(v0) @signature `[Lcom/google/crypto/tink/subtle/PemKeyType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L49c1a6.  v0:= temp @kind object;
  #L49c1a8.  v0:= (`com.google.crypto.tink.subtle.PemKeyType`[]) v0 @kind object;
  #L49c1ac.  return v0 @kind object;
}
procedure `java.security.Key` `readKey`(`com.google.crypto.tink.subtle.PemKeyType` v7 @kind this, `java.io.BufferedReader` v8 @kind object) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.readKey:(Ljava/io/BufferedReader;)Ljava/security/Key;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49c240.  call temp:= `readLine`(v8) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L49c246.  v0:= temp @kind object;
  #L49c248.  if v0 == 0 then goto L49c266;
  #L49c24c.  v1:= "-----BEGIN " @kind object;
  #L49c250.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L49c256.  v1:= temp;
  #L49c258.  if v1 != 0 then goto L49c266;
  #L49c25c.  call temp:= `readLine`(v8) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L49c262.  v0:= temp @kind object;
  #L49c264.  goto L49c248;
  #L49c266.  v1:= 0I;
  #L49c268.  if v0 != 0 then goto L49c26e;
  #L49c26c.  return v1 @kind object;
  #L49c26e.  call temp:= `trim`(v0) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L49c274.  v0:= temp @kind object;
  #L49c276.  v2:= 11I;
  #L49c27a.  call temp:= `substring`(v0, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L49c280.  v0:= temp @kind object;
  #L49c282.  v2:= "-----" @kind object;
  #L49c286.  call temp:= `indexOf`(v0, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L49c28c.  v3:= temp;
  #L49c28e.  if v3 >= 0 then goto L49c294;
  #L49c292.  return v1 @kind object;
  #L49c294.  v4:= 0I;
  #L49c296.  call temp:= `substring`(v0, v4, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L49c29c.  v0:= temp @kind object;
  #L49c29e.  v3:= new `java.lang.StringBuilder`;
  #L49c2a2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49c2a8.  v5:= "-----END " @kind object;
  #L49c2ac.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49c2b2.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49c2b8.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49c2be.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49c2c4.  v2:= temp @kind object;
  #L49c2c6.  v3:= new `java.lang.StringBuilder`;
  #L49c2ca.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49c2d0.  call temp:= `readLine`(v8) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L49c2d6.  v5:= temp @kind object;
  #L49c2d8.  if v5 == 0 then goto L49c304;
  #L49c2dc.  v6:= ":" @kind object;
  #L49c2e0.  call temp:= `indexOf`(v5, v6) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L49c2e6.  v6:= temp;
  #L49c2e8.  if v6 <= 0 then goto L49c2ee;
  #L49c2ec.  goto L49c2d0;
  #L49c2ee.  call temp:= `contains`(v5, v2) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L49c2f4.  v6:= temp;
  #L49c2f6.  if v6 == 0 then goto L49c2fc;
  #L49c2fa.  goto L49c304;
  #L49c2fc.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49c302.  goto L49c2d0;
  #L49c304.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49c30a.  v8:= temp @kind object;
  #L49c30c.  call temp:= `decode`(v8, v4) @signature `Lcom/google/crypto/tink/subtle/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L49c312.  v8:= temp @kind object;
  #L49c314.  v2:= "PUBLIC KEY" @kind object;
  #L49c318.  call temp:= `contains`(v0, v2) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L49c31e.  v2:= temp;
  #L49c320.  if v2 == 0 then goto L49c32e;
  #L49c324.  call temp:= `getPublicKey`(v7, v8) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.getPublicKey:([B)Ljava/security/Key;` @kind direct;
  #L49c32a.  v8:= temp @kind object;
  #L49c32c.  return v8 @kind object;
  #L49c32e.  v2:= "PRIVATE KEY" @kind object;
  #L49c332.  call temp:= `contains`(v0, v2) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L49c338.  v0:= temp;
  #L49c33a.  if v0 == 0 then goto L49c348;
  #L49c33e.  call temp:= `getPrivateKey`(v7, v8) @signature `Lcom/google/crypto/tink/subtle/PemKeyType;.getPrivateKey:([B)Ljava/security/Key;` @kind direct;
  #L49c344.  v8:= temp @kind object;
  #L49c346.  return v8 @kind object;
  #L49c348.  return v1 @kind object;
  catch `java.security.GeneralSecurityException` @[L49c304..L49c346] goto L49c348;
  catch `java.lang.IllegalArgumentException` @[L49c304..L49c346] goto L49c348;
}
