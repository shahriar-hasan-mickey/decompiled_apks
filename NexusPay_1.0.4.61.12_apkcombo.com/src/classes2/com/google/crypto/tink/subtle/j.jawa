record `com.google.crypto.tink.subtle.j` @kind class @AccessFlag  {
}
procedure `byte`[] `a`(`byte`[] v53 @kind object, `byte`[] v54 @kind object) @signature `Lcom/google/crypto/tink/subtle/j;.a:([B[B)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;
    v31;
    v32;
    v33;
    v34;
    v35;
    v36;
    v37;
    v38;
    v39;
    v40;
    v41;
    v42;
    v43;
    v44;
    v45;
    v46;
    v47;
    v48;
    v49;
    v50;
    v51;
    v52;

  #L49c6f4.  v0:= v53 @kind object;
  #L49c6f8.  v1:= v54 @kind object;
  #L49c6fc.  v2:= length @variable v0;
  #L49c6fe.  v3:= 32I;
  #L49c702.  if v2 != v3 then goto L49cac4;
  #L49c706.  v2:= 0I;
  #L49c708.  call temp:= `c`(v0, v2, v2) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L49c70e.  v4:= temp @kind wide;
  #L49c710.  v6:= 67108863L;
  #L49c716.  v4:= v4 ^& v6 @kind long;
  #L49c718.  v8:= 3I;
  #L49c71a.  v9:= 2I;
  #L49c71c.  call temp:= `c`(v0, v8, v9) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L49c722.  v10:= temp @kind wide;
  #L49c724.  v12:= 67108611L;
  #L49c72a.  v10:= v10 ^& v12 @kind long;
  #L49c72c.  v12:= 6I;
  #L49c72e.  v13:= 4I;
  #L49c730.  call temp:= `c`(v0, v12, v13) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L49c736.  v14:= temp @kind wide;
  #L49c738.  v16:= 67092735L;
  #L49c73e.  v14:= v14 ^& v16 @kind long;
  #L49c742.  v3:= 9I;
  #L49c746.  call temp:= `c`(v0, v3, v12) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L49c74c.  v17:= temp @kind wide;
  #L49c74e.  v19:= 66076671L;
  #L49c754.  v17:= v17 ^& v19 @kind long;
  #L49c758.  v6:= 12I;
  #L49c75c.  v7:= 8I;
  #L49c760.  call temp:= `c`(v0, v6, v7) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L49c766.  v21:= temp @kind wide;
  #L49c768.  v23:= 1048575L;
  #L49c76e.  v21:= v21 ^& v23 @kind long;
  #L49c772.  v23:= 5L;
  #L49c776.  v25:= v10 * v23 @kind long;
  #L49c77a.  v27:= v14 * v23 @kind long;
  #L49c77e.  v29:= v17 * v23 @kind long;
  #L49c782.  v31:= v21 * v23 @kind long;
  #L49c786.  v6:= 17I;
  #L49c78a.  v6:= new `byte`[v6];
  #L49c78e.  v33:= 0L;
  #L49c792.  v35:= v33 @kind wide;
  #L49c796.  v37:= v35 @kind wide;
  #L49c79a.  v39:= v37 @kind wide;
  #L49c79e.  v41:= v39 @kind wide;
  #L49c7a2.  v7:= 0I;
  #L49c7a4.  v3:= length @variable v1;
  #L49c7a6.  v12:= 16I;
  #L49c7aa.  v43:= 26I;
  #L49c7ae.  if v7 >= v3 then goto L49c936;
  #L49c7b2.  call `b`(v6, v1, v7) @signature `Lcom/google/crypto/tink/subtle/j;.b:([B[BI)V` @kind static;
  #L49c7b8.  call temp:= `c`(v6, v2, v2) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L49c7be.  v44:= temp @kind wide;
  #L49c7c0.  v41:= v41 + v44 @kind long;
  #L49c7c4.  call temp:= `c`(v6, v8, v9) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L49c7ca.  v44:= temp @kind wide;
  #L49c7cc.  v33:= v33 + v44 @kind long;
  #L49c7d0.  v3:= 6I;
  #L49c7d2.  call temp:= `c`(v6, v3, v13) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L49c7d8.  v44:= temp @kind wide;
  #L49c7da.  v35:= v35 + v44 @kind long;
  #L49c7de.  v8:= 9I;
  #L49c7e2.  call temp:= `c`(v6, v8, v3) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L49c7e8.  v45:= temp @kind wide;
  #L49c7ea.  v37:= v37 + v45 @kind long;
  #L49c7ee.  v3:= 8I;
  #L49c7f2.  v8:= 12I;
  #L49c7f6.  call temp:= `c`(v6, v8, v3) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @kind static;
  #L49c7fc.  v45:= temp @kind wide;
  #L49c7fe.  v3:= v6[v12] @kind byte;
  #L49c802.  v8:= 24I;
  #L49c806.  v3:= v3 ^< v8 @kind int;
  #L49c808.  v2:= (`long`) v3 @kind i2l;
  #L49c80a.  v2:= v45 ^| v2 @kind long;
  #L49c80e.  v39:= v39 + v2 @kind long;
  #L49c812.  v2:= v41 * v4 @kind long;
  #L49c816.  v45:= v33 * v31 @kind long;
  #L49c81a.  v2:= v2 + v45 @kind long;
  #L49c81e.  v45:= v35 * v29 @kind long;
  #L49c822.  v2:= v2 + v45 @kind long;
  #L49c826.  v45:= v37 * v27 @kind long;
  #L49c82a.  v2:= v2 + v45 @kind long;
  #L49c82e.  v45:= v39 * v25 @kind long;
  #L49c832.  v2:= v2 + v45 @kind long;
  #L49c836.  v45:= v41 * v10 @kind long;
  #L49c83a.  v47:= v33 * v4 @kind long;
  #L49c83e.  v45:= v45 + v47 @kind long;
  #L49c842.  v47:= v35 * v31 @kind long;
  #L49c846.  v45:= v45 + v47 @kind long;
  #L49c84a.  v47:= v37 * v29 @kind long;
  #L49c84e.  v45:= v45 + v47 @kind long;
  #L49c852.  v47:= v39 * v27 @kind long;
  #L49c856.  v45:= v45 + v47 @kind long;
  #L49c85a.  v47:= v41 * v14 @kind long;
  #L49c85e.  v49:= v33 * v10 @kind long;
  #L49c862.  v47:= v47 + v49 @kind long;
  #L49c866.  v49:= v35 * v4 @kind long;
  #L49c86a.  v47:= v47 + v49 @kind long;
  #L49c86e.  v49:= v37 * v31 @kind long;
  #L49c872.  v47:= v47 + v49 @kind long;
  #L49c876.  v49:= v39 * v29 @kind long;
  #L49c87a.  v47:= v47 + v49 @kind long;
  #L49c87e.  v49:= v41 * v17 @kind long;
  #L49c882.  v51:= v33 * v14 @kind long;
  #L49c886.  v49:= v49 + v51 @kind long;
  #L49c88a.  v51:= v35 * v10 @kind long;
  #L49c88e.  v49:= v49 + v51 @kind long;
  #L49c892.  v51:= v37 * v4 @kind long;
  #L49c896.  v49:= v49 + v51 @kind long;
  #L49c89a.  v51:= v39 * v31 @kind long;
  #L49c89e.  v49:= v49 + v51 @kind long;
  #L49c8a2.  v41:= v41 * v21 @kind long;
  #L49c8a6.  v33:= v33 * v17 @kind long;
  #L49c8aa.  v41:= v41 + v33 @kind long;
  #L49c8ae.  v35:= v35 * v14 @kind long;
  #L49c8b2.  v41:= v41 + v35 @kind long;
  #L49c8b6.  v37:= v37 * v10 @kind long;
  #L49c8ba.  v41:= v41 + v37 @kind long;
  #L49c8be.  v39:= v39 * v4 @kind long;
  #L49c8c2.  v41:= v41 + v39 @kind long;
  #L49c8c6.  v33:= v2 ^> v43 @kind long;
  #L49c8ca.  v19:= 67108863L;
  #L49c8d0.  v2:= v2 ^& v19 @kind long;
  #L49c8d4.  v45:= v45 + v33 @kind long;
  #L49c8d8.  v33:= v45 ^> v43 @kind long;
  #L49c8dc.  v35:= v45 ^& v19 @kind long;
  #L49c8e0.  v47:= v47 + v33 @kind long;
  #L49c8e4.  v33:= v47 ^> v43 @kind long;
  #L49c8e8.  v37:= v47 ^& v19 @kind long;
  #L49c8ec.  v49:= v49 + v33 @kind long;
  #L49c8f0.  v33:= v49 ^> v43 @kind long;
  #L49c8f4.  v39:= v49 ^& v19 @kind long;
  #L49c8f8.  v41:= v41 + v33 @kind long;
  #L49c8fc.  v33:= v41 ^> v43 @kind long;
  #L49c900.  v41:= v41 ^& v19 @kind long;
  #L49c904.  v33:= v33 * v23 @kind long;
  #L49c908.  v2:= v2 + v33 @kind long;
  #L49c90c.  v33:= v2 ^> v43 @kind long;
  #L49c910.  v2:= v2 ^& v19 @kind long;
  #L49c914.  v33:= v35 + v33 @kind long;
  #L49c918.  v7:= v7 + 16;
  #L49c91c.  v35:= v37 @kind wide;
  #L49c920.  v37:= v39 @kind wide;
  #L49c924.  v39:= v41 @kind wide;
  #L49c928.  v8:= 3I;
  #L49c92a.  v12:= 6I;
  #L49c92c.  v41:= v2 @kind wide;
  #L49c930.  v2:= 0I;
  #L49c932.  goto L49c7a4;
  #L49c936.  v19:= 67108863L;
  #L49c93c.  v1:= v33 ^> v43 @kind long;
  #L49c940.  v3:= v33 ^& v19 @kind long;
  #L49c944.  v35:= v35 + v1 @kind long;
  #L49c948.  v1:= v35 ^> v43 @kind long;
  #L49c94c.  v5:= v35 ^& v19 @kind long;
  #L49c950.  v37:= v37 + v1 @kind long;
  #L49c954.  v1:= v37 ^> v43 @kind long;
  #L49c958.  v9:= v37 ^& v19 @kind long;
  #L49c95c.  v39:= v39 + v1 @kind long;
  #L49c960.  v1:= v39 ^> v43 @kind long;
  #L49c964.  v14:= v39 ^& v19 @kind long;
  #L49c968.  v1:= v1 * v23 @kind long;
  #L49c96c.  v41:= v41 + v1 @kind long;
  #L49c970.  v1:= v41 ^> v43 @kind long;
  #L49c974.  v17:= v41 ^& v19 @kind long;
  #L49c978.  v3:= v3 + v1 @kind long;
  #L49c97a.  v23:= v17 + v23 @kind long;
  #L49c97e.  v1:= v23 ^> v43 @kind long;
  #L49c982.  v21:= v23 ^& v19 @kind long;
  #L49c986.  v1:= v1 + v3 @kind long;
  #L49c988.  v23:= v1 ^> v43 @kind long;
  #L49c98c.  v1:= v1 ^& v19 @kind long;
  #L49c990.  v23:= v5 + v23 @kind long;
  #L49c994.  v25:= v23 ^> v43 @kind long;
  #L49c998.  v23:= v23 ^& v19 @kind long;
  #L49c99c.  v25:= v9 + v25 @kind long;
  #L49c9a0.  v27:= v25 ^> v43 @kind long;
  #L49c9a4.  v19:= v25 ^& v19 @kind long;
  #L49c9a8.  v27:= v14 + v27 @kind long;
  #L49c9ac.  v25:= 67108864L;
  #L49c9b2.  v27:= v27 - v25 @kind long;
  #L49c9b6.  v7:= 63I;
  #L49c9ba.  v12:= v27 ^> v7 @kind long;
  #L49c9be.  v17:= v17 ^& v12 @kind long;
  #L49c9c2.  v3:= v3 ^& v12 @kind long;
  #L49c9c4.  v5:= v5 ^& v12 @kind long;
  #L49c9c6.  v9:= v9 ^& v12 @kind long;
  #L49c9c8.  v14:= v14 ^& v12 @kind long;
  #L49c9ca.  v12:= ~v12 @kind long;
  #L49c9cc.  v21:= v21 ^& v12 @kind long;
  #L49c9d0.  v17:= v17 ^| v21 @kind long;
  #L49c9d4.  v1:= v1 ^& v12 @kind long;
  #L49c9d6.  v1:= v1 ^| v3 @kind long;
  #L49c9d8.  v3:= v23 ^& v12 @kind long;
  #L49c9dc.  v3:= v3 ^| v5 @kind long;
  #L49c9de.  v5:= v19 ^& v12 @kind long;
  #L49c9e2.  v5:= v5 ^| v9 @kind long;
  #L49c9e4.  v9:= v27 ^& v12 @kind long;
  #L49c9e8.  v9:= v9 ^| v14 @kind long;
  #L49c9ea.  v12:= v1 ^< v43 @kind long;
  #L49c9ee.  v12:= v17 ^| v12 @kind long;
  #L49c9f2.  v14:= 4294967295L;
  #L49c9fc.  v12:= v12 ^& v14 @kind long;
  #L49c9fe.  v7:= 6I;
  #L49ca00.  v1:= v1 ^> v7 @kind long;
  #L49ca02.  v7:= 20I;
  #L49ca06.  v17:= v3 ^< v7 @kind long;
  #L49ca0a.  v1:= v1 ^| v17 @kind long;
  #L49ca0e.  v1:= v1 ^& v14 @kind long;
  #L49ca10.  v17:= 12I;
  #L49ca14.  v3:= v3 ^> v17 @kind long;
  #L49ca18.  v17:= 14I;
  #L49ca1c.  v17:= v5 ^< v17 @kind long;
  #L49ca20.  v3:= v3 ^| v17 @kind long;
  #L49ca24.  v3:= v3 ^& v14 @kind long;
  #L49ca26.  v17:= 18I;
  #L49ca2a.  v5:= v5 ^> v17 @kind long;
  #L49ca2e.  v17:= 8I;
  #L49ca32.  v9:= v9 ^< v17 @kind long;
  #L49ca36.  v5:= v5 ^| v9 @kind long;
  #L49ca38.  v5:= v5 ^& v14 @kind long;
  #L49ca3a.  v9:= 16I;
  #L49ca3e.  call temp:= `d`(v0, v9) @signature `Lcom/google/crypto/tink/subtle/j;.d:([BI)J` @kind static;
  #L49ca44.  v17:= temp @kind wide;
  #L49ca46.  v12:= v12 + v17 @kind long;
  #L49ca4a.  v9:= v12 ^& v14 @kind long;
  #L49ca4e.  call temp:= `d`(v0, v7) @signature `Lcom/google/crypto/tink/subtle/j;.d:([BI)J` @kind static;
  #L49ca54.  v17:= temp @kind wide;
  #L49ca56.  v1:= v1 + v17 @kind long;
  #L49ca5a.  v7:= 32I;
  #L49ca5e.  v12:= v12 ^> v7 @kind long;
  #L49ca60.  v1:= v1 + v12 @kind long;
  #L49ca62.  v12:= v1 ^& v14 @kind long;
  #L49ca66.  v8:= 24I;
  #L49ca6a.  call temp:= `d`(v0, v8) @signature `Lcom/google/crypto/tink/subtle/j;.d:([BI)J` @kind static;
  #L49ca70.  v17:= temp @kind wide;
  #L49ca72.  v3:= v3 + v17 @kind long;
  #L49ca76.  v1:= v1 ^> v7 @kind long;
  #L49ca78.  v3:= v3 + v1 @kind long;
  #L49ca7a.  v1:= v3 ^& v14 @kind long;
  #L49ca7e.  v8:= 28I;
  #L49ca82.  call temp:= `d`(v0, v8) @signature `Lcom/google/crypto/tink/subtle/j;.d:([BI)J` @kind static;
  #L49ca88.  v17:= temp @kind wide;
  #L49ca8a.  v5:= v5 + v17 @kind long;
  #L49ca8e.  v3:= v3 ^> v7 @kind long;
  #L49ca90.  v5:= v5 + v3 @kind long;
  #L49ca92.  v3:= v5 ^& v14 @kind long;
  #L49ca96.  v0:= 16I;
  #L49ca9a.  v0:= new `byte`[v0];
  #L49ca9e.  v5:= 0I;
  #L49caa0.  call `e`(v0, v9, v5) @signature `Lcom/google/crypto/tink/subtle/j;.e:([BJI)V` @kind static;
  #L49caa6.  v5:= 4I;
  #L49caa8.  call `e`(v0, v12, v5) @signature `Lcom/google/crypto/tink/subtle/j;.e:([BJI)V` @kind static;
  #L49caae.  v5:= 8I;
  #L49cab2.  call `e`(v0, v1, v5) @signature `Lcom/google/crypto/tink/subtle/j;.e:([BJI)V` @kind static;
  #L49cab8.  v1:= 12I;
  #L49cabc.  call `e`(v0, v3, v1) @signature `Lcom/google/crypto/tink/subtle/j;.e:([BJI)V` @kind static;
  #L49cac2.  return v0 @kind object;
  #L49cac4.  v0:= new `java.lang.IllegalArgumentException`;
  #L49cac8.  v1:= "The key length in bytes must be 32." @kind object;
  #L49cacc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49cad2.  throw v0;
}
procedure `void` `b`(`byte`[] v3 @kind object, `byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/google/crypto/tink/subtle/j;.b:([B[BI)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49cb68.  v0:= length @variable v4;
  #L49cb6a.  v0:= v0 - v5 @kind int;
  #L49cb6c.  v1:= 16I;
  #L49cb70.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L49cb76.  v0:= temp;
  #L49cb78.  v2:= 0I;
  #L49cb7a.  call `arraycopy`(v4, v5, v3, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L49cb80.  v4:= 1I;
  #L49cb82.  v3[v0]:= v4 @kind byte;
  #L49cb86.  if v0 == v1 then goto L49cb94;
  #L49cb8a.  v0:= v0 + v4 @kind int;
  #L49cb8c.  v4:= length @variable v3;
  #L49cb8e.  call `fill`(v3, v0, v4, v2) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #L49cb94.  return @kind void;
}
procedure `long` `c`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/subtle/j;.c:([BII)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L49cae4.  call temp:= `d`(v2, v3) @signature `Lcom/google/crypto/tink/subtle/j;.d:([BI)J` @kind static;
  #L49caea.  v2:= temp @kind wide;
  #L49caec.  v2:= v2 ^> v4 @kind long;
  #L49caee.  v0:= 67108863L;
  #L49caf4.  v2:= v2 ^& v0 @kind long;
  #L49caf6.  return v2 @kind wide;
}
procedure `long` `d`(`byte`[] v2 @kind object, `int` v3 ) @signature `Lcom/google/crypto/tink/subtle/j;.d:([BI)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L49cb08.  v0:= v2[v3] @kind byte;
  #L49cb0c.  v0:= v0 ^& 255;
  #L49cb10.  v1:= v3 + 1;
  #L49cb14.  v1:= v2[v1] @kind byte;
  #L49cb18.  v1:= v1 ^& 255;
  #L49cb1c.  v1:= v1 ^< 8;
  #L49cb20.  v0:= v0 ^| v1 @kind int;
  #L49cb22.  v1:= v3 + 2;
  #L49cb26.  v1:= v2[v1] @kind byte;
  #L49cb2a.  v1:= v1 ^& 255;
  #L49cb2e.  v1:= v1 ^< 16;
  #L49cb32.  v0:= v0 ^| v1 @kind int;
  #L49cb34.  v3:= v3 + 3;
  #L49cb38.  v2:= v2[v3] @kind byte;
  #L49cb3c.  v2:= v2 ^& 255;
  #L49cb40.  v2:= v2 ^< 24;
  #L49cb44.  v2:= v2 ^| v0 @kind int;
  #L49cb46.  v2:= (`long`) v2 @kind i2l;
  #L49cb48.  v0:= 4294967295L;
  #L49cb52.  v2:= v2 ^& v0 @kind long;
  #L49cb54.  return v2 @kind wide;
}
procedure `void` `e`(`byte`[] v4 @kind object, `long` v5 , `int` v7 ) @signature `Lcom/google/crypto/tink/subtle/j;.e:([BJI)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L49cba8.  v0:= 0I;
  #L49cbaa.  v1:= 4I;
  #L49cbac.  if v0 >= v1 then goto L49cbce;
  #L49cbb0.  v1:= v7 + v0 @kind int;
  #L49cbb4.  v2:= 255L;
  #L49cbb8.  v2:= v2 ^& v5 @kind long;
  #L49cbba.  v3:= (`int`) v2 @kind l2i;
  #L49cbbc.  v2:= (`byte`) v3 @kind i2b;
  #L49cbbe.  v4[v1]:= v2 @kind byte;
  #L49cbc2.  v0:= v0 + 1;
  #L49cbc6.  v1:= 8I;
  #L49cbca.  v5:= v5 ^> v1 @kind long;
  #L49cbcc.  goto L49cbaa;
  #L49cbce.  return @kind void;
}
procedure `void` `f`(`byte`[] v0 @kind object, `byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/j;.f:([B[B[B)V` @AccessFlag STATIC {
    temp;

  #L49cbe0.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/j;.a:([B[B)[B` @kind static;
  #L49cbe6.  v0:= temp @kind object;
  #L49cbe8.  call temp:= `equal`(v0, v2) @signature `Lcom/google/crypto/tink/subtle/Bytes;.equal:([B[B)Z` @kind static;
  #L49cbee.  v0:= temp;
  #L49cbf0.  if v0 == 0 then goto L49cbf6;
  #L49cbf4.  return @kind void;
  #L49cbf6.  v0:= new `java.security.GeneralSecurityException`;
  #L49cbfa.  v1:= "invalid MAC" @kind object;
  #L49cbfe.  call `<init>`(v0, v1) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49cc04.  throw v0;
}
