record `com.google.crypto.tink.subtle.EngineFactory` @kind class @AccessFlag PUBLIC_FINAL {
  `com.google.crypto.tink.subtle.EngineWrapper` `com.google.crypto.tink.subtle.EngineFactory.a` @AccessFlag PRIVATE;
  `java.util.List` `com.google.crypto.tink.subtle.EngineFactory.b` @AccessFlag PRIVATE;
  `boolean` `com.google.crypto.tink.subtle.EngineFactory.c` @AccessFlag PRIVATE;
}
global `com.google.crypto.tink.subtle.EngineFactory` `@@com.google.crypto.tink.subtle.EngineFactory.CIPHER` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.subtle.EngineFactory` `@@com.google.crypto.tink.subtle.EngineFactory.KEY_AGREEMENT` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.subtle.EngineFactory` `@@com.google.crypto.tink.subtle.EngineFactory.KEY_FACTORY` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.subtle.EngineFactory` `@@com.google.crypto.tink.subtle.EngineFactory.KEY_PAIR_GENERATOR` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.subtle.EngineFactory` `@@com.google.crypto.tink.subtle.EngineFactory.MAC` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.subtle.EngineFactory` `@@com.google.crypto.tink.subtle.EngineFactory.MESSAGE_DIGEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.subtle.EngineFactory` `@@com.google.crypto.tink.subtle.EngineFactory.SIGNATURE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.logging.Logger` `@@com.google.crypto.tink.subtle.EngineFactory.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@com.google.crypto.tink.subtle.EngineFactory.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L49a078.  v0:= constclass @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L49a07c.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L49a082.  v0:= temp @kind object;
  #L49a084.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L49a08a.  v0:= temp @kind object;
  #L49a08c.  `@@com.google.crypto.tink.subtle.EngineFactory.d` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L49a090.  call temp:= `isAndroid`() @signature `Lcom/google/crypto/tink/subtle/SubtleUtil;.isAndroid:()Z` @kind static;
  #L49a096.  v0:= temp;
  #L49a098.  if v0 == 0 then goto L49a0ba;
  #L49a09c.  v0:= "GmsCore_OpenSSL" @kind object;
  #L49a0a0.  v1:= "AndroidOpenSSL" @kind object;
  #L49a0a4.  temp:= new `java.lang.String`[v0, v1];
  #L49a0aa.  v0:= temp @kind object;
  #L49a0ac.  call temp:= `toProviderList`(v0) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L49a0b2.  v0:= temp @kind object;
  #L49a0b4.  `@@com.google.crypto.tink.subtle.EngineFactory.e` @type ^`java.util.List` := v0 @kind object;
  #L49a0b8.  goto L49a0c8;
  #L49a0ba.  v0:= new `java.util.ArrayList`;
  #L49a0be.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L49a0c4.  `@@com.google.crypto.tink.subtle.EngineFactory.e` @type ^`java.util.List` := v0 @kind object;
  #L49a0c8.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L49a0cc.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TCipher`;
  #L49a0d0.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TCipher;.<init>:()V` @kind direct;
  #L49a0d6.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @kind direct;
  #L49a0dc.  `@@com.google.crypto.tink.subtle.EngineFactory.CIPHER` @type ^`com.google.crypto.tink.subtle.EngineFactory` := v0 @kind object;
  #L49a0e0.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L49a0e4.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TMac`;
  #L49a0e8.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TMac;.<init>:()V` @kind direct;
  #L49a0ee.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @kind direct;
  #L49a0f4.  `@@com.google.crypto.tink.subtle.EngineFactory.MAC` @type ^`com.google.crypto.tink.subtle.EngineFactory` := v0 @kind object;
  #L49a0f8.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L49a0fc.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TSignature`;
  #L49a100.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TSignature;.<init>:()V` @kind direct;
  #L49a106.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @kind direct;
  #L49a10c.  `@@com.google.crypto.tink.subtle.EngineFactory.SIGNATURE` @type ^`com.google.crypto.tink.subtle.EngineFactory` := v0 @kind object;
  #L49a110.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L49a114.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TMessageDigest`;
  #L49a118.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TMessageDigest;.<init>:()V` @kind direct;
  #L49a11e.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @kind direct;
  #L49a124.  `@@com.google.crypto.tink.subtle.EngineFactory.MESSAGE_DIGEST` @type ^`com.google.crypto.tink.subtle.EngineFactory` := v0 @kind object;
  #L49a128.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L49a12c.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TKeyAgreement`;
  #L49a130.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyAgreement;.<init>:()V` @kind direct;
  #L49a136.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @kind direct;
  #L49a13c.  `@@com.google.crypto.tink.subtle.EngineFactory.KEY_AGREEMENT` @type ^`com.google.crypto.tink.subtle.EngineFactory` := v0 @kind object;
  #L49a140.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L49a144.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TKeyPairGenerator`;
  #L49a148.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyPairGenerator;.<init>:()V` @kind direct;
  #L49a14e.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @kind direct;
  #L49a154.  `@@com.google.crypto.tink.subtle.EngineFactory.KEY_PAIR_GENERATOR` @type ^`com.google.crypto.tink.subtle.EngineFactory` := v0 @kind object;
  #L49a158.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L49a15c.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TKeyFactory`;
  #L49a160.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyFactory;.<init>:()V` @kind direct;
  #L49a166.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @kind direct;
  #L49a16c.  `@@com.google.crypto.tink.subtle.EngineFactory.KEY_FACTORY` @type ^`com.google.crypto.tink.subtle.EngineFactory` := v0 @kind object;
  #L49a170.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.EngineFactory` v0 @kind this, `com.google.crypto.tink.subtle.EngineWrapper` v1 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49a184.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49a18a.  v0.`com.google.crypto.tink.subtle.EngineFactory.a` @type ^`com.google.crypto.tink.subtle.EngineWrapper` := v1 @kind object;
  #L49a18e.  v1:= `@@com.google.crypto.tink.subtle.EngineFactory.e` @type ^`java.util.List` @kind object;
  #L49a192.  v0.`com.google.crypto.tink.subtle.EngineFactory.b` @type ^`java.util.List` := v1 @kind object;
  #L49a196.  v1:= 1I;
  #L49a198.  v0.`com.google.crypto.tink.subtle.EngineFactory.c` @type ^`boolean` := v1 @kind boolean;
  #L49a19c.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.EngineFactory` v0 @kind this, `com.google.crypto.tink.subtle.EngineWrapper` v1 @kind object, `java.util.List` v2 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49a1b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49a1b6.  v0.`com.google.crypto.tink.subtle.EngineFactory.a` @type ^`com.google.crypto.tink.subtle.EngineWrapper` := v1 @kind object;
  #L49a1ba.  v0.`com.google.crypto.tink.subtle.EngineFactory.b` @type ^`java.util.List` := v2 @kind object;
  #L49a1be.  v1:= 1I;
  #L49a1c0.  v0.`com.google.crypto.tink.subtle.EngineFactory.c` @type ^`boolean` := v1 @kind boolean;
  #L49a1c4.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.subtle.EngineFactory` v0 @kind this, `com.google.crypto.tink.subtle.EngineWrapper` v1 @kind object, `java.util.List` v2 @kind object, `boolean` v3 ) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49a1d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49a1de.  v0.`com.google.crypto.tink.subtle.EngineFactory.a` @type ^`com.google.crypto.tink.subtle.EngineWrapper` := v1 @kind object;
  #L49a1e2.  v0.`com.google.crypto.tink.subtle.EngineFactory.b` @type ^`java.util.List` := v2 @kind object;
  #L49a1e6.  v0.`com.google.crypto.tink.subtle.EngineFactory.c` @type ^`boolean` := v3 @kind boolean;
  #L49a1ea.  return @kind void;
}
procedure `com.google.crypto.tink.subtle.EngineFactory` `getCustomCipherProvider`(`boolean` v2 , `java.lang.String`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getCustomCipherProvider:(Z[Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EngineFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L499e3c.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L499e40.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TCipher`;
  #L499e44.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TCipher;.<init>:()V` @kind direct;
  #L499e4a.  call temp:= `toProviderList`(v3) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L499e50.  v3:= temp @kind object;
  #L499e52.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @kind direct;
  #L499e58.  return v0 @kind object;
}
procedure `com.google.crypto.tink.subtle.EngineFactory` `getCustomKeyAgreementProvider`(`boolean` v2 , `java.lang.String`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getCustomKeyAgreementProvider:(Z[Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EngineFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L499e6c.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L499e70.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TKeyAgreement`;
  #L499e74.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyAgreement;.<init>:()V` @kind direct;
  #L499e7a.  call temp:= `toProviderList`(v3) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L499e80.  v3:= temp @kind object;
  #L499e82.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @kind direct;
  #L499e88.  return v0 @kind object;
}
procedure `com.google.crypto.tink.subtle.EngineFactory` `getCustomKeyFactoryProvider`(`boolean` v2 , `java.lang.String`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getCustomKeyFactoryProvider:(Z[Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EngineFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L499e9c.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L499ea0.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TKeyFactory`;
  #L499ea4.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyFactory;.<init>:()V` @kind direct;
  #L499eaa.  call temp:= `toProviderList`(v3) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L499eb0.  v3:= temp @kind object;
  #L499eb2.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @kind direct;
  #L499eb8.  return v0 @kind object;
}
procedure `com.google.crypto.tink.subtle.EngineFactory` `getCustomKeyPairGeneratorProvider`(`boolean` v2 , `java.lang.String`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getCustomKeyPairGeneratorProvider:(Z[Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EngineFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L499ecc.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L499ed0.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TKeyPairGenerator`;
  #L499ed4.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TKeyPairGenerator;.<init>:()V` @kind direct;
  #L499eda.  call temp:= `toProviderList`(v3) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L499ee0.  v3:= temp @kind object;
  #L499ee2.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @kind direct;
  #L499ee8.  return v0 @kind object;
}
procedure `com.google.crypto.tink.subtle.EngineFactory` `getCustomMacProvider`(`boolean` v2 , `java.lang.String`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getCustomMacProvider:(Z[Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EngineFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L499efc.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L499f00.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TMac`;
  #L499f04.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TMac;.<init>:()V` @kind direct;
  #L499f0a.  call temp:= `toProviderList`(v3) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L499f10.  v3:= temp @kind object;
  #L499f12.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @kind direct;
  #L499f18.  return v0 @kind object;
}
procedure `com.google.crypto.tink.subtle.EngineFactory` `getCustomMessageDigestProvider`(`boolean` v2 , `java.lang.String`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getCustomMessageDigestProvider:(Z[Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EngineFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L499f2c.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L499f30.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TMessageDigest`;
  #L499f34.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TMessageDigest;.<init>:()V` @kind direct;
  #L499f3a.  call temp:= `toProviderList`(v3) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L499f40.  v3:= temp @kind object;
  #L499f42.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @kind direct;
  #L499f48.  return v0 @kind object;
}
procedure `com.google.crypto.tink.subtle.EngineFactory` `getCustomSignatureProvider`(`boolean` v2 , `java.lang.String`[] v3 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getCustomSignatureProvider:(Z[Ljava/lang/String;)Lcom/google/crypto/tink/subtle/EngineFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L499f5c.  v0:= new `com.google.crypto.tink.subtle.EngineFactory`;
  #L499f60.  v1:= new `com.google.crypto.tink.subtle.EngineWrapper$TSignature`;
  #L499f64.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper$TSignature;.<init>:()V` @kind direct;
  #L499f6a.  call temp:= `toProviderList`(v3) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L499f70.  v3:= temp @kind object;
  #L499f72.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.<init>:(Lcom/google/crypto/tink/subtle/EngineWrapper;Ljava/util/List;Z)V` @kind direct;
  #L499f78.  return v0 @kind object;
}
procedure `java.util.List` `toProviderList`(`java.lang.String`[] v7 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.toProviderList:([Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49a014.  v0:= new `java.util.ArrayList`;
  #L49a018.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L49a01e.  v1:= length @variable v7;
  #L49a020.  v2:= 0I;
  #L49a022.  v3:= 0I;
  #L49a024.  if v3 >= v1 then goto L49a066;
  #L49a028.  v4:= v7[v3] @kind object;
  #L49a02c.  call temp:= `getProvider`(v4) @signature `Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;` @kind static;
  #L49a032.  v5:= temp @kind object;
  #L49a034.  if v5 == 0 then goto L49a040;
  #L49a038.  call temp:= `add`(v0, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L49a03e.  goto L49a060;
  #L49a040.  v5:= `@@com.google.crypto.tink.subtle.EngineFactory.d` @type ^`java.util.logging.Logger` @kind object;
  #L49a044.  v6:= 1I;
  #L49a046.  v6:= new `java.lang.Object`[v6];
  #L49a04a.  v6[v2]:= v4 @kind object;
  #L49a04e.  v4:= "Provider %s not available" @kind object;
  #L49a052.  call temp:= `format`(v4, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L49a058.  v4:= temp @kind object;
  #L49a05a.  call `info`(v5, v4) @signature `Ljava/util/logging/Logger;.info:(Ljava/lang/String;)V` @kind virtual;
  #L49a060.  v3:= v3 + 1;
  #L49a064.  goto L49a024;
  #L49a066.  return v0 @kind object;
}
procedure `java.lang.Object` `getInstance`(`com.google.crypto.tink.subtle.EngineFactory` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L499f8c.  v0:= v5.`com.google.crypto.tink.subtle.EngineFactory.b` @type ^`java.util.List` @kind object;
  #L499f90.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L499f96.  v0:= temp @kind object;
  #L499f98.  v1:= 0I;
  #L499f9a.  v2:= v1 @kind object;
  #L499f9c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L499fa2.  v3:= temp;
  #L499fa4.  if v3 == 0 then goto L499fcc;
  #L499fa8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L499fae.  v3:= temp @kind object;
  #L499fb0.  v3:= (`java.security.Provider`) v3 @kind object;
  #L499fb4.  v4:= v5.`com.google.crypto.tink.subtle.EngineFactory.a` @type ^`com.google.crypto.tink.subtle.EngineWrapper` @kind object;
  #L499fb8.  call temp:= `getInstance`(v4, v6, v3) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljava/lang/Object;` @kind interface;
  #L499fbe.  v6:= temp @kind object;
  #L499fc0.  return v6 @kind object;
  #L499fc2.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L499fc4.  if v2 != 0 then goto L499f9c;
  #L499fc8.  v2:= v3 @kind object;
  #L499fca.  goto L499f9c;
  #L499fcc.  v0:= v5.`com.google.crypto.tink.subtle.EngineFactory.c` @type ^`boolean` @kind boolean;
  #L499fd0.  if v0 == 0 then goto L499fe2;
  #L499fd4.  v0:= v5.`com.google.crypto.tink.subtle.EngineFactory.a` @type ^`com.google.crypto.tink.subtle.EngineWrapper` @kind object;
  #L499fd8.  call temp:= `getInstance`(v0, v6, v1) @signature `Lcom/google/crypto/tink/subtle/EngineWrapper;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljava/lang/Object;` @kind interface;
  #L499fde.  v6:= temp @kind object;
  #L499fe0.  return v6 @kind object;
  #L499fe2.  v6:= new `java.security.GeneralSecurityException`;
  #L499fe6.  v0:= "No good Provider found." @kind object;
  #L499fea.  call `<init>`(v6, v0, v2) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L499ff0.  throw v6;
  catch `java.lang.Exception` @[L499fb4..L499fc0] goto L499fc2;
}
