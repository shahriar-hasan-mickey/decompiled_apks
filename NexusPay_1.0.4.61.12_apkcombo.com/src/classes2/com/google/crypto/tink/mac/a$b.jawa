record `com.google.crypto.tink.mac.a$b` @kind class @AccessFlag  extends `com.google.crypto.tink.Mac` @kind interface {
  `com.google.crypto.tink.PrimitiveSet` `com.google.crypto.tink.mac.a$b.a` @AccessFlag PRIVATE_FINAL;
  `byte`[] `com.google.crypto.tink.mac.a$b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.mac.a$b` v2 @kind this, `com.google.crypto.tink.PrimitiveSet` v3 @kind object) @signature `Lcom/google/crypto/tink/mac/a$b;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L43046c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L430472.  v0:= 1I;
  #L430474.  v0:= new `byte`[v0];
  #L430478.  v1:= 0I;
  #L43047a.  v0[v1]:= v1 @kind byte;
  #L43047e.  v2.`com.google.crypto.tink.mac.a$b.b` @type ^`byte`[] := v0 @kind object;
  #L430482.  v2.`com.google.crypto.tink.mac.a$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` := v3 @kind object;
  #L430486.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.mac.a$b` v0 @kind this, `com.google.crypto.tink.PrimitiveSet` v1 @kind object, `com.google.crypto.tink.mac.a$a` v2 @kind object) @signature `Lcom/google/crypto/tink/mac/a$b;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;Lcom/google/crypto/tink/mac/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L430498.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/mac/a$b;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;)V` @kind direct;
  #L43049e.  return @kind void;
}
procedure `byte`[] `computeMac`(`com.google.crypto.tink.mac.a$b` v5 @kind this, `byte`[] v6 @kind object) @signature `Lcom/google/crypto/tink/mac/a$b;.computeMac:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L430384.  v0:= v5.`com.google.crypto.tink.mac.a$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L430388.  call temp:= `getPrimary`(v0) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L43038e.  v0:= temp @kind object;
  #L430390.  call temp:= `getOutputPrefixType`(v0) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getOutputPrefixType:()Lcom/google/crypto/tink/proto/OutputPrefixType;` @kind virtual;
  #L430396.  v0:= temp @kind object;
  #L430398.  v1:= `@@com.google.crypto.tink.proto.OutputPrefixType.LEGACY` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L43039c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4303a2.  v0:= temp;
  #L4303a4.  v1:= 1I;
  #L4303a6.  v2:= 0I;
  #L4303a8.  v3:= 2I;
  #L4303aa.  if v0 == 0 then goto L430410;
  #L4303ae.  v0:= new `byte`[][v3];
  #L4303b2.  v4:= v5.`com.google.crypto.tink.mac.a$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L4303b6.  call temp:= `getPrimary`(v4) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L4303bc.  v4:= temp @kind object;
  #L4303be.  call temp:= `getIdentifier`(v4) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getIdentifier:()[B` @kind virtual;
  #L4303c4.  v4:= temp @kind object;
  #L4303c6.  v0[v2]:= v4 @kind object;
  #L4303ca.  v4:= v5.`com.google.crypto.tink.mac.a$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L4303ce.  call temp:= `getPrimary`(v4) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L4303d4.  v4:= temp @kind object;
  #L4303d6.  call temp:= `getPrimitive`(v4) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L4303dc.  v4:= temp @kind object;
  #L4303de.  v4:= (`com.google.crypto.tink.Mac`) v4 @kind object;
  #L4303e2.  v3:= new `byte`[][v3];
  #L4303e6.  v3[v2]:= v6 @kind object;
  #L4303ea.  v6:= v5.`com.google.crypto.tink.mac.a$b.b` @type ^`byte`[] @kind object;
  #L4303ee.  v3[v1]:= v6 @kind object;
  #L4303f2.  call temp:= `concat`(v3) @signature `Lcom/google/crypto/tink/subtle/Bytes;.concat:([[B)[B` @kind static;
  #L4303f8.  v6:= temp @kind object;
  #L4303fa.  call temp:= `computeMac`(v4, v6) @signature `Lcom/google/crypto/tink/Mac;.computeMac:([B)[B` @kind interface;
  #L430400.  v6:= temp @kind object;
  #L430402.  v0[v1]:= v6 @kind object;
  #L430406.  call temp:= `concat`(v0) @signature `Lcom/google/crypto/tink/subtle/Bytes;.concat:([[B)[B` @kind static;
  #L43040c.  v6:= temp @kind object;
  #L43040e.  return v6 @kind object;
  #L430410.  v0:= new `byte`[][v3];
  #L430414.  v3:= v5.`com.google.crypto.tink.mac.a$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L430418.  call temp:= `getPrimary`(v3) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L43041e.  v3:= temp @kind object;
  #L430420.  call temp:= `getIdentifier`(v3) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getIdentifier:()[B` @kind virtual;
  #L430426.  v3:= temp @kind object;
  #L430428.  v0[v2]:= v3 @kind object;
  #L43042c.  v2:= v5.`com.google.crypto.tink.mac.a$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L430430.  call temp:= `getPrimary`(v2) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L430436.  v2:= temp @kind object;
  #L430438.  call temp:= `getPrimitive`(v2) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L43043e.  v2:= temp @kind object;
  #L430440.  v2:= (`com.google.crypto.tink.Mac`) v2 @kind object;
  #L430444.  call temp:= `computeMac`(v2, v6) @signature `Lcom/google/crypto/tink/Mac;.computeMac:([B)[B` @kind interface;
  #L43044a.  v6:= temp @kind object;
  #L43044c.  v0[v1]:= v6 @kind object;
  #L430450.  call temp:= `concat`(v0) @signature `Lcom/google/crypto/tink/subtle/Bytes;.concat:([[B)[B` @kind static;
  #L430456.  v6:= temp @kind object;
  #L430458.  return v6 @kind object;
}
procedure `void` `verifyMac`(`com.google.crypto.tink.mac.a$b` v6 @kind this, `byte`[] v7 @kind object, `byte`[] v8 @kind object) @signature `Lcom/google/crypto/tink/mac/a$b;.verifyMac:([B[B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4304b0.  v0:= length @variable v7;
  #L4304b2.  v1:= 5I;
  #L4304b4.  if v0 <= v1 then goto L4305dc;
  #L4304b8.  call temp:= `copyOf`(v7, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L4304be.  v0:= temp @kind object;
  #L4304c0.  v2:= length @variable v7;
  #L4304c2.  call temp:= `copyOfRange`(v7, v1, v2) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L4304c8.  v1:= temp @kind object;
  #L4304ca.  v2:= v6.`com.google.crypto.tink.mac.a$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L4304ce.  call temp:= `getPrimitive`(v2, v0) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimitive:([B)Ljava/util/List;` @kind virtual;
  #L4304d4.  v0:= temp @kind object;
  #L4304d6.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4304dc.  v0:= temp @kind object;
  #L4304de.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4304e4.  v2:= temp;
  #L4304e6.  if v2 == 0 then goto L430588;
  #L4304ea.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4304f0.  v2:= temp @kind object;
  #L4304f2.  v2:= (`com.google.crypto.tink.PrimitiveSet$Entry`) v2 @kind object;
  #L4304f6.  call temp:= `getOutputPrefixType`(v2) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getOutputPrefixType:()Lcom/google/crypto/tink/proto/OutputPrefixType;` @kind virtual;
  #L4304fc.  v3:= temp @kind object;
  #L4304fe.  v4:= `@@com.google.crypto.tink.proto.OutputPrefixType.LEGACY` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L430502.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L430508.  v3:= temp;
  #L43050a.  if v3 == 0 then goto L430540;
  #L43050e.  call temp:= `getPrimitive`(v2) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L430514.  v2:= temp @kind object;
  #L430516.  v2:= (`com.google.crypto.tink.Mac`) v2 @kind object;
  #L43051a.  v3:= 2I;
  #L43051c.  v3:= new `byte`[][v3];
  #L430520.  v4:= 0I;
  #L430522.  v3[v4]:= v8 @kind object;
  #L430526.  v4:= 1I;
  #L430528.  v5:= v6.`com.google.crypto.tink.mac.a$b.b` @type ^`byte`[] @kind object;
  #L43052c.  v3[v4]:= v5 @kind object;
  #L430530.  call temp:= `concat`(v3) @signature `Lcom/google/crypto/tink/subtle/Bytes;.concat:([[B)[B` @kind static;
  #L430536.  v3:= temp @kind object;
  #L430538.  call `verifyMac`(v2, v1, v3) @signature `Lcom/google/crypto/tink/Mac;.verifyMac:([B[B)V` @kind interface;
  #L43053e.  goto L430552;
  #L430540.  call temp:= `getPrimitive`(v2) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L430546.  v2:= temp @kind object;
  #L430548.  v2:= (`com.google.crypto.tink.Mac`) v2 @kind object;
  #L43054c.  call `verifyMac`(v2, v1, v8) @signature `Lcom/google/crypto/tink/Mac;.verifyMac:([B[B)V` @kind interface;
  #L430552.  return @kind void;
  #L430554.  v2:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L430556.  call temp:= `a`() @signature `Lcom/google/crypto/tink/mac/a;.a:()Ljava/util/logging/Logger;` @kind static;
  #L43055c.  v3:= temp @kind object;
  #L43055e.  v4:= new `java.lang.StringBuilder`;
  #L430562.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L430568.  v5:= "tag prefix matches a key, but cannot verify: " @kind object;
  #L43056c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430572.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430578.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43057e.  v2:= temp @kind object;
  #L430580.  call `info`(v3, v2) @signature `Ljava/util/logging/Logger;.info:(Ljava/lang/String;)V` @kind virtual;
  #L430586.  goto L4304de;
  #L430588.  v0:= v6.`com.google.crypto.tink.mac.a$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L43058c.  call temp:= `getRawPrimitives`(v0) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getRawPrimitives:()Ljava/util/List;` @kind virtual;
  #L430592.  v0:= temp @kind object;
  #L430594.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L43059a.  v0:= temp @kind object;
  #L43059c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4305a2.  v1:= temp;
  #L4305a4.  if v1 == 0 then goto L4305cc;
  #L4305a8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4305ae.  v1:= temp @kind object;
  #L4305b0.  v1:= (`com.google.crypto.tink.PrimitiveSet$Entry`) v1 @kind object;
  #L4305b4.  call temp:= `getPrimitive`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L4305ba.  v1:= temp @kind object;
  #L4305bc.  v1:= (`com.google.crypto.tink.Mac`) v1 @kind object;
  #L4305c0.  call `verifyMac`(v1, v7, v8) @signature `Lcom/google/crypto/tink/Mac;.verifyMac:([B[B)V` @kind interface;
  #L4305c6.  return @kind void;
  #L4305c8.  
  #L4305ca.  goto L43059c;
  #L4305cc.  v7:= new `java.security.GeneralSecurityException`;
  #L4305d0.  v8:= "invalid MAC" @kind object;
  #L4305d4.  call `<init>`(v7, v8) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4305da.  throw v7;
  #L4305dc.  v7:= new `java.security.GeneralSecurityException`;
  #L4305e0.  v8:= "tag too short" @kind object;
  #L4305e4.  call `<init>`(v7, v8) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4305ea.  throw v7;
  catch `java.security.GeneralSecurityException` @[L4304f6..L430552] goto L430554;
  catch `java.security.GeneralSecurityException` @[L4305b4..L4305c6] goto L4305c8;
}
