record `com.google.crypto.tink.mac.MacConfig` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@com.google.crypto.tink.mac.MacConfig.HMAC_TYPE_URL` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.RegistryConfig` `@@com.google.crypto.tink.mac.MacConfig.LATEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.RegistryConfig` `@@com.google.crypto.tink.mac.MacConfig.TINK_1_0_0` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.RegistryConfig` `@@com.google.crypto.tink.mac.MacConfig.TINK_1_1_0` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/mac/MacConfig;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L43009c.  v0:= new `com.google.crypto.tink.mac.HmacKeyManager`;
  #L4300a0.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/mac/HmacKeyManager;.<init>:()V` @kind direct;
  #L4300a6.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/mac/HmacKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L4300ac.  v0:= temp @kind object;
  #L4300ae.  `@@com.google.crypto.tink.mac.MacConfig.HMAC_TYPE_URL` @type ^`java.lang.String` := v0 @kind object;
  #L4300b2.  call temp:= `getDefaultInstance`() @signature `Lcom/google/crypto/tink/proto/RegistryConfig;.getDefaultInstance:()Lcom/google/crypto/tink/proto/RegistryConfig;` @kind static;
  #L4300b8.  v0:= temp @kind object;
  #L4300ba.  `@@com.google.crypto.tink.mac.MacConfig.TINK_1_0_0` @type ^`com.google.crypto.tink.proto.RegistryConfig` := v0 @kind object;
  #L4300be.  `@@com.google.crypto.tink.mac.MacConfig.TINK_1_1_0` @type ^`com.google.crypto.tink.proto.RegistryConfig` := v0 @kind object;
  #L4300c2.  `@@com.google.crypto.tink.mac.MacConfig.LATEST` @type ^`com.google.crypto.tink.proto.RegistryConfig` := v0 @kind object;
  #L4300c6.  call `init`() @signature `Lcom/google/crypto/tink/mac/MacConfig;.init:()V` @kind static;
  #L4300cc.  return @kind void;
  #L4300ce.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L4300d0.  v1:= new `java.lang.ExceptionInInitializerError`;
  #L4300d4.  call `<init>`(v1, v0) @signature `Ljava/lang/ExceptionInInitializerError;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L4300da.  throw v1;
  catch `java.security.GeneralSecurityException` @[L4300c6..L4300cc] goto L4300ce;
}
procedure `void` `<init>`(`com.google.crypto.tink.mac.MacConfig` v0 @kind this) @signature `Lcom/google/crypto/tink/mac/MacConfig;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4300fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L430102.  return @kind void;
}
procedure `void` `init`() @signature `Lcom/google/crypto/tink/mac/MacConfig;.init:()V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L430114.  call `register`() @signature `Lcom/google/crypto/tink/mac/MacConfig;.register:()V` @kind static;
  #L43011a.  return @kind void;
}
procedure `void` `register`() @signature `Lcom/google/crypto/tink/mac/MacConfig;.register:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43012c.  v0:= 1I;
  #L43012e.  call `register`(v0) @signature `Lcom/google/crypto/tink/mac/HmacKeyManager;.register:(Z)V` @kind static;
  #L430134.  call `register`(v0) @signature `Lcom/google/crypto/tink/mac/AesCmacKeyManager;.register:(Z)V` @kind static;
  #L43013a.  call `b`() @signature `Lcom/google/crypto/tink/mac/a;.b:()V` @kind static;
  #L430140.  return @kind void;
}
procedure `void` `registerStandardKeyTypes`() @signature `Lcom/google/crypto/tink/mac/MacConfig;.registerStandardKeyTypes:()V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L430154.  call `register`() @signature `Lcom/google/crypto/tink/mac/MacConfig;.register:()V` @kind static;
  #L43015a.  return @kind void;
}
