record `com.google.crypto.tink.PrimitiveSet$b` @kind class @AccessFlag  extends `java.lang.Comparable` @kind interface {
  `byte`[] `com.google.crypto.tink.PrimitiveSet$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.PrimitiveSet$b` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/PrimitiveSet$b;.<init>:([B)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L426ff4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L426ffa.  v0:= length @variable v2;
  #L426ffc.  call temp:= `copyOf`(v2, v0) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L427002.  v2:= temp @kind object;
  #L427004.  v1.`com.google.crypto.tink.PrimitiveSet$b.a` @type ^`byte`[] := v2 @kind object;
  #L427008.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.PrimitiveSet$b` v0 @kind this, `byte`[] v1 @kind object, `com.google.crypto.tink.PrimitiveSet$a` v2 @kind object) @signature `Lcom/google/crypto/tink/PrimitiveSet$b;.<init>:([BLcom/google/crypto/tink/PrimitiveSet$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L42701c.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$b;.<init>:([B)V` @kind direct;
  #L427022.  return @kind void;
}
procedure `int` `a`(`com.google.crypto.tink.PrimitiveSet$b` v6 @kind this, `com.google.crypto.tink.PrimitiveSet$b` v7 @kind object) @signature `Lcom/google/crypto/tink/PrimitiveSet$b;.a:(Lcom/google/crypto/tink/PrimitiveSet$b;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L426f3c.  v0:= v6.`com.google.crypto.tink.PrimitiveSet$b.a` @type ^`byte`[] @kind object;
  #L426f40.  v1:= length @variable v0;
  #L426f42.  v2:= v7.`com.google.crypto.tink.PrimitiveSet$b.a` @type ^`byte`[] @kind object;
  #L426f46.  v3:= length @variable v2;
  #L426f48.  if v1 == v3 then goto L426f54;
  #L426f4c.  v7:= length @variable v0;
  #L426f4e.  v0:= length @variable v2;
  #L426f50.  v7:= v7 - v0 @kind int;
  #L426f52.  return v7;
  #L426f54.  v0:= 0I;
  #L426f56.  v1:= 0I;
  #L426f58.  v2:= v6.`com.google.crypto.tink.PrimitiveSet$b.a` @type ^`byte`[] @kind object;
  #L426f5c.  v3:= length @variable v2;
  #L426f5e.  if v1 >= v3 then goto L426f82;
  #L426f62.  v3:= v2[v1] @kind byte;
  #L426f66.  v4:= v7.`com.google.crypto.tink.PrimitiveSet$b.a` @type ^`byte`[] @kind object;
  #L426f6a.  v5:= v4[v1] @kind byte;
  #L426f6e.  if v3 == v5 then goto L426f7c;
  #L426f72.  v7:= v2[v1] @kind byte;
  #L426f76.  v0:= v4[v1] @kind byte;
  #L426f7a.  goto L426f50;
  #L426f7c.  v1:= v1 + 1;
  #L426f80.  goto L426f58;
  #L426f82.  return v0;
}
procedure `int` `compareTo`(`com.google.crypto.tink.PrimitiveSet$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/PrimitiveSet$b;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L426f94.  v1:= (`com.google.crypto.tink.PrimitiveSet$b`) v1 @kind object;
  #L426f98.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$b;.a:(Lcom/google/crypto/tink/PrimitiveSet$b;)I` @kind virtual;
  #L426f9e.  v1:= temp;
  #L426fa0.  return v1;
}
procedure `boolean` `equals`(`com.google.crypto.tink.PrimitiveSet$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/PrimitiveSet$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L426f08.  v0:= instanceof @variable v2 @type ^`com.google.crypto.tink.PrimitiveSet$b` @kind boolean;
  #L426f0c.  if v0 != 0 then goto L426f14;
  #L426f10.  v2:= 0I;
  #L426f12.  return v2;
  #L426f14.  v2:= (`com.google.crypto.tink.PrimitiveSet$b`) v2 @kind object;
  #L426f18.  v0:= v1.`com.google.crypto.tink.PrimitiveSet$b.a` @type ^`byte`[] @kind object;
  #L426f1c.  v2:= v2.`com.google.crypto.tink.PrimitiveSet$b.a` @type ^`byte`[] @kind object;
  #L426f20.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L426f26.  v2:= temp;
  #L426f28.  return v2;
}
procedure `int` `hashCode`(`com.google.crypto.tink.PrimitiveSet$b` v1 @kind this) @signature `Lcom/google/crypto/tink/PrimitiveSet$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L426fb4.  v0:= v1.`com.google.crypto.tink.PrimitiveSet$b.a` @type ^`byte`[] @kind object;
  #L426fb8.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L426fbe.  v0:= temp;
  #L426fc0.  return v0;
}
procedure `java.lang.String` `toString`(`com.google.crypto.tink.PrimitiveSet$b` v1 @kind this) @signature `Lcom/google/crypto/tink/PrimitiveSet$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L426fd4.  v0:= v1.`com.google.crypto.tink.PrimitiveSet$b.a` @type ^`byte`[] @kind object;
  #L426fd8.  call temp:= `encode`(v0) @signature `Lcom/google/crypto/tink/subtle/Hex;.encode:([B)Ljava/lang/String;` @kind static;
  #L426fde.  v0:= temp @kind object;
  #L426fe0.  return v0 @kind object;
}
