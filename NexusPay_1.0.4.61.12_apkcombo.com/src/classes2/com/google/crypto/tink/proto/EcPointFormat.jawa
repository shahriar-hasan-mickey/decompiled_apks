record `com.google.crypto.tink.proto.EcPointFormat` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `com.google.crypto.tink.shaded.protobuf.Internal$EnumLite` @kind interface {
  `int` `com.google.crypto.tink.proto.EcPointFormat.value` @AccessFlag PRIVATE_FINAL;
}
global `com.google.crypto.tink.proto.EcPointFormat`[] `@@com.google.crypto.tink.proto.EcPointFormat.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.google.crypto.tink.proto.EcPointFormat` `@@com.google.crypto.tink.proto.EcPointFormat.COMPRESSED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int` `@@com.google.crypto.tink.proto.EcPointFormat.COMPRESSED_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EcPointFormat` `@@com.google.crypto.tink.proto.EcPointFormat.DO_NOT_USE_CRUNCHY_UNCOMPRESSED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int` `@@com.google.crypto.tink.proto.EcPointFormat.DO_NOT_USE_CRUNCHY_UNCOMPRESSED_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EcPointFormat` `@@com.google.crypto.tink.proto.EcPointFormat.UNCOMPRESSED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int` `@@com.google.crypto.tink.proto.EcPointFormat.UNCOMPRESSED_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EcPointFormat` `@@com.google.crypto.tink.proto.EcPointFormat.UNKNOWN_FORMAT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int` `@@com.google.crypto.tink.proto.EcPointFormat.UNKNOWN_FORMAT_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EcPointFormat` `@@com.google.crypto.tink.proto.EcPointFormat.UNRECOGNIZED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.shaded.protobuf.Internal$EnumLiteMap` `@@com.google.crypto.tink.proto.EcPointFormat.internalValueMap` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L43ec04.  v0:= new `com.google.crypto.tink.proto.EcPointFormat`;
  #L43ec08.  v1:= "UNKNOWN_FORMAT" @kind object;
  #L43ec0c.  v2:= 0I;
  #L43ec0e.  call `<init>`(v0, v1, v2, v2) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L43ec14.  `@@com.google.crypto.tink.proto.EcPointFormat.UNKNOWN_FORMAT` @type ^`com.google.crypto.tink.proto.EcPointFormat` := v0 @kind object;
  #L43ec18.  v0:= new `com.google.crypto.tink.proto.EcPointFormat`;
  #L43ec1c.  v1:= "UNCOMPRESSED" @kind object;
  #L43ec20.  v3:= 1I;
  #L43ec22.  call `<init>`(v0, v1, v3, v3) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L43ec28.  `@@com.google.crypto.tink.proto.EcPointFormat.UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` := v0 @kind object;
  #L43ec2c.  v0:= new `com.google.crypto.tink.proto.EcPointFormat`;
  #L43ec30.  v1:= "COMPRESSED" @kind object;
  #L43ec34.  v4:= 2I;
  #L43ec36.  call `<init>`(v0, v1, v4, v4) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L43ec3c.  `@@com.google.crypto.tink.proto.EcPointFormat.COMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` := v0 @kind object;
  #L43ec40.  v0:= new `com.google.crypto.tink.proto.EcPointFormat`;
  #L43ec44.  v1:= "DO_NOT_USE_CRUNCHY_UNCOMPRESSED" @kind object;
  #L43ec48.  v5:= 3I;
  #L43ec4a.  call `<init>`(v0, v1, v5, v5) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L43ec50.  `@@com.google.crypto.tink.proto.EcPointFormat.DO_NOT_USE_CRUNCHY_UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` := v0 @kind object;
  #L43ec54.  v0:= new `com.google.crypto.tink.proto.EcPointFormat`;
  #L43ec58.  v1:= "UNRECOGNIZED" @kind object;
  #L43ec5c.  v6:= 4I;
  #L43ec5e.  v7:= -1I;
  #L43ec60.  call `<init>`(v0, v1, v6, v7) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L43ec66.  `@@com.google.crypto.tink.proto.EcPointFormat.UNRECOGNIZED` @type ^`com.google.crypto.tink.proto.EcPointFormat` := v0 @kind object;
  #L43ec6a.  v1:= 5I;
  #L43ec6c.  v1:= new `com.google.crypto.tink.proto.EcPointFormat`[v1];
  #L43ec70.  v7:= `@@com.google.crypto.tink.proto.EcPointFormat.UNKNOWN_FORMAT` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L43ec74.  v1[v2]:= v7 @kind object;
  #L43ec78.  v2:= `@@com.google.crypto.tink.proto.EcPointFormat.UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L43ec7c.  v1[v3]:= v2 @kind object;
  #L43ec80.  v2:= `@@com.google.crypto.tink.proto.EcPointFormat.COMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L43ec84.  v1[v4]:= v2 @kind object;
  #L43ec88.  v2:= `@@com.google.crypto.tink.proto.EcPointFormat.DO_NOT_USE_CRUNCHY_UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L43ec8c.  v1[v5]:= v2 @kind object;
  #L43ec90.  v1[v6]:= v0 @kind object;
  #L43ec94.  `@@com.google.crypto.tink.proto.EcPointFormat.$VALUES` @type ^`com.google.crypto.tink.proto.EcPointFormat`[] := v1 @kind object;
  #L43ec98.  v0:= new `com.google.crypto.tink.proto.EcPointFormat$a`;
  #L43ec9c.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/proto/EcPointFormat$a;.<init>:()V` @kind direct;
  #L43eca2.  `@@com.google.crypto.tink.proto.EcPointFormat.internalValueMap` @type ^`com.google.crypto.tink.shaded.protobuf.Internal$EnumLiteMap` := v0 @kind object;
  #L43eca6.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.proto.EcPointFormat` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L43ecb8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L43ecbe.  v0.`com.google.crypto.tink.proto.EcPointFormat.value` @type ^`int` := v3;
  #L43ecc2.  return @kind void;
}
procedure `com.google.crypto.tink.proto.EcPointFormat` `forNumber`(`int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.forNumber:(I)Lcom/google/crypto/tink/proto/EcPointFormat;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43eafc.  if v1 == 0 then goto L43eb28;
  #L43eb00.  v0:= 1I;
  #L43eb02.  if v1 == v0 then goto L43eb22;
  #L43eb06.  v0:= 2I;
  #L43eb08.  if v1 == v0 then goto L43eb1c;
  #L43eb0c.  v0:= 3I;
  #L43eb0e.  if v1 == v0 then goto L43eb16;
  #L43eb12.  v1:= 0I;
  #L43eb14.  return v1 @kind object;
  #L43eb16.  v1:= `@@com.google.crypto.tink.proto.EcPointFormat.DO_NOT_USE_CRUNCHY_UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L43eb1a.  return v1 @kind object;
  #L43eb1c.  v1:= `@@com.google.crypto.tink.proto.EcPointFormat.COMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L43eb20.  return v1 @kind object;
  #L43eb22.  v1:= `@@com.google.crypto.tink.proto.EcPointFormat.UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L43eb26.  return v1 @kind object;
  #L43eb28.  v1:= `@@com.google.crypto.tink.proto.EcPointFormat.UNKNOWN_FORMAT` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L43eb2c.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$EnumLiteMap` `internalGetValueMap`() @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.internalGetValueMap:()Lcom/google/crypto/tink/shaded/protobuf/Internal$EnumLiteMap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43eba4.  v0:= `@@com.google.crypto.tink.proto.EcPointFormat.internalValueMap` @type ^`com.google.crypto.tink.shaded.protobuf.Internal$EnumLiteMap` @kind object;
  #L43eba8.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.Internal$EnumVerifier` `internalGetVerifier`() @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.internalGetVerifier:()Lcom/google/crypto/tink/shaded/protobuf/Internal$EnumVerifier;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43ebbc.  v0:= `@@com.google.crypto.tink.proto.EcPointFormat$b.a` @type ^`com.google.crypto.tink.shaded.protobuf.Internal$EnumVerifier` @kind object;
  #L43ebc0.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.EcPointFormat` `valueOf`(`int` v0 ) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.valueOf:(I)Lcom/google/crypto/tink/proto/EcPointFormat;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L43eb40.  call temp:= `forNumber`(v0) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.forNumber:(I)Lcom/google/crypto/tink/proto/EcPointFormat;` @kind static;
  #L43eb46.  v0:= temp @kind object;
  #L43eb48.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.EcPointFormat` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.valueOf:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/EcPointFormat;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43eb5c.  v0:= constclass @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L43eb60.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L43eb66.  v1:= temp @kind object;
  #L43eb68.  v1:= (`com.google.crypto.tink.proto.EcPointFormat`) v1 @kind object;
  #L43eb6c.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcPointFormat`[] `values`() @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.values:()[Lcom/google/crypto/tink/proto/EcPointFormat;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43eb80.  v0:= `@@com.google.crypto.tink.proto.EcPointFormat.$VALUES` @type ^`com.google.crypto.tink.proto.EcPointFormat`[] @kind object;
  #L43eb84.  call temp:= `clone`(v0) @signature `[Lcom/google/crypto/tink/proto/EcPointFormat;.clone:()Ljava/lang/Object;` @kind virtual;
  #L43eb8a.  v0:= temp @kind object;
  #L43eb8c.  v0:= (`com.google.crypto.tink.proto.EcPointFormat`[]) v0 @kind object;
  #L43eb90.  return v0 @kind object;
}
procedure `int` `getNumber`(`com.google.crypto.tink.proto.EcPointFormat` v2 @kind this) @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.getNumber:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L43ebd4.  v0:= `@@com.google.crypto.tink.proto.EcPointFormat.UNRECOGNIZED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L43ebd8.  if v2 == v0 then goto L43ebe2;
  #L43ebdc.  v0:= v2.`com.google.crypto.tink.proto.EcPointFormat.value` @type ^`int`;
  #L43ebe0.  return v0;
  #L43ebe2.  v0:= new `java.lang.IllegalArgumentException`;
  #L43ebe6.  v1:= "Can't get the number of an unknown enum value." @kind object;
  #L43ebea.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43ebf0.  throw v0;
}
