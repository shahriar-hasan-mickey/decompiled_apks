record `com.google.crypto.tink.proto.EcdsaParams` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite` @kind class, `com.google.crypto.tink.proto.EcdsaParamsOrBuilder` @kind interface {
  `int` `com.google.crypto.tink.proto.EcdsaParams.curve_` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.proto.EcdsaParams.encoding_` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.proto.EcdsaParams.hashType_` @AccessFlag PRIVATE;
}
global `int` `@@com.google.crypto.tink.proto.EcdsaParams.CURVE_FIELD_NUMBER` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.EcdsaParams` `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.proto.EcdsaParams.ENCODING_FIELD_NUMBER` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.proto.EcdsaParams.HASH_TYPE_FIELD_NUMBER` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.shaded.protobuf.Parser` `@@com.google.crypto.tink.proto.EcdsaParams.PARSER` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L43fb2c.  v0:= new `com.google.crypto.tink.proto.EcdsaParams`;
  #L43fb30.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.<init>:()V` @kind direct;
  #L43fb36.  `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` := v0 @kind object;
  #L43fb3a.  v1:= constclass @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43fb3e.  call `registerDefaultInstance`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.registerDefaultInstance:(Ljava/lang/Class;Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;)V` @kind static;
  #L43fb44.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L43fb58.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.<init>:()V` @kind direct;
  #L43fb5e.  return @kind void;
}
procedure `void` `A`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.A:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43fc48.  v0:= 0I;
  #L43fc4a.  v1.`com.google.crypto.tink.proto.EcdsaParams.curve_` @type ^`int` := v0;
  #L43fc4e.  return @kind void;
}
procedure `void` `B`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.B:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43fc60.  v0:= 0I;
  #L43fc62.  v1.`com.google.crypto.tink.proto.EcdsaParams.encoding_` @type ^`int` := v0;
  #L43fc66.  return @kind void;
}
procedure `void` `C`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.C:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43fc78.  v0:= 0I;
  #L43fc7a.  v1.`com.google.crypto.tink.proto.EcdsaParams.hashType_` @type ^`int` := v0;
  #L43fc7e.  return @kind void;
}
procedure `void` `D`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind this, `com.google.crypto.tink.proto.EllipticCurveType` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.D:(Lcom/google/crypto/tink/proto/EllipticCurveType;)V` @AccessFlag PRIVATE {
    temp;

  #L43fc90.  call temp:= `getNumber`(v1) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.getNumber:()I` @kind virtual;
  #L43fc96.  v1:= temp;
  #L43fc98.  v0.`com.google.crypto.tink.proto.EcdsaParams.curve_` @type ^`int` := v1;
  #L43fc9c.  return @kind void;
}
procedure `void` `E`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.E:(I)V` @AccessFlag PRIVATE {
    temp;

  #L43fcb0.  v0.`com.google.crypto.tink.proto.EcdsaParams.curve_` @type ^`int` := v1;
  #L43fcb4.  return @kind void;
}
procedure `void` `F`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind this, `com.google.crypto.tink.proto.EcdsaSignatureEncoding` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.F:(Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;)V` @AccessFlag PRIVATE {
    temp;

  #L43fcc8.  call temp:= `getNumber`(v1) @signature `Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;.getNumber:()I` @kind virtual;
  #L43fcce.  v1:= temp;
  #L43fcd0.  v0.`com.google.crypto.tink.proto.EcdsaParams.encoding_` @type ^`int` := v1;
  #L43fcd4.  return @kind void;
}
procedure `void` `G`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.G:(I)V` @AccessFlag PRIVATE {
    temp;

  #L43fce8.  v0.`com.google.crypto.tink.proto.EcdsaParams.encoding_` @type ^`int` := v1;
  #L43fcec.  return @kind void;
}
procedure `void` `H`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind this, `com.google.crypto.tink.proto.HashType` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.H:(Lcom/google/crypto/tink/proto/HashType;)V` @AccessFlag PRIVATE {
    temp;

  #L43fd00.  call temp:= `getNumber`(v1) @signature `Lcom/google/crypto/tink/proto/HashType;.getNumber:()I` @kind virtual;
  #L43fd06.  v1:= temp;
  #L43fd08.  v0.`com.google.crypto.tink.proto.EcdsaParams.hashType_` @type ^`int` := v1;
  #L43fd0c.  return @kind void;
}
procedure `void` `I`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.I:(I)V` @AccessFlag PRIVATE {
    temp;

  #L43fd20.  v0.`com.google.crypto.tink.proto.EcdsaParams.hashType_` @type ^`int` := v1;
  #L43fd24.  return @kind void;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `getDefaultInstance`() @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getDefaultInstance:()Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f744.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f748.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams$Builder` `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.newBuilder:()Lcom/google/crypto/tink/proto/EcdsaParams$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f90c.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f910.  call temp:= `createBuilder`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.createBuilder:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L43f916.  v0:= temp @kind object;
  #L43f918.  v0:= (`com.google.crypto.tink.proto.EcdsaParams$Builder`) v0 @kind object;
  #L43f91c.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams$Builder` `newBuilder`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.newBuilder:(Lcom/google/crypto/tink/proto/EcdsaParams;)Lcom/google/crypto/tink/proto/EcdsaParams$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f930.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f934.  call temp:= `createBuilder`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.createBuilder:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L43f93a.  v1:= temp @kind object;
  #L43f93c.  v1:= (`com.google.crypto.tink.proto.EcdsaParams$Builder`) v1 @kind object;
  #L43f940.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseDelimitedFrom`(`java.io.InputStream` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseDelimitedFrom:(Ljava/io/InputStream;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f75c.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f760.  call temp:= `parseDelimitedFrom`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseDelimitedFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Ljava/io/InputStream;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L43f766.  v1:= temp @kind object;
  #L43f768.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L43f76c.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseDelimitedFrom`(`java.io.InputStream` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseDelimitedFrom:(Ljava/io/InputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f780.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f784.  call temp:= `parseDelimitedFrom`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseDelimitedFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Ljava/io/InputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L43f78a.  v1:= temp @kind object;
  #L43f78c.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L43f790.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f7ec.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f7f0.  call temp:= `parseFrom`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L43f7f6.  v1:= temp @kind object;
  #L43f7f8.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L43f7fc.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f810.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f814.  call temp:= `parseFrom`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L43f81a.  v1:= temp @kind object;
  #L43f81c.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L43f820.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f834.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f838.  call temp:= `parseFrom`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L43f83e.  v1:= temp @kind object;
  #L43f840.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L43f844.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f858.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f85c.  call temp:= `parseFrom`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L43f862.  v1:= temp @kind object;
  #L43f864.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L43f868.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`java.io.InputStream` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Ljava/io/InputStream;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f87c.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f880.  call temp:= `parseFrom`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Ljava/io/InputStream;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L43f886.  v1:= temp @kind object;
  #L43f888.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L43f88c.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`java.io.InputStream` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Ljava/io/InputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f8a0.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f8a4.  call temp:= `parseFrom`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Ljava/io/InputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L43f8aa.  v1:= temp @kind object;
  #L43f8ac.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L43f8b0.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f8c4.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f8c8.  call temp:= `parseFrom`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L43f8ce.  v1:= temp @kind object;
  #L43f8d0.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L43f8d4.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`java.nio.ByteBuffer` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:(Ljava/nio/ByteBuffer;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f8e8.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f8ec.  call temp:= `parseFrom`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;Ljava/nio/ByteBuffer;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L43f8f2.  v1:= temp @kind object;
  #L43f8f4.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L43f8f8.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`byte`[] v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:([B)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f7a4.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f7a8.  call temp:= `parseFrom`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;[B)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L43f7ae.  v1:= temp @kind object;
  #L43f7b0.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L43f7b4.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `parseFrom`(`byte`[] v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parseFrom:([BLcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f7c8.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f7cc.  call temp:= `parseFrom`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;[BLcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind static;
  #L43f7d2.  v1:= temp @kind object;
  #L43f7d4.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L43f7d8.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.Parser` `parser`() @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.parser:()Lcom/google/crypto/tink/shaded/protobuf/Parser;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f9cc.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f9d0.  call temp:= `getParserForType`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.getParserForType:()Lcom/google/crypto/tink/shaded/protobuf/Parser;` @kind virtual;
  #L43f9d6.  v0:= temp @kind object;
  #L43f9d8.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.EcdsaParams` `q`() @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.q:()Lcom/google/crypto/tink/proto/EcdsaParams;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L43f72c.  v0:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43f730.  return v0 @kind object;
}
procedure `void` `r`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object, `int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.r:(Lcom/google/crypto/tink/proto/EcdsaParams;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L43fb70.  call `I`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.I:(I)V` @kind direct;
  #L43fb76.  return @kind void;
}
procedure `void` `s`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object, `com.google.crypto.tink.proto.HashType` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.s:(Lcom/google/crypto/tink/proto/EcdsaParams;Lcom/google/crypto/tink/proto/HashType;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L43fb88.  call `H`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.H:(Lcom/google/crypto/tink/proto/HashType;)V` @kind direct;
  #L43fb8e.  return @kind void;
}
procedure `void` `t`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.t:(Lcom/google/crypto/tink/proto/EcdsaParams;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L43fba0.  call `C`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.C:()V` @kind direct;
  #L43fba6.  return @kind void;
}
procedure `void` `u`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object, `int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.u:(Lcom/google/crypto/tink/proto/EcdsaParams;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L43fbb8.  call `E`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.E:(I)V` @kind direct;
  #L43fbbe.  return @kind void;
}
procedure `void` `v`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object, `com.google.crypto.tink.proto.EllipticCurveType` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.v:(Lcom/google/crypto/tink/proto/EcdsaParams;Lcom/google/crypto/tink/proto/EllipticCurveType;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L43fbd0.  call `D`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.D:(Lcom/google/crypto/tink/proto/EllipticCurveType;)V` @kind direct;
  #L43fbd6.  return @kind void;
}
procedure `void` `w`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.w:(Lcom/google/crypto/tink/proto/EcdsaParams;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L43fbe8.  call `A`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.A:()V` @kind direct;
  #L43fbee.  return @kind void;
}
procedure `void` `x`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object, `int` v1 ) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.x:(Lcom/google/crypto/tink/proto/EcdsaParams;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L43fc00.  call `G`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.G:(I)V` @kind direct;
  #L43fc06.  return @kind void;
}
procedure `void` `y`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object, `com.google.crypto.tink.proto.EcdsaSignatureEncoding` v1 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.y:(Lcom/google/crypto/tink/proto/EcdsaParams;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L43fc18.  call `F`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.F:(Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;)V` @kind direct;
  #L43fc1e.  return @kind void;
}
procedure `void` `z`(`com.google.crypto.tink.proto.EcdsaParams` v0 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.z:(Lcom/google/crypto/tink/proto/EcdsaParams;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L43fc30.  call `B`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.B:()V` @kind direct;
  #L43fc36.  return @kind void;
}
procedure `java.lang.Object` `dynamicMethod`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.dynamicMethod:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$MethodToInvoke;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L43fa34.  v3:= `@@com.google.crypto.tink.proto.EcdsaParams$a.a` @type ^`int`[] @kind object;
  #L43fa38.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L43fa3e.  v2:= temp;
  #L43fa40.  v2:= v3[v2];
  #L43fa44.  v3:= 1I;
  #L43fa46.  v4:= 0I;
  #L43fa48.  goto L43faec;
  #L43fa4e.  v2:= new `java.lang.UnsupportedOperationException`;
  #L43fa52.  call `<init>`(v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L43fa58.  throw v2;
  #L43fa5a.  return v4 @kind object;
  #L43fa5c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L43fa62.  v2:= temp @kind object;
  #L43fa64.  return v2 @kind object;
  #L43fa66.  v2:= `@@com.google.crypto.tink.proto.EcdsaParams.PARSER` @type ^`com.google.crypto.tink.shaded.protobuf.Parser` @kind object;
  #L43fa6a.  if v2 != 0 then goto L43fa98;
  #L43fa6e.  v3:= constclass @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43fa72.  @monitorenter v3
  #L43fa74.  v2:= `@@com.google.crypto.tink.proto.EcdsaParams.PARSER` @type ^`com.google.crypto.tink.shaded.protobuf.Parser` @kind object;
  #L43fa78.  if v2 != 0 then goto L43fa8e;
  #L43fa7c.  v2:= new `com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$DefaultInstanceBasedParser`;
  #L43fa80.  v4:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43fa84.  call `<init>`(v2, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$DefaultInstanceBasedParser;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;)V` @kind direct;
  #L43fa8a.  `@@com.google.crypto.tink.proto.EcdsaParams.PARSER` @type ^`com.google.crypto.tink.shaded.protobuf.Parser` := v2 @kind object;
  #L43fa8e.  @monitorexit v3
  #L43fa90.  goto L43fa98;
  #L43fa92.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43fa94.  @monitorexit v3
  #L43fa96.  throw v2;
  #L43fa98.  return v2 @kind object;
  #L43fa9a.  v2:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43fa9e.  return v2 @kind object;
  #L43faa0.  v2:= 3I;
  #L43faa2.  v2:= new `java.lang.Object`[v2];
  #L43faa6.  v4:= 0I;
  #L43faa8.  v0:= "hashType_" @kind object;
  #L43faac.  v2[v4]:= v0 @kind object;
  #L43fab0.  v4:= "curve_" @kind object;
  #L43fab4.  v2[v3]:= v4 @kind object;
  #L43fab8.  v3:= 2I;
  #L43faba.  v4:= "encoding_" @kind object;
  #L43fabe.  v2[v3]:= v4 @kind object;
  #L43fac2.  v3:= "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\f\u0002\f\u0003\f" @kind object;
  #L43fac6.  v4:= `@@com.google.crypto.tink.proto.EcdsaParams.DEFAULT_INSTANCE` @type ^`com.google.crypto.tink.proto.EcdsaParams` @kind object;
  #L43faca.  call temp:= `newMessageInfo`(v4, v3, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.newMessageInfo:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L43fad0.  v2:= temp @kind object;
  #L43fad2.  return v2 @kind object;
  #L43fad4.  v2:= new `com.google.crypto.tink.proto.EcdsaParams$Builder`;
  #L43fad8.  call `<init>`(v2, v4) @signature `Lcom/google/crypto/tink/proto/EcdsaParams$Builder;.<init>:(Lcom/google/crypto/tink/proto/EcdsaParams$a;)V` @kind direct;
  #L43fade.  return v2 @kind object;
  #L43fae0.  v2:= new `com.google.crypto.tink.proto.EcdsaParams`;
  #L43fae4.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.<init>:()V` @kind direct;
  #L43faea.  return v2 @kind object;
  #L43faec.  switch v2
                  | 1 => goto L43fae0
                  | 2 => goto L43fad4
                  | 3 => goto L43faa0
                  | 4 => goto L43fa9a
                  | 5 => goto L43fa66
                  | 6 => goto L43fa5c
                  | 7 => goto L43fa5a
                  | else => goto L43fa4e;
  catch `java.lang.Throwable` @[L43fa74..L43fa96] goto L43fa92;
}
procedure `com.google.crypto.tink.proto.EllipticCurveType` `getCurve`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getCurve:()Lcom/google/crypto/tink/proto/EllipticCurveType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43f97c.  v0:= v1.`com.google.crypto.tink.proto.EcdsaParams.curve_` @type ^`int`;
  #L43f980.  call temp:= `forNumber`(v0) @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.forNumber:(I)Lcom/google/crypto/tink/proto/EllipticCurveType;` @kind static;
  #L43f986.  v0:= temp @kind object;
  #L43f988.  if v0 != 0 then goto L43f990;
  #L43f98c.  v0:= `@@com.google.crypto.tink.proto.EllipticCurveType.UNRECOGNIZED` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L43f990.  return v0 @kind object;
}
procedure `int` `getCurveValue`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getCurveValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43f9ec.  v0:= v1.`com.google.crypto.tink.proto.EcdsaParams.curve_` @type ^`int`;
  #L43f9f0.  return v0;
}
procedure `com.google.crypto.tink.proto.EcdsaSignatureEncoding` `getEncoding`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getEncoding:()Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43f954.  v0:= v1.`com.google.crypto.tink.proto.EcdsaParams.encoding_` @type ^`int`;
  #L43f958.  call temp:= `forNumber`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;.forNumber:(I)Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;` @kind static;
  #L43f95e.  v0:= temp @kind object;
  #L43f960.  if v0 != 0 then goto L43f968;
  #L43f964.  v0:= `@@com.google.crypto.tink.proto.EcdsaSignatureEncoding.UNRECOGNIZED` @type ^`com.google.crypto.tink.proto.EcdsaSignatureEncoding` @kind object;
  #L43f968.  return v0 @kind object;
}
procedure `int` `getEncodingValue`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getEncodingValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43fa04.  v0:= v1.`com.google.crypto.tink.proto.EcdsaParams.encoding_` @type ^`int`;
  #L43fa08.  return v0;
}
procedure `com.google.crypto.tink.proto.HashType` `getHashType`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getHashType:()Lcom/google/crypto/tink/proto/HashType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43f9a4.  v0:= v1.`com.google.crypto.tink.proto.EcdsaParams.hashType_` @type ^`int`;
  #L43f9a8.  call temp:= `forNumber`(v0) @signature `Lcom/google/crypto/tink/proto/HashType;.forNumber:(I)Lcom/google/crypto/tink/proto/HashType;` @kind static;
  #L43f9ae.  v0:= temp @kind object;
  #L43f9b0.  if v0 != 0 then goto L43f9b8;
  #L43f9b4.  v0:= `@@com.google.crypto.tink.proto.HashType.UNRECOGNIZED` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L43f9b8.  return v0 @kind object;
}
procedure `int` `getHashTypeValue`(`com.google.crypto.tink.proto.EcdsaParams` v1 @kind this) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getHashTypeValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43fa1c.  v0:= v1.`com.google.crypto.tink.proto.EcdsaParams.hashType_` @type ^`int`;
  #L43fa20.  return v0;
}
