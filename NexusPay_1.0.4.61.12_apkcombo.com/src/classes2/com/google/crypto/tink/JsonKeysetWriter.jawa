record `com.google.crypto.tink.JsonKeysetWriter` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.KeysetWriter` @kind interface {
  `java.io.OutputStream` `com.google.crypto.tink.JsonKeysetWriter.a` @AccessFlag PRIVATE_FINAL;
}
global `java.nio.charset.Charset` `@@com.google.crypto.tink.JsonKeysetWriter.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L424fe4.  v0:= "UTF-8" @kind object;
  #L424fe8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L424fee.  v0:= temp @kind object;
  #L424ff0.  `@@com.google.crypto.tink.JsonKeysetWriter.b` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L424ff4.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.JsonKeysetWriter` v0 @kind this, `java.io.OutputStream` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.<init>:(Ljava/io/OutputStream;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L425008.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42500e.  v0.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` := v1 @kind object;
  #L425012.  return @kind void;
}
procedure `org.json.JSONObject` `a`(`com.google.crypto.tink.JsonKeysetWriter` v3 @kind this, `com.google.crypto.tink.proto.EncryptedKeyset` v4 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.a:(Lcom/google/crypto/tink/proto/EncryptedKeyset;)Lorg/json/JSONObject;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L424d08.  v0:= new `org.json.JSONObject`;
  #L424d0c.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L424d12.  call temp:= `getEncryptedKeyset`(v4) @signature `Lcom/google/crypto/tink/proto/EncryptedKeyset;.getEncryptedKeyset:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L424d18.  v1:= temp @kind object;
  #L424d1a.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L424d20.  v1:= temp @kind object;
  #L424d22.  call temp:= `encode`(v1) @signature `Lcom/google/crypto/tink/subtle/Base64;.encode:([B)Ljava/lang/String;` @kind static;
  #L424d28.  v1:= temp @kind object;
  #L424d2a.  v2:= "encryptedKeyset" @kind object;
  #L424d2e.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L424d34.  v0:= temp @kind object;
  #L424d36.  call temp:= `getKeysetInfo`(v4) @signature `Lcom/google/crypto/tink/proto/EncryptedKeyset;.getKeysetInfo:()Lcom/google/crypto/tink/proto/KeysetInfo;` @kind virtual;
  #L424d3c.  v4:= temp @kind object;
  #L424d3e.  call temp:= `f`(v3, v4) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.f:(Lcom/google/crypto/tink/proto/KeysetInfo;)Lorg/json/JSONObject;` @kind direct;
  #L424d44.  v4:= temp @kind object;
  #L424d46.  v1:= "keysetInfo" @kind object;
  #L424d4a.  call temp:= `put`(v0, v1, v4) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L424d50.  v4:= temp @kind object;
  #L424d52.  return v4 @kind object;
}
procedure `org.json.JSONObject` `b`(`com.google.crypto.tink.JsonKeysetWriter` v3 @kind this, `com.google.crypto.tink.proto.KeyData` v4 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.b:(Lcom/google/crypto/tink/proto/KeyData;)Lorg/json/JSONObject;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L424d64.  v0:= new `org.json.JSONObject`;
  #L424d68.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L424d6e.  call temp:= `getTypeUrl`(v4) @signature `Lcom/google/crypto/tink/proto/KeyData;.getTypeUrl:()Ljava/lang/String;` @kind virtual;
  #L424d74.  v1:= temp @kind object;
  #L424d76.  v2:= "typeUrl" @kind object;
  #L424d7a.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L424d80.  v0:= temp @kind object;
  #L424d82.  call temp:= `getValue`(v4) @signature `Lcom/google/crypto/tink/proto/KeyData;.getValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L424d88.  v1:= temp @kind object;
  #L424d8a.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L424d90.  v1:= temp @kind object;
  #L424d92.  call temp:= `encode`(v1) @signature `Lcom/google/crypto/tink/subtle/Base64;.encode:([B)Ljava/lang/String;` @kind static;
  #L424d98.  v1:= temp @kind object;
  #L424d9a.  v2:= "value" @kind object;
  #L424d9e.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L424da4.  v0:= temp @kind object;
  #L424da6.  call temp:= `getKeyMaterialType`(v4) @signature `Lcom/google/crypto/tink/proto/KeyData;.getKeyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @kind virtual;
  #L424dac.  v4:= temp @kind object;
  #L424dae.  call temp:= `name`(v4) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L424db4.  v4:= temp @kind object;
  #L424db6.  v1:= "keyMaterialType" @kind object;
  #L424dba.  call temp:= `put`(v0, v1, v4) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L424dc0.  v4:= temp @kind object;
  #L424dc2.  return v4 @kind object;
}
procedure `org.json.JSONObject` `c`(`com.google.crypto.tink.JsonKeysetWriter` v4 @kind this, `com.google.crypto.tink.proto.Keyset$Key` v5 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.c:(Lcom/google/crypto/tink/proto/Keyset$Key;)Lorg/json/JSONObject;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L424dd4.  v0:= new `org.json.JSONObject`;
  #L424dd8.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L424dde.  call temp:= `getKeyData`(v5) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyData:()Lcom/google/crypto/tink/proto/KeyData;` @kind virtual;
  #L424de4.  v1:= temp @kind object;
  #L424de6.  call temp:= `b`(v4, v1) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.b:(Lcom/google/crypto/tink/proto/KeyData;)Lorg/json/JSONObject;` @kind direct;
  #L424dec.  v1:= temp @kind object;
  #L424dee.  v2:= "keyData" @kind object;
  #L424df2.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L424df8.  v0:= temp @kind object;
  #L424dfa.  call temp:= `getStatus`(v5) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L424e00.  v1:= temp @kind object;
  #L424e02.  call temp:= `name`(v1) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L424e08.  v1:= temp @kind object;
  #L424e0a.  v2:= "status" @kind object;
  #L424e0e.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L424e14.  v0:= temp @kind object;
  #L424e16.  call temp:= `getKeyId`(v5) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L424e1c.  v1:= temp;
  #L424e1e.  call temp:= `g`(v4, v1) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.g:(I)J` @kind direct;
  #L424e24.  v1:= temp @kind wide;
  #L424e26.  v3:= "keyId" @kind object;
  #L424e2a.  call temp:= `put`(v0, v3, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;J)Lorg/json/JSONObject;` @kind virtual;
  #L424e30.  v0:= temp @kind object;
  #L424e32.  call temp:= `getOutputPrefixType`(v5) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getOutputPrefixType:()Lcom/google/crypto/tink/proto/OutputPrefixType;` @kind virtual;
  #L424e38.  v5:= temp @kind object;
  #L424e3a.  call temp:= `name`(v5) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L424e40.  v5:= temp @kind object;
  #L424e42.  v1:= "outputPrefixType" @kind object;
  #L424e46.  call temp:= `put`(v0, v1, v5) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L424e4c.  v5:= temp @kind object;
  #L424e4e.  return v5 @kind object;
}
procedure `org.json.JSONObject` `d`(`com.google.crypto.tink.JsonKeysetWriter` v4 @kind this, `com.google.crypto.tink.proto.Keyset` v5 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.d:(Lcom/google/crypto/tink/proto/Keyset;)Lorg/json/JSONObject;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L424e60.  v0:= new `org.json.JSONObject`;
  #L424e64.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L424e6a.  call temp:= `getPrimaryKeyId`(v5) @signature `Lcom/google/crypto/tink/proto/Keyset;.getPrimaryKeyId:()I` @kind virtual;
  #L424e70.  v1:= temp;
  #L424e72.  call temp:= `g`(v4, v1) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.g:(I)J` @kind direct;
  #L424e78.  v1:= temp @kind wide;
  #L424e7a.  v3:= "primaryKeyId" @kind object;
  #L424e7e.  call temp:= `put`(v0, v3, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;J)Lorg/json/JSONObject;` @kind virtual;
  #L424e84.  v1:= new `org.json.JSONArray`;
  #L424e88.  call `<init>`(v1) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L424e8e.  call temp:= `getKeyList`(v5) @signature `Lcom/google/crypto/tink/proto/Keyset;.getKeyList:()Ljava/util/List;` @kind virtual;
  #L424e94.  v5:= temp @kind object;
  #L424e96.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L424e9c.  v5:= temp @kind object;
  #L424e9e.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L424ea4.  v2:= temp;
  #L424ea6.  if v2 == 0 then goto L424ec6;
  #L424eaa.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L424eb0.  v2:= temp @kind object;
  #L424eb2.  v2:= (`com.google.crypto.tink.proto.Keyset$Key`) v2 @kind object;
  #L424eb6.  call temp:= `c`(v4, v2) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.c:(Lcom/google/crypto/tink/proto/Keyset$Key;)Lorg/json/JSONObject;` @kind direct;
  #L424ebc.  v2:= temp @kind object;
  #L424ebe.  call temp:= `put`(v1, v2) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L424ec4.  goto L424e9e;
  #L424ec6.  v5:= "key" @kind object;
  #L424eca.  call temp:= `put`(v0, v5, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L424ed0.  return v0 @kind object;
}
procedure `org.json.JSONObject` `e`(`com.google.crypto.tink.JsonKeysetWriter` v3 @kind this, `com.google.crypto.tink.proto.KeysetInfo$KeyInfo` v4 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.e:(Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;)Lorg/json/JSONObject;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L424ee4.  v0:= new `org.json.JSONObject`;
  #L424ee8.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L424eee.  call temp:= `getTypeUrl`(v4) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;.getTypeUrl:()Ljava/lang/String;` @kind virtual;
  #L424ef4.  v1:= temp @kind object;
  #L424ef6.  v2:= "typeUrl" @kind object;
  #L424efa.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L424f00.  v0:= temp @kind object;
  #L424f02.  call temp:= `getStatus`(v4) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L424f08.  v1:= temp @kind object;
  #L424f0a.  call temp:= `name`(v1) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L424f10.  v1:= temp @kind object;
  #L424f12.  v2:= "status" @kind object;
  #L424f16.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L424f1c.  v0:= temp @kind object;
  #L424f1e.  call temp:= `getKeyId`(v4) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;.getKeyId:()I` @kind virtual;
  #L424f24.  v1:= temp;
  #L424f26.  v2:= "keyId" @kind object;
  #L424f2a.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;I)Lorg/json/JSONObject;` @kind virtual;
  #L424f30.  v0:= temp @kind object;
  #L424f32.  call temp:= `getOutputPrefixType`(v4) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;.getOutputPrefixType:()Lcom/google/crypto/tink/proto/OutputPrefixType;` @kind virtual;
  #L424f38.  v4:= temp @kind object;
  #L424f3a.  call temp:= `name`(v4) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L424f40.  v4:= temp @kind object;
  #L424f42.  v1:= "outputPrefixType" @kind object;
  #L424f46.  call temp:= `put`(v0, v1, v4) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L424f4c.  v4:= temp @kind object;
  #L424f4e.  return v4 @kind object;
}
procedure `org.json.JSONObject` `f`(`com.google.crypto.tink.JsonKeysetWriter` v4 @kind this, `com.google.crypto.tink.proto.KeysetInfo` v5 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.f:(Lcom/google/crypto/tink/proto/KeysetInfo;)Lorg/json/JSONObject;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L424f60.  v0:= new `org.json.JSONObject`;
  #L424f64.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L424f6a.  call temp:= `getPrimaryKeyId`(v5) @signature `Lcom/google/crypto/tink/proto/KeysetInfo;.getPrimaryKeyId:()I` @kind virtual;
  #L424f70.  v1:= temp;
  #L424f72.  call temp:= `g`(v4, v1) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.g:(I)J` @kind direct;
  #L424f78.  v1:= temp @kind wide;
  #L424f7a.  v3:= "primaryKeyId" @kind object;
  #L424f7e.  call temp:= `put`(v0, v3, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;J)Lorg/json/JSONObject;` @kind virtual;
  #L424f84.  v1:= new `org.json.JSONArray`;
  #L424f88.  call `<init>`(v1) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L424f8e.  call temp:= `getKeyInfoList`(v5) @signature `Lcom/google/crypto/tink/proto/KeysetInfo;.getKeyInfoList:()Ljava/util/List;` @kind virtual;
  #L424f94.  v5:= temp @kind object;
  #L424f96.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L424f9c.  v5:= temp @kind object;
  #L424f9e.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L424fa4.  v2:= temp;
  #L424fa6.  if v2 == 0 then goto L424fc6;
  #L424faa.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L424fb0.  v2:= temp @kind object;
  #L424fb2.  v2:= (`com.google.crypto.tink.proto.KeysetInfo$KeyInfo`) v2 @kind object;
  #L424fb6.  call temp:= `e`(v4, v2) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.e:(Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;)Lorg/json/JSONObject;` @kind direct;
  #L424fbc.  v2:= temp @kind object;
  #L424fbe.  call temp:= `put`(v1, v2) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L424fc4.  goto L424f9e;
  #L424fc6.  v5:= "keyInfo" @kind object;
  #L424fca.  call temp:= `put`(v0, v5, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L424fd0.  return v0 @kind object;
}
procedure `long` `g`(`com.google.crypto.tink.JsonKeysetWriter` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.g:(I)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L424ce8.  v0:= (`long`) v5 @kind i2l;
  #L424cea.  v2:= 4294967295L;
  #L424cf4.  v0:= v0 ^& v2 @kind long;
  #L424cf6.  return v0 @kind wide;
}
procedure `com.google.crypto.tink.KeysetWriter` `withFile`(`java.io.File` v2 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.withFile:(Ljava/io/File;)Lcom/google/crypto/tink/KeysetWriter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L424c5c.  v0:= new `com.google.crypto.tink.JsonKeysetWriter`;
  #L424c60.  v1:= new `java.io.FileOutputStream`;
  #L424c64.  call `<init>`(v1, v2) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L424c6a.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L424c70.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeysetWriter` `withOutputStream`(`java.io.OutputStream` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.withOutputStream:(Ljava/io/OutputStream;)Lcom/google/crypto/tink/KeysetWriter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L424c84.  v0:= new `com.google.crypto.tink.JsonKeysetWriter`;
  #L424c88.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L424c8e.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeysetWriter` `withPath`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.withPath:(Ljava/lang/String;)Lcom/google/crypto/tink/KeysetWriter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L424ca0.  v0:= new `java.io.File`;
  #L424ca4.  call `<init>`(v0, v1) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L424caa.  call temp:= `withFile`(v0) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.withFile:(Ljava/io/File;)Lcom/google/crypto/tink/KeysetWriter;` @kind static;
  #L424cb0.  v1:= temp @kind object;
  #L424cb2.  return v1 @kind object;
}
procedure `com.google.crypto.tink.KeysetWriter` `withPath`(`java.nio.file.Path` v0 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.withPath:(Ljava/nio/file/Path;)Lcom/google/crypto/tink/KeysetWriter;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L424cc4.  call temp:= `toFile`(v0) @signature `Ljava/nio/file/Path;.toFile:()Ljava/io/File;` @kind interface;
  #L424cca.  v0:= temp @kind object;
  #L424ccc.  call temp:= `withFile`(v0) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.withFile:(Ljava/io/File;)Lcom/google/crypto/tink/KeysetWriter;` @kind static;
  #L424cd2.  v0:= temp @kind object;
  #L424cd4.  return v0 @kind object;
}
procedure `void` `write`(`com.google.crypto.tink.JsonKeysetWriter` v2 @kind this, `com.google.crypto.tink.proto.EncryptedKeyset` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.write:(Lcom/google/crypto/tink/proto/EncryptedKeyset;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L425024.  v0:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L425028.  call temp:= `a`(v2, v3) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.a:(Lcom/google/crypto/tink/proto/EncryptedKeyset;)Lorg/json/JSONObject;` @kind direct;
  #L42502e.  v3:= temp @kind object;
  #L425030.  v1:= 4I;
  #L425032.  call temp:= `toString`(v3, v1) @signature `Lorg/json/JSONObject;.toString:(I)Ljava/lang/String;` @kind virtual;
  #L425038.  v3:= temp @kind object;
  #L42503a.  v1:= `@@com.google.crypto.tink.JsonKeysetWriter.b` @type ^`java.nio.charset.Charset` @kind object;
  #L42503e.  call temp:= `getBytes`(v3, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L425044.  v3:= temp @kind object;
  #L425046.  call `write`(v0, v3) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L42504c.  v3:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L425050.  call temp:= `lineSeparator`() @signature `Ljava/lang/System;.lineSeparator:()Ljava/lang/String;` @kind static;
  #L425056.  v0:= temp @kind object;
  #L425058.  v1:= `@@com.google.crypto.tink.JsonKeysetWriter.b` @type ^`java.nio.charset.Charset` @kind object;
  #L42505c.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L425062.  v0:= temp @kind object;
  #L425064.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L42506a.  v3:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L42506e.  call `close`(v3) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L425074.  return @kind void;
  #L425076.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L425078.  goto L425088;
  #L42507a.  v3:= Exception @type ^`org.json.JSONException` @kind object;
  #L42507c.  v0:= new `java.io.IOException`;
  #L425080.  call `<init>`(v0, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L425086.  throw v0;
  #L425088.  v0:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L42508c.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L425092.  throw v3;
  catch `org.json.JSONException` @[L425024..L42506a] goto L42507a;
  catch `java.lang.Throwable` @[L425024..L42506a] goto L425076;
  catch `java.lang.Throwable` @[L42507c..L425088] goto L425076;
}
procedure `void` `write`(`com.google.crypto.tink.JsonKeysetWriter` v2 @kind this, `com.google.crypto.tink.proto.Keyset` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.write:(Lcom/google/crypto/tink/proto/Keyset;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4250bc.  v0:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L4250c0.  call temp:= `d`(v2, v3) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.d:(Lcom/google/crypto/tink/proto/Keyset;)Lorg/json/JSONObject;` @kind direct;
  #L4250c6.  v3:= temp @kind object;
  #L4250c8.  v1:= 4I;
  #L4250ca.  call temp:= `toString`(v3, v1) @signature `Lorg/json/JSONObject;.toString:(I)Ljava/lang/String;` @kind virtual;
  #L4250d0.  v3:= temp @kind object;
  #L4250d2.  v1:= `@@com.google.crypto.tink.JsonKeysetWriter.b` @type ^`java.nio.charset.Charset` @kind object;
  #L4250d6.  call temp:= `getBytes`(v3, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L4250dc.  v3:= temp @kind object;
  #L4250de.  call `write`(v0, v3) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L4250e4.  v3:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L4250e8.  call temp:= `lineSeparator`() @signature `Ljava/lang/System;.lineSeparator:()Ljava/lang/String;` @kind static;
  #L4250ee.  v0:= temp @kind object;
  #L4250f0.  v1:= `@@com.google.crypto.tink.JsonKeysetWriter.b` @type ^`java.nio.charset.Charset` @kind object;
  #L4250f4.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L4250fa.  v0:= temp @kind object;
  #L4250fc.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L425102.  v3:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L425106.  call `close`(v3) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L42510c.  return @kind void;
  #L42510e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L425110.  goto L425120;
  #L425112.  v3:= Exception @type ^`org.json.JSONException` @kind object;
  #L425114.  v0:= new `java.io.IOException`;
  #L425118.  call `<init>`(v0, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L42511e.  throw v0;
  #L425120.  v0:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L425124.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L42512a.  throw v3;
  catch `org.json.JSONException` @[L4250bc..L425102] goto L425112;
  catch `java.lang.Throwable` @[L4250bc..L425102] goto L42510e;
  catch `java.lang.Throwable` @[L425114..L425120] goto L42510e;
}
