record `com.google.crypto.tink.CryptoFormat` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@com.google.crypto.tink.CryptoFormat.LEGACY_PREFIX_SIZE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.google.crypto.tink.CryptoFormat.LEGACY_START_BYTE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.CryptoFormat.NON_RAW_PREFIX_SIZE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@com.google.crypto.tink.CryptoFormat.RAW_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.CryptoFormat.RAW_PREFIX_SIZE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.CryptoFormat.TINK_PREFIX_SIZE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.google.crypto.tink.CryptoFormat.TINK_START_BYTE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/CryptoFormat;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4242dc.  v0:= 0I;
  #L4242de.  v0:= new `byte`[v0];
  #L4242e2.  `@@com.google.crypto.tink.CryptoFormat.RAW_PREFIX` @type ^`byte`[] := v0 @kind object;
  #L4242e6.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.CryptoFormat` v0 @kind this) @signature `Lcom/google/crypto/tink/CryptoFormat;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4242f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4242fe.  return @kind void;
}
procedure `byte`[] `getOutputPrefix`(`com.google.crypto.tink.proto.Keyset$Key` v4 @kind object) @signature `Lcom/google/crypto/tink/CryptoFormat;.getOutputPrefix:(Lcom/google/crypto/tink/proto/Keyset$Key;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42422c.  v0:= `@@com.google.crypto.tink.CryptoFormat$a.a` @type ^`int`[] @kind object;
  #L424230.  call temp:= `getOutputPrefixType`(v4) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getOutputPrefixType:()Lcom/google/crypto/tink/proto/OutputPrefixType;` @kind virtual;
  #L424236.  v1:= temp @kind object;
  #L424238.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L42423e.  v1:= temp;
  #L424240.  v0:= v0[v1];
  #L424244.  v1:= 5I;
  #L424246.  v2:= 1I;
  #L424248.  if v0 == v2 then goto L42429e;
  #L42424c.  v3:= 2I;
  #L42424e.  if v0 == v3 then goto L42429e;
  #L424252.  v3:= 3I;
  #L424254.  if v0 == v3 then goto L424274;
  #L424258.  v4:= 4I;
  #L42425a.  if v0 != v4 then goto L424264;
  #L42425e.  v4:= `@@com.google.crypto.tink.CryptoFormat.RAW_PREFIX` @type ^`byte`[] @kind object;
  #L424262.  return v4 @kind object;
  #L424264.  v4:= new `java.security.GeneralSecurityException`;
  #L424268.  v0:= "unknown output prefix type" @kind object;
  #L42426c.  call `<init>`(v4, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L424272.  throw v4;
  #L424274.  call temp:= `allocate`(v1) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L42427a.  v0:= temp @kind object;
  #L42427c.  call temp:= `put`(v0, v2) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L424282.  v0:= temp @kind object;
  #L424284.  call temp:= `getKeyId`(v4) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L42428a.  v4:= temp;
  #L42428c.  call temp:= `putInt`(v0, v4) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L424292.  v4:= temp @kind object;
  #L424294.  call temp:= `array`(v4) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L42429a.  v4:= temp @kind object;
  #L42429c.  return v4 @kind object;
  #L42429e.  call temp:= `allocate`(v1) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L4242a4.  v0:= temp @kind object;
  #L4242a6.  v1:= 0I;
  #L4242a8.  call temp:= `put`(v0, v1) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L4242ae.  v0:= temp @kind object;
  #L4242b0.  call temp:= `getKeyId`(v4) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L4242b6.  v4:= temp;
  #L4242b8.  call temp:= `putInt`(v0, v4) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L4242be.  v4:= temp @kind object;
  #L4242c0.  call temp:= `array`(v4) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L4242c6.  v4:= temp @kind object;
  #L4242c8.  return v4 @kind object;
}
