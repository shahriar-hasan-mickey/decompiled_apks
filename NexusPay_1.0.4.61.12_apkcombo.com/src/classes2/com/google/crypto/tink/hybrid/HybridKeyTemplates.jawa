record `com.google.crypto.tink.hybrid.HybridKeyTemplates` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.ECIES_P256_HKDF_HMAC_SHA256_AES128_CTR_HMAC_SHA256` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.ECIES_P256_HKDF_HMAC_SHA256_AES128_GCM` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.ECIES_P256_HKDF_HMAC_SHA256_AES128_GCM_COMPRESSED_WITHOUT_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L42d67c.  v0:= 0I;
  #L42d67e.  v0:= new `byte`[v0];
  #L42d682.  `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.a` @type ^`byte`[] := v0 @kind object;
  #L42d686.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P256` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L42d68a.  v2:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L42d68e.  v3:= `@@com.google.crypto.tink.proto.EcPointFormat.UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L42d692.  v4:= `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES128_GCM` @type ^`com.google.crypto.tink.proto.KeyTemplate` @kind object;
  #L42d696.  v5:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L42d69a.  v6:= `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.a` @type ^`byte`[] @kind object;
  #L42d69e.  call temp:= `createEciesAeadHkdfKeyTemplate`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.createEciesAeadHkdfKeyTemplate:(Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EcPointFormat;Lcom/google/crypto/tink/proto/KeyTemplate;Lcom/google/crypto/tink/proto/OutputPrefixType;[B)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L42d6a4.  v0:= temp @kind object;
  #L42d6a6.  `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.ECIES_P256_HKDF_HMAC_SHA256_AES128_GCM` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L42d6aa.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P256` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L42d6ae.  v2:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L42d6b2.  v3:= `@@com.google.crypto.tink.proto.EcPointFormat.COMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L42d6b6.  v4:= `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES128_GCM` @type ^`com.google.crypto.tink.proto.KeyTemplate` @kind object;
  #L42d6ba.  v5:= `@@com.google.crypto.tink.proto.OutputPrefixType.RAW` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L42d6be.  v6:= `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.a` @type ^`byte`[] @kind object;
  #L42d6c2.  call temp:= `createEciesAeadHkdfKeyTemplate`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.createEciesAeadHkdfKeyTemplate:(Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EcPointFormat;Lcom/google/crypto/tink/proto/KeyTemplate;Lcom/google/crypto/tink/proto/OutputPrefixType;[B)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L42d6c8.  v0:= temp @kind object;
  #L42d6ca.  `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.ECIES_P256_HKDF_HMAC_SHA256_AES128_GCM_COMPRESSED_WITHOUT_PREFIX` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L42d6ce.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P256` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L42d6d2.  v2:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L42d6d6.  v3:= `@@com.google.crypto.tink.proto.EcPointFormat.UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L42d6da.  v4:= `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES128_CTR_HMAC_SHA256` @type ^`com.google.crypto.tink.proto.KeyTemplate` @kind object;
  #L42d6de.  v5:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L42d6e2.  v6:= `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.a` @type ^`byte`[] @kind object;
  #L42d6e6.  call temp:= `createEciesAeadHkdfKeyTemplate`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.createEciesAeadHkdfKeyTemplate:(Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EcPointFormat;Lcom/google/crypto/tink/proto/KeyTemplate;Lcom/google/crypto/tink/proto/OutputPrefixType;[B)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L42d6ec.  v0:= temp @kind object;
  #L42d6ee.  `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.ECIES_P256_HKDF_HMAC_SHA256_AES128_CTR_HMAC_SHA256` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L42d6f2.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.hybrid.HybridKeyTemplates` v0 @kind this) @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42d704.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42d70a.  return @kind void;
}
procedure `com.google.crypto.tink.proto.KeyTemplate` `createEciesAeadHkdfKeyTemplate`(`com.google.crypto.tink.proto.EllipticCurveType` v1 @kind object, `com.google.crypto.tink.proto.HashType` v2 @kind object, `com.google.crypto.tink.proto.EcPointFormat` v3 @kind object, `com.google.crypto.tink.proto.KeyTemplate` v4 @kind object, `com.google.crypto.tink.proto.OutputPrefixType` v5 @kind object, `byte`[] v6 @kind object) @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.createEciesAeadHkdfKeyTemplate:(Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EcPointFormat;Lcom/google/crypto/tink/proto/KeyTemplate;Lcom/google/crypto/tink/proto/OutputPrefixType;[B)Lcom/google/crypto/tink/proto/KeyTemplate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42d600.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat$Builder;` @kind static;
  #L42d606.  v0:= temp @kind object;
  #L42d608.  call temp:= `createEciesAeadHkdfParams`(v1, v2, v3, v4, v6) @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.createEciesAeadHkdfParams:(Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EcPointFormat;Lcom/google/crypto/tink/proto/KeyTemplate;[B)Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;` @kind static;
  #L42d60e.  v1:= temp @kind object;
  #L42d610.  call temp:= `setParams`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;)Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat$Builder;` @kind virtual;
  #L42d616.  v1:= temp @kind object;
  #L42d618.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L42d61e.  v1:= temp @kind object;
  #L42d620.  v1:= (`com.google.crypto.tink.proto.EciesAeadHkdfKeyFormat`) v1 @kind object;
  #L42d624.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L42d62a.  v2:= temp @kind object;
  #L42d62c.  v3:= new `com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager`;
  #L42d630.  call `<init>`(v3) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager;.<init>:()V` @kind direct;
  #L42d636.  call temp:= `getKeyType`(v3) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L42d63c.  v3:= temp @kind object;
  #L42d63e.  call temp:= `setTypeUrl`(v2, v3) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L42d644.  v2:= temp @kind object;
  #L42d646.  call temp:= `setOutputPrefixType`(v2, v5) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L42d64c.  v2:= temp @kind object;
  #L42d64e.  call temp:= `toByteString`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L42d654.  v1:= temp @kind object;
  #L42d656.  call temp:= `setValue`(v2, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L42d65c.  v1:= temp @kind object;
  #L42d65e.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L42d664.  v1:= temp @kind object;
  #L42d666.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L42d66a.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EciesAeadHkdfParams` `createEciesAeadHkdfParams`(`com.google.crypto.tink.proto.EllipticCurveType` v1 @kind object, `com.google.crypto.tink.proto.HashType` v2 @kind object, `com.google.crypto.tink.proto.EcPointFormat` v3 @kind object, `com.google.crypto.tink.proto.KeyTemplate` v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.createEciesAeadHkdfParams:(Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EcPointFormat;Lcom/google/crypto/tink/proto/KeyTemplate;[B)Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42d570.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EciesHkdfKemParams;.newBuilder:()Lcom/google/crypto/tink/proto/EciesHkdfKemParams$Builder;` @kind static;
  #L42d576.  v0:= temp @kind object;
  #L42d578.  call temp:= `setCurveType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EciesHkdfKemParams$Builder;.setCurveType:(Lcom/google/crypto/tink/proto/EllipticCurveType;)Lcom/google/crypto/tink/proto/EciesHkdfKemParams$Builder;` @kind virtual;
  #L42d57e.  v1:= temp @kind object;
  #L42d580.  call temp:= `setHkdfHashType`(v1, v2) @signature `Lcom/google/crypto/tink/proto/EciesHkdfKemParams$Builder;.setHkdfHashType:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/EciesHkdfKemParams$Builder;` @kind virtual;
  #L42d586.  v1:= temp @kind object;
  #L42d588.  call temp:= `copyFrom`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L42d58e.  v2:= temp @kind object;
  #L42d590.  call temp:= `setHkdfSalt`(v1, v2) @signature `Lcom/google/crypto/tink/proto/EciesHkdfKemParams$Builder;.setHkdfSalt:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/EciesHkdfKemParams$Builder;` @kind virtual;
  #L42d596.  v1:= temp @kind object;
  #L42d598.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L42d59e.  v1:= temp @kind object;
  #L42d5a0.  v1:= (`com.google.crypto.tink.proto.EciesHkdfKemParams`) v1 @kind object;
  #L42d5a4.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EciesAeadDemParams;.newBuilder:()Lcom/google/crypto/tink/proto/EciesAeadDemParams$Builder;` @kind static;
  #L42d5aa.  v2:= temp @kind object;
  #L42d5ac.  call temp:= `setAeadDem`(v2, v4) @signature `Lcom/google/crypto/tink/proto/EciesAeadDemParams$Builder;.setAeadDem:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/proto/EciesAeadDemParams$Builder;` @kind virtual;
  #L42d5b2.  v2:= temp @kind object;
  #L42d5b4.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L42d5ba.  v2:= temp @kind object;
  #L42d5bc.  v2:= (`com.google.crypto.tink.proto.EciesAeadDemParams`) v2 @kind object;
  #L42d5c0.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;.newBuilder:()Lcom/google/crypto/tink/proto/EciesAeadHkdfParams$Builder;` @kind static;
  #L42d5c6.  v4:= temp @kind object;
  #L42d5c8.  call temp:= `setKemParams`(v4, v1) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfParams$Builder;.setKemParams:(Lcom/google/crypto/tink/proto/EciesHkdfKemParams;)Lcom/google/crypto/tink/proto/EciesAeadHkdfParams$Builder;` @kind virtual;
  #L42d5ce.  v1:= temp @kind object;
  #L42d5d0.  call temp:= `setDemParams`(v1, v2) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfParams$Builder;.setDemParams:(Lcom/google/crypto/tink/proto/EciesAeadDemParams;)Lcom/google/crypto/tink/proto/EciesAeadHkdfParams$Builder;` @kind virtual;
  #L42d5d6.  v1:= temp @kind object;
  #L42d5d8.  call temp:= `setEcPointFormat`(v1, v3) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfParams$Builder;.setEcPointFormat:(Lcom/google/crypto/tink/proto/EcPointFormat;)Lcom/google/crypto/tink/proto/EciesAeadHkdfParams$Builder;` @kind virtual;
  #L42d5de.  v1:= temp @kind object;
  #L42d5e0.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L42d5e6.  v1:= temp @kind object;
  #L42d5e8.  v1:= (`com.google.crypto.tink.proto.EciesAeadHkdfParams`) v1 @kind object;
  #L42d5ec.  return v1 @kind object;
}
