record `com.google.crypto.tink.hybrid.c$a` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@com.google.crypto.tink.hybrid.c$a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `int`[] `@@com.google.crypto.tink.hybrid.c$a.b` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `int`[] `@@com.google.crypto.tink.hybrid.c$a.c` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/hybrid/c$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L42d71c.  call temp:= `values`() @signature `Lcom/google/crypto/tink/proto/EcPointFormat;.values:()[Lcom/google/crypto/tink/proto/EcPointFormat;` @kind static;
  #L42d722.  v0:= temp @kind object;
  #L42d724.  v0:= length @variable v0;
  #L42d726.  v0:= new `int`[v0];
  #L42d72a.  `@@com.google.crypto.tink.hybrid.c$a.c` @type ^`int`[] := v0 @kind object;
  #L42d72e.  v1:= 1I;
  #L42d730.  v2:= `@@com.google.crypto.tink.proto.EcPointFormat.UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L42d734.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L42d73a.  v2:= temp;
  #L42d73c.  v0[v2]:= v1;
  #L42d740.  v0:= 2I;
  #L42d742.  v2:= `@@com.google.crypto.tink.hybrid.c$a.c` @type ^`int`[] @kind object;
  #L42d746.  v3:= `@@com.google.crypto.tink.proto.EcPointFormat.DO_NOT_USE_CRUNCHY_UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L42d74a.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L42d750.  v3:= temp;
  #L42d752.  v2[v3]:= v0;
  #L42d756.  v2:= 3I;
  #L42d758.  v3:= `@@com.google.crypto.tink.hybrid.c$a.c` @type ^`int`[] @kind object;
  #L42d75c.  v4:= `@@com.google.crypto.tink.proto.EcPointFormat.COMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L42d760.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L42d766.  v4:= temp;
  #L42d768.  v3[v4]:= v2;
  #L42d76c.  call temp:= `values`() @signature `Lcom/google/crypto/tink/proto/EllipticCurveType;.values:()[Lcom/google/crypto/tink/proto/EllipticCurveType;` @kind static;
  #L42d772.  v3:= temp @kind object;
  #L42d774.  v3:= length @variable v3;
  #L42d776.  v3:= new `int`[v3];
  #L42d77a.  `@@com.google.crypto.tink.hybrid.c$a.b` @type ^`int`[] := v3 @kind object;
  #L42d77e.  v4:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P256` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L42d782.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L42d788.  v4:= temp;
  #L42d78a.  v3[v4]:= v1;
  #L42d78e.  v3:= `@@com.google.crypto.tink.hybrid.c$a.b` @type ^`int`[] @kind object;
  #L42d792.  v4:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P384` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L42d796.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L42d79c.  v4:= temp;
  #L42d79e.  v3[v4]:= v0;
  #L42d7a2.  v3:= `@@com.google.crypto.tink.hybrid.c$a.b` @type ^`int`[] @kind object;
  #L42d7a6.  v4:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P521` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L42d7aa.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L42d7b0.  v4:= temp;
  #L42d7b2.  v3[v4]:= v2;
  #L42d7b6.  call temp:= `values`() @signature `Lcom/google/crypto/tink/proto/HashType;.values:()[Lcom/google/crypto/tink/proto/HashType;` @kind static;
  #L42d7bc.  v3:= temp @kind object;
  #L42d7be.  v3:= length @variable v3;
  #L42d7c0.  v3:= new `int`[v3];
  #L42d7c4.  `@@com.google.crypto.tink.hybrid.c$a.a` @type ^`int`[] := v3 @kind object;
  #L42d7c8.  v4:= `@@com.google.crypto.tink.proto.HashType.SHA1` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L42d7cc.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L42d7d2.  v4:= temp;
  #L42d7d4.  v3[v4]:= v1;
  #L42d7d8.  v1:= `@@com.google.crypto.tink.hybrid.c$a.a` @type ^`int`[] @kind object;
  #L42d7dc.  v3:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L42d7e0.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L42d7e6.  v3:= temp;
  #L42d7e8.  v1[v3]:= v0;
  #L42d7ec.  v0:= `@@com.google.crypto.tink.hybrid.c$a.a` @type ^`int`[] @kind object;
  #L42d7f0.  v1:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L42d7f4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L42d7fa.  v1:= temp;
  #L42d7fc.  v0[v1]:= v2;
  #L42d800.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L42d730..L42d740] goto L42d740;
  catch `java.lang.NoSuchFieldError` @[L42d742..L42d756] goto L42d756;
  catch `java.lang.NoSuchFieldError` @[L42d758..L42d76c] goto L42d76c;
  catch `java.lang.NoSuchFieldError` @[L42d77e..L42d78e] goto L42d78e;
  catch `java.lang.NoSuchFieldError` @[L42d78e..L42d7a2] goto L42d7a2;
  catch `java.lang.NoSuchFieldError` @[L42d7a2..L42d7b6] goto L42d7b6;
  catch `java.lang.NoSuchFieldError` @[L42d7c8..L42d7d8] goto L42d7d8;
  catch `java.lang.NoSuchFieldError` @[L42d7d8..L42d7ec] goto L42d7ec;
  catch `java.lang.NoSuchFieldError` @[L42d7ec..L42d800] goto L42d800;
}
