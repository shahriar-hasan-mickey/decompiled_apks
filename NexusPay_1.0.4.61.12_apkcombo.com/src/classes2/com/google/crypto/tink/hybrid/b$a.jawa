record `com.google.crypto.tink.hybrid.b$a` @kind class @AccessFlag  extends `com.google.crypto.tink.HybridEncrypt` @kind interface {
  `com.google.crypto.tink.PrimitiveSet` `com.google.crypto.tink.hybrid.b$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.hybrid.b$a` v0 @kind this, `com.google.crypto.tink.PrimitiveSet` v1 @kind object) @signature `Lcom/google/crypto/tink/hybrid/b$a;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42d4b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42d4b6.  v0.`com.google.crypto.tink.hybrid.b$a.a` @type ^`com.google.crypto.tink.PrimitiveSet` := v1 @kind object;
  #L42d4ba.  return @kind void;
}
procedure `byte`[] `encrypt`(`com.google.crypto.tink.hybrid.b$a` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/hybrid/b$a;.encrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42d450.  v0:= 2I;
  #L42d452.  v0:= new `byte`[][v0];
  #L42d456.  v1:= v3.`com.google.crypto.tink.hybrid.b$a.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L42d45a.  call temp:= `getPrimary`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L42d460.  v1:= temp @kind object;
  #L42d462.  call temp:= `getIdentifier`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getIdentifier:()[B` @kind virtual;
  #L42d468.  v1:= temp @kind object;
  #L42d46a.  v2:= 0I;
  #L42d46c.  v0[v2]:= v1 @kind object;
  #L42d470.  v1:= v3.`com.google.crypto.tink.hybrid.b$a.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L42d474.  call temp:= `getPrimary`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L42d47a.  v1:= temp @kind object;
  #L42d47c.  call temp:= `getPrimitive`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L42d482.  v1:= temp @kind object;
  #L42d484.  v1:= (`com.google.crypto.tink.HybridEncrypt`) v1 @kind object;
  #L42d488.  call temp:= `encrypt`(v1, v4, v5) @signature `Lcom/google/crypto/tink/HybridEncrypt;.encrypt:([B[B)[B` @kind interface;
  #L42d48e.  v4:= temp @kind object;
  #L42d490.  v5:= 1I;
  #L42d492.  v0[v5]:= v4 @kind object;
  #L42d496.  call temp:= `concat`(v0) @signature `Lcom/google/crypto/tink/subtle/Bytes;.concat:([[B)[B` @kind static;
  #L42d49c.  v4:= temp @kind object;
  #L42d49e.  return v4 @kind object;
}
