record `com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$KeyFactory` @kind class {
  `com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager` `com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$b` v0 @kind this, `com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager$b;.<init>:(Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42c910.  v0.`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$b.b` @type ^`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager` := v1 @kind object;
  #L42c914.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L42c91a.  return @kind void;
}
procedure `com.google.crypto.tink.proto.EciesAeadHkdfPrivateKey` `a`(`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$b` v4 @kind this, `com.google.crypto.tink.proto.EciesAeadHkdfKeyFormat` v5 @kind object) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager$b;.a:(Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat;)Lcom/google/crypto/tink/proto/EciesAeadHkdfPrivateKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42c7b0.  call temp:= `getParams`(v5) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;` @kind virtual;
  #L42c7b6.  v0:= temp @kind object;
  #L42c7b8.  call temp:= `getKemParams`(v0) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;.getKemParams:()Lcom/google/crypto/tink/proto/EciesHkdfKemParams;` @kind virtual;
  #L42c7be.  v0:= temp @kind object;
  #L42c7c0.  call temp:= `getCurveType`(v0) @signature `Lcom/google/crypto/tink/proto/EciesHkdfKemParams;.getCurveType:()Lcom/google/crypto/tink/proto/EllipticCurveType;` @kind virtual;
  #L42c7c6.  v0:= temp @kind object;
  #L42c7c8.  call temp:= `a`(v0) @signature `Lcom/google/crypto/tink/hybrid/c;.a:(Lcom/google/crypto/tink/proto/EllipticCurveType;)Lcom/google/crypto/tink/subtle/EllipticCurves$CurveType;` @kind static;
  #L42c7ce.  v0:= temp @kind object;
  #L42c7d0.  call temp:= `generateKeyPair`(v0) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves;.generateKeyPair:(Lcom/google/crypto/tink/subtle/EllipticCurves$CurveType;)Ljava/security/KeyPair;` @kind static;
  #L42c7d6.  v0:= temp @kind object;
  #L42c7d8.  call temp:= `getPublic`(v0) @signature `Ljava/security/KeyPair;.getPublic:()Ljava/security/PublicKey;` @kind virtual;
  #L42c7de.  v1:= temp @kind object;
  #L42c7e0.  v1:= (`java.security.interfaces.ECPublicKey`) v1 @kind object;
  #L42c7e4.  call temp:= `getPrivate`(v0) @signature `Ljava/security/KeyPair;.getPrivate:()Ljava/security/PrivateKey;` @kind virtual;
  #L42c7ea.  v0:= temp @kind object;
  #L42c7ec.  v0:= (`java.security.interfaces.ECPrivateKey`) v0 @kind object;
  #L42c7f0.  call temp:= `getW`(v1) @signature `Ljava/security/interfaces/ECPublicKey;.getW:()Ljava/security/spec/ECPoint;` @kind interface;
  #L42c7f6.  v1:= temp @kind object;
  #L42c7f8.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey;.newBuilder:()Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey$Builder;` @kind static;
  #L42c7fe.  v2:= temp @kind object;
  #L42c800.  v3:= v4.`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$b.b` @type ^`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager` @kind object;
  #L42c804.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager;.getVersion:()I` @kind virtual;
  #L42c80a.  v3:= temp;
  #L42c80c.  call temp:= `setVersion`(v2, v3) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey$Builder;` @kind virtual;
  #L42c812.  v2:= temp @kind object;
  #L42c814.  call temp:= `getParams`(v5) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;` @kind virtual;
  #L42c81a.  v5:= temp @kind object;
  #L42c81c.  call temp:= `setParams`(v2, v5) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey$Builder;.setParams:(Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;)Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey$Builder;` @kind virtual;
  #L42c822.  v5:= temp @kind object;
  #L42c824.  call temp:= `getAffineX`(v1) @signature `Ljava/security/spec/ECPoint;.getAffineX:()Ljava/math/BigInteger;` @kind virtual;
  #L42c82a.  v2:= temp @kind object;
  #L42c82c.  call temp:= `toByteArray`(v2) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L42c832.  v2:= temp @kind object;
  #L42c834.  call temp:= `copyFrom`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L42c83a.  v2:= temp @kind object;
  #L42c83c.  call temp:= `setX`(v5, v2) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey$Builder;.setX:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey$Builder;` @kind virtual;
  #L42c842.  v5:= temp @kind object;
  #L42c844.  call temp:= `getAffineY`(v1) @signature `Ljava/security/spec/ECPoint;.getAffineY:()Ljava/math/BigInteger;` @kind virtual;
  #L42c84a.  v1:= temp @kind object;
  #L42c84c.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L42c852.  v1:= temp @kind object;
  #L42c854.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L42c85a.  v1:= temp @kind object;
  #L42c85c.  call temp:= `setY`(v5, v1) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey$Builder;.setY:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey$Builder;` @kind virtual;
  #L42c862.  v5:= temp @kind object;
  #L42c864.  call temp:= `build`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L42c86a.  v5:= temp @kind object;
  #L42c86c.  v5:= (`com.google.crypto.tink.proto.EciesAeadHkdfPublicKey`) v5 @kind object;
  #L42c870.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPrivateKey;.newBuilder:()Lcom/google/crypto/tink/proto/EciesAeadHkdfPrivateKey$Builder;` @kind static;
  #L42c876.  v1:= temp @kind object;
  #L42c878.  v2:= v4.`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$b.b` @type ^`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager` @kind object;
  #L42c87c.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager;.getVersion:()I` @kind virtual;
  #L42c882.  v2:= temp;
  #L42c884.  call temp:= `setVersion`(v1, v2) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPrivateKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/EciesAeadHkdfPrivateKey$Builder;` @kind virtual;
  #L42c88a.  v1:= temp @kind object;
  #L42c88c.  call temp:= `setPublicKey`(v1, v5) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPrivateKey$Builder;.setPublicKey:(Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey;)Lcom/google/crypto/tink/proto/EciesAeadHkdfPrivateKey$Builder;` @kind virtual;
  #L42c892.  v5:= temp @kind object;
  #L42c894.  call temp:= `getS`(v0) @signature `Ljava/security/interfaces/ECPrivateKey;.getS:()Ljava/math/BigInteger;` @kind interface;
  #L42c89a.  v0:= temp @kind object;
  #L42c89c.  call temp:= `toByteArray`(v0) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L42c8a2.  v0:= temp @kind object;
  #L42c8a4.  call temp:= `copyFrom`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L42c8aa.  v0:= temp @kind object;
  #L42c8ac.  call temp:= `setKeyValue`(v5, v0) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPrivateKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/EciesAeadHkdfPrivateKey$Builder;` @kind virtual;
  #L42c8b2.  v5:= temp @kind object;
  #L42c8b4.  call temp:= `build`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L42c8ba.  v5:= temp @kind object;
  #L42c8bc.  v5:= (`com.google.crypto.tink.proto.EciesAeadHkdfPrivateKey`) v5 @kind object;
  #L42c8c0.  return v5 @kind object;
}
procedure `com.google.crypto.tink.proto.EciesAeadHkdfKeyFormat` `b`(`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c78c.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L42c792.  v0:= temp @kind object;
  #L42c794.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat;` @kind static;
  #L42c79a.  v2:= temp @kind object;
  #L42c79c.  return v2 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$b` v0 @kind this, `com.google.crypto.tink.proto.EciesAeadHkdfKeyFormat` v1 @kind object) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager$b;.c:(Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat;)V` @AccessFlag PUBLIC {
    temp;

  #L42c92c.  call temp:= `getParams`(v1) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;` @kind virtual;
  #L42c932.  v1:= temp @kind object;
  #L42c934.  call `d`(v1) @signature `Lcom/google/crypto/tink/hybrid/c;.d:(Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;)V` @kind static;
  #L42c93a.  return @kind void;
}
procedure `java.lang.Object` `createKey`(`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager$b;.createKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L42c8f0.  v1:= (`com.google.crypto.tink.proto.EciesAeadHkdfKeyFormat`) v1 @kind object;
  #L42c8f4.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager$b;.a:(Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat;)Lcom/google/crypto/tink/proto/EciesAeadHkdfPrivateKey;` @kind virtual;
  #L42c8fa.  v1:= temp @kind object;
  #L42c8fc.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKeyFormat`(`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager$b;.parseKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L42c8d4.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat;` @kind virtual;
  #L42c8da.  v1:= temp @kind object;
  #L42c8dc.  return v1 @kind object;
}
procedure `void` `validateKeyFormat`(`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager$b;.validateKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L42c94c.  v1:= (`com.google.crypto.tink.proto.EciesAeadHkdfKeyFormat`) v1 @kind object;
  #L42c950.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager$b;.c:(Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat;)V` @kind virtual;
  #L42c956.  return @kind void;
}
