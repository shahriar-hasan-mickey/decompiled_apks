record `com.google.crypto.tink.KeysetManager` @kind class @AccessFlag PUBLIC_FINAL {
  `com.google.crypto.tink.proto.Keyset$Builder` `com.google.crypto.tink.KeysetManager.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.KeysetManager` v0 @kind this, `com.google.crypto.tink.proto.Keyset$Builder` v1 @kind object) @signature `Lcom/google/crypto/tink/KeysetManager;.<init>:(Lcom/google/crypto/tink/proto/Keyset$Builder;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L426b44.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L426b4a.  v0.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` := v1 @kind object;
  #L426b4e.  return @kind void;
}
procedure `boolean` `a`(`com.google.crypto.tink.KeysetManager` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/KeysetManager;.a:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L426294.  @monitorenter v2
  #L426296.  v0:= v2.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L42629a.  call temp:= `getKeyList`(v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKeyList:()Ljava/util/List;` @kind virtual;
  #L4262a0.  v0:= temp @kind object;
  #L4262a2.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4262a8.  v0:= temp @kind object;
  #L4262aa.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4262b0.  v1:= temp;
  #L4262b2.  if v1 == 0 then goto L4262d4;
  #L4262b6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4262bc.  v1:= temp @kind object;
  #L4262be.  v1:= (`com.google.crypto.tink.proto.Keyset$Key`) v1 @kind object;
  #L4262c2.  call temp:= `getKeyId`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L4262c8.  v1:= temp;
  #L4262ca.  if v1 != v3 then goto L4262aa;
  #L4262ce.  v3:= 1I;
  #L4262d0.  @monitorexit v2
  #L4262d2.  return v3;
  #L4262d4.  v3:= 0I;
  #L4262d6.  @monitorexit v2
  #L4262d8.  return v3;
  #L4262da.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4262dc.  @monitorexit v2
  #L4262de.  throw v3;
  catch `java.lang.Throwable` @[L426296..L4262ca] goto L4262da;
}
procedure `com.google.crypto.tink.proto.Keyset$Key` `b`(`com.google.crypto.tink.KeysetManager` v3 @kind this, `com.google.crypto.tink.proto.KeyTemplate` v4 @kind object) @signature `Lcom/google/crypto/tink/KeysetManager;.b:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/proto/Keyset$Key;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4269b4.  @monitorenter v3
  #L4269b6.  call temp:= `newKeyData`(v4) @signature `Lcom/google/crypto/tink/Registry;.newKeyData:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/proto/KeyData;` @kind static;
  #L4269bc.  v0:= temp @kind object;
  #L4269be.  call temp:= `c`(v3) @signature `Lcom/google/crypto/tink/KeysetManager;.c:()I` @kind direct;
  #L4269c4.  v1:= temp;
  #L4269c6.  call temp:= `getOutputPrefixType`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.getOutputPrefixType:()Lcom/google/crypto/tink/proto/OutputPrefixType;` @kind virtual;
  #L4269cc.  v4:= temp @kind object;
  #L4269ce.  v2:= `@@com.google.crypto.tink.proto.OutputPrefixType.UNKNOWN_PREFIX` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L4269d2.  if v4 != v2 then goto L4269da;
  #L4269d6.  v4:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L4269da.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.newBuilder:()Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind static;
  #L4269e0.  v2:= temp @kind object;
  #L4269e2.  call temp:= `setKeyData`(v2, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setKeyData:(Lcom/google/crypto/tink/proto/KeyData;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L4269e8.  v0:= temp @kind object;
  #L4269ea.  call temp:= `setKeyId`(v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setKeyId:(I)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L4269f0.  v0:= temp @kind object;
  #L4269f2.  v1:= `@@com.google.crypto.tink.proto.KeyStatusType.ENABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4269f6.  call temp:= `setStatus`(v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setStatus:(Lcom/google/crypto/tink/proto/KeyStatusType;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L4269fc.  v0:= temp @kind object;
  #L4269fe.  call temp:= `setOutputPrefixType`(v0, v4) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L426a04.  v4:= temp @kind object;
  #L426a06.  call temp:= `build`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L426a0c.  v4:= temp @kind object;
  #L426a0e.  v4:= (`com.google.crypto.tink.proto.Keyset$Key`) v4 @kind object;
  #L426a12.  @monitorexit v3
  #L426a14.  return v4 @kind object;
  #L426a16.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L426a18.  @monitorexit v3
  #L426a1a.  throw v4;
  catch `java.lang.Throwable` @[L4269b6..L426a12] goto L426a16;
}
procedure `int` `c`(`com.google.crypto.tink.KeysetManager` v2 @kind this) @signature `Lcom/google/crypto/tink/KeysetManager;.c:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L426a90.  @monitorenter v2
  #L426a92.  call temp:= `d`() @signature `Lcom/google/crypto/tink/KeysetManager;.d:()I` @kind static;
  #L426a98.  v0:= temp;
  #L426a9a.  call temp:= `a`(v2, v0) @signature `Lcom/google/crypto/tink/KeysetManager;.a:(I)Z` @kind direct;
  #L426aa0.  v1:= temp;
  #L426aa2.  if v1 == 0 then goto L426ab0;
  #L426aa6.  call temp:= `d`() @signature `Lcom/google/crypto/tink/KeysetManager;.d:()I` @kind static;
  #L426aac.  v0:= temp;
  #L426aae.  goto L426a9a;
  #L426ab0.  @monitorexit v2
  #L426ab2.  return v0;
  #L426ab4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L426ab6.  @monitorexit v2
  #L426ab8.  throw v0;
  catch `java.lang.Throwable` @[L426a92..L426aae] goto L426ab4;
}
procedure `int` `d`() @signature `Lcom/google/crypto/tink/KeysetManager;.d:()I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L426ad8.  v0:= new `java.security.SecureRandom`;
  #L426adc.  call `<init>`(v0) @signature `Ljava/security/SecureRandom;.<init>:()V` @kind direct;
  #L426ae2.  v1:= 4I;
  #L426ae4.  v1:= new `byte`[v1];
  #L426ae8.  v2:= 0I;
  #L426aea.  v3:= 0I;
  #L426aec.  if v3 != 0 then goto L426b30;
  #L426af0.  call `nextBytes`(v0, v1) @signature `Ljava/security/SecureRandom;.nextBytes:([B)V` @kind virtual;
  #L426af6.  v3:= v1[v2] @kind byte;
  #L426afa.  v3:= v3 ^& 127;
  #L426afe.  v3:= v3 ^< 24;
  #L426b02.  v4:= 1I;
  #L426b04.  v4:= v1[v4] @kind byte;
  #L426b08.  v4:= v4 ^& 255;
  #L426b0c.  v4:= v4 ^< 16;
  #L426b10.  v3:= v3 ^| v4 @kind int;
  #L426b12.  v4:= 2I;
  #L426b14.  v4:= v1[v4] @kind byte;
  #L426b18.  v4:= v4 ^& 255;
  #L426b1c.  v4:= v4 ^< 8;
  #L426b20.  v3:= v3 ^| v4 @kind int;
  #L426b22.  v4:= 3I;
  #L426b24.  v4:= v1[v4] @kind byte;
  #L426b28.  v4:= v4 ^& 255;
  #L426b2c.  v3:= v3 ^| v4 @kind int;
  #L426b2e.  goto L426aec;
  #L426b30.  return v3;
}
procedure `com.google.crypto.tink.KeysetManager` `withEmptyKeyset`() @signature `Lcom/google/crypto/tink/KeysetManager;.withEmptyKeyset:()Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L426960.  v0:= new `com.google.crypto.tink.KeysetManager`;
  #L426964.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/Keyset;.newBuilder:()Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind static;
  #L42696a.  v1:= temp @kind object;
  #L42696c.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeysetManager;.<init>:(Lcom/google/crypto/tink/proto/Keyset$Builder;)V` @kind direct;
  #L426972.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeysetManager` `withKeysetHandle`(`com.google.crypto.tink.KeysetHandle` v1 @kind object) @signature `Lcom/google/crypto/tink/KeysetManager;.withKeysetHandle:(Lcom/google/crypto/tink/KeysetHandle;)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L426984.  v0:= new `com.google.crypto.tink.KeysetManager`;
  #L426988.  call temp:= `f`(v1) @signature `Lcom/google/crypto/tink/KeysetHandle;.f:()Lcom/google/crypto/tink/proto/Keyset;` @kind virtual;
  #L42698e.  v1:= temp @kind object;
  #L426990.  call temp:= `toBuilder`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.toBuilder:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L426996.  v1:= temp @kind object;
  #L426998.  v1:= (`com.google.crypto.tink.proto.Keyset$Builder`) v1 @kind object;
  #L42699c.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeysetManager;.<init>:(Lcom/google/crypto/tink/proto/Keyset$Builder;)V` @kind direct;
  #L4269a2.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeysetManager` `add`(`com.google.crypto.tink.KeysetManager` v1 @kind this, `com.google.crypto.tink.KeyTemplate` v2 @kind object) @signature `Lcom/google/crypto/tink/KeysetManager;.add:(Lcom/google/crypto/tink/KeyTemplate;)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42633c.  @monitorenter v1
  #L42633e.  call temp:= `b`(v2) @signature `Lcom/google/crypto/tink/KeyTemplate;.b:()Lcom/google/crypto/tink/proto/KeyTemplate;` @kind virtual;
  #L426344.  v2:= temp @kind object;
  #L426346.  v0:= 0I;
  #L426348.  call temp:= `addNewKey`(v1, v2, v0) @signature `Lcom/google/crypto/tink/KeysetManager;.addNewKey:(Lcom/google/crypto/tink/proto/KeyTemplate;Z)I` @kind virtual;
  #L42634e.  @monitorexit v1
  #L426350.  return v1 @kind object;
  #L426352.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L426354.  @monitorexit v1
  #L426356.  throw v2;
  catch `java.lang.Throwable` @[L42633e..L42634e] goto L426352;
}
procedure `com.google.crypto.tink.KeysetManager` `add`(`com.google.crypto.tink.KeysetManager` v1 @kind this, `com.google.crypto.tink.proto.KeyTemplate` v2 @kind object) @signature `Lcom/google/crypto/tink/KeysetManager;.add:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L426374.  @monitorenter v1
  #L426376.  v0:= 0I;
  #L426378.  call temp:= `addNewKey`(v1, v2, v0) @signature `Lcom/google/crypto/tink/KeysetManager;.addNewKey:(Lcom/google/crypto/tink/proto/KeyTemplate;Z)I` @kind virtual;
  #L42637e.  @monitorexit v1
  #L426380.  return v1 @kind object;
  #L426382.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L426384.  @monitorexit v1
  #L426386.  throw v2;
  catch `java.lang.Throwable` @[L426378..L42637e] goto L426382;
}
procedure `int` `addNewKey`(`com.google.crypto.tink.KeysetManager` v1 @kind this, `com.google.crypto.tink.proto.KeyTemplate` v2 @kind object, `boolean` v3 ) @signature `Lcom/google/crypto/tink/KeysetManager;.addNewKey:(Lcom/google/crypto/tink/proto/KeyTemplate;Z)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L426a38.  @monitorenter v1
  #L426a3a.  call temp:= `b`(v1, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.b:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/proto/Keyset$Key;` @kind direct;
  #L426a40.  v2:= temp @kind object;
  #L426a42.  v0:= v1.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L426a46.  call temp:= `addKey`(v0, v2) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.addKey:(Lcom/google/crypto/tink/proto/Keyset$Key;)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L426a4c.  if v3 == 0 then goto L426a62;
  #L426a50.  v3:= v1.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L426a54.  call temp:= `getKeyId`(v2) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L426a5a.  v0:= temp;
  #L426a5c.  call temp:= `setPrimaryKeyId`(v3, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.setPrimaryKeyId:(I)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L426a62.  call temp:= `getKeyId`(v2) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L426a68.  v2:= temp;
  #L426a6a.  @monitorexit v1
  #L426a6c.  return v2;
  #L426a6e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L426a70.  @monitorexit v1
  #L426a72.  throw v2;
  catch `java.lang.Throwable` @[L426a3a..L426a6a] goto L426a6e;
}
procedure `com.google.crypto.tink.KeysetManager` `delete`(`com.google.crypto.tink.KeysetManager` v3 @kind this, `int` v4 ) @signature `Lcom/google/crypto/tink/KeysetManager;.delete:(I)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4263a4.  @monitorenter v3
  #L4263a6.  v0:= v3.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4263aa.  call temp:= `getPrimaryKeyId`(v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getPrimaryKeyId:()I` @kind virtual;
  #L4263b0.  v0:= temp;
  #L4263b2.  if v4 == v0 then goto L426422;
  #L4263b6.  v0:= 0I;
  #L4263b8.  v1:= v3.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4263bc.  call temp:= `getKeyCount`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKeyCount:()I` @kind virtual;
  #L4263c2.  v1:= temp;
  #L4263c4.  if v0 >= v1 then goto L4263f4;
  #L4263c8.  v1:= v3.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4263cc.  call temp:= `getKey`(v1, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKey:(I)Lcom/google/crypto/tink/proto/Keyset$Key;` @kind virtual;
  #L4263d2.  v1:= temp @kind object;
  #L4263d4.  call temp:= `getKeyId`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L4263da.  v1:= temp;
  #L4263dc.  if v1 != v4 then goto L4263ee;
  #L4263e0.  v4:= v3.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4263e4.  call temp:= `removeKey`(v4, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.removeKey:(I)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L4263ea.  @monitorexit v3
  #L4263ec.  return v3 @kind object;
  #L4263ee.  v0:= v0 + 1;
  #L4263f2.  goto L4263b8;
  #L4263f4.  v0:= new `java.security.GeneralSecurityException`;
  #L4263f8.  v1:= new `java.lang.StringBuilder`;
  #L4263fc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L426402.  v2:= "key not found: " @kind object;
  #L426406.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42640c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L426412.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L426418.  v4:= temp @kind object;
  #L42641a.  call `<init>`(v0, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L426420.  throw v0;
  #L426422.  v4:= new `java.security.GeneralSecurityException`;
  #L426426.  v0:= "cannot delete the primary key" @kind object;
  #L42642a.  call `<init>`(v4, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L426430.  throw v4;
  #L426432.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L426434.  @monitorexit v3
  #L426436.  throw v4;
  catch `java.lang.Throwable` @[L4263a6..L4263ea] goto L426432;
  catch `java.lang.Throwable` @[L4263f4..L426432] goto L426432;
}
procedure `com.google.crypto.tink.KeysetManager` `destroy`(`com.google.crypto.tink.KeysetManager` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/KeysetManager;.destroy:(I)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42645c.  @monitorenter v4
  #L42645e.  v0:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L426462.  call temp:= `getPrimaryKeyId`(v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getPrimaryKeyId:()I` @kind virtual;
  #L426468.  v0:= temp;
  #L42646a.  if v5 == v0 then goto L42657e;
  #L42646e.  v0:= 0I;
  #L426470.  v1:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L426474.  call temp:= `getKeyCount`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKeyCount:()I` @kind virtual;
  #L42647a.  v1:= temp;
  #L42647c.  if v0 >= v1 then goto L426550;
  #L426480.  v1:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L426484.  call temp:= `getKey`(v1, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKey:(I)Lcom/google/crypto/tink/proto/Keyset$Key;` @kind virtual;
  #L42648a.  v1:= temp @kind object;
  #L42648c.  call temp:= `getKeyId`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L426492.  v2:= temp;
  #L426494.  if v2 != v5 then goto L42654a;
  #L426498.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L42649e.  v2:= temp @kind object;
  #L4264a0.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.ENABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4264a4.  if v2 == v3 then goto L426510;
  #L4264a8.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L4264ae.  v2:= temp @kind object;
  #L4264b0.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.DISABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4264b4.  if v2 == v3 then goto L426510;
  #L4264b8.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L4264be.  v2:= temp @kind object;
  #L4264c0.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.DESTROYED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4264c4.  if v2 != v3 then goto L4264ca;
  #L4264c8.  goto L426510;
  #L4264ca.  v0:= new `java.security.GeneralSecurityException`;
  #L4264ce.  v2:= new `java.lang.StringBuilder`;
  #L4264d2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4264d8.  v3:= "cannot destroy key with id " @kind object;
  #L4264dc.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4264e2.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4264e8.  v5:= " and status " @kind object;
  #L4264ec.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4264f2.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L4264f8.  v5:= temp @kind object;
  #L4264fa.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L426500.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L426506.  v5:= temp @kind object;
  #L426508.  call `<init>`(v0, v5) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42650e.  throw v0;
  #L426510.  v5:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L426514.  call temp:= `toBuilder`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.toBuilder:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L42651a.  v1:= temp @kind object;
  #L42651c.  v1:= (`com.google.crypto.tink.proto.Keyset$Key$Builder`) v1 @kind object;
  #L426520.  v2:= `@@com.google.crypto.tink.proto.KeyStatusType.DESTROYED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L426524.  call temp:= `setStatus`(v1, v2) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setStatus:(Lcom/google/crypto/tink/proto/KeyStatusType;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L42652a.  v1:= temp @kind object;
  #L42652c.  call temp:= `clearKeyData`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.clearKeyData:()Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L426532.  v1:= temp @kind object;
  #L426534.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L42653a.  v1:= temp @kind object;
  #L42653c.  v1:= (`com.google.crypto.tink.proto.Keyset$Key`) v1 @kind object;
  #L426540.  call temp:= `setKey`(v5, v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.setKey:(ILcom/google/crypto/tink/proto/Keyset$Key;)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L426546.  @monitorexit v4
  #L426548.  return v4 @kind object;
  #L42654a.  v0:= v0 + 1;
  #L42654e.  goto L426470;
  #L426550.  v0:= new `java.security.GeneralSecurityException`;
  #L426554.  v1:= new `java.lang.StringBuilder`;
  #L426558.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42655e.  v2:= "key not found: " @kind object;
  #L426562.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L426568.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L42656e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L426574.  v5:= temp @kind object;
  #L426576.  call `<init>`(v0, v5) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42657c.  throw v0;
  #L42657e.  v5:= new `java.security.GeneralSecurityException`;
  #L426582.  v0:= "cannot destroy the primary key" @kind object;
  #L426586.  call `<init>`(v5, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42658c.  throw v5;
  #L42658e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L426590.  @monitorexit v4
  #L426592.  throw v5;
  catch `java.lang.Throwable` @[L42645e..L426546] goto L42658e;
  catch `java.lang.Throwable` @[L426550..L42658e] goto L42658e;
}
procedure `com.google.crypto.tink.KeysetManager` `disable`(`com.google.crypto.tink.KeysetManager` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/KeysetManager;.disable:(I)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4265b8.  @monitorenter v4
  #L4265ba.  v0:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4265be.  call temp:= `getPrimaryKeyId`(v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getPrimaryKeyId:()I` @kind virtual;
  #L4265c4.  v0:= temp;
  #L4265c6.  if v5 == v0 then goto L4266c2;
  #L4265ca.  v0:= 0I;
  #L4265cc.  v1:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4265d0.  call temp:= `getKeyCount`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKeyCount:()I` @kind virtual;
  #L4265d6.  v1:= temp;
  #L4265d8.  if v0 >= v1 then goto L426694;
  #L4265dc.  v1:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4265e0.  call temp:= `getKey`(v1, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKey:(I)Lcom/google/crypto/tink/proto/Keyset$Key;` @kind virtual;
  #L4265e6.  v1:= temp @kind object;
  #L4265e8.  call temp:= `getKeyId`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L4265ee.  v2:= temp;
  #L4265f0.  if v2 != v5 then goto L42668e;
  #L4265f4.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L4265fa.  v2:= temp @kind object;
  #L4265fc.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.ENABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L426600.  if v2 == v3 then goto L42665c;
  #L426604.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L42660a.  v2:= temp @kind object;
  #L42660c.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.DISABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L426610.  if v2 != v3 then goto L426616;
  #L426614.  goto L42665c;
  #L426616.  v0:= new `java.security.GeneralSecurityException`;
  #L42661a.  v2:= new `java.lang.StringBuilder`;
  #L42661e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L426624.  v3:= "cannot disable key with id " @kind object;
  #L426628.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42662e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L426634.  v5:= " and status " @kind object;
  #L426638.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42663e.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L426644.  v5:= temp @kind object;
  #L426646.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42664c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L426652.  v5:= temp @kind object;
  #L426654.  call `<init>`(v0, v5) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42665a.  throw v0;
  #L42665c.  v5:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L426660.  call temp:= `toBuilder`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.toBuilder:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L426666.  v1:= temp @kind object;
  #L426668.  v1:= (`com.google.crypto.tink.proto.Keyset$Key$Builder`) v1 @kind object;
  #L42666c.  v2:= `@@com.google.crypto.tink.proto.KeyStatusType.DISABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L426670.  call temp:= `setStatus`(v1, v2) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setStatus:(Lcom/google/crypto/tink/proto/KeyStatusType;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L426676.  v1:= temp @kind object;
  #L426678.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L42667e.  v1:= temp @kind object;
  #L426680.  v1:= (`com.google.crypto.tink.proto.Keyset$Key`) v1 @kind object;
  #L426684.  call temp:= `setKey`(v5, v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.setKey:(ILcom/google/crypto/tink/proto/Keyset$Key;)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L42668a.  @monitorexit v4
  #L42668c.  return v4 @kind object;
  #L42668e.  v0:= v0 + 1;
  #L426692.  goto L4265cc;
  #L426694.  v0:= new `java.security.GeneralSecurityException`;
  #L426698.  v1:= new `java.lang.StringBuilder`;
  #L42669c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4266a2.  v2:= "key not found: " @kind object;
  #L4266a6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4266ac.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4266b2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4266b8.  v5:= temp @kind object;
  #L4266ba.  call `<init>`(v0, v5) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4266c0.  throw v0;
  #L4266c2.  v5:= new `java.security.GeneralSecurityException`;
  #L4266c6.  v0:= "cannot disable the primary key" @kind object;
  #L4266ca.  call `<init>`(v5, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4266d0.  throw v5;
  #L4266d2.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4266d4.  @monitorexit v4
  #L4266d6.  throw v5;
  catch `java.lang.Throwable` @[L4265ba..L42668a] goto L4266d2;
  catch `java.lang.Throwable` @[L426694..L4266d2] goto L4266d2;
}
procedure `com.google.crypto.tink.KeysetManager` `enable`(`com.google.crypto.tink.KeysetManager` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/KeysetManager;.enable:(I)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4266fc.  @monitorenter v4
  #L4266fe.  v0:= 0I;
  #L426700.  v1:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L426704.  call temp:= `getKeyCount`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKeyCount:()I` @kind virtual;
  #L42670a.  v1:= temp;
  #L42670c.  if v0 >= v1 then goto L4267c8;
  #L426710.  v1:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L426714.  call temp:= `getKey`(v1, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKey:(I)Lcom/google/crypto/tink/proto/Keyset$Key;` @kind virtual;
  #L42671a.  v1:= temp @kind object;
  #L42671c.  call temp:= `getKeyId`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L426722.  v2:= temp;
  #L426724.  if v2 != v5 then goto L4267c2;
  #L426728.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L42672e.  v2:= temp @kind object;
  #L426730.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.ENABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L426734.  if v2 == v3 then goto L426790;
  #L426738.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L42673e.  v2:= temp @kind object;
  #L426740.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.DISABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L426744.  if v2 != v3 then goto L42674a;
  #L426748.  goto L426790;
  #L42674a.  v0:= new `java.security.GeneralSecurityException`;
  #L42674e.  v2:= new `java.lang.StringBuilder`;
  #L426752.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L426758.  v3:= "cannot enable key with id " @kind object;
  #L42675c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L426762.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L426768.  v5:= " and status " @kind object;
  #L42676c.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L426772.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L426778.  v5:= temp @kind object;
  #L42677a.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L426780.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L426786.  v5:= temp @kind object;
  #L426788.  call `<init>`(v0, v5) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42678e.  throw v0;
  #L426790.  v5:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L426794.  call temp:= `toBuilder`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.toBuilder:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L42679a.  v1:= temp @kind object;
  #L42679c.  v1:= (`com.google.crypto.tink.proto.Keyset$Key$Builder`) v1 @kind object;
  #L4267a0.  v2:= `@@com.google.crypto.tink.proto.KeyStatusType.ENABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4267a4.  call temp:= `setStatus`(v1, v2) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setStatus:(Lcom/google/crypto/tink/proto/KeyStatusType;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L4267aa.  v1:= temp @kind object;
  #L4267ac.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4267b2.  v1:= temp @kind object;
  #L4267b4.  v1:= (`com.google.crypto.tink.proto.Keyset$Key`) v1 @kind object;
  #L4267b8.  call temp:= `setKey`(v5, v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.setKey:(ILcom/google/crypto/tink/proto/Keyset$Key;)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L4267be.  @monitorexit v4
  #L4267c0.  return v4 @kind object;
  #L4267c2.  v0:= v0 + 1;
  #L4267c6.  goto L426700;
  #L4267c8.  v0:= new `java.security.GeneralSecurityException`;
  #L4267cc.  v1:= new `java.lang.StringBuilder`;
  #L4267d0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4267d6.  v2:= "key not found: " @kind object;
  #L4267da.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4267e0.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4267e6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4267ec.  v5:= temp @kind object;
  #L4267ee.  call `<init>`(v0, v5) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4267f4.  throw v0;
  #L4267f6.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4267f8.  @monitorexit v4
  #L4267fa.  throw v5;
  catch `java.lang.Throwable` @[L426700..L4267be] goto L4267f6;
  catch `java.lang.Throwable` @[L4267c8..L4267f6] goto L4267f6;
}
procedure `com.google.crypto.tink.KeysetHandle` `getKeysetHandle`(`com.google.crypto.tink.KeysetManager` v1 @kind this) @signature `Lcom/google/crypto/tink/KeysetManager;.getKeysetHandle:()Lcom/google/crypto/tink/KeysetHandle;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4262fc.  @monitorenter v1
  #L4262fe.  v0:= v1.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L426302.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L426308.  v0:= temp @kind object;
  #L42630a.  v0:= (`com.google.crypto.tink.proto.Keyset`) v0 @kind object;
  #L42630e.  call temp:= `e`(v0) @signature `Lcom/google/crypto/tink/KeysetHandle;.e:(Lcom/google/crypto/tink/proto/Keyset;)Lcom/google/crypto/tink/KeysetHandle;` @kind static;
  #L426314.  v0:= temp @kind object;
  #L426316.  @monitorexit v1
  #L426318.  return v0 @kind object;
  #L42631a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42631c.  @monitorexit v1
  #L42631e.  throw v0;
  catch `java.lang.Throwable` @[L4262fe..L426316] goto L42631a;
}
procedure `com.google.crypto.tink.KeysetManager` `promote`(`com.google.crypto.tink.KeysetManager` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/KeysetManager;.promote:(I)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;

  #L426820.  @monitorenter v0
  #L426822.  call temp:= `setPrimary`(v0, v1) @signature `Lcom/google/crypto/tink/KeysetManager;.setPrimary:(I)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L426828.  v1:= temp @kind object;
  #L42682a.  @monitorexit v0
  #L42682c.  return v1 @kind object;
  #L42682e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L426830.  @monitorexit v0
  #L426832.  throw v1;
  catch `java.lang.Throwable` @[L426822..L42682a] goto L42682e;
}
procedure `com.google.crypto.tink.KeysetManager` `rotate`(`com.google.crypto.tink.KeysetManager` v1 @kind this, `com.google.crypto.tink.proto.KeyTemplate` v2 @kind object) @signature `Lcom/google/crypto/tink/KeysetManager;.rotate:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L426850.  @monitorenter v1
  #L426852.  v0:= 1I;
  #L426854.  call temp:= `addNewKey`(v1, v2, v0) @signature `Lcom/google/crypto/tink/KeysetManager;.addNewKey:(Lcom/google/crypto/tink/proto/KeyTemplate;Z)I` @kind virtual;
  #L42685a.  @monitorexit v1
  #L42685c.  return v1 @kind object;
  #L42685e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L426860.  @monitorexit v1
  #L426862.  throw v2;
  catch `java.lang.Throwable` @[L426854..L42685a] goto L42685e;
}
procedure `com.google.crypto.tink.KeysetManager` `setPrimary`(`com.google.crypto.tink.KeysetManager` v3 @kind this, `int` v4 ) @signature `Lcom/google/crypto/tink/KeysetManager;.setPrimary:(I)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L426880.  @monitorenter v3
  #L426882.  v0:= 0I;
  #L426884.  v1:= v3.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L426888.  call temp:= `getKeyCount`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKeyCount:()I` @kind virtual;
  #L42688e.  v1:= temp;
  #L426890.  if v0 >= v1 then goto L426906;
  #L426894.  v1:= v3.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L426898.  call temp:= `getKey`(v1, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKey:(I)Lcom/google/crypto/tink/proto/Keyset$Key;` @kind virtual;
  #L42689e.  v1:= temp @kind object;
  #L4268a0.  call temp:= `getKeyId`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L4268a6.  v2:= temp;
  #L4268a8.  if v2 != v4 then goto L426900;
  #L4268ac.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L4268b2.  v0:= temp @kind object;
  #L4268b4.  v1:= `@@com.google.crypto.tink.proto.KeyStatusType.ENABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4268b8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4268be.  v0:= temp;
  #L4268c0.  if v0 == 0 then goto L4268d2;
  #L4268c4.  v0:= v3.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4268c8.  call temp:= `setPrimaryKeyId`(v0, v4) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.setPrimaryKeyId:(I)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L4268ce.  @monitorexit v3
  #L4268d0.  return v3 @kind object;
  #L4268d2.  v0:= new `java.security.GeneralSecurityException`;
  #L4268d6.  v1:= new `java.lang.StringBuilder`;
  #L4268da.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4268e0.  v2:= "cannot set key as primary because it's not enabled: " @kind object;
  #L4268e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4268ea.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4268f0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4268f6.  v4:= temp @kind object;
  #L4268f8.  call `<init>`(v0, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4268fe.  throw v0;
  #L426900.  v0:= v0 + 1;
  #L426904.  goto L426884;
  #L426906.  v0:= new `java.security.GeneralSecurityException`;
  #L42690a.  v1:= new `java.lang.StringBuilder`;
  #L42690e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L426914.  v2:= "key not found: " @kind object;
  #L426918.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42691e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L426924.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42692a.  v4:= temp @kind object;
  #L42692c.  call `<init>`(v0, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L426932.  throw v0;
  #L426934.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L426936.  @monitorexit v3
  #L426938.  throw v4;
  catch `java.lang.Throwable` @[L426884..L4268ce] goto L426934;
  catch `java.lang.Throwable` @[L4268d2..L426934] goto L426934;
}
