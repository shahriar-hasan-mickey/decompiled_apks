record `com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder.a` @AccessFlag ;
  `java.security.KeyStore` `com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder.b` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder` v2 @kind this) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreKmsClient$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L42ed64.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42ed6a.  v0:= 0I;
  #L42ed6c.  v2.`com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder.a` @type ^`java.lang.String` := v0 @kind object;
  #L42ed70.  v2.`com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder.b` @type ^`java.security.KeyStore` := v0 @kind object;
  #L42ed74.  call temp:= `a`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreKmsClient;.a:()Z` @kind static;
  #L42ed7a.  v1:= temp;
  #L42ed7c.  if v1 == 0 then goto L42edaa;
  #L42ed80.  v1:= "AndroidKeyStore" @kind object;
  #L42ed84.  call temp:= `getInstance`(v1) @signature `Ljava/security/KeyStore;.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;` @kind static;
  #L42ed8a.  v1:= temp @kind object;
  #L42ed8c.  v2.`com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder.b` @type ^`java.security.KeyStore` := v1 @kind object;
  #L42ed90.  call `load`(v1, v0) @signature `Ljava/security/KeyStore;.load:(Ljava/security/KeyStore$LoadStoreParameter;)V` @kind virtual;
  #L42ed96.  return @kind void;
  #L42ed98.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L42ed9a.  goto L42ed9e;
  #L42ed9c.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L42ed9e.  v1:= new `java.lang.IllegalStateException`;
  #L42eda2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L42eda8.  throw v1;
  #L42edaa.  v0:= new `java.lang.IllegalStateException`;
  #L42edae.  v1:= "need Android Keystore on Android M or newer" @kind object;
  #L42edb2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42edb8.  throw v0;
  catch `java.security.GeneralSecurityException` @[L42ed80..L42ed96] goto L42ed9c;
  catch `java.io.IOException` @[L42ed80..L42ed96] goto L42ed98;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient` `build`(`com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder` v2 @kind this) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreKmsClient$Builder;.build:()Lcom/google/crypto/tink/integration/android/AndroidKeystoreKmsClient;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42ecd0.  v0:= new `com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient`;
  #L42ecd4.  v1:= 0I;
  #L42ecd6.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreKmsClient;.<init>:(Lcom/google/crypto/tink/integration/android/AndroidKeystoreKmsClient$Builder;Lcom/google/crypto/tink/integration/android/AndroidKeystoreKmsClient$a;)V` @kind direct;
  #L42ecdc.  return v0 @kind object;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder` `setKeyStore`(`com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder` v1 @kind this, `java.security.KeyStore` v2 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreKmsClient$Builder;.setKeyStore:(Ljava/security/KeyStore;)Lcom/google/crypto/tink/integration/android/AndroidKeystoreKmsClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ecf0.  if v2 == 0 then goto L42ecfa;
  #L42ecf4.  v1.`com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder.b` @type ^`java.security.KeyStore` := v2 @kind object;
  #L42ecf8.  return v1 @kind object;
  #L42ecfa.  v2:= new `java.lang.IllegalArgumentException`;
  #L42ecfe.  v0:= "val cannot be null" @kind object;
  #L42ed02.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42ed08.  throw v2;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder` `setKeyUri`(`com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreKmsClient$Builder;.setKeyUri:(Ljava/lang/String;)Lcom/google/crypto/tink/integration/android/AndroidKeystoreKmsClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42ed1c.  if v3 == 0 then goto L42ed42;
  #L42ed20.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L42ed24.  call temp:= `toLowerCase`(v3, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L42ed2a.  v0:= temp @kind object;
  #L42ed2c.  v1:= "android-keystore://" @kind object;
  #L42ed30.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L42ed36.  v0:= temp;
  #L42ed38.  if v0 == 0 then goto L42ed42;
  #L42ed3c.  v2.`com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder.a` @type ^`java.lang.String` := v3 @kind object;
  #L42ed40.  return v2 @kind object;
  #L42ed42.  v3:= new `java.lang.IllegalArgumentException`;
  #L42ed46.  v0:= "val must start with android-keystore://" @kind object;
  #L42ed4a.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42ed50.  throw v3;
}
