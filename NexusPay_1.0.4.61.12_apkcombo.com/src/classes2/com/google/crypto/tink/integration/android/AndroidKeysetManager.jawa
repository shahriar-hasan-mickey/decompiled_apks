record `com.google.crypto.tink.integration.android.AndroidKeysetManager` @kind class @AccessFlag PUBLIC_FINAL {
  `com.google.crypto.tink.KeysetWriter` `com.google.crypto.tink.integration.android.AndroidKeysetManager.a` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.Aead` `com.google.crypto.tink.integration.android.AndroidKeysetManager.b` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.KeysetManager` `com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.google.crypto.tink.integration.android.AndroidKeysetManager.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L42e958.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder` v2 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.<init>:(Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L42e96c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42e972.  call temp:= `a`(v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;.a:(Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;)Lcom/google/crypto/tink/KeysetWriter;` @kind static;
  #L42e978.  v0:= temp @kind object;
  #L42e97a.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.a` @type ^`com.google.crypto.tink.KeysetWriter` := v0 @kind object;
  #L42e97e.  call temp:= `b`(v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;.b:(Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;)Lcom/google/crypto/tink/Aead;` @kind static;
  #L42e984.  v0:= temp @kind object;
  #L42e986.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.b` @type ^`com.google.crypto.tink.Aead` := v0 @kind object;
  #L42e98a.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;.c:(Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;)Lcom/google/crypto/tink/KeysetManager;` @kind static;
  #L42e990.  v2:= temp @kind object;
  #L42e992.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L42e996.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v0 @kind this, `com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder` v1 @kind object, `com.google.crypto.tink.integration.android.AndroidKeysetManager$a` v2 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.<init>:(Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L42e9a8.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.<init>:(Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;)V` @kind direct;
  #L42e9ae.  return @kind void;
}
procedure `com.google.crypto.tink.KeyTemplate$OutputPrefixType` `a`(`com.google.crypto.tink.proto.OutputPrefixType` v0 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.a:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L42e660.  call temp:= `d`(v0) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.d:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;` @kind static;
  #L42e666.  v0:= temp @kind object;
  #L42e668.  return v0 @kind object;
}
procedure `boolean` `b`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.b:()Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L42e5c4.  call temp:= `e`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.e:()Z` @kind static;
  #L42e5ca.  v0:= temp;
  #L42e5cc.  return v0;
}
procedure `java.lang.String` `c`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.c:()Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L42e940.  v0:= `@@com.google.crypto.tink.integration.android.AndroidKeysetManager.d` @type ^`java.lang.String` @kind object;
  #L42e944.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate$OutputPrefixType` `d`(`com.google.crypto.tink.proto.OutputPrefixType` v1 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.d:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L42e67c.  v0:= `@@com.google.crypto.tink.integration.android.AndroidKeysetManager$a.a` @type ^`int`[] @kind object;
  #L42e680.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L42e686.  v1:= temp;
  #L42e688.  v1:= v0[v1];
  #L42e68c.  v0:= 1I;
  #L42e68e.  if v1 == v0 then goto L42e6c6;
  #L42e692.  v0:= 2I;
  #L42e694.  if v1 == v0 then goto L42e6c0;
  #L42e698.  v0:= 3I;
  #L42e69a.  if v1 == v0 then goto L42e6ba;
  #L42e69e.  v0:= 4I;
  #L42e6a0.  if v1 != v0 then goto L42e6aa;
  #L42e6a4.  v1:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.CRUNCHY` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L42e6a8.  return v1 @kind object;
  #L42e6aa.  v1:= new `java.lang.IllegalArgumentException`;
  #L42e6ae.  v0:= "Unknown output prefix type" @kind object;
  #L42e6b2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42e6b8.  throw v1;
  #L42e6ba.  v1:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.RAW` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L42e6be.  return v1 @kind object;
  #L42e6c0.  v1:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.LEGACY` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L42e6c4.  return v1 @kind object;
  #L42e6c6.  v1:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.TINK` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L42e6ca.  return v1 @kind object;
}
procedure `boolean` `e`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.e:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L42e5e0.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L42e5e4.  v1:= 23I;
  #L42e5e8.  if v0 < v1 then goto L42e5f0;
  #L42e5ec.  v0:= 1I;
  #L42e5ee.  goto L42e5f2;
  #L42e5f0.  v0:= 0I;
  #L42e5f2.  return v0;
}
procedure `boolean` `f`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.f:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L42e634.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.b` @type ^`com.google.crypto.tink.Aead` @kind object;
  #L42e638.  if v0 == 0 then goto L42e64c;
  #L42e63c.  call temp:= `e`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.e:()Z` @kind static;
  #L42e642.  v0:= temp;
  #L42e644.  if v0 == 0 then goto L42e64c;
  #L42e648.  v0:= 1I;
  #L42e64a.  goto L42e64e;
  #L42e64c.  v0:= 0I;
  #L42e64e.  return v0;
}
procedure `void` `g`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v2 @kind this, `com.google.crypto.tink.KeysetManager` v3 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L42e9c0.  call temp:= `f`(v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.f:()Z` @kind direct;
  #L42e9c6.  v0:= temp;
  #L42e9c8.  if v0 == 0 then goto L42e9e4;
  #L42e9cc.  call temp:= `getKeysetHandle`(v3) @signature `Lcom/google/crypto/tink/KeysetManager;.getKeysetHandle:()Lcom/google/crypto/tink/KeysetHandle;` @kind virtual;
  #L42e9d2.  v3:= temp @kind object;
  #L42e9d4.  v0:= v2.`com.google.crypto.tink.integration.android.AndroidKeysetManager.a` @type ^`com.google.crypto.tink.KeysetWriter` @kind object;
  #L42e9d8.  v1:= v2.`com.google.crypto.tink.integration.android.AndroidKeysetManager.b` @type ^`com.google.crypto.tink.Aead` @kind object;
  #L42e9dc.  call `write`(v3, v0, v1) @signature `Lcom/google/crypto/tink/KeysetHandle;.write:(Lcom/google/crypto/tink/KeysetWriter;Lcom/google/crypto/tink/Aead;)V` @kind virtual;
  #L42e9e2.  goto L42e9f6;
  #L42e9e4.  call temp:= `getKeysetHandle`(v3) @signature `Lcom/google/crypto/tink/KeysetManager;.getKeysetHandle:()Lcom/google/crypto/tink/KeysetHandle;` @kind virtual;
  #L42e9ea.  v3:= temp @kind object;
  #L42e9ec.  v0:= v2.`com.google.crypto.tink.integration.android.AndroidKeysetManager.a` @type ^`com.google.crypto.tink.KeysetWriter` @kind object;
  #L42e9f0.  call `write`(v3, v0) @signature `Lcom/google/crypto/tink/CleartextKeysetHandle;.write:(Lcom/google/crypto/tink/KeysetHandle;Lcom/google/crypto/tink/KeysetWriter;)V` @kind static;
  #L42e9f6.  return @kind void;
  #L42e9f8.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L42e9fa.  v0:= new `java.security.GeneralSecurityException`;
  #L42e9fe.  call `<init>`(v0, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L42ea04.  throw v0;
  catch `java.io.IOException` @[L42e9c0..L42e9f6] goto L42e9f8;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `add`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `com.google.crypto.tink.KeyTemplate` v2 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.add:(Lcom/google/crypto/tink/KeyTemplate;)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e710.  @monitorenter v1
  #L42e712.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L42e716.  call temp:= `add`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.add:(Lcom/google/crypto/tink/KeyTemplate;)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L42e71c.  v2:= temp @kind object;
  #L42e71e.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L42e722.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L42e728.  @monitorexit v1
  #L42e72a.  return v1 @kind object;
  #L42e72c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e72e.  @monitorexit v1
  #L42e730.  throw v2;
  catch `java.lang.Throwable` @[L42e712..L42e728] goto L42e72c;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `add`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `com.google.crypto.tink.proto.KeyTemplate` v2 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.add:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e750.  @monitorenter v1
  #L42e752.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L42e756.  call temp:= `add`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.add:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L42e75c.  v2:= temp @kind object;
  #L42e75e.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L42e762.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L42e768.  @monitorexit v1
  #L42e76a.  return v1 @kind object;
  #L42e76c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e76e.  @monitorexit v1
  #L42e770.  throw v2;
  catch `java.lang.Throwable` @[L42e752..L42e768] goto L42e76c;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `delete`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.delete:(I)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e790.  @monitorenter v1
  #L42e792.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L42e796.  call temp:= `delete`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.delete:(I)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L42e79c.  v2:= temp @kind object;
  #L42e79e.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L42e7a2.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L42e7a8.  @monitorexit v1
  #L42e7aa.  return v1 @kind object;
  #L42e7ac.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e7ae.  @monitorexit v1
  #L42e7b0.  throw v2;
  catch `java.lang.Throwable` @[L42e792..L42e7a8] goto L42e7ac;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `destroy`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.destroy:(I)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e7d0.  @monitorenter v1
  #L42e7d2.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L42e7d6.  call temp:= `destroy`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.destroy:(I)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L42e7dc.  v2:= temp @kind object;
  #L42e7de.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L42e7e2.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L42e7e8.  @monitorexit v1
  #L42e7ea.  return v1 @kind object;
  #L42e7ec.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e7ee.  @monitorexit v1
  #L42e7f0.  throw v2;
  catch `java.lang.Throwable` @[L42e7d2..L42e7e8] goto L42e7ec;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `disable`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.disable:(I)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e810.  @monitorenter v1
  #L42e812.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L42e816.  call temp:= `disable`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.disable:(I)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L42e81c.  v2:= temp @kind object;
  #L42e81e.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L42e822.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L42e828.  @monitorexit v1
  #L42e82a.  return v1 @kind object;
  #L42e82c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e82e.  @monitorexit v1
  #L42e830.  throw v2;
  catch `java.lang.Throwable` @[L42e812..L42e828] goto L42e82c;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `enable`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.enable:(I)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e850.  @monitorenter v1
  #L42e852.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L42e856.  call temp:= `enable`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.enable:(I)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L42e85c.  v2:= temp @kind object;
  #L42e85e.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L42e862.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L42e868.  @monitorexit v1
  #L42e86a.  return v1 @kind object;
  #L42e86c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e86e.  @monitorexit v1
  #L42e870.  throw v2;
  catch `java.lang.Throwable` @[L42e852..L42e868] goto L42e86c;
}
procedure `com.google.crypto.tink.KeysetHandle` `getKeysetHandle`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.getKeysetHandle:()Lcom/google/crypto/tink/KeysetHandle;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e6dc.  @monitorenter v1
  #L42e6de.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L42e6e2.  call temp:= `getKeysetHandle`(v0) @signature `Lcom/google/crypto/tink/KeysetManager;.getKeysetHandle:()Lcom/google/crypto/tink/KeysetHandle;` @kind virtual;
  #L42e6e8.  v0:= temp @kind object;
  #L42e6ea.  @monitorexit v1
  #L42e6ec.  return v0 @kind object;
  #L42e6ee.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e6f0.  @monitorexit v1
  #L42e6f2.  throw v0;
  catch `java.lang.Throwable` @[L42e6de..L42e6ea] goto L42e6ee;
}
procedure `boolean` `isUsingKeystore`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.isUsingKeystore:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e604.  @monitorenter v1
  #L42e606.  call temp:= `f`(v1) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.f:()Z` @kind direct;
  #L42e60c.  v0:= temp;
  #L42e60e.  @monitorexit v1
  #L42e610.  return v0;
  #L42e612.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e614.  @monitorexit v1
  #L42e616.  throw v0;
  catch `java.lang.Throwable` @[L42e606..L42e60e] goto L42e612;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `promote`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.promote:(I)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;

  #L42e890.  @monitorenter v0
  #L42e892.  call temp:= `setPrimary`(v0, v1) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.setPrimary:(I)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @kind virtual;
  #L42e898.  v1:= temp @kind object;
  #L42e89a.  @monitorexit v0
  #L42e89c.  return v1 @kind object;
  #L42e89e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e8a0.  @monitorexit v0
  #L42e8a2.  throw v1;
  catch `java.lang.Throwable` @[L42e892..L42e89a] goto L42e89e;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `rotate`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `com.google.crypto.tink.proto.KeyTemplate` v2 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.rotate:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e8c0.  @monitorenter v1
  #L42e8c2.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L42e8c6.  call temp:= `rotate`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.rotate:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L42e8cc.  v2:= temp @kind object;
  #L42e8ce.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L42e8d2.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L42e8d8.  @monitorexit v1
  #L42e8da.  return v1 @kind object;
  #L42e8dc.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e8de.  @monitorexit v1
  #L42e8e0.  throw v2;
  catch `java.lang.Throwable` @[L42e8c2..L42e8d8] goto L42e8dc;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `setPrimary`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.setPrimary:(I)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e900.  @monitorenter v1
  #L42e902.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L42e906.  call temp:= `setPrimary`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.setPrimary:(I)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L42e90c.  v2:= temp @kind object;
  #L42e90e.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L42e912.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L42e918.  @monitorexit v1
  #L42e91a.  return v1 @kind object;
  #L42e91c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e91e.  @monitorexit v1
  #L42e920.  throw v2;
  catch `java.lang.Throwable` @[L42e902..L42e918] goto L42e91c;
}
