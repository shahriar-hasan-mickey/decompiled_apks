record `com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.Aead` @kind interface {
  `javax.crypto.SecretKey` `com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.a` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L42ebb4.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L42ebc8.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42ebce.  v0:= "AndroidKeyStore" @kind object;
  #L42ebd2.  call temp:= `getInstance`(v0) @signature `Ljava/security/KeyStore;.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;` @kind static;
  #L42ebd8.  v0:= temp @kind object;
  #L42ebda.  v1:= 0I;
  #L42ebdc.  call `load`(v0, v1) @signature `Ljava/security/KeyStore;.load:(Ljava/security/KeyStore$LoadStoreParameter;)V` @kind virtual;
  #L42ebe2.  call temp:= `getKey`(v0, v4, v1) @signature `Ljava/security/KeyStore;.getKey:(Ljava/lang/String;[C)Ljava/security/Key;` @kind virtual;
  #L42ebe8.  v0:= temp @kind object;
  #L42ebea.  v0:= (`javax.crypto.SecretKey`) v0 @kind object;
  #L42ebee.  v3.`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.a` @type ^`javax.crypto.SecretKey` := v0 @kind object;
  #L42ebf2.  if v0 == 0 then goto L42ebf8;
  #L42ebf6.  return @kind void;
  #L42ebf8.  v0:= new `java.security.InvalidKeyException`;
  #L42ebfc.  v1:= new `java.lang.StringBuilder`;
  #L42ec00.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42ec06.  v2:= "Keystore cannot load the key with ID: " @kind object;
  #L42ec0a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42ec10.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42ec16.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42ec1c.  v4:= temp @kind object;
  #L42ec1e.  call `<init>`(v0, v4) @signature `Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42ec24.  throw v0;
}
procedure `void` `<init>`(`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm` v2 @kind this, `java.lang.String` v3 @kind object, `java.security.KeyStore` v4 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.<init>:(Ljava/lang/String;Ljava/security/KeyStore;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L42ec38.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42ec3e.  v0:= 0I;
  #L42ec40.  call temp:= `getKey`(v4, v3, v0) @signature `Ljava/security/KeyStore;.getKey:(Ljava/lang/String;[C)Ljava/security/Key;` @kind virtual;
  #L42ec46.  v4:= temp @kind object;
  #L42ec48.  v4:= (`javax.crypto.SecretKey`) v4 @kind object;
  #L42ec4c.  v2.`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.a` @type ^`javax.crypto.SecretKey` := v4 @kind object;
  #L42ec50.  if v4 == 0 then goto L42ec56;
  #L42ec54.  return @kind void;
  #L42ec56.  v4:= new `java.security.InvalidKeyException`;
  #L42ec5a.  v0:= new `java.lang.StringBuilder`;
  #L42ec5e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42ec64.  v1:= "Keystore cannot load the key with ID: " @kind object;
  #L42ec68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42ec6e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42ec74.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42ec7a.  v3:= temp @kind object;
  #L42ec7c.  call `<init>`(v4, v3) @signature `Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42ec82.  throw v4;
}
procedure `byte`[] `a`(`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm` v5 @kind this, `byte`[] v6 @kind object, `byte`[] v7 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.a:([B[B)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L42ea78.  v0:= length @variable v6;
  #L42ea7a.  v1:= 28I;
  #L42ea7e.  if v0 < v1 then goto L42eac2;
  #L42ea82.  v0:= new `javax.crypto.spec.GCMParameterSpec`;
  #L42ea86.  v1:= 128I;
  #L42ea8a.  v2:= 0I;
  #L42ea8c.  v3:= 12I;
  #L42ea90.  call `<init>`(v0, v1, v6, v2, v3) @signature `Ljavax/crypto/spec/GCMParameterSpec;.<init>:(I[BII)V` @kind direct;
  #L42ea96.  v1:= "AES/GCM/NoPadding" @kind object;
  #L42ea9a.  call temp:= `getInstance`(v1) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L42eaa0.  v1:= temp @kind object;
  #L42eaa2.  v2:= 2I;
  #L42eaa4.  v4:= v5.`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.a` @type ^`javax.crypto.SecretKey` @kind object;
  #L42eaa8.  call `init`(v1, v2, v4, v0) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L42eaae.  call `updateAAD`(v1, v7) @signature `Ljavax/crypto/Cipher;.updateAAD:([B)V` @kind virtual;
  #L42eab4.  v7:= length @variable v6;
  #L42eab6.  v7:= v7 - v3 @kind int;
  #L42eab8.  call temp:= `doFinal`(v1, v6, v3, v7) @signature `Ljavax/crypto/Cipher;.doFinal:([BII)[B` @kind virtual;
  #L42eabe.  v6:= temp @kind object;
  #L42eac0.  return v6 @kind object;
  #L42eac2.  v6:= new `java.security.GeneralSecurityException`;
  #L42eac6.  v7:= "ciphertext too short" @kind object;
  #L42eaca.  call `<init>`(v6, v7) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42ead0.  throw v6;
}
procedure `byte`[] `b`(`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm` v9 @kind this, `byte`[] v10 @kind object, `byte`[] v11 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.b:([B[B)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L42eb34.  v0:= length @variable v10;
  #L42eb36.  v1:= 2147483619I;
  #L42eb3c.  if v0 > v1 then goto L42eb94;
  #L42eb40.  v0:= length @variable v10;
  #L42eb42.  v1:= 12I;
  #L42eb46.  v0:= v0 + v1 @kind int;
  #L42eb48.  v0:= v0 + 16;
  #L42eb4c.  v0:= new `byte`[v0];
  #L42eb50.  v2:= "AES/GCM/NoPadding" @kind object;
  #L42eb54.  call temp:= `getInstance`(v2) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L42eb5a.  v8:= temp @kind object;
  #L42eb5c.  v2:= 1I;
  #L42eb5e.  v3:= v9.`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.a` @type ^`javax.crypto.SecretKey` @kind object;
  #L42eb62.  call `init`(v8, v2, v3) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L42eb68.  call `updateAAD`(v8, v11) @signature `Ljavax/crypto/Cipher;.updateAAD:([B)V` @kind virtual;
  #L42eb6e.  v4:= 0I;
  #L42eb70.  v5:= length @variable v10;
  #L42eb72.  v7:= 12I;
  #L42eb76.  v2:= v8 @kind object;
  #L42eb78.  v3:= v10 @kind object;
  #L42eb7a.  v6:= v0 @kind object;
  #L42eb7c.  call temp:= `doFinal`(v2, v3, v4, v5, v6, v7) @signature `Ljavax/crypto/Cipher;.doFinal:([BII[BI)I` @kind virtual;
  #L42eb82.  call temp:= `getIV`(v8) @signature `Ljavax/crypto/Cipher;.getIV:()[B` @kind virtual;
  #L42eb88.  v10:= temp @kind object;
  #L42eb8a.  v11:= 0I;
  #L42eb8c.  call `arraycopy`(v10, v11, v0, v11, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L42eb92.  return v0 @kind object;
  #L42eb94.  v10:= new `java.security.GeneralSecurityException`;
  #L42eb98.  v11:= "plaintext too long" @kind object;
  #L42eb9c.  call `<init>`(v10, v11) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42eba2.  throw v10;
}
procedure `void` `c`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.c:()V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42ec94.  call temp:= `random`() @signature `Ljava/lang/Math;.random:()D` @kind static;
  #L42ec9a.  v0:= temp @kind wide;
  #L42ec9c.  v2:= 100.0D;
  #L42eca0.  v0:= v0 * v2 @kind double;
  #L42eca4.  v0:= (`int`) v0 @kind d2i;
  #L42eca6.  v0:= (`long`) v0 @kind i2l;
  #L42eca8.  call `sleep`(v0) @signature `Ljava/lang/Thread;.sleep:(J)V` @kind static;
  #L42ecae.  return @kind void;
  catch `java.lang.InterruptedException` @[L42eca8..L42ecae] goto L42ecae;
}
procedure `byte`[] `decrypt`(`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.decrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42ea28.  call temp:= `a`(v3, v4, v5) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.a:([B[B)[B` @kind direct;
  #L42ea2e.  v4:= temp @kind object;
  #L42ea30.  return v4 @kind object;
  #L42ea32.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L42ea34.  goto L42ea38;
  #L42ea36.  v0:= Exception @type ^`java.security.ProviderException` @kind object;
  #L42ea38.  v1:= `@@com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.b` @type ^`java.lang.String` @kind object;
  #L42ea3c.  v2:= "encountered a potentially transient KeyStore error, will wait and retry" @kind object;
  #L42ea40.  call temp:= `w`(v1, v2, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L42ea46.  call `c`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.c:()V` @kind static;
  #L42ea4c.  call temp:= `a`(v3, v4, v5) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.a:([B[B)[B` @kind direct;
  #L42ea52.  v4:= temp @kind object;
  #L42ea54.  return v4 @kind object;
  catch `java.security.ProviderException` @[L42ea28..L42ea30] goto L42ea36;
  catch `java.security.GeneralSecurityException` @[L42ea28..L42ea30] goto L42ea32;
}
procedure `byte`[] `encrypt`(`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.encrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42eae4.  call temp:= `b`(v3, v4, v5) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.b:([B[B)[B` @kind direct;
  #L42eaea.  v4:= temp @kind object;
  #L42eaec.  return v4 @kind object;
  #L42eaee.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L42eaf0.  goto L42eaf4;
  #L42eaf2.  v0:= Exception @type ^`java.security.ProviderException` @kind object;
  #L42eaf4.  v1:= `@@com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.b` @type ^`java.lang.String` @kind object;
  #L42eaf8.  v2:= "encountered a potentially transient KeyStore error, will wait and retry" @kind object;
  #L42eafc.  call temp:= `w`(v1, v2, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L42eb02.  call `c`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.c:()V` @kind static;
  #L42eb08.  call temp:= `b`(v3, v4, v5) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.b:([B[B)[B` @kind direct;
  #L42eb0e.  v4:= temp @kind object;
  #L42eb10.  return v4 @kind object;
  catch `java.security.ProviderException` @[L42eae4..L42eaec] goto L42eaf2;
  catch `java.security.GeneralSecurityException` @[L42eae4..L42eaec] goto L42eaee;
}
