record `com.google.android.material.internal.ViewUtils` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.google.android.material.internal.ViewUtils` v0 @kind this) @signature `Lcom/google/android/material/internal/ViewUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3f1400.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f1406.  return @kind void;
}
procedure `void` `addOnGlobalLayoutListener`(`android.view.View` v0 @kind object, `android.view.ViewTreeObserver$OnGlobalLayoutListener` v1 @kind object) @signature `Lcom/google/android/material/internal/ViewUtils;.addOnGlobalLayoutListener:(Landroid/view/View;Landroid/view/ViewTreeObserver$OnGlobalLayoutListener;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3f1418.  if v0 == 0 then goto L3f142a;
  #L3f141c.  call temp:= `getViewTreeObserver`(v0) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L3f1422.  v0:= temp @kind object;
  #L3f1424.  call `addOnGlobalLayoutListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.addOnGlobalLayoutListener:(Landroid/view/ViewTreeObserver$OnGlobalLayoutListener;)V` @kind virtual;
  #L3f142a.  return @kind void;
}
procedure `void` `doOnApplyWindowInsets`(`android.view.View` v1 @kind object, `android.util.AttributeSet` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/android/material/internal/ViewUtils;.doOnApplyWindowInsets:(Landroid/view/View;Landroid/util/AttributeSet;II)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f143c.  v0:= 0I;
  #L3f143e.  call `doOnApplyWindowInsets`(v1, v2, v3, v4, v0) @signature `Lcom/google/android/material/internal/ViewUtils;.doOnApplyWindowInsets:(Landroid/view/View;Landroid/util/AttributeSet;IILcom/google/android/material/internal/ViewUtils$OnApplyWindowInsetsListener;)V` @kind static;
  #L3f1444.  return @kind void;
}
procedure `void` `doOnApplyWindowInsets`(`android.view.View` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `int` v4 , `int` v5 , `com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener` v6 @kind object) @signature `Lcom/google/android/material/internal/ViewUtils;.doOnApplyWindowInsets:(Landroid/view/View;Landroid/util/AttributeSet;IILcom/google/android/material/internal/ViewUtils$OnApplyWindowInsetsListener;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f1458.  call temp:= `getContext`(v2) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L3f145e.  v0:= temp @kind object;
  #L3f1460.  v1:= `@@com.google.android.material.R$styleable.Insets` @type ^`int`[] @kind object;
  #L3f1464.  call temp:= `obtainStyledAttributes`(v0, v3, v1, v4, v5) @signature `Landroid/content/Context;.obtainStyledAttributes:(Landroid/util/AttributeSet;[III)Landroid/content/res/TypedArray;` @kind virtual;
  #L3f146a.  v3:= temp @kind object;
  #L3f146c.  v4:= `@@com.google.android.material.R$styleable.Insets_paddingBottomSystemWindowInsets` @type ^`int`;
  #L3f1470.  v5:= 0I;
  #L3f1472.  call temp:= `getBoolean`(v3, v4, v5) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3f1478.  v4:= temp;
  #L3f147a.  v0:= `@@com.google.android.material.R$styleable.Insets_paddingLeftSystemWindowInsets` @type ^`int`;
  #L3f147e.  call temp:= `getBoolean`(v3, v0, v5) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3f1484.  v0:= temp;
  #L3f1486.  v1:= `@@com.google.android.material.R$styleable.Insets_paddingRightSystemWindowInsets` @type ^`int`;
  #L3f148a.  call temp:= `getBoolean`(v3, v1, v5) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3f1490.  v5:= temp;
  #L3f1492.  call `recycle`(v3) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L3f1498.  v3:= new `com.google.android.material.internal.ViewUtils$2`;
  #L3f149c.  call `<init>`(v3, v4, v0, v5, v6) @signature `Lcom/google/android/material/internal/ViewUtils$2;.<init>:(ZZZLcom/google/android/material/internal/ViewUtils$OnApplyWindowInsetsListener;)V` @kind direct;
  #L3f14a2.  call `doOnApplyWindowInsets`(v2, v3) @signature `Lcom/google/android/material/internal/ViewUtils;.doOnApplyWindowInsets:(Landroid/view/View;Lcom/google/android/material/internal/ViewUtils$OnApplyWindowInsetsListener;)V` @kind static;
  #L3f14a8.  return @kind void;
}
procedure `void` `doOnApplyWindowInsets`(`android.view.View` v5 @kind object, `com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener` v6 @kind object) @signature `Lcom/google/android/material/internal/ViewUtils;.doOnApplyWindowInsets:(Landroid/view/View;Lcom/google/android/material/internal/ViewUtils$OnApplyWindowInsetsListener;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f14bc.  v0:= new `com.google.android.material.internal.ViewUtils$RelativePadding`;
  #L3f14c0.  call temp:= `getPaddingStart`(v5) @signature `Landroidx/core/view/ViewCompat;.getPaddingStart:(Landroid/view/View;)I` @kind static;
  #L3f14c6.  v1:= temp;
  #L3f14c8.  call temp:= `getPaddingTop`(v5) @signature `Landroid/view/View;.getPaddingTop:()I` @kind virtual;
  #L3f14ce.  v2:= temp;
  #L3f14d0.  call temp:= `getPaddingEnd`(v5) @signature `Landroidx/core/view/ViewCompat;.getPaddingEnd:(Landroid/view/View;)I` @kind static;
  #L3f14d6.  v3:= temp;
  #L3f14d8.  call temp:= `getPaddingBottom`(v5) @signature `Landroid/view/View;.getPaddingBottom:()I` @kind virtual;
  #L3f14de.  v4:= temp;
  #L3f14e0.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/google/android/material/internal/ViewUtils$RelativePadding;.<init>:(IIII)V` @kind direct;
  #L3f14e6.  v1:= new `com.google.android.material.internal.ViewUtils$3`;
  #L3f14ea.  call `<init>`(v1, v6, v0) @signature `Lcom/google/android/material/internal/ViewUtils$3;.<init>:(Lcom/google/android/material/internal/ViewUtils$OnApplyWindowInsetsListener;Lcom/google/android/material/internal/ViewUtils$RelativePadding;)V` @kind direct;
  #L3f14f0.  call `setOnApplyWindowInsetsListener`(v5, v1) @signature `Landroidx/core/view/ViewCompat;.setOnApplyWindowInsetsListener:(Landroid/view/View;Landroidx/core/view/OnApplyWindowInsetsListener;)V` @kind static;
  #L3f14f6.  call `requestApplyInsetsWhenAttached`(v5) @signature `Lcom/google/android/material/internal/ViewUtils;.requestApplyInsetsWhenAttached:(Landroid/view/View;)V` @kind static;
  #L3f14fc.  return @kind void;
}
procedure `float` `dpToPx`(`android.content.Context` v1 @kind object, `int` v2 ) @signature `Lcom/google/android/material/internal/ViewUtils;.dpToPx:(Landroid/content/Context;I)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f1390.  call temp:= `getResources`(v1) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3f1396.  v1:= temp @kind object;
  #L3f1398.  v2:= (`float`) v2 @kind i2f;
  #L3f139a.  call temp:= `getDisplayMetrics`(v1) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L3f13a0.  v1:= temp @kind object;
  #L3f13a2.  v0:= 1I;
  #L3f13a4.  call temp:= `applyDimension`(v0, v2, v1) @signature `Landroid/util/TypedValue;.applyDimension:(IFLandroid/util/DisplayMetrics;)F` @kind static;
  #L3f13aa.  v1:= temp;
  #L3f13ac.  return v1;
}
procedure `android.view.ViewGroup` `getContentView`(`android.view.View` v3 @kind object) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentView:(Landroid/view/View;)Landroid/view/ViewGroup;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f12c0.  v0:= 0I;
  #L3f12c2.  if v3 != 0 then goto L3f12c8;
  #L3f12c6.  return v0 @kind object;
  #L3f12c8.  call temp:= `getRootView`(v3) @signature `Landroid/view/View;.getRootView:()Landroid/view/View;` @kind virtual;
  #L3f12ce.  v1:= temp @kind object;
  #L3f12d0.  v2:= 16908290I;
  #L3f12d6.  call temp:= `findViewById`(v1, v2) @signature `Landroid/view/View;.findViewById:(I)Landroid/view/View;` @kind virtual;
  #L3f12dc.  v2:= temp @kind object;
  #L3f12de.  v2:= (`android.view.ViewGroup`) v2 @kind object;
  #L3f12e2.  if v2 == 0 then goto L3f12e8;
  #L3f12e6.  return v2 @kind object;
  #L3f12e8.  if v1 == v3 then goto L3f12fa;
  #L3f12ec.  v3:= instanceof @variable v1 @type ^`android.view.ViewGroup` @kind boolean;
  #L3f12f0.  if v3 == 0 then goto L3f12fa;
  #L3f12f4.  v1:= (`android.view.ViewGroup`) v1 @kind object;
  #L3f12f8.  return v1 @kind object;
  #L3f12fa.  return v0 @kind object;
}
procedure `com.google.android.material.internal.ViewOverlayImpl` `getContentViewOverlay`(`android.view.View` v0 @kind object) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentViewOverlay:(Landroid/view/View;)Lcom/google/android/material/internal/ViewOverlayImpl;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3f1330.  call temp:= `getContentView`(v0) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentView:(Landroid/view/View;)Landroid/view/ViewGroup;` @kind static;
  #L3f1336.  v0:= temp @kind object;
  #L3f1338.  call temp:= `getOverlay`(v0) @signature `Lcom/google/android/material/internal/ViewUtils;.getOverlay:(Landroid/view/View;)Lcom/google/android/material/internal/ViewOverlayImpl;` @kind static;
  #L3f133e.  v0:= temp @kind object;
  #L3f1340.  return v0 @kind object;
}
procedure `com.google.android.material.internal.ViewOverlayImpl` `getOverlay`(`android.view.View` v2 @kind object) @signature `Lcom/google/android/material/internal/ViewUtils;.getOverlay:(Landroid/view/View;)Lcom/google/android/material/internal/ViewOverlayImpl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f1354.  if v2 != 0 then goto L3f135c;
  #L3f1358.  v2:= 0I;
  #L3f135a.  return v2 @kind object;
  #L3f135c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3f1360.  v1:= 18I;
  #L3f1364.  if v0 < v1 then goto L3f1374;
  #L3f1368.  v0:= new `com.google.android.material.internal.ViewOverlayApi18`;
  #L3f136c.  call `<init>`(v0, v2) @signature `Lcom/google/android/material/internal/ViewOverlayApi18;.<init>:(Landroid/view/View;)V` @kind direct;
  #L3f1372.  return v0 @kind object;
  #L3f1374.  call temp:= `createFrom`(v2) @signature `Lcom/google/android/material/internal/ViewOverlayApi14;.createFrom:(Landroid/view/View;)Lcom/google/android/material/internal/ViewOverlayApi14;` @kind static;
  #L3f137a.  v2:= temp @kind object;
  #L3f137c.  return v2 @kind object;
}
procedure `float` `getParentAbsoluteElevation`(`android.view.View` v2 @kind object) @signature `Lcom/google/android/material/internal/ViewUtils;.getParentAbsoluteElevation:(Landroid/view/View;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f13c0.  call temp:= `getParent`(v2) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L3f13c6.  v2:= temp @kind object;
  #L3f13c8.  v0:= 0I;
  #L3f13ca.  v1:= instanceof @variable v2 @type ^`android.view.View` @kind boolean;
  #L3f13ce.  if v1 == 0 then goto L3f13ec;
  #L3f13d2.  v1:= v2 @kind object;
  #L3f13d4.  v1:= (`android.view.View`) v1 @kind object;
  #L3f13d8.  call temp:= `getElevation`(v1) @signature `Landroidx/core/view/ViewCompat;.getElevation:(Landroid/view/View;)F` @kind static;
  #L3f13de.  v1:= temp;
  #L3f13e0.  v0:= v0 + v1 @kind float;
  #L3f13e2.  call temp:= `getParent`(v2) @signature `Landroid/view/ViewParent;.getParent:()Landroid/view/ViewParent;` @kind interface;
  #L3f13e8.  v2:= temp @kind object;
  #L3f13ea.  goto L3f13ca;
  #L3f13ec.  return v0;
}
procedure `boolean` `isLayoutRtl`(`android.view.View` v1 @kind object) @signature `Lcom/google/android/material/internal/ViewUtils;.isLayoutRtl:(Landroid/view/View;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f130c.  call temp:= `getLayoutDirection`(v1) @signature `Landroidx/core/view/ViewCompat;.getLayoutDirection:(Landroid/view/View;)I` @kind static;
  #L3f1312.  v1:= temp;
  #L3f1314.  v0:= 1I;
  #L3f1316.  if v1 != v0 then goto L3f131c;
  #L3f131a.  goto L3f131e;
  #L3f131c.  v0:= 0I;
  #L3f131e.  return v0;
}
procedure `android.graphics.PorterDuff$Mode` `parseTintMode`(`int` v1 , `android.graphics.PorterDuff$Mode` v2 @kind object) @signature `Lcom/google/android/material/internal/ViewUtils;.parseTintMode:(ILandroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuff$Mode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f125c.  v0:= 3I;
  #L3f125e.  if v1 == v0 then goto L3f1296;
  #L3f1262.  v0:= 5I;
  #L3f1264.  if v1 == v0 then goto L3f1290;
  #L3f1268.  v0:= 9I;
  #L3f126c.  if v1 == v0 then goto L3f128a;
  #L3f1270.  goto L3f129c;
  #L3f1276.  return v2 @kind object;
  #L3f1278.  v1:= `@@android.graphics.PorterDuff$Mode.ADD` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3f127c.  return v1 @kind object;
  #L3f127e.  v1:= `@@android.graphics.PorterDuff$Mode.SCREEN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3f1282.  return v1 @kind object;
  #L3f1284.  v1:= `@@android.graphics.PorterDuff$Mode.MULTIPLY` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3f1288.  return v1 @kind object;
  #L3f128a.  v1:= `@@android.graphics.PorterDuff$Mode.SRC_ATOP` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3f128e.  return v1 @kind object;
  #L3f1290.  v1:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3f1294.  return v1 @kind object;
  #L3f1296.  v1:= `@@android.graphics.PorterDuff$Mode.SRC_OVER` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3f129a.  return v1 @kind object;
  #L3f129c.  switch v1
                  | 14 => goto L3f1284
                  | 15 => goto L3f127e
                  | 16 => goto L3f1278
                  | else => goto L3f1276;
}
procedure `void` `removeOnGlobalLayoutListener`(`android.view.View` v0 @kind object, `android.view.ViewTreeObserver$OnGlobalLayoutListener` v1 @kind object) @signature `Lcom/google/android/material/internal/ViewUtils;.removeOnGlobalLayoutListener:(Landroid/view/View;Landroid/view/ViewTreeObserver$OnGlobalLayoutListener;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3f1510.  if v0 == 0 then goto L3f1522;
  #L3f1514.  call temp:= `getViewTreeObserver`(v0) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L3f151a.  v0:= temp @kind object;
  #L3f151c.  call `removeOnGlobalLayoutListener`(v0, v1) @signature `Lcom/google/android/material/internal/ViewUtils;.removeOnGlobalLayoutListener:(Landroid/view/ViewTreeObserver;Landroid/view/ViewTreeObserver$OnGlobalLayoutListener;)V` @kind static;
  #L3f1522.  return @kind void;
}
procedure `void` `removeOnGlobalLayoutListener`(`android.view.ViewTreeObserver` v2 @kind object, `android.view.ViewTreeObserver$OnGlobalLayoutListener` v3 @kind object) @signature `Lcom/google/android/material/internal/ViewUtils;.removeOnGlobalLayoutListener:(Landroid/view/ViewTreeObserver;Landroid/view/ViewTreeObserver$OnGlobalLayoutListener;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f1534.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3f1538.  v1:= 16I;
  #L3f153c.  if v0 < v1 then goto L3f1548;
  #L3f1540.  call `removeOnGlobalLayoutListener`(v2, v3) @signature `Landroid/view/ViewTreeObserver;.removeOnGlobalLayoutListener:(Landroid/view/ViewTreeObserver$OnGlobalLayoutListener;)V` @kind virtual;
  #L3f1546.  goto L3f154e;
  #L3f1548.  call `removeGlobalOnLayoutListener`(v2, v3) @signature `Landroid/view/ViewTreeObserver;.removeGlobalOnLayoutListener:(Landroid/view/ViewTreeObserver$OnGlobalLayoutListener;)V` @kind virtual;
  #L3f154e.  return @kind void;
}
procedure `void` `requestApplyInsetsWhenAttached`(`android.view.View` v1 @kind object) @signature `Lcom/google/android/material/internal/ViewUtils;.requestApplyInsetsWhenAttached:(Landroid/view/View;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f1560.  call temp:= `isAttachedToWindow`(v1) @signature `Landroidx/core/view/ViewCompat;.isAttachedToWindow:(Landroid/view/View;)Z` @kind static;
  #L3f1566.  v0:= temp;
  #L3f1568.  if v0 == 0 then goto L3f1574;
  #L3f156c.  call `requestApplyInsets`(v1) @signature `Landroidx/core/view/ViewCompat;.requestApplyInsets:(Landroid/view/View;)V` @kind static;
  #L3f1572.  goto L3f1584;
  #L3f1574.  v0:= new `com.google.android.material.internal.ViewUtils$4`;
  #L3f1578.  call `<init>`(v0) @signature `Lcom/google/android/material/internal/ViewUtils$4;.<init>:()V` @kind direct;
  #L3f157e.  call `addOnAttachStateChangeListener`(v1, v0) @signature `Landroid/view/View;.addOnAttachStateChangeListener:(Landroid/view/View$OnAttachStateChangeListener;)V` @kind virtual;
  #L3f1584.  return @kind void;
}
procedure `void` `requestFocusAndShowKeyboard`(`android.view.View` v1 @kind object) @signature `Lcom/google/android/material/internal/ViewUtils;.requestFocusAndShowKeyboard:(Landroid/view/View;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f1598.  call temp:= `requestFocus`(v1) @signature `Landroid/view/View;.requestFocus:()Z` @kind virtual;
  #L3f159e.  v0:= new `com.google.android.material.internal.ViewUtils$1`;
  #L3f15a2.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/internal/ViewUtils$1;.<init>:(Landroid/view/View;)V` @kind direct;
  #L3f15a8.  call temp:= `post`(v1, v0) @signature `Landroid/view/View;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L3f15ae.  return @kind void;
}
