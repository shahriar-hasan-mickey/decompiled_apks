record `com.google.android.material.bottomsheet.BottomSheetBehavior` @kind class @AccessFlag PUBLIC extends `androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior` @kind class {
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.activePointerId` @AccessFlag ;
  `java.util.ArrayList` `com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.childHeight` @AccessFlag PRIVATE;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @AccessFlag ;
  `androidx.customview.widget.ViewDragHelper$Callback` `com.google.android.material.bottomsheet.BottomSheetBehavior.dragCallback` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.draggable` @AccessFlag PRIVATE;
  `float` `com.google.android.material.bottomsheet.BottomSheetBehavior.elevation` @AccessFlag ;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.expandHalfwayActionId` @AccessFlag PRIVATE;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.expandedOffset` @AccessFlag ;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @AccessFlag PRIVATE;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContentsOffset` @AccessFlag ;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.gestureInsetBottom` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.gestureInsetBottomIgnored` @AccessFlag PRIVATE;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedOffset` @AccessFlag ;
  `float` `com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedRatio` @AccessFlag ;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.hideable` @AccessFlag ;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.ignoreEvents` @AccessFlag PRIVATE;
  `java.util.Map` `com.google.android.material.bottomsheet.BottomSheetBehavior.importantForAccessibilityMap` @AccessFlag PRIVATE;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.initialY` @AccessFlag PRIVATE;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.insetBottom` @AccessFlag PRIVATE;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.insetTop` @AccessFlag PRIVATE;
  `android.animation.ValueAnimator` `com.google.android.material.bottomsheet.BottomSheetBehavior.interpolatorAnimator` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.isShapeExpanded` @AccessFlag PRIVATE;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.lastNestedScrollDy` @AccessFlag PRIVATE;
  `com.google.android.material.shape.MaterialShapeDrawable` `com.google.android.material.bottomsheet.BottomSheetBehavior.materialShapeDrawable` @AccessFlag PRIVATE;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.maxWidth` @AccessFlag PRIVATE;
  `float` `com.google.android.material.bottomsheet.BottomSheetBehavior.maximumVelocity` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.nestedScrolled` @AccessFlag PRIVATE;
  `java.lang.ref.WeakReference` `com.google.android.material.bottomsheet.BottomSheetBehavior.nestedScrollingChildRef` @AccessFlag ;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.paddingBottomSystemWindowInsets` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.paddingLeftSystemWindowInsets` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.paddingRightSystemWindowInsets` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.paddingTopSystemWindowInsets` @AccessFlag PRIVATE;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.parentHeight` @AccessFlag ;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.parentWidth` @AccessFlag ;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeight` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightAuto` @AccessFlag PRIVATE;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightGestureInsetBuffer` @AccessFlag PRIVATE;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightMin` @AccessFlag PRIVATE;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.saveFlags` @AccessFlag PRIVATE;
  `com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable` `com.google.android.material.bottomsheet.BottomSheetBehavior.settleRunnable` @AccessFlag PRIVATE;
  `com.google.android.material.shape.ShapeAppearanceModel` `com.google.android.material.bottomsheet.BottomSheetBehavior.shapeAppearanceModelDefault` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.shapeThemingEnabled` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.skipCollapsed` @AccessFlag PRIVATE;
  `int` `com.google.android.material.bottomsheet.BottomSheetBehavior.state` @AccessFlag ;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.touchingScrollingChild` @AccessFlag ;
  `boolean` `com.google.android.material.bottomsheet.BottomSheetBehavior.updateImportantForAccessibilityOnSiblings` @AccessFlag PRIVATE;
  `android.view.VelocityTracker` `com.google.android.material.bottomsheet.BottomSheetBehavior.velocityTracker` @AccessFlag PRIVATE;
  `androidx.customview.widget.ViewDragHelper` `com.google.android.material.bottomsheet.BottomSheetBehavior.viewDragHelper` @AccessFlag ;
  `java.lang.ref.WeakReference` `com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @AccessFlag ;
}
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.CORNER_ANIMATION_DURATION` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.DEF_STYLE_RES` @AccessFlag PRIVATE_STATIC_FINAL;
global `float` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.HIDE_FRICTION` @AccessFlag PRIVATE_STATIC_FINAL;
global `float` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.HIDE_THRESHOLD` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.NO_WIDTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.PEEK_HEIGHT_AUTO` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.SAVE_ALL` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.SAVE_FIT_TO_CONTENTS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.SAVE_HIDEABLE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.SAVE_NONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.SAVE_PEEK_HEIGHT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.SAVE_SKIP_COLLAPSED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.SIGNIFICANT_VEL_THRESHOLD` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.STATE_COLLAPSED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.STATE_DRAGGING` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.STATE_EXPANDED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.STATE_HALF_EXPANDED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.STATE_HIDDEN` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.STATE_SETTLING` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.bottomsheet.BottomSheetBehavior.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ce914.  v0:= `@@com.google.android.material.R$style.Widget_Design_BottomSheet_Modal` @type ^`int`;
  #L3ce918.  `@@com.google.android.material.bottomsheet.BottomSheetBehavior.DEF_STYLE_RES` @type ^`int` := v0;
  #L3ce91c.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v3 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3ce930.  call `<init>`(v3) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;.<init>:()V` @kind direct;
  #L3ce936.  v0:= 0I;
  #L3ce938.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.saveFlags` @type ^`int` := v0;
  #L3ce93c.  v1:= 1I;
  #L3ce93e.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` := v1 @kind boolean;
  #L3ce942.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.updateImportantForAccessibilityOnSiblings` @type ^`boolean` := v0 @kind boolean;
  #L3ce946.  v0:= -1I;
  #L3ce948.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.maxWidth` @type ^`int` := v0;
  #L3ce94c.  v2:= 0I;
  #L3ce94e.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.settleRunnable` @type ^`com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable` := v2 @kind object;
  #L3ce952.  v2:= 0.5F;
  #L3ce956.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedRatio` @type ^`float` := v2;
  #L3ce95a.  v2:= -1.0F;
  #L3ce95e.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.elevation` @type ^`float` := v2;
  #L3ce962.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.draggable` @type ^`boolean` := v1 @kind boolean;
  #L3ce966.  v1:= 4I;
  #L3ce968.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int` := v1;
  #L3ce96c.  v1:= new `java.util.ArrayList`;
  #L3ce970.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3ce976.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks` @type ^`java.util.ArrayList` := v1 @kind object;
  #L3ce97a.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.expandHalfwayActionId` @type ^`int` := v0;
  #L3ce97e.  v0:= new `com.google.android.material.bottomsheet.BottomSheetBehavior$5`;
  #L3ce982.  call `<init>`(v0, v3) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior$5;.<init>:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;)V` @kind direct;
  #L3ce988.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.dragCallback` @type ^`androidx.customview.widget.ViewDragHelper$Callback` := v0 @kind object;
  #L3ce98c.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v8 @kind this, `android.content.Context` v9 @kind object, `android.util.AttributeSet` v10 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ce9a0.  call `<init>`(v8, v9, v10) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L3ce9a6.  v0:= 0I;
  #L3ce9a8.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.saveFlags` @type ^`int` := v0;
  #L3ce9ac.  v1:= 1I;
  #L3ce9ae.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` := v1 @kind boolean;
  #L3ce9b2.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.updateImportantForAccessibilityOnSiblings` @type ^`boolean` := v0 @kind boolean;
  #L3ce9b6.  v2:= -1I;
  #L3ce9b8.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.maxWidth` @type ^`int` := v2;
  #L3ce9bc.  v3:= 0I;
  #L3ce9be.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.settleRunnable` @type ^`com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable` := v3 @kind object;
  #L3ce9c2.  v3:= 0.5F;
  #L3ce9c6.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedRatio` @type ^`float` := v3;
  #L3ce9ca.  v4:= -1.0F;
  #L3ce9ce.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.elevation` @type ^`float` := v4;
  #L3ce9d2.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.draggable` @type ^`boolean` := v1 @kind boolean;
  #L3ce9d6.  v5:= 4I;
  #L3ce9d8.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int` := v5;
  #L3ce9dc.  v5:= new `java.util.ArrayList`;
  #L3ce9e0.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3ce9e6.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks` @type ^`java.util.ArrayList` := v5 @kind object;
  #L3ce9ea.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.expandHalfwayActionId` @type ^`int` := v2;
  #L3ce9ee.  v5:= new `com.google.android.material.bottomsheet.BottomSheetBehavior$5`;
  #L3ce9f2.  call `<init>`(v5, v8) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior$5;.<init>:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;)V` @kind direct;
  #L3ce9f8.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.dragCallback` @type ^`androidx.customview.widget.ViewDragHelper$Callback` := v5 @kind object;
  #L3ce9fc.  call temp:= `getResources`(v9) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3cea02.  v5:= temp @kind object;
  #L3cea04.  v6:= `@@com.google.android.material.R$dimen.mtrl_min_touch_target_size` @type ^`int`;
  #L3cea08.  call temp:= `getDimensionPixelSize`(v5, v6) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L3cea0e.  v5:= temp;
  #L3cea10.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightGestureInsetBuffer` @type ^`int` := v5;
  #L3cea14.  v5:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout` @type ^`int`[] @kind object;
  #L3cea18.  call temp:= `obtainStyledAttributes`(v9, v10, v5) @signature `Landroid/content/Context;.obtainStyledAttributes:(Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;` @kind virtual;
  #L3cea1e.  v5:= temp @kind object;
  #L3cea20.  v6:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_shapeAppearance` @type ^`int`;
  #L3cea24.  call temp:= `hasValue`(v5, v6) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L3cea2a.  v6:= temp;
  #L3cea2c.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.shapeThemingEnabled` @type ^`boolean` := v6 @kind boolean;
  #L3cea30.  v6:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_backgroundTint` @type ^`int`;
  #L3cea34.  call temp:= `hasValue`(v5, v6) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L3cea3a.  v6:= temp;
  #L3cea3c.  if v6 == 0 then goto L3cea54;
  #L3cea40.  v7:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_backgroundTint` @type ^`int`;
  #L3cea44.  call temp:= `getColorStateList`(v9, v5, v7) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L3cea4a.  v7:= temp @kind object;
  #L3cea4c.  call `createMaterialShapeDrawable`(v8, v9, v10, v6, v7) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.createMaterialShapeDrawable:(Landroid/content/Context;Landroid/util/AttributeSet;ZLandroid/content/res/ColorStateList;)V` @kind direct;
  #L3cea52.  goto L3cea5a;
  #L3cea54.  call `createMaterialShapeDrawable`(v8, v9, v10, v6) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.createMaterialShapeDrawable:(Landroid/content/Context;Landroid/util/AttributeSet;Z)V` @kind direct;
  #L3cea5a.  call `createShapeValueAnimator`(v8) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.createShapeValueAnimator:()V` @kind direct;
  #L3cea60.  v10:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3cea64.  v6:= 21I;
  #L3cea68.  if v10 < v6 then goto L3cea7c;
  #L3cea6c.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_android_elevation` @type ^`int`;
  #L3cea70.  call temp:= `getDimension`(v5, v10, v4) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3cea76.  v10:= temp;
  #L3cea78.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.elevation` @type ^`float` := v10;
  #L3cea7c.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_android_maxWidth` @type ^`int`;
  #L3cea80.  call temp:= `hasValue`(v5, v10) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L3cea86.  v10:= temp;
  #L3cea88.  if v10 == 0 then goto L3cea9e;
  #L3cea8c.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_android_maxWidth` @type ^`int`;
  #L3cea90.  call temp:= `getDimensionPixelSize`(v5, v10, v2) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L3cea96.  v10:= temp;
  #L3cea98.  call `setMaxWidth`(v8, v10) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setMaxWidth:(I)V` @kind virtual;
  #L3cea9e.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_behavior_peekHeight` @type ^`int`;
  #L3ceaa2.  call temp:= `peekValue`(v5, v10) @signature `Landroid/content/res/TypedArray;.peekValue:(I)Landroid/util/TypedValue;` @kind virtual;
  #L3ceaa8.  v10:= temp @kind object;
  #L3ceaaa.  if v10 == 0 then goto L3ceabe;
  #L3ceaae.  v10:= v10.`android.util.TypedValue.data` @type ^`int`;
  #L3ceab2.  if v10 != v2 then goto L3ceabe;
  #L3ceab6.  call `setPeekHeight`(v8, v10) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setPeekHeight:(I)V` @kind virtual;
  #L3ceabc.  goto L3cead0;
  #L3ceabe.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_behavior_peekHeight` @type ^`int`;
  #L3ceac2.  call temp:= `getDimensionPixelSize`(v5, v10, v2) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L3ceac8.  v10:= temp;
  #L3ceaca.  call `setPeekHeight`(v8, v10) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setPeekHeight:(I)V` @kind virtual;
  #L3cead0.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_behavior_hideable` @type ^`int`;
  #L3cead4.  call temp:= `getBoolean`(v5, v10, v0) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3ceada.  v10:= temp;
  #L3ceadc.  call `setHideable`(v8, v10) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setHideable:(Z)V` @kind virtual;
  #L3ceae2.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_gestureInsetBottomIgnored` @type ^`int`;
  #L3ceae6.  call temp:= `getBoolean`(v5, v10, v0) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3ceaec.  v10:= temp;
  #L3ceaee.  call `setGestureInsetBottomIgnored`(v8, v10) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setGestureInsetBottomIgnored:(Z)V` @kind virtual;
  #L3ceaf4.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_behavior_fitToContents` @type ^`int`;
  #L3ceaf8.  call temp:= `getBoolean`(v5, v10, v1) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3ceafe.  v10:= temp;
  #L3ceb00.  call `setFitToContents`(v8, v10) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setFitToContents:(Z)V` @kind virtual;
  #L3ceb06.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_behavior_skipCollapsed` @type ^`int`;
  #L3ceb0a.  call temp:= `getBoolean`(v5, v10, v0) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3ceb10.  v10:= temp;
  #L3ceb12.  call `setSkipCollapsed`(v8, v10) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setSkipCollapsed:(Z)V` @kind virtual;
  #L3ceb18.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_behavior_draggable` @type ^`int`;
  #L3ceb1c.  call temp:= `getBoolean`(v5, v10, v1) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3ceb22.  v10:= temp;
  #L3ceb24.  call `setDraggable`(v8, v10) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setDraggable:(Z)V` @kind virtual;
  #L3ceb2a.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_behavior_saveFlags` @type ^`int`;
  #L3ceb2e.  call temp:= `getInt`(v5, v10, v0) @signature `Landroid/content/res/TypedArray;.getInt:(II)I` @kind virtual;
  #L3ceb34.  v10:= temp;
  #L3ceb36.  call `setSaveFlags`(v8, v10) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setSaveFlags:(I)V` @kind virtual;
  #L3ceb3c.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_behavior_halfExpandedRatio` @type ^`int`;
  #L3ceb40.  call temp:= `getFloat`(v5, v10, v3) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L3ceb46.  v10:= temp;
  #L3ceb48.  call `setHalfExpandedRatio`(v8, v10) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setHalfExpandedRatio:(F)V` @kind virtual;
  #L3ceb4e.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_behavior_expandedOffset` @type ^`int`;
  #L3ceb52.  call temp:= `peekValue`(v5, v10) @signature `Landroid/content/res/TypedArray;.peekValue:(I)Landroid/util/TypedValue;` @kind virtual;
  #L3ceb58.  v10:= temp @kind object;
  #L3ceb5a.  if v10 == 0 then goto L3ceb76;
  #L3ceb5e.  v2:= v10.`android.util.TypedValue.type` @type ^`int`;
  #L3ceb62.  v3:= 16I;
  #L3ceb66.  if v2 != v3 then goto L3ceb76;
  #L3ceb6a.  v10:= v10.`android.util.TypedValue.data` @type ^`int`;
  #L3ceb6e.  call `setExpandedOffset`(v8, v10) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setExpandedOffset:(I)V` @kind virtual;
  #L3ceb74.  goto L3ceb88;
  #L3ceb76.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_behavior_expandedOffset` @type ^`int`;
  #L3ceb7a.  call temp:= `getDimensionPixelOffset`(v5, v10, v0) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L3ceb80.  v10:= temp;
  #L3ceb82.  call `setExpandedOffset`(v8, v10) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setExpandedOffset:(I)V` @kind virtual;
  #L3ceb88.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_paddingBottomSystemWindowInsets` @type ^`int`;
  #L3ceb8c.  call temp:= `getBoolean`(v5, v10, v0) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3ceb92.  v10:= temp;
  #L3ceb94.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.paddingBottomSystemWindowInsets` @type ^`boolean` := v10 @kind boolean;
  #L3ceb98.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_paddingLeftSystemWindowInsets` @type ^`int`;
  #L3ceb9c.  call temp:= `getBoolean`(v5, v10, v0) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3ceba2.  v10:= temp;
  #L3ceba4.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.paddingLeftSystemWindowInsets` @type ^`boolean` := v10 @kind boolean;
  #L3ceba8.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_paddingRightSystemWindowInsets` @type ^`int`;
  #L3cebac.  call temp:= `getBoolean`(v5, v10, v0) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3cebb2.  v10:= temp;
  #L3cebb4.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.paddingRightSystemWindowInsets` @type ^`boolean` := v10 @kind boolean;
  #L3cebb8.  v10:= `@@com.google.android.material.R$styleable.BottomSheetBehavior_Layout_paddingTopSystemWindowInsets` @type ^`int`;
  #L3cebbc.  call temp:= `getBoolean`(v5, v10, v1) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3cebc2.  v10:= temp;
  #L3cebc4.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.paddingTopSystemWindowInsets` @type ^`boolean` := v10 @kind boolean;
  #L3cebc8.  call `recycle`(v5) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L3cebce.  call temp:= `get`(v9) @signature `Landroid/view/ViewConfiguration;.get:(Landroid/content/Context;)Landroid/view/ViewConfiguration;` @kind static;
  #L3cebd4.  v9:= temp @kind object;
  #L3cebd6.  call temp:= `getScaledMaximumFlingVelocity`(v9) @signature `Landroid/view/ViewConfiguration;.getScaledMaximumFlingVelocity:()I` @kind virtual;
  #L3cebdc.  v9:= temp;
  #L3cebde.  v9:= (`float`) v9 @kind i2f;
  #L3cebe0.  v8.`com.google.android.material.bottomsheet.BottomSheetBehavior.maximumVelocity` @type ^`float` := v9;
  #L3cebe4.  return @kind void;
}
procedure `com.google.android.material.shape.MaterialShapeDrawable` `access$000`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.access$000:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;)Lcom/google/android/material/shape/MaterialShapeDrawable;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3ce6a0.  v0:= v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.materialShapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L3ce6a4.  return v0 @kind object;
}
procedure `boolean` `access$1000`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.access$1000:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cdf98.  v0:= v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` @kind boolean;
  #L3cdf9c.  return v0;
}
procedure `int` `access$102`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind object, `int` v1 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.access$102:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3ce724.  v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.insetTop` @type ^`int` := v1;
  #L3ce728.  return v1;
}
procedure `int` `access$1100`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.access$1100:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3ce73c.  v0:= v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeight` @type ^`int`;
  #L3ce740.  return v0;
}
procedure `boolean` `access$1200`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.access$1200:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cdfb0.  v0:= v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.skipCollapsed` @type ^`boolean` @kind boolean;
  #L3cdfb4.  return v0;
}
procedure `boolean` `access$200`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.access$200:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cdfc8.  v0:= v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.paddingBottomSystemWindowInsets` @type ^`boolean` @kind boolean;
  #L3cdfcc.  return v0;
}
procedure `int` `access$300`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.access$300:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3ce754.  v0:= v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.insetBottom` @type ^`int`;
  #L3ce758.  return v0;
}
procedure `int` `access$302`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind object, `int` v1 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.access$302:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3ce76c.  v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.insetBottom` @type ^`int` := v1;
  #L3ce770.  return v1;
}
procedure `boolean` `access$400`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.access$400:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cdfe0.  v0:= v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.paddingLeftSystemWindowInsets` @type ^`boolean` @kind boolean;
  #L3cdfe4.  return v0;
}
procedure `boolean` `access$500`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.access$500:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cdff8.  v0:= v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.paddingRightSystemWindowInsets` @type ^`boolean` @kind boolean;
  #L3cdffc.  return v0;
}
procedure `int` `access$602`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind object, `int` v1 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.access$602:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3ce784.  v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.gestureInsetBottom` @type ^`int` := v1;
  #L3ce788.  return v1;
}
procedure `void` `access$700`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind object, `boolean` v1 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.access$700:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;Z)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cebf8.  call `updatePeekHeight`(v0, v1) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.updatePeekHeight:(Z)V` @kind direct;
  #L3cebfe.  return @kind void;
}
procedure `boolean` `access$900`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.access$900:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3ce010.  v0:= v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.draggable` @type ^`boolean` @kind boolean;
  #L3ce014.  return v0;
}
procedure `int` `addAccessibilityActionForState`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `android.view.View` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.addAccessibilityActionForState:(Landroid/view/View;II)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ce79c.  call temp:= `getResources`(v2) @signature `Landroid/view/View;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3ce7a2.  v0:= temp @kind object;
  #L3ce7a4.  call temp:= `getString`(v0, v3) @signature `Landroid/content/res/Resources;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L3ce7aa.  v3:= temp @kind object;
  #L3ce7ac.  call temp:= `createAccessibilityViewCommandForState`(v1, v4) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.createAccessibilityViewCommandForState:(I)Landroidx/core/view/accessibility/AccessibilityViewCommand;` @kind direct;
  #L3ce7b2.  v4:= temp @kind object;
  #L3ce7b4.  call temp:= `addAccessibilityAction`(v2, v3, v4) @signature `Landroidx/core/view/ViewCompat;.addAccessibilityAction:(Landroid/view/View;Ljava/lang/CharSequence;Landroidx/core/view/accessibility/AccessibilityViewCommand;)I` @kind static;
  #L3ce7ba.  v2:= temp;
  #L3ce7bc.  return v2;
}
procedure `void` `calculateCollapsedOffset`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v2 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.calculateCollapsedOffset:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3cec3c.  call temp:= `calculatePeekHeight`(v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.calculatePeekHeight:()I` @kind direct;
  #L3cec42.  v0:= temp;
  #L3cec44.  v1:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` @kind boolean;
  #L3cec48.  if v1 == 0 then goto L3cec64;
  #L3cec4c.  v1:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.parentHeight` @type ^`int`;
  #L3cec50.  v1:= v1 - v0 @kind int;
  #L3cec52.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContentsOffset` @type ^`int`;
  #L3cec56.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3cec5c.  v0:= temp;
  #L3cec5e.  v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int` := v0;
  #L3cec62.  goto L3cec6e;
  #L3cec64.  v1:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.parentHeight` @type ^`int`;
  #L3cec68.  v1:= v1 - v0 @kind int;
  #L3cec6a.  v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int` := v1;
  #L3cec6e.  return @kind void;
}
procedure `void` `calculateHalfExpandedOffset`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v3 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.calculateHalfExpandedOffset:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3cec80.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.parentHeight` @type ^`int`;
  #L3cec84.  v0:= (`float`) v0 @kind i2f;
  #L3cec86.  v1:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedRatio` @type ^`float`;
  #L3cec8a.  v2:= 1.0F;
  #L3cec8e.  v2:= v2 - v1 @kind float;
  #L3cec90.  v0:= v0 * v2 @kind float;
  #L3cec94.  v0:= (`int`) v0 @kind f2i;
  #L3cec96.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedOffset` @type ^`int` := v0;
  #L3cec9a.  return @kind void;
}
procedure `int` `calculatePeekHeight`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v3 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.calculatePeekHeight:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ce7d0.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightAuto` @type ^`boolean` @kind boolean;
  #L3ce7d4.  if v0 == 0 then goto L3ce80a;
  #L3ce7d8.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightMin` @type ^`int`;
  #L3ce7dc.  v1:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.parentHeight` @type ^`int`;
  #L3ce7e0.  v2:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.parentWidth` @type ^`int`;
  #L3ce7e4.  v2:= v2 * 9;
  #L3ce7e8.  v2:= v2 / 16;
  #L3ce7ec.  v1:= v1 - v2 @kind int;
  #L3ce7ee.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3ce7f4.  v0:= temp;
  #L3ce7f6.  v1:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.childHeight` @type ^`int`;
  #L3ce7fa.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ce800.  v0:= temp;
  #L3ce802.  v1:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.insetBottom` @type ^`int`;
  #L3ce806.  v0:= v0 + v1 @kind int;
  #L3ce808.  return v0;
  #L3ce80a.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.gestureInsetBottomIgnored` @type ^`boolean` @kind boolean;
  #L3ce80e.  if v0 != 0 then goto L3ce836;
  #L3ce812.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.paddingBottomSystemWindowInsets` @type ^`boolean` @kind boolean;
  #L3ce816.  if v0 != 0 then goto L3ce836;
  #L3ce81a.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.gestureInsetBottom` @type ^`int`;
  #L3ce81e.  if v0 <= 0 then goto L3ce836;
  #L3ce822.  v1:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeight` @type ^`int`;
  #L3ce826.  v2:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightGestureInsetBuffer` @type ^`int`;
  #L3ce82a.  v0:= v0 + v2 @kind int;
  #L3ce82c.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3ce832.  v0:= temp;
  #L3ce834.  return v0;
  #L3ce836.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeight` @type ^`int`;
  #L3ce83a.  v1:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.insetBottom` @type ^`int`;
  #L3ce83e.  v0:= v0 + v1 @kind int;
  #L3ce840.  return v0;
}
procedure `androidx.core.view.accessibility.AccessibilityViewCommand` `createAccessibilityViewCommandForState`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.createAccessibilityViewCommandForState:(I)Landroidx/core/view/accessibility/AccessibilityViewCommand;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3cdf7c.  v0:= new `com.google.android.material.bottomsheet.BottomSheetBehavior$6`;
  #L3cdf80.  call `<init>`(v0, v1, v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior$6;.<init>:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;I)V` @kind direct;
  #L3cdf86.  return v0 @kind object;
}
procedure `void` `createMaterialShapeDrawable`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `boolean` v4 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.createMaterialShapeDrawable:(Landroid/content/Context;Landroid/util/AttributeSet;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3cecac.  v0:= 0I;
  #L3cecae.  call `createMaterialShapeDrawable`(v1, v2, v3, v4, v0) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.createMaterialShapeDrawable:(Landroid/content/Context;Landroid/util/AttributeSet;ZLandroid/content/res/ColorStateList;)V` @kind direct;
  #L3cecb4.  return @kind void;
}
procedure `void` `createMaterialShapeDrawable`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v2 @kind this, `android.content.Context` v3 @kind object, `android.util.AttributeSet` v4 @kind object, `boolean` v5 , `android.content.res.ColorStateList` v6 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.createMaterialShapeDrawable:(Landroid/content/Context;Landroid/util/AttributeSet;ZLandroid/content/res/ColorStateList;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3cecc8.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.shapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L3ceccc.  if v0 == 0 then goto L3ced46;
  #L3cecd0.  v0:= `@@com.google.android.material.R$attr.bottomSheetStyle` @type ^`int`;
  #L3cecd4.  v1:= `@@com.google.android.material.bottomsheet.BottomSheetBehavior.DEF_STYLE_RES` @type ^`int`;
  #L3cecd8.  call temp:= `builder`(v3, v4, v0, v1) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.builder:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;` @kind static;
  #L3cecde.  v4:= temp @kind object;
  #L3cece0.  call temp:= `build`(v4) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;.build:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L3cece6.  v4:= temp @kind object;
  #L3cece8.  v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.shapeAppearanceModelDefault` @type ^`com.google.android.material.shape.ShapeAppearanceModel` := v4 @kind object;
  #L3cecec.  v4:= new `com.google.android.material.shape.MaterialShapeDrawable`;
  #L3cecf0.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.shapeAppearanceModelDefault` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3cecf4.  call `<init>`(v4, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind direct;
  #L3cecfa.  v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.materialShapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` := v4 @kind object;
  #L3cecfe.  call `initializeElevationOverlay`(v4, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.initializeElevationOverlay:(Landroid/content/Context;)V` @kind virtual;
  #L3ced04.  if v5 == 0 then goto L3ced18;
  #L3ced08.  if v6 == 0 then goto L3ced18;
  #L3ced0c.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.materialShapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L3ced10.  call `setFillColor`(v3, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3ced16.  goto L3ced46;
  #L3ced18.  v4:= new `android.util.TypedValue`;
  #L3ced1c.  call `<init>`(v4) @signature `Landroid/util/TypedValue;.<init>:()V` @kind direct;
  #L3ced22.  call temp:= `getTheme`(v3) @signature `Landroid/content/Context;.getTheme:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L3ced28.  v3:= temp @kind object;
  #L3ced2a.  v5:= 16842801I;
  #L3ced30.  v6:= 1I;
  #L3ced32.  call temp:= `resolveAttribute`(v3, v5, v4, v6) @signature `Landroid/content/res/Resources$Theme;.resolveAttribute:(ILandroid/util/TypedValue;Z)Z` @kind virtual;
  #L3ced38.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.materialShapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L3ced3c.  v4:= v4.`android.util.TypedValue.data` @type ^`int`;
  #L3ced40.  call `setTint`(v3, v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTint:(I)V` @kind virtual;
  #L3ced46.  return @kind void;
}
procedure `void` `createShapeValueAnimator`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v3 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.createShapeValueAnimator:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ced58.  v0:= 2I;
  #L3ced5a.  v0:= new `float`[v0];
  #L3ced5e.  goto L3ced90;
  #L3ced64.  call temp:= `ofFloat`(v0) @signature `Landroid/animation/ValueAnimator;.ofFloat:([F)Landroid/animation/ValueAnimator;` @kind static;
  #L3ced6a.  v0:= temp @kind object;
  #L3ced6c.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.interpolatorAnimator` @type ^`android.animation.ValueAnimator` := v0 @kind object;
  #L3ced70.  v1:= 500L;
  #L3ced74.  call temp:= `setDuration`(v0, v1) @signature `Landroid/animation/ValueAnimator;.setDuration:(J)Landroid/animation/ValueAnimator;` @kind virtual;
  #L3ced7a.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.interpolatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L3ced7e.  v1:= new `com.google.android.material.bottomsheet.BottomSheetBehavior$3`;
  #L3ced82.  call `<init>`(v1, v3) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior$3;.<init>:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;)V` @kind direct;
  #L3ced88.  call `addUpdateListener`(v0, v1) @signature `Landroid/animation/ValueAnimator;.addUpdateListener:(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V` @kind virtual;
  #L3ced8e.  return @kind void;
  #L3ced90.  v0:= (0I, 1065353216I) @kind object;
  #L3ced9f.  goto L3ced64;
}
procedure `com.google.android.material.bottomsheet.BottomSheetBehavior` `from`(`android.view.View` v1 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.from:(Landroid/view/View;)Lcom/google/android/material/bottomsheet/BottomSheetBehavior;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ce644.  call temp:= `getLayoutParams`(v1) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L3ce64a.  v1:= temp @kind object;
  #L3ce64c.  v0:= instanceof @variable v1 @type ^`androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams` @kind boolean;
  #L3ce650.  if v0 == 0 then goto L3ce67e;
  #L3ce654.  v1:= (`androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams`) v1 @kind object;
  #L3ce658.  call temp:= `getBehavior`(v1) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$LayoutParams;.getBehavior:()Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;` @kind virtual;
  #L3ce65e.  v1:= temp @kind object;
  #L3ce660.  v0:= instanceof @variable v1 @type ^`com.google.android.material.bottomsheet.BottomSheetBehavior` @kind boolean;
  #L3ce664.  if v0 == 0 then goto L3ce66e;
  #L3ce668.  v1:= (`com.google.android.material.bottomsheet.BottomSheetBehavior`) v1 @kind object;
  #L3ce66c.  return v1 @kind object;
  #L3ce66e.  v1:= new `java.lang.IllegalArgumentException`;
  #L3ce672.  v0:= "The view is not associated with BottomSheetBehavior" @kind object;
  #L3ce676.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ce67c.  throw v1;
  #L3ce67e.  v1:= new `java.lang.IllegalArgumentException`;
  #L3ce682.  v0:= "The view is not a child of CoordinatorLayout" @kind object;
  #L3ce686.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ce68c.  throw v1;
}
procedure `float` `getYVelocity`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v3 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getYVelocity:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ce6e8.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.velocityTracker` @type ^`android.view.VelocityTracker` @kind object;
  #L3ce6ec.  if v0 != 0 then goto L3ce6f4;
  #L3ce6f0.  v0:= 0I;
  #L3ce6f2.  return v0;
  #L3ce6f4.  v1:= 1000I;
  #L3ce6f8.  v2:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.maximumVelocity` @type ^`float`;
  #L3ce6fc.  call `computeCurrentVelocity`(v0, v1, v2) @signature `Landroid/view/VelocityTracker;.computeCurrentVelocity:(IF)V` @kind virtual;
  #L3ce702.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.velocityTracker` @type ^`android.view.VelocityTracker` @kind object;
  #L3ce706.  v1:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.activePointerId` @type ^`int`;
  #L3ce70a.  call temp:= `getYVelocity`(v0, v1) @signature `Landroid/view/VelocityTracker;.getYVelocity:(I)F` @kind virtual;
  #L3ce710.  v0:= temp;
  #L3ce712.  return v0;
}
procedure `void` `replaceAccessibilityActionForState`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `android.view.View` v2 @kind object, `androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat` v3 @kind object, `int` v4 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.replaceAccessibilityActionForState:(Landroid/view/View;Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3cf1dc.  call temp:= `createAccessibilityViewCommandForState`(v1, v4) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.createAccessibilityViewCommandForState:(I)Landroidx/core/view/accessibility/AccessibilityViewCommand;` @kind direct;
  #L3cf1e2.  v4:= temp @kind object;
  #L3cf1e4.  v0:= 0I;
  #L3cf1e6.  call `replaceAccessibilityAction`(v2, v3, v0, v4) @signature `Landroidx/core/view/ViewCompat;.replaceAccessibilityAction:(Landroid/view/View;Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;Ljava/lang/CharSequence;Landroidx/core/view/accessibility/AccessibilityViewCommand;)V` @kind static;
  #L3cf1ec.  return @kind void;
}
procedure `void` `reset`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.reset:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3cf200.  v0:= -1I;
  #L3cf202.  v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.activePointerId` @type ^`int` := v0;
  #L3cf206.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.velocityTracker` @type ^`android.view.VelocityTracker` @kind object;
  #L3cf20a.  if v0 == 0 then goto L3cf21a;
  #L3cf20e.  call `recycle`(v0) @signature `Landroid/view/VelocityTracker;.recycle:()V` @kind virtual;
  #L3cf214.  v0:= 0I;
  #L3cf216.  v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.velocityTracker` @type ^`android.view.VelocityTracker` := v0 @kind object;
  #L3cf21a.  return @kind void;
}
procedure `void` `restoreOptionalState`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v3 @kind this, `com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState` v4 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.restoreOptionalState:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior$SavedState;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3cf22c.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.saveFlags` @type ^`int`;
  #L3cf230.  if v0 != 0 then goto L3cf236;
  #L3cf234.  return @kind void;
  #L3cf236.  v1:= -1I;
  #L3cf238.  if v0 == v1 then goto L3cf244;
  #L3cf23c.  v2:= 1I;
  #L3cf23e.  v0:= v0 ^& v2 @kind int;
  #L3cf240.  if v0 != v2 then goto L3cf24c;
  #L3cf244.  v0:= v4.`com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState.peekHeight` @type ^`int`;
  #L3cf248.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeight` @type ^`int` := v0;
  #L3cf24c.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.saveFlags` @type ^`int`;
  #L3cf250.  if v0 == v1 then goto L3cf25c;
  #L3cf254.  v2:= 2I;
  #L3cf256.  v0:= v0 ^& v2 @kind int;
  #L3cf258.  if v0 != v2 then goto L3cf264;
  #L3cf25c.  v0:= v4.`com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState.fitToContents` @type ^`boolean` @kind boolean;
  #L3cf260.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` := v0 @kind boolean;
  #L3cf264.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.saveFlags` @type ^`int`;
  #L3cf268.  if v0 == v1 then goto L3cf274;
  #L3cf26c.  v2:= 4I;
  #L3cf26e.  v0:= v0 ^& v2 @kind int;
  #L3cf270.  if v0 != v2 then goto L3cf27c;
  #L3cf274.  v0:= v4.`com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState.hideable` @type ^`boolean` @kind boolean;
  #L3cf278.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.hideable` @type ^`boolean` := v0 @kind boolean;
  #L3cf27c.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.saveFlags` @type ^`int`;
  #L3cf280.  if v0 == v1 then goto L3cf28e;
  #L3cf284.  v1:= 8I;
  #L3cf288.  v0:= v0 ^& v1 @kind int;
  #L3cf28a.  if v0 != v1 then goto L3cf296;
  #L3cf28e.  v4:= v4.`com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState.skipCollapsed` @type ^`boolean` @kind boolean;
  #L3cf292.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.skipCollapsed` @type ^`boolean` := v4 @kind boolean;
  #L3cf296.  return @kind void;
}
procedure `void` `setWindowInsetsListener`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v2 @kind this, `android.view.View` v3 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setWindowInsetsListener:(Landroid/view/View;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3cf5e0.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3cf5e4.  v1:= 29I;
  #L3cf5e8.  if v0 < v1 then goto L3cf604;
  #L3cf5ec.  call temp:= `isGestureInsetBottomIgnored`(v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.isGestureInsetBottomIgnored:()Z` @kind virtual;
  #L3cf5f2.  v0:= temp;
  #L3cf5f4.  if v0 != 0 then goto L3cf604;
  #L3cf5f8.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightAuto` @type ^`boolean` @kind boolean;
  #L3cf5fc.  if v0 != 0 then goto L3cf604;
  #L3cf600.  v0:= 1I;
  #L3cf602.  goto L3cf606;
  #L3cf604.  v0:= 0I;
  #L3cf606.  v1:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.paddingBottomSystemWindowInsets` @type ^`boolean` @kind boolean;
  #L3cf60a.  if v1 != 0 then goto L3cf624;
  #L3cf60e.  v1:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.paddingLeftSystemWindowInsets` @type ^`boolean` @kind boolean;
  #L3cf612.  if v1 != 0 then goto L3cf624;
  #L3cf616.  v1:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.paddingRightSystemWindowInsets` @type ^`boolean` @kind boolean;
  #L3cf61a.  if v1 != 0 then goto L3cf624;
  #L3cf61e.  if v0 != 0 then goto L3cf624;
  #L3cf622.  return @kind void;
  #L3cf624.  v1:= new `com.google.android.material.bottomsheet.BottomSheetBehavior$4`;
  #L3cf628.  call `<init>`(v1, v2, v0) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior$4;.<init>:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;Z)V` @kind direct;
  #L3cf62e.  call `doOnApplyWindowInsets`(v3, v1) @signature `Lcom/google/android/material/internal/ViewUtils;.doOnApplyWindowInsets:(Landroid/view/View;Lcom/google/android/material/internal/ViewUtils$OnApplyWindowInsetsListener;)V` @kind static;
  #L3cf634.  return @kind void;
}
procedure `void` `settleToStatePendingLayout`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.settleToStatePendingLayout:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3cf6e4.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3cf6e8.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3cf6ee.  v0:= temp @kind object;
  #L3cf6f0.  v0:= (`android.view.View`) v0 @kind object;
  #L3cf6f4.  if v0 != 0 then goto L3cf6fa;
  #L3cf6f8.  return @kind void;
  #L3cf6fa.  call temp:= `getParent`(v0) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L3cf700.  v1:= temp @kind object;
  #L3cf702.  if v1 == 0 then goto L3cf730;
  #L3cf706.  call temp:= `isLayoutRequested`(v1) @signature `Landroid/view/ViewParent;.isLayoutRequested:()Z` @kind interface;
  #L3cf70c.  v1:= temp;
  #L3cf70e.  if v1 == 0 then goto L3cf730;
  #L3cf712.  call temp:= `isAttachedToWindow`(v0) @signature `Landroidx/core/view/ViewCompat;.isAttachedToWindow:(Landroid/view/View;)Z` @kind static;
  #L3cf718.  v1:= temp;
  #L3cf71a.  if v1 == 0 then goto L3cf730;
  #L3cf71e.  v1:= new `com.google.android.material.bottomsheet.BottomSheetBehavior$2`;
  #L3cf722.  call `<init>`(v1, v2, v0, v3) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior$2;.<init>:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;Landroid/view/View;I)V` @kind direct;
  #L3cf728.  call temp:= `post`(v0, v1) @signature `Landroid/view/View;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L3cf72e.  goto L3cf736;
  #L3cf730.  call `settleToState`(v2, v0, v3) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.settleToState:(Landroid/view/View;I)V` @kind virtual;
  #L3cf736.  return @kind void;
}
procedure `void` `updateAccessibilityActions`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v5 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.updateAccessibilityActions:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3cf7fc.  v0:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3cf800.  if v0 != 0 then goto L3cf806;
  #L3cf804.  return @kind void;
  #L3cf806.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3cf80c.  v0:= temp @kind object;
  #L3cf80e.  v0:= (`android.view.View`) v0 @kind object;
  #L3cf812.  if v0 != 0 then goto L3cf818;
  #L3cf816.  return @kind void;
  #L3cf818.  v1:= 524288I;
  #L3cf81c.  call `removeAccessibilityAction`(v0, v1) @signature `Landroidx/core/view/ViewCompat;.removeAccessibilityAction:(Landroid/view/View;I)V` @kind static;
  #L3cf822.  v1:= 262144I;
  #L3cf826.  call `removeAccessibilityAction`(v0, v1) @signature `Landroidx/core/view/ViewCompat;.removeAccessibilityAction:(Landroid/view/View;I)V` @kind static;
  #L3cf82c.  v1:= 1048576I;
  #L3cf830.  call `removeAccessibilityAction`(v0, v1) @signature `Landroidx/core/view/ViewCompat;.removeAccessibilityAction:(Landroid/view/View;I)V` @kind static;
  #L3cf836.  v1:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.expandHalfwayActionId` @type ^`int`;
  #L3cf83a.  v2:= -1I;
  #L3cf83c.  if v1 == v2 then goto L3cf846;
  #L3cf840.  call `removeAccessibilityAction`(v0, v1) @signature `Landroidx/core/view/ViewCompat;.removeAccessibilityAction:(Landroid/view/View;I)V` @kind static;
  #L3cf846.  v1:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` @kind boolean;
  #L3cf84a.  v2:= 6I;
  #L3cf84c.  if v1 != 0 then goto L3cf868;
  #L3cf850.  v1:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3cf854.  if v1 == v2 then goto L3cf868;
  #L3cf858.  v1:= `@@com.google.android.material.R$string.bottomsheet_action_expand_halfway` @type ^`int`;
  #L3cf85c.  call temp:= `addAccessibilityActionForState`(v5, v0, v1, v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.addAccessibilityActionForState:(Landroid/view/View;II)I` @kind direct;
  #L3cf862.  v1:= temp;
  #L3cf864.  v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.expandHalfwayActionId` @type ^`int` := v1;
  #L3cf868.  v1:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.hideable` @type ^`boolean` @kind boolean;
  #L3cf86c.  if v1 == 0 then goto L3cf884;
  #L3cf870.  v1:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3cf874.  v3:= 5I;
  #L3cf876.  if v1 == v3 then goto L3cf884;
  #L3cf87a.  v1:= `@@androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.ACTION_DISMISS` @type ^`androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat` @kind object;
  #L3cf87e.  call `replaceAccessibilityActionForState`(v5, v0, v1, v3) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.replaceAccessibilityActionForState:(Landroid/view/View;Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;I)V` @kind direct;
  #L3cf884.  v1:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3cf888.  v3:= 4I;
  #L3cf88a.  v4:= 3I;
  #L3cf88c.  if v1 == v4 then goto L3cf8c6;
  #L3cf890.  if v1 == v3 then goto L3cf8b0;
  #L3cf894.  if v1 == v2 then goto L3cf89a;
  #L3cf898.  goto L3cf8da;
  #L3cf89a.  v1:= `@@androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.ACTION_COLLAPSE` @type ^`androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat` @kind object;
  #L3cf89e.  call `replaceAccessibilityActionForState`(v5, v0, v1, v3) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.replaceAccessibilityActionForState:(Landroid/view/View;Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;I)V` @kind direct;
  #L3cf8a4.  v1:= `@@androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.ACTION_EXPAND` @type ^`androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat` @kind object;
  #L3cf8a8.  call `replaceAccessibilityActionForState`(v5, v0, v1, v4) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.replaceAccessibilityActionForState:(Landroid/view/View;Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;I)V` @kind direct;
  #L3cf8ae.  goto L3cf8da;
  #L3cf8b0.  v1:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` @kind boolean;
  #L3cf8b4.  if v1 == 0 then goto L3cf8ba;
  #L3cf8b8.  v2:= 3I;
  #L3cf8ba.  v1:= `@@androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.ACTION_EXPAND` @type ^`androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat` @kind object;
  #L3cf8be.  call `replaceAccessibilityActionForState`(v5, v0, v1, v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.replaceAccessibilityActionForState:(Landroid/view/View;Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;I)V` @kind direct;
  #L3cf8c4.  goto L3cf8da;
  #L3cf8c6.  v1:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` @kind boolean;
  #L3cf8ca.  if v1 == 0 then goto L3cf8d0;
  #L3cf8ce.  v2:= 4I;
  #L3cf8d0.  v1:= `@@androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.ACTION_COLLAPSE` @type ^`androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat` @kind object;
  #L3cf8d4.  call `replaceAccessibilityActionForState`(v5, v0, v1, v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.replaceAccessibilityActionForState:(Landroid/view/View;Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;I)V` @kind direct;
  #L3cf8da.  return @kind void;
}
procedure `void` `updateDrawableForTargetState`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v5 @kind this, `int` v6 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.updateDrawableForTargetState:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3cf8ec.  v0:= 2I;
  #L3cf8ee.  if v6 != v0 then goto L3cf8f4;
  #L3cf8f2.  return @kind void;
  #L3cf8f4.  v1:= 3I;
  #L3cf8f6.  v2:= 1I;
  #L3cf8f8.  v3:= 0I;
  #L3cf8fa.  if v6 != v1 then goto L3cf902;
  #L3cf8fe.  v6:= 1I;
  #L3cf900.  goto L3cf904;
  #L3cf902.  v6:= 0I;
  #L3cf904.  v1:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.isShapeExpanded` @type ^`boolean` @kind boolean;
  #L3cf908.  if v1 == v6 then goto L3cf96a;
  #L3cf90c.  v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.isShapeExpanded` @type ^`boolean` := v6 @kind boolean;
  #L3cf910.  v1:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.materialShapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L3cf914.  if v1 == 0 then goto L3cf96a;
  #L3cf918.  v1:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.interpolatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L3cf91c.  if v1 == 0 then goto L3cf96a;
  #L3cf920.  call temp:= `isRunning`(v1) @signature `Landroid/animation/ValueAnimator;.isRunning:()Z` @kind virtual;
  #L3cf926.  v1:= temp;
  #L3cf928.  if v1 == 0 then goto L3cf938;
  #L3cf92c.  v6:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.interpolatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L3cf930.  call `reverse`(v6) @signature `Landroid/animation/ValueAnimator;.reverse:()V` @kind virtual;
  #L3cf936.  goto L3cf96a;
  #L3cf938.  v1:= 1.0F;
  #L3cf93c.  if v6 == 0 then goto L3cf944;
  #L3cf940.  v6:= 0I;
  #L3cf942.  goto L3cf948;
  #L3cf944.  v6:= 1.0F;
  #L3cf948.  v1:= v1 - v6 @kind float;
  #L3cf94a.  v4:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.interpolatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L3cf94e.  v0:= new `float`[v0];
  #L3cf952.  v0[v3]:= v1;
  #L3cf956.  v0[v2]:= v6;
  #L3cf95a.  call `setFloatValues`(v4, v0) @signature `Landroid/animation/ValueAnimator;.setFloatValues:([F)V` @kind virtual;
  #L3cf960.  v6:= v5.`com.google.android.material.bottomsheet.BottomSheetBehavior.interpolatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L3cf964.  call `start`(v6) @signature `Landroid/animation/ValueAnimator;.start:()V` @kind virtual;
  #L3cf96a.  return @kind void;
}
procedure `void` `updateImportantForAccessibility`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v7 @kind this, `boolean` v8 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.updateImportantForAccessibility:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3cf97c.  v0:= v7.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3cf980.  if v0 != 0 then goto L3cf986;
  #L3cf984.  return @kind void;
  #L3cf986.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3cf98c.  v0:= temp @kind object;
  #L3cf98e.  v0:= (`android.view.View`) v0 @kind object;
  #L3cf992.  call temp:= `getParent`(v0) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L3cf998.  v0:= temp @kind object;
  #L3cf99a.  v1:= instanceof @variable v0 @type ^`androidx.coordinatorlayout.widget.CoordinatorLayout` @kind boolean;
  #L3cf99e.  if v1 != 0 then goto L3cf9a4;
  #L3cf9a2.  return @kind void;
  #L3cf9a4.  v0:= (`androidx.coordinatorlayout.widget.CoordinatorLayout`) v0 @kind object;
  #L3cf9a8.  call temp:= `getChildCount`(v0) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L3cf9ae.  v1:= temp;
  #L3cf9b0.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3cf9b4.  v3:= 16I;
  #L3cf9b8.  if v2 < v3 then goto L3cf9da;
  #L3cf9bc.  if v8 == 0 then goto L3cf9da;
  #L3cf9c0.  v2:= v7.`com.google.android.material.bottomsheet.BottomSheetBehavior.importantForAccessibilityMap` @type ^`java.util.Map` @kind object;
  #L3cf9c4.  if v2 != 0 then goto L3cf9d8;
  #L3cf9c8.  v2:= new `java.util.HashMap`;
  #L3cf9cc.  call `<init>`(v2, v1) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L3cf9d2.  v7.`com.google.android.material.bottomsheet.BottomSheetBehavior.importantForAccessibilityMap` @type ^`java.util.Map` := v2 @kind object;
  #L3cf9d6.  goto L3cf9da;
  #L3cf9d8.  return @kind void;
  #L3cf9da.  v2:= 0I;
  #L3cf9dc.  if v2 >= v1 then goto L3cfa72;
  #L3cf9e0.  call temp:= `getChildAt`(v0, v2) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L3cf9e6.  v4:= temp @kind object;
  #L3cf9e8.  v5:= v7.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3cf9ec.  call temp:= `get`(v5) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3cf9f2.  v5:= temp @kind object;
  #L3cf9f4.  if v4 != v5 then goto L3cf9fa;
  #L3cf9f8.  goto L3cfa6c;
  #L3cf9fa.  if v8 == 0 then goto L3cfa32;
  #L3cf9fe.  v5:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3cfa02.  if v5 < v3 then goto L3cfa20;
  #L3cfa06.  v5:= v7.`com.google.android.material.bottomsheet.BottomSheetBehavior.importantForAccessibilityMap` @type ^`java.util.Map` @kind object;
  #L3cfa0a.  call temp:= `getImportantForAccessibility`(v4) @signature `Landroid/view/View;.getImportantForAccessibility:()I` @kind virtual;
  #L3cfa10.  v6:= temp;
  #L3cfa12.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3cfa18.  v6:= temp @kind object;
  #L3cfa1a.  call temp:= `put`(v5, v4, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3cfa20.  v5:= v7.`com.google.android.material.bottomsheet.BottomSheetBehavior.updateImportantForAccessibilityOnSiblings` @type ^`boolean` @kind boolean;
  #L3cfa24.  if v5 == 0 then goto L3cfa6c;
  #L3cfa28.  v5:= 4I;
  #L3cfa2a.  call `setImportantForAccessibility`(v4, v5) @signature `Landroidx/core/view/ViewCompat;.setImportantForAccessibility:(Landroid/view/View;I)V` @kind static;
  #L3cfa30.  goto L3cfa6c;
  #L3cfa32.  v5:= v7.`com.google.android.material.bottomsheet.BottomSheetBehavior.updateImportantForAccessibilityOnSiblings` @type ^`boolean` @kind boolean;
  #L3cfa36.  if v5 == 0 then goto L3cfa6c;
  #L3cfa3a.  v5:= v7.`com.google.android.material.bottomsheet.BottomSheetBehavior.importantForAccessibilityMap` @type ^`java.util.Map` @kind object;
  #L3cfa3e.  if v5 == 0 then goto L3cfa6c;
  #L3cfa42.  call temp:= `containsKey`(v5, v4) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L3cfa48.  v5:= temp;
  #L3cfa4a.  if v5 == 0 then goto L3cfa6c;
  #L3cfa4e.  v5:= v7.`com.google.android.material.bottomsheet.BottomSheetBehavior.importantForAccessibilityMap` @type ^`java.util.Map` @kind object;
  #L3cfa52.  call temp:= `get`(v5, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3cfa58.  v5:= temp @kind object;
  #L3cfa5a.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L3cfa5e.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3cfa64.  v5:= temp;
  #L3cfa66.  call `setImportantForAccessibility`(v4, v5) @signature `Landroidx/core/view/ViewCompat;.setImportantForAccessibility:(Landroid/view/View;I)V` @kind static;
  #L3cfa6c.  v2:= v2 + 1;
  #L3cfa70.  goto L3cf9dc;
  #L3cfa72.  if v8 != 0 then goto L3cfa7e;
  #L3cfa76.  v8:= 0I;
  #L3cfa78.  v7.`com.google.android.material.bottomsheet.BottomSheetBehavior.importantForAccessibilityMap` @type ^`java.util.Map` := v8 @kind object;
  #L3cfa7c.  goto L3cfaa0;
  #L3cfa7e.  v8:= v7.`com.google.android.material.bottomsheet.BottomSheetBehavior.updateImportantForAccessibilityOnSiblings` @type ^`boolean` @kind boolean;
  #L3cfa82.  if v8 == 0 then goto L3cfaa0;
  #L3cfa86.  v8:= v7.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3cfa8a.  call temp:= `get`(v8) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3cfa90.  v8:= temp @kind object;
  #L3cfa92.  v8:= (`android.view.View`) v8 @kind object;
  #L3cfa96.  v0:= 8I;
  #L3cfa9a.  call `sendAccessibilityEvent`(v8, v0) @signature `Landroid/view/View;.sendAccessibilityEvent:(I)V` @kind virtual;
  #L3cfaa0.  return @kind void;
}
procedure `void` `updatePeekHeight`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v2 @kind this, `boolean` v3 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.updatePeekHeight:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3cfab4.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3cfab8.  if v0 == 0 then goto L3cfaf6;
  #L3cfabc.  call `calculateCollapsedOffset`(v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.calculateCollapsedOffset:()V` @kind direct;
  #L3cfac2.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3cfac6.  v1:= 4I;
  #L3cfac8.  if v0 != v1 then goto L3cfaf6;
  #L3cfacc.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3cfad0.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3cfad6.  v0:= temp @kind object;
  #L3cfad8.  v0:= (`android.view.View`) v0 @kind object;
  #L3cfadc.  if v0 == 0 then goto L3cfaf6;
  #L3cfae0.  if v3 == 0 then goto L3cfaf0;
  #L3cfae4.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3cfae8.  call `settleToStatePendingLayout`(v2, v3) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.settleToStatePendingLayout:(I)V` @kind direct;
  #L3cfaee.  goto L3cfaf6;
  #L3cfaf0.  call `requestLayout`(v0) @signature `Landroid/view/View;.requestLayout:()V` @kind virtual;
  #L3cfaf6.  return @kind void;
}
procedure `void` `addBottomSheetCallback`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback` v2 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.addBottomSheetCallback:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior$BottomSheetCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cec10.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks` @type ^`java.util.ArrayList` @kind object;
  #L3cec14.  call temp:= `contains`(v0, v2) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cec1a.  v0:= temp;
  #L3cec1c.  if v0 != 0 then goto L3cec2a;
  #L3cec20.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks` @type ^`java.util.ArrayList` @kind object;
  #L3cec24.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cec2a.  return @kind void;
}
procedure `void` `disableShapeAnimations`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.disableShapeAnimations:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cedb0.  v0:= 0I;
  #L3cedb2.  v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.interpolatorAnimator` @type ^`android.animation.ValueAnimator` := v0 @kind object;
  #L3cedb6.  return @kind void;
}
procedure `void` `dispatchOnSlide`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.dispatchOnSlide:(I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3cedc8.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3cedcc.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3cedd2.  v0:= temp @kind object;
  #L3cedd4.  v0:= (`android.view.View`) v0 @kind object;
  #L3cedd8.  if v0 == 0 then goto L3cee5c;
  #L3ceddc.  v1:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks` @type ^`java.util.ArrayList` @kind object;
  #L3cede0.  call temp:= `isEmpty`(v1) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L3cede6.  v1:= temp;
  #L3cede8.  if v1 != 0 then goto L3cee5c;
  #L3cedec.  v1:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3cedf0.  if v4 > v1 then goto L3cee1a;
  #L3cedf4.  call temp:= `getExpandedOffset`(v3) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getExpandedOffset:()I` @kind virtual;
  #L3cedfa.  v2:= temp;
  #L3cedfc.  if v1 != v2 then goto L3cee02;
  #L3cee00.  goto L3cee1a;
  #L3cee02.  v1:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3cee06.  v4:= v1 - v4 @kind int;
  #L3cee0a.  v4:= (`float`) v4 @kind i2f;
  #L3cee0c.  call temp:= `getExpandedOffset`(v3) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getExpandedOffset:()I` @kind virtual;
  #L3cee12.  v2:= temp;
  #L3cee14.  v1:= v1 - v2 @kind int;
  #L3cee16.  v1:= (`float`) v1 @kind i2f;
  #L3cee18.  goto L3cee2c;
  #L3cee1a.  v1:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3cee1e.  v4:= v1 - v4 @kind int;
  #L3cee22.  v4:= (`float`) v4 @kind i2f;
  #L3cee24.  v2:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.parentHeight` @type ^`int`;
  #L3cee28.  v2:= v2 - v1 @kind int;
  #L3cee2a.  v1:= (`float`) v2 @kind i2f;
  #L3cee2c.  v4:= v4 / v1 @kind float;
  #L3cee2e.  v1:= 0I;
  #L3cee30.  v2:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks` @type ^`java.util.ArrayList` @kind object;
  #L3cee34.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L3cee3a.  v2:= temp;
  #L3cee3c.  if v1 >= v2 then goto L3cee5c;
  #L3cee40.  v2:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks` @type ^`java.util.ArrayList` @kind object;
  #L3cee44.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3cee4a.  v2:= temp @kind object;
  #L3cee4c.  v2:= (`com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback`) v2 @kind object;
  #L3cee50.  call `onSlide`(v2, v0, v4) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior$BottomSheetCallback;.onSlide:(Landroid/view/View;F)V` @kind virtual;
  #L3cee56.  v1:= v1 + 1;
  #L3cee5a.  goto L3cee30;
  #L3cee5c.  return @kind void;
}
procedure `android.view.View` `findScrollingChild`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v3 @kind this, `android.view.View` v4 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.findScrollingChild:(Landroid/view/View;)Landroid/view/View;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3cdf24.  call temp:= `isNestedScrollingEnabled`(v4) @signature `Landroidx/core/view/ViewCompat;.isNestedScrollingEnabled:(Landroid/view/View;)Z` @kind static;
  #L3cdf2a.  v0:= temp;
  #L3cdf2c.  if v0 == 0 then goto L3cdf32;
  #L3cdf30.  return v4 @kind object;
  #L3cdf32.  v0:= instanceof @variable v4 @type ^`android.view.ViewGroup` @kind boolean;
  #L3cdf36.  if v0 == 0 then goto L3cdf68;
  #L3cdf3a.  v4:= (`android.view.ViewGroup`) v4 @kind object;
  #L3cdf3e.  v0:= 0I;
  #L3cdf40.  call temp:= `getChildCount`(v4) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L3cdf46.  v1:= temp;
  #L3cdf48.  if v0 >= v1 then goto L3cdf68;
  #L3cdf4c.  call temp:= `getChildAt`(v4, v0) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L3cdf52.  v2:= temp @kind object;
  #L3cdf54.  call temp:= `findScrollingChild`(v3, v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.findScrollingChild:(Landroid/view/View;)Landroid/view/View;` @kind virtual;
  #L3cdf5a.  v2:= temp @kind object;
  #L3cdf5c.  if v2 == 0 then goto L3cdf62;
  #L3cdf60.  return v2 @kind object;
  #L3cdf62.  v0:= v0 + 1;
  #L3cdf66.  goto L3cdf48;
  #L3cdf68.  v4:= 0I;
  #L3cdf6a.  return v4 @kind object;
}
procedure `int` `getExpandedOffset`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v2 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getExpandedOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ce854.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` @kind boolean;
  #L3ce858.  if v0 == 0 then goto L3ce862;
  #L3ce85c.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContentsOffset` @type ^`int`;
  #L3ce860.  goto L3ce87e;
  #L3ce862.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.expandedOffset` @type ^`int`;
  #L3ce866.  v1:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.paddingTopSystemWindowInsets` @type ^`boolean` @kind boolean;
  #L3ce86a.  if v1 == 0 then goto L3ce872;
  #L3ce86e.  v1:= 0I;
  #L3ce870.  goto L3ce876;
  #L3ce872.  v1:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.insetTop` @type ^`int`;
  #L3ce876.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3ce87c.  v0:= temp;
  #L3ce87e.  return v0;
}
procedure `float` `getHalfExpandedRatio`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getHalfExpandedRatio:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce6d0.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedRatio` @type ^`float`;
  #L3ce6d4.  return v0;
}
procedure `com.google.android.material.shape.MaterialShapeDrawable` `getMaterialShapeDrawable`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getMaterialShapeDrawable:()Lcom/google/android/material/shape/MaterialShapeDrawable;` @AccessFlag  {
    temp;
    v0;

  #L3ce6b8.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.materialShapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L3ce6bc.  return v0 @kind object;
}
procedure `int` `getMaxWidth`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getMaxWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce890.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.maxWidth` @type ^`int`;
  #L3ce894.  return v0;
}
procedure `int` `getPeekHeight`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getPeekHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce8a8.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightAuto` @type ^`boolean` @kind boolean;
  #L3ce8ac.  if v0 == 0 then goto L3ce8b4;
  #L3ce8b0.  v0:= -1I;
  #L3ce8b2.  goto L3ce8b8;
  #L3ce8b4.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeight` @type ^`int`;
  #L3ce8b8.  return v0;
}
procedure `int` `getPeekHeightMin`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getPeekHeightMin:()I` @AccessFlag  {
    temp;
    v0;

  #L3ce8cc.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightMin` @type ^`int`;
  #L3ce8d0.  return v0;
}
procedure `int` `getSaveFlags`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getSaveFlags:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce8e4.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.saveFlags` @type ^`int`;
  #L3ce8e8.  return v0;
}
procedure `boolean` `getSkipCollapsed`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getSkipCollapsed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce028.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.skipCollapsed` @type ^`boolean` @kind boolean;
  #L3ce02c.  return v0;
}
procedure `int` `getState`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getState:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce8fc.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3ce900.  return v0;
}
procedure `boolean` `isDraggable`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.isDraggable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce040.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.draggable` @type ^`boolean` @kind boolean;
  #L3ce044.  return v0;
}
procedure `boolean` `isFitToContents`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.isFitToContents:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce058.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` @kind boolean;
  #L3ce05c.  return v0;
}
procedure `boolean` `isGestureInsetBottomIgnored`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.isGestureInsetBottomIgnored:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce070.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.gestureInsetBottomIgnored` @type ^`boolean` @kind boolean;
  #L3ce074.  return v0;
}
procedure `boolean` `isHideable`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.isHideable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce088.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.hideable` @type ^`boolean` @kind boolean;
  #L3ce08c.  return v0;
}
procedure `void` `onAttachedToLayoutParams`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams` v1 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.onAttachedToLayoutParams:(Landroidx/coordinatorlayout/widget/CoordinatorLayout$LayoutParams;)V` @AccessFlag PUBLIC {
    temp;

  #L3cee70.  call `onAttachedToLayoutParams`(v0, v1) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;.onAttachedToLayoutParams:(Landroidx/coordinatorlayout/widget/CoordinatorLayout$LayoutParams;)V` @kind super;
  #L3cee76.  v1:= 0I;
  #L3cee78.  v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` := v1 @kind object;
  #L3cee7c.  v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewDragHelper` @type ^`androidx.customview.widget.ViewDragHelper` := v1 @kind object;
  #L3cee80.  return @kind void;
}
procedure `void` `onDetachedFromLayoutParams`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.onDetachedFromLayoutParams:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cee94.  call `onDetachedFromLayoutParams`(v1) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;.onDetachedFromLayoutParams:()V` @kind super;
  #L3cee9a.  v0:= 0I;
  #L3cee9c.  v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L3ceea0.  v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewDragHelper` @type ^`androidx.customview.widget.ViewDragHelper` := v0 @kind object;
  #L3ceea4.  return @kind void;
}
procedure `boolean` `onInterceptTouchEvent`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v9 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v10 @kind object, `android.view.View` v11 @kind object, `android.view.MotionEvent` v12 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.onInterceptTouchEvent:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3ce0a0.  call temp:= `isShown`(v11) @signature `Landroid/view/View;.isShown:()Z` @kind virtual;
  #L3ce0a6.  v0:= temp;
  #L3ce0a8.  v1:= 0I;
  #L3ce0aa.  v2:= 1I;
  #L3ce0ac.  if v0 == 0 then goto L3ce244;
  #L3ce0b0.  v0:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.draggable` @type ^`boolean` @kind boolean;
  #L3ce0b4.  if v0 != 0 then goto L3ce0bc;
  #L3ce0b8.  goto L3ce244;
  #L3ce0bc.  call temp:= `getActionMasked`(v12) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L3ce0c2.  v0:= temp;
  #L3ce0c4.  if v0 != 0 then goto L3ce0ce;
  #L3ce0c8.  call `reset`(v9) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.reset:()V` @kind direct;
  #L3ce0ce.  v3:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.velocityTracker` @type ^`android.view.VelocityTracker` @kind object;
  #L3ce0d2.  if v3 != 0 then goto L3ce0e2;
  #L3ce0d6.  call temp:= `obtain`() @signature `Landroid/view/VelocityTracker;.obtain:()Landroid/view/VelocityTracker;` @kind static;
  #L3ce0dc.  v3:= temp @kind object;
  #L3ce0de.  v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.velocityTracker` @type ^`android.view.VelocityTracker` := v3 @kind object;
  #L3ce0e2.  v3:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.velocityTracker` @type ^`android.view.VelocityTracker` @kind object;
  #L3ce0e6.  call `addMovement`(v3, v12) @signature `Landroid/view/VelocityTracker;.addMovement:(Landroid/view/MotionEvent;)V` @kind virtual;
  #L3ce0ec.  v3:= 0I;
  #L3ce0ee.  v4:= -1I;
  #L3ce0f0.  v5:= 2I;
  #L3ce0f2.  if v0 == 0 then goto L3ce118;
  #L3ce0f6.  if v0 == v2 then goto L3ce102;
  #L3ce0fa.  v11:= 3I;
  #L3ce0fc.  if v0 == v11 then goto L3ce102;
  #L3ce100.  goto L3ce19e;
  #L3ce102.  v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.touchingScrollingChild` @type ^`boolean` := v1 @kind boolean;
  #L3ce106.  v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.activePointerId` @type ^`int` := v4;
  #L3ce10a.  v11:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.ignoreEvents` @type ^`boolean` @kind boolean;
  #L3ce10e.  if v11 == 0 then goto L3ce19e;
  #L3ce112.  v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.ignoreEvents` @type ^`boolean` := v1 @kind boolean;
  #L3ce116.  return v1;
  #L3ce118.  call temp:= `getX`(v12) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L3ce11e.  v6:= temp;
  #L3ce120.  v6:= (`int`) v6 @kind f2i;
  #L3ce122.  call temp:= `getY`(v12) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L3ce128.  v7:= temp;
  #L3ce12a.  v7:= (`int`) v7 @kind f2i;
  #L3ce12c.  v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.initialY` @type ^`int` := v7;
  #L3ce130.  v7:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3ce134.  if v7 == v5 then goto L3ce17c;
  #L3ce138.  v7:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.nestedScrollingChildRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3ce13c.  if v7 == 0 then goto L3ce14e;
  #L3ce140.  call temp:= `get`(v7) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3ce146.  v7:= temp @kind object;
  #L3ce148.  v7:= (`android.view.View`) v7 @kind object;
  #L3ce14c.  goto L3ce150;
  #L3ce14e.  v7:= v3 @kind object;
  #L3ce150.  if v7 == 0 then goto L3ce17c;
  #L3ce154.  v8:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.initialY` @type ^`int`;
  #L3ce158.  call temp:= `isPointInChildBounds`(v10, v7, v6, v8) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.isPointInChildBounds:(Landroid/view/View;II)Z` @kind virtual;
  #L3ce15e.  v7:= temp;
  #L3ce160.  if v7 == 0 then goto L3ce17c;
  #L3ce164.  call temp:= `getActionIndex`(v12) @signature `Landroid/view/MotionEvent;.getActionIndex:()I` @kind virtual;
  #L3ce16a.  v7:= temp;
  #L3ce16c.  call temp:= `getPointerId`(v12, v7) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L3ce172.  v7:= temp;
  #L3ce174.  v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.activePointerId` @type ^`int` := v7;
  #L3ce178.  v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.touchingScrollingChild` @type ^`boolean` := v2 @kind boolean;
  #L3ce17c.  v7:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.activePointerId` @type ^`int`;
  #L3ce180.  if v7 != v4 then goto L3ce198;
  #L3ce184.  v4:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.initialY` @type ^`int`;
  #L3ce188.  call temp:= `isPointInChildBounds`(v10, v11, v6, v4) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.isPointInChildBounds:(Landroid/view/View;II)Z` @kind virtual;
  #L3ce18e.  v11:= temp;
  #L3ce190.  if v11 != 0 then goto L3ce198;
  #L3ce194.  v11:= 1I;
  #L3ce196.  goto L3ce19a;
  #L3ce198.  v11:= 0I;
  #L3ce19a.  v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.ignoreEvents` @type ^`boolean` := v11 @kind boolean;
  #L3ce19e.  v11:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.ignoreEvents` @type ^`boolean` @kind boolean;
  #L3ce1a2.  if v11 != 0 then goto L3ce1bc;
  #L3ce1a6.  v11:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewDragHelper` @type ^`androidx.customview.widget.ViewDragHelper` @kind object;
  #L3ce1aa.  if v11 == 0 then goto L3ce1bc;
  #L3ce1ae.  call temp:= `shouldInterceptTouchEvent`(v11, v12) @signature `Landroidx/customview/widget/ViewDragHelper;.shouldInterceptTouchEvent:(Landroid/view/MotionEvent;)Z` @kind virtual;
  #L3ce1b4.  v11:= temp;
  #L3ce1b6.  if v11 == 0 then goto L3ce1bc;
  #L3ce1ba.  return v2;
  #L3ce1bc.  v11:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.nestedScrollingChildRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3ce1c0.  if v11 == 0 then goto L3ce1d2;
  #L3ce1c4.  call temp:= `get`(v11) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3ce1ca.  v11:= temp @kind object;
  #L3ce1cc.  v3:= v11 @kind object;
  #L3ce1ce.  v3:= (`android.view.View`) v3 @kind object;
  #L3ce1d2.  if v0 != v5 then goto L3ce242;
  #L3ce1d6.  if v3 == 0 then goto L3ce242;
  #L3ce1da.  v11:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.ignoreEvents` @type ^`boolean` @kind boolean;
  #L3ce1de.  if v11 != 0 then goto L3ce242;
  #L3ce1e2.  v11:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3ce1e6.  if v11 == v2 then goto L3ce242;
  #L3ce1ea.  call temp:= `getX`(v12) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L3ce1f0.  v11:= temp;
  #L3ce1f2.  v11:= (`int`) v11 @kind f2i;
  #L3ce1f4.  call temp:= `getY`(v12) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L3ce1fa.  v0:= temp;
  #L3ce1fc.  v0:= (`int`) v0 @kind f2i;
  #L3ce1fe.  call temp:= `isPointInChildBounds`(v10, v3, v11, v0) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.isPointInChildBounds:(Landroid/view/View;II)Z` @kind virtual;
  #L3ce204.  v10:= temp;
  #L3ce206.  if v10 != 0 then goto L3ce242;
  #L3ce20a.  v10:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewDragHelper` @type ^`androidx.customview.widget.ViewDragHelper` @kind object;
  #L3ce20e.  if v10 == 0 then goto L3ce242;
  #L3ce212.  v10:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.initialY` @type ^`int`;
  #L3ce216.  v10:= (`float`) v10 @kind i2f;
  #L3ce218.  call temp:= `getY`(v12) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L3ce21e.  v11:= temp;
  #L3ce220.  v10:= v10 - v11 @kind float;
  #L3ce222.  call temp:= `abs`(v10) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3ce228.  v10:= temp;
  #L3ce22a.  v11:= v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewDragHelper` @type ^`androidx.customview.widget.ViewDragHelper` @kind object;
  #L3ce22e.  call temp:= `getTouchSlop`(v11) @signature `Landroidx/customview/widget/ViewDragHelper;.getTouchSlop:()I` @kind virtual;
  #L3ce234.  v11:= temp;
  #L3ce236.  v11:= (`float`) v11 @kind i2f;
  #L3ce238.  v10:= fcmpl(v10, v11);
  #L3ce23c.  if v10 <= 0 then goto L3ce242;
  #L3ce240.  v1:= 1I;
  #L3ce242.  return v1;
  #L3ce244.  v9.`com.google.android.material.bottomsheet.BottomSheetBehavior.ignoreEvents` @type ^`boolean` := v2 @kind boolean;
  #L3ce248.  return v1;
}
procedure `boolean` `onLayoutChild`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v6 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v7 @kind object, `android.view.View` v8 @kind object, `int` v9 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.onLayoutChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ce25c.  call temp:= `getFitsSystemWindows`(v7) @signature `Landroidx/core/view/ViewCompat;.getFitsSystemWindows:(Landroid/view/View;)Z` @kind static;
  #L3ce262.  v0:= temp;
  #L3ce264.  v1:= 1I;
  #L3ce266.  if v0 == 0 then goto L3ce27c;
  #L3ce26a.  call temp:= `getFitsSystemWindows`(v8) @signature `Landroidx/core/view/ViewCompat;.getFitsSystemWindows:(Landroid/view/View;)Z` @kind static;
  #L3ce270.  v0:= temp;
  #L3ce272.  if v0 != 0 then goto L3ce27c;
  #L3ce276.  call `setFitsSystemWindows`(v8, v1) @signature `Landroid/view/View;.setFitsSystemWindows:(Z)V` @kind virtual;
  #L3ce27c.  v0:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3ce280.  v2:= 3I;
  #L3ce282.  v3:= 0I;
  #L3ce284.  if v0 != 0 then goto L3ce366;
  #L3ce288.  call temp:= `getResources`(v7) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3ce28e.  v0:= temp @kind object;
  #L3ce290.  v4:= `@@com.google.android.material.R$dimen.design_bottom_sheet_peek_height_min` @type ^`int`;
  #L3ce294.  call temp:= `getDimensionPixelSize`(v0, v4) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L3ce29a.  v0:= temp;
  #L3ce29c.  v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightMin` @type ^`int` := v0;
  #L3ce2a0.  call `setWindowInsetsListener`(v6, v8) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setWindowInsetsListener:(Landroid/view/View;)V` @kind direct;
  #L3ce2a6.  v0:= new `java.lang.ref.WeakReference`;
  #L3ce2aa.  call `<init>`(v0, v8) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3ce2b0.  v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L3ce2b4.  v0:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.shapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L3ce2b8.  if v0 == 0 then goto L3ce2ca;
  #L3ce2bc.  v0:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.materialShapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L3ce2c0.  if v0 == 0 then goto L3ce2ca;
  #L3ce2c4.  call `setBackground`(v8, v0) @signature `Landroidx/core/view/ViewCompat;.setBackground:(Landroid/view/View;Landroid/graphics/drawable/Drawable;)V` @kind static;
  #L3ce2ca.  v0:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.materialShapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L3ce2ce.  if v0 == 0 then goto L3ce318;
  #L3ce2d2.  v4:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.elevation` @type ^`float`;
  #L3ce2d6.  v5:= -1.0F;
  #L3ce2da.  v5:= fcmpl(v4, v5);
  #L3ce2de.  if v5 != 0 then goto L3ce2ea;
  #L3ce2e2.  call temp:= `getElevation`(v8) @signature `Landroidx/core/view/ViewCompat;.getElevation:(Landroid/view/View;)F` @kind static;
  #L3ce2e8.  v4:= temp;
  #L3ce2ea.  call `setElevation`(v0, v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @kind virtual;
  #L3ce2f0.  v0:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3ce2f4.  if v0 != v2 then goto L3ce2fc;
  #L3ce2f8.  v0:= 1I;
  #L3ce2fa.  goto L3ce2fe;
  #L3ce2fc.  v0:= 0I;
  #L3ce2fe.  v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.isShapeExpanded` @type ^`boolean` := v0 @kind boolean;
  #L3ce302.  v4:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.materialShapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L3ce306.  if v0 == 0 then goto L3ce30e;
  #L3ce30a.  v0:= 0I;
  #L3ce30c.  goto L3ce312;
  #L3ce30e.  v0:= 1.0F;
  #L3ce312.  call `setInterpolation`(v4, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setInterpolation:(F)V` @kind virtual;
  #L3ce318.  call `updateAccessibilityActions`(v6) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.updateAccessibilityActions:()V` @kind direct;
  #L3ce31e.  call temp:= `getImportantForAccessibility`(v8) @signature `Landroidx/core/view/ViewCompat;.getImportantForAccessibility:(Landroid/view/View;)I` @kind static;
  #L3ce324.  v0:= temp;
  #L3ce326.  if v0 != 0 then goto L3ce330;
  #L3ce32a.  call `setImportantForAccessibility`(v8, v1) @signature `Landroidx/core/view/ViewCompat;.setImportantForAccessibility:(Landroid/view/View;I)V` @kind static;
  #L3ce330.  call temp:= `getMeasuredWidth`(v8) @signature `Landroid/view/View;.getMeasuredWidth:()I` @kind virtual;
  #L3ce336.  v0:= temp;
  #L3ce338.  v4:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.maxWidth` @type ^`int`;
  #L3ce33c.  if v0 <= v4 then goto L3ce366;
  #L3ce340.  v0:= -1I;
  #L3ce342.  if v4 == v0 then goto L3ce366;
  #L3ce346.  call temp:= `getLayoutParams`(v8) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L3ce34c.  v0:= temp @kind object;
  #L3ce34e.  v4:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.maxWidth` @type ^`int`;
  #L3ce352.  v0.`android.view.ViewGroup$LayoutParams.width` @type ^`int` := v4;
  #L3ce356.  v4:= new `com.google.android.material.bottomsheet.BottomSheetBehavior$1`;
  #L3ce35a.  call `<init>`(v4, v6, v8, v0) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior$1;.<init>:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V` @kind direct;
  #L3ce360.  call temp:= `post`(v8, v4) @signature `Landroid/view/View;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L3ce366.  v0:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewDragHelper` @type ^`androidx.customview.widget.ViewDragHelper` @kind object;
  #L3ce36a.  if v0 != 0 then goto L3ce37e;
  #L3ce36e.  v0:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.dragCallback` @type ^`androidx.customview.widget.ViewDragHelper$Callback` @kind object;
  #L3ce372.  call temp:= `create`(v7, v0) @signature `Landroidx/customview/widget/ViewDragHelper;.create:(Landroid/view/ViewGroup;Landroidx/customview/widget/ViewDragHelper$Callback;)Landroidx/customview/widget/ViewDragHelper;` @kind static;
  #L3ce378.  v0:= temp @kind object;
  #L3ce37a.  v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewDragHelper` @type ^`androidx.customview.widget.ViewDragHelper` := v0 @kind object;
  #L3ce37e.  call temp:= `getTop`(v8) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3ce384.  v0:= temp;
  #L3ce386.  call `onLayoutChild`(v7, v8, v9) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.onLayoutChild:(Landroid/view/View;I)V` @kind virtual;
  #L3ce38c.  call temp:= `getWidth`(v7) @signature `Landroid/view/ViewGroup;.getWidth:()I` @kind virtual;
  #L3ce392.  v9:= temp;
  #L3ce394.  v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.parentWidth` @type ^`int` := v9;
  #L3ce398.  call temp:= `getHeight`(v7) @signature `Landroid/view/ViewGroup;.getHeight:()I` @kind virtual;
  #L3ce39e.  v7:= temp;
  #L3ce3a0.  v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.parentHeight` @type ^`int` := v7;
  #L3ce3a4.  call temp:= `getHeight`(v8) @signature `Landroid/view/View;.getHeight:()I` @kind virtual;
  #L3ce3aa.  v7:= temp;
  #L3ce3ac.  v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.childHeight` @type ^`int` := v7;
  #L3ce3b0.  v9:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.parentHeight` @type ^`int`;
  #L3ce3b4.  v7:= v9 - v7 @kind int;
  #L3ce3b8.  v4:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.insetTop` @type ^`int`;
  #L3ce3bc.  if v7 >= v4 then goto L3ce3d4;
  #L3ce3c0.  v7:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.paddingTopSystemWindowInsets` @type ^`boolean` @kind boolean;
  #L3ce3c4.  if v7 == 0 then goto L3ce3ce;
  #L3ce3c8.  v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.childHeight` @type ^`int` := v9;
  #L3ce3cc.  goto L3ce3d4;
  #L3ce3ce.  v9:= v9 - v4 @kind int;
  #L3ce3d0.  v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.childHeight` @type ^`int` := v9;
  #L3ce3d4.  v7:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.parentHeight` @type ^`int`;
  #L3ce3d8.  v9:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.childHeight` @type ^`int`;
  #L3ce3dc.  v7:= v7 - v9 @kind int;
  #L3ce3de.  call temp:= `max`(v3, v7) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3ce3e4.  v7:= temp;
  #L3ce3e6.  v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContentsOffset` @type ^`int` := v7;
  #L3ce3ea.  call `calculateHalfExpandedOffset`(v6) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.calculateHalfExpandedOffset:()V` @kind direct;
  #L3ce3f0.  call `calculateCollapsedOffset`(v6) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.calculateCollapsedOffset:()V` @kind direct;
  #L3ce3f6.  v7:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3ce3fa.  if v7 != v2 then goto L3ce40e;
  #L3ce3fe.  call temp:= `getExpandedOffset`(v6) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getExpandedOffset:()I` @kind virtual;
  #L3ce404.  v7:= temp;
  #L3ce406.  call `offsetTopAndBottom`(v8, v7) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L3ce40c.  goto L3ce46a;
  #L3ce40e.  v9:= 6I;
  #L3ce410.  if v7 != v9 then goto L3ce420;
  #L3ce414.  v7:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedOffset` @type ^`int`;
  #L3ce418.  call `offsetTopAndBottom`(v8, v7) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L3ce41e.  goto L3ce46a;
  #L3ce420.  v9:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.hideable` @type ^`boolean` @kind boolean;
  #L3ce424.  if v9 == 0 then goto L3ce43a;
  #L3ce428.  v9:= 5I;
  #L3ce42a.  if v7 != v9 then goto L3ce43a;
  #L3ce42e.  v7:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.parentHeight` @type ^`int`;
  #L3ce432.  call `offsetTopAndBottom`(v8, v7) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L3ce438.  goto L3ce46a;
  #L3ce43a.  v7:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3ce43e.  v9:= 4I;
  #L3ce440.  if v7 != v9 then goto L3ce450;
  #L3ce444.  v7:= v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3ce448.  call `offsetTopAndBottom`(v8, v7) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L3ce44e.  goto L3ce46a;
  #L3ce450.  if v7 == v1 then goto L3ce45a;
  #L3ce454.  v9:= 2I;
  #L3ce456.  if v7 != v9 then goto L3ce46a;
  #L3ce45a.  call temp:= `getTop`(v8) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3ce460.  v7:= temp;
  #L3ce462.  v0:= v0 - v7 @kind int;
  #L3ce464.  call `offsetTopAndBottom`(v8, v0) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L3ce46a.  v7:= new `java.lang.ref.WeakReference`;
  #L3ce46e.  call temp:= `findScrollingChild`(v6, v8) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.findScrollingChild:(Landroid/view/View;)Landroid/view/View;` @kind virtual;
  #L3ce474.  v8:= temp @kind object;
  #L3ce476.  call `<init>`(v7, v8) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3ce47c.  v6.`com.google.android.material.bottomsheet.BottomSheetBehavior.nestedScrollingChildRef` @type ^`java.lang.ref.WeakReference` := v7 @kind object;
  #L3ce480.  return v1;
}
procedure `boolean` `onNestedPreFling`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v3 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v4 @kind object, `android.view.View` v5 @kind object, `android.view.View` v6 @kind object, `float` v7 , `float` v8 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.onNestedPreFling:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;FF)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ce494.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.nestedScrollingChildRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3ce498.  v1:= 0I;
  #L3ce49a.  if v0 == 0 then goto L3ce4c2;
  #L3ce49e.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3ce4a4.  v0:= temp @kind object;
  #L3ce4a6.  if v6 != v0 then goto L3ce4c2;
  #L3ce4aa.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3ce4ae.  v2:= 3I;
  #L3ce4b0.  if v0 != v2 then goto L3ce4c0;
  #L3ce4b4.  call temp:= `onNestedPreFling`(v3, v4, v5, v6, v7, v8) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;.onNestedPreFling:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;FF)Z` @kind super;
  #L3ce4ba.  v4:= temp;
  #L3ce4bc.  if v4 == 0 then goto L3ce4c2;
  #L3ce4c0.  v1:= 1I;
  #L3ce4c2.  return v1;
}
procedure `void` `onNestedPreScroll`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v2 @kind object, `android.view.View` v3 @kind object, `android.view.View` v4 @kind object, `int` v5 , `int` v6 , `int`[] v7 @kind object, `int` v8 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.onNestedPreScroll:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;II[II)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ceeb8.  v2:= 1I;
  #L3ceeba.  if v8 != v2 then goto L3ceec0;
  #L3ceebe.  return @kind void;
  #L3ceec0.  v5:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.nestedScrollingChildRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3ceec4.  if v5 == 0 then goto L3ceed6;
  #L3ceec8.  call temp:= `get`(v5) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3ceece.  v5:= temp @kind object;
  #L3ceed0.  v5:= (`android.view.View`) v5 @kind object;
  #L3ceed4.  goto L3ceed8;
  #L3ceed6.  v5:= 0I;
  #L3ceed8.  if v4 == v5 then goto L3ceede;
  #L3ceedc.  return @kind void;
  #L3ceede.  call temp:= `getTop`(v3) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3ceee4.  v5:= temp;
  #L3ceee6.  v8:= v5 - v6 @kind int;
  #L3ceeea.  if v6 <= 0 then goto L3cef3c;
  #L3ceeee.  call temp:= `getExpandedOffset`(v1) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getExpandedOffset:()I` @kind virtual;
  #L3ceef4.  v4:= temp;
  #L3ceef6.  if v8 >= v4 then goto L3cef1e;
  #L3ceefa.  call temp:= `getExpandedOffset`(v1) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getExpandedOffset:()I` @kind virtual;
  #L3cef00.  v4:= temp;
  #L3cef02.  v5:= v5 - v4 @kind int;
  #L3cef04.  v7[v2]:= v5;
  #L3cef08.  v4:= v7[v2];
  #L3cef0c.  v4:= -v4 @kind int;
  #L3cef0e.  call `offsetTopAndBottom`(v3, v4) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L3cef14.  v4:= 3I;
  #L3cef16.  call `setStateInternal`(v1, v4) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setStateInternal:(I)V` @kind virtual;
  #L3cef1c.  goto L3cef98;
  #L3cef1e.  v4:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.draggable` @type ^`boolean` @kind boolean;
  #L3cef22.  if v4 != 0 then goto L3cef28;
  #L3cef26.  return @kind void;
  #L3cef28.  v7[v2]:= v6;
  #L3cef2c.  v4:= -v6 @kind int;
  #L3cef2e.  call `offsetTopAndBottom`(v3, v4) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L3cef34.  call `setStateInternal`(v1, v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setStateInternal:(I)V` @kind virtual;
  #L3cef3a.  goto L3cef98;
  #L3cef3c.  if v6 >= 0 then goto L3cef98;
  #L3cef40.  v0:= -1I;
  #L3cef42.  call temp:= `canScrollVertically`(v4, v0) @signature `Landroid/view/View;.canScrollVertically:(I)Z` @kind virtual;
  #L3cef48.  v4:= temp;
  #L3cef4a.  if v4 != 0 then goto L3cef98;
  #L3cef4e.  v4:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3cef52.  if v8 <= v4 then goto L3cef7c;
  #L3cef56.  v8:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.hideable` @type ^`boolean` @kind boolean;
  #L3cef5a.  if v8 == 0 then goto L3cef60;
  #L3cef5e.  goto L3cef7c;
  #L3cef60.  v5:= v5 - v4 @kind int;
  #L3cef62.  v7[v2]:= v5;
  #L3cef66.  v4:= v7[v2];
  #L3cef6a.  v4:= -v4 @kind int;
  #L3cef6c.  call `offsetTopAndBottom`(v3, v4) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L3cef72.  v4:= 4I;
  #L3cef74.  call `setStateInternal`(v1, v4) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setStateInternal:(I)V` @kind virtual;
  #L3cef7a.  goto L3cef98;
  #L3cef7c.  v4:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.draggable` @type ^`boolean` @kind boolean;
  #L3cef80.  if v4 != 0 then goto L3cef86;
  #L3cef84.  return @kind void;
  #L3cef86.  v7[v2]:= v6;
  #L3cef8a.  v4:= -v6 @kind int;
  #L3cef8c.  call `offsetTopAndBottom`(v3, v4) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L3cef92.  call `setStateInternal`(v1, v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setStateInternal:(I)V` @kind virtual;
  #L3cef98.  call temp:= `getTop`(v3) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3cef9e.  v3:= temp;
  #L3cefa0.  call `dispatchOnSlide`(v1, v3) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.dispatchOnSlide:(I)V` @kind virtual;
  #L3cefa6.  v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.lastNestedScrollDy` @type ^`int` := v6;
  #L3cefaa.  v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.nestedScrolled` @type ^`boolean` := v2 @kind boolean;
  #L3cefae.  return @kind void;
}
procedure `void` `onNestedScroll`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v1 @kind object, `android.view.View` v2 @kind object, `android.view.View` v3 @kind object, `int` v4 , `int` v5 , `int` v6 , `int` v7 , `int` v8 , `int`[] v9 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.onNestedScroll:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;IIIII[I)V` @AccessFlag PUBLIC {
    temp;

  #L3cefc0.  return @kind void;
}
procedure `void` `onRestoreInstanceState`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v2 @kind object, `android.view.View` v3 @kind object, `android.os.Parcelable` v4 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.onRestoreInstanceState:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/os/Parcelable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cefd4.  v4:= (`com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState`) v4 @kind object;
  #L3cefd8.  call temp:= `getSuperState`(v4) @signature `Landroidx/customview/view/AbsSavedState;.getSuperState:()Landroid/os/Parcelable;` @kind virtual;
  #L3cefde.  v0:= temp @kind object;
  #L3cefe0.  call `onRestoreInstanceState`(v1, v2, v3, v0) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;.onRestoreInstanceState:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/os/Parcelable;)V` @kind super;
  #L3cefe6.  call `restoreOptionalState`(v1, v4) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.restoreOptionalState:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior$SavedState;)V` @kind direct;
  #L3cefec.  v2:= v4.`com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState.state` @type ^`int`;
  #L3ceff0.  v3:= 1I;
  #L3ceff2.  if v2 == v3 then goto L3cf004;
  #L3ceff6.  v3:= 2I;
  #L3ceff8.  if v2 != v3 then goto L3ceffe;
  #L3ceffc.  goto L3cf004;
  #L3ceffe.  v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int` := v2;
  #L3cf002.  goto L3cf00a;
  #L3cf004.  v2:= 4I;
  #L3cf006.  v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int` := v2;
  #L3cf00a.  return @kind void;
}
procedure `android.os.Parcelable` `onSaveInstanceState`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v2 @kind object, `android.view.View` v3 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.onSaveInstanceState:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;)Landroid/os/Parcelable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cdf00.  v0:= new `com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState`;
  #L3cdf04.  call temp:= `onSaveInstanceState`(v1, v2, v3) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;.onSaveInstanceState:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;)Landroid/os/Parcelable;` @kind super;
  #L3cdf0a.  v2:= temp @kind object;
  #L3cdf0c.  call `<init>`(v0, v2, v1) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior$SavedState;.<init>:(Landroid/os/Parcelable;Lcom/google/android/material/bottomsheet/BottomSheetBehavior;)V` @kind direct;
  #L3cdf12.  return v0 @kind object;
}
procedure `boolean` `onStartNestedScroll`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v1 @kind object, `android.view.View` v2 @kind object, `android.view.View` v3 @kind object, `android.view.View` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.onStartNestedScroll:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;Landroid/view/View;II)Z` @AccessFlag PUBLIC {
    temp;

  #L3ce4d4.  v1:= 0I;
  #L3ce4d6.  v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.lastNestedScrollDy` @type ^`int` := v1;
  #L3ce4da.  v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.nestedScrolled` @type ^`boolean` := v1 @kind boolean;
  #L3ce4de.  v2:= v5 ^& 2;
  #L3ce4e2.  if v2 == 0 then goto L3ce4e8;
  #L3ce4e6.  v1:= 1I;
  #L3ce4e8.  return v1;
}
procedure `void` `onStopNestedScroll`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v2 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v3 @kind object, `android.view.View` v4 @kind object, `android.view.View` v5 @kind object, `int` v6 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.onStopNestedScroll:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cf01c.  call temp:= `getTop`(v4) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3cf022.  v3:= temp;
  #L3cf024.  call temp:= `getExpandedOffset`(v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getExpandedOffset:()I` @kind virtual;
  #L3cf02a.  v6:= temp;
  #L3cf02c.  v0:= 3I;
  #L3cf02e.  if v3 != v6 then goto L3cf03a;
  #L3cf032.  call `setStateInternal`(v2, v0) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setStateInternal:(I)V` @kind virtual;
  #L3cf038.  return @kind void;
  #L3cf03a.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.nestedScrollingChildRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3cf03e.  if v3 == 0 then goto L3cf1ae;
  #L3cf042.  call temp:= `get`(v3) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3cf048.  v3:= temp @kind object;
  #L3cf04a.  if v5 != v3 then goto L3cf1ae;
  #L3cf04e.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.nestedScrolled` @type ^`boolean` @kind boolean;
  #L3cf052.  if v3 != 0 then goto L3cf05a;
  #L3cf056.  goto L3cf1ae;
  #L3cf05a.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.lastNestedScrollDy` @type ^`int`;
  #L3cf05e.  v5:= 4I;
  #L3cf060.  v6:= 6I;
  #L3cf062.  if v3 <= 0 then goto L3cf098;
  #L3cf066.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` @kind boolean;
  #L3cf06a.  if v3 == 0 then goto L3cf076;
  #L3cf06e.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContentsOffset` @type ^`int`;
  #L3cf072.  goto L3cf1a2;
  #L3cf076.  call temp:= `getTop`(v4) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3cf07c.  v3:= temp;
  #L3cf07e.  v5:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedOffset` @type ^`int`;
  #L3cf082.  if v3 <= v5 then goto L3cf08c;
  #L3cf086.  v3:= v5;
  #L3cf088.  goto L3cf198;
  #L3cf08c.  call temp:= `getExpandedOffset`(v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getExpandedOffset:()I` @kind virtual;
  #L3cf092.  v3:= temp;
  #L3cf094.  goto L3cf1a2;
  #L3cf098.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.hideable` @type ^`boolean` @kind boolean;
  #L3cf09c.  if v3 == 0 then goto L3cf0be;
  #L3cf0a0.  call temp:= `getYVelocity`(v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getYVelocity:()F` @kind direct;
  #L3cf0a6.  v3:= temp;
  #L3cf0a8.  call temp:= `shouldHide`(v2, v4, v3) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.shouldHide:(Landroid/view/View;F)Z` @kind virtual;
  #L3cf0ae.  v3:= temp;
  #L3cf0b0.  if v3 == 0 then goto L3cf0be;
  #L3cf0b4.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.parentHeight` @type ^`int`;
  #L3cf0b8.  v0:= 5I;
  #L3cf0ba.  goto L3cf1a2;
  #L3cf0be.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.lastNestedScrollDy` @type ^`int`;
  #L3cf0c2.  if v3 != 0 then goto L3cf15a;
  #L3cf0c6.  call temp:= `getTop`(v4) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3cf0cc.  v3:= temp;
  #L3cf0ce.  v1:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` @kind boolean;
  #L3cf0d2.  if v1 == 0 then goto L3cf104;
  #L3cf0d6.  v6:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContentsOffset` @type ^`int`;
  #L3cf0da.  v6:= v3 - v6 @kind int;
  #L3cf0de.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L3cf0e4.  v6:= temp;
  #L3cf0e6.  v1:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3cf0ea.  v3:= v3 - v1 @kind int;
  #L3cf0ec.  call temp:= `abs`(v3) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L3cf0f2.  v3:= temp;
  #L3cf0f4.  if v6 >= v3 then goto L3cf0fe;
  #L3cf0f8.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContentsOffset` @type ^`int`;
  #L3cf0fc.  goto L3cf1a2;
  #L3cf0fe.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3cf102.  goto L3cf166;
  #L3cf104.  v1:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedOffset` @type ^`int`;
  #L3cf108.  if v3 >= v1 then goto L3cf130;
  #L3cf10c.  v5:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3cf110.  v5:= v3 - v5 @kind int;
  #L3cf114.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L3cf11a.  v5:= temp;
  #L3cf11c.  if v3 >= v5 then goto L3cf12a;
  #L3cf120.  call temp:= `getExpandedOffset`(v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getExpandedOffset:()I` @kind virtual;
  #L3cf126.  v3:= temp;
  #L3cf128.  goto L3cf1a2;
  #L3cf12a.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedOffset` @type ^`int`;
  #L3cf12e.  goto L3cf198;
  #L3cf130.  v0:= v3 - v1 @kind int;
  #L3cf134.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L3cf13a.  v0:= temp;
  #L3cf13c.  v1:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3cf140.  v3:= v3 - v1 @kind int;
  #L3cf142.  call temp:= `abs`(v3) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L3cf148.  v3:= temp;
  #L3cf14a.  if v0 >= v3 then goto L3cf154;
  #L3cf14e.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedOffset` @type ^`int`;
  #L3cf152.  goto L3cf198;
  #L3cf154.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3cf158.  goto L3cf166;
  #L3cf15a.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` @kind boolean;
  #L3cf15e.  if v3 == 0 then goto L3cf16a;
  #L3cf162.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3cf166.  v0:= 4I;
  #L3cf168.  goto L3cf1a2;
  #L3cf16a.  call temp:= `getTop`(v4) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3cf170.  v3:= temp;
  #L3cf172.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedOffset` @type ^`int`;
  #L3cf176.  v0:= v3 - v0 @kind int;
  #L3cf17a.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L3cf180.  v0:= temp;
  #L3cf182.  v1:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3cf186.  v3:= v3 - v1 @kind int;
  #L3cf188.  call temp:= `abs`(v3) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L3cf18e.  v3:= temp;
  #L3cf190.  if v0 >= v3 then goto L3cf19c;
  #L3cf194.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedOffset` @type ^`int`;
  #L3cf198.  v0:= 6I;
  #L3cf19a.  goto L3cf1a2;
  #L3cf19c.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3cf1a0.  goto L3cf166;
  #L3cf1a2.  v5:= 0I;
  #L3cf1a4.  call `startSettlingAnimation`(v2, v4, v0, v3, v5) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.startSettlingAnimation:(Landroid/view/View;IIZ)V` @kind virtual;
  #L3cf1aa.  v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.nestedScrolled` @type ^`boolean` := v5 @kind boolean;
  #L3cf1ae.  return @kind void;
}
procedure `boolean` `onTouchEvent`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v2 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v3 @kind object, `android.view.View` v4 @kind object, `android.view.MotionEvent` v5 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.onTouchEvent:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ce4fc.  call temp:= `isShown`(v4) @signature `Landroid/view/View;.isShown:()Z` @kind virtual;
  #L3ce502.  v3:= temp;
  #L3ce504.  if v3 != 0 then goto L3ce50c;
  #L3ce508.  v3:= 0I;
  #L3ce50a.  return v3;
  #L3ce50c.  call temp:= `getActionMasked`(v5) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L3ce512.  v3:= temp;
  #L3ce514.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3ce518.  v1:= 1I;
  #L3ce51a.  if v0 != v1 then goto L3ce524;
  #L3ce51e.  if v3 != 0 then goto L3ce524;
  #L3ce522.  return v1;
  #L3ce524.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewDragHelper` @type ^`androidx.customview.widget.ViewDragHelper` @kind object;
  #L3ce528.  if v0 == 0 then goto L3ce532;
  #L3ce52c.  call `processTouchEvent`(v0, v5) @signature `Landroidx/customview/widget/ViewDragHelper;.processTouchEvent:(Landroid/view/MotionEvent;)V` @kind virtual;
  #L3ce532.  if v3 != 0 then goto L3ce53c;
  #L3ce536.  call `reset`(v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.reset:()V` @kind direct;
  #L3ce53c.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.velocityTracker` @type ^`android.view.VelocityTracker` @kind object;
  #L3ce540.  if v0 != 0 then goto L3ce550;
  #L3ce544.  call temp:= `obtain`() @signature `Landroid/view/VelocityTracker;.obtain:()Landroid/view/VelocityTracker;` @kind static;
  #L3ce54a.  v0:= temp @kind object;
  #L3ce54c.  v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.velocityTracker` @type ^`android.view.VelocityTracker` := v0 @kind object;
  #L3ce550.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.velocityTracker` @type ^`android.view.VelocityTracker` @kind object;
  #L3ce554.  call `addMovement`(v0, v5) @signature `Landroid/view/VelocityTracker;.addMovement:(Landroid/view/MotionEvent;)V` @kind virtual;
  #L3ce55a.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewDragHelper` @type ^`androidx.customview.widget.ViewDragHelper` @kind object;
  #L3ce55e.  if v0 == 0 then goto L3ce5b8;
  #L3ce562.  v0:= 2I;
  #L3ce564.  if v3 != v0 then goto L3ce5b8;
  #L3ce568.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.ignoreEvents` @type ^`boolean` @kind boolean;
  #L3ce56c.  if v3 != 0 then goto L3ce5b8;
  #L3ce570.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.initialY` @type ^`int`;
  #L3ce574.  v3:= (`float`) v3 @kind i2f;
  #L3ce576.  call temp:= `getY`(v5) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L3ce57c.  v0:= temp;
  #L3ce57e.  v3:= v3 - v0 @kind float;
  #L3ce580.  call temp:= `abs`(v3) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3ce586.  v3:= temp;
  #L3ce588.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewDragHelper` @type ^`androidx.customview.widget.ViewDragHelper` @kind object;
  #L3ce58c.  call temp:= `getTouchSlop`(v0) @signature `Landroidx/customview/widget/ViewDragHelper;.getTouchSlop:()I` @kind virtual;
  #L3ce592.  v0:= temp;
  #L3ce594.  v0:= (`float`) v0 @kind i2f;
  #L3ce596.  v3:= fcmpl(v3, v0);
  #L3ce59a.  if v3 <= 0 then goto L3ce5b8;
  #L3ce59e.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewDragHelper` @type ^`androidx.customview.widget.ViewDragHelper` @kind object;
  #L3ce5a2.  call temp:= `getActionIndex`(v5) @signature `Landroid/view/MotionEvent;.getActionIndex:()I` @kind virtual;
  #L3ce5a8.  v0:= temp;
  #L3ce5aa.  call temp:= `getPointerId`(v5, v0) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L3ce5b0.  v5:= temp;
  #L3ce5b2.  call `captureChildView`(v3, v4, v5) @signature `Landroidx/customview/widget/ViewDragHelper;.captureChildView:(Landroid/view/View;I)V` @kind virtual;
  #L3ce5b8.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.ignoreEvents` @type ^`boolean` @kind boolean;
  #L3ce5bc.  v3:= v3 ^~ v1 @kind int;
  #L3ce5be.  return v3;
}
procedure `void` `removeBottomSheetCallback`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback` v2 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.removeBottomSheetCallback:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior$BottomSheetCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cf1c0.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks` @type ^`java.util.ArrayList` @kind object;
  #L3cf1c4.  call temp:= `remove`(v0, v2) @signature `Ljava/util/ArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cf1ca.  return @kind void;
}
procedure `void` `setBottomSheetCallback`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v2 @kind this, `com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback` v3 @kind object) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setBottomSheetCallback:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior$BottomSheetCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cf2a8.  v0:= "BottomSheetBehavior" @kind object;
  #L3cf2ac.  v1:= "BottomSheetBehavior now supports multiple callbacks. `setBottomSheetCallback()` removes all existing callbacks, including ones set internally by library authors, which may result in unintended behavior. This may change in the future. Please use `addBottomSheetCallback()` and `removeBottomSheetCallback()` instead to set your own callbacks." @kind object;
  #L3cf2b0.  call temp:= `w`(v0, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3cf2b6.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks` @type ^`java.util.ArrayList` @kind object;
  #L3cf2ba.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L3cf2c0.  if v3 == 0 then goto L3cf2ce;
  #L3cf2c4.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks` @type ^`java.util.ArrayList` @kind object;
  #L3cf2c8.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cf2ce.  return @kind void;
}
procedure `void` `setDraggable`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setDraggable:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3cf2e0.  v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.draggable` @type ^`boolean` := v1 @kind boolean;
  #L3cf2e4.  return @kind void;
}
procedure `void` `setExpandedOffset`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setExpandedOffset:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cf2f8.  if v2 < 0 then goto L3cf302;
  #L3cf2fc.  v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.expandedOffset` @type ^`int` := v2;
  #L3cf300.  return @kind void;
  #L3cf302.  v2:= new `java.lang.IllegalArgumentException`;
  #L3cf306.  v0:= "offset must be greater than or equal to 0" @kind object;
  #L3cf30a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cf310.  throw v2;
}
procedure `void` `setFitToContents`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setFitToContents:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cf324.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` @kind boolean;
  #L3cf328.  if v0 != v2 then goto L3cf32e;
  #L3cf32c.  return @kind void;
  #L3cf32e.  v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` := v2 @kind boolean;
  #L3cf332.  v2:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3cf336.  if v2 == 0 then goto L3cf340;
  #L3cf33a.  call `calculateCollapsedOffset`(v1) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.calculateCollapsedOffset:()V` @kind direct;
  #L3cf340.  v2:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` @kind boolean;
  #L3cf344.  if v2 == 0 then goto L3cf356;
  #L3cf348.  v2:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3cf34c.  v0:= 6I;
  #L3cf34e.  if v2 != v0 then goto L3cf356;
  #L3cf352.  v2:= 3I;
  #L3cf354.  goto L3cf35a;
  #L3cf356.  v2:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3cf35a.  call `setStateInternal`(v1, v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setStateInternal:(I)V` @kind virtual;
  #L3cf360.  call `updateAccessibilityActions`(v1) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.updateAccessibilityActions:()V` @kind direct;
  #L3cf366.  return @kind void;
}
procedure `void` `setGestureInsetBottomIgnored`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setGestureInsetBottomIgnored:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3cf378.  v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.gestureInsetBottomIgnored` @type ^`boolean` := v1 @kind boolean;
  #L3cf37c.  return @kind void;
}
procedure `void` `setHalfExpandedRatio`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setHalfExpandedRatio:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cf390.  v0:= 0I;
  #L3cf392.  v0:= fcmpg(v2, v0);
  #L3cf396.  if v0 <= 0 then goto L3cf3ba;
  #L3cf39a.  v0:= 1.0F;
  #L3cf39e.  v0:= fcmpl(v2, v0);
  #L3cf3a2.  if v0 >= 0 then goto L3cf3ba;
  #L3cf3a6.  v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedRatio` @type ^`float` := v2;
  #L3cf3aa.  v2:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3cf3ae.  if v2 == 0 then goto L3cf3b8;
  #L3cf3b2.  call `calculateHalfExpandedOffset`(v1) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.calculateHalfExpandedOffset:()V` @kind direct;
  #L3cf3b8.  return @kind void;
  #L3cf3ba.  v2:= new `java.lang.IllegalArgumentException`;
  #L3cf3be.  v0:= "ratio must be a float value between 0 and 1" @kind object;
  #L3cf3c2.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cf3c8.  throw v2;
}
procedure `void` `setHideable`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setHideable:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cf3dc.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.hideable` @type ^`boolean` @kind boolean;
  #L3cf3e0.  if v0 == v2 then goto L3cf404;
  #L3cf3e4.  v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.hideable` @type ^`boolean` := v2 @kind boolean;
  #L3cf3e8.  if v2 != 0 then goto L3cf3fe;
  #L3cf3ec.  v2:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3cf3f0.  v0:= 5I;
  #L3cf3f2.  if v2 != v0 then goto L3cf3fe;
  #L3cf3f6.  v2:= 4I;
  #L3cf3f8.  call `setState`(v1, v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setState:(I)V` @kind virtual;
  #L3cf3fe.  call `updateAccessibilityActions`(v1) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.updateAccessibilityActions:()V` @kind direct;
  #L3cf404.  return @kind void;
}
procedure `void` `setMaxWidth`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setMaxWidth:(I)V` @AccessFlag PUBLIC {
    temp;

  #L3cf418.  v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.maxWidth` @type ^`int` := v1;
  #L3cf41c.  return @kind void;
}
procedure `void` `setPeekHeight`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setPeekHeight:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cf430.  v0:= 0I;
  #L3cf432.  call `setPeekHeight`(v1, v2, v0) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setPeekHeight:(IZ)V` @kind virtual;
  #L3cf438.  return @kind void;
}
procedure `void` `setPeekHeight`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v3 @kind this, `int` v4 , `boolean` v5 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setPeekHeight:(IZ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3cf44c.  v0:= 1I;
  #L3cf44e.  v1:= 0I;
  #L3cf450.  v2:= -1I;
  #L3cf452.  if v4 != v2 then goto L3cf464;
  #L3cf456.  v4:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightAuto` @type ^`boolean` @kind boolean;
  #L3cf45a.  if v4 != 0 then goto L3cf476;
  #L3cf45e.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightAuto` @type ^`boolean` := v0 @kind boolean;
  #L3cf462.  goto L3cf48a;
  #L3cf464.  v2:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightAuto` @type ^`boolean` @kind boolean;
  #L3cf468.  if v2 != 0 then goto L3cf47a;
  #L3cf46c.  v2:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeight` @type ^`int`;
  #L3cf470.  if v2 == v4 then goto L3cf476;
  #L3cf474.  goto L3cf47a;
  #L3cf476.  v0:= 0I;
  #L3cf478.  goto L3cf48a;
  #L3cf47a.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeightAuto` @type ^`boolean` := v1 @kind boolean;
  #L3cf47e.  call temp:= `max`(v1, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3cf484.  v4:= temp;
  #L3cf486.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.peekHeight` @type ^`int` := v4;
  #L3cf48a.  if v0 == 0 then goto L3cf494;
  #L3cf48e.  call `updatePeekHeight`(v3, v5) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.updatePeekHeight:(Z)V` @kind direct;
  #L3cf494.  return @kind void;
}
procedure `void` `setSaveFlags`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setSaveFlags:(I)V` @AccessFlag PUBLIC {
    temp;

  #L3cf4a8.  v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.saveFlags` @type ^`int` := v1;
  #L3cf4ac.  return @kind void;
}
procedure `void` `setSkipCollapsed`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setSkipCollapsed:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3cf4c0.  v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.skipCollapsed` @type ^`boolean` := v1 @kind boolean;
  #L3cf4c4.  return @kind void;
}
procedure `void` `setState`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setState:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cf4d8.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3cf4dc.  if v2 != v0 then goto L3cf4e2;
  #L3cf4e0.  return @kind void;
  #L3cf4e2.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3cf4e6.  if v0 != 0 then goto L3cf510;
  #L3cf4ea.  v0:= 4I;
  #L3cf4ec.  if v2 == v0 then goto L3cf50a;
  #L3cf4f0.  v0:= 3I;
  #L3cf4f2.  if v2 == v0 then goto L3cf50a;
  #L3cf4f6.  v0:= 6I;
  #L3cf4f8.  if v2 == v0 then goto L3cf50a;
  #L3cf4fc.  v0:= v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.hideable` @type ^`boolean` @kind boolean;
  #L3cf500.  if v0 == 0 then goto L3cf50e;
  #L3cf504.  v0:= 5I;
  #L3cf506.  if v2 != v0 then goto L3cf50e;
  #L3cf50a.  v1.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int` := v2;
  #L3cf50e.  return @kind void;
  #L3cf510.  call `settleToStatePendingLayout`(v1, v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.settleToStatePendingLayout:(I)V` @kind direct;
  #L3cf516.  return @kind void;
}
procedure `void` `setStateInternal`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setStateInternal:(I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3cf528.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int`;
  #L3cf52c.  if v0 != v4 then goto L3cf532;
  #L3cf530.  return @kind void;
  #L3cf532.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.state` @type ^`int` := v4;
  #L3cf536.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3cf53a.  if v0 != 0 then goto L3cf540;
  #L3cf53e.  return @kind void;
  #L3cf540.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3cf546.  v0:= temp @kind object;
  #L3cf548.  v0:= (`android.view.View`) v0 @kind object;
  #L3cf54c.  if v0 != 0 then goto L3cf552;
  #L3cf550.  return @kind void;
  #L3cf552.  v1:= 3I;
  #L3cf554.  v2:= 0I;
  #L3cf556.  if v4 != v1 then goto L3cf564;
  #L3cf55a.  v1:= 1I;
  #L3cf55c.  call `updateImportantForAccessibility`(v3, v1) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.updateImportantForAccessibility:(Z)V` @kind direct;
  #L3cf562.  goto L3cf57c;
  #L3cf564.  v1:= 6I;
  #L3cf566.  if v4 == v1 then goto L3cf576;
  #L3cf56a.  v1:= 5I;
  #L3cf56c.  if v4 == v1 then goto L3cf576;
  #L3cf570.  v1:= 4I;
  #L3cf572.  if v4 != v1 then goto L3cf57c;
  #L3cf576.  call `updateImportantForAccessibility`(v3, v2) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.updateImportantForAccessibility:(Z)V` @kind direct;
  #L3cf57c.  call `updateDrawableForTargetState`(v3, v4) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.updateDrawableForTargetState:(I)V` @kind direct;
  #L3cf582.  v1:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks` @type ^`java.util.ArrayList` @kind object;
  #L3cf586.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L3cf58c.  v1:= temp;
  #L3cf58e.  if v2 >= v1 then goto L3cf5ae;
  #L3cf592.  v1:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks` @type ^`java.util.ArrayList` @kind object;
  #L3cf596.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3cf59c.  v1:= temp @kind object;
  #L3cf59e.  v1:= (`com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback`) v1 @kind object;
  #L3cf5a2.  call `onStateChanged`(v1, v0, v4) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior$BottomSheetCallback;.onStateChanged:(Landroid/view/View;I)V` @kind virtual;
  #L3cf5a8.  v2:= v2 + 1;
  #L3cf5ac.  goto L3cf582;
  #L3cf5ae.  call `updateAccessibilityActions`(v3) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.updateAccessibilityActions:()V` @kind direct;
  #L3cf5b4.  return @kind void;
}
procedure `void` `setUpdateImportantForAccessibilityOnSiblings`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setUpdateImportantForAccessibilityOnSiblings:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3cf5c8.  v0.`com.google.android.material.bottomsheet.BottomSheetBehavior.updateImportantForAccessibilityOnSiblings` @type ^`boolean` := v1 @kind boolean;
  #L3cf5cc.  return @kind void;
}
procedure `void` `settleToState`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v3 @kind this, `android.view.View` v4 @kind object, `int` v5 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.settleToState:(Landroid/view/View;I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3cf648.  v0:= 3I;
  #L3cf64a.  v1:= 4I;
  #L3cf64c.  if v5 != v1 then goto L3cf656;
  #L3cf650.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3cf654.  goto L3cf69a;
  #L3cf656.  v1:= 6I;
  #L3cf658.  if v5 != v1 then goto L3cf67a;
  #L3cf65c.  v1:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedOffset` @type ^`int`;
  #L3cf660.  v2:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContents` @type ^`boolean` @kind boolean;
  #L3cf664.  if v2 == 0 then goto L3cf676;
  #L3cf668.  v2:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.fitToContentsOffset` @type ^`int`;
  #L3cf66c.  if v1 > v2 then goto L3cf676;
  #L3cf670.  v0:= v2;
  #L3cf672.  v5:= 3I;
  #L3cf674.  goto L3cf69a;
  #L3cf676.  v0:= v1;
  #L3cf678.  goto L3cf69a;
  #L3cf67a.  if v5 != v0 then goto L3cf688;
  #L3cf67e.  call temp:= `getExpandedOffset`(v3) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.getExpandedOffset:()I` @kind virtual;
  #L3cf684.  v0:= temp;
  #L3cf686.  goto L3cf69a;
  #L3cf688.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.hideable` @type ^`boolean` @kind boolean;
  #L3cf68c.  if v0 == 0 then goto L3cf6a4;
  #L3cf690.  v0:= 5I;
  #L3cf692.  if v5 != v0 then goto L3cf6a4;
  #L3cf696.  v0:= v3.`com.google.android.material.bottomsheet.BottomSheetBehavior.parentHeight` @type ^`int`;
  #L3cf69a.  v1:= 0I;
  #L3cf69c.  call `startSettlingAnimation`(v3, v4, v5, v0, v1) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.startSettlingAnimation:(Landroid/view/View;IIZ)V` @kind virtual;
  #L3cf6a2.  return @kind void;
  #L3cf6a4.  v4:= new `java.lang.IllegalArgumentException`;
  #L3cf6a8.  v0:= new `java.lang.StringBuilder`;
  #L3cf6ac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cf6b2.  v1:= "Illegal state argument: " @kind object;
  #L3cf6b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf6bc.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf6c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cf6c8.  v5:= temp @kind object;
  #L3cf6ca.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cf6d0.  throw v4;
}
procedure `boolean` `shouldHide`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v4 @kind this, `android.view.View` v5 @kind object, `float` v6 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.shouldHide:(Landroid/view/View;F)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ce5d0.  v0:= v4.`com.google.android.material.bottomsheet.BottomSheetBehavior.skipCollapsed` @type ^`boolean` @kind boolean;
  #L3ce5d4.  v1:= 1I;
  #L3ce5d6.  if v0 == 0 then goto L3ce5dc;
  #L3ce5da.  return v1;
  #L3ce5dc.  call temp:= `getTop`(v5) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3ce5e2.  v0:= temp;
  #L3ce5e4.  v2:= v4.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3ce5e8.  v3:= 0I;
  #L3ce5ea.  if v0 >= v2 then goto L3ce5f0;
  #L3ce5ee.  return v3;
  #L3ce5f0.  call temp:= `calculatePeekHeight`(v4) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.calculatePeekHeight:()I` @kind direct;
  #L3ce5f6.  v0:= temp;
  #L3ce5f8.  call temp:= `getTop`(v5) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3ce5fe.  v5:= temp;
  #L3ce600.  v5:= (`float`) v5 @kind i2f;
  #L3ce602.  v2:= 1036831949I;
  #L3ce608.  v6:= v6 * v2 @kind float;
  #L3ce60c.  v5:= v5 + v6 @kind float;
  #L3ce60e.  v6:= v4.`com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset` @type ^`int`;
  #L3ce612.  v6:= (`float`) v6 @kind i2f;
  #L3ce614.  v5:= v5 - v6 @kind float;
  #L3ce616.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3ce61c.  v5:= temp;
  #L3ce61e.  v6:= (`float`) v0 @kind i2f;
  #L3ce620.  v5:= v5 / v6 @kind float;
  #L3ce622.  v6:= 0.5F;
  #L3ce626.  v5:= fcmpl(v5, v6);
  #L3ce62a.  if v5 <= 0 then goto L3ce630;
  #L3ce62e.  goto L3ce632;
  #L3ce630.  v1:= 0I;
  #L3ce632.  return v1;
}
procedure `void` `startSettlingAnimation`(`com.google.android.material.bottomsheet.BottomSheetBehavior` v2 @kind this, `android.view.View` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.startSettlingAnimation:(Landroid/view/View;IIZ)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3cf748.  v0:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.viewDragHelper` @type ^`androidx.customview.widget.ViewDragHelper` @kind object;
  #L3cf74c.  v1:= 1I;
  #L3cf74e.  if v0 == 0 then goto L3cf784;
  #L3cf752.  if v6 == 0 then goto L3cf76c;
  #L3cf756.  call temp:= `getLeft`(v3) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L3cf75c.  v6:= temp;
  #L3cf75e.  call temp:= `settleCapturedViewAt`(v0, v6, v5) @signature `Landroidx/customview/widget/ViewDragHelper;.settleCapturedViewAt:(II)Z` @kind virtual;
  #L3cf764.  v5:= temp;
  #L3cf766.  if v5 == 0 then goto L3cf784;
  #L3cf76a.  goto L3cf780;
  #L3cf76c.  call temp:= `getLeft`(v3) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L3cf772.  v6:= temp;
  #L3cf774.  call temp:= `smoothSlideViewTo`(v0, v3, v6, v5) @signature `Landroidx/customview/widget/ViewDragHelper;.smoothSlideViewTo:(Landroid/view/View;II)Z` @kind virtual;
  #L3cf77a.  v5:= temp;
  #L3cf77c.  if v5 == 0 then goto L3cf784;
  #L3cf780.  v5:= 1I;
  #L3cf782.  goto L3cf786;
  #L3cf784.  v5:= 0I;
  #L3cf786.  if v5 == 0 then goto L3cf7e2;
  #L3cf78a.  v5:= 2I;
  #L3cf78c.  call `setStateInternal`(v2, v5) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setStateInternal:(I)V` @kind virtual;
  #L3cf792.  call `updateDrawableForTargetState`(v2, v4) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.updateDrawableForTargetState:(I)V` @kind direct;
  #L3cf798.  v5:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.settleRunnable` @type ^`com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable` @kind object;
  #L3cf79c.  if v5 != 0 then goto L3cf7ae;
  #L3cf7a0.  v5:= new `com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable`;
  #L3cf7a4.  call `<init>`(v5, v2, v3, v4) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior$SettleRunnable;.<init>:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior;Landroid/view/View;I)V` @kind direct;
  #L3cf7aa.  v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.settleRunnable` @type ^`com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable` := v5 @kind object;
  #L3cf7ae.  v5:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.settleRunnable` @type ^`com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable` @kind object;
  #L3cf7b2.  call temp:= `access$800`(v5) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior$SettleRunnable;.access$800:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior$SettleRunnable;)Z` @kind static;
  #L3cf7b8.  v5:= temp;
  #L3cf7ba.  if v5 != 0 then goto L3cf7d8;
  #L3cf7be.  v5:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.settleRunnable` @type ^`com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable` @kind object;
  #L3cf7c2.  v5.`com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable.targetState` @type ^`int` := v4;
  #L3cf7c6.  call `postOnAnimation`(v3, v5) @signature `Landroidx/core/view/ViewCompat;.postOnAnimation:(Landroid/view/View;Ljava/lang/Runnable;)V` @kind static;
  #L3cf7cc.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.settleRunnable` @type ^`com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable` @kind object;
  #L3cf7d0.  call temp:= `access$802`(v3, v1) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior$SettleRunnable;.access$802:(Lcom/google/android/material/bottomsheet/BottomSheetBehavior$SettleRunnable;Z)Z` @kind static;
  #L3cf7d6.  goto L3cf7e8;
  #L3cf7d8.  v3:= v2.`com.google.android.material.bottomsheet.BottomSheetBehavior.settleRunnable` @type ^`com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable` @kind object;
  #L3cf7dc.  v3.`com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable.targetState` @type ^`int` := v4;
  #L3cf7e0.  goto L3cf7e8;
  #L3cf7e2.  call `setStateInternal`(v2, v4) @signature `Lcom/google/android/material/bottomsheet/BottomSheetBehavior;.setStateInternal:(I)V` @kind virtual;
  #L3cf7e8.  return @kind void;
}
