record `com.google.android.material.slider.BaseSlider` @kind class @AccessFlag ABSTRACT extends `android.view.View` @kind class {
  `com.google.android.material.slider.BaseSlider$AccessibilityEventSender` `com.google.android.material.slider.BaseSlider.accessibilityEventSender` @AccessFlag PRIVATE;
  `com.google.android.material.slider.BaseSlider$AccessibilityHelper` `com.google.android.material.slider.BaseSlider.accessibilityHelper` @AccessFlag PRIVATE_FINAL;
  `android.view.accessibility.AccessibilityManager` `com.google.android.material.slider.BaseSlider.accessibilityManager` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.activeThumbIdx` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.activeTicksPaint` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.activeTrackPaint` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.google.android.material.slider.BaseSlider.changeListeners` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.defaultThumbRadius` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.slider.BaseSlider.dirtyConfig` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.focusedThumbIdx` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.slider.BaseSlider.forceDrawCompatHalo` @AccessFlag PRIVATE;
  `com.google.android.material.slider.LabelFormatter` `com.google.android.material.slider.BaseSlider.formatter` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.haloColor` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.haloPaint` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.haloRadius` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.slider.BaseSlider.isLongPress` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.labelBehavior` @AccessFlag PRIVATE;
  `com.google.android.material.slider.BaseSlider$TooltipDrawableFactory` `com.google.android.material.slider.BaseSlider.labelMaker` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.labelPadding` @AccessFlag PRIVATE;
  `java.util.List` `com.google.android.material.slider.BaseSlider.labels` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @AccessFlag PRIVATE;
  `android.animation.ValueAnimator` `com.google.android.material.slider.BaseSlider.labelsInAnimator` @AccessFlag PRIVATE;
  `android.animation.ValueAnimator` `com.google.android.material.slider.BaseSlider.labelsOutAnimator` @AccessFlag PRIVATE;
  `android.view.MotionEvent` `com.google.android.material.slider.BaseSlider.lastEvent` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.minTrackSidePadding` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.scaledTouchSlop` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.separationUnit` @AccessFlag PRIVATE;
  `float` `com.google.android.material.slider.BaseSlider.stepSize` @AccessFlag PRIVATE;
  `com.google.android.material.shape.MaterialShapeDrawable` `com.google.android.material.slider.BaseSlider.thumbDrawable` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.slider.BaseSlider.thumbIsPressed` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.thumbPaint` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.thumbRadius` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.tickColorActive` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.tickColorInactive` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.slider.BaseSlider.tickVisible` @AccessFlag PRIVATE;
  `float`[] `com.google.android.material.slider.BaseSlider.ticksCoordinates` @AccessFlag PRIVATE;
  `float` `com.google.android.material.slider.BaseSlider.touchDownX` @AccessFlag PRIVATE;
  `java.util.List` `com.google.android.material.slider.BaseSlider.touchListeners` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.slider.BaseSlider.touchPosition` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.trackColorActive` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.trackColorInactive` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.trackHeight` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.trackSidePadding` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.trackTop` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.trackWidth` @AccessFlag PRIVATE;
  `float` `com.google.android.material.slider.BaseSlider.valueFrom` @AccessFlag PRIVATE;
  `float` `com.google.android.material.slider.BaseSlider.valueTo` @AccessFlag PRIVATE;
  `java.util.ArrayList` `com.google.android.material.slider.BaseSlider.values` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.widgetHeight` @AccessFlag PRIVATE;
}
global `int` `@@com.google.android.material.slider.BaseSlider.DEF_STYLE_RES` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_DISCRETE_VALUE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_STEP_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_VALUE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_VALUE_FROM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_VALUE_TO` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.slider.BaseSlider.HALO_ALPHA` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.android.material.slider.BaseSlider.LABEL_ANIMATION_ENTER_DURATION` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.android.material.slider.BaseSlider.LABEL_ANIMATION_EXIT_DURATION` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `double` `@@com.google.android.material.slider.BaseSlider.THRESHOLD` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.slider.BaseSlider.TIMEOUT_SEND_ACCESSIBILITY_EVENT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.slider.BaseSlider.UNIT_PX` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.android.material.slider.BaseSlider.UNIT_VALUE` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.WARNING_FLOATING_POINT_ERRROR` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/slider/BaseSlider;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L402668.  v0:= constclass @type ^`com.google.android.material.slider.BaseSlider` @kind object;
  #L40266c.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L402672.  v0:= temp @kind object;
  #L402674.  `@@com.google.android.material.slider.BaseSlider.TAG` @type ^`java.lang.String` := v0 @kind object;
  #L402678.  v0:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Slider` @type ^`int`;
  #L40267c.  `@@com.google.android.material.slider.BaseSlider.DEF_STYLE_RES` @type ^`int` := v0;
  #L402680.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L402694.  v0:= 0I;
  #L402696.  call `<init>`(v1, v2, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L40269c.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4026b0.  v0:= `@@com.google.android.material.R$attr.sliderStyle` @type ^`int`;
  #L4026b4.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L4026ba.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `android.content.Context` v5 @kind object, `android.util.AttributeSet` v6 @kind object, `int` v7 ) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4026cc.  v0:= `@@com.google.android.material.slider.BaseSlider.DEF_STYLE_RES` @type ^`int`;
  #L4026d0.  call temp:= `wrap`(v5, v6, v7, v0) @signature `Lcom/google/android/material/theme/overlay/MaterialThemeOverlay;.wrap:(Landroid/content/Context;Landroid/util/AttributeSet;II)Landroid/content/Context;` @kind static;
  #L4026d6.  v5:= temp @kind object;
  #L4026d8.  call `<init>`(v4, v5, v6, v7) @signature `Landroid/view/View;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L4026de.  v5:= new `java.util.ArrayList`;
  #L4026e2.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4026e8.  v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` := v5 @kind object;
  #L4026ec.  v5:= new `java.util.ArrayList`;
  #L4026f0.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4026f6.  v4.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` := v5 @kind object;
  #L4026fa.  v5:= new `java.util.ArrayList`;
  #L4026fe.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L402704.  v4.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` := v5 @kind object;
  #L402708.  v5:= 0I;
  #L40270a.  v4.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` := v5 @kind boolean;
  #L40270e.  v4.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` := v5 @kind boolean;
  #L402712.  v0:= new `java.util.ArrayList`;
  #L402716.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L40271c.  v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` := v0 @kind object;
  #L402720.  v0:= -1I;
  #L402722.  v4.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v0;
  #L402726.  v4.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v0;
  #L40272a.  v0:= 0I;
  #L40272c.  v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float` := v0;
  #L402730.  v0:= 1I;
  #L402732.  v4.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` := v0 @kind boolean;
  #L402736.  v4.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` := v5 @kind boolean;
  #L40273a.  v1:= new `com.google.android.material.shape.MaterialShapeDrawable`;
  #L40273e.  call `<init>`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:()V` @kind direct;
  #L402744.  v4.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` := v1 @kind object;
  #L402748.  v4.`com.google.android.material.slider.BaseSlider.separationUnit` @type ^`int` := v5;
  #L40274c.  call temp:= `getContext`(v4) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L402752.  v5:= temp @kind object;
  #L402754.  v1:= new `android.graphics.Paint`;
  #L402758.  call `<init>`(v1) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L40275e.  v4.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` := v1 @kind object;
  #L402762.  v2:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L402766.  call `setStyle`(v1, v2) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L40276c.  v1:= v4.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L402770.  v2:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L402774.  call `setStrokeCap`(v1, v2) @signature `Landroid/graphics/Paint;.setStrokeCap:(Landroid/graphics/Paint$Cap;)V` @kind virtual;
  #L40277a.  v1:= new `android.graphics.Paint`;
  #L40277e.  call `<init>`(v1) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L402784.  v4.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` := v1 @kind object;
  #L402788.  v2:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L40278c.  call `setStyle`(v1, v2) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L402792.  v1:= v4.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L402796.  v2:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L40279a.  call `setStrokeCap`(v1, v2) @signature `Landroid/graphics/Paint;.setStrokeCap:(Landroid/graphics/Paint$Cap;)V` @kind virtual;
  #L4027a0.  v1:= new `android.graphics.Paint`;
  #L4027a4.  call `<init>`(v1, v0) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L4027aa.  v4.`com.google.android.material.slider.BaseSlider.thumbPaint` @type ^`android.graphics.Paint` := v1 @kind object;
  #L4027ae.  v2:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L4027b2.  call `setStyle`(v1, v2) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L4027b8.  v1:= v4.`com.google.android.material.slider.BaseSlider.thumbPaint` @type ^`android.graphics.Paint` @kind object;
  #L4027bc.  v2:= new `android.graphics.PorterDuffXfermode`;
  #L4027c0.  v3:= `@@android.graphics.PorterDuff$Mode.CLEAR` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L4027c4.  call `<init>`(v2, v3) @signature `Landroid/graphics/PorterDuffXfermode;.<init>:(Landroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L4027ca.  call temp:= `setXfermode`(v1, v2) @signature `Landroid/graphics/Paint;.setXfermode:(Landroid/graphics/Xfermode;)Landroid/graphics/Xfermode;` @kind virtual;
  #L4027d0.  v1:= new `android.graphics.Paint`;
  #L4027d4.  call `<init>`(v1, v0) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L4027da.  v4.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` := v1 @kind object;
  #L4027de.  v2:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L4027e2.  call `setStyle`(v1, v2) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L4027e8.  v1:= new `android.graphics.Paint`;
  #L4027ec.  call `<init>`(v1) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L4027f2.  v4.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` := v1 @kind object;
  #L4027f6.  v2:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L4027fa.  call `setStyle`(v1, v2) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L402800.  v1:= v4.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L402804.  v2:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L402808.  call `setStrokeCap`(v1, v2) @signature `Landroid/graphics/Paint;.setStrokeCap:(Landroid/graphics/Paint$Cap;)V` @kind virtual;
  #L40280e.  v1:= new `android.graphics.Paint`;
  #L402812.  call `<init>`(v1) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L402818.  v4.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` := v1 @kind object;
  #L40281c.  v2:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L402820.  call `setStyle`(v1, v2) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L402826.  v1:= v4.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L40282a.  v2:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L40282e.  call `setStrokeCap`(v1, v2) @signature `Landroid/graphics/Paint;.setStrokeCap:(Landroid/graphics/Paint$Cap;)V` @kind virtual;
  #L402834.  call temp:= `getResources`(v5) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L40283a.  v1:= temp @kind object;
  #L40283c.  call `loadResources`(v4, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.loadResources:(Landroid/content/res/Resources;)V` @kind direct;
  #L402842.  v1:= new `com.google.android.material.slider.BaseSlider$1`;
  #L402846.  call `<init>`(v1, v4, v6, v7) @signature `Lcom/google/android/material/slider/BaseSlider$1;.<init>:(Lcom/google/android/material/slider/BaseSlider;Landroid/util/AttributeSet;I)V` @kind direct;
  #L40284c.  v4.`com.google.android.material.slider.BaseSlider.labelMaker` @type ^`com.google.android.material.slider.BaseSlider$TooltipDrawableFactory` := v1 @kind object;
  #L402850.  call `processAttributes`(v4, v5, v6, v7) @signature `Lcom/google/android/material/slider/BaseSlider;.processAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L402856.  call `setFocusable`(v4, v0) @signature `Landroid/view/View;.setFocusable:(Z)V` @kind virtual;
  #L40285c.  call `setClickable`(v4, v0) @signature `Landroid/view/View;.setClickable:(Z)V` @kind virtual;
  #L402862.  v6:= v4.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L402866.  v7:= 2I;
  #L402868.  call `setShadowCompatibilityMode`(v6, v7) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatibilityMode:(I)V` @kind virtual;
  #L40286e.  call temp:= `get`(v5) @signature `Landroid/view/ViewConfiguration;.get:(Landroid/content/Context;)Landroid/view/ViewConfiguration;` @kind static;
  #L402874.  v5:= temp @kind object;
  #L402876.  call temp:= `getScaledTouchSlop`(v5) @signature `Landroid/view/ViewConfiguration;.getScaledTouchSlop:()I` @kind virtual;
  #L40287c.  v5:= temp;
  #L40287e.  v4.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int` := v5;
  #L402882.  v5:= new `com.google.android.material.slider.BaseSlider$AccessibilityHelper`;
  #L402886.  call `<init>`(v5, v4) @signature `Lcom/google/android/material/slider/BaseSlider$AccessibilityHelper;.<init>:(Lcom/google/android/material/slider/BaseSlider;)V` @kind direct;
  #L40288c.  v4.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` := v5 @kind object;
  #L402890.  call `setAccessibilityDelegate`(v4, v5) @signature `Landroidx/core/view/ViewCompat;.setAccessibilityDelegate:(Landroid/view/View;Landroidx/core/view/AccessibilityDelegateCompat;)V` @kind static;
  #L402896.  call temp:= `getContext`(v4) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L40289c.  v5:= temp @kind object;
  #L40289e.  v6:= "accessibility" @kind object;
  #L4028a2.  call temp:= `getSystemService`(v5, v6) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L4028a8.  v5:= temp @kind object;
  #L4028aa.  v5:= (`android.view.accessibility.AccessibilityManager`) v5 @kind object;
  #L4028ae.  v4.`com.google.android.material.slider.BaseSlider.accessibilityManager` @type ^`android.view.accessibility.AccessibilityManager` := v5 @kind object;
  #L4028b2.  return @kind void;
}
procedure `com.google.android.material.tooltip.TooltipDrawable` `access$000`(`android.content.Context` v0 @kind object, `android.content.res.TypedArray` v1 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.access$000:(Landroid/content/Context;Landroid/content/res/TypedArray;)Lcom/google/android/material/tooltip/TooltipDrawable;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L401e40.  call temp:= `parseLabelDrawable`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.parseLabelDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;)Lcom/google/android/material/tooltip/TooltipDrawable;` @kind static;
  #L401e46.  v0:= temp @kind object;
  #L401e48.  return v0 @kind object;
}
procedure `java.util.List` `access$100`(`com.google.android.material.slider.BaseSlider` v0 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.access$100:(Lcom/google/android/material/slider/BaseSlider;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L402630.  v0:= v0.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L402634.  return v0 @kind object;
}
procedure `com.google.android.material.slider.BaseSlider$AccessibilityHelper` `access$300`(`com.google.android.material.slider.BaseSlider` v0 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.access$300:(Lcom/google/android/material/slider/BaseSlider;)Lcom/google/android/material/slider/BaseSlider$AccessibilityHelper;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L401e28.  v0:= v0.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L401e2c.  return v0 @kind object;
}
procedure `java.lang.String` `access$500`(`com.google.android.material.slider.BaseSlider` v0 @kind object, `float` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.access$500:(Lcom/google/android/material/slider/BaseSlider;F)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4025b4.  call temp:= `formatValue`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.formatValue:(F)Ljava/lang/String;` @kind direct;
  #L4025ba.  v0:= temp @kind object;
  #L4025bc.  return v0 @kind object;
}
procedure `boolean` `access$600`(`com.google.android.material.slider.BaseSlider` v0 @kind object, `int` v1 , `float` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.access$600:(Lcom/google/android/material/slider/BaseSlider;IF)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L401648.  call temp:= `snapThumbToValue`(v0, v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.snapThumbToValue:(IF)Z` @kind direct;
  #L40164e.  v0:= temp;
  #L401650.  return v0;
}
procedure `void` `access$700`(`com.google.android.material.slider.BaseSlider` v0 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.access$700:(Lcom/google/android/material/slider/BaseSlider;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4028c4.  call `updateHaloHotspot`(v0) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L4028ca.  return @kind void;
}
procedure `float` `access$800`(`com.google.android.material.slider.BaseSlider` v0 @kind object, `int` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.access$800:(Lcom/google/android/material/slider/BaseSlider;I)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L401ed4.  call temp:= `calculateStepIncrement`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:(I)F` @kind direct;
  #L401eda.  v0:= temp;
  #L401edc.  return v0;
}
procedure `void` `attachLabelToContentView`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.tooltip.TooltipDrawable` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.attachLabelToContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L402914.  call temp:= `getContentView`(v1) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentView:(Landroid/view/View;)Landroid/view/ViewGroup;` @kind static;
  #L40291a.  v0:= temp @kind object;
  #L40291c.  call `setRelativeToView`(v2, v0) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.setRelativeToView:(Landroid/view/View;)V` @kind virtual;
  #L402922.  return @kind void;
}
procedure `java.lang.Float` `calculateIncrementForKey`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateIncrementForKey:(I)Ljava/lang/Float;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L402510.  v0:= v2.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` @kind boolean;
  #L402514.  if v0 == 0 then goto L402526;
  #L402518.  v0:= 20I;
  #L40251c.  call temp:= `calculateStepIncrement`(v2, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:(I)F` @kind direct;
  #L402522.  v0:= temp;
  #L402524.  goto L40252e;
  #L402526.  call temp:= `calculateStepIncrement`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:()F` @kind direct;
  #L40252c.  v0:= temp;
  #L40252e.  v1:= 21I;
  #L402532.  if v3 == v1 then goto L402588;
  #L402536.  v1:= 22I;
  #L40253a.  if v3 == v1 then goto L402570;
  #L40253e.  v1:= 69I;
  #L402542.  if v3 == v1 then goto L402564;
  #L402546.  v1:= 70I;
  #L40254a.  if v3 == v1 then goto L40255a;
  #L40254e.  v1:= 81I;
  #L402552.  if v3 == v1 then goto L40255a;
  #L402556.  v3:= 0I;
  #L402558.  return v3 @kind object;
  #L40255a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L402560.  v3:= temp @kind object;
  #L402562.  return v3 @kind object;
  #L402564.  v3:= -v0 @kind float;
  #L402566.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L40256c.  v3:= temp @kind object;
  #L40256e.  return v3 @kind object;
  #L402570.  call temp:= `isRtl`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L402576.  v3:= temp;
  #L402578.  if v3 == 0 then goto L40257e;
  #L40257c.  v0:= -v0 @kind float;
  #L40257e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L402584.  v3:= temp @kind object;
  #L402586.  return v3 @kind object;
  #L402588.  call temp:= `isRtl`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L40258e.  v3:= temp;
  #L402590.  if v3 == 0 then goto L402596;
  #L402594.  goto L402598;
  #L402596.  v0:= -v0 @kind float;
  #L402598.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L40259e.  v3:= temp @kind object;
  #L4025a0.  return v3 @kind object;
}
procedure `float` `calculateStepIncrement`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L401ef0.  v0:= v2.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L401ef4.  v1:= 0I;
  #L401ef6.  v1:= fcmpl(v0, v1);
  #L401efa.  if v1 != 0 then goto L401f02;
  #L401efe.  v0:= 1.0F;
  #L401f02.  return v0;
}
procedure `float` `calculateStepIncrement`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:(I)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L401f14.  call temp:= `calculateStepIncrement`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:()F` @kind direct;
  #L401f1a.  v0:= temp;
  #L401f1c.  v1:= v3.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L401f20.  v2:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L401f24.  v1:= v1 - v2 @kind float;
  #L401f26.  v1:= v1 / v0 @kind float;
  #L401f28.  v4:= (`float`) v4 @kind i2f;
  #L401f2a.  v2:= fcmpg(v1, v4);
  #L401f2e.  if v2 > 0 then goto L401f34;
  #L401f32.  return v0;
  #L401f34.  v1:= v1 / v4 @kind float;
  #L401f36.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L401f3c.  v4:= temp;
  #L401f3e.  v4:= (`float`) v4 @kind i2f;
  #L401f40.  v4:= v4 * v0 @kind float;
  #L401f44.  return v4;
}
procedure `int` `calculateTop`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTop:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40229c.  v0:= v4.`com.google.android.material.slider.BaseSlider.trackTop` @type ^`int`;
  #L4022a0.  v1:= v4.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L4022a4.  v2:= 0I;
  #L4022a6.  v3:= 1I;
  #L4022a8.  if v1 != v3 then goto L4022c4;
  #L4022ac.  v1:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4022b0.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4022b6.  v1:= temp @kind object;
  #L4022b8.  v1:= (`com.google.android.material.tooltip.TooltipDrawable`) v1 @kind object;
  #L4022bc.  call temp:= `getIntrinsicHeight`(v1) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L4022c2.  v2:= temp;
  #L4022c4.  v0:= v0 + v2 @kind int;
  #L4022c6.  return v0;
}
procedure `android.animation.ValueAnimator` `createLabelAnimator`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `boolean` v5 ) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelAnimator:(Z)Landroid/animation/ValueAnimator;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L401428.  v0:= 0I;
  #L40142a.  v1:= 1.0F;
  #L40142e.  if v5 == 0 then goto L401436;
  #L401432.  v2:= 0I;
  #L401434.  goto L40143a;
  #L401436.  v2:= 1.0F;
  #L40143a.  if v5 == 0 then goto L401444;
  #L40143e.  v3:= v4.`com.google.android.material.slider.BaseSlider.labelsOutAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L401442.  goto L401448;
  #L401444.  v3:= v4.`com.google.android.material.slider.BaseSlider.labelsInAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L401448.  call temp:= `getAnimatorCurrentValueOrDefault`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.getAnimatorCurrentValueOrDefault:(Landroid/animation/ValueAnimator;F)F` @kind static;
  #L40144e.  v2:= temp;
  #L401450.  if v5 == 0 then goto L401458;
  #L401454.  v0:= 1.0F;
  #L401458.  v1:= 2I;
  #L40145a.  v1:= new `float`[v1];
  #L40145e.  v3:= 0I;
  #L401460.  v1[v3]:= v2;
  #L401464.  v2:= 1I;
  #L401466.  v1[v2]:= v0;
  #L40146a.  call temp:= `ofFloat`(v1) @signature `Landroid/animation/ValueAnimator;.ofFloat:([F)Landroid/animation/ValueAnimator;` @kind static;
  #L401470.  v0:= temp @kind object;
  #L401472.  if v5 == 0 then goto L40147c;
  #L401476.  v1:= 83L;
  #L40147a.  goto L401480;
  #L40147c.  v1:= 117L;
  #L401480.  call temp:= `setDuration`(v0, v1) @signature `Landroid/animation/ValueAnimator;.setDuration:(J)Landroid/animation/ValueAnimator;` @kind virtual;
  #L401486.  if v5 == 0 then goto L401490;
  #L40148a.  v5:= `@@com.google.android.material.animation.AnimationUtils.DECELERATE_INTERPOLATOR` @type ^`android.animation.TimeInterpolator` @kind object;
  #L40148e.  goto L401494;
  #L401490.  v5:= `@@com.google.android.material.animation.AnimationUtils.FAST_OUT_LINEAR_IN_INTERPOLATOR` @type ^`android.animation.TimeInterpolator` @kind object;
  #L401494.  call `setInterpolator`(v0, v5) @signature `Landroid/animation/ValueAnimator;.setInterpolator:(Landroid/animation/TimeInterpolator;)V` @kind virtual;
  #L40149a.  v5:= new `com.google.android.material.slider.BaseSlider$2`;
  #L40149e.  call `<init>`(v5, v4) @signature `Lcom/google/android/material/slider/BaseSlider$2;.<init>:(Lcom/google/android/material/slider/BaseSlider;)V` @kind direct;
  #L4014a4.  call `addUpdateListener`(v0, v5) @signature `Landroid/animation/ValueAnimator;.addUpdateListener:(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V` @kind virtual;
  #L4014aa.  return v0 @kind object;
}
procedure `void` `createLabelPool`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelPool:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40296c.  v0:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L402970.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L402976.  v0:= temp;
  #L402978.  v1:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L40297c.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L402982.  v1:= temp;
  #L402984.  if v0 <= v1 then goto L4029e6;
  #L402988.  v0:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L40298c.  v1:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L402990.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L402996.  v1:= temp;
  #L402998.  v2:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L40299c.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4029a2.  v2:= temp;
  #L4029a4.  call temp:= `subList`(v0, v1, v2) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L4029aa.  v0:= temp @kind object;
  #L4029ac.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4029b2.  v1:= temp @kind object;
  #L4029b4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4029ba.  v2:= temp;
  #L4029bc.  if v2 == 0 then goto L4029e0;
  #L4029c0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4029c6.  v2:= temp @kind object;
  #L4029c8.  v2:= (`com.google.android.material.tooltip.TooltipDrawable`) v2 @kind object;
  #L4029cc.  call temp:= `isAttachedToWindow`(v4) @signature `Landroidx/core/view/ViewCompat;.isAttachedToWindow:(Landroid/view/View;)Z` @kind static;
  #L4029d2.  v3:= temp;
  #L4029d4.  if v3 == 0 then goto L4029b4;
  #L4029d8.  call `detachLabelFromContentView`(v4, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.detachLabelFromContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @kind direct;
  #L4029de.  goto L4029b4;
  #L4029e0.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4029e6.  v0:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4029ea.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4029f0.  v0:= temp;
  #L4029f2.  v1:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4029f6.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4029fc.  v1:= temp;
  #L4029fe.  if v0 >= v1 then goto L402a2c;
  #L402a02.  v0:= v4.`com.google.android.material.slider.BaseSlider.labelMaker` @type ^`com.google.android.material.slider.BaseSlider$TooltipDrawableFactory` @kind object;
  #L402a06.  call temp:= `createTooltipDrawable`(v0) @signature `Lcom/google/android/material/slider/BaseSlider$TooltipDrawableFactory;.createTooltipDrawable:()Lcom/google/android/material/tooltip/TooltipDrawable;` @kind interface;
  #L402a0c.  v0:= temp @kind object;
  #L402a0e.  v1:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L402a12.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L402a18.  call temp:= `isAttachedToWindow`(v4) @signature `Landroidx/core/view/ViewCompat;.isAttachedToWindow:(Landroid/view/View;)Z` @kind static;
  #L402a1e.  v1:= temp;
  #L402a20.  if v1 == 0 then goto L4029e6;
  #L402a24.  call `attachLabelToContentView`(v4, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.attachLabelToContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @kind direct;
  #L402a2a.  goto L4029e6;
  #L402a2c.  v0:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L402a30.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L402a36.  v0:= temp;
  #L402a38.  v1:= 1I;
  #L402a3a.  if v0 != v1 then goto L402a40;
  #L402a3e.  v1:= 0I;
  #L402a40.  v0:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L402a44.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L402a4a.  v0:= temp @kind object;
  #L402a4c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L402a52.  v2:= temp;
  #L402a54.  if v2 == 0 then goto L402a6e;
  #L402a58.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L402a5e.  v2:= temp @kind object;
  #L402a60.  v2:= (`com.google.android.material.tooltip.TooltipDrawable`) v2 @kind object;
  #L402a64.  v3:= (`float`) v1 @kind i2f;
  #L402a66.  call `setStrokeWidth`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind virtual;
  #L402a6c.  goto L402a4c;
  #L402a6e.  return @kind void;
}
procedure `void` `detachLabelFromContentView`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.tooltip.TooltipDrawable` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.detachLabelFromContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L402a80.  call temp:= `getContentViewOverlay`(v1) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentViewOverlay:(Landroid/view/View;)Lcom/google/android/material/internal/ViewOverlayImpl;` @kind static;
  #L402a86.  v0:= temp @kind object;
  #L402a88.  if v0 == 0 then goto L402aa0;
  #L402a8c.  call `remove`(v0, v2) @signature `Lcom/google/android/material/internal/ViewOverlayImpl;.remove:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L402a92.  call temp:= `getContentView`(v1) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentView:(Landroid/view/View;)Landroid/view/ViewGroup;` @kind static;
  #L402a98.  v0:= temp @kind object;
  #L402a9a.  call `detachView`(v2, v0) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.detachView:(Landroid/view/View;)V` @kind virtual;
  #L402aa0.  return @kind void;
}
procedure `float` `dimenToValue`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/slider/BaseSlider;.dimenToValue:(F)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L401f58.  v0:= 0I;
  #L401f5a.  v1:= fcmpl(v3, v0);
  #L401f5e.  if v1 != 0 then goto L401f64;
  #L401f62.  return v0;
  #L401f64.  v0:= v2.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L401f68.  v0:= (`float`) v0 @kind i2f;
  #L401f6a.  v3:= v3 - v0 @kind float;
  #L401f6c.  v0:= v2.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L401f70.  v0:= (`float`) v0 @kind i2f;
  #L401f72.  v3:= v3 / v0 @kind float;
  #L401f74.  v0:= v2.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L401f78.  v1:= v2.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L401f7c.  v1:= v0 - v1 @kind float;
  #L401f80.  v3:= v3 * v1 @kind float;
  #L401f84.  v3:= v3 + v0 @kind float;
  #L401f86.  return v3;
}
procedure `void` `dispatchOnChangedFromUser`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `int` v5 ) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchOnChangedFromUser:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L402ab4.  v0:= v4.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L402ab8.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L402abe.  v0:= temp @kind object;
  #L402ac0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L402ac6.  v1:= temp;
  #L402ac8.  if v1 == 0 then goto L402afa;
  #L402acc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L402ad2.  v1:= temp @kind object;
  #L402ad4.  v1:= (`com.google.android.material.slider.BaseOnChangeListener`) v1 @kind object;
  #L402ad8.  v2:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L402adc.  call temp:= `get`(v2, v5) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L402ae2.  v2:= temp @kind object;
  #L402ae4.  v2:= (`java.lang.Float`) v2 @kind object;
  #L402ae8.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L402aee.  v2:= temp;
  #L402af0.  v3:= 1I;
  #L402af2.  call `onValueChange`(v1, v4, v2, v3) @signature `Lcom/google/android/material/slider/BaseOnChangeListener;.onValueChange:(Ljava/lang/Object;FZ)V` @kind interface;
  #L402af8.  goto L402ac0;
  #L402afa.  v0:= v4.`com.google.android.material.slider.BaseSlider.accessibilityManager` @type ^`android.view.accessibility.AccessibilityManager` @kind object;
  #L402afe.  if v0 == 0 then goto L402b14;
  #L402b02.  call temp:= `isEnabled`(v0) @signature `Landroid/view/accessibility/AccessibilityManager;.isEnabled:()Z` @kind virtual;
  #L402b08.  v0:= temp;
  #L402b0a.  if v0 == 0 then goto L402b14;
  #L402b0e.  call `scheduleAccessibilityEventSender`(v4, v5) @signature `Lcom/google/android/material/slider/BaseSlider;.scheduleAccessibilityEventSender:(I)V` @kind direct;
  #L402b14.  return @kind void;
}
procedure `void` `dispatchOnChangedProgramatically`(`com.google.android.material.slider.BaseSlider` v5 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchOnChangedProgramatically:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L402b28.  v0:= v5.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L402b2c.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L402b32.  v0:= temp @kind object;
  #L402b34.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L402b3a.  v1:= temp;
  #L402b3c.  if v1 == 0 then goto L402b82;
  #L402b40.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L402b46.  v1:= temp @kind object;
  #L402b48.  v1:= (`com.google.android.material.slider.BaseOnChangeListener`) v1 @kind object;
  #L402b4c.  v2:= v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L402b50.  call temp:= `iterator`(v2) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L402b56.  v2:= temp @kind object;
  #L402b58.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L402b5e.  v3:= temp;
  #L402b60.  if v3 == 0 then goto L402b34;
  #L402b64.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L402b6a.  v3:= temp @kind object;
  #L402b6c.  v3:= (`java.lang.Float`) v3 @kind object;
  #L402b70.  call temp:= `floatValue`(v3) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L402b76.  v3:= temp;
  #L402b78.  v4:= 0I;
  #L402b7a.  call `onValueChange`(v1, v5, v3, v4) @signature `Lcom/google/android/material/slider/BaseOnChangeListener;.onValueChange:(Ljava/lang/Object;FZ)V` @kind interface;
  #L402b80.  goto L402b58;
  #L402b82.  return @kind void;
}
procedure `void` `drawActiveTrack`(`com.google.android.material.slider.BaseSlider` v10 @kind this, `android.graphics.Canvas` v11 @kind object, `int` v12 , `int` v13 ) @signature `Lcom/google/android/material/slider/BaseSlider;.drawActiveTrack:(Landroid/graphics/Canvas;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L402b94.  call temp:= `getActiveRange`(v10) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveRange:()[F` @kind direct;
  #L402b9a.  v0:= temp @kind object;
  #L402b9c.  v1:= v10.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L402ba0.  v2:= (`float`) v1 @kind i2f;
  #L402ba2.  v3:= 1I;
  #L402ba4.  v3:= v0[v3];
  #L402ba8.  v12:= (`float`) v12 @kind i2f;
  #L402baa.  v3:= v3 * v12 @kind float;
  #L402bae.  v7:= v2 + v3 @kind float;
  #L402bb2.  v1:= (`float`) v1 @kind i2f;
  #L402bb4.  v2:= 0I;
  #L402bb6.  v0:= v0[v2];
  #L402bba.  v0:= v0 * v12 @kind float;
  #L402bbe.  v5:= v1 + v0 @kind float;
  #L402bc2.  v8:= (`float`) v13 @kind i2f;
  #L402bc4.  v9:= v10.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L402bc8.  v4:= v11 @kind object;
  #L402bca.  v6:= v8;
  #L402bcc.  call `drawLine`(v4, v5, v6, v7, v8, v9) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L402bd2.  return @kind void;
}
procedure `void` `drawInactiveTrack`(`com.google.android.material.slider.BaseSlider` v11 @kind this, `android.graphics.Canvas` v12 @kind object, `int` v13 , `int` v14 ) @signature `Lcom/google/android/material/slider/BaseSlider;.drawInactiveTrack:(Landroid/graphics/Canvas;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L402be4.  call temp:= `getActiveRange`(v11) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveRange:()[F` @kind direct;
  #L402bea.  v0:= temp @kind object;
  #L402bec.  v1:= v11.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L402bf0.  v2:= (`float`) v1 @kind i2f;
  #L402bf2.  v3:= 1I;
  #L402bf4.  v3:= v0[v3];
  #L402bf8.  v4:= (`float`) v13 @kind i2f;
  #L402bfa.  v3:= v3 * v4 @kind float;
  #L402bfe.  v6:= v2 + v3 @kind float;
  #L402c02.  v2:= v1 + v13 @kind int;
  #L402c06.  v2:= (`float`) v2 @kind i2f;
  #L402c08.  v2:= fcmpg(v6, v2);
  #L402c0c.  if v2 >= 0 then goto L402c24;
  #L402c10.  v9:= (`float`) v14 @kind i2f;
  #L402c12.  v1:= v1 + v13 @kind int;
  #L402c14.  v8:= (`float`) v1 @kind i2f;
  #L402c16.  v10:= v11.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L402c1a.  v5:= v12 @kind object;
  #L402c1c.  v7:= v9;
  #L402c1e.  call `drawLine`(v5, v6, v7, v8, v9, v10) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L402c24.  v13:= v11.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L402c28.  v1:= (`float`) v13 @kind i2f;
  #L402c2a.  v2:= 0I;
  #L402c2c.  v0:= v0[v2];
  #L402c30.  v0:= v0 * v4 @kind float;
  #L402c34.  v5:= v1 + v0 @kind float;
  #L402c38.  v0:= (`float`) v13 @kind i2f;
  #L402c3a.  v0:= fcmpl(v5, v0);
  #L402c3e.  if v0 <= 0 then goto L402c54;
  #L402c42.  v3:= (`float`) v13 @kind i2f;
  #L402c44.  v6:= (`float`) v14 @kind i2f;
  #L402c46.  v7:= v11.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L402c4a.  v2:= v12 @kind object;
  #L402c4c.  v4:= v6;
  #L402c4e.  call `drawLine`(v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L402c54.  return @kind void;
}
procedure `void` `drawThumbs`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/google/android/material/slider/BaseSlider;.drawThumbs:(Landroid/graphics/Canvas;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L402c68.  call temp:= `isEnabled`(v5) @signature `Landroid/view/View;.isEnabled:()Z` @kind virtual;
  #L402c6e.  v0:= temp;
  #L402c70.  if v0 != 0 then goto L402cca;
  #L402c74.  v0:= v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L402c78.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L402c7e.  v0:= temp @kind object;
  #L402c80.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L402c86.  v1:= temp;
  #L402c88.  if v1 == 0 then goto L402cca;
  #L402c8c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L402c92.  v1:= temp @kind object;
  #L402c94.  v1:= (`java.lang.Float`) v1 @kind object;
  #L402c98.  v2:= v5.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L402c9c.  v2:= (`float`) v2 @kind i2f;
  #L402c9e.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L402ca4.  v1:= temp;
  #L402ca6.  call temp:= `normalizeValue`(v5, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L402cac.  v1:= temp;
  #L402cae.  v3:= (`float`) v7 @kind i2f;
  #L402cb0.  v1:= v1 * v3 @kind float;
  #L402cb4.  v2:= v2 + v1 @kind float;
  #L402cb6.  v1:= (`float`) v8 @kind i2f;
  #L402cb8.  v3:= v5.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L402cbc.  v3:= (`float`) v3 @kind i2f;
  #L402cbe.  v4:= v5.`com.google.android.material.slider.BaseSlider.thumbPaint` @type ^`android.graphics.Paint` @kind object;
  #L402cc2.  call `drawCircle`(v6, v2, v1, v3, v4) @signature `Landroid/graphics/Canvas;.drawCircle:(FFFLandroid/graphics/Paint;)V` @kind virtual;
  #L402cc8.  goto L402c80;
  #L402cca.  v0:= v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L402cce.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L402cd4.  v0:= temp @kind object;
  #L402cd6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L402cdc.  v1:= temp;
  #L402cde.  if v1 == 0 then goto L402d38;
  #L402ce2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L402ce8.  v1:= temp @kind object;
  #L402cea.  v1:= (`java.lang.Float`) v1 @kind object;
  #L402cee.  call temp:= `save`(v6) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L402cf4.  v2:= v5.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L402cf8.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L402cfe.  v1:= temp;
  #L402d00.  call temp:= `normalizeValue`(v5, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L402d06.  v1:= temp;
  #L402d08.  v3:= (`float`) v7 @kind i2f;
  #L402d0a.  v1:= v1 * v3 @kind float;
  #L402d0e.  v1:= (`int`) v1 @kind f2i;
  #L402d10.  v2:= v2 + v1 @kind int;
  #L402d12.  v1:= v5.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L402d16.  v2:= v2 - v1 @kind int;
  #L402d18.  v2:= (`float`) v2 @kind i2f;
  #L402d1a.  v1:= v8 - v1 @kind int;
  #L402d1e.  v1:= (`float`) v1 @kind i2f;
  #L402d20.  call `translate`(v6, v2, v1) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L402d26.  v1:= v5.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L402d2a.  call `draw`(v1, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L402d30.  call `restore`(v6) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L402d36.  goto L402cd6;
  #L402d38.  return @kind void;
}
procedure `void` `ensureLabelsAdded`(`com.google.android.material.slider.BaseSlider` v7 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsAdded:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L402e44.  v0:= v7.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L402e48.  v1:= 2I;
  #L402e4a.  if v0 != v1 then goto L402e50;
  #L402e4e.  return @kind void;
  #L402e50.  v0:= v7.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` @kind boolean;
  #L402e54.  v2:= 1I;
  #L402e56.  if v0 != 0 then goto L402e76;
  #L402e5a.  v7.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` := v2 @kind boolean;
  #L402e5e.  call temp:= `createLabelAnimator`(v7, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelAnimator:(Z)Landroid/animation/ValueAnimator;` @kind direct;
  #L402e64.  v0:= temp @kind object;
  #L402e66.  v7.`com.google.android.material.slider.BaseSlider.labelsInAnimator` @type ^`android.animation.ValueAnimator` := v0 @kind object;
  #L402e6a.  v3:= 0I;
  #L402e6c.  v7.`com.google.android.material.slider.BaseSlider.labelsOutAnimator` @type ^`android.animation.ValueAnimator` := v3 @kind object;
  #L402e70.  call `start`(v0) @signature `Landroid/animation/ValueAnimator;.start:()V` @kind virtual;
  #L402e76.  v0:= v7.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L402e7a.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L402e80.  v0:= temp @kind object;
  #L402e82.  v3:= 0I;
  #L402e84.  v4:= 0I;
  #L402e86.  v5:= v7.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L402e8a.  call temp:= `size`(v5) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L402e90.  v5:= temp;
  #L402e92.  if v4 >= v5 then goto L402edc;
  #L402e96.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L402e9c.  v5:= temp;
  #L402e9e.  if v5 == 0 then goto L402edc;
  #L402ea2.  v5:= v7.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L402ea6.  if v4 != v5 then goto L402eac;
  #L402eaa.  goto L402ed6;
  #L402eac.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L402eb2.  v5:= temp @kind object;
  #L402eb4.  v5:= (`com.google.android.material.tooltip.TooltipDrawable`) v5 @kind object;
  #L402eb8.  v6:= v7.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L402ebc.  call temp:= `get`(v6, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L402ec2.  v6:= temp @kind object;
  #L402ec4.  v6:= (`java.lang.Float`) v6 @kind object;
  #L402ec8.  call temp:= `floatValue`(v6) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L402ece.  v6:= temp;
  #L402ed0.  call `setValueForLabel`(v7, v5, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueForLabel:(Lcom/google/android/material/tooltip/TooltipDrawable;F)V` @kind direct;
  #L402ed6.  v4:= v4 + 1;
  #L402eda.  goto L402e86;
  #L402edc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L402ee2.  v4:= temp;
  #L402ee4.  if v4 == 0 then goto L402f18;
  #L402ee8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L402eee.  v0:= temp @kind object;
  #L402ef0.  v0:= (`com.google.android.material.tooltip.TooltipDrawable`) v0 @kind object;
  #L402ef4.  v1:= v7.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L402ef8.  v2:= v7.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L402efc.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L402f02.  v1:= temp @kind object;
  #L402f04.  v1:= (`java.lang.Float`) v1 @kind object;
  #L402f08.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L402f0e.  v1:= temp;
  #L402f10.  call `setValueForLabel`(v7, v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueForLabel:(Lcom/google/android/material/tooltip/TooltipDrawable;F)V` @kind direct;
  #L402f16.  return @kind void;
  #L402f18.  v0:= new `java.lang.IllegalStateException`;
  #L402f1c.  v1:= new `java.lang.Object`[v1];
  #L402f20.  v4:= v7.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L402f24.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L402f2a.  v4:= temp;
  #L402f2c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L402f32.  v4:= temp @kind object;
  #L402f34.  v1[v3]:= v4 @kind object;
  #L402f38.  v3:= v7.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L402f3c.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L402f42.  v3:= temp;
  #L402f44.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L402f4a.  v3:= temp @kind object;
  #L402f4c.  v1[v2]:= v3 @kind object;
  #L402f50.  v2:= "Not enough labels(%d) to display all the values(%d)" @kind object;
  #L402f54.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L402f5a.  v1:= temp @kind object;
  #L402f5c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L402f62.  throw v0;
}
procedure `void` `ensureLabelsRemoved`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsRemoved:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L402f74.  v0:= v2.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` @kind boolean;
  #L402f78.  if v0 == 0 then goto L402fae;
  #L402f7c.  v0:= 0I;
  #L402f7e.  v2.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` := v0 @kind boolean;
  #L402f82.  call temp:= `createLabelAnimator`(v2, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelAnimator:(Z)Landroid/animation/ValueAnimator;` @kind direct;
  #L402f88.  v0:= temp @kind object;
  #L402f8a.  v2.`com.google.android.material.slider.BaseSlider.labelsOutAnimator` @type ^`android.animation.ValueAnimator` := v0 @kind object;
  #L402f8e.  v1:= 0I;
  #L402f90.  v2.`com.google.android.material.slider.BaseSlider.labelsInAnimator` @type ^`android.animation.ValueAnimator` := v1 @kind object;
  #L402f94.  v1:= new `com.google.android.material.slider.BaseSlider$3`;
  #L402f98.  call `<init>`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider$3;.<init>:(Lcom/google/android/material/slider/BaseSlider;)V` @kind direct;
  #L402f9e.  call `addListener`(v0, v1) @signature `Landroid/animation/ValueAnimator;.addListener:(Landroid/animation/Animator$AnimatorListener;)V` @kind virtual;
  #L402fa4.  v0:= v2.`com.google.android.material.slider.BaseSlider.labelsOutAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L402fa8.  call `start`(v0) @signature `Landroid/animation/ValueAnimator;.start:()V` @kind virtual;
  #L402fae.  return @kind void;
}
procedure `void` `focusThumbOnFocusGained`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/material/slider/BaseSlider;.focusThumbOnFocusGained:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L402fc0.  v0:= 1I;
  #L402fc2.  v1:= 2147483647I;
  #L402fc8.  if v4 == v0 then goto L403000;
  #L402fcc.  v0:= 2I;
  #L402fce.  v2:= -2147483648I;
  #L402fd2.  if v4 == v0 then goto L402ff8;
  #L402fd6.  v0:= 17I;
  #L402fda.  if v4 == v0 then goto L402ff0;
  #L402fde.  v0:= 66I;
  #L402fe2.  if v4 == v0 then goto L402fe8;
  #L402fe6.  goto L403006;
  #L402fe8.  call temp:= `moveFocusInAbsoluteDirection`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @kind direct;
  #L402fee.  goto L403006;
  #L402ff0.  call temp:= `moveFocusInAbsoluteDirection`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @kind direct;
  #L402ff6.  goto L403006;
  #L402ff8.  call temp:= `moveFocus`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L402ffe.  goto L403006;
  #L403000.  call temp:= `moveFocus`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L403006.  return @kind void;
}
procedure `java.lang.String` `formatValue`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `float` v4 ) @signature `Lcom/google/android/material/slider/BaseSlider;.formatValue:(F)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4025d0.  call temp:= `hasLabelFormatter`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.hasLabelFormatter:()Z` @kind virtual;
  #L4025d6.  v0:= temp;
  #L4025d8.  if v0 == 0 then goto L4025ea;
  #L4025dc.  v0:= v3.`com.google.android.material.slider.BaseSlider.formatter` @type ^`com.google.android.material.slider.LabelFormatter` @kind object;
  #L4025e0.  call temp:= `getFormattedValue`(v0, v4) @signature `Lcom/google/android/material/slider/LabelFormatter;.getFormattedValue:(F)Ljava/lang/String;` @kind interface;
  #L4025e6.  v4:= temp @kind object;
  #L4025e8.  return v4 @kind object;
  #L4025ea.  v0:= (`int`) v4 @kind f2i;
  #L4025ec.  v0:= (`float`) v0 @kind i2f;
  #L4025ee.  v0:= fcmpl(v0, v4);
  #L4025f2.  if v0 != 0 then goto L4025fc;
  #L4025f6.  v0:= "%.0f" @kind object;
  #L4025fa.  goto L402600;
  #L4025fc.  v0:= "%.2f" @kind object;
  #L402600.  v1:= 1I;
  #L402602.  v1:= new `java.lang.Object`[v1];
  #L402606.  v2:= 0I;
  #L402608.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L40260e.  v4:= temp @kind object;
  #L402610.  v1[v2]:= v4 @kind object;
  #L402614.  call temp:= `format`(v0, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L40261a.  v4:= temp @kind object;
  #L40261c.  return v4 @kind object;
}
procedure `float`[] `getActiveRange`(`com.google.android.material.slider.BaseSlider` v6 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveRange:()[F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L402200.  call temp:= `getValues`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @kind virtual;
  #L402206.  v0:= temp @kind object;
  #L402208.  call temp:= `max`(v0) @signature `Ljava/util/Collections;.max:(Ljava/util/Collection;)Ljava/lang/Object;` @kind static;
  #L40220e.  v0:= temp @kind object;
  #L402210.  v0:= (`java.lang.Float`) v0 @kind object;
  #L402214.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L40221a.  v0:= temp;
  #L40221c.  call temp:= `getValues`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @kind virtual;
  #L402222.  v1:= temp @kind object;
  #L402224.  call temp:= `min`(v1) @signature `Ljava/util/Collections;.min:(Ljava/util/Collection;)Ljava/lang/Object;` @kind static;
  #L40222a.  v1:= temp @kind object;
  #L40222c.  v1:= (`java.lang.Float`) v1 @kind object;
  #L402230.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L402236.  v1:= temp;
  #L402238.  v2:= v6.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L40223c.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L402242.  v2:= temp;
  #L402244.  v3:= 1I;
  #L402246.  if v2 != v3 then goto L40224e;
  #L40224a.  v1:= v6.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L40224e.  call temp:= `normalizeValue`(v6, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L402254.  v1:= temp;
  #L402256.  call temp:= `normalizeValue`(v6, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L40225c.  v0:= temp;
  #L40225e.  call temp:= `isRtl`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L402264.  v2:= temp;
  #L402266.  v4:= 0I;
  #L402268.  v5:= 2I;
  #L40226a.  if v2 == 0 then goto L40227c;
  #L40226e.  v2:= new `float`[v5];
  #L402272.  v2[v4]:= v0;
  #L402276.  v2[v3]:= v1;
  #L40227a.  goto L402288;
  #L40227c.  v2:= new `float`[v5];
  #L402280.  v2[v4]:= v1;
  #L402284.  v2[v3]:= v0;
  #L402288.  return v2 @kind object;
}
procedure `float` `getAnimatorCurrentValueOrDefault`(`android.animation.ValueAnimator` v1 @kind object, `float` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.getAnimatorCurrentValueOrDefault:(Landroid/animation/ValueAnimator;F)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L401f98.  if v1 == 0 then goto L401fc2;
  #L401f9c.  call temp:= `isRunning`(v1) @signature `Landroid/animation/ValueAnimator;.isRunning:()Z` @kind virtual;
  #L401fa2.  v0:= temp;
  #L401fa4.  if v0 == 0 then goto L401fc2;
  #L401fa8.  call temp:= `getAnimatedValue`(v1) @signature `Landroid/animation/ValueAnimator;.getAnimatedValue:()Ljava/lang/Object;` @kind virtual;
  #L401fae.  v2:= temp @kind object;
  #L401fb0.  v2:= (`java.lang.Float`) v2 @kind object;
  #L401fb4.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L401fba.  v2:= temp;
  #L401fbc.  call `cancel`(v1) @signature `Landroid/animation/ValueAnimator;.cancel:()V` @kind virtual;
  #L401fc2.  return v2;
}
procedure `float` `getClampedValue`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 , `float` v5 ) @signature `Lcom/google/android/material/slider/BaseSlider;.getClampedValue:(IF)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L401fd4.  v0:= v3.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L401fd8.  v1:= 0I;
  #L401fda.  v0:= fcmpl(v0, v1);
  #L401fde.  if v0 != 0 then goto L401fea;
  #L401fe2.  call temp:= `getMinSeparation`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getMinSeparation:()F` @kind virtual;
  #L401fe8.  v1:= temp;
  #L401fea.  v0:= v3.`com.google.android.material.slider.BaseSlider.separationUnit` @type ^`int`;
  #L401fee.  if v0 != 0 then goto L401ffa;
  #L401ff2.  call temp:= `dimenToValue`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.dimenToValue:(F)F` @kind direct;
  #L401ff8.  v1:= temp;
  #L401ffa.  call temp:= `isRtl`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L402000.  v0:= temp;
  #L402002.  if v0 == 0 then goto L402008;
  #L402006.  v1:= -v1 @kind float;
  #L402008.  v0:= v4 + 1;
  #L40200c.  v2:= v3.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L402010.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L402016.  v2:= temp;
  #L402018.  if v0 < v2 then goto L402022;
  #L40201c.  v0:= v3.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L402020.  goto L40203c;
  #L402022.  v2:= v3.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L402026.  call temp:= `get`(v2, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L40202c.  v0:= temp @kind object;
  #L40202e.  v0:= (`java.lang.Float`) v0 @kind object;
  #L402032.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L402038.  v0:= temp;
  #L40203a.  v0:= v0 - v1 @kind float;
  #L40203c.  v4:= v4 + -1;
  #L402040.  if v4 >= 0 then goto L40204a;
  #L402044.  v4:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L402048.  goto L402064;
  #L40204a.  v2:= v3.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L40204e.  call temp:= `get`(v2, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L402054.  v4:= temp @kind object;
  #L402056.  v4:= (`java.lang.Float`) v4 @kind object;
  #L40205a.  call temp:= `floatValue`(v4) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L402060.  v4:= temp;
  #L402062.  v4:= v4 + v1 @kind float;
  #L402064.  call temp:= `clamp`(v5, v4, v0) @signature `Landroidx/core/math/MathUtils;.clamp:(FFF)F` @kind static;
  #L40206a.  v4:= temp;
  #L40206c.  return v4;
}
procedure `int` `getColorForState`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L402310.  call temp:= `getDrawableState`(v2) @signature `Landroid/view/View;.getDrawableState:()[I` @kind virtual;
  #L402316.  v0:= temp @kind object;
  #L402318.  call temp:= `getDefaultColor`(v3) @signature `Landroid/content/res/ColorStateList;.getDefaultColor:()I` @kind virtual;
  #L40231e.  v1:= temp;
  #L402320.  call temp:= `getColorForState`(v3, v0, v1) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L402326.  v3:= temp;
  #L402328.  return v3;
}
procedure `float` `getValueOfTouchPosition`(`com.google.android.material.slider.BaseSlider` v6 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueOfTouchPosition:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L402104.  v0:= v6.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float`;
  #L402108.  call temp:= `snapPosition`(v6, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.snapPosition:(F)D` @kind direct;
  #L40210e.  v0:= temp @kind wide;
  #L402110.  call temp:= `isRtl`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L402116.  v2:= temp;
  #L402118.  if v2 == 0 then goto L402124;
  #L40211c.  v2:= 1.0D;
  #L402120.  v0:= v2 - v0 @kind double;
  #L402124.  v2:= v6.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L402128.  v3:= v6.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L40212c.  v2:= v2 - v3 @kind float;
  #L40212e.  v4:= (`double`) v2 @kind f2d;
  #L402130.  v0:= v0 * v4 @kind double;
  #L402134.  v2:= (`double`) v3 @kind f2d;
  #L402136.  v0:= v0 + v2 @kind double;
  #L402138.  v0:= (`float`) v0 @kind d2f;
  #L40213a.  return v0;
}
procedure `float` `getValueOfTouchPositionAbsolute`(`com.google.android.material.slider.BaseSlider` v3 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueOfTouchPositionAbsolute:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L40214c.  v0:= v3.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float`;
  #L402150.  call temp:= `isRtl`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L402156.  v1:= temp;
  #L402158.  if v1 == 0 then goto L402164;
  #L40215c.  v1:= 1.0F;
  #L402160.  v0:= v1 - v0 @kind float;
  #L402164.  v1:= v3.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L402168.  v2:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L40216c.  v1:= v1 - v2 @kind float;
  #L40216e.  v0:= v0 * v1 @kind float;
  #L402172.  v0:= v0 + v2 @kind float;
  #L402174.  return v0;
}
procedure `void` `invalidateTrack`(`com.google.android.material.slider.BaseSlider` v3 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidateTrack:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L403030.  v0:= v3.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L403034.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L403038.  v1:= (`float`) v1 @kind i2f;
  #L40303a.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L403040.  v0:= v3.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L403044.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L403048.  v1:= (`float`) v1 @kind i2f;
  #L40304a.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L403050.  v0:= v3.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L403054.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L403058.  v1:= (`float`) v1 @kind i2f;
  #L40305a.  v2:= 2.0F;
  #L40305e.  v1:= v1 / v2 @kind float;
  #L403060.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L403066.  v0:= v3.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L40306a.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L40306e.  v1:= (`float`) v1 @kind i2f;
  #L403070.  v1:= v1 / v2 @kind float;
  #L403072.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L403078.  return @kind void;
}
procedure `boolean` `isInVerticalScrollingContainer`(`com.google.android.material.slider.BaseSlider` v5 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.isInVerticalScrollingContainer:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4016d8.  call temp:= `getParent`(v5) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L4016de.  v0:= temp @kind object;
  #L4016e0.  v1:= instanceof @variable v0 @type ^`android.view.ViewGroup` @kind boolean;
  #L4016e4.  v2:= 0I;
  #L4016e6.  if v1 == 0 then goto L40172a;
  #L4016ea.  v1:= v0 @kind object;
  #L4016ec.  v1:= (`android.view.ViewGroup`) v1 @kind object;
  #L4016f0.  v3:= 1I;
  #L4016f2.  call temp:= `canScrollVertically`(v1, v3) @signature `Landroid/view/ViewGroup;.canScrollVertically:(I)Z` @kind virtual;
  #L4016f8.  v4:= temp;
  #L4016fa.  if v4 != 0 then goto L40170c;
  #L4016fe.  v4:= -1I;
  #L401700.  call temp:= `canScrollVertically`(v1, v4) @signature `Landroid/view/ViewGroup;.canScrollVertically:(I)Z` @kind virtual;
  #L401706.  v4:= temp;
  #L401708.  if v4 == 0 then goto L40170e;
  #L40170c.  v2:= 1I;
  #L40170e.  if v2 == 0 then goto L401720;
  #L401712.  call temp:= `shouldDelayChildPressedState`(v1) @signature `Landroid/view/ViewGroup;.shouldDelayChildPressedState:()Z` @kind virtual;
  #L401718.  v1:= temp;
  #L40171a.  if v1 == 0 then goto L401720;
  #L40171e.  return v3;
  #L401720.  call temp:= `getParent`(v0) @signature `Landroid/view/ViewParent;.getParent:()Landroid/view/ViewParent;` @kind interface;
  #L401726.  v0:= temp @kind object;
  #L401728.  goto L4016e0;
  #L40172a.  return v2;
}
procedure `void` `loadResources`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.Resources` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.loadResources:(Landroid/content/res/Resources;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L40308c.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_widget_height` @type ^`int`;
  #L403090.  call temp:= `getDimensionPixelSize`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L403096.  v0:= temp;
  #L403098.  v1.`com.google.android.material.slider.BaseSlider.widgetHeight` @type ^`int` := v0;
  #L40309c.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_track_side_padding` @type ^`int`;
  #L4030a0.  call temp:= `getDimensionPixelOffset`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L4030a6.  v0:= temp;
  #L4030a8.  v1.`com.google.android.material.slider.BaseSlider.minTrackSidePadding` @type ^`int` := v0;
  #L4030ac.  v1.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int` := v0;
  #L4030b0.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_thumb_radius` @type ^`int`;
  #L4030b4.  call temp:= `getDimensionPixelSize`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L4030ba.  v0:= temp;
  #L4030bc.  v1.`com.google.android.material.slider.BaseSlider.defaultThumbRadius` @type ^`int` := v0;
  #L4030c0.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_track_top` @type ^`int`;
  #L4030c4.  call temp:= `getDimensionPixelOffset`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L4030ca.  v0:= temp;
  #L4030cc.  v1.`com.google.android.material.slider.BaseSlider.trackTop` @type ^`int` := v0;
  #L4030d0.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_label_padding` @type ^`int`;
  #L4030d4.  call temp:= `getDimensionPixelSize`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L4030da.  v2:= temp;
  #L4030dc.  v1.`com.google.android.material.slider.BaseSlider.labelPadding` @type ^`int` := v2;
  #L4030e0.  return @kind void;
}
procedure `void` `maybeCalculateTicksCoordinates`(`com.google.android.material.slider.BaseSlider` v6 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeCalculateTicksCoordinates:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4030f4.  v0:= v6.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4030f8.  v1:= 0I;
  #L4030fa.  v0:= fcmpg(v0, v1);
  #L4030fe.  if v0 > 0 then goto L403104;
  #L403102.  return @kind void;
  #L403104.  call `validateConfigurationIfDirty`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.validateConfigurationIfDirty:()V` @kind direct;
  #L40310a.  v0:= v6.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L40310e.  v1:= v6.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L403112.  v0:= v0 - v1 @kind float;
  #L403114.  v1:= v6.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L403118.  v0:= v0 / v1 @kind float;
  #L40311a.  v1:= 1.0F;
  #L40311e.  v0:= v0 + v1 @kind float;
  #L403120.  v0:= (`int`) v0 @kind f2i;
  #L403122.  v1:= v6.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L403126.  v2:= v6.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L40312a.  v2:= v2 * 2;
  #L40312e.  v1:= v1 / v2 @kind int;
  #L403130.  v1:= v1 + 1;
  #L403134.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L40313a.  v0:= temp;
  #L40313c.  v1:= v6.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L403140.  if v1 == 0 then goto L40314e;
  #L403144.  v1:= length @variable v1;
  #L403146.  v2:= v0 * 2;
  #L40314a.  if v1 == v2 then goto L40315a;
  #L40314e.  v1:= v0 * 2;
  #L403152.  v1:= new `float`[v1];
  #L403156.  v6.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] := v1 @kind object;
  #L40315a.  v1:= v6.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L40315e.  v1:= (`float`) v1 @kind i2f;
  #L403160.  v2:= v0 + -1;
  #L403164.  v2:= (`float`) v2 @kind i2f;
  #L403166.  v1:= v1 / v2 @kind float;
  #L403168.  v2:= 0I;
  #L40316a.  v3:= v0 * 2;
  #L40316e.  if v2 >= v3 then goto L4031a4;
  #L403172.  v3:= v6.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L403176.  v4:= v6.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L40317a.  v4:= (`float`) v4 @kind i2f;
  #L40317c.  v5:= v2 / 2;
  #L403180.  v5:= (`float`) v5 @kind i2f;
  #L403182.  v5:= v5 * v1 @kind float;
  #L403186.  v4:= v4 + v5 @kind float;
  #L403188.  v3[v2]:= v4;
  #L40318c.  v4:= v2 + 1;
  #L403190.  call temp:= `calculateTop`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTop:()I` @kind direct;
  #L403196.  v5:= temp;
  #L403198.  v5:= (`float`) v5 @kind i2f;
  #L40319a.  v3[v4]:= v5;
  #L40319e.  v2:= v2 + 2;
  #L4031a2.  goto L40316a;
  #L4031a4.  return @kind void;
}
procedure `void` `maybeDrawHalo`(`com.google.android.material.slider.BaseSlider` v8 @kind this, `android.graphics.Canvas` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeDrawHalo:(Landroid/graphics/Canvas;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4031b8.  call temp:= `shouldDrawCompatHalo`(v8) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @kind direct;
  #L4031be.  v0:= temp;
  #L4031c0.  if v0 == 0 then goto L40323e;
  #L4031c4.  v0:= v8.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4031c8.  v0:= (`float`) v0 @kind i2f;
  #L4031ca.  v1:= v8.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4031ce.  v2:= v8.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L4031d2.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4031d8.  v1:= temp @kind object;
  #L4031da.  v1:= (`java.lang.Float`) v1 @kind object;
  #L4031de.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4031e4.  v1:= temp;
  #L4031e6.  call temp:= `normalizeValue`(v8, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L4031ec.  v1:= temp;
  #L4031ee.  v10:= (`float`) v10 @kind i2f;
  #L4031f0.  v1:= v1 * v10 @kind float;
  #L4031f4.  v0:= v0 + v1 @kind float;
  #L4031f6.  v10:= (`int`) v0 @kind f2i;
  #L4031f8.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4031fc.  v1:= 28I;
  #L403200.  if v0 >= v1 then goto L40322a;
  #L403204.  v0:= v8.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L403208.  v1:= v10 - v0 @kind int;
  #L40320c.  v3:= (`float`) v1 @kind i2f;
  #L40320e.  v1:= v11 - v0 @kind int;
  #L403212.  v4:= (`float`) v1 @kind i2f;
  #L403214.  v1:= v10 + v0 @kind int;
  #L403218.  v5:= (`float`) v1 @kind i2f;
  #L40321a.  v0:= v0 + v11 @kind int;
  #L40321c.  v6:= (`float`) v0 @kind i2f;
  #L40321e.  v7:= `@@android.graphics.Region$Op.UNION` @type ^`android.graphics.Region$Op` @kind object;
  #L403222.  v2:= v9 @kind object;
  #L403224.  call temp:= `clipRect`(v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Canvas;.clipRect:(FFFFLandroid/graphics/Region$Op;)Z` @kind virtual;
  #L40322a.  v10:= (`float`) v10 @kind i2f;
  #L40322c.  v11:= (`float`) v11 @kind i2f;
  #L40322e.  v0:= v8.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L403232.  v0:= (`float`) v0 @kind i2f;
  #L403234.  v1:= v8.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L403238.  call `drawCircle`(v9, v10, v11, v0, v1) @signature `Landroid/graphics/Canvas;.drawCircle:(FFFLandroid/graphics/Paint;)V` @kind virtual;
  #L40323e.  return @kind void;
}
procedure `void` `maybeDrawTicks`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `android.graphics.Canvas` v6 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeDrawTicks:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L403250.  v0:= v5.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` @kind boolean;
  #L403254.  if v0 == 0 then goto L4032ce;
  #L403258.  v0:= v5.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L40325c.  v1:= 0I;
  #L40325e.  v0:= fcmpg(v0, v1);
  #L403262.  if v0 > 0 then goto L403268;
  #L403266.  goto L4032ce;
  #L403268.  call temp:= `getActiveRange`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveRange:()[F` @kind direct;
  #L40326e.  v0:= temp @kind object;
  #L403270.  v1:= v5.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L403274.  v2:= 0I;
  #L403276.  v3:= v0[v2];
  #L40327a.  call temp:= `pivotIndex`(v1, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.pivotIndex:([FF)I` @kind static;
  #L403280.  v1:= temp;
  #L403282.  v3:= v5.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L403286.  v4:= 1I;
  #L403288.  v0:= v0[v4];
  #L40328c.  call temp:= `pivotIndex`(v3, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.pivotIndex:([FF)I` @kind static;
  #L403292.  v0:= temp;
  #L403294.  v3:= v5.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L403298.  v1:= v1 * 2;
  #L40329c.  v4:= v5.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L4032a0.  call `drawPoints`(v6, v3, v2, v1, v4) @signature `Landroid/graphics/Canvas;.drawPoints:([FIILandroid/graphics/Paint;)V` @kind virtual;
  #L4032a6.  v2:= v5.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L4032aa.  v0:= v0 * 2;
  #L4032ae.  v3:= v0 - v1 @kind int;
  #L4032b2.  v4:= v5.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L4032b6.  call `drawPoints`(v6, v2, v1, v3, v4) @signature `Landroid/graphics/Canvas;.drawPoints:([FIILandroid/graphics/Paint;)V` @kind virtual;
  #L4032bc.  v1:= v5.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L4032c0.  v2:= length @variable v1;
  #L4032c2.  v2:= v2 - v0 @kind int;
  #L4032c4.  v3:= v5.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L4032c8.  call `drawPoints`(v6, v1, v0, v2, v3) @signature `Landroid/graphics/Canvas;.drawPoints:([FIILandroid/graphics/Paint;)V` @kind virtual;
  #L4032ce.  return @kind void;
}
procedure `void` `maybeIncreaseTrackSidePadding`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeIncreaseTrackSidePadding:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4032e0.  v0:= v2.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L4032e4.  v1:= v2.`com.google.android.material.slider.BaseSlider.defaultThumbRadius` @type ^`int`;
  #L4032e8.  v0:= v0 - v1 @kind int;
  #L4032ea.  v1:= 0I;
  #L4032ec.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4032f2.  v0:= temp;
  #L4032f4.  v1:= v2.`com.google.android.material.slider.BaseSlider.minTrackSidePadding` @type ^`int`;
  #L4032f8.  v1:= v1 + v0 @kind int;
  #L4032fa.  v2.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int` := v1;
  #L4032fe.  call temp:= `isLaidOut`(v2) @signature `Landroidx/core/view/ViewCompat;.isLaidOut:(Landroid/view/View;)Z` @kind static;
  #L403304.  v0:= temp;
  #L403306.  if v0 == 0 then goto L403318;
  #L40330a.  call temp:= `getWidth`(v2) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L403310.  v0:= temp;
  #L403312.  call `updateTrackWidth`(v2, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.updateTrackWidth:(I)V` @kind direct;
  #L403318.  return @kind void;
}
procedure `boolean` `moveFocus`(`com.google.android.material.slider.BaseSlider` v11 @kind this, `int` v12 ) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L401778.  v0:= v11.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L40177c.  v1:= (`long`) v0 @kind i2l;
  #L40177e.  v3:= (`long`) v12 @kind i2l;
  #L401780.  v5:= v1 + v3 @kind long;
  #L401784.  v12:= v11.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L401788.  call temp:= `size`(v12) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L40178e.  v12:= temp;
  #L401790.  v1:= 1I;
  #L401792.  v12:= v12 - v1 @kind int;
  #L401794.  v9:= (`long`) v12 @kind i2l;
  #L401796.  v7:= 0L;
  #L40179a.  call temp:= `clamp`(v5, v7, v9) @signature `Landroidx/core/math/MathUtils;.clamp:(JJJ)J` @kind static;
  #L4017a0.  v2:= temp @kind wide;
  #L4017a2.  v12:= (`int`) v2 @kind l2i;
  #L4017a4.  v11.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v12;
  #L4017a8.  if v12 != v0 then goto L4017b0;
  #L4017ac.  v12:= 0I;
  #L4017ae.  return v12;
  #L4017b0.  v0:= v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L4017b4.  v2:= -1I;
  #L4017b6.  if v0 == v2 then goto L4017be;
  #L4017ba.  v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v12;
  #L4017be.  call `updateHaloHotspot`(v11) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L4017c4.  call `postInvalidate`(v11) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4017ca.  return v1;
}
procedure `boolean` `moveFocusInAbsoluteDirection`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4017dc.  call temp:= `isRtl`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L4017e2.  v0:= temp;
  #L4017e4.  if v0 == 0 then goto L4017fa;
  #L4017e8.  v0:= -2147483648I;
  #L4017ec.  if v2 != v0 then goto L4017f8;
  #L4017f0.  v2:= 2147483647I;
  #L4017f6.  goto L4017fa;
  #L4017f8.  v2:= -v2 @kind int;
  #L4017fa.  call temp:= `moveFocus`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L401800.  v2:= temp;
  #L401802.  return v2;
}
procedure `float` `normalizeValue`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4021a0.  v0:= v2.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4021a4.  v3:= v3 - v0 @kind float;
  #L4021a6.  v1:= v2.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4021aa.  v1:= v1 - v0 @kind float;
  #L4021ac.  v3:= v3 / v1 @kind float;
  #L4021ae.  call temp:= `isRtl`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L4021b4.  v0:= temp;
  #L4021b6.  if v0 == 0 then goto L4021c2;
  #L4021ba.  v0:= 1.0F;
  #L4021be.  v0:= v0 - v3 @kind float;
  #L4021c0.  return v0;
  #L4021c2.  return v3;
}
procedure `java.lang.Boolean` `onKeyDownNoActiveThumb`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 , `android.view.KeyEvent` v5 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.onKeyDownNoActiveThumb:(ILandroid/view/KeyEvent;)Ljava/lang/Boolean;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L402410.  v0:= 61I;
  #L402414.  v1:= 1I;
  #L402416.  v2:= -1I;
  #L402418.  if v4 == v0 then goto L40248a;
  #L40241c.  v5:= 66I;
  #L402420.  if v4 == v5 then goto L402476;
  #L402424.  v5:= 81I;
  #L402428.  if v4 == v5 then goto L40246a;
  #L40242c.  v5:= 69I;
  #L402430.  if v4 == v5 then goto L40245e;
  #L402434.  v5:= 70I;
  #L402438.  if v4 == v5 then goto L40246a;
  #L40243c.  goto L4024cc;
  #L402442.  v4:= 0I;
  #L402444.  return v4 @kind object;
  #L402446.  call temp:= `moveFocusInAbsoluteDirection`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @kind direct;
  #L40244c.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L402450.  return v4 @kind object;
  #L402452.  call temp:= `moveFocusInAbsoluteDirection`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @kind direct;
  #L402458.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L40245c.  return v4 @kind object;
  #L40245e.  call temp:= `moveFocus`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L402464.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L402468.  return v4 @kind object;
  #L40246a.  call temp:= `moveFocus`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L402470.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L402474.  return v4 @kind object;
  #L402476.  v4:= v3.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L40247a.  v3.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v4;
  #L40247e.  call `postInvalidate`(v3) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L402484.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L402488.  return v4 @kind object;
  #L40248a.  call temp:= `hasNoModifiers`(v5) @signature `Landroid/view/KeyEvent;.hasNoModifiers:()Z` @kind virtual;
  #L402490.  v4:= temp;
  #L402492.  if v4 == 0 then goto L4024a8;
  #L402496.  call temp:= `moveFocus`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L40249c.  v4:= temp;
  #L40249e.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L4024a4.  v4:= temp @kind object;
  #L4024a6.  return v4 @kind object;
  #L4024a8.  call temp:= `isShiftPressed`(v5) @signature `Landroid/view/KeyEvent;.isShiftPressed:()Z` @kind virtual;
  #L4024ae.  v4:= temp;
  #L4024b0.  if v4 == 0 then goto L4024c6;
  #L4024b4.  call temp:= `moveFocus`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L4024ba.  v4:= temp;
  #L4024bc.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L4024c2.  v4:= temp @kind object;
  #L4024c4.  return v4 @kind object;
  #L4024c6.  v4:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L4024ca.  return v4 @kind object;
  #L4024cc.  switch v4
                  | 21 => goto L402452
                  | 22 => goto L402446
                  | 23 => goto L402476
                  | else => goto L402442;
}
procedure `void` `onStartTrackingTouch`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onStartTrackingTouch:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40359c.  v0:= v2.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L4035a0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4035a6.  v0:= temp @kind object;
  #L4035a8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4035ae.  v1:= temp;
  #L4035b0.  if v1 == 0 then goto L4035c8;
  #L4035b4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4035ba.  v1:= temp @kind object;
  #L4035bc.  v1:= (`com.google.android.material.slider.BaseOnSliderTouchListener`) v1 @kind object;
  #L4035c0.  call `onStartTrackingTouch`(v1, v2) @signature `Lcom/google/android/material/slider/BaseOnSliderTouchListener;.onStartTrackingTouch:(Ljava/lang/Object;)V` @kind interface;
  #L4035c6.  goto L4035a8;
  #L4035c8.  return @kind void;
}
procedure `void` `onStopTrackingTouch`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onStopTrackingTouch:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4035dc.  v0:= v2.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L4035e0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4035e6.  v0:= temp @kind object;
  #L4035e8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4035ee.  v1:= temp;
  #L4035f0.  if v1 == 0 then goto L403608;
  #L4035f4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4035fa.  v1:= temp @kind object;
  #L4035fc.  v1:= (`com.google.android.material.slider.BaseOnSliderTouchListener`) v1 @kind object;
  #L403600.  call `onStopTrackingTouch`(v1, v2) @signature `Lcom/google/android/material/slider/BaseOnSliderTouchListener;.onStopTrackingTouch:(Ljava/lang/Object;)V` @kind interface;
  #L403606.  goto L4035e8;
  #L403608.  return @kind void;
}
procedure `com.google.android.material.tooltip.TooltipDrawable` `parseLabelDrawable`(`android.content.Context` v2 @kind object, `android.content.res.TypedArray` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.parseLabelDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;)Lcom/google/android/material/tooltip/TooltipDrawable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L401e5c.  v0:= `@@com.google.android.material.R$styleable.Slider_labelStyle` @type ^`int`;
  #L401e60.  v1:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Tooltip` @type ^`int`;
  #L401e64.  call temp:= `getResourceId`(v3, v0, v1) @signature `Landroid/content/res/TypedArray;.getResourceId:(II)I` @kind virtual;
  #L401e6a.  v3:= temp;
  #L401e6c.  v0:= 0I;
  #L401e6e.  v1:= 0I;
  #L401e70.  call temp:= `createFromAttributes`(v2, v0, v1, v3) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/tooltip/TooltipDrawable;` @kind static;
  #L401e76.  v2:= temp @kind object;
  #L401e78.  return v2 @kind object;
}
procedure `int` `pivotIndex`(`float`[] v0 @kind object, `float` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.pivotIndex:([FF)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4023e4.  v0:= length @variable v0;
  #L4023e6.  v0:= v0 / 2;
  #L4023ea.  v0:= v0 + -1;
  #L4023ee.  v0:= (`float`) v0 @kind i2f;
  #L4023f0.  v1:= v1 * v0 @kind float;
  #L4023f4.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L4023fa.  v0:= temp;
  #L4023fc.  return v0;
}
procedure `void` `processAttributes`(`com.google.android.material.slider.BaseSlider` v7 @kind this, `android.content.Context` v8 @kind object, `android.util.AttributeSet` v9 @kind object, `int` v10 ) @signature `Lcom/google/android/material/slider/BaseSlider;.processAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L40361c.  v2:= `@@com.google.android.material.R$styleable.Slider` @type ^`int`[] @kind object;
  #L403620.  v4:= `@@com.google.android.material.slider.BaseSlider.DEF_STYLE_RES` @type ^`int`;
  #L403624.  v6:= 0I;
  #L403626.  v5:= new `int`[v6];
  #L40362a.  v0:= v8 @kind object;
  #L40362c.  v1:= v9 @kind object;
  #L40362e.  v3:= v10;
  #L403630.  call temp:= `obtainStyledAttributes`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.obtainStyledAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L403636.  v9:= temp @kind object;
  #L403638.  v10:= `@@com.google.android.material.R$styleable.Slider_android_valueFrom` @type ^`int`;
  #L40363c.  v0:= 0I;
  #L40363e.  call temp:= `getFloat`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L403644.  v10:= temp;
  #L403646.  v7.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float` := v10;
  #L40364a.  v10:= `@@com.google.android.material.R$styleable.Slider_android_valueTo` @type ^`int`;
  #L40364e.  v1:= 1.0F;
  #L403652.  call temp:= `getFloat`(v9, v10, v1) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L403658.  v10:= temp;
  #L40365a.  v7.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float` := v10;
  #L40365e.  v10:= 1I;
  #L403660.  v1:= new `java.lang.Float`[v10];
  #L403664.  v2:= v7.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L403668.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L40366e.  v2:= temp @kind object;
  #L403670.  v1[v6]:= v2 @kind object;
  #L403674.  call `setValues`(v7, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setValues:([Ljava/lang/Float;)V` @kind virtual;
  #L40367a.  v1:= `@@com.google.android.material.R$styleable.Slider_android_stepSize` @type ^`int`;
  #L40367e.  call temp:= `getFloat`(v9, v1, v0) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L403684.  v1:= temp;
  #L403686.  v7.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float` := v1;
  #L40368a.  v1:= `@@com.google.android.material.R$styleable.Slider_trackColor` @type ^`int`;
  #L40368e.  call temp:= `hasValue`(v9, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L403694.  v1:= temp;
  #L403696.  if v1 == 0 then goto L4036a0;
  #L40369a.  v2:= `@@com.google.android.material.R$styleable.Slider_trackColor` @type ^`int`;
  #L40369e.  goto L4036a4;
  #L4036a0.  v2:= `@@com.google.android.material.R$styleable.Slider_trackColorInactive` @type ^`int`;
  #L4036a4.  if v1 == 0 then goto L4036ae;
  #L4036a8.  v1:= `@@com.google.android.material.R$styleable.Slider_trackColor` @type ^`int`;
  #L4036ac.  goto L4036b2;
  #L4036ae.  v1:= `@@com.google.android.material.R$styleable.Slider_trackColorActive` @type ^`int`;
  #L4036b2.  call temp:= `getColorStateList`(v8, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4036b8.  v2:= temp @kind object;
  #L4036ba.  if v2 == 0 then goto L4036c0;
  #L4036be.  goto L4036cc;
  #L4036c0.  v2:= `@@com.google.android.material.R$color.material_slider_inactive_track_color` @type ^`int`;
  #L4036c4.  call temp:= `getColorStateList`(v8, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4036ca.  v2:= temp @kind object;
  #L4036cc.  call `setTrackInactiveTintList`(v7, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackInactiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4036d2.  call temp:= `getColorStateList`(v8, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4036d8.  v1:= temp @kind object;
  #L4036da.  if v1 == 0 then goto L4036e0;
  #L4036de.  goto L4036ec;
  #L4036e0.  v1:= `@@com.google.android.material.R$color.material_slider_active_track_color` @type ^`int`;
  #L4036e4.  call temp:= `getColorStateList`(v8, v1) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4036ea.  v1:= temp @kind object;
  #L4036ec.  call `setTrackActiveTintList`(v7, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackActiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4036f2.  v1:= `@@com.google.android.material.R$styleable.Slider_thumbColor` @type ^`int`;
  #L4036f6.  call temp:= `getColorStateList`(v8, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4036fc.  v1:= temp @kind object;
  #L4036fe.  v2:= v7.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L403702.  call `setFillColor`(v2, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L403708.  v1:= `@@com.google.android.material.R$styleable.Slider_thumbStrokeColor` @type ^`int`;
  #L40370c.  call temp:= `hasValue`(v9, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L403712.  v1:= temp;
  #L403714.  if v1 == 0 then goto L40372a;
  #L403718.  v1:= `@@com.google.android.material.R$styleable.Slider_thumbStrokeColor` @type ^`int`;
  #L40371c.  call temp:= `getColorStateList`(v8, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L403722.  v1:= temp @kind object;
  #L403724.  call `setThumbStrokeColor`(v7, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L40372a.  v1:= `@@com.google.android.material.R$styleable.Slider_thumbStrokeWidth` @type ^`int`;
  #L40372e.  call temp:= `getDimension`(v9, v1, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L403734.  v1:= temp;
  #L403736.  call `setThumbStrokeWidth`(v7, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeWidth:(F)V` @kind virtual;
  #L40373c.  v1:= `@@com.google.android.material.R$styleable.Slider_haloColor` @type ^`int`;
  #L403740.  call temp:= `getColorStateList`(v8, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L403746.  v1:= temp @kind object;
  #L403748.  if v1 == 0 then goto L40374e;
  #L40374c.  goto L40375a;
  #L40374e.  v1:= `@@com.google.android.material.R$color.material_slider_halo_color` @type ^`int`;
  #L403752.  call temp:= `getColorStateList`(v8, v1) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L403758.  v1:= temp @kind object;
  #L40375a.  call `setHaloTintList`(v7, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L403760.  v1:= `@@com.google.android.material.R$styleable.Slider_tickVisible` @type ^`int`;
  #L403764.  call temp:= `getBoolean`(v9, v1, v10) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L40376a.  v1:= temp;
  #L40376c.  v7.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` := v1 @kind boolean;
  #L403770.  v1:= `@@com.google.android.material.R$styleable.Slider_tickColor` @type ^`int`;
  #L403774.  call temp:= `hasValue`(v9, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L40377a.  v1:= temp;
  #L40377c.  if v1 == 0 then goto L403786;
  #L403780.  v2:= `@@com.google.android.material.R$styleable.Slider_tickColor` @type ^`int`;
  #L403784.  goto L40378a;
  #L403786.  v2:= `@@com.google.android.material.R$styleable.Slider_tickColorInactive` @type ^`int`;
  #L40378a.  if v1 == 0 then goto L403794;
  #L40378e.  v1:= `@@com.google.android.material.R$styleable.Slider_tickColor` @type ^`int`;
  #L403792.  goto L403798;
  #L403794.  v1:= `@@com.google.android.material.R$styleable.Slider_tickColorActive` @type ^`int`;
  #L403798.  call temp:= `getColorStateList`(v8, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L40379e.  v2:= temp @kind object;
  #L4037a0.  if v2 == 0 then goto L4037a6;
  #L4037a4.  goto L4037b2;
  #L4037a6.  v2:= `@@com.google.android.material.R$color.material_slider_inactive_tick_marks_color` @type ^`int`;
  #L4037aa.  call temp:= `getColorStateList`(v8, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4037b0.  v2:= temp @kind object;
  #L4037b2.  call `setTickInactiveTintList`(v7, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickInactiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4037b8.  call temp:= `getColorStateList`(v8, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4037be.  v1:= temp @kind object;
  #L4037c0.  if v1 == 0 then goto L4037c6;
  #L4037c4.  goto L4037d2;
  #L4037c6.  v1:= `@@com.google.android.material.R$color.material_slider_active_tick_marks_color` @type ^`int`;
  #L4037ca.  call temp:= `getColorStateList`(v8, v1) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4037d0.  v1:= temp @kind object;
  #L4037d2.  call `setTickActiveTintList`(v7, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickActiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4037d8.  v8:= `@@com.google.android.material.R$styleable.Slider_thumbRadius` @type ^`int`;
  #L4037dc.  call temp:= `getDimensionPixelSize`(v9, v8, v6) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L4037e2.  v8:= temp;
  #L4037e4.  call `setThumbRadius`(v7, v8) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbRadius:(I)V` @kind virtual;
  #L4037ea.  v8:= `@@com.google.android.material.R$styleable.Slider_haloRadius` @type ^`int`;
  #L4037ee.  call temp:= `getDimensionPixelSize`(v9, v8, v6) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L4037f4.  v8:= temp;
  #L4037f6.  call `setHaloRadius`(v7, v8) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloRadius:(I)V` @kind virtual;
  #L4037fc.  v8:= `@@com.google.android.material.R$styleable.Slider_thumbElevation` @type ^`int`;
  #L403800.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L403806.  v8:= temp;
  #L403808.  call `setThumbElevation`(v7, v8) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbElevation:(F)V` @kind virtual;
  #L40380e.  v8:= `@@com.google.android.material.R$styleable.Slider_trackHeight` @type ^`int`;
  #L403812.  call temp:= `getDimensionPixelSize`(v9, v8, v6) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L403818.  v8:= temp;
  #L40381a.  call `setTrackHeight`(v7, v8) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackHeight:(I)V` @kind virtual;
  #L403820.  v8:= `@@com.google.android.material.R$styleable.Slider_labelBehavior` @type ^`int`;
  #L403824.  call temp:= `getInt`(v9, v8, v6) @signature `Landroid/content/res/TypedArray;.getInt:(II)I` @kind virtual;
  #L40382a.  v8:= temp;
  #L40382c.  v7.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int` := v8;
  #L403830.  v8:= `@@com.google.android.material.R$styleable.Slider_android_enabled` @type ^`int`;
  #L403834.  call temp:= `getBoolean`(v9, v8, v10) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L40383a.  v8:= temp;
  #L40383c.  if v8 != 0 then goto L403846;
  #L403840.  call `setEnabled`(v7, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.setEnabled:(Z)V` @kind virtual;
  #L403846.  call `recycle`(v9) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L40384c.  return @kind void;
}
procedure `void` `scheduleAccessibilityEventSender`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/slider/BaseSlider;.scheduleAccessibilityEventSender:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L403898.  v0:= v2.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` @kind object;
  #L40389c.  if v0 != 0 then goto L4038b2;
  #L4038a0.  v0:= new `com.google.android.material.slider.BaseSlider$AccessibilityEventSender`;
  #L4038a4.  v1:= 0I;
  #L4038a6.  call `<init>`(v0, v2, v1) @signature `Lcom/google/android/material/slider/BaseSlider$AccessibilityEventSender;.<init>:(Lcom/google/android/material/slider/BaseSlider;Lcom/google/android/material/slider/BaseSlider$1;)V` @kind direct;
  #L4038ac.  v2.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` := v0 @kind object;
  #L4038b0.  goto L4038b8;
  #L4038b2.  call temp:= `removeCallbacks`(v2, v0) @signature `Landroid/view/View;.removeCallbacks:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L4038b8.  v0:= v2.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` @kind object;
  #L4038bc.  call `setVirtualViewId`(v0, v3) @signature `Lcom/google/android/material/slider/BaseSlider$AccessibilityEventSender;.setVirtualViewId:(I)V` @kind virtual;
  #L4038c2.  v3:= v2.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` @kind object;
  #L4038c6.  v0:= 200L;
  #L4038ca.  call temp:= `postDelayed`(v2, v3, v0) @signature `Landroid/view/View;.postDelayed:(Ljava/lang/Runnable;J)Z` @kind virtual;
  #L4038d0.  return @kind void;
}
procedure `void` `setValueForLabel`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `com.google.android.material.tooltip.TooltipDrawable` v4 @kind object, `float` v5 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueForLabel:(Lcom/google/android/material/tooltip/TooltipDrawable;F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L403e88.  call temp:= `formatValue`(v3, v5) @signature `Lcom/google/android/material/slider/BaseSlider;.formatValue:(F)Ljava/lang/String;` @kind direct;
  #L403e8e.  v0:= temp @kind object;
  #L403e90.  call `setText`(v4, v0) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L403e96.  v0:= v3.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L403e9a.  call temp:= `normalizeValue`(v3, v5) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L403ea0.  v5:= temp;
  #L403ea2.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L403ea6.  v1:= (`float`) v1 @kind i2f;
  #L403ea8.  v5:= v5 * v1 @kind float;
  #L403eac.  v5:= (`int`) v5 @kind f2i;
  #L403eae.  v0:= v0 + v5 @kind int;
  #L403eb0.  call temp:= `getIntrinsicWidth`(v4) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicWidth:()I` @kind virtual;
  #L403eb6.  v5:= temp;
  #L403eb8.  v5:= v5 / 2;
  #L403ebc.  v0:= v0 - v5 @kind int;
  #L403ebe.  call temp:= `calculateTop`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTop:()I` @kind direct;
  #L403ec4.  v5:= temp;
  #L403ec6.  v1:= v3.`com.google.android.material.slider.BaseSlider.labelPadding` @type ^`int`;
  #L403eca.  v2:= v3.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L403ece.  v1:= v1 + v2 @kind int;
  #L403ed0.  v5:= v5 - v1 @kind int;
  #L403ed2.  call temp:= `getIntrinsicHeight`(v4) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L403ed8.  v1:= temp;
  #L403eda.  v1:= v5 - v1 @kind int;
  #L403ede.  call temp:= `getIntrinsicWidth`(v4) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicWidth:()I` @kind virtual;
  #L403ee4.  v2:= temp;
  #L403ee6.  v2:= v2 + v0 @kind int;
  #L403ee8.  call `setBounds`(v4, v0, v1, v2, v5) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L403eee.  v5:= new `android.graphics.Rect`;
  #L403ef2.  call temp:= `getBounds`(v4) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L403ef8.  v0:= temp @kind object;
  #L403efa.  call `<init>`(v5, v0) @signature `Landroid/graphics/Rect;.<init>:(Landroid/graphics/Rect;)V` @kind direct;
  #L403f00.  call temp:= `getContentView`(v3) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentView:(Landroid/view/View;)Landroid/view/ViewGroup;` @kind static;
  #L403f06.  v0:= temp @kind object;
  #L403f08.  call `offsetDescendantRect`(v0, v3, v5) @signature `Lcom/google/android/material/internal/DescendantOffsetUtils;.offsetDescendantRect:(Landroid/view/ViewGroup;Landroid/view/View;Landroid/graphics/Rect;)V` @kind static;
  #L403f0e.  call `setBounds`(v4, v5) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(Landroid/graphics/Rect;)V` @kind virtual;
  #L403f14.  call temp:= `getContentViewOverlay`(v3) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentViewOverlay:(Landroid/view/View;)Lcom/google/android/material/internal/ViewOverlayImpl;` @kind static;
  #L403f1a.  v5:= temp @kind object;
  #L403f1c.  call `add`(v5, v4) @signature `Lcom/google/android/material/internal/ViewOverlayImpl;.add:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L403f22.  return @kind void;
}
procedure `void` `setValuesInternal`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `java.util.ArrayList` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setValuesInternal:(Ljava/util/ArrayList;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L403fc8.  call temp:= `isEmpty`(v3) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L403fce.  v0:= temp;
  #L403fd0.  if v0 != 0 then goto L40402e;
  #L403fd4.  call `sort`(v3) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;)V` @kind static;
  #L403fda.  v0:= v2.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L403fde.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L403fe4.  v0:= temp;
  #L403fe6.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L403fec.  v1:= temp;
  #L403fee.  if v0 != v1 then goto L404004;
  #L403ff2.  v0:= v2.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L403ff6.  call temp:= `equals`(v0, v3) @signature `Ljava/util/ArrayList;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L403ffc.  v0:= temp;
  #L403ffe.  if v0 == 0 then goto L404004;
  #L404002.  return @kind void;
  #L404004.  v2.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` := v3 @kind object;
  #L404008.  v3:= 1I;
  #L40400a.  v2.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v3 @kind boolean;
  #L40400e.  v3:= 0I;
  #L404010.  v2.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v3;
  #L404014.  call `updateHaloHotspot`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L40401a.  call `createLabelPool`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelPool:()V` @kind direct;
  #L404020.  call `dispatchOnChangedProgramatically`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchOnChangedProgramatically:()V` @kind direct;
  #L404026.  call `postInvalidate`(v2) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L40402c.  return @kind void;
  #L40402e.  v3:= new `java.lang.IllegalArgumentException`;
  #L404032.  v0:= "At least one value must be set" @kind object;
  #L404036.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40403c.  throw v3;
}
procedure `boolean` `shouldDrawCompatHalo`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L401c98.  v0:= v2.`com.google.android.material.slider.BaseSlider.forceDrawCompatHalo` @type ^`boolean` @kind boolean;
  #L401c9c.  if v0 != 0 then goto L401cc2;
  #L401ca0.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L401ca4.  v1:= 21I;
  #L401ca8.  if v0 < v1 then goto L401cc2;
  #L401cac.  call temp:= `getBackground`(v2) @signature `Landroid/view/View;.getBackground:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L401cb2.  v0:= temp @kind object;
  #L401cb4.  v0:= instanceof @variable v0 @type ^`android.graphics.drawable.RippleDrawable` @kind boolean;
  #L401cb8.  if v0 != 0 then goto L401cbe;
  #L401cbc.  goto L401cc2;
  #L401cbe.  v0:= 0I;
  #L401cc0.  goto L401cc4;
  #L401cc2.  v0:= 1I;
  #L401cc4.  return v0;
}
procedure `boolean` `snapActiveThumbToValue`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.snapActiveThumbToValue:(F)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L401cd8.  v0:= v1.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L401cdc.  call temp:= `snapThumbToValue`(v1, v0, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.snapThumbToValue:(IF)Z` @kind direct;
  #L401ce2.  v2:= temp;
  #L401ce4.  return v2;
}
procedure `double` `snapPosition`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `float` v6 ) @signature `Lcom/google/android/material/slider/BaseSlider;.snapPosition:(F)D` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L401e8c.  v0:= v5.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L401e90.  v1:= 0I;
  #L401e92.  v1:= fcmpl(v0, v1);
  #L401e96.  if v1 <= 0 then goto L401ebe;
  #L401e9a.  v1:= v5.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L401e9e.  v2:= v5.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L401ea2.  v1:= v1 - v2 @kind float;
  #L401ea4.  v1:= v1 / v0 @kind float;
  #L401ea6.  v0:= (`int`) v1 @kind f2i;
  #L401ea8.  v1:= (`float`) v0 @kind i2f;
  #L401eaa.  v6:= v6 * v1 @kind float;
  #L401eae.  call temp:= `round`(v6) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L401eb4.  v6:= temp;
  #L401eb6.  v1:= (`double`) v6 @kind i2d;
  #L401eb8.  v3:= (`double`) v0 @kind i2d;
  #L401eba.  v1:= v1 / v3 @kind double;
  #L401ebc.  return v1 @kind wide;
  #L401ebe.  v0:= (`double`) v6 @kind f2d;
  #L401ec0.  return v0 @kind wide;
}
procedure `boolean` `snapThumbToValue`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `int` v6 , `float` v7 ) @signature `Lcom/google/android/material/slider/BaseSlider;.snapThumbToValue:(IF)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L401cf8.  v0:= v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L401cfc.  call temp:= `get`(v0, v6) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L401d02.  v0:= temp @kind object;
  #L401d04.  v0:= (`java.lang.Float`) v0 @kind object;
  #L401d08.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L401d0e.  v0:= temp;
  #L401d10.  v0:= v7 - v0 @kind float;
  #L401d14.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L401d1a.  v0:= temp;
  #L401d1c.  v0:= (`double`) v0 @kind f2d;
  #L401d1e.  v2:= 1.0E-4D;
  #L401d28.  v4:= dcmpg(v0, v2);
  #L401d2c.  if v4 >= 0 then goto L401d34;
  #L401d30.  v6:= 0I;
  #L401d32.  return v6;
  #L401d34.  call temp:= `getClampedValue`(v5, v6, v7) @signature `Lcom/google/android/material/slider/BaseSlider;.getClampedValue:(IF)F` @kind direct;
  #L401d3a.  v7:= temp;
  #L401d3c.  v0:= v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L401d40.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L401d46.  v7:= temp @kind object;
  #L401d48.  call temp:= `set`(v0, v6, v7) @signature `Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L401d4e.  v5.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v6;
  #L401d52.  call `dispatchOnChangedFromUser`(v5, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchOnChangedFromUser:(I)V` @kind direct;
  #L401d58.  v6:= 1I;
  #L401d5a.  return v6;
}
procedure `boolean` `snapTouchPosition`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.snapTouchPosition:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L401d6c.  call temp:= `getValueOfTouchPosition`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueOfTouchPosition:()F` @kind direct;
  #L401d72.  v0:= temp;
  #L401d74.  call temp:= `snapActiveThumbToValue`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.snapActiveThumbToValue:(F)Z` @kind direct;
  #L401d7a.  v0:= temp;
  #L401d7c.  return v0;
}
procedure `void` `updateHaloHotspot`(`com.google.android.material.slider.BaseSlider` v6 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4040b8.  call temp:= `shouldDrawCompatHalo`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @kind direct;
  #L4040be.  v0:= temp;
  #L4040c0.  if v0 != 0 then goto L404136;
  #L4040c4.  call temp:= `getMeasuredWidth`(v6) @signature `Landroid/view/View;.getMeasuredWidth:()I` @kind virtual;
  #L4040ca.  v0:= temp;
  #L4040cc.  if v0 <= 0 then goto L404136;
  #L4040d0.  call temp:= `getBackground`(v6) @signature `Landroid/view/View;.getBackground:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L4040d6.  v0:= temp @kind object;
  #L4040d8.  v1:= instanceof @variable v0 @type ^`android.graphics.drawable.RippleDrawable` @kind boolean;
  #L4040dc.  if v1 == 0 then goto L404136;
  #L4040e0.  v1:= v6.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4040e4.  v2:= v6.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L4040e8.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4040ee.  v1:= temp @kind object;
  #L4040f0.  v1:= (`java.lang.Float`) v1 @kind object;
  #L4040f4.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4040fa.  v1:= temp;
  #L4040fc.  call temp:= `normalizeValue`(v6, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L404102.  v1:= temp;
  #L404104.  v2:= v6.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L404108.  v2:= (`float`) v2 @kind i2f;
  #L40410a.  v1:= v1 * v2 @kind float;
  #L40410e.  v2:= v6.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L404112.  v2:= (`float`) v2 @kind i2f;
  #L404114.  v1:= v1 + v2 @kind float;
  #L404116.  v1:= (`int`) v1 @kind f2i;
  #L404118.  call temp:= `calculateTop`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTop:()I` @kind direct;
  #L40411e.  v2:= temp;
  #L404120.  v3:= v6.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L404124.  v4:= v1 - v3 @kind int;
  #L404128.  v5:= v2 - v3 @kind int;
  #L40412c.  v1:= v1 + v3 @kind int;
  #L40412e.  v2:= v2 + v3 @kind int;
  #L404130.  call `setHotspotBounds`(v0, v4, v5, v1, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setHotspotBounds:(Landroid/graphics/drawable/Drawable;IIII)V` @kind static;
  #L404136.  return @kind void;
}
procedure `void` `updateTrackWidth`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.updateTrackWidth:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L404148.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L40414c.  v0:= v0 * 2;
  #L404150.  v2:= v2 - v0 @kind int;
  #L404152.  v0:= 0I;
  #L404154.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L40415a.  v2:= temp;
  #L40415c.  v1.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int` := v2;
  #L404160.  call `maybeCalculateTicksCoordinates`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeCalculateTicksCoordinates:()V` @kind direct;
  #L404166.  return @kind void;
}
procedure `void` `validateConfigurationIfDirty`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateConfigurationIfDirty:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L404178.  v0:= v1.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` @kind boolean;
  #L40417c.  if v0 == 0 then goto L4041a4;
  #L404180.  call `validateValueFrom`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValueFrom:()V` @kind direct;
  #L404186.  call `validateValueTo`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValueTo:()V` @kind direct;
  #L40418c.  call `validateStepSize`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.validateStepSize:()V` @kind direct;
  #L404192.  call `validateValues`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValues:()V` @kind direct;
  #L404198.  call `warnAboutFloatingPointError`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.warnAboutFloatingPointError:()V` @kind direct;
  #L40419e.  v0:= 0I;
  #L4041a0.  v1.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v0 @kind boolean;
  #L4041a4.  return @kind void;
}
procedure `void` `validateStepSize`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateStepSize:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4041b8.  v0:= v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4041bc.  v1:= 0I;
  #L4041be.  v0:= fcmpl(v0, v1);
  #L4041c2.  if v0 <= 0 then goto L40422c;
  #L4041c6.  v0:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4041ca.  call temp:= `valueLandsOnTick`(v4, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.valueLandsOnTick:(F)Z` @kind direct;
  #L4041d0.  v0:= temp;
  #L4041d2.  if v0 == 0 then goto L4041d8;
  #L4041d6.  goto L40422c;
  #L4041d8.  v0:= new `java.lang.IllegalStateException`;
  #L4041dc.  v1:= 3I;
  #L4041de.  v1:= new `java.lang.Object`[v1];
  #L4041e2.  v2:= 0I;
  #L4041e4.  v3:= v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4041e8.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L4041ee.  v3:= temp @kind object;
  #L4041f0.  v1[v2]:= v3 @kind object;
  #L4041f4.  v2:= 1I;
  #L4041f6.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4041fa.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L404200.  v3:= temp @kind object;
  #L404202.  v1[v2]:= v3 @kind object;
  #L404206.  v2:= 2I;
  #L404208.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L40420c.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L404212.  v3:= temp @kind object;
  #L404214.  v1[v2]:= v3 @kind object;
  #L404218.  v2:= "The stepSize(%s) must be 0, or a factor of the valueFrom(%s)-valueTo(%s) range" @kind object;
  #L40421c.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L404222.  v1:= temp @kind object;
  #L404224.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40422a.  throw v0;
  #L40422c.  return @kind void;
}
procedure `void` `validateValueFrom`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValueFrom:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L404240.  v0:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L404244.  v1:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L404248.  v0:= fcmpl(v0, v1);
  #L40424c.  if v0 >= 0 then goto L404252;
  #L404250.  return @kind void;
  #L404252.  v0:= new `java.lang.IllegalStateException`;
  #L404256.  v1:= 2I;
  #L404258.  v1:= new `java.lang.Object`[v1];
  #L40425c.  v2:= 0I;
  #L40425e.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L404262.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L404268.  v3:= temp @kind object;
  #L40426a.  v1[v2]:= v3 @kind object;
  #L40426e.  v2:= 1I;
  #L404270.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L404274.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L40427a.  v3:= temp @kind object;
  #L40427c.  v1[v2]:= v3 @kind object;
  #L404280.  v2:= "valueFrom(%s) must be smaller than valueTo(%s)" @kind object;
  #L404284.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L40428a.  v1:= temp @kind object;
  #L40428c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L404292.  throw v0;
}
procedure `void` `validateValueTo`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValueTo:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4042a4.  v0:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4042a8.  v1:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4042ac.  v0:= fcmpg(v0, v1);
  #L4042b0.  if v0 <= 0 then goto L4042b6;
  #L4042b4.  return @kind void;
  #L4042b6.  v0:= new `java.lang.IllegalStateException`;
  #L4042ba.  v1:= 2I;
  #L4042bc.  v1:= new `java.lang.Object`[v1];
  #L4042c0.  v2:= 0I;
  #L4042c2.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4042c6.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L4042cc.  v3:= temp @kind object;
  #L4042ce.  v1[v2]:= v3 @kind object;
  #L4042d2.  v2:= 1I;
  #L4042d4.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4042d8.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L4042de.  v3:= temp @kind object;
  #L4042e0.  v1[v2]:= v3 @kind object;
  #L4042e4.  v2:= "valueTo(%s) must be greater than valueFrom(%s)" @kind object;
  #L4042e8.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4042ee.  v1:= temp @kind object;
  #L4042f0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4042f6.  throw v0;
}
procedure `void` `validateValues`(`com.google.android.material.slider.BaseSlider` v8 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValues:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L404308.  v0:= v8.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L40430c.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L404312.  v0:= temp @kind object;
  #L404314.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L40431a.  v1:= temp;
  #L40431c.  if v1 == 0 then goto L404432;
  #L404320.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L404326.  v1:= temp @kind object;
  #L404328.  v1:= (`java.lang.Float`) v1 @kind object;
  #L40432c.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L404332.  v2:= temp;
  #L404334.  v3:= v8.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L404338.  v4:= 2I;
  #L40433a.  v5:= 1I;
  #L40433c.  v6:= 0I;
  #L40433e.  v7:= 3I;
  #L404340.  v2:= fcmpg(v2, v3);
  #L404344.  if v2 < 0 then goto L4043e2;
  #L404348.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L40434e.  v2:= temp;
  #L404350.  v3:= v8.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L404354.  v2:= fcmpl(v2, v3);
  #L404358.  if v2 > 0 then goto L4043e2;
  #L40435c.  v2:= v8.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L404360.  v3:= 0I;
  #L404362.  v2:= fcmpl(v2, v3);
  #L404366.  if v2 <= 0 then goto L404314;
  #L40436a.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L404370.  v2:= temp;
  #L404372.  call temp:= `valueLandsOnTick`(v8, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.valueLandsOnTick:(F)Z` @kind direct;
  #L404378.  v2:= temp;
  #L40437a.  if v2 == 0 then goto L404380;
  #L40437e.  goto L404314;
  #L404380.  v0:= new `java.lang.IllegalStateException`;
  #L404384.  v2:= 4I;
  #L404386.  v2:= new `java.lang.Object`[v2];
  #L40438a.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L404390.  v1:= temp;
  #L404392.  call temp:= `toString`(v1) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L404398.  v1:= temp @kind object;
  #L40439a.  v2[v6]:= v1 @kind object;
  #L40439e.  v1:= v8.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4043a2.  call temp:= `toString`(v1) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L4043a8.  v1:= temp @kind object;
  #L4043aa.  v2[v5]:= v1 @kind object;
  #L4043ae.  v1:= v8.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4043b2.  call temp:= `toString`(v1) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L4043b8.  v1:= temp @kind object;
  #L4043ba.  v2[v4]:= v1 @kind object;
  #L4043be.  v1:= v8.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4043c2.  call temp:= `toString`(v1) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L4043c8.  v1:= temp @kind object;
  #L4043ca.  v2[v7]:= v1 @kind object;
  #L4043ce.  v1:= "Value(%s) must be equal to valueFrom(%s) plus a multiple of stepSize(%s) when using stepSize(%s)" @kind object;
  #L4043d2.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4043d8.  v1:= temp @kind object;
  #L4043da.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4043e0.  throw v0;
  #L4043e2.  v0:= new `java.lang.IllegalStateException`;
  #L4043e6.  v2:= new `java.lang.Object`[v7];
  #L4043ea.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4043f0.  v1:= temp;
  #L4043f2.  call temp:= `toString`(v1) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L4043f8.  v1:= temp @kind object;
  #L4043fa.  v2[v6]:= v1 @kind object;
  #L4043fe.  v1:= v8.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L404402.  call temp:= `toString`(v1) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L404408.  v1:= temp @kind object;
  #L40440a.  v2[v5]:= v1 @kind object;
  #L40440e.  v1:= v8.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L404412.  call temp:= `toString`(v1) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L404418.  v1:= temp @kind object;
  #L40441a.  v2[v4]:= v1 @kind object;
  #L40441e.  v1:= "Slider value(%s) must be greater or equal to valueFrom(%s), and lower or equal to valueTo(%s)" @kind object;
  #L404422.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L404428.  v1:= temp @kind object;
  #L40442a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L404430.  throw v0;
  #L404432.  return @kind void;
}
procedure `boolean` `valueLandsOnTick`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `float` v5 ) @signature `Lcom/google/android/material/slider/BaseSlider;.valueLandsOnTick:(F)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L401d90.  v0:= new `java.math.BigDecimal`;
  #L401d94.  call temp:= `toString`(v5) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L401d9a.  v5:= temp @kind object;
  #L401d9c.  call `<init>`(v0, v5) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L401da2.  v5:= new `java.math.BigDecimal`;
  #L401da6.  v1:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L401daa.  call temp:= `toString`(v1) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L401db0.  v1:= temp @kind object;
  #L401db2.  call `<init>`(v5, v1) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L401db8.  call temp:= `subtract`(v0, v5) @signature `Ljava/math/BigDecimal;.subtract:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;` @kind virtual;
  #L401dbe.  v5:= temp @kind object;
  #L401dc0.  v0:= new `java.math.BigDecimal`;
  #L401dc4.  v1:= v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L401dc8.  call temp:= `toString`(v1) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L401dce.  v1:= temp @kind object;
  #L401dd0.  call `<init>`(v0, v1) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L401dd6.  v1:= `@@java.math.MathContext.DECIMAL64` @type ^`java.math.MathContext` @kind object;
  #L401dda.  call temp:= `divide`(v5, v0, v1) @signature `Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;` @kind virtual;
  #L401de0.  v5:= temp @kind object;
  #L401de2.  call temp:= `doubleValue`(v5) @signature `Ljava/math/BigDecimal;.doubleValue:()D` @kind virtual;
  #L401de8.  v0:= temp @kind wide;
  #L401dea.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(D)J` @kind static;
  #L401df0.  v2:= temp @kind wide;
  #L401df2.  v2:= (`double`) v2 @kind l2d;
  #L401df4.  v2:= v2 - v0 @kind double;
  #L401df6.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L401dfc.  v0:= temp @kind wide;
  #L401dfe.  v2:= 1.0E-4D;
  #L401e08.  v5:= dcmpg(v0, v2);
  #L401e0c.  if v5 >= 0 then goto L401e14;
  #L401e10.  v5:= 1I;
  #L401e12.  goto L401e16;
  #L401e14.  v5:= 0I;
  #L401e16.  return v5;
}
procedure `float` `valueToX`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.valueToX:(F)F` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4021d4.  call temp:= `normalizeValue`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L4021da.  v2:= temp;
  #L4021dc.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4021e0.  v0:= (`float`) v0 @kind i2f;
  #L4021e2.  v2:= v2 * v0 @kind float;
  #L4021e6.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4021ea.  v0:= (`float`) v0 @kind i2f;
  #L4021ec.  v2:= v2 + v0 @kind float;
  #L4021ee.  return v2;
}
procedure `void` `warnAboutFloatingPointError`(`com.google.android.material.slider.BaseSlider` v8 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.warnAboutFloatingPointError:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L404444.  v0:= v8.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L404448.  v1:= 0I;
  #L40444a.  v1:= fcmpl(v0, v1);
  #L40444e.  if v1 != 0 then goto L404454;
  #L404452.  return @kind void;
  #L404454.  v1:= (`int`) v0 @kind f2i;
  #L404456.  v1:= (`float`) v1 @kind i2f;
  #L404458.  v2:= 1I;
  #L40445a.  v3:= 0I;
  #L40445c.  v4:= 2I;
  #L40445e.  v5:= "Floating point value used for %s(%s). Using floats can have rounding errors which may result in incorrect values. Instead, consider using integers with a custom LabelFormatter to display the  value correctly." @kind object;
  #L404462.  v1:= fcmpl(v1, v0);
  #L404466.  if v1 == 0 then goto L404494;
  #L40446a.  v1:= `@@com.google.android.material.slider.BaseSlider.TAG` @type ^`java.lang.String` @kind object;
  #L40446e.  v6:= new `java.lang.Object`[v4];
  #L404472.  v7:= "stepSize" @kind object;
  #L404476.  v6[v3]:= v7 @kind object;
  #L40447a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L404480.  v0:= temp @kind object;
  #L404482.  v6[v2]:= v0 @kind object;
  #L404486.  call temp:= `format`(v5, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L40448c.  v0:= temp @kind object;
  #L40448e.  call temp:= `w`(v1, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L404494.  v0:= v8.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L404498.  v1:= (`int`) v0 @kind f2i;
  #L40449a.  v1:= (`float`) v1 @kind i2f;
  #L40449c.  v1:= fcmpl(v1, v0);
  #L4044a0.  if v1 == 0 then goto L4044ce;
  #L4044a4.  v1:= `@@com.google.android.material.slider.BaseSlider.TAG` @type ^`java.lang.String` @kind object;
  #L4044a8.  v6:= new `java.lang.Object`[v4];
  #L4044ac.  v7:= "valueFrom" @kind object;
  #L4044b0.  v6[v3]:= v7 @kind object;
  #L4044b4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4044ba.  v0:= temp @kind object;
  #L4044bc.  v6[v2]:= v0 @kind object;
  #L4044c0.  call temp:= `format`(v5, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4044c6.  v0:= temp @kind object;
  #L4044c8.  call temp:= `w`(v1, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4044ce.  v0:= v8.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4044d2.  v1:= (`int`) v0 @kind f2i;
  #L4044d4.  v1:= (`float`) v1 @kind i2f;
  #L4044d6.  v1:= fcmpl(v1, v0);
  #L4044da.  if v1 == 0 then goto L404508;
  #L4044de.  v1:= `@@com.google.android.material.slider.BaseSlider.TAG` @type ^`java.lang.String` @kind object;
  #L4044e2.  v4:= new `java.lang.Object`[v4];
  #L4044e6.  v6:= "valueTo" @kind object;
  #L4044ea.  v4[v3]:= v6 @kind object;
  #L4044ee.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4044f4.  v0:= temp @kind object;
  #L4044f6.  v4[v2]:= v0 @kind object;
  #L4044fa.  call temp:= `format`(v5, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L404500.  v0:= temp @kind object;
  #L404502.  call temp:= `w`(v1, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L404508.  return @kind void;
}
procedure `void` `addOnChangeListener`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.slider.BaseOnChangeListener` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.addOnChangeListener:(Lcom/google/android/material/slider/BaseOnChangeListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4028dc.  v0:= v1.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L4028e0.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4028e6.  return @kind void;
}
procedure `void` `addOnSliderTouchListener`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.slider.BaseOnSliderTouchListener` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.addOnSliderTouchListener:(Lcom/google/android/material/slider/BaseOnSliderTouchListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4028f8.  v0:= v1.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L4028fc.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L402902.  return @kind void;
}
procedure `void` `clearOnChangeListeners`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.clearOnChangeListeners:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L402934.  v0:= v1.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L402938.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L40293e.  return @kind void;
}
procedure `void` `clearOnSliderTouchListeners`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.clearOnSliderTouchListeners:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L402950.  v0:= v1.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L402954.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L40295a.  return @kind void;
}
procedure `boolean` `dispatchHoverEvent`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.view.MotionEvent` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchHoverEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401664.  v0:= v1.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L401668.  call temp:= `dispatchHoverEvent`(v0, v2) @signature `Landroidx/customview/widget/ExploreByTouchHelper;.dispatchHoverEvent:(Landroid/view/MotionEvent;)Z` @kind virtual;
  #L40166e.  v0:= temp;
  #L401670.  if v0 != 0 then goto L401686;
  #L401674.  call temp:= `dispatchHoverEvent`(v1, v2) @signature `Landroid/view/View;.dispatchHoverEvent:(Landroid/view/MotionEvent;)Z` @kind super;
  #L40167a.  v2:= temp;
  #L40167c.  if v2 == 0 then goto L401682;
  #L401680.  goto L401686;
  #L401682.  v2:= 0I;
  #L401684.  goto L401688;
  #L401686.  v2:= 1I;
  #L401688.  return v2;
}
procedure `boolean` `dispatchKeyEvent`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `android.view.KeyEvent` v1 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchKeyEvent:(Landroid/view/KeyEvent;)Z` @AccessFlag PUBLIC {
    temp;

  #L40169c.  call temp:= `dispatchKeyEvent`(v0, v1) @signature `Landroid/view/View;.dispatchKeyEvent:(Landroid/view/KeyEvent;)Z` @kind super;
  #L4016a2.  v1:= temp;
  #L4016a4.  return v1;
}
procedure `void` `drawableStateChanged`(`com.google.android.material.slider.BaseSlider` v3 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.drawableStateChanged:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L402d4c.  call `drawableStateChanged`(v3) @signature `Landroid/view/View;.drawableStateChanged:()V` @kind super;
  #L402d52.  v0:= v3.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L402d56.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L402d5a.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L402d60.  v1:= temp;
  #L402d62.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L402d68.  v0:= v3.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L402d6c.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L402d70.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L402d76.  v1:= temp;
  #L402d78.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L402d7e.  v0:= v3.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L402d82.  v1:= v3.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L402d86.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L402d8c.  v1:= temp;
  #L402d8e.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L402d94.  v0:= v3.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L402d98.  v1:= v3.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L402d9c.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L402da2.  v1:= temp;
  #L402da4.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L402daa.  v0:= v3.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L402dae.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L402db4.  v0:= temp @kind object;
  #L402db6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L402dbc.  v1:= temp;
  #L402dbe.  if v1 == 0 then goto L402dea;
  #L402dc2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L402dc8.  v1:= temp @kind object;
  #L402dca.  v1:= (`com.google.android.material.tooltip.TooltipDrawable`) v1 @kind object;
  #L402dce.  call temp:= `isStateful`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isStateful:()Z` @kind virtual;
  #L402dd4.  v2:= temp;
  #L402dd6.  if v2 == 0 then goto L402db6;
  #L402dda.  call temp:= `getDrawableState`(v3) @signature `Landroid/view/View;.getDrawableState:()[I` @kind virtual;
  #L402de0.  v2:= temp @kind object;
  #L402de2.  call temp:= `setState`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L402de8.  goto L402db6;
  #L402dea.  v0:= v3.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L402dee.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isStateful:()Z` @kind virtual;
  #L402df4.  v0:= temp;
  #L402df6.  if v0 == 0 then goto L402e0c;
  #L402dfa.  v0:= v3.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L402dfe.  call temp:= `getDrawableState`(v3) @signature `Landroid/view/View;.getDrawableState:()[I` @kind virtual;
  #L402e04.  v1:= temp @kind object;
  #L402e06.  call temp:= `setState`(v0, v1) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L402e0c.  v0:= v3.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L402e10.  v1:= v3.`com.google.android.material.slider.BaseSlider.haloColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L402e14.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L402e1a.  v1:= temp;
  #L402e1c.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L402e22.  v0:= v3.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L402e26.  v1:= 63I;
  #L402e2a.  call `setAlpha`(v0, v1) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L402e30.  return @kind void;
}
procedure `void` `forceDrawCompatHalo`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.forceDrawCompatHalo:(Z)V` @AccessFlag  {
    temp;

  #L403018.  v0.`com.google.android.material.slider.BaseSlider.forceDrawCompatHalo` @type ^`boolean` := v1 @kind boolean;
  #L40301c.  return @kind void;
}
procedure `java.lang.CharSequence` `getAccessibilityClassName`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getAccessibilityClassName:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4024f0.  v0:= constclass @type ^`android.widget.SeekBar` @kind object;
  #L4024f4.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L4024fa.  v0:= temp @kind object;
  #L4024fc.  return v0 @kind object;
}
procedure `int` `getAccessibilityFocusedVirtualViewId`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getAccessibilityFocusedVirtualViewId:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L4022d8.  v0:= v1.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L4022dc.  call temp:= `getAccessibilityFocusedVirtualViewId`(v0) @signature `Landroidx/customview/widget/ExploreByTouchHelper;.getAccessibilityFocusedVirtualViewId:()I` @kind virtual;
  #L4022e2.  v0:= temp;
  #L4022e4.  return v0;
}
procedure `int` `getActiveThumbIndex`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveThumbIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4022f8.  v0:= v1.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L4022fc.  return v0;
}
procedure `int` `getFocusedThumbIndex`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getFocusedThumbIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40233c.  v0:= v1.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L402340.  return v0;
}
procedure `int` `getHaloRadius`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getHaloRadius:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L402354.  v0:= v1.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L402358.  return v0;
}
procedure `android.content.res.ColorStateList` `getHaloTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getHaloTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4014bc.  v0:= v1.`com.google.android.material.slider.BaseSlider.haloColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4014c0.  return v0 @kind object;
}
procedure `int` `getLabelBehavior`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getLabelBehavior:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40236c.  v0:= v1.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L402370.  return v0;
}
procedure `float` `getMinSeparation`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getMinSeparation:()F` @AccessFlag PROTECTED {
    temp;
    v0;

  #L402080.  v0:= 0I;
  #L402082.  return v0;
}
procedure `float` `getStepSize`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getStepSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L402094.  v0:= v1.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L402098.  return v0;
}
procedure `float` `getThumbElevation`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbElevation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4020ac.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4020b0.  call temp:= `getElevation`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L4020b6.  v0:= temp;
  #L4020b8.  return v0;
}
procedure `int` `getThumbRadius`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbRadius:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L402384.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L402388.  return v0;
}
procedure `android.content.res.ColorStateList` `getThumbStrokeColor`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbStrokeColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4014d4.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4014d8.  call temp:= `getStrokeColor`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L4014de.  v0:= temp @kind object;
  #L4014e0.  return v0 @kind object;
}
procedure `float` `getThumbStrokeWidth`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbStrokeWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4020cc.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4020d0.  call temp:= `getStrokeWidth`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeWidth:()F` @kind virtual;
  #L4020d6.  v0:= temp;
  #L4020d8.  return v0;
}
procedure `android.content.res.ColorStateList` `getThumbTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4014f4.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4014f8.  call temp:= `getFillColor`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L4014fe.  v0:= temp @kind object;
  #L401500.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getTickActiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTickActiveTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401514.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L401518.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getTickInactiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTickInactiveTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40152c.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L401530.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getTickTintList`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTickTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L401544.  v0:= v2.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L401548.  v1:= v2.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L40154c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L401552.  v0:= temp;
  #L401554.  if v0 == 0 then goto L40155e;
  #L401558.  v0:= v2.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L40155c.  return v0 @kind object;
  #L40155e.  v0:= new `java.lang.IllegalStateException`;
  #L401562.  v1:= "The inactive and active ticks are different colors. Use the getTickColorInactive() and getTickColorActive() methods instead." @kind object;
  #L401566.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40156c.  throw v0;
}
procedure `android.content.res.ColorStateList` `getTrackActiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackActiveTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401580.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L401584.  return v0 @kind object;
}
procedure `int` `getTrackHeight`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40239c.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L4023a0.  return v0;
}
procedure `android.content.res.ColorStateList` `getTrackInactiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackInactiveTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401598.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L40159c.  return v0 @kind object;
}
procedure `int` `getTrackSidePadding`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackSidePadding:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4023b4.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4023b8.  return v0;
}
procedure `android.content.res.ColorStateList` `getTrackTintList`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4015b0.  v0:= v2.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4015b4.  v1:= v2.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4015b8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4015be.  v0:= temp;
  #L4015c0.  if v0 == 0 then goto L4015ca;
  #L4015c4.  v0:= v2.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4015c8.  return v0 @kind object;
  #L4015ca.  v0:= new `java.lang.IllegalStateException`;
  #L4015ce.  v1:= "The inactive and active parts of the track are different colors. Use the getInactiveTrackColor() and getActiveTrackColor() methods instead." @kind object;
  #L4015d2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4015d8.  throw v0;
}
procedure `int` `getTrackWidth`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4023cc.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4023d0.  return v0;
}
procedure `float` `getValueFrom`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueFrom:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4020ec.  v0:= v1.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4020f0.  return v0;
}
procedure `float` `getValueTo`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueTo:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L402188.  v0:= v1.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L40218c.  return v0;
}
procedure `java.util.List` `getValues`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L402648.  v0:= new `java.util.ArrayList`;
  #L40264c.  v1:= v2.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L402650.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L402656.  return v0 @kind object;
}
procedure `boolean` `hasLabelFormatter`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.hasLabelFormatter:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4016b8.  v0:= v1.`com.google.android.material.slider.BaseSlider.formatter` @type ^`com.google.android.material.slider.LabelFormatter` @kind object;
  #L4016bc.  if v0 == 0 then goto L4016c4;
  #L4016c0.  v0:= 1I;
  #L4016c2.  goto L4016c6;
  #L4016c4.  v0:= 0I;
  #L4016c6.  return v0;
}
procedure `boolean` `isRtl`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L40173c.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/view/ViewCompat;.getLayoutDirection:(Landroid/view/View;)I` @kind static;
  #L401742.  v0:= temp;
  #L401744.  v1:= 1I;
  #L401746.  if v0 != v1 then goto L40174c;
  #L40174a.  goto L40174e;
  #L40174c.  v1:= 0I;
  #L40174e.  return v1;
}
procedure `boolean` `isTickVisible`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.isTickVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401760.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` @kind boolean;
  #L401764.  return v0;
}
procedure `void` `onAttachedToWindow`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onAttachedToWindow:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L40332c.  call `onAttachedToWindow`(v2) @signature `Landroid/view/View;.onAttachedToWindow:()V` @kind super;
  #L403332.  v0:= v2.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L403336.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40333c.  v0:= temp @kind object;
  #L40333e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L403344.  v1:= temp;
  #L403346.  if v1 == 0 then goto L40335e;
  #L40334a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L403350.  v1:= temp @kind object;
  #L403352.  v1:= (`com.google.android.material.tooltip.TooltipDrawable`) v1 @kind object;
  #L403356.  call `attachLabelToContentView`(v2, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.attachLabelToContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @kind direct;
  #L40335c.  goto L40333e;
  #L40335e.  return @kind void;
}
procedure `void` `onDetachedFromWindow`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onDetachedFromWindow:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L403370.  v0:= v2.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` @kind object;
  #L403374.  if v0 == 0 then goto L40337e;
  #L403378.  call temp:= `removeCallbacks`(v2, v0) @signature `Landroid/view/View;.removeCallbacks:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L40337e.  v0:= 0I;
  #L403380.  v2.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` := v0 @kind boolean;
  #L403384.  v0:= v2.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L403388.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40338e.  v0:= temp @kind object;
  #L403390.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L403396.  v1:= temp;
  #L403398.  if v1 == 0 then goto L4033b0;
  #L40339c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4033a2.  v1:= temp @kind object;
  #L4033a4.  v1:= (`com.google.android.material.tooltip.TooltipDrawable`) v1 @kind object;
  #L4033a8.  call `detachLabelFromContentView`(v2, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.detachLabelFromContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @kind direct;
  #L4033ae.  goto L403390;
  #L4033b0.  call `onDetachedFromWindow`(v2) @signature `Landroid/view/View;.onDetachedFromWindow:()V` @kind super;
  #L4033b6.  return @kind void;
}
procedure `void` `onDraw`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `android.graphics.Canvas` v4 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.onDraw:(Landroid/graphics/Canvas;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4033c8.  v0:= v3.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` @kind boolean;
  #L4033cc.  if v0 == 0 then goto L4033dc;
  #L4033d0.  call `validateConfigurationIfDirty`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.validateConfigurationIfDirty:()V` @kind direct;
  #L4033d6.  call `maybeCalculateTicksCoordinates`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeCalculateTicksCoordinates:()V` @kind direct;
  #L4033dc.  call `onDraw`(v3, v4) @signature `Landroid/view/View;.onDraw:(Landroid/graphics/Canvas;)V` @kind super;
  #L4033e2.  call temp:= `calculateTop`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTop:()I` @kind direct;
  #L4033e8.  v0:= temp;
  #L4033ea.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4033ee.  call `drawInactiveTrack`(v3, v4, v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.drawInactiveTrack:(Landroid/graphics/Canvas;II)V` @kind direct;
  #L4033f4.  call temp:= `getValues`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @kind virtual;
  #L4033fa.  v1:= temp @kind object;
  #L4033fc.  call temp:= `max`(v1) @signature `Ljava/util/Collections;.max:(Ljava/util/Collection;)Ljava/lang/Object;` @kind static;
  #L403402.  v1:= temp @kind object;
  #L403404.  v1:= (`java.lang.Float`) v1 @kind object;
  #L403408.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L40340e.  v1:= temp;
  #L403410.  v2:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L403414.  v1:= fcmpl(v1, v2);
  #L403418.  if v1 <= 0 then goto L403426;
  #L40341c.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L403420.  call `drawActiveTrack`(v3, v4, v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.drawActiveTrack:(Landroid/graphics/Canvas;II)V` @kind direct;
  #L403426.  call `maybeDrawTicks`(v3, v4) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeDrawTicks:(Landroid/graphics/Canvas;)V` @kind direct;
  #L40342c.  v1:= v3.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` @kind boolean;
  #L403430.  if v1 != 0 then goto L403440;
  #L403434.  call temp:= `isFocused`(v3) @signature `Landroid/view/View;.isFocused:()Z` @kind virtual;
  #L40343a.  v1:= temp;
  #L40343c.  if v1 == 0 then goto L403466;
  #L403440.  call temp:= `isEnabled`(v3) @signature `Landroid/view/View;.isEnabled:()Z` @kind virtual;
  #L403446.  v1:= temp;
  #L403448.  if v1 == 0 then goto L403466;
  #L40344c.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L403450.  call `maybeDrawHalo`(v3, v4, v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeDrawHalo:(Landroid/graphics/Canvas;II)V` @kind direct;
  #L403456.  v1:= v3.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L40345a.  v2:= -1I;
  #L40345c.  if v1 == v2 then goto L403466;
  #L403460.  call `ensureLabelsAdded`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsAdded:()V` @kind direct;
  #L403466.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L40346a.  call `drawThumbs`(v3, v4, v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.drawThumbs:(Landroid/graphics/Canvas;II)V` @kind direct;
  #L403470.  return @kind void;
}
procedure `void` `onFocusChanged`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `boolean` v1 , `int` v2 , `android.graphics.Rect` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.onFocusChanged:(ZILandroid/graphics/Rect;)V` @AccessFlag PROTECTED {
    temp;

  #L403484.  call `onFocusChanged`(v0, v1, v2, v3) @signature `Landroid/view/View;.onFocusChanged:(ZILandroid/graphics/Rect;)V` @kind super;
  #L40348a.  if v1 != 0 then goto L4034aa;
  #L40348e.  v1:= -1I;
  #L403490.  v0.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v1;
  #L403494.  call `ensureLabelsRemoved`(v0) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsRemoved:()V` @kind direct;
  #L40349a.  v1:= v0.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L40349e.  v2:= v0.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L4034a2.  call temp:= `clearKeyboardFocusForVirtualView`(v1, v2) @signature `Landroidx/customview/widget/ExploreByTouchHelper;.clearKeyboardFocusForVirtualView:(I)Z` @kind virtual;
  #L4034a8.  goto L4034be;
  #L4034aa.  call `focusThumbOnFocusGained`(v0, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.focusThumbOnFocusGained:(I)V` @kind direct;
  #L4034b0.  v1:= v0.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L4034b4.  v2:= v0.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L4034b8.  call temp:= `requestKeyboardFocusForVirtualView`(v1, v2) @signature `Landroidx/customview/widget/ExploreByTouchHelper;.requestKeyboardFocusForVirtualView:(I)Z` @kind virtual;
  #L4034be.  return @kind void;
}
procedure `boolean` `onKeyDown`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `int` v6 , `android.view.KeyEvent` v7 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.onKeyDown:(ILandroid/view/KeyEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L401814.  call temp:= `isEnabled`(v5) @signature `Landroid/view/View;.isEnabled:()Z` @kind virtual;
  #L40181a.  v0:= temp;
  #L40181c.  if v0 != 0 then goto L40182a;
  #L401820.  call temp:= `onKeyDown`(v5, v6, v7) @signature `Landroid/view/View;.onKeyDown:(ILandroid/view/KeyEvent;)Z` @kind super;
  #L401826.  v6:= temp;
  #L401828.  return v6;
  #L40182a.  v0:= v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L40182e.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L401834.  v0:= temp;
  #L401836.  v1:= 0I;
  #L401838.  v2:= 1I;
  #L40183a.  if v0 != v2 then goto L401842;
  #L40183e.  v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v1;
  #L401842.  v0:= v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L401846.  v3:= -1I;
  #L401848.  if v0 != v3 then goto L40186c;
  #L40184c.  call temp:= `onKeyDownNoActiveThumb`(v5, v6, v7) @signature `Lcom/google/android/material/slider/BaseSlider;.onKeyDownNoActiveThumb:(ILandroid/view/KeyEvent;)Ljava/lang/Boolean;` @kind direct;
  #L401852.  v0:= temp @kind object;
  #L401854.  if v0 == 0 then goto L401862;
  #L401858.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L40185e.  v6:= temp;
  #L401860.  goto L40186a;
  #L401862.  call temp:= `onKeyDown`(v5, v6, v7) @signature `Landroid/view/View;.onKeyDown:(ILandroid/view/KeyEvent;)Z` @kind super;
  #L401868.  v6:= temp;
  #L40186a.  return v6;
  #L40186c.  v0:= v5.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` @kind boolean;
  #L401870.  call temp:= `isLongPress`(v7) @signature `Landroid/view/KeyEvent;.isLongPress:()Z` @kind virtual;
  #L401876.  v4:= temp;
  #L401878.  v0:= v0 ^| v4 @kind int;
  #L40187a.  v5.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` := v0 @kind boolean;
  #L40187e.  call temp:= `calculateIncrementForKey`(v5, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateIncrementForKey:(I)Ljava/lang/Float;` @kind direct;
  #L401884.  v0:= temp @kind object;
  #L401886.  if v0 == 0 then goto L4018ca;
  #L40188a.  v6:= v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L40188e.  v7:= v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L401892.  call temp:= `get`(v6, v7) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L401898.  v6:= temp @kind object;
  #L40189a.  v6:= (`java.lang.Float`) v6 @kind object;
  #L40189e.  call temp:= `floatValue`(v6) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4018a4.  v6:= temp;
  #L4018a6.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4018ac.  v7:= temp;
  #L4018ae.  v6:= v6 + v7 @kind float;
  #L4018b0.  call temp:= `snapActiveThumbToValue`(v5, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.snapActiveThumbToValue:(F)Z` @kind direct;
  #L4018b6.  v6:= temp;
  #L4018b8.  if v6 == 0 then goto L4018c8;
  #L4018bc.  call `updateHaloHotspot`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L4018c2.  call `postInvalidate`(v5) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4018c8.  return v2;
  #L4018ca.  v0:= 23I;
  #L4018ce.  if v6 == v0 then goto L40191a;
  #L4018d2.  v0:= 61I;
  #L4018d6.  if v6 == v0 then goto L4018ec;
  #L4018da.  v0:= 66I;
  #L4018de.  if v6 == v0 then goto L40191a;
  #L4018e2.  call temp:= `onKeyDown`(v5, v6, v7) @signature `Landroid/view/View;.onKeyDown:(ILandroid/view/KeyEvent;)Z` @kind super;
  #L4018e8.  v6:= temp;
  #L4018ea.  return v6;
  #L4018ec.  call temp:= `hasNoModifiers`(v7) @signature `Landroid/view/KeyEvent;.hasNoModifiers:()Z` @kind virtual;
  #L4018f2.  v6:= temp;
  #L4018f4.  if v6 == 0 then goto L401902;
  #L4018f8.  call temp:= `moveFocus`(v5, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L4018fe.  v6:= temp;
  #L401900.  return v6;
  #L401902.  call temp:= `isShiftPressed`(v7) @signature `Landroid/view/KeyEvent;.isShiftPressed:()Z` @kind virtual;
  #L401908.  v6:= temp;
  #L40190a.  if v6 == 0 then goto L401918;
  #L40190e.  call temp:= `moveFocus`(v5, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L401914.  v6:= temp;
  #L401916.  return v6;
  #L401918.  return v1;
  #L40191a.  v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v3;
  #L40191e.  call `ensureLabelsRemoved`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsRemoved:()V` @kind direct;
  #L401924.  call `postInvalidate`(v5) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L40192a.  return v2;
}
procedure `boolean` `onKeyUp`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 , `android.view.KeyEvent` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.onKeyUp:(ILandroid/view/KeyEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40193c.  v0:= 0I;
  #L40193e.  v1.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` := v0 @kind boolean;
  #L401942.  call temp:= `onKeyUp`(v1, v2, v3) @signature `Landroid/view/View;.onKeyUp:(ILandroid/view/KeyEvent;)Z` @kind super;
  #L401948.  v2:= temp;
  #L40194a.  return v2;
}
procedure `void` `onMeasure`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/google/android/material/slider/BaseSlider;.onMeasure:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4034d0.  v5:= v3.`com.google.android.material.slider.BaseSlider.widgetHeight` @type ^`int`;
  #L4034d4.  v0:= v3.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L4034d8.  v1:= 0I;
  #L4034da.  v2:= 1I;
  #L4034dc.  if v0 != v2 then goto L4034f8;
  #L4034e0.  v0:= v3.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4034e4.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4034ea.  v0:= temp @kind object;
  #L4034ec.  v0:= (`com.google.android.material.tooltip.TooltipDrawable`) v0 @kind object;
  #L4034f0.  call temp:= `getIntrinsicHeight`(v0) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L4034f6.  v1:= temp;
  #L4034f8.  v5:= v5 + v1 @kind int;
  #L4034fa.  v0:= 2.0F;
  #L4034fe.  call temp:= `makeMeasureSpec`(v5, v0) @signature `Landroid/view/View$MeasureSpec;.makeMeasureSpec:(II)I` @kind static;
  #L403504.  v5:= temp;
  #L403506.  call `onMeasure`(v3, v4, v5) @signature `Landroid/view/View;.onMeasure:(II)V` @kind super;
  #L40350c.  return @kind void;
}
procedure `void` `onRestoreInstanceState`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.os.Parcelable` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.onRestoreInstanceState:(Landroid/os/Parcelable;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L403520.  v2:= (`com.google.android.material.slider.BaseSlider$SliderState`) v2 @kind object;
  #L403524.  call temp:= `getSuperState`(v2) @signature `Landroid/view/View$BaseSavedState;.getSuperState:()Landroid/os/Parcelable;` @kind virtual;
  #L40352a.  v0:= temp @kind object;
  #L40352c.  call `onRestoreInstanceState`(v1, v0) @signature `Landroid/view/View;.onRestoreInstanceState:(Landroid/os/Parcelable;)V` @kind super;
  #L403532.  v0:= v2.`com.google.android.material.slider.BaseSlider$SliderState.valueFrom` @type ^`float`;
  #L403536.  v1.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float` := v0;
  #L40353a.  v0:= v2.`com.google.android.material.slider.BaseSlider$SliderState.valueTo` @type ^`float`;
  #L40353e.  v1.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float` := v0;
  #L403542.  v0:= v2.`com.google.android.material.slider.BaseSlider$SliderState.values` @type ^`java.util.ArrayList` @kind object;
  #L403546.  call `setValuesInternal`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.setValuesInternal:(Ljava/util/ArrayList;)V` @kind direct;
  #L40354c.  v0:= v2.`com.google.android.material.slider.BaseSlider$SliderState.stepSize` @type ^`float`;
  #L403550.  v1.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float` := v0;
  #L403554.  v2:= v2.`com.google.android.material.slider.BaseSlider$SliderState.hasFocus` @type ^`boolean` @kind boolean;
  #L403558.  if v2 == 0 then goto L403562;
  #L40355c.  call temp:= `requestFocus`(v1) @signature `Landroid/view/View;.requestFocus:()Z` @kind virtual;
  #L403562.  call `dispatchOnChangedProgramatically`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchOnChangedProgramatically:()V` @kind direct;
  #L403568.  return @kind void;
}
procedure `android.os.Parcelable` `onSaveInstanceState`(`com.google.android.material.slider.BaseSlider` v3 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onSaveInstanceState:()Landroid/os/Parcelable;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4015ec.  call temp:= `onSaveInstanceState`(v3) @signature `Landroid/view/View;.onSaveInstanceState:()Landroid/os/Parcelable;` @kind super;
  #L4015f2.  v0:= temp @kind object;
  #L4015f4.  v1:= new `com.google.android.material.slider.BaseSlider$SliderState`;
  #L4015f8.  call `<init>`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider$SliderState;.<init>:(Landroid/os/Parcelable;)V` @kind direct;
  #L4015fe.  v0:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L401602.  v1.`com.google.android.material.slider.BaseSlider$SliderState.valueFrom` @type ^`float` := v0;
  #L401606.  v0:= v3.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L40160a.  v1.`com.google.android.material.slider.BaseSlider$SliderState.valueTo` @type ^`float` := v0;
  #L40160e.  v0:= new `java.util.ArrayList`;
  #L401612.  v2:= v3.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L401616.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L40161c.  v1.`com.google.android.material.slider.BaseSlider$SliderState.values` @type ^`java.util.ArrayList` := v0 @kind object;
  #L401620.  v0:= v3.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L401624.  v1.`com.google.android.material.slider.BaseSlider$SliderState.stepSize` @type ^`float` := v0;
  #L401628.  call temp:= `hasFocus`(v3) @signature `Landroid/view/View;.hasFocus:()Z` @kind virtual;
  #L40162e.  v0:= temp;
  #L401630.  v1.`com.google.android.material.slider.BaseSlider$SliderState.hasFocus` @type ^`boolean` := v0 @kind boolean;
  #L401634.  return v1 @kind object;
}
procedure `void` `onSizeChanged`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/android/material/slider/BaseSlider;.onSizeChanged:(IIII)V` @AccessFlag PROTECTED {
    temp;

  #L40357c.  call `updateTrackWidth`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.updateTrackWidth:(I)V` @kind direct;
  #L403582.  call `updateHaloHotspot`(v0) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L403588.  return @kind void;
}
procedure `boolean` `onTouchEvent`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `android.view.MotionEvent` v6 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L40195c.  call temp:= `isEnabled`(v5) @signature `Landroid/view/View;.isEnabled:()Z` @kind virtual;
  #L401962.  v0:= temp;
  #L401964.  v1:= 0I;
  #L401966.  if v0 != 0 then goto L40196c;
  #L40196a.  return v1;
  #L40196c.  call temp:= `getX`(v6) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L401972.  v0:= temp;
  #L401974.  v2:= v5.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L401978.  v2:= (`float`) v2 @kind i2f;
  #L40197a.  v2:= v0 - v2 @kind float;
  #L40197e.  v3:= v5.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L401982.  v3:= (`float`) v3 @kind i2f;
  #L401984.  v2:= v2 / v3 @kind float;
  #L401986.  v5.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float` := v2;
  #L40198a.  v3:= 0I;
  #L40198c.  call temp:= `max`(v3, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L401992.  v2:= temp;
  #L401994.  v5.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float` := v2;
  #L401998.  v3:= 1.0F;
  #L40199c.  call temp:= `min`(v3, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L4019a2.  v2:= temp;
  #L4019a4.  v5.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float` := v2;
  #L4019a8.  call temp:= `getActionMasked`(v6) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L4019ae.  v2:= temp;
  #L4019b0.  v3:= 1I;
  #L4019b2.  if v2 == 0 then goto L401ade;
  #L4019b6.  if v2 == v3 then goto L401a34;
  #L4019ba.  v4:= 2I;
  #L4019bc.  if v2 == v4 then goto L4019c4;
  #L4019c0.  goto L401b2e;
  #L4019c4.  v2:= v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` @kind boolean;
  #L4019c8.  if v2 != 0 then goto L401a0a;
  #L4019cc.  call temp:= `isInVerticalScrollingContainer`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.isInVerticalScrollingContainer:()Z` @kind direct;
  #L4019d2.  v2:= temp;
  #L4019d4.  if v2 == 0 then goto L4019f6;
  #L4019d8.  v2:= v5.`com.google.android.material.slider.BaseSlider.touchDownX` @type ^`float`;
  #L4019dc.  v0:= v0 - v2 @kind float;
  #L4019de.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L4019e4.  v0:= temp;
  #L4019e6.  v2:= v5.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int`;
  #L4019ea.  v2:= (`float`) v2 @kind i2f;
  #L4019ec.  v0:= fcmpg(v0, v2);
  #L4019f0.  if v0 >= 0 then goto L4019f6;
  #L4019f4.  return v1;
  #L4019f6.  call temp:= `getParent`(v5) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L4019fc.  v0:= temp @kind object;
  #L4019fe.  call `requestDisallowInterceptTouchEvent`(v0, v3) @signature `Landroid/view/ViewParent;.requestDisallowInterceptTouchEvent:(Z)V` @kind interface;
  #L401a04.  call `onStartTrackingTouch`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.onStartTrackingTouch:()V` @kind direct;
  #L401a0a.  call temp:= `pickActiveThumb`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.pickActiveThumb:()Z` @kind virtual;
  #L401a10.  v0:= temp;
  #L401a12.  if v0 != 0 then goto L401a1a;
  #L401a16.  goto L401b2e;
  #L401a1a.  v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` := v3 @kind boolean;
  #L401a1e.  call temp:= `snapTouchPosition`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.snapTouchPosition:()Z` @kind direct;
  #L401a24.  call `updateHaloHotspot`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L401a2a.  call `invalidate`(v5) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L401a30.  goto L401b2e;
  #L401a34.  v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` := v1 @kind boolean;
  #L401a38.  v0:= v5.`com.google.android.material.slider.BaseSlider.lastEvent` @type ^`android.view.MotionEvent` @kind object;
  #L401a3c.  if v0 == 0 then goto L401ab6;
  #L401a40.  call temp:= `getActionMasked`(v0) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L401a46.  v0:= temp;
  #L401a48.  if v0 != 0 then goto L401ab6;
  #L401a4c.  v0:= v5.`com.google.android.material.slider.BaseSlider.lastEvent` @type ^`android.view.MotionEvent` @kind object;
  #L401a50.  call temp:= `getX`(v0) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L401a56.  v0:= temp;
  #L401a58.  call temp:= `getX`(v6) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L401a5e.  v1:= temp;
  #L401a60.  v0:= v0 - v1 @kind float;
  #L401a62.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L401a68.  v0:= temp;
  #L401a6a.  v1:= v5.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int`;
  #L401a6e.  v1:= (`float`) v1 @kind i2f;
  #L401a70.  v0:= fcmpg(v0, v1);
  #L401a74.  if v0 > 0 then goto L401ab6;
  #L401a78.  v0:= v5.`com.google.android.material.slider.BaseSlider.lastEvent` @type ^`android.view.MotionEvent` @kind object;
  #L401a7c.  call temp:= `getY`(v0) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L401a82.  v0:= temp;
  #L401a84.  call temp:= `getY`(v6) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L401a8a.  v1:= temp;
  #L401a8c.  v0:= v0 - v1 @kind float;
  #L401a8e.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L401a94.  v0:= temp;
  #L401a96.  v1:= v5.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int`;
  #L401a9a.  v1:= (`float`) v1 @kind i2f;
  #L401a9c.  v0:= fcmpg(v0, v1);
  #L401aa0.  if v0 > 0 then goto L401ab6;
  #L401aa4.  call temp:= `pickActiveThumb`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.pickActiveThumb:()Z` @kind virtual;
  #L401aaa.  v0:= temp;
  #L401aac.  if v0 == 0 then goto L401ab6;
  #L401ab0.  call `onStartTrackingTouch`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.onStartTrackingTouch:()V` @kind direct;
  #L401ab6.  v0:= v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L401aba.  v1:= -1I;
  #L401abc.  if v0 == v1 then goto L401ad0;
  #L401ac0.  call temp:= `snapTouchPosition`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.snapTouchPosition:()Z` @kind direct;
  #L401ac6.  v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v1;
  #L401aca.  call `onStopTrackingTouch`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.onStopTrackingTouch:()V` @kind direct;
  #L401ad0.  call `ensureLabelsRemoved`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsRemoved:()V` @kind direct;
  #L401ad6.  call `invalidate`(v5) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L401adc.  goto L401b2e;
  #L401ade.  v5.`com.google.android.material.slider.BaseSlider.touchDownX` @type ^`float` := v0;
  #L401ae2.  call temp:= `isInVerticalScrollingContainer`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.isInVerticalScrollingContainer:()Z` @kind direct;
  #L401ae8.  v0:= temp;
  #L401aea.  if v0 == 0 then goto L401af0;
  #L401aee.  goto L401b2e;
  #L401af0.  call temp:= `getParent`(v5) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L401af6.  v0:= temp @kind object;
  #L401af8.  call `requestDisallowInterceptTouchEvent`(v0, v3) @signature `Landroid/view/ViewParent;.requestDisallowInterceptTouchEvent:(Z)V` @kind interface;
  #L401afe.  call temp:= `pickActiveThumb`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.pickActiveThumb:()Z` @kind virtual;
  #L401b04.  v0:= temp;
  #L401b06.  if v0 != 0 then goto L401b0c;
  #L401b0a.  goto L401b2e;
  #L401b0c.  call temp:= `requestFocus`(v5) @signature `Landroid/view/View;.requestFocus:()Z` @kind virtual;
  #L401b12.  v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` := v3 @kind boolean;
  #L401b16.  call temp:= `snapTouchPosition`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.snapTouchPosition:()Z` @kind direct;
  #L401b1c.  call `updateHaloHotspot`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L401b22.  call `invalidate`(v5) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L401b28.  call `onStartTrackingTouch`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.onStartTrackingTouch:()V` @kind direct;
  #L401b2e.  v0:= v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` @kind boolean;
  #L401b32.  call `setPressed`(v5, v0) @signature `Landroid/view/View;.setPressed:(Z)V` @kind virtual;
  #L401b38.  call temp:= `obtain`(v6) @signature `Landroid/view/MotionEvent;.obtain:(Landroid/view/MotionEvent;)Landroid/view/MotionEvent;` @kind static;
  #L401b3e.  v6:= temp @kind object;
  #L401b40.  v5.`com.google.android.material.slider.BaseSlider.lastEvent` @type ^`android.view.MotionEvent` := v6 @kind object;
  #L401b44.  return v3;
}
procedure `boolean` `pickActiveThumb`(`com.google.android.material.slider.BaseSlider` v11 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.pickActiveThumb:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L401b58.  v0:= v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L401b5c.  v1:= -1I;
  #L401b5e.  v2:= 1I;
  #L401b60.  if v0 == v1 then goto L401b66;
  #L401b64.  return v2;
  #L401b66.  call temp:= `getValueOfTouchPositionAbsolute`(v11) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueOfTouchPositionAbsolute:()F` @kind direct;
  #L401b6c.  v0:= temp;
  #L401b6e.  call temp:= `valueToX`(v11, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.valueToX:(F)F` @kind direct;
  #L401b74.  v3:= temp;
  #L401b76.  v4:= 0I;
  #L401b78.  v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v4;
  #L401b7c.  v5:= v11.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L401b80.  call temp:= `get`(v5, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L401b86.  v5:= temp @kind object;
  #L401b88.  v5:= (`java.lang.Float`) v5 @kind object;
  #L401b8c.  call temp:= `floatValue`(v5) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L401b92.  v5:= temp;
  #L401b94.  v5:= v5 - v0 @kind float;
  #L401b96.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L401b9c.  v5:= temp;
  #L401b9e.  v6:= 1I;
  #L401ba0.  v7:= v11.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L401ba4.  call temp:= `size`(v7) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L401baa.  v7:= temp;
  #L401bac.  if v6 >= v7 then goto L401c7a;
  #L401bb0.  v7:= v11.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L401bb4.  call temp:= `get`(v7, v6) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L401bba.  v7:= temp @kind object;
  #L401bbc.  v7:= (`java.lang.Float`) v7 @kind object;
  #L401bc0.  call temp:= `floatValue`(v7) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L401bc6.  v7:= temp;
  #L401bc8.  v7:= v7 - v0 @kind float;
  #L401bca.  call temp:= `abs`(v7) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L401bd0.  v7:= temp;
  #L401bd2.  v8:= v11.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L401bd6.  call temp:= `get`(v8, v6) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L401bdc.  v8:= temp @kind object;
  #L401bde.  v8:= (`java.lang.Float`) v8 @kind object;
  #L401be2.  call temp:= `floatValue`(v8) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L401be8.  v8:= temp;
  #L401bea.  call temp:= `valueToX`(v11, v8) @signature `Lcom/google/android/material/slider/BaseSlider;.valueToX:(F)F` @kind direct;
  #L401bf0.  v8:= temp;
  #L401bf2.  call temp:= `compare`(v7, v5) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L401bf8.  v9:= temp;
  #L401bfa.  if v9 <= v2 then goto L401c00;
  #L401bfe.  goto L401c7a;
  #L401c00.  call temp:= `isRtl`(v11) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L401c06.  v9:= temp;
  #L401c08.  v10:= 0I;
  #L401c0a.  if v9 == 0 then goto L401c1c;
  #L401c0e.  v9:= v8 - v3 @kind float;
  #L401c12.  v9:= fcmpl(v9, v10);
  #L401c16.  if v9 <= 0 then goto L401c2c;
  #L401c1a.  goto L401c28;
  #L401c1c.  v9:= v8 - v3 @kind float;
  #L401c20.  v9:= fcmpg(v9, v10);
  #L401c24.  if v9 >= 0 then goto L401c2c;
  #L401c28.  v9:= 1I;
  #L401c2a.  goto L401c2e;
  #L401c2c.  v9:= 0I;
  #L401c2e.  call temp:= `compare`(v7, v5) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L401c34.  v10:= temp;
  #L401c36.  if v10 >= 0 then goto L401c40;
  #L401c3a.  v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v6;
  #L401c3e.  goto L401c72;
  #L401c40.  call temp:= `compare`(v7, v5) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L401c46.  v10:= temp;
  #L401c48.  if v10 != 0 then goto L401c74;
  #L401c4c.  v8:= v8 - v3 @kind float;
  #L401c4e.  call temp:= `abs`(v8) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L401c54.  v8:= temp;
  #L401c56.  v10:= v11.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int`;
  #L401c5a.  v10:= (`float`) v10 @kind i2f;
  #L401c5c.  v8:= fcmpg(v8, v10);
  #L401c60.  if v8 >= 0 then goto L401c6a;
  #L401c64.  v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v1;
  #L401c68.  return v4;
  #L401c6a.  if v9 == 0 then goto L401c74;
  #L401c6e.  v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v6;
  #L401c72.  v5:= v7;
  #L401c74.  v6:= v6 + 1;
  #L401c78.  goto L401ba0;
  #L401c7a.  v0:= v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L401c7e.  if v0 == v1 then goto L401c84;
  #L401c82.  goto L401c86;
  #L401c84.  v2:= 0I;
  #L401c86.  return v2;
}
procedure `void` `removeOnChangeListener`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.slider.BaseOnChangeListener` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.removeOnChangeListener:(Lcom/google/android/material/slider/BaseOnChangeListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403860.  v0:= v1.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L403864.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L40386a.  return @kind void;
}
procedure `void` `removeOnSliderTouchListener`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.slider.BaseOnSliderTouchListener` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.removeOnSliderTouchListener:(Lcom/google/android/material/slider/BaseOnSliderTouchListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40387c.  v0:= v1.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L403880.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L403886.  return @kind void;
}
procedure `void` `setActiveThumbIndex`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setActiveThumbIndex:(I)V` @AccessFlag PROTECTED {
    temp;

  #L4038e4.  v0.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v1;
  #L4038e8.  return @kind void;
}
procedure `void` `setEnabled`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4038fc.  call `setEnabled`(v1, v2) @signature `Landroid/view/View;.setEnabled:(Z)V` @kind super;
  #L403902.  if v2 == 0 then goto L40390a;
  #L403906.  v2:= 0I;
  #L403908.  goto L40390c;
  #L40390a.  v2:= 2I;
  #L40390c.  v0:= 0I;
  #L40390e.  call `setLayerType`(v1, v2, v0) @signature `Landroid/view/View;.setLayerType:(ILandroid/graphics/Paint;)V` @kind virtual;
  #L403914.  return @kind void;
}
procedure `void` `setFocusedThumbIndex`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setFocusedThumbIndex:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403928.  if v2 < 0 then goto L403952;
  #L40392c.  v0:= v1.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L403930.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L403936.  v0:= temp;
  #L403938.  if v2 >= v0 then goto L403952;
  #L40393c.  v1.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v2;
  #L403940.  v0:= v1.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L403944.  call temp:= `requestKeyboardFocusForVirtualView`(v0, v2) @signature `Landroidx/customview/widget/ExploreByTouchHelper;.requestKeyboardFocusForVirtualView:(I)Z` @kind virtual;
  #L40394a.  call `postInvalidate`(v1) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L403950.  return @kind void;
  #L403952.  v2:= new `java.lang.IllegalArgumentException`;
  #L403956.  v0:= "index out of range" @kind object;
  #L40395a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L403960.  throw v2;
}
procedure `void` `setHaloRadius`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloRadius:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403974.  v0:= v1.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L403978.  if v2 != v0 then goto L40397e;
  #L40397c.  return @kind void;
  #L40397e.  v1.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int` := v2;
  #L403982.  call temp:= `getBackground`(v1) @signature `Landroid/view/View;.getBackground:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L403988.  v2:= temp @kind object;
  #L40398a.  call temp:= `shouldDrawCompatHalo`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @kind direct;
  #L403990.  v0:= temp;
  #L403992.  if v0 != 0 then goto L4039ae;
  #L403996.  v0:= instanceof @variable v2 @type ^`android.graphics.drawable.RippleDrawable` @kind boolean;
  #L40399a.  if v0 == 0 then goto L4039ae;
  #L40399e.  v2:= (`android.graphics.drawable.RippleDrawable`) v2 @kind object;
  #L4039a2.  v0:= v1.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L4039a6.  call `setRippleDrawableRadius`(v2, v0) @signature `Lcom/google/android/material/drawable/DrawableUtils;.setRippleDrawableRadius:(Landroid/graphics/drawable/RippleDrawable;I)V` @kind static;
  #L4039ac.  return @kind void;
  #L4039ae.  call `postInvalidate`(v1) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4039b4.  return @kind void;
}
procedure `void` `setHaloRadiusResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloRadiusResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4039c8.  call temp:= `getResources`(v1) @signature `Landroid/view/View;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L4039ce.  v0:= temp @kind object;
  #L4039d0.  call temp:= `getDimensionPixelSize`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L4039d6.  v2:= temp;
  #L4039d8.  call `setHaloRadius`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloRadius:(I)V` @kind virtual;
  #L4039de.  return @kind void;
}
procedure `void` `setHaloTintList`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4039f0.  v0:= v2.`com.google.android.material.slider.BaseSlider.haloColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4039f4.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4039fa.  v0:= temp;
  #L4039fc.  if v0 == 0 then goto L403a02;
  #L403a00.  return @kind void;
  #L403a02.  v2.`com.google.android.material.slider.BaseSlider.haloColor` @type ^`android.content.res.ColorStateList` := v3 @kind object;
  #L403a06.  call temp:= `getBackground`(v2) @signature `Landroid/view/View;.getBackground:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L403a0c.  v0:= temp @kind object;
  #L403a0e.  call temp:= `shouldDrawCompatHalo`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @kind direct;
  #L403a14.  v1:= temp;
  #L403a16.  if v1 != 0 then goto L403a2e;
  #L403a1a.  v1:= instanceof @variable v0 @type ^`android.graphics.drawable.RippleDrawable` @kind boolean;
  #L403a1e.  if v1 == 0 then goto L403a2e;
  #L403a22.  v0:= (`android.graphics.drawable.RippleDrawable`) v0 @kind object;
  #L403a26.  call `setColor`(v0, v3) @signature `Landroid/graphics/drawable/RippleDrawable;.setColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L403a2c.  return @kind void;
  #L403a2e.  v0:= v2.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L403a32.  call temp:= `getColorForState`(v2, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L403a38.  v3:= temp;
  #L403a3a.  call `setColor`(v0, v3) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L403a40.  v3:= v2.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L403a44.  v0:= 63I;
  #L403a48.  call `setAlpha`(v3, v0) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L403a4e.  call `invalidate`(v2) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L403a54.  return @kind void;
}
procedure `void` `setLabelBehavior`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setLabelBehavior:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403a68.  v0:= v1.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L403a6c.  if v0 == v2 then goto L403a7a;
  #L403a70.  v1.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int` := v2;
  #L403a74.  call `requestLayout`(v1) @signature `Landroid/view/View;.requestLayout:()V` @kind virtual;
  #L403a7a.  return @kind void;
}
procedure `void` `setLabelFormatter`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `com.google.android.material.slider.LabelFormatter` v1 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setLabelFormatter:(Lcom/google/android/material/slider/LabelFormatter;)V` @AccessFlag PUBLIC {
    temp;

  #L403a8c.  v0.`com.google.android.material.slider.BaseSlider.formatter` @type ^`com.google.android.material.slider.LabelFormatter` := v1 @kind object;
  #L403a90.  return @kind void;
}
procedure `void` `setSeparationUnit`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setSeparationUnit:(I)V` @AccessFlag PROTECTED {
    temp;

  #L403aa4.  v0.`com.google.android.material.slider.BaseSlider.separationUnit` @type ^`int` := v1;
  #L403aa8.  return @kind void;
}
procedure `void` `setStepSize`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `float` v5 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setStepSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L403abc.  v0:= 1I;
  #L403abe.  v1:= 0I;
  #L403ac0.  v1:= fcmpg(v5, v1);
  #L403ac4.  if v1 < 0 then goto L403ae4;
  #L403ac8.  v1:= v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L403acc.  v1:= fcmpl(v1, v5);
  #L403ad0.  if v1 == 0 then goto L403ae2;
  #L403ad4.  v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float` := v5;
  #L403ad8.  v4.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v0 @kind boolean;
  #L403adc.  call `postInvalidate`(v4) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L403ae2.  return @kind void;
  #L403ae4.  v1:= new `java.lang.IllegalArgumentException`;
  #L403ae8.  v2:= 3I;
  #L403aea.  v2:= new `java.lang.Object`[v2];
  #L403aee.  v3:= 0I;
  #L403af0.  call temp:= `toString`(v5) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L403af6.  v5:= temp @kind object;
  #L403af8.  v2[v3]:= v5 @kind object;
  #L403afc.  v5:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L403b00.  call temp:= `toString`(v5) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L403b06.  v5:= temp @kind object;
  #L403b08.  v2[v0]:= v5 @kind object;
  #L403b0c.  v5:= 2I;
  #L403b0e.  v0:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L403b12.  call temp:= `toString`(v0) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L403b18.  v0:= temp @kind object;
  #L403b1a.  v2[v5]:= v0 @kind object;
  #L403b1e.  v5:= "The stepSize(%s) must be 0, or a factor of the valueFrom(%s)-valueTo(%s) range" @kind object;
  #L403b22.  call temp:= `format`(v5, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L403b28.  v5:= temp @kind object;
  #L403b2a.  call `<init>`(v1, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L403b30.  throw v1;
}
procedure `void` `setThumbElevation`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbElevation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403b44.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L403b48.  call `setElevation`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @kind virtual;
  #L403b4e.  return @kind void;
}
procedure `void` `setThumbElevationResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbElevationResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403b60.  call temp:= `getResources`(v1) @signature `Landroid/view/View;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L403b66.  v0:= temp @kind object;
  #L403b68.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L403b6e.  v2:= temp;
  #L403b70.  call `setThumbElevation`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbElevation:(F)V` @kind virtual;
  #L403b76.  return @kind void;
}
procedure `void` `setThumbRadius`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbRadius:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L403b88.  v0:= v3.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L403b8c.  if v4 != v0 then goto L403b92;
  #L403b90.  return @kind void;
  #L403b92.  v3.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int` := v4;
  #L403b96.  call `maybeIncreaseTrackSidePadding`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeIncreaseTrackSidePadding:()V` @kind direct;
  #L403b9c.  v4:= v3.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L403ba0.  call temp:= `builder`() @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.builder:()Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;` @kind static;
  #L403ba6.  v0:= temp @kind object;
  #L403ba8.  v1:= v3.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L403bac.  v1:= (`float`) v1 @kind i2f;
  #L403bae.  v2:= 0I;
  #L403bb0.  call temp:= `setAllCorners`(v0, v2, v1) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;.setAllCorners:(IF)Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;` @kind virtual;
  #L403bb6.  v0:= temp @kind object;
  #L403bb8.  call temp:= `build`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;.build:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L403bbe.  v0:= temp @kind object;
  #L403bc0.  call `setShapeAppearanceModel`(v4, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L403bc6.  v4:= v3.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L403bca.  v0:= v3.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L403bce.  v1:= v0 * 2;
  #L403bd2.  v0:= v0 * 2;
  #L403bd6.  call `setBounds`(v4, v2, v2, v1, v0) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L403bdc.  call `postInvalidate`(v3) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L403be2.  return @kind void;
}
procedure `void` `setThumbRadiusResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbRadiusResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403bf4.  call temp:= `getResources`(v1) @signature `Landroid/view/View;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L403bfa.  v0:= temp @kind object;
  #L403bfc.  call temp:= `getDimensionPixelSize`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L403c02.  v2:= temp;
  #L403c04.  call `setThumbRadius`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbRadius:(I)V` @kind virtual;
  #L403c0a.  return @kind void;
}
procedure `void` `setThumbStrokeColor`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403c1c.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L403c20.  call `setStrokeColor`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L403c26.  call `postInvalidate`(v1) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L403c2c.  return @kind void;
}
procedure `void` `setThumbStrokeColorResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403c40.  if v2 == 0 then goto L403c5a;
  #L403c44.  call temp:= `getContext`(v1) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L403c4a.  v0:= temp @kind object;
  #L403c4c.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L403c52.  v2:= temp @kind object;
  #L403c54.  call `setThumbStrokeColor`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L403c5a.  return @kind void;
}
procedure `void` `setThumbStrokeWidth`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403c6c.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L403c70.  call `setStrokeWidth`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind virtual;
  #L403c76.  call `postInvalidate`(v1) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L403c7c.  return @kind void;
}
procedure `void` `setThumbStrokeWidthResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeWidthResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403c90.  if v2 == 0 then goto L403caa;
  #L403c94.  call temp:= `getResources`(v1) @signature `Landroid/view/View;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L403c9a.  v0:= temp @kind object;
  #L403c9c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L403ca2.  v2:= temp;
  #L403ca4.  call `setThumbStrokeWidth`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeWidth:(F)V` @kind virtual;
  #L403caa.  return @kind void;
}
procedure `void` `setThumbTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403cbc.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L403cc0.  call temp:= `getFillColor`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L403cc6.  v0:= temp @kind object;
  #L403cc8.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L403cce.  v0:= temp;
  #L403cd0.  if v0 == 0 then goto L403cd6;
  #L403cd4.  return @kind void;
  #L403cd6.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L403cda.  call `setFillColor`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L403ce0.  call `invalidate`(v1) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L403ce6.  return @kind void;
}
procedure `void` `setTickActiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickActiveTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403cf8.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L403cfc.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L403d02.  v0:= temp;
  #L403d04.  if v0 == 0 then goto L403d0a;
  #L403d08.  return @kind void;
  #L403d0a.  v1.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L403d0e.  v0:= v1.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L403d12.  call temp:= `getColorForState`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L403d18.  v2:= temp;
  #L403d1a.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L403d20.  call `invalidate`(v1) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L403d26.  return @kind void;
}
procedure `void` `setTickInactiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickInactiveTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403d38.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L403d3c.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L403d42.  v0:= temp;
  #L403d44.  if v0 == 0 then goto L403d4a;
  #L403d48.  return @kind void;
  #L403d4a.  v1.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L403d4e.  v0:= v1.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L403d52.  call temp:= `getColorForState`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L403d58.  v2:= temp;
  #L403d5a.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L403d60.  call `invalidate`(v1) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L403d66.  return @kind void;
}
procedure `void` `setTickTintList`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `android.content.res.ColorStateList` v1 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;

  #L403d78.  call `setTickInactiveTintList`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickInactiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L403d7e.  call `setTickActiveTintList`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickActiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L403d84.  return @kind void;
}
procedure `void` `setTickVisible`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403d98.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` @kind boolean;
  #L403d9c.  if v0 == v2 then goto L403daa;
  #L403da0.  v1.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` := v2 @kind boolean;
  #L403da4.  call `postInvalidate`(v1) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L403daa.  return @kind void;
}
procedure `void` `setTrackActiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackActiveTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403dbc.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L403dc0.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L403dc6.  v0:= temp;
  #L403dc8.  if v0 == 0 then goto L403dce;
  #L403dcc.  return @kind void;
  #L403dce.  v1.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L403dd2.  v0:= v1.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L403dd6.  call temp:= `getColorForState`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L403ddc.  v2:= temp;
  #L403dde.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L403de4.  call `invalidate`(v1) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L403dea.  return @kind void;
}
procedure `void` `setTrackHeight`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackHeight:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403dfc.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L403e00.  if v0 == v2 then goto L403e14;
  #L403e04.  v1.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int` := v2;
  #L403e08.  call `invalidateTrack`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidateTrack:()V` @kind direct;
  #L403e0e.  call `postInvalidate`(v1) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L403e14.  return @kind void;
}
procedure `void` `setTrackInactiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackInactiveTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403e28.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L403e2c.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L403e32.  v0:= temp;
  #L403e34.  if v0 == 0 then goto L403e3a;
  #L403e38.  return @kind void;
  #L403e3a.  v1.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L403e3e.  v0:= v1.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L403e42.  call temp:= `getColorForState`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L403e48.  v2:= temp;
  #L403e4a.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L403e50.  call `invalidate`(v1) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L403e56.  return @kind void;
}
procedure `void` `setTrackTintList`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `android.content.res.ColorStateList` v1 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;

  #L403e68.  call `setTrackInactiveTintList`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackInactiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L403e6e.  call `setTrackActiveTintList`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackActiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L403e74.  return @kind void;
}
procedure `void` `setValueFrom`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `float` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueFrom:(F)V` @AccessFlag PUBLIC {
    temp;

  #L403f34.  v0.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float` := v1;
  #L403f38.  v1:= 1I;
  #L403f3a.  v0.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v1 @kind boolean;
  #L403f3e.  call `postInvalidate`(v0) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L403f44.  return @kind void;
}
procedure `void` `setValueTo`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `float` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueTo:(F)V` @AccessFlag PUBLIC {
    temp;

  #L403f58.  v0.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float` := v1;
  #L403f5c.  v1:= 1I;
  #L403f5e.  v0.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v1 @kind boolean;
  #L403f62.  call `postInvalidate`(v0) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L403f68.  return @kind void;
}
procedure `void` `setValues`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setValues:(Ljava/util/List;)V` @AccessFlag  {
    temp;
    v0;

  #L403fa4.  v0:= new `java.util.ArrayList`;
  #L403fa8.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L403fae.  call `setValuesInternal`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.setValuesInternal:(Ljava/util/ArrayList;)V` @kind direct;
  #L403fb4.  return @kind void;
}
procedure `void` `setValues`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `java.lang.Float`[] v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setValues:([Ljava/lang/Float;)V` @AccessFlag  {
    temp;
    v0;

  #L403f7c.  v0:= new `java.util.ArrayList`;
  #L403f80.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L403f86.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L403f8c.  call `setValuesInternal`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.setValuesInternal:(Ljava/util/ArrayList;)V` @kind direct;
  #L403f92.  return @kind void;
}
procedure `void` `updateBoundsForVirturalViewId`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `int` v5 , `android.graphics.Rect` v6 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.updateBoundsForVirturalViewId:(ILandroid/graphics/Rect;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L404050.  v0:= v4.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L404054.  call temp:= `getValues`(v4) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @kind virtual;
  #L40405a.  v1:= temp @kind object;
  #L40405c.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L404062.  v5:= temp @kind object;
  #L404064.  v5:= (`java.lang.Float`) v5 @kind object;
  #L404068.  call temp:= `floatValue`(v5) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L40406e.  v5:= temp;
  #L404070.  call temp:= `normalizeValue`(v4, v5) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L404076.  v5:= temp;
  #L404078.  v1:= v4.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L40407c.  v1:= (`float`) v1 @kind i2f;
  #L40407e.  v5:= v5 * v1 @kind float;
  #L404082.  v5:= (`int`) v5 @kind f2i;
  #L404084.  v0:= v0 + v5 @kind int;
  #L404086.  call temp:= `calculateTop`(v4) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTop:()I` @kind direct;
  #L40408c.  v5:= temp;
  #L40408e.  v1:= v4.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L404092.  v2:= v0 - v1 @kind int;
  #L404096.  v3:= v5 - v1 @kind int;
  #L40409a.  v0:= v0 + v1 @kind int;
  #L40409c.  v5:= v5 + v1 @kind int;
  #L40409e.  call `set`(v6, v2, v3, v0, v5) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L4040a4.  return @kind void;
}
