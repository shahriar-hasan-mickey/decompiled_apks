record `com.google.android.material.transition.platform.FitModeEvaluators$1` @kind class @AccessFlag FINAL extends `com.google.android.material.transition.platform.FitModeEvaluator` @kind interface {
}
procedure `void` `<init>`(`com.google.android.material.transition.platform.FitModeEvaluators$1` v0 @kind this) @signature `Lcom/google/android/material/transition/platform/FitModeEvaluators$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41fa94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41fa9a.  return @kind void;
}
procedure `void` `applyMask`(`com.google.android.material.transition.platform.FitModeEvaluators$1` v1 @kind this, `android.graphics.RectF` v2 @kind object, `float` v3 , `com.google.android.material.transition.platform.FitModeResult` v4 @kind object) @signature `Lcom/google/android/material/transition/platform/FitModeEvaluators$1;.applyMask:(Landroid/graphics/RectF;FLcom/google/android/material/transition/platform/FitModeResult;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41faac.  v0:= v4.`com.google.android.material.transition.platform.FitModeResult.currentEndHeight` @type ^`float`;
  #L41fab0.  v4:= v4.`com.google.android.material.transition.platform.FitModeResult.currentStartHeight` @type ^`float`;
  #L41fab4.  v0:= v0 - v4 @kind float;
  #L41fab6.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L41fabc.  v4:= temp;
  #L41fabe.  v0:= v2.`android.graphics.RectF.bottom` @type ^`float`;
  #L41fac2.  v4:= v4 * v3 @kind float;
  #L41fac6.  v0:= v0 - v4 @kind float;
  #L41fac8.  v2.`android.graphics.RectF.bottom` @type ^`float` := v0;
  #L41facc.  return @kind void;
}
procedure `com.google.android.material.transition.platform.FitModeResult` `evaluate`(`com.google.android.material.transition.platform.FitModeEvaluators$1` v6 @kind this, `float` v7 , `float` v8 , `float` v9 , `float` v10 , `float` v11 , `float` v12 , `float` v13 ) @signature `Lcom/google/android/material/transition/platform/FitModeEvaluators$1;.evaluate:(FFFFFFF)Lcom/google/android/material/transition/platform/FitModeResult;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41fa4c.  v5:= 1I;
  #L41fa4e.  v0:= v10;
  #L41fa50.  v1:= v12;
  #L41fa52.  v2:= v8;
  #L41fa54.  v3:= v9;
  #L41fa56.  v4:= v7;
  #L41fa58.  call temp:= `lerp`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/transition/platform/TransitionUtils;.lerp:(FFFFFZ)F` @kind static;
  #L41fa5e.  v0:= temp;
  #L41fa60.  v8:= v0 / v10 @kind float;
  #L41fa64.  v9:= v0 / v12 @kind float;
  #L41fa68.  v11:= v11 * v8 @kind float;
  #L41fa6c.  v13:= v13 * v9 @kind float;
  #L41fa70.  v1:= new `com.google.android.material.transition.platform.FitModeResult`;
  #L41fa74.  v7:= v1 @kind object;
  #L41fa76.  v10:= v0;
  #L41fa78.  v12:= v0;
  #L41fa7a.  call `<init>`(v7, v8, v9, v10, v11, v12, v13) @signature `Lcom/google/android/material/transition/platform/FitModeResult;.<init>:(FFFFFF)V` @kind direct;
  #L41fa80.  return v1 @kind object;
}
procedure `boolean` `shouldMaskStartBounds`(`com.google.android.material.transition.platform.FitModeEvaluators$1` v1 @kind this, `com.google.android.material.transition.platform.FitModeResult` v2 @kind object) @signature `Lcom/google/android/material/transition/platform/FitModeEvaluators$1;.shouldMaskStartBounds:(Lcom/google/android/material/transition/platform/FitModeResult;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41fa24.  v0:= v2.`com.google.android.material.transition.platform.FitModeResult.currentStartHeight` @type ^`float`;
  #L41fa28.  v2:= v2.`com.google.android.material.transition.platform.FitModeResult.currentEndHeight` @type ^`float`;
  #L41fa2c.  v2:= fcmpl(v0, v2);
  #L41fa30.  if v2 <= 0 then goto L41fa38;
  #L41fa34.  v2:= 1I;
  #L41fa36.  goto L41fa3a;
  #L41fa38.  v2:= 0I;
  #L41fa3a.  return v2;
}
