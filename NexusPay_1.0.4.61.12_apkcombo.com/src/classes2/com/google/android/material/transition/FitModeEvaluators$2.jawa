record `com.google.android.material.transition.FitModeEvaluators$2` @kind class @AccessFlag FINAL extends `com.google.android.material.transition.FitModeEvaluator` @kind interface {
}
procedure `void` `<init>`(`com.google.android.material.transition.FitModeEvaluators$2` v0 @kind this) @signature `Lcom/google/android/material/transition/FitModeEvaluators$2;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41b940.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41b946.  return @kind void;
}
procedure `void` `applyMask`(`com.google.android.material.transition.FitModeEvaluators$2` v2 @kind this, `android.graphics.RectF` v3 @kind object, `float` v4 , `com.google.android.material.transition.FitModeResult` v5 @kind object) @signature `Lcom/google/android/material/transition/FitModeEvaluators$2;.applyMask:(Landroid/graphics/RectF;FLcom/google/android/material/transition/FitModeResult;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41b958.  v0:= v5.`com.google.android.material.transition.FitModeResult.currentEndWidth` @type ^`float`;
  #L41b95c.  v5:= v5.`com.google.android.material.transition.FitModeResult.currentStartWidth` @type ^`float`;
  #L41b960.  v0:= v0 - v5 @kind float;
  #L41b962.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L41b968.  v5:= temp;
  #L41b96a.  v0:= v3.`android.graphics.RectF.left` @type ^`float`;
  #L41b96e.  v1:= 2.0F;
  #L41b972.  v5:= v5 / v1 @kind float;
  #L41b974.  v5:= v5 * v4 @kind float;
  #L41b978.  v0:= v0 + v5 @kind float;
  #L41b97a.  v3.`android.graphics.RectF.left` @type ^`float` := v0;
  #L41b97e.  v4:= v3.`android.graphics.RectF.right` @type ^`float`;
  #L41b982.  v4:= v4 - v5 @kind float;
  #L41b984.  v3.`android.graphics.RectF.right` @type ^`float` := v4;
  #L41b988.  return @kind void;
}
procedure `com.google.android.material.transition.FitModeResult` `evaluate`(`com.google.android.material.transition.FitModeEvaluators$2` v6 @kind this, `float` v7 , `float` v8 , `float` v9 , `float` v10 , `float` v11 , `float` v12 , `float` v13 ) @signature `Lcom/google/android/material/transition/FitModeEvaluators$2;.evaluate:(FFFFFFF)Lcom/google/android/material/transition/FitModeResult;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41b8f8.  v5:= 1I;
  #L41b8fa.  v0:= v11;
  #L41b8fc.  v1:= v13;
  #L41b8fe.  v2:= v8;
  #L41b900.  v3:= v9;
  #L41b902.  v4:= v7;
  #L41b904.  call temp:= `lerp`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/transition/TransitionUtils;.lerp:(FFFFFZ)F` @kind static;
  #L41b90a.  v0:= temp;
  #L41b90c.  v8:= v0 / v11 @kind float;
  #L41b910.  v9:= v0 / v13 @kind float;
  #L41b914.  v10:= v10 * v8 @kind float;
  #L41b918.  v12:= v12 * v9 @kind float;
  #L41b91c.  v1:= new `com.google.android.material.transition.FitModeResult`;
  #L41b920.  v7:= v1 @kind object;
  #L41b922.  v11:= v0;
  #L41b924.  v13:= v0;
  #L41b926.  call `<init>`(v7, v8, v9, v10, v11, v12, v13) @signature `Lcom/google/android/material/transition/FitModeResult;.<init>:(FFFFFF)V` @kind direct;
  #L41b92c.  return v1 @kind object;
}
procedure `boolean` `shouldMaskStartBounds`(`com.google.android.material.transition.FitModeEvaluators$2` v1 @kind this, `com.google.android.material.transition.FitModeResult` v2 @kind object) @signature `Lcom/google/android/material/transition/FitModeEvaluators$2;.shouldMaskStartBounds:(Lcom/google/android/material/transition/FitModeResult;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41b8d0.  v0:= v2.`com.google.android.material.transition.FitModeResult.currentStartWidth` @type ^`float`;
  #L41b8d4.  v2:= v2.`com.google.android.material.transition.FitModeResult.currentEndWidth` @type ^`float`;
  #L41b8d8.  v2:= fcmpl(v0, v2);
  #L41b8dc.  if v2 <= 0 then goto L41b8e4;
  #L41b8e0.  v2:= 1I;
  #L41b8e2.  goto L41b8e6;
  #L41b8e4.  v2:= 0I;
  #L41b8e6.  return v2;
}
