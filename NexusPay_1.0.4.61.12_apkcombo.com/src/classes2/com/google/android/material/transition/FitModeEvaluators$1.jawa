record `com.google.android.material.transition.FitModeEvaluators$1` @kind class @AccessFlag FINAL extends `com.google.android.material.transition.FitModeEvaluator` @kind interface {
}
procedure `void` `<init>`(`com.google.android.material.transition.FitModeEvaluators$1` v0 @kind this) @signature `Lcom/google/android/material/transition/FitModeEvaluators$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41b884.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41b88a.  return @kind void;
}
procedure `void` `applyMask`(`com.google.android.material.transition.FitModeEvaluators$1` v1 @kind this, `android.graphics.RectF` v2 @kind object, `float` v3 , `com.google.android.material.transition.FitModeResult` v4 @kind object) @signature `Lcom/google/android/material/transition/FitModeEvaluators$1;.applyMask:(Landroid/graphics/RectF;FLcom/google/android/material/transition/FitModeResult;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41b89c.  v0:= v4.`com.google.android.material.transition.FitModeResult.currentEndHeight` @type ^`float`;
  #L41b8a0.  v4:= v4.`com.google.android.material.transition.FitModeResult.currentStartHeight` @type ^`float`;
  #L41b8a4.  v0:= v0 - v4 @kind float;
  #L41b8a6.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L41b8ac.  v4:= temp;
  #L41b8ae.  v0:= v2.`android.graphics.RectF.bottom` @type ^`float`;
  #L41b8b2.  v4:= v4 * v3 @kind float;
  #L41b8b6.  v0:= v0 - v4 @kind float;
  #L41b8b8.  v2.`android.graphics.RectF.bottom` @type ^`float` := v0;
  #L41b8bc.  return @kind void;
}
procedure `com.google.android.material.transition.FitModeResult` `evaluate`(`com.google.android.material.transition.FitModeEvaluators$1` v6 @kind this, `float` v7 , `float` v8 , `float` v9 , `float` v10 , `float` v11 , `float` v12 , `float` v13 ) @signature `Lcom/google/android/material/transition/FitModeEvaluators$1;.evaluate:(FFFFFFF)Lcom/google/android/material/transition/FitModeResult;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41b83c.  v5:= 1I;
  #L41b83e.  v0:= v10;
  #L41b840.  v1:= v12;
  #L41b842.  v2:= v8;
  #L41b844.  v3:= v9;
  #L41b846.  v4:= v7;
  #L41b848.  call temp:= `lerp`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/transition/TransitionUtils;.lerp:(FFFFFZ)F` @kind static;
  #L41b84e.  v0:= temp;
  #L41b850.  v8:= v0 / v10 @kind float;
  #L41b854.  v9:= v0 / v12 @kind float;
  #L41b858.  v11:= v11 * v8 @kind float;
  #L41b85c.  v13:= v13 * v9 @kind float;
  #L41b860.  v1:= new `com.google.android.material.transition.FitModeResult`;
  #L41b864.  v7:= v1 @kind object;
  #L41b866.  v10:= v0;
  #L41b868.  v12:= v0;
  #L41b86a.  call `<init>`(v7, v8, v9, v10, v11, v12, v13) @signature `Lcom/google/android/material/transition/FitModeResult;.<init>:(FFFFFF)V` @kind direct;
  #L41b870.  return v1 @kind object;
}
procedure `boolean` `shouldMaskStartBounds`(`com.google.android.material.transition.FitModeEvaluators$1` v1 @kind this, `com.google.android.material.transition.FitModeResult` v2 @kind object) @signature `Lcom/google/android/material/transition/FitModeEvaluators$1;.shouldMaskStartBounds:(Lcom/google/android/material/transition/FitModeResult;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41b814.  v0:= v2.`com.google.android.material.transition.FitModeResult.currentStartHeight` @type ^`float`;
  #L41b818.  v2:= v2.`com.google.android.material.transition.FitModeResult.currentEndHeight` @type ^`float`;
  #L41b81c.  v2:= fcmpl(v0, v2);
  #L41b820.  if v2 <= 0 then goto L41b828;
  #L41b824.  v2:= 1I;
  #L41b826.  goto L41b82a;
  #L41b828.  v2:= 0I;
  #L41b82a.  return v2;
}
