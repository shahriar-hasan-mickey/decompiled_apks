record `com.google.android.material.shape.ShapeAppearancePathProvider` @kind class @AccessFlag PUBLIC {
  `android.graphics.Path` `com.google.android.material.shape.ShapeAppearancePathProvider.boundsPath` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Path` `com.google.android.material.shape.ShapeAppearancePathProvider.cornerPath` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapePath`[] `com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Matrix`[] `com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.shape.ShapeAppearancePathProvider.edgeIntersectionCheckEnabled` @AccessFlag PRIVATE;
  `android.graphics.Path` `com.google.android.material.shape.ShapeAppearancePathProvider.edgePath` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Matrix`[] `com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Path` `com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @AccessFlag PRIVATE_FINAL;
  `android.graphics.PointF` `com.google.android.material.shape.ShapeAppearancePathProvider.pointF` @AccessFlag PRIVATE_FINAL;
  `float`[] `com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @AccessFlag PRIVATE_FINAL;
  `float`[] `com.google.android.material.shape.ShapeAppearancePathProvider.scratch2` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapePath` `com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.android.material.shape.ShapeAppearancePathProvider` v4 @kind this) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff6a0.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ff6a6.  v0:= 4I;
  #L3ff6a8.  v1:= new `com.google.android.material.shape.ShapePath`[v0];
  #L3ff6ac.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] := v1 @kind object;
  #L3ff6b0.  v1:= new `android.graphics.Matrix`[v0];
  #L3ff6b4.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] := v1 @kind object;
  #L3ff6b8.  v1:= new `android.graphics.Matrix`[v0];
  #L3ff6bc.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] := v1 @kind object;
  #L3ff6c0.  v1:= new `android.graphics.PointF`;
  #L3ff6c4.  call `<init>`(v1) @signature `Landroid/graphics/PointF;.<init>:()V` @kind direct;
  #L3ff6ca.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.pointF` @type ^`android.graphics.PointF` := v1 @kind object;
  #L3ff6ce.  v1:= new `android.graphics.Path`;
  #L3ff6d2.  call `<init>`(v1) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L3ff6d8.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @type ^`android.graphics.Path` := v1 @kind object;
  #L3ff6dc.  v1:= new `android.graphics.Path`;
  #L3ff6e0.  call `<init>`(v1) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L3ff6e6.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.boundsPath` @type ^`android.graphics.Path` := v1 @kind object;
  #L3ff6ea.  v1:= new `com.google.android.material.shape.ShapePath`;
  #L3ff6ee.  call `<init>`(v1) @signature `Lcom/google/android/material/shape/ShapePath;.<init>:()V` @kind direct;
  #L3ff6f4.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` := v1 @kind object;
  #L3ff6f8.  v1:= 2I;
  #L3ff6fa.  v2:= new `float`[v1];
  #L3ff6fe.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] := v2 @kind object;
  #L3ff702.  v1:= new `float`[v1];
  #L3ff706.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch2` @type ^`float`[] := v1 @kind object;
  #L3ff70a.  v1:= new `android.graphics.Path`;
  #L3ff70e.  call `<init>`(v1) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L3ff714.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.edgePath` @type ^`android.graphics.Path` := v1 @kind object;
  #L3ff718.  v1:= new `android.graphics.Path`;
  #L3ff71c.  call `<init>`(v1) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L3ff722.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPath` @type ^`android.graphics.Path` := v1 @kind object;
  #L3ff726.  v1:= 1I;
  #L3ff728.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeIntersectionCheckEnabled` @type ^`boolean` := v1 @kind boolean;
  #L3ff72c.  v1:= 0I;
  #L3ff72e.  if v1 >= v0 then goto L3ff76e;
  #L3ff732.  v2:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L3ff736.  v3:= new `com.google.android.material.shape.ShapePath`;
  #L3ff73a.  call `<init>`(v3) @signature `Lcom/google/android/material/shape/ShapePath;.<init>:()V` @kind direct;
  #L3ff740.  v2[v1]:= v3 @kind object;
  #L3ff744.  v2:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ff748.  v3:= new `android.graphics.Matrix`;
  #L3ff74c.  call `<init>`(v3) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3ff752.  v2[v1]:= v3 @kind object;
  #L3ff756.  v2:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ff75a.  v3:= new `android.graphics.Matrix`;
  #L3ff75e.  call `<init>`(v3) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3ff764.  v2[v1]:= v3 @kind object;
  #L3ff768.  v1:= v1 + 1;
  #L3ff76c.  goto L3ff72e;
  #L3ff76e.  return @kind void;
}
procedure `float` `angleOfEdge`(`com.google.android.material.shape.ShapeAppearancePathProvider` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.angleOfEdge:(I)F` @AccessFlag PRIVATE {
    temp;

  #L3ff600.  v1:= v1 + 1;
  #L3ff604.  v1:= v1 * 90;
  #L3ff608.  v1:= (`float`) v1 @kind i2f;
  #L3ff60a.  return v1;
}
procedure `void` `appendCornerPath`(`com.google.android.material.shape.ShapeAppearancePathProvider` v4 @kind this, `com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec` v5 @kind object, `int` v6 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.appendCornerPath:(Lcom/google/android/material/shape/ShapeAppearancePathProvider$ShapeAppearancePathSpec;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff780.  v0:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff784.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L3ff788.  v1:= v1[v6] @kind object;
  #L3ff78c.  call temp:= `getStartX`(v1) @signature `Lcom/google/android/material/shape/ShapePath;.getStartX:()F` @kind virtual;
  #L3ff792.  v1:= temp;
  #L3ff794.  v2:= 0I;
  #L3ff796.  v0[v2]:= v1;
  #L3ff79a.  v0:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff79e.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L3ff7a2.  v1:= v1[v6] @kind object;
  #L3ff7a6.  call temp:= `getStartY`(v1) @signature `Lcom/google/android/material/shape/ShapePath;.getStartY:()F` @kind virtual;
  #L3ff7ac.  v1:= temp;
  #L3ff7ae.  v3:= 1I;
  #L3ff7b0.  v0[v3]:= v1;
  #L3ff7b4.  v0:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ff7b8.  v0:= v0[v6] @kind object;
  #L3ff7bc.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff7c0.  call `mapPoints`(v0, v1) @signature `Landroid/graphics/Matrix;.mapPoints:([F)V` @kind virtual;
  #L3ff7c6.  if v6 != 0 then goto L3ff7e2;
  #L3ff7ca.  v0:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.path` @type ^`android.graphics.Path` @kind object;
  #L3ff7ce.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff7d2.  v2:= v1[v2];
  #L3ff7d6.  v1:= v1[v3];
  #L3ff7da.  call `moveTo`(v0, v2, v1) @signature `Landroid/graphics/Path;.moveTo:(FF)V` @kind virtual;
  #L3ff7e0.  goto L3ff7f8;
  #L3ff7e2.  v0:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.path` @type ^`android.graphics.Path` @kind object;
  #L3ff7e6.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff7ea.  v2:= v1[v2];
  #L3ff7ee.  v1:= v1[v3];
  #L3ff7f2.  call `lineTo`(v0, v2, v1) @signature `Landroid/graphics/Path;.lineTo:(FF)V` @kind virtual;
  #L3ff7f8.  v0:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L3ff7fc.  v0:= v0[v6] @kind object;
  #L3ff800.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ff804.  v1:= v1[v6] @kind object;
  #L3ff808.  v2:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.path` @type ^`android.graphics.Path` @kind object;
  #L3ff80c.  call `applyToPath`(v0, v1, v2) @signature `Lcom/google/android/material/shape/ShapePath;.applyToPath:(Landroid/graphics/Matrix;Landroid/graphics/Path;)V` @kind virtual;
  #L3ff812.  v5:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.pathListener` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` @kind object;
  #L3ff816.  if v5 == 0 then goto L3ff830;
  #L3ff81a.  v0:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L3ff81e.  v0:= v0[v6] @kind object;
  #L3ff822.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ff826.  v1:= v1[v6] @kind object;
  #L3ff82a.  call `onCornerPathCreated`(v5, v0, v1, v6) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider$PathListener;.onCornerPathCreated:(Lcom/google/android/material/shape/ShapePath;Landroid/graphics/Matrix;I)V` @kind interface;
  #L3ff830.  return @kind void;
}
procedure `void` `appendEdgePath`(`com.google.android.material.shape.ShapeAppearancePathProvider` v8 @kind this, `com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec` v9 @kind object, `int` v10 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.appendEdgePath:(Lcom/google/android/material/shape/ShapeAppearancePathProvider$ShapeAppearancePathSpec;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ff844.  v0:= v10 + 1;
  #L3ff848.  v0:= v0 %% 4;
  #L3ff84c.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff850.  v2:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L3ff854.  v2:= v2[v10] @kind object;
  #L3ff858.  call temp:= `getEndX`(v2) @signature `Lcom/google/android/material/shape/ShapePath;.getEndX:()F` @kind virtual;
  #L3ff85e.  v2:= temp;
  #L3ff860.  v3:= 0I;
  #L3ff862.  v1[v3]:= v2;
  #L3ff866.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff86a.  v2:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L3ff86e.  v2:= v2[v10] @kind object;
  #L3ff872.  call temp:= `getEndY`(v2) @signature `Lcom/google/android/material/shape/ShapePath;.getEndY:()F` @kind virtual;
  #L3ff878.  v2:= temp;
  #L3ff87a.  v4:= 1I;
  #L3ff87c.  v1[v4]:= v2;
  #L3ff880.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ff884.  v1:= v1[v10] @kind object;
  #L3ff888.  v2:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff88c.  call `mapPoints`(v1, v2) @signature `Landroid/graphics/Matrix;.mapPoints:([F)V` @kind virtual;
  #L3ff892.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch2` @type ^`float`[] @kind object;
  #L3ff896.  v2:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L3ff89a.  v2:= v2[v0] @kind object;
  #L3ff89e.  call temp:= `getStartX`(v2) @signature `Lcom/google/android/material/shape/ShapePath;.getStartX:()F` @kind virtual;
  #L3ff8a4.  v2:= temp;
  #L3ff8a6.  v1[v3]:= v2;
  #L3ff8aa.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch2` @type ^`float`[] @kind object;
  #L3ff8ae.  v2:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L3ff8b2.  v2:= v2[v0] @kind object;
  #L3ff8b6.  call temp:= `getStartY`(v2) @signature `Lcom/google/android/material/shape/ShapePath;.getStartY:()F` @kind virtual;
  #L3ff8bc.  v2:= temp;
  #L3ff8be.  v1[v4]:= v2;
  #L3ff8c2.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ff8c6.  v1:= v1[v0] @kind object;
  #L3ff8ca.  v2:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch2` @type ^`float`[] @kind object;
  #L3ff8ce.  call `mapPoints`(v1, v2) @signature `Landroid/graphics/Matrix;.mapPoints:([F)V` @kind virtual;
  #L3ff8d4.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff8d8.  v2:= v1[v3];
  #L3ff8dc.  v5:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch2` @type ^`float`[] @kind object;
  #L3ff8e0.  v6:= v5[v3];
  #L3ff8e4.  v2:= v2 - v6 @kind float;
  #L3ff8e6.  v6:= (`double`) v2 @kind f2d;
  #L3ff8e8.  v1:= v1[v4];
  #L3ff8ec.  v2:= v5[v4];
  #L3ff8f0.  v1:= v1 - v2 @kind float;
  #L3ff8f2.  v1:= (`double`) v1 @kind f2d;
  #L3ff8f4.  call temp:= `hypot`(v6, v1) @signature `Ljava/lang/Math;.hypot:(DD)D` @kind static;
  #L3ff8fa.  v1:= temp @kind wide;
  #L3ff8fc.  v1:= (`float`) v1 @kind d2f;
  #L3ff8fe.  v2:= 981668463I;
  #L3ff904.  v1:= v1 - v2 @kind float;
  #L3ff906.  v2:= 0I;
  #L3ff908.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3ff90e.  v1:= temp;
  #L3ff910.  v5:= v9.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.bounds` @type ^`android.graphics.RectF` @kind object;
  #L3ff914.  call temp:= `getEdgeCenterForIndex`(v8, v5, v10) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getEdgeCenterForIndex:(Landroid/graphics/RectF;I)F` @kind direct;
  #L3ff91a.  v5:= temp;
  #L3ff91c.  v6:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L3ff920.  call `reset`(v6, v2, v2) @signature `Lcom/google/android/material/shape/ShapePath;.reset:(FF)V` @kind virtual;
  #L3ff926.  v2:= v9.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3ff92a.  call temp:= `getEdgeTreatmentForIndex`(v8, v10, v2) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getEdgeTreatmentForIndex:(ILcom/google/android/material/shape/ShapeAppearanceModel;)Lcom/google/android/material/shape/EdgeTreatment;` @kind direct;
  #L3ff930.  v2:= temp @kind object;
  #L3ff932.  v6:= v9.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.interpolation` @type ^`float`;
  #L3ff936.  v7:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L3ff93a.  call `getEdgePath`(v2, v1, v5, v6, v7) @signature `Lcom/google/android/material/shape/EdgeTreatment;.getEdgePath:(FFFLcom/google/android/material/shape/ShapePath;)V` @kind virtual;
  #L3ff940.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgePath` @type ^`android.graphics.Path` @kind object;
  #L3ff944.  call `reset`(v1) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L3ff94a.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L3ff94e.  v5:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ff952.  v5:= v5[v10] @kind object;
  #L3ff956.  v6:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgePath` @type ^`android.graphics.Path` @kind object;
  #L3ff95a.  call `applyToPath`(v1, v5, v6) @signature `Lcom/google/android/material/shape/ShapePath;.applyToPath:(Landroid/graphics/Matrix;Landroid/graphics/Path;)V` @kind virtual;
  #L3ff960.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeIntersectionCheckEnabled` @type ^`boolean` @kind boolean;
  #L3ff964.  if v1 == 0 then goto L3ffa1a;
  #L3ff968.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3ff96c.  v5:= 19I;
  #L3ff970.  if v1 < v5 then goto L3ffa1a;
  #L3ff974.  call temp:= `forceIntersection`(v2) @signature `Lcom/google/android/material/shape/EdgeTreatment;.forceIntersection:()Z` @kind virtual;
  #L3ff97a.  v1:= temp;
  #L3ff97c.  if v1 != 0 then goto L3ff9a0;
  #L3ff980.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgePath` @type ^`android.graphics.Path` @kind object;
  #L3ff984.  call temp:= `pathOverlapsCorner`(v8, v1, v10) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.pathOverlapsCorner:(Landroid/graphics/Path;I)Z` @kind direct;
  #L3ff98a.  v1:= temp;
  #L3ff98c.  if v1 != 0 then goto L3ff9a0;
  #L3ff990.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgePath` @type ^`android.graphics.Path` @kind object;
  #L3ff994.  call temp:= `pathOverlapsCorner`(v8, v1, v0) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.pathOverlapsCorner:(Landroid/graphics/Path;I)Z` @kind direct;
  #L3ff99a.  v0:= temp;
  #L3ff99c.  if v0 == 0 then goto L3ffa1a;
  #L3ff9a0.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgePath` @type ^`android.graphics.Path` @kind object;
  #L3ff9a4.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.boundsPath` @type ^`android.graphics.Path` @kind object;
  #L3ff9a8.  v2:= `@@android.graphics.Path$Op.DIFFERENCE` @type ^`android.graphics.Path$Op` @kind object;
  #L3ff9ac.  call temp:= `op`(v0, v0, v1, v2) @signature `Landroid/graphics/Path;.op:(Landroid/graphics/Path;Landroid/graphics/Path;Landroid/graphics/Path$Op;)Z` @kind virtual;
  #L3ff9b2.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff9b6.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L3ff9ba.  call temp:= `getStartX`(v1) @signature `Lcom/google/android/material/shape/ShapePath;.getStartX:()F` @kind virtual;
  #L3ff9c0.  v1:= temp;
  #L3ff9c2.  v0[v3]:= v1;
  #L3ff9c6.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff9ca.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L3ff9ce.  call temp:= `getStartY`(v1) @signature `Lcom/google/android/material/shape/ShapePath;.getStartY:()F` @kind virtual;
  #L3ff9d4.  v1:= temp;
  #L3ff9d6.  v0[v4]:= v1;
  #L3ff9da.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ff9de.  v0:= v0[v10] @kind object;
  #L3ff9e2.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff9e6.  call `mapPoints`(v0, v1) @signature `Landroid/graphics/Matrix;.mapPoints:([F)V` @kind virtual;
  #L3ff9ec.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @type ^`android.graphics.Path` @kind object;
  #L3ff9f0.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff9f4.  v2:= v1[v3];
  #L3ff9f8.  v1:= v1[v4];
  #L3ff9fc.  call `moveTo`(v0, v2, v1) @signature `Landroid/graphics/Path;.moveTo:(FF)V` @kind virtual;
  #L3ffa02.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L3ffa06.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ffa0a.  v1:= v1[v10] @kind object;
  #L3ffa0e.  v2:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @type ^`android.graphics.Path` @kind object;
  #L3ffa12.  call `applyToPath`(v0, v1, v2) @signature `Lcom/google/android/material/shape/ShapePath;.applyToPath:(Landroid/graphics/Matrix;Landroid/graphics/Path;)V` @kind virtual;
  #L3ffa18.  goto L3ffa30;
  #L3ffa1a.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L3ffa1e.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ffa22.  v1:= v1[v10] @kind object;
  #L3ffa26.  v2:= v9.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.path` @type ^`android.graphics.Path` @kind object;
  #L3ffa2a.  call `applyToPath`(v0, v1, v2) @signature `Lcom/google/android/material/shape/ShapePath;.applyToPath:(Landroid/graphics/Matrix;Landroid/graphics/Path;)V` @kind virtual;
  #L3ffa30.  v9:= v9.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.pathListener` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` @kind object;
  #L3ffa34.  if v9 == 0 then goto L3ffa4a;
  #L3ffa38.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L3ffa3c.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ffa40.  v1:= v1[v10] @kind object;
  #L3ffa44.  call `onEdgePathCreated`(v9, v0, v1, v10) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider$PathListener;.onEdgePathCreated:(Lcom/google/android/material/shape/ShapePath;Landroid/graphics/Matrix;I)V` @kind interface;
  #L3ffa4a.  return @kind void;
}
procedure `void` `getCoordinatesOfCorner`(`com.google.android.material.shape.ShapeAppearancePathProvider` v1 @kind this, `int` v2 , `android.graphics.RectF` v3 @kind object, `android.graphics.PointF` v4 @kind object) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getCoordinatesOfCorner:(ILandroid/graphics/RectF;Landroid/graphics/PointF;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ffb3c.  v0:= 1I;
  #L3ffb3e.  if v2 == v0 then goto L3ffb7e;
  #L3ffb42.  v0:= 2I;
  #L3ffb44.  if v2 == v0 then goto L3ffb6e;
  #L3ffb48.  v0:= 3I;
  #L3ffb4a.  if v2 == v0 then goto L3ffb5e;
  #L3ffb4e.  v2:= v3.`android.graphics.RectF.right` @type ^`float`;
  #L3ffb52.  v3:= v3.`android.graphics.RectF.top` @type ^`float`;
  #L3ffb56.  call `set`(v4, v2, v3) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L3ffb5c.  goto L3ffb8c;
  #L3ffb5e.  v2:= v3.`android.graphics.RectF.left` @type ^`float`;
  #L3ffb62.  v3:= v3.`android.graphics.RectF.top` @type ^`float`;
  #L3ffb66.  call `set`(v4, v2, v3) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L3ffb6c.  goto L3ffb8c;
  #L3ffb6e.  v2:= v3.`android.graphics.RectF.left` @type ^`float`;
  #L3ffb72.  v3:= v3.`android.graphics.RectF.bottom` @type ^`float`;
  #L3ffb76.  call `set`(v4, v2, v3) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L3ffb7c.  goto L3ffb8c;
  #L3ffb7e.  v2:= v3.`android.graphics.RectF.right` @type ^`float`;
  #L3ffb82.  v3:= v3.`android.graphics.RectF.bottom` @type ^`float`;
  #L3ffb86.  call `set`(v4, v2, v3) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L3ffb8c.  return @kind void;
}
procedure `com.google.android.material.shape.CornerSize` `getCornerSizeForIndex`(`com.google.android.material.shape.ShapeAppearancePathProvider` v1 @kind this, `int` v2 , `com.google.android.material.shape.ShapeAppearanceModel` v3 @kind object) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getCornerSizeForIndex:(ILcom/google/android/material/shape/ShapeAppearanceModel;)Lcom/google/android/material/shape/CornerSize;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ff504.  v0:= 1I;
  #L3ff506.  if v2 == v0 then goto L3ff534;
  #L3ff50a.  v0:= 2I;
  #L3ff50c.  if v2 == v0 then goto L3ff52a;
  #L3ff510.  v0:= 3I;
  #L3ff512.  if v2 == v0 then goto L3ff520;
  #L3ff516.  call temp:= `getTopRightCornerSize`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L3ff51c.  v2:= temp @kind object;
  #L3ff51e.  return v2 @kind object;
  #L3ff520.  call temp:= `getTopLeftCornerSize`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopLeftCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L3ff526.  v2:= temp @kind object;
  #L3ff528.  return v2 @kind object;
  #L3ff52a.  call temp:= `getBottomLeftCornerSize`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomLeftCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L3ff530.  v2:= temp @kind object;
  #L3ff532.  return v2 @kind object;
  #L3ff534.  call temp:= `getBottomRightCornerSize`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L3ff53a.  v2:= temp @kind object;
  #L3ff53c.  return v2 @kind object;
}
procedure `com.google.android.material.shape.CornerTreatment` `getCornerTreatmentForIndex`(`com.google.android.material.shape.ShapeAppearancePathProvider` v1 @kind this, `int` v2 , `com.google.android.material.shape.ShapeAppearanceModel` v3 @kind object) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getCornerTreatmentForIndex:(ILcom/google/android/material/shape/ShapeAppearanceModel;)Lcom/google/android/material/shape/CornerTreatment;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ff550.  v0:= 1I;
  #L3ff552.  if v2 == v0 then goto L3ff580;
  #L3ff556.  v0:= 2I;
  #L3ff558.  if v2 == v0 then goto L3ff576;
  #L3ff55c.  v0:= 3I;
  #L3ff55e.  if v2 == v0 then goto L3ff56c;
  #L3ff562.  call temp:= `getTopRightCorner`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopRightCorner:()Lcom/google/android/material/shape/CornerTreatment;` @kind virtual;
  #L3ff568.  v2:= temp @kind object;
  #L3ff56a.  return v2 @kind object;
  #L3ff56c.  call temp:= `getTopLeftCorner`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopLeftCorner:()Lcom/google/android/material/shape/CornerTreatment;` @kind virtual;
  #L3ff572.  v2:= temp @kind object;
  #L3ff574.  return v2 @kind object;
  #L3ff576.  call temp:= `getBottomLeftCorner`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomLeftCorner:()Lcom/google/android/material/shape/CornerTreatment;` @kind virtual;
  #L3ff57c.  v2:= temp @kind object;
  #L3ff57e.  return v2 @kind object;
  #L3ff580.  call temp:= `getBottomRightCorner`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomRightCorner:()Lcom/google/android/material/shape/CornerTreatment;` @kind virtual;
  #L3ff586.  v2:= temp @kind object;
  #L3ff588.  return v2 @kind object;
}
procedure `float` `getEdgeCenterForIndex`(`com.google.android.material.shape.ShapeAppearancePathProvider` v4 @kind this, `android.graphics.RectF` v5 @kind object, `int` v6 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getEdgeCenterForIndex:(Landroid/graphics/RectF;I)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff61c.  v0:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff620.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L3ff624.  v2:= v1[v6] @kind object;
  #L3ff628.  v2:= v2.`com.google.android.material.shape.ShapePath.endX` @type ^`float`;
  #L3ff62c.  v3:= 0I;
  #L3ff62e.  v0[v3]:= v2;
  #L3ff632.  v1:= v1[v6] @kind object;
  #L3ff636.  v1:= v1.`com.google.android.material.shape.ShapePath.endY` @type ^`float`;
  #L3ff63a.  v2:= 1I;
  #L3ff63c.  v0[v2]:= v1;
  #L3ff640.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ff644.  v1:= v1[v6] @kind object;
  #L3ff648.  call `mapPoints`(v1, v0) @signature `Landroid/graphics/Matrix;.mapPoints:([F)V` @kind virtual;
  #L3ff64e.  if v6 == v2 then goto L3ff674;
  #L3ff652.  v0:= 3I;
  #L3ff654.  if v6 == v0 then goto L3ff674;
  #L3ff658.  call temp:= `centerY`(v5) @signature `Landroid/graphics/RectF;.centerY:()F` @kind virtual;
  #L3ff65e.  v5:= temp;
  #L3ff660.  v6:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff664.  v6:= v6[v2];
  #L3ff668.  v5:= v5 - v6 @kind float;
  #L3ff66a.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3ff670.  v5:= temp;
  #L3ff672.  return v5;
  #L3ff674.  call temp:= `centerX`(v5) @signature `Landroid/graphics/RectF;.centerX:()F` @kind virtual;
  #L3ff67a.  v5:= temp;
  #L3ff67c.  v6:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ff680.  v6:= v6[v3];
  #L3ff684.  v5:= v5 - v6 @kind float;
  #L3ff686.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3ff68c.  v5:= temp;
  #L3ff68e.  return v5;
}
procedure `com.google.android.material.shape.EdgeTreatment` `getEdgeTreatmentForIndex`(`com.google.android.material.shape.ShapeAppearancePathProvider` v1 @kind this, `int` v2 , `com.google.android.material.shape.ShapeAppearanceModel` v3 @kind object) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getEdgeTreatmentForIndex:(ILcom/google/android/material/shape/ShapeAppearanceModel;)Lcom/google/android/material/shape/EdgeTreatment;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ff59c.  v0:= 1I;
  #L3ff59e.  if v2 == v0 then goto L3ff5cc;
  #L3ff5a2.  v0:= 2I;
  #L3ff5a4.  if v2 == v0 then goto L3ff5c2;
  #L3ff5a8.  v0:= 3I;
  #L3ff5aa.  if v2 == v0 then goto L3ff5b8;
  #L3ff5ae.  call temp:= `getRightEdge`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getRightEdge:()Lcom/google/android/material/shape/EdgeTreatment;` @kind virtual;
  #L3ff5b4.  v2:= temp @kind object;
  #L3ff5b6.  return v2 @kind object;
  #L3ff5b8.  call temp:= `getTopEdge`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopEdge:()Lcom/google/android/material/shape/EdgeTreatment;` @kind virtual;
  #L3ff5be.  v2:= temp @kind object;
  #L3ff5c0.  return v2 @kind object;
  #L3ff5c2.  call temp:= `getLeftEdge`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getLeftEdge:()Lcom/google/android/material/shape/EdgeTreatment;` @kind virtual;
  #L3ff5c8.  v2:= temp @kind object;
  #L3ff5ca.  return v2 @kind object;
  #L3ff5cc.  call temp:= `getBottomEdge`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomEdge:()Lcom/google/android/material/shape/EdgeTreatment;` @kind virtual;
  #L3ff5d2.  v2:= temp @kind object;
  #L3ff5d4.  return v2 @kind object;
}
procedure `com.google.android.material.shape.ShapeAppearancePathProvider` `getInstance`() @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getInstance:()Lcom/google/android/material/shape/ShapeAppearancePathProvider;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ff5e8.  v0:= `@@com.google.android.material.shape.ShapeAppearancePathProvider$Lazy.INSTANCE` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` @kind object;
  #L3ff5ec.  return v0 @kind object;
}
procedure `boolean` `pathOverlapsCorner`(`com.google.android.material.shape.ShapeAppearancePathProvider` v3 @kind this, `android.graphics.Path` v4 @kind object, `int` v5 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.pathOverlapsCorner:(Landroid/graphics/Path;I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ff468.  v0:= v3.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPath` @type ^`android.graphics.Path` @kind object;
  #L3ff46c.  call `reset`(v0) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L3ff472.  v0:= v3.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L3ff476.  v0:= v0[v5] @kind object;
  #L3ff47a.  v1:= v3.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ff47e.  v5:= v1[v5] @kind object;
  #L3ff482.  v1:= v3.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPath` @type ^`android.graphics.Path` @kind object;
  #L3ff486.  call `applyToPath`(v0, v5, v1) @signature `Lcom/google/android/material/shape/ShapePath;.applyToPath:(Landroid/graphics/Matrix;Landroid/graphics/Path;)V` @kind virtual;
  #L3ff48c.  v5:= new `android.graphics.RectF`;
  #L3ff490.  call `<init>`(v5) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L3ff496.  v0:= 1I;
  #L3ff498.  call `computeBounds`(v4, v5, v0) @signature `Landroid/graphics/Path;.computeBounds:(Landroid/graphics/RectF;Z)V` @kind virtual;
  #L3ff49e.  v1:= v3.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPath` @type ^`android.graphics.Path` @kind object;
  #L3ff4a2.  call `computeBounds`(v1, v5, v0) @signature `Landroid/graphics/Path;.computeBounds:(Landroid/graphics/RectF;Z)V` @kind virtual;
  #L3ff4a8.  v1:= v3.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPath` @type ^`android.graphics.Path` @kind object;
  #L3ff4ac.  v2:= `@@android.graphics.Path$Op.INTERSECT` @type ^`android.graphics.Path$Op` @kind object;
  #L3ff4b0.  call temp:= `op`(v4, v1, v2) @signature `Landroid/graphics/Path;.op:(Landroid/graphics/Path;Landroid/graphics/Path$Op;)Z` @kind virtual;
  #L3ff4b6.  call `computeBounds`(v4, v5, v0) @signature `Landroid/graphics/Path;.computeBounds:(Landroid/graphics/RectF;Z)V` @kind virtual;
  #L3ff4bc.  call temp:= `isEmpty`(v5) @signature `Landroid/graphics/RectF;.isEmpty:()Z` @kind virtual;
  #L3ff4c2.  v4:= temp;
  #L3ff4c4.  if v4 == 0 then goto L3ff4f0;
  #L3ff4c8.  call temp:= `width`(v5) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3ff4ce.  v4:= temp;
  #L3ff4d0.  v1:= 1.0F;
  #L3ff4d4.  v4:= fcmpl(v4, v1);
  #L3ff4d8.  if v4 <= 0 then goto L3ff4ee;
  #L3ff4dc.  call temp:= `height`(v5) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3ff4e2.  v4:= temp;
  #L3ff4e4.  v4:= fcmpl(v4, v1);
  #L3ff4e8.  if v4 <= 0 then goto L3ff4ee;
  #L3ff4ec.  goto L3ff4f0;
  #L3ff4ee.  v0:= 0I;
  #L3ff4f0.  return v0;
}
procedure `void` `setCornerPathAndTransform`(`com.google.android.material.shape.ShapeAppearancePathProvider` v7 @kind this, `com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec` v8 @kind object, `int` v9 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.setCornerPathAndTransform:(Lcom/google/android/material/shape/ShapeAppearancePathProvider$ShapeAppearancePathSpec;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ffba0.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3ffba4.  call temp:= `getCornerSizeForIndex`(v7, v9, v0) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getCornerSizeForIndex:(ILcom/google/android/material/shape/ShapeAppearanceModel;)Lcom/google/android/material/shape/CornerSize;` @kind direct;
  #L3ffbaa.  v6:= temp @kind object;
  #L3ffbac.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3ffbb0.  call temp:= `getCornerTreatmentForIndex`(v7, v9, v0) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getCornerTreatmentForIndex:(ILcom/google/android/material/shape/ShapeAppearanceModel;)Lcom/google/android/material/shape/CornerTreatment;` @kind direct;
  #L3ffbb6.  v1:= temp @kind object;
  #L3ffbb8.  v0:= v7.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L3ffbbc.  v2:= v0[v9] @kind object;
  #L3ffbc0.  v4:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.interpolation` @type ^`float`;
  #L3ffbc4.  v5:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.bounds` @type ^`android.graphics.RectF` @kind object;
  #L3ffbc8.  v3:= 90.0F;
  #L3ffbcc.  call `getCornerPath`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/android/material/shape/CornerTreatment;.getCornerPath:(Lcom/google/android/material/shape/ShapePath;FFLandroid/graphics/RectF;Lcom/google/android/material/shape/CornerSize;)V` @kind virtual;
  #L3ffbd2.  call temp:= `angleOfEdge`(v7, v9) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.angleOfEdge:(I)F` @kind direct;
  #L3ffbd8.  v0:= temp;
  #L3ffbda.  v1:= v7.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ffbde.  v1:= v1[v9] @kind object;
  #L3ffbe2.  call `reset`(v1) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L3ffbe8.  v8:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.bounds` @type ^`android.graphics.RectF` @kind object;
  #L3ffbec.  v1:= v7.`com.google.android.material.shape.ShapeAppearancePathProvider.pointF` @type ^`android.graphics.PointF` @kind object;
  #L3ffbf0.  call `getCoordinatesOfCorner`(v7, v9, v8, v1) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getCoordinatesOfCorner:(ILandroid/graphics/RectF;Landroid/graphics/PointF;)V` @kind direct;
  #L3ffbf6.  v8:= v7.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ffbfa.  v8:= v8[v9] @kind object;
  #L3ffbfe.  v1:= v7.`com.google.android.material.shape.ShapeAppearancePathProvider.pointF` @type ^`android.graphics.PointF` @kind object;
  #L3ffc02.  v2:= v1.`android.graphics.PointF.x` @type ^`float`;
  #L3ffc06.  v1:= v1.`android.graphics.PointF.y` @type ^`float`;
  #L3ffc0a.  call `setTranslate`(v8, v2, v1) @signature `Landroid/graphics/Matrix;.setTranslate:(FF)V` @kind virtual;
  #L3ffc10.  v8:= v7.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ffc14.  v8:= v8[v9] @kind object;
  #L3ffc18.  call temp:= `preRotate`(v8, v0) @signature `Landroid/graphics/Matrix;.preRotate:(F)Z` @kind virtual;
  #L3ffc1e.  return @kind void;
}
procedure `void` `setEdgePathAndTransform`(`com.google.android.material.shape.ShapeAppearancePathProvider` v5 @kind this, `int` v6 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.setEdgePathAndTransform:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ffc48.  v0:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ffc4c.  v1:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L3ffc50.  v1:= v1[v6] @kind object;
  #L3ffc54.  call temp:= `getEndX`(v1) @signature `Lcom/google/android/material/shape/ShapePath;.getEndX:()F` @kind virtual;
  #L3ffc5a.  v1:= temp;
  #L3ffc5c.  v2:= 0I;
  #L3ffc5e.  v0[v2]:= v1;
  #L3ffc62.  v0:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ffc66.  v1:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L3ffc6a.  v1:= v1[v6] @kind object;
  #L3ffc6e.  call temp:= `getEndY`(v1) @signature `Lcom/google/android/material/shape/ShapePath;.getEndY:()F` @kind virtual;
  #L3ffc74.  v1:= temp;
  #L3ffc76.  v3:= 1I;
  #L3ffc78.  v0[v3]:= v1;
  #L3ffc7c.  v0:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ffc80.  v0:= v0[v6] @kind object;
  #L3ffc84.  v1:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ffc88.  call `mapPoints`(v0, v1) @signature `Landroid/graphics/Matrix;.mapPoints:([F)V` @kind virtual;
  #L3ffc8e.  call temp:= `angleOfEdge`(v5, v6) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.angleOfEdge:(I)F` @kind direct;
  #L3ffc94.  v0:= temp;
  #L3ffc96.  v1:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ffc9a.  v1:= v1[v6] @kind object;
  #L3ffc9e.  call `reset`(v1) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L3ffca4.  v1:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ffca8.  v1:= v1[v6] @kind object;
  #L3ffcac.  v4:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L3ffcb0.  v2:= v4[v2];
  #L3ffcb4.  v3:= v4[v3];
  #L3ffcb8.  call `setTranslate`(v1, v2, v3) @signature `Landroid/graphics/Matrix;.setTranslate:(FF)V` @kind virtual;
  #L3ffcbe.  v1:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L3ffcc2.  v6:= v1[v6] @kind object;
  #L3ffcc6.  call temp:= `preRotate`(v6, v0) @signature `Landroid/graphics/Matrix;.preRotate:(F)Z` @kind virtual;
  #L3ffccc.  return @kind void;
}
procedure `void` `calculatePath`(`com.google.android.material.shape.ShapeAppearancePathProvider` v6 @kind this, `com.google.android.material.shape.ShapeAppearanceModel` v7 @kind object, `float` v8 , `android.graphics.RectF` v9 @kind object, `android.graphics.Path` v10 @kind object) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.calculatePath:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Landroid/graphics/Path;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ffa5c.  v4:= 0I;
  #L3ffa5e.  v0:= v6 @kind object;
  #L3ffa60.  v1:= v7 @kind object;
  #L3ffa62.  v2:= v8;
  #L3ffa64.  v3:= v9 @kind object;
  #L3ffa66.  v5:= v10 @kind object;
  #L3ffa68.  call `calculatePath`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.calculatePath:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Lcom/google/android/material/shape/ShapeAppearancePathProvider$PathListener;Landroid/graphics/Path;)V` @kind virtual;
  #L3ffa6e.  return @kind void;
}
procedure `void` `calculatePath`(`com.google.android.material.shape.ShapeAppearancePathProvider` v8 @kind this, `com.google.android.material.shape.ShapeAppearanceModel` v9 @kind object, `float` v10 , `android.graphics.RectF` v11 @kind object, `com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` v12 @kind object, `android.graphics.Path` v13 @kind object) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.calculatePath:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Lcom/google/android/material/shape/ShapeAppearancePathProvider$PathListener;Landroid/graphics/Path;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ffa80.  call `rewind`(v13) @signature `Landroid/graphics/Path;.rewind:()V` @kind virtual;
  #L3ffa86.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @type ^`android.graphics.Path` @kind object;
  #L3ffa8a.  call `rewind`(v0) @signature `Landroid/graphics/Path;.rewind:()V` @kind virtual;
  #L3ffa90.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.boundsPath` @type ^`android.graphics.Path` @kind object;
  #L3ffa94.  call `rewind`(v0) @signature `Landroid/graphics/Path;.rewind:()V` @kind virtual;
  #L3ffa9a.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.boundsPath` @type ^`android.graphics.Path` @kind object;
  #L3ffa9e.  v1:= `@@android.graphics.Path$Direction.CW` @type ^`android.graphics.Path$Direction` @kind object;
  #L3ffaa2.  call `addRect`(v0, v11, v1) @signature `Landroid/graphics/Path;.addRect:(Landroid/graphics/RectF;Landroid/graphics/Path$Direction;)V` @kind virtual;
  #L3ffaa8.  v0:= new `com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec`;
  #L3ffaac.  v2:= v0 @kind object;
  #L3ffaae.  v3:= v9 @kind object;
  #L3ffab0.  v4:= v10;
  #L3ffab2.  v5:= v11 @kind object;
  #L3ffab4.  v6:= v12 @kind object;
  #L3ffab6.  v7:= v13 @kind object;
  #L3ffab8.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider$ShapeAppearancePathSpec;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Lcom/google/android/material/shape/ShapeAppearancePathProvider$PathListener;Landroid/graphics/Path;)V` @kind direct;
  #L3ffabe.  v9:= 0I;
  #L3ffac0.  v10:= 0I;
  #L3ffac2.  v11:= 4I;
  #L3ffac4.  if v10 >= v11 then goto L3ffada;
  #L3ffac8.  call `setCornerPathAndTransform`(v8, v0, v10) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.setCornerPathAndTransform:(Lcom/google/android/material/shape/ShapeAppearancePathProvider$ShapeAppearancePathSpec;I)V` @kind direct;
  #L3fface.  call `setEdgePathAndTransform`(v8, v10) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.setEdgePathAndTransform:(I)V` @kind direct;
  #L3ffad4.  v10:= v10 + 1;
  #L3ffad8.  goto L3ffac2;
  #L3ffada.  if v9 >= v11 then goto L3ffaf0;
  #L3ffade.  call `appendCornerPath`(v8, v0, v9) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.appendCornerPath:(Lcom/google/android/material/shape/ShapeAppearancePathProvider$ShapeAppearancePathSpec;I)V` @kind direct;
  #L3ffae4.  call `appendEdgePath`(v8, v0, v9) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.appendEdgePath:(Lcom/google/android/material/shape/ShapeAppearancePathProvider$ShapeAppearancePathSpec;I)V` @kind direct;
  #L3ffaea.  v9:= v9 + 1;
  #L3ffaee.  goto L3ffada;
  #L3ffaf0.  call `close`(v13) @signature `Landroid/graphics/Path;.close:()V` @kind virtual;
  #L3ffaf6.  v9:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @type ^`android.graphics.Path` @kind object;
  #L3ffafa.  call `close`(v9) @signature `Landroid/graphics/Path;.close:()V` @kind virtual;
  #L3ffb00.  v9:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3ffb04.  v10:= 19I;
  #L3ffb08.  if v9 < v10 then goto L3ffb2a;
  #L3ffb0c.  v9:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @type ^`android.graphics.Path` @kind object;
  #L3ffb10.  call temp:= `isEmpty`(v9) @signature `Landroid/graphics/Path;.isEmpty:()Z` @kind virtual;
  #L3ffb16.  v9:= temp;
  #L3ffb18.  if v9 != 0 then goto L3ffb2a;
  #L3ffb1c.  v9:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @type ^`android.graphics.Path` @kind object;
  #L3ffb20.  v10:= `@@android.graphics.Path$Op.UNION` @type ^`android.graphics.Path$Op` @kind object;
  #L3ffb24.  call temp:= `op`(v13, v9, v10) @signature `Landroid/graphics/Path;.op:(Landroid/graphics/Path;Landroid/graphics/Path$Op;)Z` @kind virtual;
  #L3ffb2a.  return @kind void;
}
procedure `void` `setEdgeIntersectionCheckEnable`(`com.google.android.material.shape.ShapeAppearancePathProvider` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.setEdgeIntersectionCheckEnable:(Z)V` @AccessFlag  {
    temp;

  #L3ffc30.  v0.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeIntersectionCheckEnabled` @type ^`boolean` := v1 @kind boolean;
  #L3ffc34.  return @kind void;
}
