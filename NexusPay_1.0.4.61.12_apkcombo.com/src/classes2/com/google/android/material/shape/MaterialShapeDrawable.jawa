record `com.google.android.material.shape.MaterialShapeDrawable` @kind class @AccessFlag PUBLIC extends `android.graphics.drawable.Drawable` @kind class, `androidx.core.graphics.drawable.TintAwareDrawable` @kind interface, `com.google.android.material.shape.Shapeable` @kind interface {
  `java.util.BitSet` `com.google.android.material.shape.MaterialShapeDrawable.containsIncompatibleShadowOp` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` `com.google.android.material.shape.MaterialShapeDrawable.drawableState` @AccessFlag PRIVATE;
  `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Matrix` `com.google.android.material.shape.MaterialShapeDrawable.matrix` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Path` `com.google.android.material.shape.MaterialShapeDrawable.path` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @AccessFlag PRIVATE;
  `android.graphics.Path` `com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapeAppearancePathProvider` `com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` `com.google.android.material.shape.MaterialShapeDrawable.pathShadowListener` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.shape.MaterialShapeDrawable.rectF` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Region` `com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @AccessFlag PRIVATE;
  `com.google.android.material.shadow.ShadowRenderer` `com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapeAppearanceModel` `com.google.android.material.shape.MaterialShapeDrawable.strokeShapeAppearance` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @AccessFlag PRIVATE;
  `android.graphics.Region` `com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_COMPAT_MODE_ALWAYS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_COMPAT_MODE_DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_COMPAT_MODE_NEVER` @AccessFlag PUBLIC_STATIC_FINAL;
global `float` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_OFFSET_MULTIPLIER` @AccessFlag PRIVATE_STATIC_FINAL;
global `float` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_RADIUS_MULTIPLIER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.shape.MaterialShapeDrawable.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Paint` `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3fd428.  v0:= constclass @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L3fd42c.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3fd432.  v0:= temp @kind object;
  #L3fd434.  `@@com.google.android.material.shape.MaterialShapeDrawable.TAG` @type ^`java.lang.String` := v0 @kind object;
  #L3fd438.  v0:= new `android.graphics.Paint`;
  #L3fd43c.  v1:= 1I;
  #L3fd43e.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L3fd444.  `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L3fd448.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3fd45c.  v0:= new `com.google.android.material.shape.ShapeAppearanceModel`;
  #L3fd460.  call `<init>`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.<init>:()V` @kind direct;
  #L3fd466.  call `<init>`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind direct;
  #L3fd46c.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3fd480.  call temp:= `builder`(v1, v2, v3, v4) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.builder:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;` @kind static;
  #L3fd486.  v1:= temp @kind object;
  #L3fd488.  call temp:= `build`(v1) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;.build:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L3fd48e.  v1:= temp @kind object;
  #L3fd490.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind direct;
  #L3fd496.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v3 @kind this, `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` v4 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3fd4a8.  call `<init>`(v3) @signature `Landroid/graphics/drawable/Drawable;.<init>:()V` @kind direct;
  #L3fd4ae.  v0:= 4I;
  #L3fd4b0.  v1:= new `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[v0];
  #L3fd4b4.  v3.`com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] := v1 @kind object;
  #L3fd4b8.  v0:= new `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[v0];
  #L3fd4bc.  v3.`com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] := v0 @kind object;
  #L3fd4c0.  v0:= new `java.util.BitSet`;
  #L3fd4c4.  v1:= 8I;
  #L3fd4c8.  call `<init>`(v0, v1) @signature `Ljava/util/BitSet;.<init>:(I)V` @kind direct;
  #L3fd4ce.  v3.`com.google.android.material.shape.MaterialShapeDrawable.containsIncompatibleShadowOp` @type ^`java.util.BitSet` := v0 @kind object;
  #L3fd4d2.  v0:= new `android.graphics.Matrix`;
  #L3fd4d6.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3fd4dc.  v3.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L3fd4e0.  v0:= new `android.graphics.Path`;
  #L3fd4e4.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L3fd4ea.  v3.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` := v0 @kind object;
  #L3fd4ee.  v0:= new `android.graphics.Path`;
  #L3fd4f2.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L3fd4f8.  v3.`com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @type ^`android.graphics.Path` := v0 @kind object;
  #L3fd4fc.  v0:= new `android.graphics.RectF`;
  #L3fd500.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L3fd506.  v3.`com.google.android.material.shape.MaterialShapeDrawable.rectF` @type ^`android.graphics.RectF` := v0 @kind object;
  #L3fd50a.  v0:= new `android.graphics.RectF`;
  #L3fd50e.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L3fd514.  v3.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` := v0 @kind object;
  #L3fd518.  v0:= new `android.graphics.Region`;
  #L3fd51c.  call `<init>`(v0) @signature `Landroid/graphics/Region;.<init>:()V` @kind direct;
  #L3fd522.  v3.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` := v0 @kind object;
  #L3fd526.  v0:= new `android.graphics.Region`;
  #L3fd52a.  call `<init>`(v0) @signature `Landroid/graphics/Region;.<init>:()V` @kind direct;
  #L3fd530.  v3.`com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @type ^`android.graphics.Region` := v0 @kind object;
  #L3fd534.  v0:= new `android.graphics.Paint`;
  #L3fd538.  v1:= 1I;
  #L3fd53a.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L3fd540.  v3.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L3fd544.  v0:= new `android.graphics.Paint`;
  #L3fd548.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L3fd54e.  v3.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L3fd552.  v0:= new `com.google.android.material.shadow.ShadowRenderer`;
  #L3fd556.  call `<init>`(v0) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.<init>:()V` @kind direct;
  #L3fd55c.  v3.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` := v0 @kind object;
  #L3fd560.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L3fd566.  v0:= temp @kind object;
  #L3fd568.  call temp:= `getThread`(v0) @signature `Landroid/os/Looper;.getThread:()Ljava/lang/Thread;` @kind virtual;
  #L3fd56e.  v0:= temp @kind object;
  #L3fd570.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3fd576.  v2:= temp @kind object;
  #L3fd578.  if v0 != v2 then goto L3fd586;
  #L3fd57c.  call temp:= `getInstance`() @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getInstance:()Lcom/google/android/material/shape/ShapeAppearancePathProvider;` @kind static;
  #L3fd582.  v0:= temp @kind object;
  #L3fd584.  goto L3fd590;
  #L3fd586.  v0:= new `com.google.android.material.shape.ShapeAppearancePathProvider`;
  #L3fd58a.  call `<init>`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.<init>:()V` @kind direct;
  #L3fd590.  v3.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` := v0 @kind object;
  #L3fd594.  v0:= new `android.graphics.RectF`;
  #L3fd598.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L3fd59e.  v3.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` := v0 @kind object;
  #L3fd5a2.  v3.`com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @type ^`boolean` := v1 @kind boolean;
  #L3fd5a6.  v3.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` := v4 @kind object;
  #L3fd5aa.  v4:= v3.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd5ae.  v0:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L3fd5b2.  call `setStyle`(v4, v0) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L3fd5b8.  v4:= v3.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd5bc.  v0:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L3fd5c0.  call `setStyle`(v4, v0) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L3fd5c6.  v4:= `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd5ca.  v0:= -1I;
  #L3fd5cc.  call `setColor`(v4, v0) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3fd5d2.  v4:= `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd5d6.  v0:= new `android.graphics.PorterDuffXfermode`;
  #L3fd5da.  v1:= `@@android.graphics.PorterDuff$Mode.DST_OUT` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3fd5de.  call `<init>`(v0, v1) @signature `Landroid/graphics/PorterDuffXfermode;.<init>:(Landroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L3fd5e4.  call temp:= `setXfermode`(v4, v0) @signature `Landroid/graphics/Paint;.setXfermode:(Landroid/graphics/Xfermode;)Landroid/graphics/Xfermode;` @kind virtual;
  #L3fd5ea.  call temp:= `updateTintFilter`(v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L3fd5f0.  call temp:= `getState`(v3) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3fd5f6.  v4:= temp @kind object;
  #L3fd5f8.  call temp:= `updateColorsForState`(v3, v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateColorsForState:([I)Z` @kind direct;
  #L3fd5fe.  v4:= new `com.google.android.material.shape.MaterialShapeDrawable$1`;
  #L3fd602.  call `<init>`(v4, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$1;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable;)V` @kind direct;
  #L3fd608.  v3.`com.google.android.material.shape.MaterialShapeDrawable.pathShadowListener` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` := v4 @kind object;
  #L3fd60c.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` v1 @kind object, `com.google.android.material.shape.MaterialShapeDrawable$1` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;Lcom/google/android/material/shape/MaterialShapeDrawable$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3fd620.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @kind direct;
  #L3fd626.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `com.google.android.material.shape.ShapeAppearanceModel` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3fd638.  v0:= new `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState`;
  #L3fd63c.  v1:= 0I;
  #L3fd63e.  call `<init>`(v0, v3, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;Lcom/google/android/material/elevation/ElevationOverlayProvider;)V` @kind direct;
  #L3fd644.  call `<init>`(v2, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @kind direct;
  #L3fd64a.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `com.google.android.material.shape.ShapePathModel` v1 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapePathModel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3fd65c.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind direct;
  #L3fd662.  return @kind void;
}
procedure `java.util.BitSet` `access$000`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.access$000:(Lcom/google/android/material/shape/MaterialShapeDrawable;)Ljava/util/BitSet;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fd410.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable.containsIncompatibleShadowOp` @type ^`java.util.BitSet` @kind object;
  #L3fd414.  return v0 @kind object;
}
procedure `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `access$100`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.access$100:(Lcom/google/android/material/shape/MaterialShapeDrawable;)[Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fd07c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L3fd080.  return v0 @kind object;
}
procedure `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `access$200`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.access$200:(Lcom/google/android/material/shape/MaterialShapeDrawable;)[Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fd094.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L3fd098.  return v0 @kind object;
}
procedure `boolean` `access$402`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind object, `boolean` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.access$402:(Lcom/google/android/material/shape/MaterialShapeDrawable;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fcbdc.  v0.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v1 @kind boolean;
  #L3fcbe0.  return v1;
}
procedure `android.graphics.PorterDuffColorFilter` `calculatePaintColorTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Paint` v2 @kind object, `boolean` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePaintColorTintFilter:(Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3fca34.  if v3 == 0 then goto L3fca5c;
  #L3fca38.  call temp:= `getColor`(v2) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L3fca3e.  v2:= temp;
  #L3fca40.  call temp:= `compositeElevationOverlayIfNeeded`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @kind virtual;
  #L3fca46.  v3:= temp;
  #L3fca48.  if v3 == v2 then goto L3fca5c;
  #L3fca4c.  v2:= new `android.graphics.PorterDuffColorFilter`;
  #L3fca50.  v0:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3fca54.  call `<init>`(v2, v3, v0) @signature `Landroid/graphics/PorterDuffColorFilter;.<init>:(ILandroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L3fca5a.  return v2 @kind object;
  #L3fca5c.  v2:= 0I;
  #L3fca5e.  return v2 @kind object;
}
procedure `void` `calculatePath`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `android.graphics.RectF` v5 @kind object, `android.graphics.Path` v6 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fd674.  call `calculatePathForSize`(v4, v5, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L3fd67a.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd67e.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L3fd682.  v1:= 1.0F;
  #L3fd686.  v0:= fcmpl(v0, v1);
  #L3fd68a.  if v0 == 0 then goto L3fd6cc;
  #L3fd68e.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` @kind object;
  #L3fd692.  call `reset`(v0) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L3fd698.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` @kind object;
  #L3fd69c.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd6a0.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L3fd6a4.  call temp:= `width`(v5) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3fd6aa.  v2:= temp;
  #L3fd6ac.  v3:= 2.0F;
  #L3fd6b0.  v2:= v2 / v3 @kind float;
  #L3fd6b2.  call temp:= `height`(v5) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3fd6b8.  v5:= temp;
  #L3fd6ba.  v5:= v5 / v3 @kind float;
  #L3fd6bc.  call `setScale`(v0, v1, v1, v2, v5) @signature `Landroid/graphics/Matrix;.setScale:(FFFF)V` @kind virtual;
  #L3fd6c2.  v5:= v4.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` @kind object;
  #L3fd6c6.  call `transform`(v6, v5) @signature `Landroid/graphics/Path;.transform:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3fd6cc.  v5:= v4.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L3fd6d0.  v0:= 1I;
  #L3fd6d2.  call `computeBounds`(v6, v5, v0) @signature `Landroid/graphics/Path;.computeBounds:(Landroid/graphics/RectF;Z)V` @kind virtual;
  #L3fd6d8.  return @kind void;
}
procedure `void` `calculateStrokePath`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateStrokePath:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fd720.  call temp:= `getStrokeInsetLength`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeInsetLength:()F` @kind direct;
  #L3fd726.  v0:= temp;
  #L3fd728.  v0:= -v0 @kind float;
  #L3fd72a.  call temp:= `getShapeAppearanceModel`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L3fd730.  v1:= temp @kind object;
  #L3fd732.  v2:= new `com.google.android.material.shape.MaterialShapeDrawable$2`;
  #L3fd736.  call `<init>`(v2, v5, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$2;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable;F)V` @kind direct;
  #L3fd73c.  call temp:= `withTransformedCornerSizes`(v1, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withTransformedCornerSizes:(Lcom/google/android/material/shape/ShapeAppearanceModel$CornerSizeUnaryOperator;)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L3fd742.  v0:= temp @kind object;
  #L3fd744.  v5.`com.google.android.material.shape.MaterialShapeDrawable.strokeShapeAppearance` @type ^`com.google.android.material.shape.ShapeAppearanceModel` := v0 @kind object;
  #L3fd748.  v1:= v5.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` @kind object;
  #L3fd74c.  v2:= v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd750.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L3fd754.  call temp:= `getBoundsInsetByStroke`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsInsetByStroke:()Landroid/graphics/RectF;` @kind direct;
  #L3fd75a.  v3:= temp @kind object;
  #L3fd75c.  v4:= v5.`com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @type ^`android.graphics.Path` @kind object;
  #L3fd760.  call `calculatePath`(v1, v0, v2, v3, v4) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.calculatePath:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L3fd766.  return @kind void;
}
procedure `android.graphics.PorterDuffColorFilter` `calculateTintColorTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object, `android.graphics.PorterDuff$Mode` v4 @kind object, `boolean` v5 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintColorTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Z)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fca70.  call temp:= `getState`(v2) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3fca76.  v0:= temp @kind object;
  #L3fca78.  v1:= 0I;
  #L3fca7a.  call temp:= `getColorForState`(v3, v0, v1) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L3fca80.  v3:= temp;
  #L3fca82.  if v5 == 0 then goto L3fca8e;
  #L3fca86.  call temp:= `compositeElevationOverlayIfNeeded`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @kind virtual;
  #L3fca8c.  v3:= temp;
  #L3fca8e.  v5:= new `android.graphics.PorterDuffColorFilter`;
  #L3fca92.  call `<init>`(v5, v3, v4) @signature `Landroid/graphics/PorterDuffColorFilter;.<init>:(ILandroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L3fca98.  return v5 @kind object;
}
procedure `android.graphics.PorterDuffColorFilter` `calculateTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `android.content.res.ColorStateList` v1 @kind object, `android.graphics.PorterDuff$Mode` v2 @kind object, `android.graphics.Paint` v3 @kind object, `boolean` v4 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag PRIVATE {
    temp;

  #L3fcaac.  if v1 == 0 then goto L3fcac0;
  #L3fcab0.  if v2 != 0 then goto L3fcab6;
  #L3fcab4.  goto L3fcac0;
  #L3fcab6.  call temp:= `calculateTintColorTintFilter`(v0, v1, v2, v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintColorTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L3fcabc.  v1:= temp @kind object;
  #L3fcabe.  goto L3fcac8;
  #L3fcac0.  call temp:= `calculatePaintColorTintFilter`(v0, v3, v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePaintColorTintFilter:(Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L3fcac6.  v1:= temp @kind object;
  #L3fcac8.  return v1 @kind object;
}
procedure `com.google.android.material.shape.MaterialShapeDrawable` `createWithElevationOverlay`(`android.content.Context` v1 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.createWithElevationOverlay:(Landroid/content/Context;)Lcom/google/android/material/shape/MaterialShapeDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fcff4.  v0:= 0I;
  #L3fcff6.  call temp:= `createWithElevationOverlay`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.createWithElevationOverlay:(Landroid/content/Context;F)Lcom/google/android/material/shape/MaterialShapeDrawable;` @kind static;
  #L3fcffc.  v1:= temp @kind object;
  #L3fcffe.  return v1 @kind object;
}
procedure `com.google.android.material.shape.MaterialShapeDrawable` `createWithElevationOverlay`(`android.content.Context` v2 @kind object, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.createWithElevationOverlay:(Landroid/content/Context;F)Lcom/google/android/material/shape/MaterialShapeDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fd010.  v0:= `@@com.google.android.material.R$attr.colorSurface` @type ^`int`;
  #L3fd014.  v1:= constclass @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L3fd018.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3fd01e.  v1:= temp @kind object;
  #L3fd020.  call temp:= `getColor`(v2, v0, v1) @signature `Lcom/google/android/material/color/MaterialColors;.getColor:(Landroid/content/Context;ILjava/lang/String;)I` @kind static;
  #L3fd026.  v0:= temp;
  #L3fd028.  v1:= new `com.google.android.material.shape.MaterialShapeDrawable`;
  #L3fd02c.  call `<init>`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:()V` @kind direct;
  #L3fd032.  call `initializeElevationOverlay`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.initializeElevationOverlay:(Landroid/content/Context;)V` @kind virtual;
  #L3fd038.  call temp:= `valueOf`(v0) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L3fd03e.  v2:= temp @kind object;
  #L3fd040.  call `setFillColor`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3fd046.  call `setElevation`(v1, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @kind virtual;
  #L3fd04c.  return v1 @kind object;
}
procedure `void` `drawCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `android.graphics.Canvas` v5 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawCompatShadow:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fd868.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.containsIncompatibleShadowOp` @type ^`java.util.BitSet` @kind object;
  #L3fd86c.  call temp:= `cardinality`(v0) @signature `Ljava/util/BitSet;.cardinality:()I` @kind virtual;
  #L3fd872.  v0:= temp;
  #L3fd874.  if v0 <= 0 then goto L3fd886;
  #L3fd878.  v0:= `@@com.google.android.material.shape.MaterialShapeDrawable.TAG` @type ^`java.lang.String` @kind object;
  #L3fd87c.  v1:= "Compatibility shadow requested but can't be drawn for all operations in this shape." @kind object;
  #L3fd880.  call temp:= `w`(v0, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3fd886.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd88a.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L3fd88e.  if v0 == 0 then goto L3fd8a8;
  #L3fd892.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L3fd896.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L3fd89a.  call temp:= `getShadowPaint`(v1) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.getShadowPaint:()Landroid/graphics/Paint;` @kind virtual;
  #L3fd8a0.  v1:= temp @kind object;
  #L3fd8a2.  call `drawPath`(v5, v0, v1) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L3fd8a8.  v0:= 0I;
  #L3fd8aa.  v1:= 4I;
  #L3fd8ac.  if v0 >= v1 then goto L3fd8ea;
  #L3fd8b0.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L3fd8b4.  v1:= v1[v0] @kind object;
  #L3fd8b8.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L3fd8bc.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd8c0.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L3fd8c4.  call `draw`(v1, v2, v3, v5) @signature `Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;.draw:(Lcom/google/android/material/shadow/ShadowRenderer;ILandroid/graphics/Canvas;)V` @kind virtual;
  #L3fd8ca.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L3fd8ce.  v1:= v1[v0] @kind object;
  #L3fd8d2.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L3fd8d6.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd8da.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L3fd8de.  call `draw`(v1, v2, v3, v5) @signature `Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;.draw:(Lcom/google/android/material/shadow/ShadowRenderer;ILandroid/graphics/Canvas;)V` @kind virtual;
  #L3fd8e4.  v0:= v0 + 1;
  #L3fd8e8.  goto L3fd8aa;
  #L3fd8ea.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @type ^`boolean` @kind boolean;
  #L3fd8ee.  if v0 == 0 then goto L3fd928;
  #L3fd8f2.  call temp:= `getShadowOffsetX`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetX:()I` @kind virtual;
  #L3fd8f8.  v0:= temp;
  #L3fd8fa.  call temp:= `getShadowOffsetY`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetY:()I` @kind virtual;
  #L3fd900.  v1:= temp;
  #L3fd902.  v2:= -v0 @kind int;
  #L3fd904.  v2:= (`float`) v2 @kind i2f;
  #L3fd906.  v3:= -v1 @kind int;
  #L3fd908.  v3:= (`float`) v3 @kind i2f;
  #L3fd90a.  call `translate`(v5, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3fd910.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L3fd914.  v3:= `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd918.  call `drawPath`(v5, v2, v3) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L3fd91e.  v0:= (`float`) v0 @kind i2f;
  #L3fd920.  v1:= (`float`) v1 @kind i2f;
  #L3fd922.  call `translate`(v5, v0, v1) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3fd928.  return @kind void;
}
procedure `void` `drawFillShape`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawFillShape:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fd93c.  v2:= v6.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd940.  v3:= v6.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L3fd944.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd948.  v4:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3fd94c.  call temp:= `getBoundsAsRectF`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L3fd952.  v5:= temp @kind object;
  #L3fd954.  v0:= v6 @kind object;
  #L3fd956.  v1:= v7 @kind object;
  #L3fd958.  call `drawShape`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @kind direct;
  #L3fd95e.  return @kind void;
}
procedure `void` `drawShape`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Canvas` v2 @kind object, `android.graphics.Paint` v3 @kind object, `android.graphics.Path` v4 @kind object, `com.google.android.material.shape.ShapeAppearanceModel` v5 @kind object, `android.graphics.RectF` v6 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3fd99c.  call temp:= `isRoundRect`(v5, v6) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.isRoundRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L3fd9a2.  v0:= temp;
  #L3fd9a4.  if v0 == 0 then goto L3fd9cc;
  #L3fd9a8.  call temp:= `getTopRightCornerSize`(v5) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L3fd9ae.  v4:= temp @kind object;
  #L3fd9b0.  call temp:= `getCornerSize`(v4, v6) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L3fd9b6.  v4:= temp;
  #L3fd9b8.  v5:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd9bc.  v5:= v5.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L3fd9c0.  v4:= v4 * v5 @kind float;
  #L3fd9c4.  call `drawRoundRect`(v2, v6, v4, v4, v3) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L3fd9ca.  goto L3fd9d2;
  #L3fd9cc.  call `drawPath`(v2, v4, v3) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L3fd9d2.  return @kind void;
}
procedure `void` `drawStrokeShape`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawStrokeShape:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fd9e4.  v2:= v6.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd9e8.  v3:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @type ^`android.graphics.Path` @kind object;
  #L3fd9ec.  v4:= v6.`com.google.android.material.shape.MaterialShapeDrawable.strokeShapeAppearance` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3fd9f0.  call temp:= `getBoundsInsetByStroke`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsInsetByStroke:()Landroid/graphics/RectF;` @kind direct;
  #L3fd9f6.  v5:= temp @kind object;
  #L3fd9f8.  v0:= v6 @kind object;
  #L3fd9fa.  v1:= v7 @kind object;
  #L3fd9fc.  call `drawShape`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @kind direct;
  #L3fda02.  return @kind void;
}
procedure `android.graphics.RectF` `getBoundsInsetByStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsInsetByStroke:()Landroid/graphics/RectF;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fcb04.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` @kind object;
  #L3fcb08.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L3fcb0e.  v1:= temp @kind object;
  #L3fcb10.  call `set`(v0, v1) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/RectF;)V` @kind virtual;
  #L3fcb16.  call temp:= `getStrokeInsetLength`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeInsetLength:()F` @kind direct;
  #L3fcb1c.  v0:= temp;
  #L3fcb1e.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` @kind object;
  #L3fcb22.  call `inset`(v1, v0, v0) @signature `Landroid/graphics/RectF;.inset:(FF)V` @kind virtual;
  #L3fcb28.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` @kind object;
  #L3fcb2c.  return v0 @kind object;
}
procedure `float` `getStrokeInsetLength`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeInsetLength:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fd1b0.  call temp:= `hasStroke`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasStroke:()Z` @kind direct;
  #L3fd1b6.  v0:= temp;
  #L3fd1b8.  if v0 == 0 then goto L3fd1d0;
  #L3fd1bc.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd1c0.  call temp:= `getStrokeWidth`(v0) @signature `Landroid/graphics/Paint;.getStrokeWidth:()F` @kind virtual;
  #L3fd1c6.  v0:= temp;
  #L3fd1c8.  v1:= 2.0F;
  #L3fd1cc.  v0:= v0 / v1 @kind float;
  #L3fd1ce.  return v0;
  #L3fd1d0.  v0:= 0I;
  #L3fd1d2.  return v0;
}
procedure `boolean` `hasCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v3 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasCompatShadow:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3fcc24.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcc28.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L3fcc2c.  v2:= 1I;
  #L3fcc2e.  if v1 == v2 then goto L3fcc4e;
  #L3fcc32.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L3fcc36.  if v0 <= 0 then goto L3fcc4e;
  #L3fcc3a.  v0:= 2I;
  #L3fcc3c.  if v1 == v0 then goto L3fcc50;
  #L3fcc40.  call temp:= `requiresCompatShadow`(v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.requiresCompatShadow:()Z` @kind virtual;
  #L3fcc46.  v0:= temp;
  #L3fcc48.  if v0 == 0 then goto L3fcc4e;
  #L3fcc4c.  goto L3fcc50;
  #L3fcc4e.  v2:= 0I;
  #L3fcc50.  return v2;
}
procedure `boolean` `hasFill`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasFill:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fcc64.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcc68.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` @kind object;
  #L3fcc6c.  v1:= `@@android.graphics.Paint$Style.FILL_AND_STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L3fcc70.  if v0 == v1 then goto L3fcc82;
  #L3fcc74.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L3fcc78.  if v0 != v1 then goto L3fcc7e;
  #L3fcc7c.  goto L3fcc82;
  #L3fcc7e.  v0:= 0I;
  #L3fcc80.  goto L3fcc84;
  #L3fcc82.  v0:= 1I;
  #L3fcc84.  return v0;
}
procedure `boolean` `hasStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasStroke:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fcc98.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcc9c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` @kind object;
  #L3fcca0.  v1:= `@@android.graphics.Paint$Style.FILL_AND_STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L3fcca4.  if v0 == v1 then goto L3fccb0;
  #L3fcca8.  v1:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L3fccac.  if v0 != v1 then goto L3fccca;
  #L3fccb0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L3fccb4.  call temp:= `getStrokeWidth`(v0) @signature `Landroid/graphics/Paint;.getStrokeWidth:()F` @kind virtual;
  #L3fccba.  v0:= temp;
  #L3fccbc.  v1:= 0I;
  #L3fccbe.  v0:= fcmpl(v0, v1);
  #L3fccc2.  if v0 <= 0 then goto L3fccca;
  #L3fccc6.  v0:= 1I;
  #L3fccc8.  goto L3fcccc;
  #L3fccca.  v0:= 0I;
  #L3fcccc.  return v0;
}
procedure `void` `invalidateSelfIgnoreShape`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @AccessFlag PRIVATE {
    temp;

  #L3fdb24.  call `invalidateSelf`(v0) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind super;
  #L3fdb2a.  return @kind void;
}
procedure `void` `maybeDrawCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.maybeDrawCompatShadow:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fdb3c.  call temp:= `hasCompatShadow`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasCompatShadow:()Z` @kind direct;
  #L3fdb42.  v0:= temp;
  #L3fdb44.  if v0 != 0 then goto L3fdb4a;
  #L3fdb48.  return @kind void;
  #L3fdb4a.  call temp:= `save`(v7) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L3fdb50.  call `prepareCanvasForShadow`(v6, v7) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.prepareCanvasForShadow:(Landroid/graphics/Canvas;)V` @kind direct;
  #L3fdb56.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @type ^`boolean` @kind boolean;
  #L3fdb5a.  if v0 != 0 then goto L3fdb6c;
  #L3fdb5e.  call `drawCompatShadow`(v6, v7) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawCompatShadow:(Landroid/graphics/Canvas;)V` @kind direct;
  #L3fdb64.  call `restore`(v7) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L3fdb6a.  return @kind void;
  #L3fdb6c.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L3fdb70.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3fdb76.  v0:= temp;
  #L3fdb78.  call temp:= `getBounds`(v6) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L3fdb7e.  v1:= temp @kind object;
  #L3fdb80.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L3fdb86.  v1:= temp;
  #L3fdb88.  v1:= (`float`) v1 @kind i2f;
  #L3fdb8a.  v0:= v0 - v1 @kind float;
  #L3fdb8c.  v0:= (`int`) v0 @kind f2i;
  #L3fdb8e.  v1:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L3fdb92.  call temp:= `height`(v1) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3fdb98.  v1:= temp;
  #L3fdb9a.  call temp:= `getBounds`(v6) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L3fdba0.  v2:= temp @kind object;
  #L3fdba2.  call temp:= `height`(v2) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L3fdba8.  v2:= temp;
  #L3fdbaa.  v2:= (`float`) v2 @kind i2f;
  #L3fdbac.  v1:= v1 - v2 @kind float;
  #L3fdbae.  v1:= (`int`) v1 @kind f2i;
  #L3fdbb0.  if v0 < 0 then goto L3fdc64;
  #L3fdbb4.  if v1 < 0 then goto L3fdc64;
  #L3fdbb8.  v2:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L3fdbbc.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3fdbc2.  v2:= temp;
  #L3fdbc4.  v2:= (`int`) v2 @kind f2i;
  #L3fdbc6.  v3:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdbca.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L3fdbce.  v3:= v3 * 2;
  #L3fdbd2.  v2:= v2 + v3 @kind int;
  #L3fdbd4.  v2:= v2 + v0 @kind int;
  #L3fdbd6.  v3:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L3fdbda.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3fdbe0.  v3:= temp;
  #L3fdbe2.  v3:= (`int`) v3 @kind f2i;
  #L3fdbe4.  v4:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdbe8.  v4:= v4.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L3fdbec.  v4:= v4 * 2;
  #L3fdbf0.  v3:= v3 + v4 @kind int;
  #L3fdbf2.  v3:= v3 + v1 @kind int;
  #L3fdbf4.  v4:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3fdbf8.  call temp:= `createBitmap`(v2, v3, v4) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L3fdbfe.  v2:= temp @kind object;
  #L3fdc00.  v3:= new `android.graphics.Canvas`;
  #L3fdc04.  call `<init>`(v3, v2) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L3fdc0a.  call temp:= `getBounds`(v6) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L3fdc10.  v4:= temp @kind object;
  #L3fdc12.  v4:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L3fdc16.  v5:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdc1a.  v5:= v5.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L3fdc1e.  v4:= v4 - v5 @kind int;
  #L3fdc20.  v4:= v4 - v0 @kind int;
  #L3fdc22.  v0:= (`float`) v4 @kind i2f;
  #L3fdc24.  call temp:= `getBounds`(v6) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L3fdc2a.  v4:= temp @kind object;
  #L3fdc2c.  v4:= v4.`android.graphics.Rect.top` @type ^`int`;
  #L3fdc30.  v5:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdc34.  v5:= v5.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L3fdc38.  v4:= v4 - v5 @kind int;
  #L3fdc3a.  v4:= v4 - v1 @kind int;
  #L3fdc3c.  v1:= (`float`) v4 @kind i2f;
  #L3fdc3e.  v4:= -v0 @kind float;
  #L3fdc40.  v5:= -v1 @kind float;
  #L3fdc42.  call `translate`(v3, v4, v5) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3fdc48.  call `drawCompatShadow`(v6, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawCompatShadow:(Landroid/graphics/Canvas;)V` @kind direct;
  #L3fdc4e.  v3:= 0I;
  #L3fdc50.  call `drawBitmap`(v7, v2, v0, v1, v3) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L3fdc56.  call `recycle`(v2) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L3fdc5c.  call `restore`(v7) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L3fdc62.  return @kind void;
  #L3fdc64.  v7:= new `java.lang.IllegalStateException`;
  #L3fdc68.  v0:= "Invalid shadow bounds. Check that the treatments result in a valid path." @kind object;
  #L3fdc6c.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fdc72.  throw v7;
}
procedure `int` `modulateAlpha`(`int` v1 , `int` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.modulateAlpha:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3fd3f0.  v0:= v2 ^>> 7;
  #L3fd3f4.  v2:= v2 + v0 @kind int;
  #L3fd3f6.  v1:= v1 * v2 @kind int;
  #L3fd3fa.  v1:= v1 ^>> 8;
  #L3fd3fe.  return v1;
}
procedure `void` `prepareCanvasForShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.prepareCanvasForShadow:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fdca4.  call temp:= `getShadowOffsetX`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetX:()I` @kind virtual;
  #L3fdcaa.  v0:= temp;
  #L3fdcac.  call temp:= `getShadowOffsetY`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetY:()I` @kind virtual;
  #L3fdcb2.  v1:= temp;
  #L3fdcb4.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3fdcb8.  v3:= 21I;
  #L3fdcbc.  if v2 >= v3 then goto L3fdcf2;
  #L3fdcc0.  v2:= v5.`com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @type ^`boolean` @kind boolean;
  #L3fdcc4.  if v2 == 0 then goto L3fdcf2;
  #L3fdcc8.  call temp:= `getClipBounds`(v6) @signature `Landroid/graphics/Canvas;.getClipBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L3fdcce.  v2:= temp @kind object;
  #L3fdcd0.  v3:= v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdcd4.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L3fdcd8.  v4:= -v3 @kind int;
  #L3fdcda.  v3:= -v3 @kind int;
  #L3fdcdc.  call `inset`(v2, v4, v3) @signature `Landroid/graphics/Rect;.inset:(II)V` @kind virtual;
  #L3fdce2.  call `offset`(v2, v0, v1) @signature `Landroid/graphics/Rect;.offset:(II)V` @kind virtual;
  #L3fdce8.  v3:= `@@android.graphics.Region$Op.REPLACE` @type ^`android.graphics.Region$Op` @kind object;
  #L3fdcec.  call temp:= `clipRect`(v6, v2, v3) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/Rect;Landroid/graphics/Region$Op;)Z` @kind virtual;
  #L3fdcf2.  v0:= (`float`) v0 @kind i2f;
  #L3fdcf4.  v1:= (`float`) v1 @kind i2f;
  #L3fdcf6.  call `translate`(v6, v0, v1) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3fdcfc.  return @kind void;
}
procedure `boolean` `updateColorsForState`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `int`[] v5 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateColorsForState:([I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fcec4.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcec8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fcecc.  v1:= 1I;
  #L3fcece.  if v0 == 0 then goto L3fcf00;
  #L3fced2.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L3fced6.  call temp:= `getColor`(v0) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L3fcedc.  v0:= temp;
  #L3fcede.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcee2.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fcee6.  call temp:= `getColorForState`(v2, v5, v0) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L3fceec.  v2:= temp;
  #L3fceee.  if v0 == v2 then goto L3fcf00;
  #L3fcef2.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L3fcef6.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3fcefc.  v0:= 1I;
  #L3fcefe.  goto L3fcf02;
  #L3fcf00.  v0:= 0I;
  #L3fcf02.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcf06.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fcf0a.  if v2 == 0 then goto L3fcf3a;
  #L3fcf0e.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L3fcf12.  call temp:= `getColor`(v2) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L3fcf18.  v2:= temp;
  #L3fcf1a.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcf1e.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fcf22.  call temp:= `getColorForState`(v3, v5, v2) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L3fcf28.  v5:= temp;
  #L3fcf2a.  if v2 == v5 then goto L3fcf3a;
  #L3fcf2e.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L3fcf32.  call `setColor`(v0, v5) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3fcf38.  goto L3fcf3c;
  #L3fcf3a.  v1:= v0;
  #L3fcf3c.  return v1;
}
procedure `boolean` `updateTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v7 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fcf50.  v0:= v7.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L3fcf54.  v1:= v7.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L3fcf58.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcf5c.  v3:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fcf60.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3fcf64.  v4:= v7.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L3fcf68.  v5:= 1I;
  #L3fcf6a.  call temp:= `calculateTintFilter`(v7, v3, v2, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L3fcf70.  v2:= temp @kind object;
  #L3fcf72.  v7.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v2 @kind object;
  #L3fcf76.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcf7a.  v3:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fcf7e.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3fcf82.  v4:= v7.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L3fcf86.  v6:= 0I;
  #L3fcf88.  call temp:= `calculateTintFilter`(v7, v3, v2, v4, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L3fcf8e.  v2:= temp @kind object;
  #L3fcf90.  v7.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v2 @kind object;
  #L3fcf94.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcf98.  v3:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` @kind boolean;
  #L3fcf9c.  if v3 == 0 then goto L3fcfbe;
  #L3fcfa0.  v3:= v7.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L3fcfa4.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fcfa8.  call temp:= `getState`(v7) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3fcfae.  v4:= temp @kind object;
  #L3fcfb0.  call temp:= `getColorForState`(v2, v4, v6) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L3fcfb6.  v2:= temp;
  #L3fcfb8.  call `setShadowColor`(v3, v2) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.setShadowColor:(I)V` @kind virtual;
  #L3fcfbe.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L3fcfc2.  call temp:= `equals`(v0, v2) @signature `Landroidx/core/util/ObjectsCompat;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3fcfc8.  v0:= temp;
  #L3fcfca.  if v0 == 0 then goto L3fcfe2;
  #L3fcfce.  v0:= v7.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L3fcfd2.  call temp:= `equals`(v1, v0) @signature `Landroidx/core/util/ObjectsCompat;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3fcfd8.  v0:= temp;
  #L3fcfda.  if v0 != 0 then goto L3fcfe0;
  #L3fcfde.  goto L3fcfe2;
  #L3fcfe0.  v5:= 0I;
  #L3fcfe2.  return v5;
}
procedure `void` `updateZ`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fe224.  call temp:= `getZ`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getZ:()F` @kind virtual;
  #L3fe22a.  v0:= temp;
  #L3fe22c.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fe230.  v2:= 0.75F;
  #L3fe234.  v2:= v2 * v0 @kind float;
  #L3fe238.  v2:= (`double`) v2 @kind f2d;
  #L3fe23a.  call temp:= `ceil`(v2) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L3fe240.  v2:= temp @kind wide;
  #L3fe242.  v2:= (`int`) v2 @kind d2i;
  #L3fe244.  v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int` := v2;
  #L3fe248.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fe24c.  v2:= 0.25F;
  #L3fe250.  v0:= v0 * v2 @kind float;
  #L3fe254.  v2:= (`double`) v0 @kind f2d;
  #L3fe256.  call temp:= `ceil`(v2) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L3fe25c.  v2:= temp @kind wide;
  #L3fe25e.  v0:= (`int`) v2 @kind d2i;
  #L3fe260.  v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int` := v0;
  #L3fe264.  call temp:= `updateTintFilter`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L3fe26a.  call `invalidateSelfIgnoreShape`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L3fe270.  return @kind void;
}
procedure `void` `calculatePathForSize`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.RectF` v7 @kind object, `android.graphics.Path` v8 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fd6ec.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` @kind object;
  #L3fd6f0.  v1:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd6f4.  v2:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3fd6f8.  v3:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L3fd6fc.  v4:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathShadowListener` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` @kind object;
  #L3fd700.  v1:= v2 @kind object;
  #L3fd702.  v2:= v3;
  #L3fd704.  v3:= v7 @kind object;
  #L3fd706.  v5:= v8 @kind object;
  #L3fd708.  call `calculatePath`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.calculatePath:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Lcom/google/android/material/shape/ShapeAppearancePathProvider$PathListener;Landroid/graphics/Path;)V` @kind virtual;
  #L3fd70e.  return @kind void;
}
procedure `int` `compositeElevationOverlayIfNeeded`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3fd2a8.  call temp:= `getZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getZ:()F` @kind virtual;
  #L3fd2ae.  v0:= temp;
  #L3fd2b0.  call temp:= `getParentAbsoluteElevation`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getParentAbsoluteElevation:()F` @kind virtual;
  #L3fd2b6.  v1:= temp;
  #L3fd2b8.  v0:= v0 + v1 @kind float;
  #L3fd2ba.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd2be.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` @kind object;
  #L3fd2c2.  if v1 == 0 then goto L3fd2ce;
  #L3fd2c6.  call temp:= `compositeOverlayIfNeeded`(v1, v3, v0) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlayIfNeeded:(IF)I` @kind virtual;
  #L3fd2cc.  v3:= temp;
  #L3fd2ce.  return v3;
}
procedure `void` `draw`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `android.graphics.Canvas` v5 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fd778.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd77c.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L3fd780.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L3fd786.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd78a.  call temp:= `getAlpha`(v0) @signature `Landroid/graphics/Paint;.getAlpha:()I` @kind virtual;
  #L3fd790.  v0:= temp;
  #L3fd792.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd796.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd79a.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int`;
  #L3fd79e.  call temp:= `modulateAlpha`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.modulateAlpha:(II)I` @kind static;
  #L3fd7a4.  v2:= temp;
  #L3fd7a6.  call `setAlpha`(v1, v2) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L3fd7ac.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd7b0.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L3fd7b4.  call temp:= `setColorFilter`(v1, v2) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L3fd7ba.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd7be.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd7c2.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeWidth` @type ^`float`;
  #L3fd7c6.  call `setStrokeWidth`(v1, v2) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L3fd7cc.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd7d0.  call temp:= `getAlpha`(v1) @signature `Landroid/graphics/Paint;.getAlpha:()I` @kind virtual;
  #L3fd7d6.  v1:= temp;
  #L3fd7d8.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd7dc.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd7e0.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int`;
  #L3fd7e4.  call temp:= `modulateAlpha`(v1, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.modulateAlpha:(II)I` @kind static;
  #L3fd7ea.  v3:= temp;
  #L3fd7ec.  call `setAlpha`(v2, v3) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L3fd7f2.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` @kind boolean;
  #L3fd7f6.  if v2 == 0 then goto L3fd818;
  #L3fd7fa.  call `calculateStrokePath`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateStrokePath:()V` @kind direct;
  #L3fd800.  call temp:= `getBoundsAsRectF`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L3fd806.  v2:= temp @kind object;
  #L3fd808.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L3fd80c.  call `calculatePath`(v4, v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind direct;
  #L3fd812.  v2:= 0I;
  #L3fd814.  v4.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v2 @kind boolean;
  #L3fd818.  call `maybeDrawCompatShadow`(v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.maybeDrawCompatShadow:(Landroid/graphics/Canvas;)V` @kind direct;
  #L3fd81e.  call temp:= `hasFill`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasFill:()Z` @kind direct;
  #L3fd824.  v2:= temp;
  #L3fd826.  if v2 == 0 then goto L3fd830;
  #L3fd82a.  call `drawFillShape`(v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawFillShape:(Landroid/graphics/Canvas;)V` @kind direct;
  #L3fd830.  call temp:= `hasStroke`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasStroke:()Z` @kind direct;
  #L3fd836.  v2:= temp;
  #L3fd838.  if v2 == 0 then goto L3fd842;
  #L3fd83c.  call `drawStrokeShape`(v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawStrokeShape:(Landroid/graphics/Canvas;)V` @kind direct;
  #L3fd842.  v5:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd846.  call `setAlpha`(v5, v0) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L3fd84c.  v5:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L3fd850.  call `setAlpha`(v5, v1) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L3fd856.  return @kind void;
}
procedure `void` `drawShape`(`com.google.android.material.shape.MaterialShapeDrawable` v7 @kind this, `android.graphics.Canvas` v8 @kind object, `android.graphics.Paint` v9 @kind object, `android.graphics.Path` v10 @kind object, `android.graphics.RectF` v11 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Landroid/graphics/RectF;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fd970.  v0:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd974.  v5:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3fd978.  v1:= v7 @kind object;
  #L3fd97a.  v2:= v8 @kind object;
  #L3fd97c.  v3:= v9 @kind object;
  #L3fd97e.  v4:= v10 @kind object;
  #L3fd980.  v6:= v11 @kind object;
  #L3fd982.  call `drawShape`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @kind direct;
  #L3fd988.  return @kind void;
}
procedure `float` `getBottomLeftCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBottomLeftCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fd0d8.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd0dc.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3fd0e0.  call temp:= `getBottomLeftCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomLeftCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L3fd0e6.  v0:= temp @kind object;
  #L3fd0e8.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L3fd0ee.  v1:= temp @kind object;
  #L3fd0f0.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L3fd0f6.  v0:= temp;
  #L3fd0f8.  return v0;
}
procedure `float` `getBottomRightCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBottomRightCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fd10c.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd110.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3fd114.  call temp:= `getBottomRightCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L3fd11a.  v0:= temp @kind object;
  #L3fd11c.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L3fd122.  v1:= temp @kind object;
  #L3fd124.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L3fd12a.  v0:= temp;
  #L3fd12c.  return v0;
}
procedure `android.graphics.RectF` `getBoundsAsRectF`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3fcadc.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3fcae0.  call temp:= `getBounds`(v2) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L3fcae6.  v1:= temp @kind object;
  #L3fcae8.  call `set`(v0, v1) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L3fcaee.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3fcaf2.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable$ConstantState` `getConstantState`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getConstantState:()Landroid/graphics/drawable/Drawable$ConstantState;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcbc4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcbc8.  return v0 @kind object;
}
procedure `float` `getElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd140.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd144.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevation` @type ^`float`;
  #L3fd148.  return v0;
}
procedure `android.content.res.ColorStateList` `getFillColor`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc9a8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fc9ac.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fc9b0.  return v0 @kind object;
}
procedure `float` `getInterpolation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getInterpolation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd15c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd160.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L3fd164.  return v0;
}
procedure `int` `getOpacity`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd2e0.  v0:= -3I;
  #L3fd2e2.  return v0;
}
procedure `void` `getOutline`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.graphics.Outline` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getOutline:(Landroid/graphics/Outline;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fda14.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fda18.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L3fda1c.  v1:= 2I;
  #L3fda1e.  if v0 != v1 then goto L3fda24;
  #L3fda22.  return @kind void;
  #L3fda24.  call temp:= `isRoundRect`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isRoundRect:()Z` @kind virtual;
  #L3fda2a.  v0:= temp;
  #L3fda2c.  if v0 == 0 then goto L3fda54;
  #L3fda30.  call temp:= `getTopLeftCornerResolvedSize`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopLeftCornerResolvedSize:()F` @kind virtual;
  #L3fda36.  v0:= temp;
  #L3fda38.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fda3c.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L3fda40.  v0:= v0 * v1 @kind float;
  #L3fda44.  call temp:= `getBounds`(v2) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L3fda4a.  v1:= temp @kind object;
  #L3fda4c.  call `setRoundRect`(v3, v1, v0) @signature `Landroid/graphics/Outline;.setRoundRect:(Landroid/graphics/Rect;F)V` @kind virtual;
  #L3fda52.  return @kind void;
  #L3fda54.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L3fda5a.  v0:= temp @kind object;
  #L3fda5c.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L3fda60.  call `calculatePath`(v2, v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind direct;
  #L3fda66.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L3fda6a.  call temp:= `isConvex`(v0) @signature `Landroid/graphics/Path;.isConvex:()Z` @kind virtual;
  #L3fda70.  v0:= temp;
  #L3fda72.  if v0 != 0 then goto L3fda82;
  #L3fda76.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3fda7a.  v1:= 29I;
  #L3fda7e.  if v0 < v1 then goto L3fda8c;
  #L3fda82.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L3fda86.  call `setConvexPath`(v3, v0) @signature `Landroid/graphics/Outline;.setConvexPath:(Landroid/graphics/Path;)V` @kind virtual;
  #L3fda8c.  return @kind void;
  catch `java.lang.IllegalArgumentException` @[L3fda82..L3fda8c] goto L3fda8c;
}
procedure `boolean` `getPadding`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Rect` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getPadding:(Landroid/graphics/Rect;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcbf4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcbf8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` @kind object;
  #L3fcbfc.  if v0 == 0 then goto L3fcc0a;
  #L3fcc00.  call `set`(v2, v0) @signature `Landroid/graphics/Rect;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L3fcc06.  v2:= 1I;
  #L3fcc08.  return v2;
  #L3fcc0a.  call temp:= `getPadding`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.getPadding:(Landroid/graphics/Rect;)Z` @kind super;
  #L3fcc10.  v2:= temp;
  #L3fcc12.  return v2;
}
procedure `android.graphics.Paint$Style` `getPaintStyle`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getPaintStyle:()Landroid/graphics/Paint$Style;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fca18.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fca1c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` @kind object;
  #L3fca20.  return v0 @kind object;
}
procedure `float` `getParentAbsoluteElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getParentAbsoluteElevation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd178.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd17c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.parentAbsoluteElevation` @type ^`float`;
  #L3fd180.  return v0;
}
procedure `void` `getPathForSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 , `int` v4 , `android.graphics.Path` v5 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getPathForSize:(IILandroid/graphics/Path;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fdab0.  v0:= new `android.graphics.RectF`;
  #L3fdab4.  v3:= (`float`) v3 @kind i2f;
  #L3fdab6.  v4:= (`float`) v4 @kind i2f;
  #L3fdab8.  v1:= 0I;
  #L3fdaba.  call `<init>`(v0, v1, v1, v3, v4) @signature `Landroid/graphics/RectF;.<init>:(FFFF)V` @kind direct;
  #L3fdac0.  call `calculatePathForSize`(v2, v0, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L3fdac6.  return @kind void;
}
procedure `float` `getScale`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getScale:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd194.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd198.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L3fd19c.  return v0;
}
procedure `int` `getShadowCompatRotation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowCompatRotation:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd2f4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd2f8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L3fd2fc.  return v0;
}
procedure `int` `getShadowCompatibilityMode`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowCompatibilityMode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd310.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd314.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L3fd318.  return v0;
}
procedure `int` `getShadowElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowElevation:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd32c.  call temp:= `getElevation`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L3fd332.  v0:= temp;
  #L3fd334.  v0:= (`int`) v0 @kind f2i;
  #L3fd336.  return v0;
}
procedure `int` `getShadowOffsetX`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetX:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fd348.  v0:= v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd34c.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L3fd350.  v1:= (`double`) v1 @kind i2d;
  #L3fd352.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L3fd356.  v3:= (`double`) v0 @kind i2d;
  #L3fd358.  call temp:= `toRadians`(v3) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L3fd35e.  v3:= temp @kind wide;
  #L3fd360.  call temp:= `sin`(v3) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L3fd366.  v3:= temp @kind wide;
  #L3fd368.  v1:= v1 * v3 @kind double;
  #L3fd36c.  v0:= (`int`) v1 @kind d2i;
  #L3fd36e.  return v0;
}
procedure `int` `getShadowOffsetY`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetY:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fd380.  v0:= v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd384.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L3fd388.  v1:= (`double`) v1 @kind i2d;
  #L3fd38a.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L3fd38e.  v3:= (`double`) v0 @kind i2d;
  #L3fd390.  call temp:= `toRadians`(v3) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L3fd396.  v3:= temp @kind wide;
  #L3fd398.  call temp:= `cos`(v3) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L3fd39e.  v3:= temp @kind wide;
  #L3fd3a0.  v1:= v1 * v3 @kind double;
  #L3fd3a4.  v0:= (`int`) v1 @kind d2i;
  #L3fd3a6.  return v0;
}
procedure `int` `getShadowRadius`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowRadius:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd3b8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd3bc.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L3fd3c0.  return v0;
}
procedure `int` `getShadowVerticalOffset`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowVerticalOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd3d4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd3d8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L3fd3dc.  return v0;
}
procedure `com.google.android.material.shape.ShapeAppearanceModel` `getShapeAppearanceModel`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd060.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd064.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3fd068.  return v0 @kind object;
}
procedure `com.google.android.material.shape.ShapePathModel` `getShapedViewModel`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapedViewModel:()Lcom/google/android/material/shape/ShapePathModel;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fd0ac.  call temp:= `getShapeAppearanceModel`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L3fd0b2.  v0:= temp @kind object;
  #L3fd0b4.  v1:= instanceof @variable v0 @type ^`com.google.android.material.shape.ShapePathModel` @kind boolean;
  #L3fd0b8.  if v1 == 0 then goto L3fd0c2;
  #L3fd0bc.  v0:= (`com.google.android.material.shape.ShapePathModel`) v0 @kind object;
  #L3fd0c0.  goto L3fd0c4;
  #L3fd0c2.  v0:= 0I;
  #L3fd0c4.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getStrokeColor`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc9c4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fc9c8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fc9cc.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getStrokeTintList`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc9e0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fc9e4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fc9e8.  return v0 @kind object;
}
procedure `float` `getStrokeWidth`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd1e4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd1e8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeWidth` @type ^`float`;
  #L3fd1ec.  return v0;
}
procedure `android.content.res.ColorStateList` `getTintList`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc9fc.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fca00.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fca04.  return v0 @kind object;
}
procedure `float` `getTopLeftCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopLeftCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fd200.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd204.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3fd208.  call temp:= `getTopLeftCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopLeftCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L3fd20e.  v0:= temp @kind object;
  #L3fd210.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L3fd216.  v1:= temp @kind object;
  #L3fd218.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L3fd21e.  v0:= temp;
  #L3fd220.  return v0;
}
procedure `float` `getTopRightCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopRightCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fd234.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd238.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3fd23c.  call temp:= `getTopRightCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L3fd242.  v0:= temp @kind object;
  #L3fd244.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L3fd24a.  v1:= temp @kind object;
  #L3fd24c.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L3fd252.  v0:= temp;
  #L3fd254.  return v0;
}
procedure `float` `getTranslationZ`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTranslationZ:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd268.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fd26c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.translationZ` @type ^`float`;
  #L3fd270.  return v0;
}
procedure `android.graphics.Region` `getTransparentRegion`(`com.google.android.material.shape.MaterialShapeDrawable` v3 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTransparentRegion:()Landroid/graphics/Region;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3fcb40.  call temp:= `getBounds`(v3) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L3fcb46.  v0:= temp @kind object;
  #L3fcb48.  v1:= v3.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L3fcb4c.  call temp:= `set`(v1, v0) @signature `Landroid/graphics/Region;.set:(Landroid/graphics/Rect;)Z` @kind virtual;
  #L3fcb52.  call temp:= `getBoundsAsRectF`(v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L3fcb58.  v0:= temp @kind object;
  #L3fcb5a.  v1:= v3.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L3fcb5e.  call `calculatePath`(v3, v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind direct;
  #L3fcb64.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @type ^`android.graphics.Region` @kind object;
  #L3fcb68.  v1:= v3.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L3fcb6c.  v2:= v3.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L3fcb70.  call temp:= `setPath`(v0, v1, v2) @signature `Landroid/graphics/Region;.setPath:(Landroid/graphics/Path;Landroid/graphics/Region;)Z` @kind virtual;
  #L3fcb76.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L3fcb7a.  v1:= v3.`com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @type ^`android.graphics.Region` @kind object;
  #L3fcb7e.  v2:= `@@android.graphics.Region$Op.DIFFERENCE` @type ^`android.graphics.Region$Op` @kind object;
  #L3fcb82.  call temp:= `op`(v0, v1, v2) @signature `Landroid/graphics/Region;.op:(Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z` @kind virtual;
  #L3fcb88.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L3fcb8c.  return v0 @kind object;
}
procedure `float` `getZ`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getZ:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fd284.  call temp:= `getElevation`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L3fd28a.  v0:= temp;
  #L3fd28c.  call temp:= `getTranslationZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTranslationZ:()F` @kind virtual;
  #L3fd292.  v1:= temp;
  #L3fd294.  v0:= v0 + v1 @kind float;
  #L3fd296.  return v0;
}
procedure `void` `initializeElevationOverlay`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.content.Context` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.initializeElevationOverlay:(Landroid/content/Context;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fdad8.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdadc.  v1:= new `com.google.android.material.elevation.ElevationOverlayProvider`;
  #L3fdae0.  call `<init>`(v1, v3) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L3fdae6.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` := v1 @kind object;
  #L3fdaea.  call `updateZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L3fdaf0.  return @kind void;
}
procedure `void` `invalidateSelf`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fdb04.  v0:= 1I;
  #L3fdb06.  v1.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v0 @kind boolean;
  #L3fdb0a.  call `invalidateSelf`(v1) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind super;
  #L3fdb10.  return @kind void;
}
procedure `boolean` `isElevationOverlayEnabled`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isElevationOverlayEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcce0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcce4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` @kind object;
  #L3fcce8.  if v0 == 0 then goto L3fccfc;
  #L3fccec.  call temp:= `isThemeElevationOverlayEnabled`(v0) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.isThemeElevationOverlayEnabled:()Z` @kind virtual;
  #L3fccf2.  v0:= temp;
  #L3fccf4.  if v0 == 0 then goto L3fccfc;
  #L3fccf8.  v0:= 1I;
  #L3fccfa.  goto L3fccfe;
  #L3fccfc.  v0:= 0I;
  #L3fccfe.  return v0;
}
procedure `boolean` `isElevationOverlayInitialized`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isElevationOverlayInitialized:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcd10.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcd14.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` @kind object;
  #L3fcd18.  if v0 == 0 then goto L3fcd20;
  #L3fcd1c.  v0:= 1I;
  #L3fcd1e.  goto L3fcd22;
  #L3fcd20.  v0:= 0I;
  #L3fcd22.  return v0;
}
procedure `boolean` `isPointInTransparentRegion`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isPointInTransparentRegion:(II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcd34.  call temp:= `getTransparentRegion`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTransparentRegion:()Landroid/graphics/Region;` @kind virtual;
  #L3fcd3a.  v0:= temp @kind object;
  #L3fcd3c.  call temp:= `contains`(v0, v2, v3) @signature `Landroid/graphics/Region;.contains:(II)Z` @kind virtual;
  #L3fcd42.  v2:= temp;
  #L3fcd44.  return v2;
}
procedure `boolean` `isRoundRect`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isRoundRect:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fcd58.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcd5c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3fcd60.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L3fcd66.  v1:= temp @kind object;
  #L3fcd68.  call temp:= `isRoundRect`(v0, v1) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.isRoundRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L3fcd6e.  v0:= temp;
  #L3fcd70.  return v0;
}
procedure `boolean` `isShadowEnabled`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isShadowEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fcd84.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcd88.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L3fcd8c.  if v0 == 0 then goto L3fcd9c;
  #L3fcd90.  v1:= 2I;
  #L3fcd92.  if v0 != v1 then goto L3fcd98;
  #L3fcd96.  goto L3fcd9c;
  #L3fcd98.  v0:= 0I;
  #L3fcd9a.  goto L3fcd9e;
  #L3fcd9c.  v0:= 1I;
  #L3fcd9e.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcdb0.  call temp:= `isStateful`(v1) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind super;
  #L3fcdb6.  v0:= temp;
  #L3fcdb8.  if v0 != 0 then goto L3fce22;
  #L3fcdbc.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcdc0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fcdc4.  if v0 == 0 then goto L3fcdd4;
  #L3fcdc8.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L3fcdce.  v0:= temp;
  #L3fcdd0.  if v0 != 0 then goto L3fce22;
  #L3fcdd4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcdd8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fcddc.  if v0 == 0 then goto L3fcdec;
  #L3fcde0.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L3fcde6.  v0:= temp;
  #L3fcde8.  if v0 != 0 then goto L3fce22;
  #L3fcdec.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcdf0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fcdf4.  if v0 == 0 then goto L3fce04;
  #L3fcdf8.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L3fcdfe.  v0:= temp;
  #L3fce00.  if v0 != 0 then goto L3fce22;
  #L3fce04.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fce08.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fce0c.  if v0 == 0 then goto L3fce1e;
  #L3fce10.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L3fce16.  v0:= temp;
  #L3fce18.  if v0 == 0 then goto L3fce1e;
  #L3fce1c.  goto L3fce22;
  #L3fce1e.  v0:= 0I;
  #L3fce20.  goto L3fce24;
  #L3fce22.  v0:= 1I;
  #L3fce24.  return v0;
}
procedure `android.graphics.drawable.Drawable` `mutate`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.mutate:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fcba0.  v0:= new `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState`;
  #L3fcba4.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fcba8.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @kind direct;
  #L3fcbae.  v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` := v0 @kind object;
  #L3fcbb2.  return v2 @kind object;
}
procedure `void` `onBoundsChange`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Rect` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onBoundsChange:(Landroid/graphics/Rect;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3fdc84.  v0:= 1I;
  #L3fdc86.  v1.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v0 @kind boolean;
  #L3fdc8a.  call `onBoundsChange`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.onBoundsChange:(Landroid/graphics/Rect;)V` @kind super;
  #L3fdc90.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int`[] v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3fce38.  call temp:= `updateColorsForState`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateColorsForState:([I)Z` @kind direct;
  #L3fce3e.  v2:= temp;
  #L3fce40.  call temp:= `updateTintFilter`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L3fce46.  v0:= temp;
  #L3fce48.  if v2 != 0 then goto L3fce56;
  #L3fce4c.  if v0 == 0 then goto L3fce52;
  #L3fce50.  goto L3fce56;
  #L3fce52.  v2:= 0I;
  #L3fce54.  goto L3fce58;
  #L3fce56.  v2:= 1I;
  #L3fce58.  if v2 == 0 then goto L3fce62;
  #L3fce5c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3fce62.  return v2;
}
procedure `boolean` `requiresCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.requiresCompatShadow:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fce74.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3fce78.  v1:= 21I;
  #L3fce7c.  if v0 < v1 then goto L3fceae;
  #L3fce80.  call temp:= `isRoundRect`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isRoundRect:()Z` @kind virtual;
  #L3fce86.  v0:= temp;
  #L3fce88.  if v0 != 0 then goto L3fceaa;
  #L3fce8c.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L3fce90.  call temp:= `isConvex`(v0) @signature `Landroid/graphics/Path;.isConvex:()Z` @kind virtual;
  #L3fce96.  v0:= temp;
  #L3fce98.  if v0 != 0 then goto L3fceaa;
  #L3fce9c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3fcea0.  v1:= 29I;
  #L3fcea4.  if v0 >= v1 then goto L3fceaa;
  #L3fcea8.  goto L3fceae;
  #L3fceaa.  v0:= 0I;
  #L3fceac.  goto L3fceb0;
  #L3fceae.  v0:= 1I;
  #L3fceb0.  return v0;
}
procedure `void` `setAlpha`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fdd10.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdd14.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int`;
  #L3fdd18.  if v1 == v3 then goto L3fdd26;
  #L3fdd1c.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int` := v3;
  #L3fdd20.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L3fdd26.  return @kind void;
}
procedure `void` `setColorFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fdd38.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdd3c.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.colorFilter` @type ^`android.graphics.ColorFilter` := v2 @kind object;
  #L3fdd40.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L3fdd46.  return @kind void;
}
procedure `void` `setCornerSize`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setCornerSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fdd80.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdd84.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3fdd88.  call temp:= `withCornerSize`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withCornerSize:(F)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L3fdd8e.  v2:= temp @kind object;
  #L3fdd90.  call `setShapeAppearanceModel`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L3fdd96.  return @kind void;
}
procedure `void` `setCornerSize`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `com.google.android.material.shape.CornerSize` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setCornerSize:(Lcom/google/android/material/shape/CornerSize;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fdd58.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdd5c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L3fdd60.  call temp:= `withCornerSize`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withCornerSize:(Lcom/google/android/material/shape/CornerSize;)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L3fdd66.  v2:= temp @kind object;
  #L3fdd68.  call `setShapeAppearanceModel`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L3fdd6e.  return @kind void;
}
procedure `void` `setEdgeIntersectionCheckEnable`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setEdgeIntersectionCheckEnable:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fdda8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` @kind object;
  #L3fddac.  call `setEdgeIntersectionCheckEnable`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.setEdgeIntersectionCheckEnable:(Z)V` @kind virtual;
  #L3fddb2.  return @kind void;
}
procedure `void` `setElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fddc4.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fddc8.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevation` @type ^`float`;
  #L3fddcc.  v1:= fcmpl(v1, v3);
  #L3fddd0.  if v1 == 0 then goto L3fddde;
  #L3fddd4.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevation` @type ^`float` := v3;
  #L3fddd8.  call `updateZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L3fddde.  return @kind void;
}
procedure `void` `setFillColor`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fddf0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fddf4.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fddf8.  if v1 == v3 then goto L3fde0e;
  #L3fddfc.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` := v3 @kind object;
  #L3fde00.  call temp:= `getState`(v2) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3fde06.  v3:= temp @kind object;
  #L3fde08.  call temp:= `onStateChange`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind virtual;
  #L3fde0e.  return @kind void;
}
procedure `void` `setInterpolation`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setInterpolation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fde20.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fde24.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L3fde28.  v1:= fcmpl(v1, v3);
  #L3fde2c.  if v1 == 0 then goto L3fde40;
  #L3fde30.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float` := v3;
  #L3fde34.  v3:= 1I;
  #L3fde36.  v2.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v3 @kind boolean;
  #L3fde3a.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3fde40.  return @kind void;
}
procedure `void` `setPadding`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setPadding:(IIII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fde54.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fde58.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` @kind object;
  #L3fde5c.  if v1 != 0 then goto L3fde6e;
  #L3fde60.  v1:= new `android.graphics.Rect`;
  #L3fde64.  call `<init>`(v1) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L3fde6a.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` := v1 @kind object;
  #L3fde6e.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fde72.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` @kind object;
  #L3fde76.  call `set`(v0, v3, v4, v5, v6) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L3fde7c.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3fde82.  return @kind void;
}
procedure `void` `setPaintStyle`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Paint$Style` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setPaintStyle:(Landroid/graphics/Paint$Style;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fde94.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fde98.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` := v2 @kind object;
  #L3fde9c.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L3fdea2.  return @kind void;
}
procedure `void` `setParentAbsoluteElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setParentAbsoluteElevation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fdeb4.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdeb8.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.parentAbsoluteElevation` @type ^`float`;
  #L3fdebc.  v1:= fcmpl(v1, v3);
  #L3fdec0.  if v1 == 0 then goto L3fdece;
  #L3fdec4.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.parentAbsoluteElevation` @type ^`float` := v3;
  #L3fdec8.  call `updateZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L3fdece.  return @kind void;
}
procedure `void` `setScale`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setScale:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fdee0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdee4.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L3fdee8.  v1:= fcmpl(v1, v3);
  #L3fdeec.  if v1 == 0 then goto L3fdefa;
  #L3fdef0.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float` := v3;
  #L3fdef4.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3fdefa.  return @kind void;
}
procedure `void` `setShadowBitmapDrawingEnable`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowBitmapDrawingEnable:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3fdf0c.  v0.`com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @type ^`boolean` := v1 @kind boolean;
  #L3fdf10.  return @kind void;
}
procedure `void` `setShadowColor`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fdf24.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L3fdf28.  call `setShadowColor`(v0, v2) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.setShadowColor:(I)V` @kind virtual;
  #L3fdf2e.  v2:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdf32.  v0:= 0I;
  #L3fdf34.  v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` := v0 @kind boolean;
  #L3fdf38.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L3fdf3e.  return @kind void;
}
procedure `void` `setShadowCompatRotation`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatRotation:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fdf50.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdf54.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L3fdf58.  if v1 == v3 then goto L3fdf66;
  #L3fdf5c.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int` := v3;
  #L3fdf60.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L3fdf66.  return @kind void;
}
procedure `void` `setShadowCompatibilityMode`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatibilityMode:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fdf78.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdf7c.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L3fdf80.  if v1 == v3 then goto L3fdf8e;
  #L3fdf84.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int` := v3;
  #L3fdf88.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L3fdf8e.  return @kind void;
}
procedure `void` `setShadowElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowElevation:(I)V` @AccessFlag PUBLIC {
    temp;

  #L3fdfa0.  v1:= (`float`) v1 @kind i2f;
  #L3fdfa2.  call `setElevation`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @kind virtual;
  #L3fdfa8.  return @kind void;
}
procedure `void` `setShadowEnabled`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3fdfbc.  v1:= v1 ^~ 1;
  #L3fdfc0.  call `setShadowCompatibilityMode`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatibilityMode:(I)V` @kind virtual;
  #L3fdfc6.  return @kind void;
}
procedure `void` `setShadowRadius`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowRadius:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fdfd8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdfdc.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int` := v2;
  #L3fdfe0.  return @kind void;
}
procedure `void` `setShadowVerticalOffset`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowVerticalOffset:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fdff4.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fdff8.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L3fdffc.  if v1 == v3 then goto L3fe00a;
  #L3fe000.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int` := v3;
  #L3fe004.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L3fe00a.  return @kind void;
}
procedure `void` `setShapeAppearanceModel`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `com.google.android.material.shape.ShapeAppearanceModel` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe01c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fe020.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` := v2 @kind object;
  #L3fe024.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3fe02a.  return @kind void;
}
procedure `void` `setShapedViewModel`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `com.google.android.material.shape.ShapePathModel` v1 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapedViewModel:(Lcom/google/android/material/shape/ShapePathModel;)V` @AccessFlag PUBLIC {
    temp;

  #L3fe03c.  call `setShapeAppearanceModel`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L3fe042.  return @kind void;
}
procedure `void` `setStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `float` v1 , `int` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStroke:(FI)V` @AccessFlag PUBLIC {
    temp;

  #L3fe074.  call `setStrokeWidth`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind virtual;
  #L3fe07a.  call temp:= `valueOf`(v2) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L3fe080.  v1:= temp @kind object;
  #L3fe082.  call `setStrokeColor`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3fe088.  return @kind void;
}
procedure `void` `setStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `float` v1 , `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStroke:(FLandroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;

  #L3fe054.  call `setStrokeWidth`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind virtual;
  #L3fe05a.  call `setStrokeColor`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3fe060.  return @kind void;
}
procedure `void` `setStrokeColor`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe09c.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fe0a0.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3fe0a4.  if v1 == v3 then goto L3fe0ba;
  #L3fe0a8.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` := v3 @kind object;
  #L3fe0ac.  call temp:= `getState`(v2) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3fe0b2.  v3:= temp @kind object;
  #L3fe0b4.  call temp:= `onStateChange`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind virtual;
  #L3fe0ba.  return @kind void;
}
procedure `void` `setStrokeTint`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeTint:(I)V` @AccessFlag PUBLIC {
    temp;

  #L3fe0f4.  call temp:= `valueOf`(v1) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L3fe0fa.  v1:= temp @kind object;
  #L3fe0fc.  call `setStrokeTint`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3fe102.  return @kind void;
}
procedure `void` `setStrokeTint`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe0cc.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fe0d0.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L3fe0d4.  call temp:= `updateTintFilter`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L3fe0da.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L3fe0e0.  return @kind void;
}
procedure `void` `setStrokeWidth`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe114.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fe118.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeWidth` @type ^`float` := v2;
  #L3fe11c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3fe122.  return @kind void;
}
procedure `void` `setTint`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTint:(I)V` @AccessFlag PUBLIC {
    temp;

  #L3fe134.  call temp:= `valueOf`(v1) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L3fe13a.  v1:= temp @kind object;
  #L3fe13c.  call `setTintList`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3fe142.  return @kind void;
}
procedure `void` `setTintList`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe154.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fe158.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L3fe15c.  call temp:= `updateTintFilter`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L3fe162.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L3fe168.  return @kind void;
}
procedure `void` `setTintMode`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.graphics.PorterDuff$Mode` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe17c.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fe180.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3fe184.  if v1 == v3 then goto L3fe198;
  #L3fe188.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v3 @kind object;
  #L3fe18c.  call temp:= `updateTintFilter`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L3fe192.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L3fe198.  return @kind void;
}
procedure `void` `setTranslationZ`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTranslationZ:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe1ac.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fe1b0.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.translationZ` @type ^`float`;
  #L3fe1b4.  v1:= fcmpl(v1, v3);
  #L3fe1b8.  if v1 == 0 then goto L3fe1c6;
  #L3fe1bc.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.translationZ` @type ^`float` := v3;
  #L3fe1c0.  call `updateZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L3fe1c6.  return @kind void;
}
procedure `void` `setUseTintColorForShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `boolean` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setUseTintColorForShadow:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe1d8.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L3fe1dc.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` @kind boolean;
  #L3fe1e0.  if v1 == v3 then goto L3fe1ee;
  #L3fe1e4.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` := v3 @kind boolean;
  #L3fe1e8.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3fe1ee.  return @kind void;
}
procedure `void` `setZ`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setZ:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe200.  call temp:= `getElevation`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L3fe206.  v0:= temp;
  #L3fe208.  v2:= v2 - v0 @kind float;
  #L3fe20a.  call `setTranslationZ`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTranslationZ:(F)V` @kind virtual;
  #L3fe210.  return @kind void;
}
