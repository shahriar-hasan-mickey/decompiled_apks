record `com.google.android.material.chip.ChipGroup` @kind class @AccessFlag PUBLIC extends `com.google.android.material.internal.FlowLayout` @kind class {
  `int` `com.google.android.material.chip.ChipGroup.checkedId` @AccessFlag PRIVATE;
  `com.google.android.material.chip.ChipGroup$CheckedStateTracker` `com.google.android.material.chip.ChipGroup.checkedStateTracker` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipGroup.chipSpacingVertical` @AccessFlag PRIVATE;
  `com.google.android.material.chip.ChipGroup$OnCheckedChangeListener` `com.google.android.material.chip.ChipGroup.onCheckedChangeListener` @AccessFlag PRIVATE;
  `com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` `com.google.android.material.chip.ChipGroup.passThroughListener` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipGroup.selectionRequired` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipGroup.singleSelection` @AccessFlag PRIVATE;
}
global `int` `@@com.google.android.material.chip.ChipGroup.DEF_STYLE_RES` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/chip/ChipGroup;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d878c.  v0:= `@@com.google.android.material.R$style.Widget_MaterialComponents_ChipGroup` @type ^`int`;
  #L3d8790.  `@@com.google.android.material.chip.ChipGroup.DEF_STYLE_RES` @type ^`int` := v0;
  #L3d8794.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d87a8.  v0:= 0I;
  #L3d87aa.  call `<init>`(v1, v2, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L3d87b0.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d87c4.  v0:= `@@com.google.android.material.R$attr.chipGroupStyle` @type ^`int`;
  #L3d87c8.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L3d87ce.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v7 @kind this, `android.content.Context` v8 @kind object, `android.util.AttributeSet` v9 @kind object, `int` v10 ) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d87e0.  v0:= `@@com.google.android.material.chip.ChipGroup.DEF_STYLE_RES` @type ^`int`;
  #L3d87e4.  call temp:= `wrap`(v8, v9, v10, v0) @signature `Lcom/google/android/material/theme/overlay/MaterialThemeOverlay;.wrap:(Landroid/content/Context;Landroid/util/AttributeSet;II)Landroid/content/Context;` @kind static;
  #L3d87ea.  v8:= temp @kind object;
  #L3d87ec.  call `<init>`(v7, v8, v9, v10) @signature `Lcom/google/android/material/internal/FlowLayout;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L3d87f2.  v8:= new `com.google.android.material.chip.ChipGroup$CheckedStateTracker`;
  #L3d87f6.  v0:= 0I;
  #L3d87f8.  call `<init>`(v8, v7, v0) @signature `Lcom/google/android/material/chip/ChipGroup$CheckedStateTracker;.<init>:(Lcom/google/android/material/chip/ChipGroup;Lcom/google/android/material/chip/ChipGroup$1;)V` @kind direct;
  #L3d87fe.  v7.`com.google.android.material.chip.ChipGroup.checkedStateTracker` @type ^`com.google.android.material.chip.ChipGroup$CheckedStateTracker` := v8 @kind object;
  #L3d8802.  v8:= new `com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener`;
  #L3d8806.  call `<init>`(v8, v7, v0) @signature `Lcom/google/android/material/chip/ChipGroup$PassThroughHierarchyChangeListener;.<init>:(Lcom/google/android/material/chip/ChipGroup;Lcom/google/android/material/chip/ChipGroup$1;)V` @kind direct;
  #L3d880c.  v7.`com.google.android.material.chip.ChipGroup.passThroughListener` @type ^`com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` := v8 @kind object;
  #L3d8810.  v8:= -1I;
  #L3d8812.  v7.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int` := v8;
  #L3d8816.  v0:= 0I;
  #L3d8818.  v7.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v0 @kind boolean;
  #L3d881c.  call temp:= `getContext`(v7) @signature `Landroid/view/ViewGroup;.getContext:()Landroid/content/Context;` @kind virtual;
  #L3d8822.  v1:= temp @kind object;
  #L3d8824.  v3:= `@@com.google.android.material.R$styleable.ChipGroup` @type ^`int`[] @kind object;
  #L3d8828.  v5:= `@@com.google.android.material.chip.ChipGroup.DEF_STYLE_RES` @type ^`int`;
  #L3d882c.  v6:= new `int`[v0];
  #L3d8830.  v2:= v9 @kind object;
  #L3d8832.  v4:= v10;
  #L3d8834.  call temp:= `obtainStyledAttributes`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.obtainStyledAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L3d883a.  v9:= temp @kind object;
  #L3d883c.  v10:= `@@com.google.android.material.R$styleable.ChipGroup_chipSpacing` @type ^`int`;
  #L3d8840.  call temp:= `getDimensionPixelOffset`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L3d8846.  v10:= temp;
  #L3d8848.  v1:= `@@com.google.android.material.R$styleable.ChipGroup_chipSpacingHorizontal` @type ^`int`;
  #L3d884c.  call temp:= `getDimensionPixelOffset`(v9, v1, v10) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L3d8852.  v1:= temp;
  #L3d8854.  call `setChipSpacingHorizontal`(v7, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L3d885a.  v1:= `@@com.google.android.material.R$styleable.ChipGroup_chipSpacingVertical` @type ^`int`;
  #L3d885e.  call temp:= `getDimensionPixelOffset`(v9, v1, v10) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L3d8864.  v10:= temp;
  #L3d8866.  call `setChipSpacingVertical`(v7, v10) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L3d886c.  v10:= `@@com.google.android.material.R$styleable.ChipGroup_singleLine` @type ^`int`;
  #L3d8870.  call temp:= `getBoolean`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3d8876.  v10:= temp;
  #L3d8878.  call `setSingleLine`(v7, v10) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @kind virtual;
  #L3d887e.  v10:= `@@com.google.android.material.R$styleable.ChipGroup_singleSelection` @type ^`int`;
  #L3d8882.  call temp:= `getBoolean`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3d8888.  v10:= temp;
  #L3d888a.  call `setSingleSelection`(v7, v10) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @kind virtual;
  #L3d8890.  v10:= `@@com.google.android.material.R$styleable.ChipGroup_selectionRequired` @type ^`int`;
  #L3d8894.  call temp:= `getBoolean`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3d889a.  v10:= temp;
  #L3d889c.  call `setSelectionRequired`(v7, v10) @signature `Lcom/google/android/material/chip/ChipGroup;.setSelectionRequired:(Z)V` @kind virtual;
  #L3d88a2.  v10:= `@@com.google.android.material.R$styleable.ChipGroup_checkedChip` @type ^`int`;
  #L3d88a6.  call temp:= `getResourceId`(v9, v10, v8) @signature `Landroid/content/res/TypedArray;.getResourceId:(II)I` @kind virtual;
  #L3d88ac.  v10:= temp;
  #L3d88ae.  if v10 == v8 then goto L3d88b6;
  #L3d88b2.  v7.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int` := v10;
  #L3d88b6.  call `recycle`(v9) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L3d88bc.  v8:= v7.`com.google.android.material.chip.ChipGroup.passThroughListener` @type ^`com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` @kind object;
  #L3d88c0.  call `setOnHierarchyChangeListener`(v7, v8) @signature `Landroid/view/ViewGroup;.setOnHierarchyChangeListener:(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V` @kind super;
  #L3d88c6.  v8:= 1I;
  #L3d88c8.  call `setImportantForAccessibility`(v7, v8) @signature `Landroidx/core/view/ViewCompat;.setImportantForAccessibility:(Landroid/view/View;I)V` @kind static;
  #L3d88ce.  return @kind void;
}
procedure `com.google.android.material.chip.ChipGroup$CheckedStateTracker` `access$1000`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.access$1000:(Lcom/google/android/material/chip/ChipGroup;)Lcom/google/android/material/chip/ChipGroup$CheckedStateTracker;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3d85fc.  v0:= v0.`com.google.android.material.chip.ChipGroup.checkedStateTracker` @type ^`com.google.android.material.chip.ChipGroup$CheckedStateTracker` @kind object;
  #L3d8600.  return v0 @kind object;
}
procedure `boolean` `access$300`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.access$300:(Lcom/google/android/material/chip/ChipGroup;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3d853c.  v0:= v0.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` @kind boolean;
  #L3d8540.  return v0;
}
procedure `boolean` `access$400`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.access$400:(Lcom/google/android/material/chip/ChipGroup;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3d8554.  v0:= v0.`com.google.android.material.chip.ChipGroup.selectionRequired` @type ^`boolean` @kind boolean;
  #L3d8558.  return v0;
}
procedure `void` `access$500`(`com.google.android.material.chip.ChipGroup` v0 @kind object, `int` v1 , `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.access$500:(Lcom/google/android/material/chip/ChipGroup;IZ)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3d88e0.  call `setCheckedStateForView`(v0, v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L3d88e6.  return @kind void;
}
procedure `void` `access$600`(`com.google.android.material.chip.ChipGroup` v0 @kind object, `int` v1 , `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.access$600:(Lcom/google/android/material/chip/ChipGroup;IZ)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3d88f8.  call `setCheckedId`(v0, v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(IZ)V` @kind direct;
  #L3d88fe.  return @kind void;
}
procedure `int` `access$700`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.access$700:(Lcom/google/android/material/chip/ChipGroup;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3d8614.  v0:= v0.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L3d8618.  return v0;
}
procedure `boolean` `access$800`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.access$800:(Lcom/google/android/material/chip/ChipGroup;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3d856c.  v0:= v0.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L3d8570.  return v0;
}
procedure `void` `access$900`(`com.google.android.material.chip.ChipGroup` v0 @kind object, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipGroup;.access$900:(Lcom/google/android/material/chip/ChipGroup;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3d8910.  call `setCheckedId`(v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L3d8916.  return @kind void;
}
procedure `int` `getChipCount`(`com.google.android.material.chip.ChipGroup` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipCount:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d8650.  v0:= 0I;
  #L3d8652.  v1:= 0I;
  #L3d8654.  call temp:= `getChildCount`(v3) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L3d865a.  v2:= temp;
  #L3d865c.  if v0 >= v2 then goto L3d867a;
  #L3d8660.  call temp:= `getChildAt`(v3, v0) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L3d8666.  v2:= temp @kind object;
  #L3d8668.  v2:= instanceof @variable v2 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L3d866c.  if v2 == 0 then goto L3d8674;
  #L3d8670.  v1:= v1 + 1;
  #L3d8674.  v0:= v0 + 1;
  #L3d8678.  goto L3d8654;
  #L3d867a.  return v1;
}
procedure `void` `setCheckedId`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d8ab4.  v0:= 1I;
  #L3d8ab6.  call `setCheckedId`(v1, v2, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(IZ)V` @kind direct;
  #L3d8abc.  return @kind void;
}
procedure `void` `setCheckedId`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `int` v3 , `boolean` v4 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(IZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d8ad0.  v2.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int` := v3;
  #L3d8ad4.  v0:= v2.`com.google.android.material.chip.ChipGroup.onCheckedChangeListener` @type ^`com.google.android.material.chip.ChipGroup$OnCheckedChangeListener` @kind object;
  #L3d8ad8.  if v0 == 0 then goto L3d8aee;
  #L3d8adc.  v1:= v2.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L3d8ae0.  if v1 == 0 then goto L3d8aee;
  #L3d8ae4.  if v4 == 0 then goto L3d8aee;
  #L3d8ae8.  call `onCheckedChanged`(v0, v2, v3) @signature `Lcom/google/android/material/chip/ChipGroup$OnCheckedChangeListener;.onCheckedChanged:(Lcom/google/android/material/chip/ChipGroup;I)V` @kind interface;
  #L3d8aee.  return @kind void;
}
procedure `void` `setCheckedStateForView`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d8b00.  call temp:= `findViewById`(v1, v2) @signature `Landroid/view/ViewGroup;.findViewById:(I)Landroid/view/View;` @kind virtual;
  #L3d8b06.  v2:= temp @kind object;
  #L3d8b08.  v0:= instanceof @variable v2 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L3d8b0c.  if v0 == 0 then goto L3d8b26;
  #L3d8b10.  v0:= 1I;
  #L3d8b12.  v1.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v0 @kind boolean;
  #L3d8b16.  v2:= (`com.google.android.material.chip.Chip`) v2 @kind object;
  #L3d8b1a.  call `setChecked`(v2, v3) @signature `Lcom/google/android/material/chip/Chip;.setChecked:(Z)V` @kind virtual;
  #L3d8b20.  v2:= 0I;
  #L3d8b22.  v1.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v2 @kind boolean;
  #L3d8b26.  return @kind void;
}
procedure `void` `addView`(`com.google.android.material.chip.ChipGroup` v3 @kind this, `android.view.View` v4 @kind object, `int` v5 , `android.view.ViewGroup$LayoutParams` v6 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.addView:(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d8928.  v0:= instanceof @variable v4 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L3d892c.  if v0 == 0 then goto L3d896a;
  #L3d8930.  v0:= v4 @kind object;
  #L3d8932.  v0:= (`com.google.android.material.chip.Chip`) v0 @kind object;
  #L3d8936.  call temp:= `isChecked`(v0) @signature `Landroid/widget/CheckBox;.isChecked:()Z` @kind virtual;
  #L3d893c.  v1:= temp;
  #L3d893e.  if v1 == 0 then goto L3d896a;
  #L3d8942.  v1:= v3.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L3d8946.  v2:= -1I;
  #L3d8948.  if v1 == v2 then goto L3d895c;
  #L3d894c.  v2:= v3.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L3d8950.  if v2 == 0 then goto L3d895c;
  #L3d8954.  v2:= 0I;
  #L3d8956.  call `setCheckedStateForView`(v3, v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L3d895c.  call temp:= `getId`(v0) @signature `Landroid/widget/CheckBox;.getId:()I` @kind virtual;
  #L3d8962.  v0:= temp;
  #L3d8964.  call `setCheckedId`(v3, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L3d896a.  call `addView`(v3, v4, v5, v6) @signature `Landroid/view/ViewGroup;.addView:(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V` @kind super;
  #L3d8970.  return @kind void;
}
procedure `void` `check`(`com.google.android.material.chip.ChipGroup` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/material/chip/ChipGroup;.check:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d8984.  v0:= v3.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L3d8988.  if v4 != v0 then goto L3d898e;
  #L3d898c.  return @kind void;
  #L3d898e.  v1:= -1I;
  #L3d8990.  if v0 == v1 then goto L3d89a4;
  #L3d8994.  v2:= v3.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L3d8998.  if v2 == 0 then goto L3d89a4;
  #L3d899c.  v2:= 0I;
  #L3d899e.  call `setCheckedStateForView`(v3, v0, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L3d89a4.  if v4 == v1 then goto L3d89b0;
  #L3d89a8.  v0:= 1I;
  #L3d89aa.  call `setCheckedStateForView`(v3, v4, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L3d89b0.  call `setCheckedId`(v3, v4) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L3d89b6.  return @kind void;
}
procedure `boolean` `checkLayoutParams`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$LayoutParams` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.checkLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3d8584.  call temp:= `checkLayoutParams`(v1, v2) @signature `Landroid/view/ViewGroup;.checkLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Z` @kind super;
  #L3d858a.  v0:= temp;
  #L3d858c.  if v0 == 0 then goto L3d859c;
  #L3d8590.  v2:= instanceof @variable v2 @type ^`com.google.android.material.chip.ChipGroup$LayoutParams` @kind boolean;
  #L3d8594.  if v2 == 0 then goto L3d859c;
  #L3d8598.  v2:= 1I;
  #L3d859a.  goto L3d859e;
  #L3d859c.  v2:= 0I;
  #L3d859e.  return v2;
}
procedure `void` `clearCheck`(`com.google.android.material.chip.ChipGroup` v4 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.clearCheck:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d89c8.  v0:= 1I;
  #L3d89ca.  v4.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v0 @kind boolean;
  #L3d89ce.  v0:= 0I;
  #L3d89d0.  v1:= 0I;
  #L3d89d2.  call temp:= `getChildCount`(v4) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L3d89d8.  v2:= temp;
  #L3d89da.  if v1 >= v2 then goto L3d89fe;
  #L3d89de.  call temp:= `getChildAt`(v4, v1) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L3d89e4.  v2:= temp @kind object;
  #L3d89e6.  v3:= instanceof @variable v2 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L3d89ea.  if v3 == 0 then goto L3d89f8;
  #L3d89ee.  v2:= (`com.google.android.material.chip.Chip`) v2 @kind object;
  #L3d89f2.  call `setChecked`(v2, v0) @signature `Lcom/google/android/material/chip/Chip;.setChecked:(Z)V` @kind virtual;
  #L3d89f8.  v1:= v1 + 1;
  #L3d89fc.  goto L3d89d2;
  #L3d89fe.  v4.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v0 @kind boolean;
  #L3d8a02.  v0:= -1I;
  #L3d8a04.  call `setCheckedId`(v4, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L3d8a0a.  return @kind void;
}
procedure `android.view.ViewGroup$LayoutParams` `generateDefaultLayoutParams`(`com.google.android.material.chip.ChipGroup` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.generateDefaultLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3d84dc.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L3d84e0.  v1:= -2I;
  #L3d84e2.  call `<init>`(v0, v1, v1) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(II)V` @kind direct;
  #L3d84e8.  return v0 @kind object;
}
procedure `android.view.ViewGroup$LayoutParams` `generateLayoutParams`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.generateLayoutParams:(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d84fc.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L3d8500.  call temp:= `getContext`(v2) @signature `Landroid/view/ViewGroup;.getContext:()Landroid/content/Context;` @kind virtual;
  #L3d8506.  v1:= temp @kind object;
  #L3d8508.  call `<init>`(v0, v1, v3) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L3d850e.  return v0 @kind object;
}
procedure `android.view.ViewGroup$LayoutParams` `generateLayoutParams`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$LayoutParams` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.generateLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3d8520.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L3d8524.  call `<init>`(v0, v2) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(Landroid/view/ViewGroup$LayoutParams;)V` @kind direct;
  #L3d852a.  return v0 @kind object;
}
procedure `int` `getCheckedChipId`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getCheckedChipId:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d862c.  v0:= v1.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L3d8630.  if v0 == 0 then goto L3d863a;
  #L3d8634.  v0:= v1.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L3d8638.  goto L3d863c;
  #L3d863a.  v0:= -1I;
  #L3d863c.  return v0;
}
procedure `java.util.List` `getCheckedChipIds`(`com.google.android.material.chip.ChipGroup` v4 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getCheckedChipIds:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d8718.  v0:= new `java.util.ArrayList`;
  #L3d871c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3d8722.  v1:= 0I;
  #L3d8724.  call temp:= `getChildCount`(v4) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L3d872a.  v2:= temp;
  #L3d872c.  if v1 >= v2 then goto L3d8778;
  #L3d8730.  call temp:= `getChildAt`(v4, v1) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L3d8736.  v2:= temp @kind object;
  #L3d8738.  v3:= instanceof @variable v2 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L3d873c.  if v3 == 0 then goto L3d8772;
  #L3d8740.  v3:= v2 @kind object;
  #L3d8742.  v3:= (`com.google.android.material.chip.Chip`) v3 @kind object;
  #L3d8746.  call temp:= `isChecked`(v3) @signature `Landroid/widget/CheckBox;.isChecked:()Z` @kind virtual;
  #L3d874c.  v3:= temp;
  #L3d874e.  if v3 == 0 then goto L3d8772;
  #L3d8752.  call temp:= `getId`(v2) @signature `Landroid/view/View;.getId:()I` @kind virtual;
  #L3d8758.  v2:= temp;
  #L3d875a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d8760.  v2:= temp @kind object;
  #L3d8762.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d8768.  v2:= v4.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L3d876c.  if v2 == 0 then goto L3d8772;
  #L3d8770.  return v0 @kind object;
  #L3d8772.  v1:= v1 + 1;
  #L3d8776.  goto L3d8724;
  #L3d8778.  return v0 @kind object;
}
procedure `int` `getChipSpacingHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipSpacingHorizontal:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d868c.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @type ^`int`;
  #L3d8690.  return v0;
}
procedure `int` `getChipSpacingVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipSpacingVertical:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d86a4.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingVertical` @type ^`int`;
  #L3d86a8.  return v0;
}
procedure `int` `getIndexOfChip`(`com.google.android.material.chip.ChipGroup` v4 @kind this, `android.view.View` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.getIndexOfChip:(Landroid/view/View;)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d86bc.  v0:= instanceof @variable v5 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L3d86c0.  v1:= -1I;
  #L3d86c2.  if v0 != 0 then goto L3d86c8;
  #L3d86c6.  return v1;
  #L3d86c8.  v0:= 0I;
  #L3d86ca.  v2:= 0I;
  #L3d86cc.  call temp:= `getChildCount`(v4) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L3d86d2.  v3:= temp;
  #L3d86d4.  if v0 >= v3 then goto L3d8704;
  #L3d86d8.  call temp:= `getChildAt`(v4, v0) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L3d86de.  v3:= temp @kind object;
  #L3d86e0.  v3:= instanceof @variable v3 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L3d86e4.  if v3 == 0 then goto L3d86fe;
  #L3d86e8.  call temp:= `getChildAt`(v4, v0) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L3d86ee.  v3:= temp @kind object;
  #L3d86f0.  v3:= (`com.google.android.material.chip.Chip`) v3 @kind object;
  #L3d86f4.  if v3 != v5 then goto L3d86fa;
  #L3d86f8.  return v2;
  #L3d86fa.  v2:= v2 + 1;
  #L3d86fe.  v0:= v0 + 1;
  #L3d8702.  goto L3d86cc;
  #L3d8704.  return v1;
}
procedure `boolean` `isSelectionRequired`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.isSelectionRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d85b0.  v0:= v1.`com.google.android.material.chip.ChipGroup.selectionRequired` @type ^`boolean` @kind boolean;
  #L3d85b4.  return v0;
}
procedure `boolean` `isSingleLine`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleLine:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d85c8.  call temp:= `isSingleLine`(v1) @signature `Lcom/google/android/material/internal/FlowLayout;.isSingleLine:()Z` @kind super;
  #L3d85ce.  v0:= temp;
  #L3d85d0.  return v0;
}
procedure `boolean` `isSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleSelection:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d85e4.  v0:= v1.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L3d85e8.  return v0;
}
procedure `void` `onFinishInflate`(`com.google.android.material.chip.ChipGroup` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.onFinishInflate:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3d8a1c.  call `onFinishInflate`(v2) @signature `Landroid/view/ViewGroup;.onFinishInflate:()V` @kind super;
  #L3d8a22.  v0:= v2.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L3d8a26.  v1:= -1I;
  #L3d8a28.  if v0 == v1 then goto L3d8a3e;
  #L3d8a2c.  v1:= 1I;
  #L3d8a2e.  call `setCheckedStateForView`(v2, v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L3d8a34.  v0:= v2.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L3d8a38.  call `setCheckedId`(v2, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L3d8a3e.  return @kind void;
}
procedure `void` `onInitializeAccessibilityNodeInfo`(`com.google.android.material.chip.ChipGroup` v4 @kind this, `android.view.accessibility.AccessibilityNodeInfo` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.onInitializeAccessibilityNodeInfo:(Landroid/view/accessibility/AccessibilityNodeInfo;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d8a50.  call `onInitializeAccessibilityNodeInfo`(v4, v5) @signature `Landroid/view/ViewGroup;.onInitializeAccessibilityNodeInfo:(Landroid/view/accessibility/AccessibilityNodeInfo;)V` @kind super;
  #L3d8a56.  call temp:= `wrap`(v5) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;.wrap:(Landroid/view/accessibility/AccessibilityNodeInfo;)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;` @kind static;
  #L3d8a5c.  v5:= temp @kind object;
  #L3d8a5e.  call temp:= `isSingleLine`(v4) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleLine:()Z` @kind virtual;
  #L3d8a64.  v0:= temp;
  #L3d8a66.  if v0 == 0 then goto L3d8a74;
  #L3d8a6a.  call temp:= `getChipCount`(v4) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipCount:()I` @kind direct;
  #L3d8a70.  v0:= temp;
  #L3d8a72.  goto L3d8a76;
  #L3d8a74.  v0:= -1I;
  #L3d8a76.  call temp:= `getRowCount`(v4) @signature `Lcom/google/android/material/internal/FlowLayout;.getRowCount:()I` @kind virtual;
  #L3d8a7c.  v1:= temp;
  #L3d8a7e.  v2:= 0I;
  #L3d8a80.  call temp:= `isSingleSelection`(v4) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleSelection:()Z` @kind virtual;
  #L3d8a86.  v3:= temp;
  #L3d8a88.  if v3 == 0 then goto L3d8a90;
  #L3d8a8c.  v3:= 1I;
  #L3d8a8e.  goto L3d8a92;
  #L3d8a90.  v3:= 2I;
  #L3d8a92.  call temp:= `obtain`(v1, v0, v2, v3) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$CollectionInfoCompat;.obtain:(IIZI)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$CollectionInfoCompat;` @kind static;
  #L3d8a98.  v0:= temp @kind object;
  #L3d8a9a.  call `setCollectionInfo`(v5, v0) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;.setCollectionInfo:(Ljava/lang/Object;)V` @kind virtual;
  #L3d8aa0.  return @kind void;
}
procedure `void` `setChipSpacing`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacing:(I)V` @AccessFlag PUBLIC {
    temp;

  #L3d8b38.  call `setChipSpacingHorizontal`(v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L3d8b3e.  call `setChipSpacingVertical`(v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L3d8b44.  return @kind void;
}
procedure `void` `setChipSpacingHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8b58.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @type ^`int`;
  #L3d8b5c.  if v0 == v2 then goto L3d8b70;
  #L3d8b60.  v1.`com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @type ^`int` := v2;
  #L3d8b64.  call `setItemSpacing`(v1, v2) @signature `Lcom/google/android/material/internal/FlowLayout;.setItemSpacing:(I)V` @kind virtual;
  #L3d8b6a.  call `requestLayout`(v1) @signature `Landroid/view/ViewGroup;.requestLayout:()V` @kind virtual;
  #L3d8b70.  return @kind void;
}
procedure `void` `setChipSpacingHorizontalResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontalResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8b84.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d8b8a.  v0:= temp @kind object;
  #L3d8b8c.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L3d8b92.  v2:= temp;
  #L3d8b94.  call `setChipSpacingHorizontal`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L3d8b9a.  return @kind void;
}
procedure `void` `setChipSpacingResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8bac.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d8bb2.  v0:= temp @kind object;
  #L3d8bb4.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L3d8bba.  v2:= temp;
  #L3d8bbc.  call `setChipSpacing`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacing:(I)V` @kind virtual;
  #L3d8bc2.  return @kind void;
}
procedure `void` `setChipSpacingVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8bd4.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingVertical` @type ^`int`;
  #L3d8bd8.  if v0 == v2 then goto L3d8bec;
  #L3d8bdc.  v1.`com.google.android.material.chip.ChipGroup.chipSpacingVertical` @type ^`int` := v2;
  #L3d8be0.  call `setLineSpacing`(v1, v2) @signature `Lcom/google/android/material/internal/FlowLayout;.setLineSpacing:(I)V` @kind virtual;
  #L3d8be6.  call `requestLayout`(v1) @signature `Landroid/view/ViewGroup;.requestLayout:()V` @kind virtual;
  #L3d8bec.  return @kind void;
}
procedure `void` `setChipSpacingVerticalResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVerticalResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8c00.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d8c06.  v0:= temp @kind object;
  #L3d8c08.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L3d8c0e.  v2:= temp;
  #L3d8c10.  call `setChipSpacingVertical`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L3d8c16.  return @kind void;
}
procedure `void` `setDividerDrawableHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setDividerDrawableHorizontal:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8c28.  v2:= new `java.lang.UnsupportedOperationException`;
  #L3d8c2c.  v0:= "Changing divider drawables have no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L3d8c30.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d8c36.  throw v2;
}
procedure `void` `setDividerDrawableVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setDividerDrawableVertical:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8c48.  v2:= new `java.lang.UnsupportedOperationException`;
  #L3d8c4c.  v0:= "Changing divider drawables have no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L3d8c50.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d8c56.  throw v2;
}
procedure `void` `setFlexWrap`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setFlexWrap:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8c68.  v2:= new `java.lang.UnsupportedOperationException`;
  #L3d8c6c.  v0:= "Changing flex wrap not allowed. ChipGroup exposes a singleLine attribute instead." @kind object;
  #L3d8c70.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d8c76.  throw v2;
}
procedure `void` `setOnCheckedChangeListener`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `com.google.android.material.chip.ChipGroup$OnCheckedChangeListener` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setOnCheckedChangeListener:(Lcom/google/android/material/chip/ChipGroup$OnCheckedChangeListener;)V` @AccessFlag PUBLIC {
    temp;

  #L3d8c88.  v0.`com.google.android.material.chip.ChipGroup.onCheckedChangeListener` @type ^`com.google.android.material.chip.ChipGroup$OnCheckedChangeListener` := v1 @kind object;
  #L3d8c8c.  return @kind void;
}
procedure `void` `setOnHierarchyChangeListener`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$OnHierarchyChangeListener` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setOnHierarchyChangeListener:(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8ca0.  v0:= v1.`com.google.android.material.chip.ChipGroup.passThroughListener` @type ^`com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` @kind object;
  #L3d8ca4.  call temp:= `access$202`(v0, v2) @signature `Lcom/google/android/material/chip/ChipGroup$PassThroughHierarchyChangeListener;.access$202:(Lcom/google/android/material/chip/ChipGroup$PassThroughHierarchyChangeListener;Landroid/view/ViewGroup$OnHierarchyChangeListener;)Landroid/view/ViewGroup$OnHierarchyChangeListener;` @kind static;
  #L3d8caa.  return @kind void;
}
procedure `void` `setSelectionRequired`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSelectionRequired:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3d8cbc.  v0.`com.google.android.material.chip.ChipGroup.selectionRequired` @type ^`boolean` := v1 @kind boolean;
  #L3d8cc0.  return @kind void;
}
procedure `void` `setShowDividerHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setShowDividerHorizontal:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8cd4.  v2:= new `java.lang.UnsupportedOperationException`;
  #L3d8cd8.  v0:= "Changing divider modes has no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L3d8cdc.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d8ce2.  throw v2;
}
procedure `void` `setShowDividerVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setShowDividerVertical:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8cf4.  v2:= new `java.lang.UnsupportedOperationException`;
  #L3d8cf8.  v0:= "Changing divider modes has no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L3d8cfc.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d8d02.  throw v2;
}
procedure `void` `setSingleLine`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8d2c.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d8d32.  v0:= temp @kind object;
  #L3d8d34.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L3d8d3a.  v2:= temp;
  #L3d8d3c.  call `setSingleLine`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @kind virtual;
  #L3d8d42.  return @kind void;
}
procedure `void` `setSingleLine`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3d8d14.  call `setSingleLine`(v0, v1) @signature `Lcom/google/android/material/internal/FlowLayout;.setSingleLine:(Z)V` @kind super;
  #L3d8d1a.  return @kind void;
}
procedure `void` `setSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8d78.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d8d7e.  v0:= temp @kind object;
  #L3d8d80.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L3d8d86.  v2:= temp;
  #L3d8d88.  call `setSingleSelection`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @kind virtual;
  #L3d8d8e.  return @kind void;
}
procedure `void` `setSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8d54.  v0:= v1.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L3d8d58.  if v0 == v2 then goto L3d8d66;
  #L3d8d5c.  v1.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` := v2 @kind boolean;
  #L3d8d60.  call `clearCheck`(v1) @signature `Lcom/google/android/material/chip/ChipGroup;.clearCheck:()V` @kind virtual;
  #L3d8d66.  return @kind void;
}
