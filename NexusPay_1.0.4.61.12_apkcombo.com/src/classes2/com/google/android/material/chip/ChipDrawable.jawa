record `com.google.android.material.chip.ChipDrawable` @kind class @AccessFlag PUBLIC extends `com.google.android.material.shape.MaterialShapeDrawable` @kind class, `androidx.core.graphics.drawable.TintAwareDrawable` @kind interface, `android.graphics.drawable.Drawable$Callback` @kind interface, `com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate` @kind interface {
  `int` `com.google.android.material.chip.ChipDrawable.alpha` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.checkable` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.checkedIcon` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.checkedIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.checkedIconVisible` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipCornerRadius` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipEndPadding` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.chipIcon` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipIconSize` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.chipIconVisible` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipMinHeight` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.chip.ChipDrawable.chipPaint` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.chip.ChipDrawable.chipStartPadding` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipStrokeColor` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.closeIcon` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.closeIconRipple` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconSize` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @AccessFlag PRIVATE;
  `int`[] `com.google.android.material.chip.ChipDrawable.closeIconStateSet` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.closeIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.closeIconVisible` @AccessFlag PRIVATE;
  `android.graphics.ColorFilter` `com.google.android.material.chip.ChipDrawable.colorFilter` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.compatRippleColor` @AccessFlag PRIVATE;
  `android.content.Context` `com.google.android.material.chip.ChipDrawable.context` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.currentChecked` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentTextColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentTint` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.chip.ChipDrawable.debugPaint` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.WeakReference` `com.google.android.material.chip.ChipDrawable.delegate` @AccessFlag PRIVATE;
  `android.graphics.Paint$FontMetrics` `com.google.android.material.chip.ChipDrawable.fontMetrics` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.hasChipIconTint` @AccessFlag PRIVATE;
  `com.google.android.material.animation.MotionSpec` `com.google.android.material.chip.ChipDrawable.hideMotionSpec` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.iconEndPadding` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.iconStartPadding` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.maxWidth` @AccessFlag PRIVATE;
  `android.graphics.PointF` `com.google.android.material.chip.ChipDrawable.pointF` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.chip.ChipDrawable.rectF` @AccessFlag PRIVATE_FINAL;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.rippleColor` @AccessFlag PRIVATE;
  `android.graphics.Path` `com.google.android.material.chip.ChipDrawable.shapePath` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.shouldDrawText` @AccessFlag PRIVATE;
  `com.google.android.material.animation.MotionSpec` `com.google.android.material.chip.ChipDrawable.showMotionSpec` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `com.google.android.material.chip.ChipDrawable.text` @AccessFlag PRIVATE;
  `com.google.android.material.internal.TextDrawableHelper` `com.google.android.material.chip.ChipDrawable.textDrawableHelper` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.chip.ChipDrawable.textEndPadding` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.textStartPadding` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.tint` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `com.google.android.material.chip.ChipDrawable.tintFilter` @AccessFlag PRIVATE;
  `android.graphics.PorterDuff$Mode` `com.google.android.material.chip.ChipDrawable.tintMode` @AccessFlag PRIVATE;
  `android.text.TextUtils$TruncateAt` `com.google.android.material.chip.ChipDrawable.truncateAt` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.useCompatRipple` @AccessFlag PRIVATE;
}
global `boolean` `@@com.google.android.material.chip.ChipDrawable.DEBUG` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.chip.ChipDrawable.MAX_CHIP_ICON_HEIGHT` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.chip.ChipDrawable.NAMESPACE_APP` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.drawable.ShapeDrawable` `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/chip/ChipDrawable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3d61dc.  v0:= 1I;
  #L3d61de.  v0:= new `int`[v0];
  #L3d61e2.  v1:= 0I;
  #L3d61e4.  v2:= 16842910I;
  #L3d61ea.  v0[v1]:= v2;
  #L3d61ee.  `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @type ^`int`[] := v0 @kind object;
  #L3d61f2.  v0:= new `android.graphics.drawable.ShapeDrawable`;
  #L3d61f6.  v1:= new `android.graphics.drawable.shapes.OvalShape`;
  #L3d61fa.  call `<init>`(v1) @signature `Landroid/graphics/drawable/shapes/OvalShape;.<init>:()V` @kind direct;
  #L3d6200.  call `<init>`(v0, v1) @signature `Landroid/graphics/drawable/ShapeDrawable;.<init>:(Landroid/graphics/drawable/shapes/Shape;)V` @kind direct;
  #L3d6206.  `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` := v0 @kind object;
  #L3d620a.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3d621c.  call `<init>`(v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @kind direct;
  #L3d6222.  v3:= -1.0F;
  #L3d6226.  v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float` := v3;
  #L3d622a.  v3:= new `android.graphics.Paint`;
  #L3d622e.  v4:= 1I;
  #L3d6230.  call `<init>`(v3, v4) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L3d6236.  v1.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` := v3 @kind object;
  #L3d623a.  v3:= new `android.graphics.Paint$FontMetrics`;
  #L3d623e.  call `<init>`(v3) @signature `Landroid/graphics/Paint$FontMetrics;.<init>:()V` @kind direct;
  #L3d6244.  v1.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` := v3 @kind object;
  #L3d6248.  v3:= new `android.graphics.RectF`;
  #L3d624c.  call `<init>`(v3) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L3d6252.  v1.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` := v3 @kind object;
  #L3d6256.  v3:= new `android.graphics.PointF`;
  #L3d625a.  call `<init>`(v3) @signature `Landroid/graphics/PointF;.<init>:()V` @kind direct;
  #L3d6260.  v1.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` := v3 @kind object;
  #L3d6264.  v3:= new `android.graphics.Path`;
  #L3d6268.  call `<init>`(v3) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L3d626e.  v1.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` := v3 @kind object;
  #L3d6272.  v3:= 255I;
  #L3d6276.  v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int` := v3;
  #L3d627a.  v3:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3d627e.  v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v3 @kind object;
  #L3d6282.  v3:= new `java.lang.ref.WeakReference`;
  #L3d6286.  v5:= 0I;
  #L3d6288.  call `<init>`(v3, v5) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3d628e.  v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` := v3 @kind object;
  #L3d6292.  call `initializeElevationOverlay`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.initializeElevationOverlay:(Landroid/content/Context;)V` @kind virtual;
  #L3d6298.  v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` := v2 @kind object;
  #L3d629c.  v3:= new `com.google.android.material.internal.TextDrawableHelper`;
  #L3d62a0.  call `<init>`(v3, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.<init>:(Lcom/google/android/material/internal/TextDrawableHelper$TextDrawableDelegate;)V` @kind direct;
  #L3d62a6.  v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` := v3 @kind object;
  #L3d62aa.  v0:= "" @kind object;
  #L3d62ae.  v1.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` := v0 @kind object;
  #L3d62b2.  call temp:= `getTextPaint`(v3) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L3d62b8.  v3:= temp @kind object;
  #L3d62ba.  call temp:= `getResources`(v2) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d62c0.  v2:= temp @kind object;
  #L3d62c2.  call temp:= `getDisplayMetrics`(v2) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L3d62c8.  v2:= temp @kind object;
  #L3d62ca.  v2:= v2.`android.util.DisplayMetrics.density` @type ^`float`;
  #L3d62ce.  v3.`android.text.TextPaint.density` @type ^`float` := v2;
  #L3d62d2.  v1.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` := v5 @kind object;
  #L3d62d6.  if v5 == 0 then goto L3d62e4;
  #L3d62da.  v2:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L3d62de.  call `setStyle`(v5, v2) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L3d62e4.  v2:= `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @type ^`int`[] @kind object;
  #L3d62e8.  call temp:= `setState`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L3d62ee.  v2:= `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @type ^`int`[] @kind object;
  #L3d62f2.  call temp:= `setCloseIconState`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconState:([I)Z` @kind virtual;
  #L3d62f8.  v1.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` := v4 @kind boolean;
  #L3d62fc.  v2:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L3d6300.  if v2 == 0 then goto L3d6310;
  #L3d6304.  v2:= `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` @kind object;
  #L3d6308.  v3:= -1I;
  #L3d630a.  call `setTint`(v2, v3) @signature `Landroid/graphics/drawable/ShapeDrawable;.setTint:(I)V` @kind virtual;
  #L3d6310.  return @kind void;
}
procedure `void` `applyChildDrawable`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d6324.  if v3 != 0 then goto L3d632a;
  #L3d6328.  return @kind void;
  #L3d632a.  call `setCallback`(v3, v2) @signature `Landroid/graphics/drawable/Drawable;.setCallback:(Landroid/graphics/drawable/Drawable$Callback;)V` @kind virtual;
  #L3d6330.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L3d6336.  v0:= temp;
  #L3d6338.  call temp:= `setLayoutDirection`(v3, v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L3d633e.  call temp:= `getLevel`(v2) @signature `Landroid/graphics/drawable/Drawable;.getLevel:()I` @kind virtual;
  #L3d6344.  v0:= temp;
  #L3d6346.  call temp:= `setLevel`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L3d634c.  call temp:= `isVisible`(v2) @signature `Landroid/graphics/drawable/Drawable;.isVisible:()Z` @kind virtual;
  #L3d6352.  v0:= temp;
  #L3d6354.  v1:= 0I;
  #L3d6356.  call temp:= `setVisible`(v3, v0, v1) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L3d635c.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d6360.  if v3 != v0 then goto L3d638a;
  #L3d6364.  call temp:= `isStateful`(v3) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L3d636a.  v0:= temp;
  #L3d636c.  if v0 == 0 then goto L3d637e;
  #L3d6370.  call temp:= `getCloseIconState`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @kind virtual;
  #L3d6376.  v0:= temp @kind object;
  #L3d6378.  call temp:= `setState`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L3d637e.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d6382.  call `setTintList`(v3, v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L3d6388.  return @kind void;
  #L3d638a.  call temp:= `isStateful`(v3) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L3d6390.  v0:= temp;
  #L3d6392.  if v0 == 0 then goto L3d63a4;
  #L3d6396.  call temp:= `getState`(v2) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3d639c.  v0:= temp @kind object;
  #L3d639e.  call temp:= `setState`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L3d63a4.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d63a8.  if v3 != v0 then goto L3d63be;
  #L3d63ac.  v3:= v2.`com.google.android.material.chip.ChipDrawable.hasChipIconTint` @type ^`boolean` @kind boolean;
  #L3d63b0.  if v3 == 0 then goto L3d63be;
  #L3d63b4.  v3:= v2.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d63b8.  call `setTintList`(v0, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L3d63be.  return @kind void;
}
procedure `void` `calculateChipIconBounds`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Rect` v4 @kind object, `android.graphics.RectF` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d63d0.  call `setEmpty`(v5) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L3d63d6.  call temp:= `showsChipIcon`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L3d63dc.  v0:= temp;
  #L3d63de.  if v0 != 0 then goto L3d63ee;
  #L3d63e2.  call temp:= `showsCheckedIcon`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L3d63e8.  v0:= temp;
  #L3d63ea.  if v0 == 0 then goto L3d6456;
  #L3d63ee.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L3d63f2.  v1:= v3.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L3d63f6.  v0:= v0 + v1 @kind float;
  #L3d63f8.  call temp:= `getCurrentChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconWidth:()F` @kind direct;
  #L3d63fe.  v1:= temp;
  #L3d6400.  call temp:= `getLayoutDirection`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L3d6406.  v2:= temp;
  #L3d6408.  if v2 != 0 then goto L3d6420;
  #L3d640c.  v2:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L3d6410.  v2:= (`float`) v2 @kind i2f;
  #L3d6412.  v2:= v2 + v0 @kind float;
  #L3d6414.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L3d6418.  v2:= v2 + v1 @kind float;
  #L3d641a.  v5.`android.graphics.RectF.right` @type ^`float` := v2;
  #L3d641e.  goto L3d6432;
  #L3d6420.  v2:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L3d6424.  v2:= (`float`) v2 @kind i2f;
  #L3d6426.  v2:= v2 - v0 @kind float;
  #L3d6428.  v5.`android.graphics.RectF.right` @type ^`float` := v2;
  #L3d642c.  v2:= v2 - v1 @kind float;
  #L3d642e.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L3d6432.  call temp:= `getCurrentChipIconHeight`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconHeight:()F` @kind direct;
  #L3d6438.  v0:= temp;
  #L3d643a.  call temp:= `exactCenterY`(v4) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L3d6440.  v4:= temp;
  #L3d6442.  v1:= 2.0F;
  #L3d6446.  v1:= v0 / v1 @kind float;
  #L3d644a.  v4:= v4 - v1 @kind float;
  #L3d644c.  v5.`android.graphics.RectF.top` @type ^`float` := v4;
  #L3d6450.  v4:= v4 + v0 @kind float;
  #L3d6452.  v5.`android.graphics.RectF.bottom` @type ^`float` := v4;
  #L3d6456.  return @kind void;
}
procedure `void` `calculateChipTouchBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.RectF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d6468.  call `set`(v4, v3) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L3d646e.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d6474.  v0:= temp;
  #L3d6476.  if v0 == 0 then goto L3d64bc;
  #L3d647a.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L3d647e.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L3d6482.  v0:= v0 + v1 @kind float;
  #L3d6484.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L3d6488.  v0:= v0 + v1 @kind float;
  #L3d648a.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L3d648e.  v0:= v0 + v1 @kind float;
  #L3d6490.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L3d6494.  v0:= v0 + v1 @kind float;
  #L3d6496.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L3d649c.  v1:= temp;
  #L3d649e.  if v1 != 0 then goto L3d64b0;
  #L3d64a2.  v3:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L3d64a6.  v3:= (`float`) v3 @kind i2f;
  #L3d64a8.  v3:= v3 - v0 @kind float;
  #L3d64aa.  v4.`android.graphics.RectF.right` @type ^`float` := v3;
  #L3d64ae.  goto L3d64bc;
  #L3d64b0.  v3:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L3d64b4.  v3:= (`float`) v3 @kind i2f;
  #L3d64b6.  v3:= v3 + v0 @kind float;
  #L3d64b8.  v4.`android.graphics.RectF.left` @type ^`float` := v3;
  #L3d64bc.  return @kind void;
}
procedure `void` `calculateCloseIconBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.RectF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d64d0.  call `setEmpty`(v4) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L3d64d6.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d64dc.  v0:= temp;
  #L3d64de.  if v0 == 0 then goto L3d6546;
  #L3d64e2.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L3d64e6.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L3d64ea.  v0:= v0 + v1 @kind float;
  #L3d64ec.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L3d64f2.  v1:= temp;
  #L3d64f4.  if v1 != 0 then goto L3d6510;
  #L3d64f8.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L3d64fc.  v1:= (`float`) v1 @kind i2f;
  #L3d64fe.  v1:= v1 - v0 @kind float;
  #L3d6500.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L3d6504.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L3d6508.  v1:= v1 - v0 @kind float;
  #L3d650a.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L3d650e.  goto L3d6526;
  #L3d6510.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L3d6514.  v1:= (`float`) v1 @kind i2f;
  #L3d6516.  v1:= v1 + v0 @kind float;
  #L3d6518.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L3d651c.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L3d6520.  v1:= v1 + v0 @kind float;
  #L3d6522.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L3d6526.  call temp:= `exactCenterY`(v3) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L3d652c.  v3:= temp;
  #L3d652e.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L3d6532.  v1:= 2.0F;
  #L3d6536.  v1:= v0 / v1 @kind float;
  #L3d653a.  v3:= v3 - v1 @kind float;
  #L3d653c.  v4.`android.graphics.RectF.top` @type ^`float` := v3;
  #L3d6540.  v3:= v3 + v0 @kind float;
  #L3d6542.  v4.`android.graphics.RectF.bottom` @type ^`float` := v3;
  #L3d6546.  return @kind void;
}
procedure `void` `calculateCloseIconTouchBounds`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Rect` v4 @kind object, `android.graphics.RectF` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d6558.  call `setEmpty`(v5) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L3d655e.  call temp:= `showsCloseIcon`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d6564.  v0:= temp;
  #L3d6566.  if v0 == 0 then goto L3d65ca;
  #L3d656a.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L3d656e.  v1:= v3.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L3d6572.  v0:= v0 + v1 @kind float;
  #L3d6574.  v1:= v3.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L3d6578.  v0:= v0 + v1 @kind float;
  #L3d657a.  v1:= v3.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L3d657e.  v0:= v0 + v1 @kind float;
  #L3d6580.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L3d6584.  v0:= v0 + v1 @kind float;
  #L3d6586.  call temp:= `getLayoutDirection`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L3d658c.  v1:= temp;
  #L3d658e.  if v1 != 0 then goto L3d65a4;
  #L3d6592.  v1:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L3d6596.  v1:= (`float`) v1 @kind i2f;
  #L3d6598.  v5.`android.graphics.RectF.right` @type ^`float` := v1;
  #L3d659c.  v1:= v1 - v0 @kind float;
  #L3d659e.  v5.`android.graphics.RectF.left` @type ^`float` := v1;
  #L3d65a2.  goto L3d65b6;
  #L3d65a4.  v1:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L3d65a8.  v2:= (`float`) v1 @kind i2f;
  #L3d65aa.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L3d65ae.  v1:= (`float`) v1 @kind i2f;
  #L3d65b0.  v1:= v1 + v0 @kind float;
  #L3d65b2.  v5.`android.graphics.RectF.right` @type ^`float` := v1;
  #L3d65b6.  v0:= v4.`android.graphics.Rect.top` @type ^`int`;
  #L3d65ba.  v0:= (`float`) v0 @kind i2f;
  #L3d65bc.  v5.`android.graphics.RectF.top` @type ^`float` := v0;
  #L3d65c0.  v4:= v4.`android.graphics.Rect.bottom` @type ^`int`;
  #L3d65c4.  v4:= (`float`) v4 @kind i2f;
  #L3d65c6.  v5.`android.graphics.RectF.bottom` @type ^`float` := v4;
  #L3d65ca.  return @kind void;
}
procedure `void` `calculateTextBounds`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Rect` v4 @kind object, `android.graphics.RectF` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d65dc.  call `setEmpty`(v5) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L3d65e2.  v0:= v3.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L3d65e6.  if v0 == 0 then goto L3d6664;
  #L3d65ea.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L3d65ee.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d65f4.  v1:= temp;
  #L3d65f6.  v0:= v0 + v1 @kind float;
  #L3d65f8.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L3d65fc.  v0:= v0 + v1 @kind float;
  #L3d65fe.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L3d6602.  call temp:= `calculateCloseIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L3d6608.  v2:= temp;
  #L3d660a.  v1:= v1 + v2 @kind float;
  #L3d660c.  v2:= v3.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L3d6610.  v1:= v1 + v2 @kind float;
  #L3d6612.  call temp:= `getLayoutDirection`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L3d6618.  v2:= temp;
  #L3d661a.  if v2 != 0 then goto L3d6638;
  #L3d661e.  v2:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L3d6622.  v2:= (`float`) v2 @kind i2f;
  #L3d6624.  v2:= v2 + v0 @kind float;
  #L3d6626.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L3d662a.  v0:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L3d662e.  v0:= (`float`) v0 @kind i2f;
  #L3d6630.  v0:= v0 - v1 @kind float;
  #L3d6632.  v5.`android.graphics.RectF.right` @type ^`float` := v0;
  #L3d6636.  goto L3d6650;
  #L3d6638.  v2:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L3d663c.  v2:= (`float`) v2 @kind i2f;
  #L3d663e.  v2:= v2 + v1 @kind float;
  #L3d6640.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L3d6644.  v1:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L3d6648.  v1:= (`float`) v1 @kind i2f;
  #L3d664a.  v1:= v1 - v0 @kind float;
  #L3d664c.  v5.`android.graphics.RectF.right` @type ^`float` := v1;
  #L3d6650.  v0:= v4.`android.graphics.Rect.top` @type ^`int`;
  #L3d6654.  v0:= (`float`) v0 @kind i2f;
  #L3d6656.  v5.`android.graphics.RectF.top` @type ^`float` := v0;
  #L3d665a.  v4:= v4.`android.graphics.Rect.bottom` @type ^`int`;
  #L3d665e.  v4:= (`float`) v4 @kind i2f;
  #L3d6660.  v5.`android.graphics.RectF.bottom` @type ^`float` := v4;
  #L3d6664.  return @kind void;
}
procedure `float` `calculateTextCenterFromBaseline`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextCenterFromBaseline:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d5e84.  v0:= v2.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d5e88.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L3d5e8e.  v0:= temp @kind object;
  #L3d5e90.  v1:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L3d5e94.  call temp:= `getFontMetrics`(v0, v1) @signature `Landroid/text/TextPaint;.getFontMetrics:(Landroid/graphics/Paint$FontMetrics;)F` @kind virtual;
  #L3d5e9a.  v0:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L3d5e9e.  v1:= v0.`android.graphics.Paint$FontMetrics.descent` @type ^`float`;
  #L3d5ea2.  v0:= v0.`android.graphics.Paint$FontMetrics.ascent` @type ^`float`;
  #L3d5ea6.  v1:= v1 + v0 @kind float;
  #L3d5ea8.  v0:= 2.0F;
  #L3d5eac.  v1:= v1 / v0 @kind float;
  #L3d5eae.  return v1;
}
procedure `boolean` `canShowCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d5594.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L3d5598.  if v0 == 0 then goto L3d55b0;
  #L3d559c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d55a0.  if v0 == 0 then goto L3d55b0;
  #L3d55a4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L3d55a8.  if v0 == 0 then goto L3d55b0;
  #L3d55ac.  v0:= 1I;
  #L3d55ae.  goto L3d55b2;
  #L3d55b0.  v0:= 0I;
  #L3d55b2.  return v0;
}
procedure `com.google.android.material.chip.ChipDrawable` `createFromAttributes`(`android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/chip/ChipDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d5d8c.  v0:= new `com.google.android.material.chip.ChipDrawable`;
  #L3d5d90.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @kind direct;
  #L3d5d96.  call `loadFromAttributes`(v0, v2, v3, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.loadFromAttributes:(Landroid/util/AttributeSet;II)V` @kind direct;
  #L3d5d9c.  return v0 @kind object;
}
procedure `com.google.android.material.chip.ChipDrawable` `createFromResource`(`android.content.Context` v2 @kind object, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/chip/ChipDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3d5db0.  v0:= "chip" @kind object;
  #L3d5db4.  call temp:= `parseDrawableXml`(v2, v3, v0) @signature `Lcom/google/android/material/drawable/DrawableUtils;.parseDrawableXml:(Landroid/content/Context;ILjava/lang/CharSequence;)Landroid/util/AttributeSet;` @kind static;
  #L3d5dba.  v3:= temp @kind object;
  #L3d5dbc.  call temp:= `getStyleAttribute`(v3) @signature `Landroid/util/AttributeSet;.getStyleAttribute:()I` @kind interface;
  #L3d5dc2.  v0:= temp;
  #L3d5dc4.  if v0 != 0 then goto L3d5dcc;
  #L3d5dc8.  v0:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Chip_Entry` @type ^`int`;
  #L3d5dcc.  v1:= `@@com.google.android.material.R$attr.chipStandaloneStyle` @type ^`int`;
  #L3d5dd0.  call temp:= `createFromAttributes`(v2, v3, v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/chip/ChipDrawable;` @kind static;
  #L3d5dd6.  v2:= temp @kind object;
  #L3d5dd8.  return v2 @kind object;
}
procedure `void` `drawCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `android.graphics.Rect` v7 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCheckedIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d6738.  call temp:= `showsCheckedIcon`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L3d673e.  v0:= temp;
  #L3d6740.  if v0 == 0 then goto L3d679c;
  #L3d6744.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6748.  call `calculateChipIconBounds`(v5, v7, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L3d674e.  v7:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6752.  v0:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L3d6756.  v7:= v7.`android.graphics.RectF.top` @type ^`float`;
  #L3d675a.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3d6760.  v1:= v5.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d6764.  v2:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6768.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3d676e.  v2:= temp;
  #L3d6770.  v2:= (`int`) v2 @kind f2i;
  #L3d6772.  v3:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6776.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3d677c.  v3:= temp;
  #L3d677e.  v3:= (`int`) v3 @kind f2i;
  #L3d6780.  v4:= 0I;
  #L3d6782.  call `setBounds`(v1, v4, v4, v2, v3) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L3d6788.  v1:= v5.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d678c.  call `draw`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3d6792.  v0:= -v0 @kind float;
  #L3d6794.  v7:= -v7 @kind float;
  #L3d6796.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3d679c.  return @kind void;
}
procedure `void` `drawChipBackground`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Canvas` v4 @kind object, `android.graphics.Rect` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipBackground:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d67b0.  v0:= v3.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L3d67b4.  if v0 != 0 then goto L3d680e;
  #L3d67b8.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d67bc.  v1:= v3.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L3d67c0.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3d67c6.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d67ca.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L3d67ce.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L3d67d4.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d67d8.  call temp:= `getTintColorFilter`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @kind direct;
  #L3d67de.  v1:= temp @kind object;
  #L3d67e0.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L3d67e6.  v0:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d67ea.  call `set`(v0, v5) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L3d67f0.  v5:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d67f4.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L3d67fa.  v0:= temp;
  #L3d67fc.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L3d6802.  v1:= temp;
  #L3d6804.  v2:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6808.  call `drawRoundRect`(v4, v5, v0, v1, v2) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L3d680e.  return @kind void;
}
procedure `void` `drawChipIcon`(`com.google.android.material.chip.ChipDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `android.graphics.Rect` v7 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d6820.  call temp:= `showsChipIcon`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L3d6826.  v0:= temp;
  #L3d6828.  if v0 == 0 then goto L3d6884;
  #L3d682c.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6830.  call `calculateChipIconBounds`(v5, v7, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L3d6836.  v7:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d683a.  v0:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L3d683e.  v7:= v7.`android.graphics.RectF.top` @type ^`float`;
  #L3d6842.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3d6848.  v1:= v5.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d684c.  v2:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6850.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3d6856.  v2:= temp;
  #L3d6858.  v2:= (`int`) v2 @kind f2i;
  #L3d685a.  v3:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d685e.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3d6864.  v3:= temp;
  #L3d6866.  v3:= (`int`) v3 @kind f2i;
  #L3d6868.  v4:= 0I;
  #L3d686a.  call `setBounds`(v1, v4, v4, v2, v3) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L3d6870.  v1:= v5.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d6874.  call `draw`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3d687a.  v0:= -v0 @kind float;
  #L3d687c.  v7:= -v7 @kind float;
  #L3d687e.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3d6884.  return @kind void;
}
procedure `void` `drawChipStroke`(`com.google.android.material.chip.ChipDrawable` v7 @kind this, `android.graphics.Canvas` v8 @kind object, `android.graphics.Rect` v9 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipStroke:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d6898.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L3d689c.  v1:= 0I;
  #L3d689e.  v0:= fcmpl(v0, v1);
  #L3d68a2.  if v0 <= 0 then goto L3d693e;
  #L3d68a6.  v0:= v7.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L3d68aa.  if v0 != 0 then goto L3d693e;
  #L3d68ae.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d68b2.  v1:= v7.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L3d68b6.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3d68bc.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d68c0.  v1:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L3d68c4.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L3d68ca.  v0:= v7.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L3d68ce.  if v0 != 0 then goto L3d68e4;
  #L3d68d2.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d68d6.  call temp:= `getTintColorFilter`(v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @kind direct;
  #L3d68dc.  v1:= temp @kind object;
  #L3d68de.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L3d68e4.  v0:= v7.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d68e8.  v1:= v9.`android.graphics.Rect.left` @type ^`int`;
  #L3d68ec.  v1:= (`float`) v1 @kind i2f;
  #L3d68ee.  v2:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L3d68f2.  v3:= 2.0F;
  #L3d68f6.  v4:= v2 / v3 @kind float;
  #L3d68fa.  v1:= v1 + v4 @kind float;
  #L3d68fc.  v4:= v9.`android.graphics.Rect.top` @type ^`int`;
  #L3d6900.  v4:= (`float`) v4 @kind i2f;
  #L3d6902.  v5:= v2 / v3 @kind float;
  #L3d6906.  v4:= v4 + v5 @kind float;
  #L3d6908.  v5:= v9.`android.graphics.Rect.right` @type ^`int`;
  #L3d690c.  v5:= (`float`) v5 @kind i2f;
  #L3d690e.  v6:= v2 / v3 @kind float;
  #L3d6912.  v5:= v5 - v6 @kind float;
  #L3d6914.  v9:= v9.`android.graphics.Rect.bottom` @type ^`int`;
  #L3d6918.  v9:= (`float`) v9 @kind i2f;
  #L3d691a.  v2:= v2 / v3 @kind float;
  #L3d691c.  v9:= v9 - v2 @kind float;
  #L3d691e.  call `set`(v0, v1, v4, v5, v9) @signature `Landroid/graphics/RectF;.set:(FFFF)V` @kind virtual;
  #L3d6924.  v9:= v7.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L3d6928.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L3d692c.  v0:= v0 / v3 @kind float;
  #L3d692e.  v9:= v9 - v0 @kind float;
  #L3d6930.  v0:= v7.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6934.  v1:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6938.  call `drawRoundRect`(v8, v0, v9, v9, v1) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L3d693e.  return @kind void;
}
procedure `void` `drawChipSurface`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Canvas` v4 @kind object, `android.graphics.Rect` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipSurface:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d6950.  v0:= v3.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L3d6954.  if v0 != 0 then goto L3d699c;
  #L3d6958.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d695c.  v1:= v3.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L3d6960.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3d6966.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d696a.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L3d696e.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L3d6974.  v0:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6978.  call `set`(v0, v5) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L3d697e.  v5:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6982.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L3d6988.  v0:= temp;
  #L3d698a.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L3d6990.  v1:= temp;
  #L3d6992.  v2:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6996.  call `drawRoundRect`(v4, v5, v0, v1, v2) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L3d699c.  return @kind void;
}
procedure `void` `drawCloseIcon`(`com.google.android.material.chip.ChipDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `android.graphics.Rect` v7 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCloseIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d69b0.  call temp:= `showsCloseIcon`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d69b6.  v0:= temp;
  #L3d69b8.  if v0 == 0 then goto L3d6a48;
  #L3d69bc.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d69c0.  call `calculateCloseIconBounds`(v5, v7, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L3d69c6.  v7:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d69ca.  v0:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L3d69ce.  v7:= v7.`android.graphics.RectF.top` @type ^`float`;
  #L3d69d2.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3d69d8.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d69dc.  v2:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d69e0.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3d69e6.  v2:= temp;
  #L3d69e8.  v2:= (`int`) v2 @kind f2i;
  #L3d69ea.  v3:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d69ee.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3d69f4.  v3:= temp;
  #L3d69f6.  v3:= (`int`) v3 @kind f2i;
  #L3d69f8.  v4:= 0I;
  #L3d69fa.  call `setBounds`(v1, v4, v4, v2, v3) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L3d6a00.  v1:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L3d6a04.  if v1 == 0 then goto L3d6a34;
  #L3d6a08.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d6a0c.  v2:= v5.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d6a10.  call temp:= `getBounds`(v2) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L3d6a16.  v2:= temp @kind object;
  #L3d6a18.  call `setBounds`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(Landroid/graphics/Rect;)V` @kind virtual;
  #L3d6a1e.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d6a22.  call `jumpToCurrentState`(v1) @signature `Landroid/graphics/drawable/Drawable;.jumpToCurrentState:()V` @kind virtual;
  #L3d6a28.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d6a2c.  call `draw`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3d6a32.  goto L3d6a3e;
  #L3d6a34.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d6a38.  call `draw`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3d6a3e.  v0:= -v0 @kind float;
  #L3d6a40.  v7:= -v7 @kind float;
  #L3d6a42.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3d6a48.  return @kind void;
}
procedure `void` `drawCompatRipple`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Canvas` v4 @kind object, `android.graphics.Rect` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCompatRipple:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d6a5c.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6a60.  v1:= v3.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L3d6a64.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3d6a6a.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6a6e.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L3d6a72.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L3d6a78.  v0:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6a7c.  call `set`(v0, v5) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L3d6a82.  v0:= v3.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L3d6a86.  if v0 != 0 then goto L3d6aaa;
  #L3d6a8a.  v5:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6a8e.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L3d6a94.  v0:= temp;
  #L3d6a96.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L3d6a9c.  v1:= temp;
  #L3d6a9e.  v2:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6aa2.  call `drawRoundRect`(v4, v5, v0, v1, v2) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L3d6aa8.  goto L3d6ad4;
  #L3d6aaa.  v0:= new `android.graphics.RectF`;
  #L3d6aae.  call `<init>`(v0, v5) @signature `Landroid/graphics/RectF;.<init>:(Landroid/graphics/Rect;)V` @kind direct;
  #L3d6ab4.  v5:= v3.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` @kind object;
  #L3d6ab8.  call `calculatePathForSize`(v3, v0, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L3d6abe.  v5:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6ac2.  v0:= v3.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` @kind object;
  #L3d6ac6.  call temp:= `getBoundsAsRectF`(v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L3d6acc.  v1:= temp @kind object;
  #L3d6ace.  call `drawShape`(v3, v4, v5, v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Landroid/graphics/RectF;)V` @kind super;
  #L3d6ad4.  return @kind void;
}
procedure `void` `drawDebug`(`com.google.android.material.chip.ChipDrawable` v9 @kind this, `android.graphics.Canvas` v10 @kind object, `android.graphics.Rect` v11 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawDebug:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3d6ae8.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6aec.  if v0 == 0 then goto L3d6bf2;
  #L3d6af0.  v1:= -16777216I;
  #L3d6af4.  v2:= 127I;
  #L3d6af8.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L3d6afe.  v1:= temp;
  #L3d6b00.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3d6b06.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6b0a.  call `drawRect`(v10, v11, v0) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/Rect;Landroid/graphics/Paint;)V` @kind virtual;
  #L3d6b10.  call temp:= `showsChipIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L3d6b16.  v0:= temp;
  #L3d6b18.  if v0 != 0 then goto L3d6b28;
  #L3d6b1c.  call temp:= `showsCheckedIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L3d6b22.  v0:= temp;
  #L3d6b24.  if v0 == 0 then goto L3d6b40;
  #L3d6b28.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6b2c.  call `calculateChipIconBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L3d6b32.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6b36.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6b3a.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L3d6b40.  v0:= v9.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L3d6b44.  if v0 == 0 then goto L3d6b70;
  #L3d6b48.  v0:= v11.`android.graphics.Rect.left` @type ^`int`;
  #L3d6b4c.  v4:= (`float`) v0 @kind i2f;
  #L3d6b4e.  call temp:= `exactCenterY`(v11) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L3d6b54.  v5:= temp;
  #L3d6b56.  v0:= v11.`android.graphics.Rect.right` @type ^`int`;
  #L3d6b5a.  v6:= (`float`) v0 @kind i2f;
  #L3d6b5c.  call temp:= `exactCenterY`(v11) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L3d6b62.  v7:= temp;
  #L3d6b64.  v8:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6b68.  v3:= v10 @kind object;
  #L3d6b6a.  call `drawLine`(v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L3d6b70.  call temp:= `showsCloseIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d6b76.  v0:= temp;
  #L3d6b78.  if v0 == 0 then goto L3d6b94;
  #L3d6b7c.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6b80.  call `calculateCloseIconBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L3d6b86.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6b8a.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6b8e.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L3d6b94.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6b98.  v1:= -65536I;
  #L3d6b9c.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L3d6ba2.  v1:= temp;
  #L3d6ba4.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3d6baa.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6bae.  call `calculateChipTouchBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L3d6bb4.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6bb8.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6bbc.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L3d6bc2.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6bc6.  v1:= -16711936I;
  #L3d6bcc.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L3d6bd2.  v1:= temp;
  #L3d6bd4.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3d6bda.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6bde.  call `calculateCloseIconTouchBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L3d6be4.  v11:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6be8.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d6bec.  call `drawRect`(v10, v11, v0) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L3d6bf2.  return @kind void;
}
procedure `void` `drawText`(`com.google.android.material.chip.ChipDrawable` v9 @kind this, `android.graphics.Canvas` v10 @kind object, `android.graphics.Rect` v11 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawText:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3d6c04.  v0:= v9.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L3d6c08.  if v0 == 0 then goto L3d6d2e;
  #L3d6c0c.  v0:= v9.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L3d6c10.  call temp:= `calculateTextOriginAndAlignment`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextOriginAndAlignment:(Landroid/graphics/Rect;Landroid/graphics/PointF;)Landroid/graphics/Paint$Align;` @kind virtual;
  #L3d6c16.  v0:= temp @kind object;
  #L3d6c18.  v1:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6c1c.  call `calculateTextBounds`(v9, v11, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L3d6c22.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d6c26.  call temp:= `getTextAppearance`(v11) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L3d6c2c.  v11:= temp @kind object;
  #L3d6c2e.  if v11 == 0 then goto L3d6c58;
  #L3d6c32.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d6c36.  call temp:= `getTextPaint`(v11) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L3d6c3c.  v11:= temp @kind object;
  #L3d6c3e.  call temp:= `getState`(v9) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3d6c44.  v1:= temp @kind object;
  #L3d6c46.  v11.`android.text.TextPaint.drawableState` @type ^`int`[] := v1 @kind object;
  #L3d6c4a.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d6c4e.  v1:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d6c52.  call `updateTextPaintDrawState`(v11, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.updateTextPaintDrawState:(Landroid/content/Context;)V` @kind virtual;
  #L3d6c58.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d6c5c.  call temp:= `getTextPaint`(v11) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L3d6c62.  v11:= temp @kind object;
  #L3d6c64.  call `setTextAlign`(v11, v0) @signature `Landroid/text/TextPaint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L3d6c6a.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d6c6e.  call temp:= `getText`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L3d6c74.  v0:= temp @kind object;
  #L3d6c76.  call temp:= `toString`(v0) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L3d6c7c.  v0:= temp @kind object;
  #L3d6c7e.  call temp:= `getTextWidth`(v11, v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextWidth:(Ljava/lang/String;)F` @kind virtual;
  #L3d6c84.  v11:= temp;
  #L3d6c86.  call temp:= `round`(v11) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3d6c8c.  v11:= temp;
  #L3d6c8e.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6c92.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3d6c98.  v0:= temp;
  #L3d6c9a.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3d6ca0.  v0:= temp;
  #L3d6ca2.  v1:= 0I;
  #L3d6ca4.  if v11 <= v0 then goto L3d6cac;
  #L3d6ca8.  v11:= 1I;
  #L3d6caa.  goto L3d6cae;
  #L3d6cac.  v11:= 0I;
  #L3d6cae.  if v11 == 0 then goto L3d6cc4;
  #L3d6cb2.  call temp:= `save`(v10) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L3d6cb8.  v1:= temp;
  #L3d6cba.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6cbe.  call temp:= `clipRect`(v10, v0) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L3d6cc4.  v0:= v9.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L3d6cc8.  if v11 == 0 then goto L3d6cf8;
  #L3d6ccc.  v2:= v9.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L3d6cd0.  if v2 == 0 then goto L3d6cf8;
  #L3d6cd4.  v2:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d6cd8.  call temp:= `getTextPaint`(v2) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L3d6cde.  v2:= temp @kind object;
  #L3d6ce0.  v3:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L3d6ce4.  call temp:= `width`(v3) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3d6cea.  v3:= temp;
  #L3d6cec.  v4:= v9.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L3d6cf0.  call temp:= `ellipsize`(v0, v2, v3, v4) @signature `Landroid/text/TextUtils;.ellipsize:(Ljava/lang/CharSequence;Landroid/text/TextPaint;FLandroid/text/TextUtils$TruncateAt;)Ljava/lang/CharSequence;` @kind static;
  #L3d6cf6.  v0:= temp @kind object;
  #L3d6cf8.  v3:= v0 @kind object;
  #L3d6cfa.  v4:= 0I;
  #L3d6cfc.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d6d02.  v5:= temp;
  #L3d6d04.  v0:= v9.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L3d6d08.  v6:= v0.`android.graphics.PointF.x` @type ^`float`;
  #L3d6d0c.  v7:= v0.`android.graphics.PointF.y` @type ^`float`;
  #L3d6d10.  v0:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d6d14.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L3d6d1a.  v8:= temp @kind object;
  #L3d6d1c.  v2:= v10 @kind object;
  #L3d6d1e.  call `drawText`(v2, v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/CharSequence;IIFFLandroid/graphics/Paint;)V` @kind virtual;
  #L3d6d24.  if v11 == 0 then goto L3d6d2e;
  #L3d6d28.  call `restoreToCount`(v10, v1) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L3d6d2e.  return @kind void;
}
procedure `float` `getCurrentChipIconHeight`(`com.google.android.material.chip.ChipDrawable` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconHeight:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d5fa8.  v0:= v3.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L3d5fac.  if v0 == 0 then goto L3d5fb6;
  #L3d5fb0.  v0:= v3.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5fb4.  goto L3d5fba;
  #L3d5fb6.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5fba.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L3d5fbe.  v2:= 0I;
  #L3d5fc0.  v1:= fcmpg(v1, v2);
  #L3d5fc4.  if v1 > 0 then goto L3d6008;
  #L3d5fc8.  if v0 == 0 then goto L3d6008;
  #L3d5fcc.  v1:= v3.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d5fd0.  v2:= 24I;
  #L3d5fd4.  call temp:= `dpToPx`(v1, v2) @signature `Lcom/google/android/material/internal/ViewUtils;.dpToPx:(Landroid/content/Context;I)F` @kind static;
  #L3d5fda.  v1:= temp;
  #L3d5fdc.  v1:= (`double`) v1 @kind f2d;
  #L3d5fde.  call temp:= `ceil`(v1) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L3d5fe4.  v1:= temp @kind wide;
  #L3d5fe6.  v1:= (`float`) v1 @kind d2f;
  #L3d5fe8.  call temp:= `getIntrinsicHeight`(v0) @signature `Landroid/graphics/drawable/Drawable;.getIntrinsicHeight:()I` @kind virtual;
  #L3d5fee.  v2:= temp;
  #L3d5ff0.  v2:= (`float`) v2 @kind i2f;
  #L3d5ff2.  v2:= fcmpg(v2, v1);
  #L3d5ff6.  if v2 > 0 then goto L3d6006;
  #L3d5ffa.  call temp:= `getIntrinsicHeight`(v0) @signature `Landroid/graphics/drawable/Drawable;.getIntrinsicHeight:()I` @kind virtual;
  #L3d6000.  v0:= temp;
  #L3d6002.  v0:= (`float`) v0 @kind i2f;
  #L3d6004.  return v0;
  #L3d6006.  return v1;
  #L3d6008.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L3d600c.  return v0;
}
procedure `float` `getCurrentChipIconWidth`(`com.google.android.material.chip.ChipDrawable` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconWidth:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d6020.  v0:= v3.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L3d6024.  if v0 == 0 then goto L3d602e;
  #L3d6028.  v0:= v3.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d602c.  goto L3d6032;
  #L3d602e.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d6032.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L3d6036.  v2:= 0I;
  #L3d6038.  v1:= fcmpg(v1, v2);
  #L3d603c.  if v1 > 0 then goto L3d6050;
  #L3d6040.  if v0 == 0 then goto L3d6050;
  #L3d6044.  call temp:= `getIntrinsicWidth`(v0) @signature `Landroid/graphics/drawable/Drawable;.getIntrinsicWidth:()I` @kind virtual;
  #L3d604a.  v0:= temp;
  #L3d604c.  v0:= (`float`) v0 @kind i2f;
  #L3d604e.  return v0;
  #L3d6050.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L3d6054.  return v0;
}
procedure `android.graphics.ColorFilter` `getTintColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d5474.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L3d5478.  if v0 == 0 then goto L3d547e;
  #L3d547c.  goto L3d5482;
  #L3d547e.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L3d5482.  return v0 @kind object;
}
procedure `boolean` `hasState`(`int`[] v4 @kind object, `int` v5 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.hasState:([II)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d55dc.  v0:= 0I;
  #L3d55de.  if v4 != 0 then goto L3d55e4;
  #L3d55e2.  return v0;
  #L3d55e4.  v1:= length @variable v4;
  #L3d55e6.  v2:= 0I;
  #L3d55e8.  if v2 >= v1 then goto L3d55fe;
  #L3d55ec.  v3:= v4[v2];
  #L3d55f0.  if v3 != v5 then goto L3d55f8;
  #L3d55f4.  v4:= 1I;
  #L3d55f6.  return v4;
  #L3d55f8.  v2:= v2 + 1;
  #L3d55fc.  goto L3d55e8;
  #L3d55fe.  return v0;
}
procedure `boolean` `isStateful`(`android.content.res.ColorStateList` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3d57b4.  if v0 == 0 then goto L3d57c8;
  #L3d57b8.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L3d57be.  v0:= temp;
  #L3d57c0.  if v0 == 0 then goto L3d57c8;
  #L3d57c4.  v0:= 1I;
  #L3d57c6.  goto L3d57ca;
  #L3d57c8.  v0:= 0I;
  #L3d57ca.  return v0;
}
procedure `boolean` `isStateful`(`android.graphics.drawable.Drawable` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3d57dc.  if v0 == 0 then goto L3d57f0;
  #L3d57e0.  call temp:= `isStateful`(v0) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L3d57e6.  v0:= temp;
  #L3d57e8.  if v0 == 0 then goto L3d57f0;
  #L3d57ec.  v0:= 1I;
  #L3d57ee.  goto L3d57f2;
  #L3d57f0.  v0:= 0I;
  #L3d57f2.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.resources.TextAppearance` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Lcom/google/android/material/resources/TextAppearance;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3d5804.  if v0 == 0 then goto L3d5820;
  #L3d5808.  v0:= v0.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d580c.  if v0 == 0 then goto L3d5820;
  #L3d5810.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L3d5816.  v0:= temp;
  #L3d5818.  if v0 == 0 then goto L3d5820;
  #L3d581c.  v0:= 1I;
  #L3d581e.  goto L3d5822;
  #L3d5820.  v0:= 0I;
  #L3d5822.  return v0;
}
procedure `void` `loadFromAttributes`(`com.google.android.material.chip.ChipDrawable` v7 @kind this, `android.util.AttributeSet` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.loadFromAttributes:(Landroid/util/AttributeSet;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d6e1c.  v0:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d6e20.  v2:= `@@com.google.android.material.R$styleable.Chip` @type ^`int`[] @kind object;
  #L3d6e24.  v6:= 0I;
  #L3d6e26.  v5:= new `int`[v6];
  #L3d6e2a.  v1:= v8 @kind object;
  #L3d6e2c.  v3:= v9;
  #L3d6e2e.  v4:= v10;
  #L3d6e30.  call temp:= `obtainStyledAttributes`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.obtainStyledAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L3d6e36.  v9:= temp @kind object;
  #L3d6e38.  v10:= `@@com.google.android.material.R$styleable.Chip_shapeAppearance` @type ^`int`;
  #L3d6e3c.  call temp:= `hasValue`(v9, v10) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L3d6e42.  v10:= temp;
  #L3d6e44.  v7.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` := v10 @kind boolean;
  #L3d6e48.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d6e4c.  v0:= `@@com.google.android.material.R$styleable.Chip_chipSurfaceColor` @type ^`int`;
  #L3d6e50.  call temp:= `getColorStateList`(v10, v9, v0) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L3d6e56.  v10:= temp @kind object;
  #L3d6e58.  call `setChipSurfaceColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipSurfaceColor:(Landroid/content/res/ColorStateList;)V` @kind direct;
  #L3d6e5e.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d6e62.  v0:= `@@com.google.android.material.R$styleable.Chip_chipBackgroundColor` @type ^`int`;
  #L3d6e66.  call temp:= `getColorStateList`(v10, v9, v0) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L3d6e6c.  v10:= temp @kind object;
  #L3d6e6e.  call `setChipBackgroundColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3d6e74.  v10:= `@@com.google.android.material.R$styleable.Chip_chipMinHeight` @type ^`int`;
  #L3d6e78.  v0:= 0I;
  #L3d6e7a.  call temp:= `getDimension`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3d6e80.  v10:= temp;
  #L3d6e82.  call `setChipMinHeight`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @kind virtual;
  #L3d6e88.  v10:= `@@com.google.android.material.R$styleable.Chip_chipCornerRadius` @type ^`int`;
  #L3d6e8c.  call temp:= `hasValue`(v9, v10) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L3d6e92.  v10:= temp;
  #L3d6e94.  if v10 == 0 then goto L3d6eaa;
  #L3d6e98.  v10:= `@@com.google.android.material.R$styleable.Chip_chipCornerRadius` @type ^`int`;
  #L3d6e9c.  call temp:= `getDimension`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3d6ea2.  v10:= temp;
  #L3d6ea4.  call `setChipCornerRadius`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @kind virtual;
  #L3d6eaa.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d6eae.  v1:= `@@com.google.android.material.R$styleable.Chip_chipStrokeColor` @type ^`int`;
  #L3d6eb2.  call temp:= `getColorStateList`(v10, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L3d6eb8.  v10:= temp @kind object;
  #L3d6eba.  call `setChipStrokeColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3d6ec0.  v10:= `@@com.google.android.material.R$styleable.Chip_chipStrokeWidth` @type ^`int`;
  #L3d6ec4.  call temp:= `getDimension`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3d6eca.  v10:= temp;
  #L3d6ecc.  call `setChipStrokeWidth`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @kind virtual;
  #L3d6ed2.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d6ed6.  v1:= `@@com.google.android.material.R$styleable.Chip_rippleColor` @type ^`int`;
  #L3d6eda.  call temp:= `getColorStateList`(v10, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L3d6ee0.  v10:= temp @kind object;
  #L3d6ee2.  call `setRippleColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3d6ee8.  v10:= `@@com.google.android.material.R$styleable.Chip_android_text` @type ^`int`;
  #L3d6eec.  call temp:= `getText`(v9, v10) @signature `Landroid/content/res/TypedArray;.getText:(I)Ljava/lang/CharSequence;` @kind virtual;
  #L3d6ef2.  v10:= temp @kind object;
  #L3d6ef4.  call `setText`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L3d6efa.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d6efe.  v1:= `@@com.google.android.material.R$styleable.Chip_android_textAppearance` @type ^`int`;
  #L3d6f02.  call temp:= `getTextAppearance`(v10, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getTextAppearance:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/resources/TextAppearance;` @kind static;
  #L3d6f08.  v10:= temp @kind object;
  #L3d6f0a.  v1:= `@@com.google.android.material.R$styleable.Chip_android_textSize` @type ^`int`;
  #L3d6f0e.  v2:= v10.`com.google.android.material.resources.TextAppearance.textSize` @type ^`float`;
  #L3d6f12.  call temp:= `getDimension`(v9, v1, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3d6f18.  v1:= temp;
  #L3d6f1a.  v10.`com.google.android.material.resources.TextAppearance.textSize` @type ^`float` := v1;
  #L3d6f1e.  call `setTextAppearance`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind virtual;
  #L3d6f24.  v10:= `@@com.google.android.material.R$styleable.Chip_android_ellipsize` @type ^`int`;
  #L3d6f28.  call temp:= `getInt`(v9, v10, v6) @signature `Landroid/content/res/TypedArray;.getInt:(II)I` @kind virtual;
  #L3d6f2e.  v10:= temp;
  #L3d6f30.  v1:= 1I;
  #L3d6f32.  if v10 == v1 then goto L3d6f5c;
  #L3d6f36.  v1:= 2I;
  #L3d6f38.  if v10 == v1 then goto L3d6f50;
  #L3d6f3c.  v1:= 3I;
  #L3d6f3e.  if v10 == v1 then goto L3d6f44;
  #L3d6f42.  goto L3d6f66;
  #L3d6f44.  v10:= `@@android.text.TextUtils$TruncateAt.END` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L3d6f48.  call `setEllipsize`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L3d6f4e.  goto L3d6f66;
  #L3d6f50.  v10:= `@@android.text.TextUtils$TruncateAt.MIDDLE` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L3d6f54.  call `setEllipsize`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L3d6f5a.  goto L3d6f66;
  #L3d6f5c.  v10:= `@@android.text.TextUtils$TruncateAt.START` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L3d6f60.  call `setEllipsize`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L3d6f66.  v10:= `@@com.google.android.material.R$styleable.Chip_chipIconVisible` @type ^`int`;
  #L3d6f6a.  call temp:= `getBoolean`(v9, v10, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3d6f70.  v10:= temp;
  #L3d6f72.  call `setChipIconVisible`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L3d6f78.  v10:= "http://schemas.android.com/apk/res-auto" @kind object;
  #L3d6f7c.  if v8 == 0 then goto L3d6fb2;
  #L3d6f80.  v1:= "chipIconEnabled" @kind object;
  #L3d6f84.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3d6f8a.  v1:= temp @kind object;
  #L3d6f8c.  if v1 == 0 then goto L3d6fb2;
  #L3d6f90.  v1:= "chipIconVisible" @kind object;
  #L3d6f94.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3d6f9a.  v1:= temp @kind object;
  #L3d6f9c.  if v1 != 0 then goto L3d6fb2;
  #L3d6fa0.  v1:= `@@com.google.android.material.R$styleable.Chip_chipIconEnabled` @type ^`int`;
  #L3d6fa4.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3d6faa.  v1:= temp;
  #L3d6fac.  call `setChipIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L3d6fb2.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d6fb6.  v2:= `@@com.google.android.material.R$styleable.Chip_chipIcon` @type ^`int`;
  #L3d6fba.  call temp:= `getDrawable`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L3d6fc0.  v1:= temp @kind object;
  #L3d6fc2.  call `setChipIcon`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L3d6fc8.  v1:= `@@com.google.android.material.R$styleable.Chip_chipIconTint` @type ^`int`;
  #L3d6fcc.  call temp:= `hasValue`(v9, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L3d6fd2.  v1:= temp;
  #L3d6fd4.  if v1 == 0 then goto L3d6fee;
  #L3d6fd8.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d6fdc.  v2:= `@@com.google.android.material.R$styleable.Chip_chipIconTint` @type ^`int`;
  #L3d6fe0.  call temp:= `getColorStateList`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L3d6fe6.  v1:= temp @kind object;
  #L3d6fe8.  call `setChipIconTint`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3d6fee.  v1:= `@@com.google.android.material.R$styleable.Chip_chipIconSize` @type ^`int`;
  #L3d6ff2.  v2:= -1.0F;
  #L3d6ff6.  call temp:= `getDimension`(v9, v1, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3d6ffc.  v1:= temp;
  #L3d6ffe.  call `setChipIconSize`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @kind virtual;
  #L3d7004.  v1:= `@@com.google.android.material.R$styleable.Chip_closeIconVisible` @type ^`int`;
  #L3d7008.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3d700e.  v1:= temp;
  #L3d7010.  call `setCloseIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L3d7016.  if v8 == 0 then goto L3d704c;
  #L3d701a.  v1:= "closeIconEnabled" @kind object;
  #L3d701e.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3d7024.  v1:= temp @kind object;
  #L3d7026.  if v1 == 0 then goto L3d704c;
  #L3d702a.  v1:= "closeIconVisible" @kind object;
  #L3d702e.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3d7034.  v1:= temp @kind object;
  #L3d7036.  if v1 != 0 then goto L3d704c;
  #L3d703a.  v1:= `@@com.google.android.material.R$styleable.Chip_closeIconEnabled` @type ^`int`;
  #L3d703e.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3d7044.  v1:= temp;
  #L3d7046.  call `setCloseIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L3d704c.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7050.  v2:= `@@com.google.android.material.R$styleable.Chip_closeIcon` @type ^`int`;
  #L3d7054.  call temp:= `getDrawable`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L3d705a.  v1:= temp @kind object;
  #L3d705c.  call `setCloseIcon`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L3d7062.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7066.  v2:= `@@com.google.android.material.R$styleable.Chip_closeIconTint` @type ^`int`;
  #L3d706a.  call temp:= `getColorStateList`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L3d7070.  v1:= temp @kind object;
  #L3d7072.  call `setCloseIconTint`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3d7078.  v1:= `@@com.google.android.material.R$styleable.Chip_closeIconSize` @type ^`int`;
  #L3d707c.  call temp:= `getDimension`(v9, v1, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3d7082.  v1:= temp;
  #L3d7084.  call `setCloseIconSize`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @kind virtual;
  #L3d708a.  v1:= `@@com.google.android.material.R$styleable.Chip_android_checkable` @type ^`int`;
  #L3d708e.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3d7094.  v1:= temp;
  #L3d7096.  call `setCheckable`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @kind virtual;
  #L3d709c.  v1:= `@@com.google.android.material.R$styleable.Chip_checkedIconVisible` @type ^`int`;
  #L3d70a0.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3d70a6.  v1:= temp;
  #L3d70a8.  call `setCheckedIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L3d70ae.  if v8 == 0 then goto L3d70e4;
  #L3d70b2.  v1:= "checkedIconEnabled" @kind object;
  #L3d70b6.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3d70bc.  v1:= temp @kind object;
  #L3d70be.  if v1 == 0 then goto L3d70e4;
  #L3d70c2.  v1:= "checkedIconVisible" @kind object;
  #L3d70c6.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3d70cc.  v8:= temp @kind object;
  #L3d70ce.  if v8 != 0 then goto L3d70e4;
  #L3d70d2.  v8:= `@@com.google.android.material.R$styleable.Chip_checkedIconEnabled` @type ^`int`;
  #L3d70d6.  call temp:= `getBoolean`(v9, v8, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L3d70dc.  v8:= temp;
  #L3d70de.  call `setCheckedIconVisible`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L3d70e4.  v8:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d70e8.  v10:= `@@com.google.android.material.R$styleable.Chip_checkedIcon` @type ^`int`;
  #L3d70ec.  call temp:= `getDrawable`(v8, v9, v10) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L3d70f2.  v8:= temp @kind object;
  #L3d70f4.  call `setCheckedIcon`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L3d70fa.  v8:= `@@com.google.android.material.R$styleable.Chip_checkedIconTint` @type ^`int`;
  #L3d70fe.  call temp:= `hasValue`(v9, v8) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L3d7104.  v8:= temp;
  #L3d7106.  if v8 == 0 then goto L3d7120;
  #L3d710a.  v8:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d710e.  v10:= `@@com.google.android.material.R$styleable.Chip_checkedIconTint` @type ^`int`;
  #L3d7112.  call temp:= `getColorStateList`(v8, v9, v10) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L3d7118.  v8:= temp @kind object;
  #L3d711a.  call `setCheckedIconTint`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3d7120.  v8:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7124.  v10:= `@@com.google.android.material.R$styleable.Chip_showMotionSpec` @type ^`int`;
  #L3d7128.  call temp:= `createFromAttribute`(v8, v9, v10) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromAttribute:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L3d712e.  v8:= temp @kind object;
  #L3d7130.  call `setShowMotionSpec`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L3d7136.  v8:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d713a.  v10:= `@@com.google.android.material.R$styleable.Chip_hideMotionSpec` @type ^`int`;
  #L3d713e.  call temp:= `createFromAttribute`(v8, v9, v10) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromAttribute:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L3d7144.  v8:= temp @kind object;
  #L3d7146.  call `setHideMotionSpec`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L3d714c.  v8:= `@@com.google.android.material.R$styleable.Chip_chipStartPadding` @type ^`int`;
  #L3d7150.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3d7156.  v8:= temp;
  #L3d7158.  call `setChipStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @kind virtual;
  #L3d715e.  v8:= `@@com.google.android.material.R$styleable.Chip_iconStartPadding` @type ^`int`;
  #L3d7162.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3d7168.  v8:= temp;
  #L3d716a.  call `setIconStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @kind virtual;
  #L3d7170.  v8:= `@@com.google.android.material.R$styleable.Chip_iconEndPadding` @type ^`int`;
  #L3d7174.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3d717a.  v8:= temp;
  #L3d717c.  call `setIconEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @kind virtual;
  #L3d7182.  v8:= `@@com.google.android.material.R$styleable.Chip_textStartPadding` @type ^`int`;
  #L3d7186.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3d718c.  v8:= temp;
  #L3d718e.  call `setTextStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @kind virtual;
  #L3d7194.  v8:= `@@com.google.android.material.R$styleable.Chip_textEndPadding` @type ^`int`;
  #L3d7198.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3d719e.  v8:= temp;
  #L3d71a0.  call `setTextEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @kind virtual;
  #L3d71a6.  v8:= `@@com.google.android.material.R$styleable.Chip_closeIconStartPadding` @type ^`int`;
  #L3d71aa.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3d71b0.  v8:= temp;
  #L3d71b2.  call `setCloseIconStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @kind virtual;
  #L3d71b8.  v8:= `@@com.google.android.material.R$styleable.Chip_closeIconEndPadding` @type ^`int`;
  #L3d71bc.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3d71c2.  v8:= temp;
  #L3d71c4.  call `setCloseIconEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @kind virtual;
  #L3d71ca.  v8:= `@@com.google.android.material.R$styleable.Chip_chipEndPadding` @type ^`int`;
  #L3d71ce.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L3d71d4.  v8:= temp;
  #L3d71d6.  call `setChipEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @kind virtual;
  #L3d71dc.  v8:= `@@com.google.android.material.R$styleable.Chip_android_maxWidth` @type ^`int`;
  #L3d71e0.  v10:= 2147483647I;
  #L3d71e6.  call temp:= `getDimensionPixelSize`(v9, v8, v10) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L3d71ec.  v8:= temp;
  #L3d71ee.  call `setMaxWidth`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setMaxWidth:(I)V` @kind virtual;
  #L3d71f4.  call `recycle`(v9) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L3d71fa.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.chip.ChipDrawable` v6 @kind this, `int`[] v7 @kind object, `int`[] v8 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d594c.  call temp:= `onStateChange`(v6, v7) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind super;
  #L3d5952.  v0:= temp;
  #L3d5954.  v1:= v6.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5958.  v2:= 0I;
  #L3d595a.  if v1 == 0 then goto L3d596c;
  #L3d595e.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L3d5962.  call temp:= `getColorForState`(v1, v7, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L3d5968.  v1:= temp;
  #L3d596a.  goto L3d596e;
  #L3d596c.  v1:= 0I;
  #L3d596e.  call temp:= `compositeElevationOverlayIfNeeded`(v6, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @kind virtual;
  #L3d5974.  v1:= temp;
  #L3d5976.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L3d597a.  v4:= 1I;
  #L3d597c.  if v3 == v1 then goto L3d5986;
  #L3d5980.  v6.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int` := v1;
  #L3d5984.  v0:= 1I;
  #L3d5986.  v3:= v6.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d598a.  if v3 == 0 then goto L3d599c;
  #L3d598e.  v5:= v6.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L3d5992.  call temp:= `getColorForState`(v3, v7, v5) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L3d5998.  v3:= temp;
  #L3d599a.  goto L3d599e;
  #L3d599c.  v3:= 0I;
  #L3d599e.  call temp:= `compositeElevationOverlayIfNeeded`(v6, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @kind virtual;
  #L3d59a4.  v3:= temp;
  #L3d59a6.  v5:= v6.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L3d59aa.  if v5 == v3 then goto L3d59b4;
  #L3d59ae.  v6.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int` := v3;
  #L3d59b2.  v0:= 1I;
  #L3d59b4.  call temp:= `layer`(v1, v3) @signature `Lcom/google/android/material/color/MaterialColors;.layer:(II)I` @kind static;
  #L3d59ba.  v1:= temp;
  #L3d59bc.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @type ^`int`;
  #L3d59c0.  if v3 == v1 then goto L3d59c8;
  #L3d59c4.  v3:= 1I;
  #L3d59c6.  goto L3d59ca;
  #L3d59c8.  v3:= 0I;
  #L3d59ca.  call temp:= `getFillColor`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L3d59d0.  v5:= temp @kind object;
  #L3d59d2.  if v5 != 0 then goto L3d59da;
  #L3d59d6.  v5:= 1I;
  #L3d59d8.  goto L3d59dc;
  #L3d59da.  v5:= 0I;
  #L3d59dc.  v3:= v3 ^| v5 @kind int;
  #L3d59de.  if v3 == 0 then goto L3d59f6;
  #L3d59e2.  v6.`com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @type ^`int` := v1;
  #L3d59e6.  call temp:= `valueOf`(v1) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L3d59ec.  v0:= temp @kind object;
  #L3d59ee.  call `setFillColor`(v6, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3d59f4.  v0:= 1I;
  #L3d59f6.  v1:= v6.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d59fa.  if v1 == 0 then goto L3d5a0c;
  #L3d59fe.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L3d5a02.  call temp:= `getColorForState`(v1, v7, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L3d5a08.  v1:= temp;
  #L3d5a0a.  goto L3d5a0e;
  #L3d5a0c.  v1:= 0I;
  #L3d5a0e.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L3d5a12.  if v3 == v1 then goto L3d5a1c;
  #L3d5a16.  v6.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int` := v1;
  #L3d5a1a.  v0:= 1I;
  #L3d5a1c.  v1:= v6.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5a20.  if v1 == 0 then goto L3d5a42;
  #L3d5a24.  call temp:= `shouldDrawRippleCompat`(v7) @signature `Lcom/google/android/material/ripple/RippleUtils;.shouldDrawRippleCompat:([I)Z` @kind static;
  #L3d5a2a.  v1:= temp;
  #L3d5a2c.  if v1 == 0 then goto L3d5a42;
  #L3d5a30.  v1:= v6.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5a34.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L3d5a38.  call temp:= `getColorForState`(v1, v7, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L3d5a3e.  v1:= temp;
  #L3d5a40.  goto L3d5a44;
  #L3d5a42.  v1:= 0I;
  #L3d5a44.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L3d5a48.  if v3 == v1 then goto L3d5a5a;
  #L3d5a4c.  v6.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int` := v1;
  #L3d5a50.  v1:= v6.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L3d5a54.  if v1 == 0 then goto L3d5a5a;
  #L3d5a58.  v0:= 1I;
  #L3d5a5a.  v1:= v6.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d5a5e.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L3d5a64.  v1:= temp @kind object;
  #L3d5a66.  if v1 == 0 then goto L3d5a9c;
  #L3d5a6a.  v1:= v6.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d5a6e.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L3d5a74.  v1:= temp @kind object;
  #L3d5a76.  v1:= v1.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5a7a.  if v1 == 0 then goto L3d5a9c;
  #L3d5a7e.  v1:= v6.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d5a82.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L3d5a88.  v1:= temp @kind object;
  #L3d5a8a.  v1:= v1.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5a8e.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int`;
  #L3d5a92.  call temp:= `getColorForState`(v1, v7, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L3d5a98.  v1:= temp;
  #L3d5a9a.  goto L3d5a9e;
  #L3d5a9c.  v1:= 0I;
  #L3d5a9e.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int`;
  #L3d5aa2.  if v3 == v1 then goto L3d5aac;
  #L3d5aa6.  v6.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int` := v1;
  #L3d5aaa.  v0:= 1I;
  #L3d5aac.  call temp:= `getState`(v6) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3d5ab2.  v1:= temp @kind object;
  #L3d5ab4.  v3:= 16842912I;
  #L3d5aba.  call temp:= `hasState`(v1, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.hasState:([II)Z` @kind static;
  #L3d5ac0.  v1:= temp;
  #L3d5ac2.  if v1 == 0 then goto L3d5ad2;
  #L3d5ac6.  v1:= v6.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L3d5aca.  if v1 == 0 then goto L3d5ad2;
  #L3d5ace.  v1:= 1I;
  #L3d5ad0.  goto L3d5ad4;
  #L3d5ad2.  v1:= 0I;
  #L3d5ad4.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L3d5ad8.  if v3 == v1 then goto L3d5b08;
  #L3d5adc.  v3:= v6.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5ae0.  if v3 == 0 then goto L3d5b08;
  #L3d5ae4.  call temp:= `calculateChipIconWidth`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d5aea.  v0:= temp;
  #L3d5aec.  v6.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` := v1 @kind boolean;
  #L3d5af0.  call temp:= `calculateChipIconWidth`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d5af6.  v1:= temp;
  #L3d5af8.  v0:= fcmpl(v0, v1);
  #L3d5afc.  if v0 == 0 then goto L3d5b06;
  #L3d5b00.  v0:= 1I;
  #L3d5b02.  v1:= 1I;
  #L3d5b04.  goto L3d5b0a;
  #L3d5b06.  v0:= 1I;
  #L3d5b08.  v1:= 0I;
  #L3d5b0a.  v3:= v6.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5b0e.  if v3 == 0 then goto L3d5b20;
  #L3d5b12.  v5:= v6.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int`;
  #L3d5b16.  call temp:= `getColorForState`(v3, v7, v5) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L3d5b1c.  v3:= temp;
  #L3d5b1e.  goto L3d5b22;
  #L3d5b20.  v3:= 0I;
  #L3d5b22.  v5:= v6.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int`;
  #L3d5b26.  if v5 == v3 then goto L3d5b44;
  #L3d5b2a.  v6.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int` := v3;
  #L3d5b2e.  v0:= v6.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5b32.  v3:= v6.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3d5b36.  call temp:= `updateTintFilter`(v6, v0, v3) @signature `Lcom/google/android/material/drawable/DrawableUtils;.updateTintFilter:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @kind static;
  #L3d5b3c.  v0:= temp @kind object;
  #L3d5b3e.  v6.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v0 @kind object;
  #L3d5b42.  goto L3d5b46;
  #L3d5b44.  v4:= v0;
  #L3d5b46.  v0:= v6.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5b4a.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L3d5b50.  v0:= temp;
  #L3d5b52.  if v0 == 0 then goto L3d5b64;
  #L3d5b56.  v0:= v6.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5b5a.  call temp:= `setState`(v0, v7) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L3d5b60.  v0:= temp;
  #L3d5b62.  v4:= v4 ^| v0 @kind int;
  #L3d5b64.  v0:= v6.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5b68.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L3d5b6e.  v0:= temp;
  #L3d5b70.  if v0 == 0 then goto L3d5b82;
  #L3d5b74.  v0:= v6.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5b78.  call temp:= `setState`(v0, v7) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L3d5b7e.  v0:= temp;
  #L3d5b80.  v4:= v4 ^| v0 @kind int;
  #L3d5b82.  v0:= v6.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5b86.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L3d5b8c.  v0:= temp;
  #L3d5b8e.  if v0 == 0 then goto L3d5bbc;
  #L3d5b92.  v0:= length @variable v7;
  #L3d5b94.  v3:= length @variable v8;
  #L3d5b96.  v0:= v0 + v3 @kind int;
  #L3d5b98.  v0:= new `int`[v0];
  #L3d5b9c.  v3:= length @variable v7;
  #L3d5b9e.  call `arraycopy`(v7, v2, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3d5ba4.  v7:= length @variable v7;
  #L3d5ba6.  v3:= length @variable v8;
  #L3d5ba8.  call `arraycopy`(v8, v2, v0, v7, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3d5bae.  v7:= v6.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5bb2.  call temp:= `setState`(v7, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L3d5bb8.  v7:= temp;
  #L3d5bba.  v4:= v4 ^| v7 @kind int;
  #L3d5bbc.  v7:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L3d5bc0.  if v7 == 0 then goto L3d5be2;
  #L3d5bc4.  v7:= v6.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5bc8.  call temp:= `isStateful`(v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L3d5bce.  v7:= temp;
  #L3d5bd0.  if v7 == 0 then goto L3d5be2;
  #L3d5bd4.  v7:= v6.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5bd8.  call temp:= `setState`(v7, v8) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L3d5bde.  v7:= temp;
  #L3d5be0.  v4:= v4 ^| v7 @kind int;
  #L3d5be2.  if v4 == 0 then goto L3d5bec;
  #L3d5be6.  call `invalidateSelf`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d5bec.  if v1 == 0 then goto L3d5bf6;
  #L3d5bf0.  call `onSizeChange`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d5bf6.  return v4;
}
procedure `void` `setChipSurfaceColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipSurfaceColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d79ac.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d79b0.  if v0 == v2 then goto L3d79c6;
  #L3d79b4.  v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L3d79b8.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3d79be.  v2:= temp @kind object;
  #L3d79c0.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L3d79c6.  return @kind void;
}
procedure `boolean` `showsCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d5cdc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L3d5ce0.  if v0 == 0 then goto L3d5cf8;
  #L3d5ce4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5ce8.  if v0 == 0 then goto L3d5cf8;
  #L3d5cec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L3d5cf0.  if v0 == 0 then goto L3d5cf8;
  #L3d5cf4.  v0:= 1I;
  #L3d5cf6.  goto L3d5cfa;
  #L3d5cf8.  v0:= 0I;
  #L3d5cfa.  return v0;
}
procedure `boolean` `showsChipIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d5d0c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L3d5d10.  if v0 == 0 then goto L3d5d20;
  #L3d5d14.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5d18.  if v0 == 0 then goto L3d5d20;
  #L3d5d1c.  v0:= 1I;
  #L3d5d1e.  goto L3d5d22;
  #L3d5d20.  v0:= 0I;
  #L3d5d22.  return v0;
}
procedure `boolean` `showsCloseIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d5d34.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L3d5d38.  if v0 == 0 then goto L3d5d48;
  #L3d5d3c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5d40.  if v0 == 0 then goto L3d5d48;
  #L3d5d44.  v0:= 1I;
  #L3d5d46.  goto L3d5d4a;
  #L3d5d48.  v0:= 0I;
  #L3d5d4a.  return v0;
}
procedure `void` `unapplyChildDrawable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d81a0.  if v2 == 0 then goto L3d81ac;
  #L3d81a4.  v0:= 0I;
  #L3d81a6.  call `setCallback`(v2, v0) @signature `Landroid/graphics/drawable/Drawable;.setCallback:(Landroid/graphics/drawable/Drawable$Callback;)V` @kind virtual;
  #L3d81ac.  return @kind void;
}
procedure `void` `updateCompatRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d81e4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L3d81e8.  if v0 == 0 then goto L3d81fa;
  #L3d81ec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d81f0.  call temp:= `sanitizeRippleDrawableColor`(v0) @signature `Lcom/google/android/material/ripple/RippleUtils;.sanitizeRippleDrawableColor:(Landroid/content/res/ColorStateList;)Landroid/content/res/ColorStateList;` @kind static;
  #L3d81f6.  v0:= temp @kind object;
  #L3d81f8.  goto L3d81fc;
  #L3d81fa.  v0:= 0I;
  #L3d81fc.  v1.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` := v0 @kind object;
  #L3d8200.  return @kind void;
}
procedure `void` `updateFrameworkCloseIconRipple`(`com.google.android.material.chip.ChipDrawable` v4 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateFrameworkCloseIconRipple:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d8214.  v0:= new `android.graphics.drawable.RippleDrawable`;
  #L3d8218.  call temp:= `getRippleColor`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getRippleColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L3d821e.  v1:= temp @kind object;
  #L3d8220.  call temp:= `sanitizeRippleDrawableColor`(v1) @signature `Lcom/google/android/material/ripple/RippleUtils;.sanitizeRippleDrawableColor:(Landroid/content/res/ColorStateList;)Landroid/content/res/ColorStateList;` @kind static;
  #L3d8226.  v1:= temp @kind object;
  #L3d8228.  v2:= v4.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d822c.  v3:= `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` @kind object;
  #L3d8230.  call `<init>`(v0, v1, v2, v3) @signature `Landroid/graphics/drawable/RippleDrawable;.<init>:(Landroid/content/res/ColorStateList;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L3d8236.  v4.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3d823a.  return @kind void;
}
procedure `float` `calculateChipIconWidth`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3d5e0c.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L3d5e12.  v0:= temp;
  #L3d5e14.  if v0 != 0 then goto L3d5e2a;
  #L3d5e18.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L3d5e1e.  v0:= temp;
  #L3d5e20.  if v0 == 0 then goto L3d5e26;
  #L3d5e24.  goto L3d5e2a;
  #L3d5e26.  v0:= 0I;
  #L3d5e28.  return v0;
  #L3d5e2a.  v0:= v2.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L3d5e2e.  call temp:= `getCurrentChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconWidth:()F` @kind direct;
  #L3d5e34.  v1:= temp;
  #L3d5e36.  v0:= v0 + v1 @kind float;
  #L3d5e38.  v1:= v2.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L3d5e3c.  v0:= v0 + v1 @kind float;
  #L3d5e3e.  return v0;
}
procedure `float` `calculateCloseIconWidth`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3d5e50.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d5e56.  v0:= temp;
  #L3d5e58.  if v0 == 0 then goto L3d5e6e;
  #L3d5e5c.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L3d5e60.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L3d5e64.  v0:= v0 + v1 @kind float;
  #L3d5e66.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L3d5e6a.  v0:= v0 + v1 @kind float;
  #L3d5e6c.  return v0;
  #L3d5e6e.  v0:= 0I;
  #L3d5e70.  return v0;
}
procedure `android.graphics.Paint$Align` `calculateTextOriginAndAlignment`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.PointF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextOriginAndAlignment:(Landroid/graphics/Rect;Landroid/graphics/PointF;)Landroid/graphics/Paint$Align;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3d5494.  v0:= 0I;
  #L3d5496.  call `set`(v4, v0, v0) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L3d549c.  v0:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L3d54a0.  v1:= v2.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L3d54a4.  if v1 == 0 then goto L3d5502;
  #L3d54a8.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L3d54ac.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d54b2.  v1:= temp;
  #L3d54b4.  v0:= v0 + v1 @kind float;
  #L3d54b6.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L3d54ba.  v0:= v0 + v1 @kind float;
  #L3d54bc.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L3d54c2.  v1:= temp;
  #L3d54c4.  if v1 != 0 then goto L3d54da;
  #L3d54c8.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L3d54cc.  v1:= (`float`) v1 @kind i2f;
  #L3d54ce.  v1:= v1 + v0 @kind float;
  #L3d54d0.  v4.`android.graphics.PointF.x` @type ^`float` := v1;
  #L3d54d4.  v0:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L3d54d8.  goto L3d54ea;
  #L3d54da.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L3d54de.  v1:= (`float`) v1 @kind i2f;
  #L3d54e0.  v1:= v1 - v0 @kind float;
  #L3d54e2.  v4.`android.graphics.PointF.x` @type ^`float` := v1;
  #L3d54e6.  v0:= `@@android.graphics.Paint$Align.RIGHT` @type ^`android.graphics.Paint$Align` @kind object;
  #L3d54ea.  call temp:= `centerY`(v3) @signature `Landroid/graphics/Rect;.centerY:()I` @kind virtual;
  #L3d54f0.  v3:= temp;
  #L3d54f2.  v3:= (`float`) v3 @kind i2f;
  #L3d54f4.  call temp:= `calculateTextCenterFromBaseline`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextCenterFromBaseline:()F` @kind direct;
  #L3d54fa.  v1:= temp;
  #L3d54fc.  v3:= v3 - v1 @kind float;
  #L3d54fe.  v4.`android.graphics.PointF.y` @type ^`float` := v3;
  #L3d5502.  return v0 @kind object;
}
procedure `void` `draw`(`com.google.android.material.chip.ChipDrawable` v9 @kind this, `android.graphics.Canvas` v10 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3d6678.  call temp:= `getBounds`(v9) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L3d667e.  v0:= temp @kind object;
  #L3d6680.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/Rect;.isEmpty:()Z` @kind virtual;
  #L3d6686.  v1:= temp;
  #L3d6688.  if v1 != 0 then goto L3d6724;
  #L3d668c.  call temp:= `getAlpha`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @kind virtual;
  #L3d6692.  v1:= temp;
  #L3d6694.  if v1 != 0 then goto L3d669a;
  #L3d6698.  goto L3d6724;
  #L3d669a.  v1:= 0I;
  #L3d669c.  v7:= v9.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L3d66a0.  v8:= 255I;
  #L3d66a4.  if v7 >= v8 then goto L3d66ca;
  #L3d66a8.  v1:= v0.`android.graphics.Rect.left` @type ^`int`;
  #L3d66ac.  v3:= (`float`) v1 @kind i2f;
  #L3d66ae.  v1:= v0.`android.graphics.Rect.top` @type ^`int`;
  #L3d66b2.  v4:= (`float`) v1 @kind i2f;
  #L3d66b4.  v1:= v0.`android.graphics.Rect.right` @type ^`int`;
  #L3d66b8.  v5:= (`float`) v1 @kind i2f;
  #L3d66ba.  v1:= v0.`android.graphics.Rect.bottom` @type ^`int`;
  #L3d66be.  v6:= (`float`) v1 @kind i2f;
  #L3d66c0.  v2:= v10 @kind object;
  #L3d66c2.  call temp:= `saveLayerAlpha`(v2, v3, v4, v5, v6, v7) @signature `Lcom/google/android/material/canvas/CanvasCompat;.saveLayerAlpha:(Landroid/graphics/Canvas;FFFFI)I` @kind static;
  #L3d66c8.  v1:= temp;
  #L3d66ca.  call `drawChipSurface`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipSurface:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L3d66d0.  call `drawChipBackground`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipBackground:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L3d66d6.  v2:= v9.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L3d66da.  if v2 == 0 then goto L3d66e4;
  #L3d66de.  call `draw`(v9, v10) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.draw:(Landroid/graphics/Canvas;)V` @kind super;
  #L3d66e4.  call `drawChipStroke`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipStroke:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L3d66ea.  call `drawCompatRipple`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCompatRipple:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L3d66f0.  call `drawChipIcon`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L3d66f6.  call `drawCheckedIcon`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCheckedIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L3d66fc.  v2:= v9.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` @kind boolean;
  #L3d6700.  if v2 == 0 then goto L3d670a;
  #L3d6704.  call `drawText`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawText:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L3d670a.  call `drawCloseIcon`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCloseIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L3d6710.  call `drawDebug`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawDebug:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L3d6716.  v0:= v9.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L3d671a.  if v0 >= v8 then goto L3d6724;
  #L3d671e.  call `restoreToCount`(v10, v1) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L3d6724.  return @kind void;
}
procedure `int` `getAlpha`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d60c8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L3d60cc.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCheckedIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5514.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5518.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getCheckedIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCheckedIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d53cc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d53d0.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getChipBackgroundColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipBackgroundColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d53e4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d53e8.  return v0 @kind object;
}
procedure `float` `getChipCornerRadius`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5ec0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L3d5ec4.  if v0 == 0 then goto L3d5ed2;
  #L3d5ec8.  call temp:= `getTopLeftCornerResolvedSize`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopLeftCornerResolvedSize:()F` @kind virtual;
  #L3d5ece.  v0:= temp;
  #L3d5ed0.  goto L3d5ed6;
  #L3d5ed2.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L3d5ed6.  return v0;
}
procedure `float` `getChipEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5ee8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L3d5eec.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getChipIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d552c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5530.  if v0 == 0 then goto L3d553e;
  #L3d5534.  call temp:= `unwrap`(v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.unwrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L3d553a.  v0:= temp @kind object;
  #L3d553c.  goto L3d5540;
  #L3d553e.  v0:= 0I;
  #L3d5540.  return v0 @kind object;
}
procedure `float` `getChipIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5f00.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L3d5f04.  return v0;
}
procedure `android.content.res.ColorStateList` `getChipIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d53fc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5400.  return v0 @kind object;
}
procedure `float` `getChipMinHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipMinHeight:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5f18.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L3d5f1c.  return v0;
}
procedure `float` `getChipStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5f30.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L3d5f34.  return v0;
}
procedure `android.content.res.ColorStateList` `getChipStrokeColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStrokeColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5414.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5418.  return v0 @kind object;
}
procedure `float` `getChipStrokeWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStrokeWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5f48.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L3d5f4c.  return v0;
}
procedure `void` `getChipTouchBounds`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.RectF` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipTouchBounds:(Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6d40.  call temp:= `getBounds`(v1) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L3d6d46.  v0:= temp @kind object;
  #L3d6d48.  call `calculateChipTouchBounds`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L3d6d4e.  return @kind void;
}
procedure `android.graphics.drawable.Drawable` `getCloseIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5554.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5558.  if v0 == 0 then goto L3d5566;
  #L3d555c.  call temp:= `unwrap`(v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.unwrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L3d5562.  v0:= temp @kind object;
  #L3d5564.  goto L3d5568;
  #L3d5566.  v0:= 0I;
  #L3d5568.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getCloseIconContentDescription`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconContentDescription:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d61ac.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` @kind object;
  #L3d61b0.  return v0 @kind object;
}
procedure `float` `getCloseIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5f60.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L3d5f64.  return v0;
}
procedure `float` `getCloseIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5f78.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L3d5f7c.  return v0;
}
procedure `float` `getCloseIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5f90.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L3d5f94.  return v0;
}
procedure `int`[] `getCloseIconState`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6194.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] @kind object;
  #L3d6198.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getCloseIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d542c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5430.  return v0 @kind object;
}
procedure `void` `getCloseIconTouchBounds`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.RectF` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconTouchBounds:(Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6d60.  call temp:= `getBounds`(v1) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L3d6d66.  v0:= temp @kind object;
  #L3d6d68.  call `calculateCloseIconTouchBounds`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L3d6d6e.  return @kind void;
}
procedure `android.graphics.ColorFilter` `getColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d545c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L3d5460.  return v0 @kind object;
}
procedure `android.text.TextUtils$TruncateAt` `getEllipsize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getEllipsize:()Landroid/text/TextUtils$TruncateAt;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d557c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L3d5580.  return v0 @kind object;
}
procedure `com.google.android.material.animation.MotionSpec` `getHideMotionSpec`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getHideMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5d5c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.hideMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` @kind object;
  #L3d5d60.  return v0 @kind object;
}
procedure `float` `getIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6068.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L3d606c.  return v0;
}
procedure `float` `getIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6080.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L3d6084.  return v0;
}
procedure `int` `getIntrinsicHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d60e0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L3d60e4.  v0:= (`int`) v0 @kind f2i;
  #L3d60e6.  return v0;
}
procedure `int` `getIntrinsicWidth`(`com.google.android.material.chip.ChipDrawable` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d60f8.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L3d60fc.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d6102.  v1:= temp;
  #L3d6104.  v0:= v0 + v1 @kind float;
  #L3d6106.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L3d610a.  v0:= v0 + v1 @kind float;
  #L3d610c.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d6110.  call temp:= `getText`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L3d6116.  v2:= temp @kind object;
  #L3d6118.  call temp:= `toString`(v2) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L3d611e.  v2:= temp @kind object;
  #L3d6120.  call temp:= `getTextWidth`(v1, v2) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextWidth:(Ljava/lang/String;)F` @kind virtual;
  #L3d6126.  v1:= temp;
  #L3d6128.  v0:= v0 + v1 @kind float;
  #L3d612a.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L3d612e.  v0:= v0 + v1 @kind float;
  #L3d6130.  call temp:= `calculateCloseIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L3d6136.  v1:= temp;
  #L3d6138.  v0:= v0 + v1 @kind float;
  #L3d613a.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L3d613e.  v0:= v0 + v1 @kind float;
  #L3d6140.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3d6146.  v0:= temp;
  #L3d6148.  v1:= v3.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int`;
  #L3d614c.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3d6152.  v0:= temp;
  #L3d6154.  return v0;
}
procedure `int` `getMaxWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getMaxWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6168.  v0:= v1.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int`;
  #L3d616c.  return v0;
}
procedure `int` `getOpacity`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6180.  v0:= -3I;
  #L3d6182.  return v0;
}
procedure `void` `getOutline`(`com.google.android.material.chip.ChipDrawable` v8 @kind this, `android.graphics.Outline` v9 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.getOutline:(Landroid/graphics/Outline;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d6d80.  v0:= v8.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L3d6d84.  if v0 == 0 then goto L3d6d90;
  #L3d6d88.  call `getOutline`(v8, v9) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getOutline:(Landroid/graphics/Outline;)V` @kind super;
  #L3d6d8e.  return @kind void;
  #L3d6d90.  call temp:= `getBounds`(v8) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L3d6d96.  v0:= temp @kind object;
  #L3d6d98.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/Rect;.isEmpty:()Z` @kind virtual;
  #L3d6d9e.  v1:= temp;
  #L3d6da0.  if v1 != 0 then goto L3d6db0;
  #L3d6da4.  v1:= v8.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L3d6da8.  call `setRoundRect`(v9, v0, v1) @signature `Landroid/graphics/Outline;.setRoundRect:(Landroid/graphics/Rect;F)V` @kind virtual;
  #L3d6dae.  goto L3d6dd0;
  #L3d6db0.  v3:= 0I;
  #L3d6db2.  v4:= 0I;
  #L3d6db4.  call temp:= `getIntrinsicWidth`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicWidth:()I` @kind virtual;
  #L3d6dba.  v5:= temp;
  #L3d6dbc.  call temp:= `getIntrinsicHeight`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L3d6dc2.  v6:= temp;
  #L3d6dc4.  v7:= v8.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L3d6dc8.  v2:= v9 @kind object;
  #L3d6dca.  call `setRoundRect`(v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Outline;.setRoundRect:(IIIIF)V` @kind virtual;
  #L3d6dd0.  call temp:= `getAlpha`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @kind virtual;
  #L3d6dd6.  v0:= temp;
  #L3d6dd8.  v0:= (`float`) v0 @kind i2f;
  #L3d6dda.  v1:= 255.0F;
  #L3d6dde.  v0:= v0 / v1 @kind float;
  #L3d6de0.  call `setAlpha`(v9, v0) @signature `Landroid/graphics/Outline;.setAlpha:(F)V` @kind virtual;
  #L3d6de6.  return @kind void;
}
procedure `android.content.res.ColorStateList` `getRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getRippleColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5444.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5448.  return v0 @kind object;
}
procedure `com.google.android.material.animation.MotionSpec` `getShowMotionSpec`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getShowMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5d74.  v0:= v1.`com.google.android.material.chip.ChipDrawable.showMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` @kind object;
  #L3d5d78.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d61c4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L3d61c8.  return v0 @kind object;
}
procedure `com.google.android.material.resources.TextAppearance` `getTextAppearance`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5dec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d5df0.  call temp:= `getTextAppearance`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L3d5df6.  v0:= temp @kind object;
  #L3d5df8.  return v0 @kind object;
}
procedure `float` `getTextEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6098.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L3d609c.  return v0;
}
procedure `float` `getTextStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d60b0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L3d60b4.  return v0;
}
procedure `boolean` `getUseCompatRipple`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getUseCompatRipple:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d55c4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L3d55c8.  return v0;
}
procedure `void` `invalidateDrawable`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L3d6df8.  call temp:= `getCallback`(v0) @signature `Landroid/graphics/drawable/Drawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L3d6dfe.  v1:= temp @kind object;
  #L3d6e00.  if v1 == 0 then goto L3d6e0a;
  #L3d6e04.  call `invalidateDrawable`(v1, v0) @signature `Landroid/graphics/drawable/Drawable$Callback;.invalidateDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L3d6e0a.  return @kind void;
}
procedure `boolean` `isCheckable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5610.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L3d5614.  return v0;
}
procedure `boolean` `isCheckedIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5628.  call temp:= `isCheckedIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconVisible:()Z` @kind virtual;
  #L3d562e.  v0:= temp;
  #L3d5630.  return v0;
}
procedure `boolean` `isCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5644.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L3d5648.  return v0;
}
procedure `boolean` `isChipIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d565c.  call temp:= `isChipIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconVisible:()Z` @kind virtual;
  #L3d5662.  v0:= temp;
  #L3d5664.  return v0;
}
procedure `boolean` `isChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5678.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L3d567c.  return v0;
}
procedure `boolean` `isCloseIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5690.  call temp:= `isCloseIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconVisible:()Z` @kind virtual;
  #L3d5696.  v0:= temp;
  #L3d5698.  return v0;
}
procedure `boolean` `isCloseIconStateful`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d56ac.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d56b0.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L3d56b6.  v0:= temp;
  #L3d56b8.  return v0;
}
procedure `boolean` `isCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d56cc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L3d56d0.  return v0;
}
procedure `boolean` `isShapeThemingEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isShapeThemingEnabled:()Z` @AccessFlag  {
    temp;
    v0;

  #L3d56e4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L3d56e8.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d56fc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5700.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L3d5706.  v0:= temp;
  #L3d5708.  if v0 != 0 then goto L3d579e;
  #L3d570c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5710.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L3d5716.  v0:= temp;
  #L3d5718.  if v0 != 0 then goto L3d579e;
  #L3d571c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5720.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L3d5726.  v0:= temp;
  #L3d5728.  if v0 != 0 then goto L3d579e;
  #L3d572c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L3d5730.  if v0 == 0 then goto L3d5744;
  #L3d5734.  v0:= v1.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d5738.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L3d573e.  v0:= temp;
  #L3d5740.  if v0 != 0 then goto L3d579e;
  #L3d5744.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d5748.  call temp:= `getTextAppearance`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L3d574e.  v0:= temp @kind object;
  #L3d5750.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Lcom/google/android/material/resources/TextAppearance;)Z` @kind static;
  #L3d5756.  v0:= temp;
  #L3d5758.  if v0 != 0 then goto L3d579e;
  #L3d575c.  call temp:= `canShowCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @kind direct;
  #L3d5762.  v0:= temp;
  #L3d5764.  if v0 != 0 then goto L3d579e;
  #L3d5768.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d576c.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L3d5772.  v0:= temp;
  #L3d5774.  if v0 != 0 then goto L3d579e;
  #L3d5778.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d577c.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L3d5782.  v0:= temp;
  #L3d5784.  if v0 != 0 then goto L3d579e;
  #L3d5788.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d578c.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L3d5792.  v0:= temp;
  #L3d5794.  if v0 == 0 then goto L3d579a;
  #L3d5798.  goto L3d579e;
  #L3d579a.  v0:= 0I;
  #L3d579c.  goto L3d57a0;
  #L3d579e.  v0:= 1I;
  #L3d57a0.  return v0;
}
procedure `boolean` `onLayoutDirectionChanged`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.onLayoutDirectionChanged:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d5834.  call temp:= `onLayoutDirectionChanged`(v2, v3) @signature `Landroid/graphics/drawable/Drawable;.onLayoutDirectionChanged:(I)Z` @kind super;
  #L3d583a.  v0:= temp;
  #L3d583c.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L3d5842.  v1:= temp;
  #L3d5844.  if v1 == 0 then goto L3d5856;
  #L3d5848.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d584c.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L3d5852.  v1:= temp;
  #L3d5854.  v0:= v0 ^| v1 @kind int;
  #L3d5856.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L3d585c.  v1:= temp;
  #L3d585e.  if v1 == 0 then goto L3d5870;
  #L3d5862.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5866.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L3d586c.  v1:= temp;
  #L3d586e.  v0:= v0 ^| v1 @kind int;
  #L3d5870.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d5876.  v1:= temp;
  #L3d5878.  if v1 == 0 then goto L3d588a;
  #L3d587c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5880.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L3d5886.  v3:= temp;
  #L3d5888.  v0:= v0 ^| v3 @kind int;
  #L3d588a.  if v0 == 0 then goto L3d5894;
  #L3d588e.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d5894.  v3:= 1I;
  #L3d5896.  return v3;
}
procedure `boolean` `onLevelChange`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.onLevelChange:(I)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3d58a8.  call temp:= `onLevelChange`(v2, v3) @signature `Landroid/graphics/drawable/Drawable;.onLevelChange:(I)Z` @kind super;
  #L3d58ae.  v0:= temp;
  #L3d58b0.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L3d58b6.  v1:= temp;
  #L3d58b8.  if v1 == 0 then goto L3d58ca;
  #L3d58bc.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d58c0.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L3d58c6.  v1:= temp;
  #L3d58c8.  v0:= v0 ^| v1 @kind int;
  #L3d58ca.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L3d58d0.  v1:= temp;
  #L3d58d2.  if v1 == 0 then goto L3d58e4;
  #L3d58d6.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d58da.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L3d58e0.  v1:= temp;
  #L3d58e2.  v0:= v0 ^| v1 @kind int;
  #L3d58e4.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d58ea.  v1:= temp;
  #L3d58ec.  if v1 == 0 then goto L3d58fe;
  #L3d58f0.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d58f4.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L3d58fa.  v3:= temp;
  #L3d58fc.  v0:= v0 ^| v3 @kind int;
  #L3d58fe.  if v0 == 0 then goto L3d5908;
  #L3d5902.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d5908.  return v0;
}
procedure `void` `onSizeChange`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3d720c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3d7210.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3d7216.  v0:= temp @kind object;
  #L3d7218.  v0:= (`com.google.android.material.chip.ChipDrawable$Delegate`) v0 @kind object;
  #L3d721c.  if v0 == 0 then goto L3d7226;
  #L3d7220.  call `onChipDrawableSizeChange`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable$Delegate;.onChipDrawableSizeChange:()V` @kind interface;
  #L3d7226.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int`[] v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d591c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L3d5920.  if v0 == 0 then goto L3d592a;
  #L3d5924.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind super;
  #L3d592a.  call temp:= `getCloseIconState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @kind virtual;
  #L3d5930.  v0:= temp @kind object;
  #L3d5932.  call temp:= `onStateChange`(v1, v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @kind direct;
  #L3d5938.  v2:= temp;
  #L3d593a.  return v2;
}
procedure `void` `onTextSizeChange`(`com.google.android.material.chip.ChipDrawable` v0 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.onTextSizeChange:()V` @AccessFlag PUBLIC {
    temp;

  #L3d7238.  call `onSizeChange`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d723e.  call `invalidateSelf`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d7244.  return @kind void;
}
procedure `void` `scheduleDrawable`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `java.lang.Runnable` v2 @kind object, `long` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.scheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V` @AccessFlag PUBLIC {
    temp;

  #L3d7258.  call temp:= `getCallback`(v0) @signature `Landroid/graphics/drawable/Drawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L3d725e.  v1:= temp @kind object;
  #L3d7260.  if v1 == 0 then goto L3d726a;
  #L3d7264.  call `scheduleDrawable`(v1, v0, v2, v3) @signature `Landroid/graphics/drawable/Drawable$Callback;.scheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V` @kind interface;
  #L3d726a.  return @kind void;
}
procedure `void` `setAlpha`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d727c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L3d7280.  if v0 == v2 then goto L3d728e;
  #L3d7284.  v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int` := v2;
  #L3d7288.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d728e.  return @kind void;
}
procedure `void` `setCheckable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d72a0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L3d72a4.  if v0 == v2 then goto L3d72e2;
  #L3d72a8.  v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` := v2 @kind boolean;
  #L3d72ac.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d72b2.  v0:= temp;
  #L3d72b4.  if v2 != 0 then goto L3d72c6;
  #L3d72b8.  v2:= v1.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L3d72bc.  if v2 == 0 then goto L3d72c6;
  #L3d72c0.  v2:= 0I;
  #L3d72c2.  v1.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` := v2 @kind boolean;
  #L3d72c6.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d72cc.  v2:= temp;
  #L3d72ce.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d72d4.  v2:= fcmpl(v0, v2);
  #L3d72d8.  if v2 == 0 then goto L3d72e2;
  #L3d72dc.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d72e2.  return @kind void;
}
procedure `void` `setCheckableResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckableResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d72f4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d72f8.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d72fe.  v0:= temp @kind object;
  #L3d7300.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L3d7306.  v2:= temp;
  #L3d7308.  call `setCheckable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @kind virtual;
  #L3d730e.  return @kind void;
}
procedure `void` `setCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d7320.  v0:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d7324.  if v0 == v3 then goto L3d7364;
  #L3d7328.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d732e.  v0:= temp;
  #L3d7330.  v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` := v3 @kind object;
  #L3d7334.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d733a.  v3:= temp;
  #L3d733c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d7340.  call `unapplyChildDrawable`(v2, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L3d7346.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d734a.  call `applyChildDrawable`(v2, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L3d7350.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d7356.  v3:= fcmpl(v0, v3);
  #L3d735a.  if v3 == 0 then goto L3d7364;
  #L3d735e.  call `onSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d7364.  return @kind void;
}
procedure `void` `setCheckedIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3d7378.  call `setCheckedIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L3d737e.  return @kind void;
}
procedure `void` `setCheckedIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7390.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7394.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d739a.  v0:= temp @kind object;
  #L3d739c.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L3d73a2.  v2:= temp;
  #L3d73a4.  call `setCheckedIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L3d73aa.  return @kind void;
}
procedure `void` `setCheckedIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d73bc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d73c0.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L3d73c6.  v2:= temp @kind object;
  #L3d73c8.  call `setCheckedIcon`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L3d73ce.  return @kind void;
}
procedure `void` `setCheckedIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d73e0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d73e4.  if v0 == v2 then goto L3d7410;
  #L3d73e8.  v1.`com.google.android.material.chip.ChipDrawable.checkedIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L3d73ec.  call temp:= `canShowCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @kind direct;
  #L3d73f2.  v0:= temp;
  #L3d73f4.  if v0 == 0 then goto L3d7402;
  #L3d73f8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d73fc.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L3d7402.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3d7408.  v2:= temp @kind object;
  #L3d740a.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L3d7410.  return @kind void;
}
procedure `void` `setCheckedIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7424.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7428.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L3d742e.  v2:= temp @kind object;
  #L3d7430.  call `setCheckedIconTint`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3d7436.  return @kind void;
}
procedure `void` `setCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d74ac.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d74b0.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d74b6.  v0:= temp @kind object;
  #L3d74b8.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L3d74be.  v2:= temp;
  #L3d74c0.  call `setCheckedIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L3d74c6.  return @kind void;
}
procedure `void` `setCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7448.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L3d744c.  if v0 == v2 then goto L3d7498;
  #L3d7450.  call temp:= `showsCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L3d7456.  v0:= temp;
  #L3d7458.  v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` := v2 @kind boolean;
  #L3d745c.  call temp:= `showsCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L3d7462.  v2:= temp;
  #L3d7464.  if v0 == v2 then goto L3d746c;
  #L3d7468.  v0:= 1I;
  #L3d746a.  goto L3d746e;
  #L3d746c.  v0:= 0I;
  #L3d746e.  if v0 == 0 then goto L3d7498;
  #L3d7472.  if v2 == 0 then goto L3d7482;
  #L3d7476.  v2:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d747a.  call `applyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L3d7480.  goto L3d748c;
  #L3d7482.  v2:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d7486.  call `unapplyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L3d748c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d7492.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d7498.  return @kind void;
}
procedure `void` `setChipBackgroundColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d74d8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d74dc.  if v0 == v2 then goto L3d74f2;
  #L3d74e0.  v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L3d74e4.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3d74ea.  v2:= temp @kind object;
  #L3d74ec.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L3d74f2.  return @kind void;
}
procedure `void` `setChipBackgroundColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7504.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7508.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L3d750e.  v2:= temp @kind object;
  #L3d7510.  call `setChipBackgroundColor`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3d7516.  return @kind void;
}
procedure `void` `setChipCornerRadius`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7528.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L3d752c.  v0:= fcmpl(v0, v2);
  #L3d7530.  if v0 == 0 then goto L3d754e;
  #L3d7534.  v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float` := v2;
  #L3d7538.  call temp:= `getShapeAppearanceModel`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L3d753e.  v0:= temp @kind object;
  #L3d7540.  call temp:= `withCornerSize`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withCornerSize:(F)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L3d7546.  v2:= temp @kind object;
  #L3d7548.  call `setShapeAppearanceModel`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L3d754e.  return @kind void;
}
procedure `void` `setChipCornerRadiusResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadiusResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7560.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7564.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d756a.  v0:= temp @kind object;
  #L3d756c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L3d7572.  v2:= temp;
  #L3d7574.  call `setChipCornerRadius`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @kind virtual;
  #L3d757a.  return @kind void;
}
procedure `void` `setChipEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d758c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L3d7590.  v0:= fcmpl(v0, v2);
  #L3d7594.  if v0 == 0 then goto L3d75a8;
  #L3d7598.  v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float` := v2;
  #L3d759c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d75a2.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d75a8.  return @kind void;
}
procedure `void` `setChipEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d75bc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d75c0.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d75c6.  v0:= temp @kind object;
  #L3d75c8.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L3d75ce.  v2:= temp;
  #L3d75d0.  call `setChipEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @kind virtual;
  #L3d75d6.  return @kind void;
}
procedure `void` `setChipIcon`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d75e8.  call temp:= `getChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L3d75ee.  v0:= temp @kind object;
  #L3d75f0.  if v0 == v3 then goto L3d7650;
  #L3d75f4.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d75fa.  v1:= temp;
  #L3d75fc.  if v3 == 0 then goto L3d7612;
  #L3d7600.  call temp:= `wrap`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.wrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L3d7606.  v3:= temp @kind object;
  #L3d7608.  call temp:= `mutate`(v3) @signature `Landroid/graphics/drawable/Drawable;.mutate:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L3d760e.  v3:= temp @kind object;
  #L3d7610.  goto L3d7614;
  #L3d7612.  v3:= 0I;
  #L3d7614.  v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` := v3 @kind object;
  #L3d7618.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d761e.  v3:= temp;
  #L3d7620.  call `unapplyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L3d7626.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L3d762c.  v0:= temp;
  #L3d762e.  if v0 == 0 then goto L3d763c;
  #L3d7632.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d7636.  call `applyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L3d763c.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d7642.  v3:= fcmpl(v1, v3);
  #L3d7646.  if v3 == 0 then goto L3d7650;
  #L3d764a.  call `onSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d7650.  return @kind void;
}
procedure `void` `setChipIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3d7664.  call `setChipIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L3d766a.  return @kind void;
}
procedure `void` `setChipIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L3d767c.  call `setChipIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(I)V` @kind virtual;
  #L3d7682.  return @kind void;
}
procedure `void` `setChipIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7694.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7698.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L3d769e.  v2:= temp @kind object;
  #L3d76a0.  call `setChipIcon`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L3d76a6.  return @kind void;
}
procedure `void` `setChipIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d76b8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L3d76bc.  v0:= fcmpl(v0, v2);
  #L3d76c0.  if v0 == 0 then goto L3d76ec;
  #L3d76c4.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d76ca.  v0:= temp;
  #L3d76cc.  v1.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float` := v2;
  #L3d76d0.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d76d6.  v2:= temp;
  #L3d76d8.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d76de.  v2:= fcmpl(v0, v2);
  #L3d76e2.  if v2 == 0 then goto L3d76ec;
  #L3d76e6.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d76ec.  return @kind void;
}
procedure `void` `setChipIconSizeResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSizeResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7700.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7704.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d770a.  v0:= temp @kind object;
  #L3d770c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L3d7712.  v2:= temp;
  #L3d7714.  call `setChipIconSize`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @kind virtual;
  #L3d771a.  return @kind void;
}
procedure `void` `setChipIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d772c.  v0:= 1I;
  #L3d772e.  v1.`com.google.android.material.chip.ChipDrawable.hasChipIconTint` @type ^`boolean` := v0 @kind boolean;
  #L3d7732.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d7736.  if v0 == v2 then goto L3d7762;
  #L3d773a.  v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L3d773e.  call temp:= `showsChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L3d7744.  v0:= temp;
  #L3d7746.  if v0 == 0 then goto L3d7754;
  #L3d774a.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d774e.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L3d7754.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3d775a.  v2:= temp @kind object;
  #L3d775c.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L3d7762.  return @kind void;
}
procedure `void` `setChipIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7774.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7778.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L3d777e.  v2:= temp @kind object;
  #L3d7780.  call `setChipIconTint`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3d7786.  return @kind void;
}
procedure `void` `setChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d77fc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7800.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d7806.  v0:= temp @kind object;
  #L3d7808.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L3d780e.  v2:= temp;
  #L3d7810.  call `setChipIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L3d7816.  return @kind void;
}
procedure `void` `setChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7798.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L3d779c.  if v0 == v2 then goto L3d77e8;
  #L3d77a0.  call temp:= `showsChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L3d77a6.  v0:= temp;
  #L3d77a8.  v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` := v2 @kind boolean;
  #L3d77ac.  call temp:= `showsChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L3d77b2.  v2:= temp;
  #L3d77b4.  if v0 == v2 then goto L3d77bc;
  #L3d77b8.  v0:= 1I;
  #L3d77ba.  goto L3d77be;
  #L3d77bc.  v0:= 0I;
  #L3d77be.  if v0 == 0 then goto L3d77e8;
  #L3d77c2.  if v2 == 0 then goto L3d77d2;
  #L3d77c6.  v2:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d77ca.  call `applyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L3d77d0.  goto L3d77dc;
  #L3d77d2.  v2:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d77d6.  call `unapplyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L3d77dc.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d77e2.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d77e8.  return @kind void;
}
procedure `void` `setChipMinHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7828.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L3d782c.  v0:= fcmpl(v0, v2);
  #L3d7830.  if v0 == 0 then goto L3d7844;
  #L3d7834.  v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float` := v2;
  #L3d7838.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d783e.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d7844.  return @kind void;
}
procedure `void` `setChipMinHeightResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeightResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7858.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d785c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d7862.  v0:= temp @kind object;
  #L3d7864.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L3d786a.  v2:= temp;
  #L3d786c.  call `setChipMinHeight`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @kind virtual;
  #L3d7872.  return @kind void;
}
procedure `void` `setChipStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7884.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L3d7888.  v0:= fcmpl(v0, v2);
  #L3d788c.  if v0 == 0 then goto L3d78a0;
  #L3d7890.  v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float` := v2;
  #L3d7894.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d789a.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d78a0.  return @kind void;
}
procedure `void` `setChipStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d78b4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d78b8.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d78be.  v0:= temp @kind object;
  #L3d78c0.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L3d78c6.  v2:= temp;
  #L3d78c8.  call `setChipStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @kind virtual;
  #L3d78ce.  return @kind void;
}
procedure `void` `setChipStrokeColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d78e0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d78e4.  if v0 == v2 then goto L3d7908;
  #L3d78e8.  v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L3d78ec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L3d78f0.  if v0 == 0 then goto L3d78fa;
  #L3d78f4.  call `setStrokeColor`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3d78fa.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3d7900.  v2:= temp @kind object;
  #L3d7902.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L3d7908.  return @kind void;
}
procedure `void` `setChipStrokeColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d791c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7920.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L3d7926.  v2:= temp @kind object;
  #L3d7928.  call `setChipStrokeColor`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3d792e.  return @kind void;
}
procedure `void` `setChipStrokeWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7940.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L3d7944.  v0:= fcmpl(v0, v2);
  #L3d7948.  if v0 == 0 then goto L3d796e;
  #L3d794c.  v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float` := v2;
  #L3d7950.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L3d7954.  call `setStrokeWidth`(v0, v2) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L3d795a.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L3d795e.  if v0 == 0 then goto L3d7968;
  #L3d7962.  call `setStrokeWidth`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind super;
  #L3d7968.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d796e.  return @kind void;
}
procedure `void` `setChipStrokeWidthResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidthResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7980.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7984.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d798a.  v0:= temp @kind object;
  #L3d798c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L3d7992.  v2:= temp;
  #L3d7994.  call `setChipStrokeWidth`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @kind virtual;
  #L3d799a.  return @kind void;
}
procedure `void` `setCloseIcon`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d79d8.  call temp:= `getCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L3d79de.  v0:= temp @kind object;
  #L3d79e0.  if v0 == v3 then goto L3d7a4e;
  #L3d79e4.  call temp:= `calculateCloseIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L3d79ea.  v1:= temp;
  #L3d79ec.  if v3 == 0 then goto L3d7a02;
  #L3d79f0.  call temp:= `wrap`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.wrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L3d79f6.  v3:= temp @kind object;
  #L3d79f8.  call temp:= `mutate`(v3) @signature `Landroid/graphics/drawable/Drawable;.mutate:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L3d79fe.  v3:= temp @kind object;
  #L3d7a00.  goto L3d7a04;
  #L3d7a02.  v3:= 0I;
  #L3d7a04.  v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` := v3 @kind object;
  #L3d7a08.  v3:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L3d7a0c.  if v3 == 0 then goto L3d7a16;
  #L3d7a10.  call `updateFrameworkCloseIconRipple`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateFrameworkCloseIconRipple:()V` @kind direct;
  #L3d7a16.  call temp:= `calculateCloseIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L3d7a1c.  v3:= temp;
  #L3d7a1e.  call `unapplyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L3d7a24.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d7a2a.  v0:= temp;
  #L3d7a2c.  if v0 == 0 then goto L3d7a3a;
  #L3d7a30.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d7a34.  call `applyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L3d7a3a.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d7a40.  v3:= fcmpl(v1, v3);
  #L3d7a44.  if v3 == 0 then goto L3d7a4e;
  #L3d7a48.  call `onSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d7a4e.  return @kind void;
}
procedure `void` `setCloseIconContentDescription`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconContentDescription:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7a60.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` @kind object;
  #L3d7a64.  if v0 == v2 then goto L3d7a82;
  #L3d7a68.  call temp:= `getInstance`() @signature `Landroidx/core/text/BidiFormatter;.getInstance:()Landroidx/core/text/BidiFormatter;` @kind static;
  #L3d7a6e.  v0:= temp @kind object;
  #L3d7a70.  call temp:= `unicodeWrap`(v0, v2) @signature `Landroidx/core/text/BidiFormatter;.unicodeWrap:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind virtual;
  #L3d7a76.  v2:= temp @kind object;
  #L3d7a78.  v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` := v2 @kind object;
  #L3d7a7c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d7a82.  return @kind void;
}
procedure `void` `setCloseIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3d7a94.  call `setCloseIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L3d7a9a.  return @kind void;
}
procedure `void` `setCloseIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L3d7aac.  call `setCloseIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(I)V` @kind virtual;
  #L3d7ab2.  return @kind void;
}
procedure `void` `setCloseIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7ac4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L3d7ac8.  v0:= fcmpl(v0, v2);
  #L3d7acc.  if v0 == 0 then goto L3d7aec;
  #L3d7ad0.  v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float` := v2;
  #L3d7ad4.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d7ada.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d7ae0.  v2:= temp;
  #L3d7ae2.  if v2 == 0 then goto L3d7aec;
  #L3d7ae6.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d7aec.  return @kind void;
}
procedure `void` `setCloseIconEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7b00.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7b04.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d7b0a.  v0:= temp @kind object;
  #L3d7b0c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L3d7b12.  v2:= temp;
  #L3d7b14.  call `setCloseIconEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @kind virtual;
  #L3d7b1a.  return @kind void;
}
procedure `void` `setCloseIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7b2c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7b30.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L3d7b36.  v2:= temp @kind object;
  #L3d7b38.  call `setCloseIcon`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L3d7b3e.  return @kind void;
}
procedure `void` `setCloseIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7b50.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L3d7b54.  v0:= fcmpl(v0, v2);
  #L3d7b58.  if v0 == 0 then goto L3d7b78;
  #L3d7b5c.  v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float` := v2;
  #L3d7b60.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d7b66.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d7b6c.  v2:= temp;
  #L3d7b6e.  if v2 == 0 then goto L3d7b78;
  #L3d7b72.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d7b78.  return @kind void;
}
procedure `void` `setCloseIconSizeResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSizeResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7b8c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7b90.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d7b96.  v0:= temp @kind object;
  #L3d7b98.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L3d7b9e.  v2:= temp;
  #L3d7ba0.  call `setCloseIconSize`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @kind virtual;
  #L3d7ba6.  return @kind void;
}
procedure `void` `setCloseIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7bb8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L3d7bbc.  v0:= fcmpl(v0, v2);
  #L3d7bc0.  if v0 == 0 then goto L3d7be0;
  #L3d7bc4.  v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float` := v2;
  #L3d7bc8.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d7bce.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d7bd4.  v2:= temp;
  #L3d7bd6.  if v2 == 0 then goto L3d7be0;
  #L3d7bda.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d7be0.  return @kind void;
}
procedure `void` `setCloseIconStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7bf4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7bf8.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d7bfe.  v0:= temp @kind object;
  #L3d7c00.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L3d7c06.  v2:= temp;
  #L3d7c08.  call `setCloseIconStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @kind virtual;
  #L3d7c0e.  return @kind void;
}
procedure `boolean` `setCloseIconState`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int`[] v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconState:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5c08.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] @kind object;
  #L3d5c0c.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Arrays;.equals:([I[I)Z` @kind static;
  #L3d5c12.  v0:= temp;
  #L3d5c14.  if v0 != 0 then goto L3d5c3a;
  #L3d5c18.  v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] := v2 @kind object;
  #L3d5c1c.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d5c22.  v0:= temp;
  #L3d5c24.  if v0 == 0 then goto L3d5c3a;
  #L3d5c28.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3d5c2e.  v0:= temp @kind object;
  #L3d5c30.  call temp:= `onStateChange`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @kind direct;
  #L3d5c36.  v2:= temp;
  #L3d5c38.  return v2;
  #L3d5c3a.  v2:= 0I;
  #L3d5c3c.  return v2;
}
procedure `void` `setCloseIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7c20.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d7c24.  if v0 == v2 then goto L3d7c50;
  #L3d7c28.  v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L3d7c2c.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d7c32.  v0:= temp;
  #L3d7c34.  if v0 == 0 then goto L3d7c42;
  #L3d7c38.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d7c3c.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L3d7c42.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3d7c48.  v2:= temp @kind object;
  #L3d7c4a.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L3d7c50.  return @kind void;
}
procedure `void` `setCloseIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7c64.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7c68.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L3d7c6e.  v2:= temp @kind object;
  #L3d7c70.  call `setCloseIconTint`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3d7c76.  return @kind void;
}
procedure `void` `setCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7cec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7cf0.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d7cf6.  v0:= temp @kind object;
  #L3d7cf8.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L3d7cfe.  v2:= temp;
  #L3d7d00.  call `setCloseIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L3d7d06.  return @kind void;
}
procedure `void` `setCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7c88.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L3d7c8c.  if v0 == v2 then goto L3d7cd8;
  #L3d7c90.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d7c96.  v0:= temp;
  #L3d7c98.  v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` := v2 @kind boolean;
  #L3d7c9c.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d7ca2.  v2:= temp;
  #L3d7ca4.  if v0 == v2 then goto L3d7cac;
  #L3d7ca8.  v0:= 1I;
  #L3d7caa.  goto L3d7cae;
  #L3d7cac.  v0:= 0I;
  #L3d7cae.  if v0 == 0 then goto L3d7cd8;
  #L3d7cb2.  if v2 == 0 then goto L3d7cc2;
  #L3d7cb6.  v2:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d7cba.  call `applyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L3d7cc0.  goto L3d7ccc;
  #L3d7cc2.  v2:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d7cc6.  call `unapplyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L3d7ccc.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d7cd2.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d7cd8.  return @kind void;
}
procedure `void` `setColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7d18.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L3d7d1c.  if v0 == v2 then goto L3d7d2a;
  #L3d7d20.  v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` := v2 @kind object;
  #L3d7d24.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d7d2a.  return @kind void;
}
procedure `void` `setDelegate`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `com.google.android.material.chip.ChipDrawable$Delegate` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setDelegate:(Lcom/google/android/material/chip/ChipDrawable$Delegate;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7d3c.  v0:= new `java.lang.ref.WeakReference`;
  #L3d7d40.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3d7d46.  v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L3d7d4a.  return @kind void;
}
procedure `void` `setEllipsize`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.text.TextUtils$TruncateAt` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @AccessFlag PUBLIC {
    temp;

  #L3d7d5c.  v0.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` := v1 @kind object;
  #L3d7d60.  return @kind void;
}
procedure `void` `setHideMotionSpec`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `com.google.android.material.animation.MotionSpec` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @AccessFlag PUBLIC {
    temp;

  #L3d7d74.  v0.`com.google.android.material.chip.ChipDrawable.hideMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` := v1 @kind object;
  #L3d7d78.  return @kind void;
}
procedure `void` `setHideMotionSpecResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpecResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7d8c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7d90.  call temp:= `createFromResource`(v0, v2) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L3d7d96.  v2:= temp @kind object;
  #L3d7d98.  call `setHideMotionSpec`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L3d7d9e.  return @kind void;
}
procedure `void` `setIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7db0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L3d7db4.  v0:= fcmpl(v0, v2);
  #L3d7db8.  if v0 == 0 then goto L3d7de4;
  #L3d7dbc.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d7dc2.  v0:= temp;
  #L3d7dc4.  v1.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float` := v2;
  #L3d7dc8.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d7dce.  v2:= temp;
  #L3d7dd0.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d7dd6.  v2:= fcmpl(v0, v2);
  #L3d7dda.  if v2 == 0 then goto L3d7de4;
  #L3d7dde.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d7de4.  return @kind void;
}
procedure `void` `setIconEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7df8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7dfc.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d7e02.  v0:= temp @kind object;
  #L3d7e04.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L3d7e0a.  v2:= temp;
  #L3d7e0c.  call `setIconEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @kind virtual;
  #L3d7e12.  return @kind void;
}
procedure `void` `setIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7e24.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L3d7e28.  v0:= fcmpl(v0, v2);
  #L3d7e2c.  if v0 == 0 then goto L3d7e58;
  #L3d7e30.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d7e36.  v0:= temp;
  #L3d7e38.  v1.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float` := v2;
  #L3d7e3c.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L3d7e42.  v2:= temp;
  #L3d7e44.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d7e4a.  v2:= fcmpl(v0, v2);
  #L3d7e4e.  if v2 == 0 then goto L3d7e58;
  #L3d7e52.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d7e58.  return @kind void;
}
procedure `void` `setIconStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7e6c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7e70.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d7e76.  v0:= temp @kind object;
  #L3d7e78.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L3d7e7e.  v2:= temp;
  #L3d7e80.  call `setIconStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @kind virtual;
  #L3d7e86.  return @kind void;
}
procedure `void` `setMaxWidth`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setMaxWidth:(I)V` @AccessFlag PUBLIC {
    temp;

  #L3d7e98.  v0.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int` := v1;
  #L3d7e9c.  return @kind void;
}
procedure `void` `setRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7eb0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d7eb4.  if v0 == v2 then goto L3d7ed0;
  #L3d7eb8.  v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L3d7ebc.  call `updateCompatRippleColor`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @kind direct;
  #L3d7ec2.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3d7ec8.  v2:= temp @kind object;
  #L3d7eca.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L3d7ed0.  return @kind void;
}
procedure `void` `setRippleColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7ee4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7ee8.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L3d7eee.  v2:= temp @kind object;
  #L3d7ef0.  call `setRippleColor`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L3d7ef6.  return @kind void;
}
procedure `void` `setShouldDrawText`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShouldDrawText:(Z)V` @AccessFlag  {
    temp;

  #L3d7f08.  v0.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` := v1 @kind boolean;
  #L3d7f0c.  return @kind void;
}
procedure `void` `setShowMotionSpec`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `com.google.android.material.animation.MotionSpec` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @AccessFlag PUBLIC {
    temp;

  #L3d7f20.  v0.`com.google.android.material.chip.ChipDrawable.showMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` := v1 @kind object;
  #L3d7f24.  return @kind void;
}
procedure `void` `setShowMotionSpecResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpecResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7f38.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7f3c.  call temp:= `createFromResource`(v0, v2) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L3d7f42.  v2:= temp @kind object;
  #L3d7f44.  call `setShowMotionSpec`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L3d7f4a.  return @kind void;
}
procedure `void` `setText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7f5c.  if v2 != 0 then goto L3d7f64;
  #L3d7f60.  v2:= "" @kind object;
  #L3d7f64.  v0:= v1.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L3d7f68.  call temp:= `equals`(v0, v2) @signature `Landroid/text/TextUtils;.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @kind static;
  #L3d7f6e.  v0:= temp;
  #L3d7f70.  if v0 != 0 then goto L3d7f90;
  #L3d7f74.  v1.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` := v2 @kind object;
  #L3d7f78.  v2:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d7f7c.  v0:= 1I;
  #L3d7f7e.  call `setTextWidthDirty`(v2, v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextWidthDirty:(Z)V` @kind virtual;
  #L3d7f84.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d7f8a.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d7f90.  return @kind void;
}
procedure `void` `setTextAppearance`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `com.google.android.material.resources.TextAppearance` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d7fa4.  v0:= v2.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d7fa8.  v1:= v2.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7fac.  call `setTextAppearance`(v0, v3, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;Landroid/content/Context;)V` @kind virtual;
  #L3d7fb2.  return @kind void;
}
procedure `void` `setTextAppearanceResource`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearanceResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d7fc4.  v0:= new `com.google.android.material.resources.TextAppearance`;
  #L3d7fc8.  v1:= v2.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d7fcc.  call `<init>`(v0, v1, v3) @signature `Lcom/google/android/material/resources/TextAppearance;.<init>:(Landroid/content/Context;I)V` @kind direct;
  #L3d7fd2.  call `setTextAppearance`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind virtual;
  #L3d7fd8.  return @kind void;
}
procedure `void` `setTextEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7fec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L3d7ff0.  v0:= fcmpl(v0, v2);
  #L3d7ff4.  if v0 == 0 then goto L3d8008;
  #L3d7ff8.  v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float` := v2;
  #L3d7ffc.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d8002.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d8008.  return @kind void;
}
procedure `void` `setTextEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d801c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d8020.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d8026.  v0:= temp @kind object;
  #L3d8028.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L3d802e.  v2:= temp;
  #L3d8030.  call `setTextEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @kind virtual;
  #L3d8036.  return @kind void;
}
procedure `void` `setTextResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8048.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d804c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d8052.  v0:= temp @kind object;
  #L3d8054.  call temp:= `getString`(v0, v2) @signature `Landroid/content/res/Resources;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L3d805a.  v2:= temp @kind object;
  #L3d805c.  call `setText`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L3d8062.  return @kind void;
}
procedure `void` `setTextSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8074.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L3d807a.  v0:= temp @kind object;
  #L3d807c.  if v0 == 0 then goto L3d809c;
  #L3d8080.  v0.`com.google.android.material.resources.TextAppearance.textSize` @type ^`float` := v2;
  #L3d8084.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L3d8088.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L3d808e.  v0:= temp @kind object;
  #L3d8090.  call `setTextSize`(v0, v2) @signature `Landroid/text/TextPaint;.setTextSize:(F)V` @kind virtual;
  #L3d8096.  call `onTextSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onTextSizeChange:()V` @kind virtual;
  #L3d809c.  return @kind void;
}
procedure `void` `setTextStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d80b0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L3d80b4.  v0:= fcmpl(v0, v2);
  #L3d80b8.  if v0 == 0 then goto L3d80cc;
  #L3d80bc.  v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float` := v2;
  #L3d80c0.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d80c6.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L3d80cc.  return @kind void;
}
procedure `void` `setTextStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d80e0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L3d80e4.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d80ea.  v0:= temp @kind object;
  #L3d80ec.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L3d80f2.  v2:= temp;
  #L3d80f4.  call `setTextStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @kind virtual;
  #L3d80fa.  return @kind void;
}
procedure `void` `setTintList`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d810c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d8110.  if v0 == v2 then goto L3d8126;
  #L3d8114.  v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L3d8118.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3d811e.  v2:= temp @kind object;
  #L3d8120.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L3d8126.  return @kind void;
}
procedure `void` `setTintMode`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.PorterDuff$Mode` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8138.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3d813c.  if v0 == v2 then goto L3d815a;
  #L3d8140.  v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v2 @kind object;
  #L3d8144.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L3d8148.  call temp:= `updateTintFilter`(v1, v0, v2) @signature `Lcom/google/android/material/drawable/DrawableUtils;.updateTintFilter:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @kind static;
  #L3d814e.  v2:= temp @kind object;
  #L3d8150.  v1.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v2 @kind object;
  #L3d8154.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d815a.  return @kind void;
}
procedure `void` `setUseCompatRipple`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setUseCompatRipple:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d816c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L3d8170.  if v0 == v2 then goto L3d818c;
  #L3d8174.  v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` := v2 @kind boolean;
  #L3d8178.  call `updateCompatRippleColor`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @kind direct;
  #L3d817e.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L3d8184.  v2:= temp @kind object;
  #L3d8186.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L3d818c.  return @kind void;
}
procedure `boolean` `setVisible`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `boolean` v3 , `boolean` v4 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setVisible:(ZZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d5c50.  call temp:= `setVisible`(v2, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind super;
  #L3d5c56.  v0:= temp;
  #L3d5c58.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L3d5c5e.  v1:= temp;
  #L3d5c60.  if v1 == 0 then goto L3d5c72;
  #L3d5c64.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5c68.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L3d5c6e.  v1:= temp;
  #L3d5c70.  v0:= v0 ^| v1 @kind int;
  #L3d5c72.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L3d5c78.  v1:= temp;
  #L3d5c7a.  if v1 == 0 then goto L3d5c8c;
  #L3d5c7e.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5c82.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L3d5c88.  v1:= temp;
  #L3d5c8a.  v0:= v0 ^| v1 @kind int;
  #L3d5c8c.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L3d5c92.  v1:= temp;
  #L3d5c94.  if v1 == 0 then goto L3d5ca6;
  #L3d5c98.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3d5c9c.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L3d5ca2.  v3:= temp;
  #L3d5ca4.  v0:= v0 ^| v3 @kind int;
  #L3d5ca6.  if v0 == 0 then goto L3d5cb0;
  #L3d5caa.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L3d5cb0.  return v0;
}
procedure `boolean` `shouldDrawText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.shouldDrawText:()Z` @AccessFlag  {
    temp;
    v0;

  #L3d5cc4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` @kind boolean;
  #L3d5cc8.  return v0;
}
procedure `void` `unscheduleDrawable`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.unscheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;

  #L3d81c0.  call temp:= `getCallback`(v0) @signature `Landroid/graphics/drawable/Drawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L3d81c6.  v1:= temp @kind object;
  #L3d81c8.  if v1 == 0 then goto L3d81d2;
  #L3d81cc.  call `unscheduleDrawable`(v1, v0, v2) @signature `Landroid/graphics/drawable/Drawable$Callback;.unscheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V` @kind interface;
  #L3d81d2.  return @kind void;
}
