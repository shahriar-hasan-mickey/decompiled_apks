record `com.google.android.material.appbar.ViewOffsetHelper` @kind class @AccessFlag  {
  `boolean` `com.google.android.material.appbar.ViewOffsetHelper.horizontalOffsetEnabled` @AccessFlag PRIVATE;
  `int` `com.google.android.material.appbar.ViewOffsetHelper.layoutLeft` @AccessFlag PRIVATE;
  `int` `com.google.android.material.appbar.ViewOffsetHelper.layoutTop` @AccessFlag PRIVATE;
  `int` `com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @AccessFlag PRIVATE;
  `int` `com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.appbar.ViewOffsetHelper.verticalOffsetEnabled` @AccessFlag PRIVATE;
  `android.view.View` `com.google.android.material.appbar.ViewOffsetHelper.view` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this, `android.view.View` v2 @kind object) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.<init>:(Landroid/view/View;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c8a90.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c8a96.  v0:= 1I;
  #L3c8a98.  v1.`com.google.android.material.appbar.ViewOffsetHelper.verticalOffsetEnabled` @type ^`boolean` := v0 @kind boolean;
  #L3c8a9c.  v1.`com.google.android.material.appbar.ViewOffsetHelper.horizontalOffsetEnabled` @type ^`boolean` := v0 @kind boolean;
  #L3c8aa0.  v1.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` := v2 @kind object;
  #L3c8aa4.  return @kind void;
}
procedure `void` `applyOffsets`(`com.google.android.material.appbar.ViewOffsetHelper` v4 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.applyOffsets:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c8ab8.  v0:= v4.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` @kind object;
  #L3c8abc.  v1:= v4.`com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @type ^`int`;
  #L3c8ac0.  call temp:= `getTop`(v0) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3c8ac6.  v2:= temp;
  #L3c8ac8.  v3:= v4.`com.google.android.material.appbar.ViewOffsetHelper.layoutTop` @type ^`int`;
  #L3c8acc.  v2:= v2 - v3 @kind int;
  #L3c8ace.  v1:= v1 - v2 @kind int;
  #L3c8ad0.  call `offsetTopAndBottom`(v0, v1) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L3c8ad6.  v0:= v4.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` @kind object;
  #L3c8ada.  v1:= v4.`com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @type ^`int`;
  #L3c8ade.  call temp:= `getLeft`(v0) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L3c8ae4.  v2:= temp;
  #L3c8ae6.  v3:= v4.`com.google.android.material.appbar.ViewOffsetHelper.layoutLeft` @type ^`int`;
  #L3c8aea.  v2:= v2 - v3 @kind int;
  #L3c8aec.  v1:= v1 - v2 @kind int;
  #L3c8aee.  call `offsetLeftAndRight`(v0, v1) @signature `Landroidx/core/view/ViewCompat;.offsetLeftAndRight:(Landroid/view/View;I)V` @kind static;
  #L3c8af4.  return @kind void;
}
procedure `int` `getLayoutLeft`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.getLayoutLeft:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c8a30.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.layoutLeft` @type ^`int`;
  #L3c8a34.  return v0;
}
procedure `int` `getLayoutTop`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.getLayoutTop:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c8a48.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.layoutTop` @type ^`int`;
  #L3c8a4c.  return v0;
}
procedure `int` `getLeftAndRightOffset`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.getLeftAndRightOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c8a60.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @type ^`int`;
  #L3c8a64.  return v0;
}
procedure `int` `getTopAndBottomOffset`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.getTopAndBottomOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c8a78.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @type ^`int`;
  #L3c8a7c.  return v0;
}
procedure `boolean` `isHorizontalOffsetEnabled`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.isHorizontalOffsetEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c8998.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.horizontalOffsetEnabled` @type ^`boolean` @kind boolean;
  #L3c899c.  return v0;
}
procedure `boolean` `isVerticalOffsetEnabled`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.isVerticalOffsetEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c89b0.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.verticalOffsetEnabled` @type ^`boolean` @kind boolean;
  #L3c89b4.  return v0;
}
procedure `void` `onViewLayout`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.onViewLayout:()V` @AccessFlag  {
    temp;
    v0;

  #L3c8b08.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` @kind object;
  #L3c8b0c.  call temp:= `getTop`(v0) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3c8b12.  v0:= temp;
  #L3c8b14.  v1.`com.google.android.material.appbar.ViewOffsetHelper.layoutTop` @type ^`int` := v0;
  #L3c8b18.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.view` @type ^`android.view.View` @kind object;
  #L3c8b1c.  call temp:= `getLeft`(v0) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L3c8b22.  v0:= temp;
  #L3c8b24.  v1.`com.google.android.material.appbar.ViewOffsetHelper.layoutLeft` @type ^`int` := v0;
  #L3c8b28.  return @kind void;
}
procedure `void` `setHorizontalOffsetEnabled`(`com.google.android.material.appbar.ViewOffsetHelper` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.setHorizontalOffsetEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3c8b3c.  v0.`com.google.android.material.appbar.ViewOffsetHelper.horizontalOffsetEnabled` @type ^`boolean` := v1 @kind boolean;
  #L3c8b40.  return @kind void;
}
procedure `boolean` `setLeftAndRightOffset`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.setLeftAndRightOffset:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c89c8.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.horizontalOffsetEnabled` @type ^`boolean` @kind boolean;
  #L3c89cc.  if v0 == 0 then goto L3c89e6;
  #L3c89d0.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @type ^`int`;
  #L3c89d4.  if v0 == v2 then goto L3c89e6;
  #L3c89d8.  v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetLeft` @type ^`int` := v2;
  #L3c89dc.  call `applyOffsets`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.applyOffsets:()V` @kind virtual;
  #L3c89e2.  v2:= 1I;
  #L3c89e4.  return v2;
  #L3c89e6.  v2:= 0I;
  #L3c89e8.  return v2;
}
procedure `boolean` `setTopAndBottomOffset`(`com.google.android.material.appbar.ViewOffsetHelper` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.setTopAndBottomOffset:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c89fc.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.verticalOffsetEnabled` @type ^`boolean` @kind boolean;
  #L3c8a00.  if v0 == 0 then goto L3c8a1a;
  #L3c8a04.  v0:= v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @type ^`int`;
  #L3c8a08.  if v0 == v2 then goto L3c8a1a;
  #L3c8a0c.  v1.`com.google.android.material.appbar.ViewOffsetHelper.offsetTop` @type ^`int` := v2;
  #L3c8a10.  call `applyOffsets`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.applyOffsets:()V` @kind virtual;
  #L3c8a16.  v2:= 1I;
  #L3c8a18.  return v2;
  #L3c8a1a.  v2:= 0I;
  #L3c8a1c.  return v2;
}
procedure `void` `setVerticalOffsetEnabled`(`com.google.android.material.appbar.ViewOffsetHelper` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/appbar/ViewOffsetHelper;.setVerticalOffsetEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3c8b54.  v0.`com.google.android.material.appbar.ViewOffsetHelper.verticalOffsetEnabled` @type ^`boolean` := v1 @kind boolean;
  #L3c8b58.  return @kind void;
}
