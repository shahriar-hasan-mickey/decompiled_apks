record `com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` @kind class @AccessFlag PUBLIC extends `com.google.android.material.appbar.HeaderScrollingViewBehavior` @kind class {
}
procedure `void` `<init>`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3c4ad8.  call `<init>`(v0) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.<init>:()V` @kind direct;
  #L3c4ade.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c4af0.  call `<init>`(v1, v2, v3) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L3c4af6.  v0:= `@@com.google.android.material.R$styleable.ScrollingViewBehavior_Layout` @type ^`int`[] @kind object;
  #L3c4afa.  call temp:= `obtainStyledAttributes`(v2, v3, v0) @signature `Landroid/content/Context;.obtainStyledAttributes:(Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;` @kind virtual;
  #L3c4b00.  v2:= temp @kind object;
  #L3c4b02.  v3:= `@@com.google.android.material.R$styleable.ScrollingViewBehavior_Layout_behavior_overlapTop` @type ^`int`;
  #L3c4b06.  v0:= 0I;
  #L3c4b08.  call temp:= `getDimensionPixelSize`(v2, v3, v0) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L3c4b0e.  v3:= temp;
  #L3c4b10.  call `setOverlayTop`(v1, v3) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.setOverlayTop:(I)V` @kind virtual;
  #L3c4b16.  call `recycle`(v2) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L3c4b1c.  return @kind void;
}
procedure `int` `getAppBarLayoutOffset`(`com.google.android.material.appbar.AppBarLayout` v1 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getAppBarLayoutOffset:(Lcom/google/android/material/appbar/AppBarLayout;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3c4a30.  call temp:= `getLayoutParams`(v1) @signature `Landroid/widget/LinearLayout;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L3c4a36.  v1:= temp @kind object;
  #L3c4a38.  v1:= (`androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams`) v1 @kind object;
  #L3c4a3c.  call temp:= `getBehavior`(v1) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$LayoutParams;.getBehavior:()Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;` @kind virtual;
  #L3c4a42.  v1:= temp @kind object;
  #L3c4a44.  v0:= instanceof @variable v1 @type ^`com.google.android.material.appbar.AppBarLayout$BaseBehavior` @kind boolean;
  #L3c4a48.  if v0 == 0 then goto L3c4a5a;
  #L3c4a4c.  v1:= (`com.google.android.material.appbar.AppBarLayout$BaseBehavior`) v1 @kind object;
  #L3c4a50.  call temp:= `getTopBottomOffsetForScrollingSibling`(v1) @signature `Lcom/google/android/material/appbar/AppBarLayout$BaseBehavior;.getTopBottomOffsetForScrollingSibling:()I` @kind virtual;
  #L3c4a56.  v1:= temp;
  #L3c4a58.  return v1;
  #L3c4a5a.  v1:= 0I;
  #L3c4a5c.  return v1;
}
procedure `void` `offsetChildAsNeeded`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v3 @kind this, `android.view.View` v4 @kind object, `android.view.View` v5 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.offsetChildAsNeeded:(Landroid/view/View;Landroid/view/View;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3c4b30.  call temp:= `getLayoutParams`(v5) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L3c4b36.  v0:= temp @kind object;
  #L3c4b38.  v0:= (`androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams`) v0 @kind object;
  #L3c4b3c.  call temp:= `getBehavior`(v0) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$LayoutParams;.getBehavior:()Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;` @kind virtual;
  #L3c4b42.  v0:= temp @kind object;
  #L3c4b44.  v1:= instanceof @variable v0 @type ^`com.google.android.material.appbar.AppBarLayout$BaseBehavior` @kind boolean;
  #L3c4b48.  if v1 == 0 then goto L3c4b86;
  #L3c4b4c.  v0:= (`com.google.android.material.appbar.AppBarLayout$BaseBehavior`) v0 @kind object;
  #L3c4b50.  call temp:= `getBottom`(v5) @signature `Landroid/view/View;.getBottom:()I` @kind virtual;
  #L3c4b56.  v1:= temp;
  #L3c4b58.  call temp:= `getTop`(v4) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3c4b5e.  v2:= temp;
  #L3c4b60.  v1:= v1 - v2 @kind int;
  #L3c4b62.  call temp:= `access$000`(v0) @signature `Lcom/google/android/material/appbar/AppBarLayout$BaseBehavior;.access$000:(Lcom/google/android/material/appbar/AppBarLayout$BaseBehavior;)I` @kind static;
  #L3c4b68.  v0:= temp;
  #L3c4b6a.  v1:= v1 + v0 @kind int;
  #L3c4b6c.  call temp:= `getVerticalLayoutGap`(v3) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getVerticalLayoutGap:()I` @kind virtual;
  #L3c4b72.  v0:= temp;
  #L3c4b74.  v1:= v1 + v0 @kind int;
  #L3c4b76.  call temp:= `getOverlapPixelsForOffset`(v3, v5) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getOverlapPixelsForOffset:(Landroid/view/View;)I` @kind virtual;
  #L3c4b7c.  v5:= temp;
  #L3c4b7e.  v1:= v1 - v5 @kind int;
  #L3c4b80.  call `offsetTopAndBottom`(v4, v1) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L3c4b86.  return @kind void;
}
procedure `void` `updateLiftedStateIfNeeded`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this, `android.view.View` v2 @kind object, `android.view.View` v3 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.updateLiftedStateIfNeeded:(Landroid/view/View;Landroid/view/View;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3c4c08.  v0:= instanceof @variable v3 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L3c4c0c.  if v0 == 0 then goto L3c4c2e;
  #L3c4c10.  v3:= (`com.google.android.material.appbar.AppBarLayout`) v3 @kind object;
  #L3c4c14.  call temp:= `isLiftOnScroll`(v3) @signature `Lcom/google/android/material/appbar/AppBarLayout;.isLiftOnScroll:()Z` @kind virtual;
  #L3c4c1a.  v0:= temp;
  #L3c4c1c.  if v0 == 0 then goto L3c4c2e;
  #L3c4c20.  call temp:= `shouldLift`(v3, v2) @signature `Lcom/google/android/material/appbar/AppBarLayout;.shouldLift:(Landroid/view/View;)Z` @kind virtual;
  #L3c4c26.  v2:= temp;
  #L3c4c28.  call temp:= `setLiftedState`(v3, v2) @signature `Lcom/google/android/material/appbar/AppBarLayout;.setLiftedState:(Z)Z` @kind virtual;
  #L3c4c2e.  return @kind void;
}
procedure `android.view.View` `findFirstDependency`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Landroid/view/View;` @AccessFlag SYNTHETIC {
    temp;

  #L3c4820.  call temp:= `findFirstDependency`(v0, v1) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Lcom/google/android/material/appbar/AppBarLayout;` @kind virtual;
  #L3c4826.  v1:= temp @kind object;
  #L3c4828.  return v1 @kind object;
}
procedure `com.google.android.material.appbar.AppBarLayout` `findFirstDependency`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Lcom/google/android/material/appbar/AppBarLayout;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c4990.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3c4996.  v0:= temp;
  #L3c4998.  v1:= 0I;
  #L3c499a.  if v1 >= v0 then goto L3c49be;
  #L3c499e.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3c49a4.  v2:= temp @kind object;
  #L3c49a6.  v2:= (`android.view.View`) v2 @kind object;
  #L3c49aa.  v3:= instanceof @variable v2 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L3c49ae.  if v3 == 0 then goto L3c49b8;
  #L3c49b2.  v2:= (`com.google.android.material.appbar.AppBarLayout`) v2 @kind object;
  #L3c49b6.  return v2 @kind object;
  #L3c49b8.  v1:= v1 + 1;
  #L3c49bc.  goto L3c499a;
  #L3c49be.  v5:= 0I;
  #L3c49c0.  return v5 @kind object;
}
procedure `int` `getLeftAndRightOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getLeftAndRightOffset:()I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3c4a70.  call temp:= `getLeftAndRightOffset`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.getLeftAndRightOffset:()I` @kind super;
  #L3c4a76.  v0:= temp;
  #L3c4a78.  return v0;
}
procedure `float` `getOverlapRatioForOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v4 @kind this, `android.view.View` v5 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getOverlapRatioForOffset:(Landroid/view/View;)F` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c49d4.  v0:= instanceof @variable v5 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L3c49d8.  v1:= 0I;
  #L3c49da.  if v0 == 0 then goto L3c4a1c;
  #L3c49de.  v5:= (`com.google.android.material.appbar.AppBarLayout`) v5 @kind object;
  #L3c49e2.  call temp:= `getTotalScrollRange`(v5) @signature `Lcom/google/android/material/appbar/AppBarLayout;.getTotalScrollRange:()I` @kind virtual;
  #L3c49e8.  v0:= temp;
  #L3c49ea.  call temp:= `getDownNestedPreScrollRange`(v5) @signature `Lcom/google/android/material/appbar/AppBarLayout;.getDownNestedPreScrollRange:()I` @kind virtual;
  #L3c49f0.  v2:= temp;
  #L3c49f2.  call temp:= `getAppBarLayoutOffset`(v5) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getAppBarLayoutOffset:(Lcom/google/android/material/appbar/AppBarLayout;)I` @kind static;
  #L3c49f8.  v5:= temp;
  #L3c49fa.  if v2 == 0 then goto L3c4a08;
  #L3c49fe.  v3:= v0 + v5 @kind int;
  #L3c4a02.  if v3 > v2 then goto L3c4a08;
  #L3c4a06.  return v1;
  #L3c4a08.  v0:= v0 - v2 @kind int;
  #L3c4a0a.  if v0 == 0 then goto L3c4a1c;
  #L3c4a0e.  v1:= 1.0F;
  #L3c4a12.  v5:= (`float`) v5 @kind i2f;
  #L3c4a14.  v0:= (`float`) v0 @kind i2f;
  #L3c4a16.  v5:= v5 / v0 @kind float;
  #L3c4a18.  v5:= v5 + v1 @kind float;
  #L3c4a1a.  return v5;
  #L3c4a1c.  return v1;
}
procedure `int` `getScrollRange`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this, `android.view.View` v2 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getScrollRange:(Landroid/view/View;)I` @AccessFlag  {
    temp;
    v0;

  #L3c4a8c.  v0:= instanceof @variable v2 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L3c4a90.  if v0 == 0 then goto L3c4aa2;
  #L3c4a94.  v2:= (`com.google.android.material.appbar.AppBarLayout`) v2 @kind object;
  #L3c4a98.  call temp:= `getTotalScrollRange`(v2) @signature `Lcom/google/android/material/appbar/AppBarLayout;.getTotalScrollRange:()I` @kind virtual;
  #L3c4a9e.  v2:= temp;
  #L3c4aa0.  return v2;
  #L3c4aa2.  call temp:= `getScrollRange`(v1, v2) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getScrollRange:(Landroid/view/View;)I` @kind super;
  #L3c4aa8.  v2:= temp;
  #L3c4aaa.  return v2;
}
procedure `int` `getTopAndBottomOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getTopAndBottomOffset:()I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3c4abc.  call temp:= `getTopAndBottomOffset`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.getTopAndBottomOffset:()I` @kind super;
  #L3c4ac2.  v0:= temp;
  #L3c4ac4.  return v0;
}
procedure `boolean` `isHorizontalOffsetEnabled`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.isHorizontalOffsetEnabled:()Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3c483c.  call temp:= `isHorizontalOffsetEnabled`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.isHorizontalOffsetEnabled:()Z` @kind super;
  #L3c4842.  v0:= temp;
  #L3c4844.  return v0;
}
procedure `boolean` `isVerticalOffsetEnabled`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.isVerticalOffsetEnabled:()Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3c4858.  call temp:= `isVerticalOffsetEnabled`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.isVerticalOffsetEnabled:()Z` @kind super;
  #L3c485e.  v0:= temp;
  #L3c4860.  return v0;
}
procedure `boolean` `layoutDependsOn`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v1 @kind object, `android.view.View` v2 @kind object, `android.view.View` v3 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.layoutDependsOn:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z` @AccessFlag PUBLIC {
    temp;

  #L3c4874.  v1:= instanceof @variable v3 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L3c4878.  return v1;
}
procedure `boolean` `onDependentViewChanged`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v1 @kind object, `android.view.View` v2 @kind object, `android.view.View` v3 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onDependentViewChanged:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z` @AccessFlag PUBLIC {
    temp;

  #L3c488c.  call `offsetChildAsNeeded`(v0, v2, v3) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.offsetChildAsNeeded:(Landroid/view/View;Landroid/view/View;)V` @kind direct;
  #L3c4892.  call `updateLiftedStateIfNeeded`(v0, v2, v3) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.updateLiftedStateIfNeeded:(Landroid/view/View;Landroid/view/View;)V` @kind direct;
  #L3c4898.  v1:= 0I;
  #L3c489a.  return v1;
}
procedure `void` `onDependentViewRemoved`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v1 @kind object, `android.view.View` v2 @kind object, `android.view.View` v3 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onDependentViewRemoved:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)V` @AccessFlag PUBLIC {
    temp;

  #L3c4b98.  v2:= instanceof @variable v3 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L3c4b9c.  if v2 == 0 then goto L3c4bc4;
  #L3c4ba0.  v2:= `@@androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.ACTION_SCROLL_FORWARD` @type ^`androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat` @kind object;
  #L3c4ba4.  call temp:= `getId`(v2) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;.getId:()I` @kind virtual;
  #L3c4baa.  v2:= temp;
  #L3c4bac.  call `removeAccessibilityAction`(v1, v2) @signature `Landroidx/core/view/ViewCompat;.removeAccessibilityAction:(Landroid/view/View;I)V` @kind static;
  #L3c4bb2.  v2:= `@@androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.ACTION_SCROLL_BACKWARD` @type ^`androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat` @kind object;
  #L3c4bb6.  call temp:= `getId`(v2) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;.getId:()I` @kind virtual;
  #L3c4bbc.  v2:= temp;
  #L3c4bbe.  call `removeAccessibilityAction`(v1, v2) @signature `Landroidx/core/view/ViewCompat;.removeAccessibilityAction:(Landroid/view/View;I)V` @kind static;
  #L3c4bc4.  return @kind void;
}
procedure `boolean` `onLayoutChild`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v1 @kind object, `android.view.View` v2 @kind object, `int` v3 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onLayoutChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;I)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c48ac.  call temp:= `onLayoutChild`(v0, v1, v2, v3) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.onLayoutChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;I)Z` @kind super;
  #L3c48b2.  v1:= temp;
  #L3c48b4.  return v1;
}
procedure `boolean` `onMeasureChild`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v1 @kind object, `android.view.View` v2 @kind object, `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onMeasureChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;IIII)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c48c8.  call temp:= `onMeasureChild`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.onMeasureChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;IIII)Z` @kind super;
  #L3c48ce.  v1:= temp;
  #L3c48d0.  return v1;
}
procedure `boolean` `onRequestChildRectangleOnScreen`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v3 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v4 @kind object, `android.view.View` v5 @kind object, `android.graphics.Rect` v6 @kind object, `boolean` v7 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onRequestChildRectangleOnScreen:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/graphics/Rect;Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3c48e4.  call temp:= `getDependencies`(v4, v5) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.getDependencies:(Landroid/view/View;)Ljava/util/List;` @kind virtual;
  #L3c48ea.  v0:= temp @kind object;
  #L3c48ec.  call temp:= `findFirstDependency`(v3, v0) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Lcom/google/android/material/appbar/AppBarLayout;` @kind virtual;
  #L3c48f2.  v0:= temp @kind object;
  #L3c48f4.  v1:= 0I;
  #L3c48f6.  if v0 == 0 then goto L3c4944;
  #L3c48fa.  call temp:= `getLeft`(v5) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L3c4900.  v2:= temp;
  #L3c4902.  call temp:= `getTop`(v5) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L3c4908.  v5:= temp;
  #L3c490a.  call `offset`(v6, v2, v5) @signature `Landroid/graphics/Rect;.offset:(II)V` @kind virtual;
  #L3c4910.  v5:= v3.`com.google.android.material.appbar.HeaderScrollingViewBehavior.tempRect1` @type ^`android.graphics.Rect` @kind object;
  #L3c4914.  call temp:= `getWidth`(v4) @signature `Landroid/view/ViewGroup;.getWidth:()I` @kind virtual;
  #L3c491a.  v2:= temp;
  #L3c491c.  call temp:= `getHeight`(v4) @signature `Landroid/view/ViewGroup;.getHeight:()I` @kind virtual;
  #L3c4922.  v4:= temp;
  #L3c4924.  call `set`(v5, v1, v1, v2, v4) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L3c492a.  call temp:= `contains`(v5, v6) @signature `Landroid/graphics/Rect;.contains:(Landroid/graphics/Rect;)Z` @kind virtual;
  #L3c4930.  v4:= temp;
  #L3c4932.  if v4 != 0 then goto L3c4944;
  #L3c4936.  v4:= 1I;
  #L3c4938.  v5:= v7 ^~ 1;
  #L3c493c.  call `setExpanded`(v0, v1, v5) @signature `Lcom/google/android/material/appbar/AppBarLayout;.setExpanded:(ZZ)V` @kind virtual;
  #L3c4942.  return v4;
  #L3c4944.  return v1;
}
procedure `void` `setHorizontalOffsetEnabled`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.setHorizontalOffsetEnabled:(Z)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c4bd8.  call `setHorizontalOffsetEnabled`(v0, v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.setHorizontalOffsetEnabled:(Z)V` @kind super;
  #L3c4bde.  return @kind void;
}
procedure `boolean` `setLeftAndRightOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.setLeftAndRightOffset:(I)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c4958.  call temp:= `setLeftAndRightOffset`(v0, v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.setLeftAndRightOffset:(I)Z` @kind super;
  #L3c495e.  v1:= temp;
  #L3c4960.  return v1;
}
procedure `boolean` `setTopAndBottomOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.setTopAndBottomOffset:(I)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c4974.  call temp:= `setTopAndBottomOffset`(v0, v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.setTopAndBottomOffset:(I)Z` @kind super;
  #L3c497a.  v1:= temp;
  #L3c497c.  return v1;
}
procedure `void` `setVerticalOffsetEnabled`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.setVerticalOffsetEnabled:(Z)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c4bf0.  call `setVerticalOffsetEnabled`(v0, v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.setVerticalOffsetEnabled:(Z)V` @kind super;
  #L3c4bf6.  return @kind void;
}
