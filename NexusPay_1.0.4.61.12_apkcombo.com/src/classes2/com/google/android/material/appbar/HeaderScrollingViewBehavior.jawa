record `com.google.android.material.appbar.HeaderScrollingViewBehavior` @kind class @AccessFlag ABSTRACT extends `com.google.android.material.appbar.ViewOffsetBehavior` @kind class {
  `int` `com.google.android.material.appbar.HeaderScrollingViewBehavior.overlayTop` @AccessFlag PRIVATE;
  `android.graphics.Rect` `com.google.android.material.appbar.HeaderScrollingViewBehavior.tempRect1` @AccessFlag FINAL;
  `android.graphics.Rect` `com.google.android.material.appbar.HeaderScrollingViewBehavior.tempRect2` @AccessFlag FINAL;
  `int` `com.google.android.material.appbar.HeaderScrollingViewBehavior.verticalLayoutGap` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.android.material.appbar.HeaderScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c8118.  call `<init>`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.<init>:()V` @kind direct;
  #L3c811e.  v0:= new `android.graphics.Rect`;
  #L3c8122.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L3c8128.  v1.`com.google.android.material.appbar.HeaderScrollingViewBehavior.tempRect1` @type ^`android.graphics.Rect` := v0 @kind object;
  #L3c812c.  v0:= new `android.graphics.Rect`;
  #L3c8130.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L3c8136.  v1.`com.google.android.material.appbar.HeaderScrollingViewBehavior.tempRect2` @type ^`android.graphics.Rect` := v0 @kind object;
  #L3c813a.  v0:= 0I;
  #L3c813c.  v1.`com.google.android.material.appbar.HeaderScrollingViewBehavior.verticalLayoutGap` @type ^`int` := v0;
  #L3c8140.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.appbar.HeaderScrollingViewBehavior` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3c8154.  call `<init>`(v0, v1, v2) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L3c815a.  v1:= new `android.graphics.Rect`;
  #L3c815e.  call `<init>`(v1) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L3c8164.  v0.`com.google.android.material.appbar.HeaderScrollingViewBehavior.tempRect1` @type ^`android.graphics.Rect` := v1 @kind object;
  #L3c8168.  v1:= new `android.graphics.Rect`;
  #L3c816c.  call `<init>`(v1) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L3c8172.  v0.`com.google.android.material.appbar.HeaderScrollingViewBehavior.tempRect2` @type ^`android.graphics.Rect` := v1 @kind object;
  #L3c8176.  v1:= 0I;
  #L3c8178.  v0.`com.google.android.material.appbar.HeaderScrollingViewBehavior.verticalLayoutGap` @type ^`int` := v1;
  #L3c817c.  return @kind void;
}
procedure `int` `resolveGravity`(`int` v0 ) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.resolveGravity:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3c80fc.  if v0 != 0 then goto L3c8106;
  #L3c8100.  v0:= 8388659I;
  #L3c8106.  return v0;
}
procedure `android.view.View` `findFirstDependency`(`java.util.List` v0 @kind object) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Landroid/view/View;` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `getOverlapPixelsForOffset`(`com.google.android.material.appbar.HeaderScrollingViewBehavior` v3 @kind this, `android.view.View` v4 @kind object) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getOverlapPixelsForOffset:(Landroid/view/View;)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3c8074.  v0:= v3.`com.google.android.material.appbar.HeaderScrollingViewBehavior.overlayTop` @type ^`int`;
  #L3c8078.  v1:= 0I;
  #L3c807a.  if v0 != 0 then goto L3c8080;
  #L3c807e.  goto L3c809c;
  #L3c8080.  call temp:= `getOverlapRatioForOffset`(v3, v4) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getOverlapRatioForOffset:(Landroid/view/View;)F` @kind virtual;
  #L3c8086.  v4:= temp;
  #L3c8088.  v0:= v3.`com.google.android.material.appbar.HeaderScrollingViewBehavior.overlayTop` @type ^`int`;
  #L3c808c.  v2:= (`float`) v0 @kind i2f;
  #L3c808e.  v4:= v4 * v2 @kind float;
  #L3c8092.  v4:= (`int`) v4 @kind f2i;
  #L3c8094.  call temp:= `clamp`(v4, v1, v0) @signature `Landroidx/core/math/MathUtils;.clamp:(III)I` @kind static;
  #L3c809a.  v1:= temp;
  #L3c809c.  return v1;
}
procedure `float` `getOverlapRatioForOffset`(`com.google.android.material.appbar.HeaderScrollingViewBehavior` v0 @kind this, `android.view.View` v1 @kind object) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getOverlapRatioForOffset:(Landroid/view/View;)F` @AccessFlag  {
    temp;

  #L3c805c.  v1:= 1.0F;
  #L3c8060.  return v1;
}
procedure `int` `getOverlayTop`(`com.google.android.material.appbar.HeaderScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getOverlayTop:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3c80b0.  v0:= v1.`com.google.android.material.appbar.HeaderScrollingViewBehavior.overlayTop` @type ^`int`;
  #L3c80b4.  return v0;
}
procedure `int` `getScrollRange`(`com.google.android.material.appbar.HeaderScrollingViewBehavior` v0 @kind this, `android.view.View` v1 @kind object) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getScrollRange:(Landroid/view/View;)I` @AccessFlag  {
    temp;

  #L3c80c8.  call temp:= `getMeasuredHeight`(v1) @signature `Landroid/view/View;.getMeasuredHeight:()I` @kind virtual;
  #L3c80ce.  v1:= temp;
  #L3c80d0.  return v1;
}
procedure `int` `getVerticalLayoutGap`(`com.google.android.material.appbar.HeaderScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getVerticalLayoutGap:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L3c80e4.  v0:= v1.`com.google.android.material.appbar.HeaderScrollingViewBehavior.verticalLayoutGap` @type ^`int`;
  #L3c80e8.  return v0;
}
procedure `void` `layoutChild`(`com.google.android.material.appbar.HeaderScrollingViewBehavior` v8 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v9 @kind object, `android.view.View` v10 @kind object, `int` v11 ) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.layoutChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;I)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3c8190.  call temp:= `getDependencies`(v9, v10) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.getDependencies:(Landroid/view/View;)Ljava/util/List;` @kind virtual;
  #L3c8196.  v0:= temp @kind object;
  #L3c8198.  call temp:= `findFirstDependency`(v8, v0) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Landroid/view/View;` @kind virtual;
  #L3c819e.  v0:= temp @kind object;
  #L3c81a0.  if v0 == 0 then goto L3c82b8;
  #L3c81a4.  call temp:= `getLayoutParams`(v10) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L3c81aa.  v1:= temp @kind object;
  #L3c81ac.  v1:= (`androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams`) v1 @kind object;
  #L3c81b0.  v5:= v8.`com.google.android.material.appbar.HeaderScrollingViewBehavior.tempRect1` @type ^`android.graphics.Rect` @kind object;
  #L3c81b4.  call temp:= `getPaddingLeft`(v9) @signature `Landroid/view/ViewGroup;.getPaddingLeft:()I` @kind virtual;
  #L3c81ba.  v2:= temp;
  #L3c81bc.  v3:= v1.`android.view.ViewGroup$MarginLayoutParams.leftMargin` @type ^`int`;
  #L3c81c0.  v2:= v2 + v3 @kind int;
  #L3c81c2.  call temp:= `getBottom`(v0) @signature `Landroid/view/View;.getBottom:()I` @kind virtual;
  #L3c81c8.  v3:= temp;
  #L3c81ca.  v4:= v1.`android.view.ViewGroup$MarginLayoutParams.topMargin` @type ^`int`;
  #L3c81ce.  v3:= v3 + v4 @kind int;
  #L3c81d0.  call temp:= `getWidth`(v9) @signature `Landroid/view/ViewGroup;.getWidth:()I` @kind virtual;
  #L3c81d6.  v4:= temp;
  #L3c81d8.  call temp:= `getPaddingRight`(v9) @signature `Landroid/view/ViewGroup;.getPaddingRight:()I` @kind virtual;
  #L3c81de.  v6:= temp;
  #L3c81e0.  v4:= v4 - v6 @kind int;
  #L3c81e2.  v6:= v1.`android.view.ViewGroup$MarginLayoutParams.rightMargin` @type ^`int`;
  #L3c81e6.  v4:= v4 - v6 @kind int;
  #L3c81e8.  call temp:= `getHeight`(v9) @signature `Landroid/view/ViewGroup;.getHeight:()I` @kind virtual;
  #L3c81ee.  v6:= temp;
  #L3c81f0.  call temp:= `getBottom`(v0) @signature `Landroid/view/View;.getBottom:()I` @kind virtual;
  #L3c81f6.  v7:= temp;
  #L3c81f8.  v6:= v6 + v7 @kind int;
  #L3c81fa.  call temp:= `getPaddingBottom`(v9) @signature `Landroid/view/ViewGroup;.getPaddingBottom:()I` @kind virtual;
  #L3c8200.  v7:= temp;
  #L3c8202.  v6:= v6 - v7 @kind int;
  #L3c8204.  v7:= v1.`android.view.ViewGroup$MarginLayoutParams.bottomMargin` @type ^`int`;
  #L3c8208.  v6:= v6 - v7 @kind int;
  #L3c820a.  call `set`(v5, v2, v3, v4, v6) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L3c8210.  call temp:= `getLastWindowInsets`(v9) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.getLastWindowInsets:()Landroidx/core/view/WindowInsetsCompat;` @kind virtual;
  #L3c8216.  v2:= temp @kind object;
  #L3c8218.  if v2 == 0 then goto L3c8258;
  #L3c821c.  call temp:= `getFitsSystemWindows`(v9) @signature `Landroidx/core/view/ViewCompat;.getFitsSystemWindows:(Landroid/view/View;)Z` @kind static;
  #L3c8222.  v9:= temp;
  #L3c8224.  if v9 == 0 then goto L3c8258;
  #L3c8228.  call temp:= `getFitsSystemWindows`(v10) @signature `Landroidx/core/view/ViewCompat;.getFitsSystemWindows:(Landroid/view/View;)Z` @kind static;
  #L3c822e.  v9:= temp;
  #L3c8230.  if v9 != 0 then goto L3c8258;
  #L3c8234.  v9:= v5.`android.graphics.Rect.left` @type ^`int`;
  #L3c8238.  call temp:= `getSystemWindowInsetLeft`(v2) @signature `Landroidx/core/view/WindowInsetsCompat;.getSystemWindowInsetLeft:()I` @kind virtual;
  #L3c823e.  v3:= temp;
  #L3c8240.  v9:= v9 + v3 @kind int;
  #L3c8242.  v5.`android.graphics.Rect.left` @type ^`int` := v9;
  #L3c8246.  v9:= v5.`android.graphics.Rect.right` @type ^`int`;
  #L3c824a.  call temp:= `getSystemWindowInsetRight`(v2) @signature `Landroidx/core/view/WindowInsetsCompat;.getSystemWindowInsetRight:()I` @kind virtual;
  #L3c8250.  v2:= temp;
  #L3c8252.  v9:= v9 - v2 @kind int;
  #L3c8254.  v5.`android.graphics.Rect.right` @type ^`int` := v9;
  #L3c8258.  v9:= v8.`com.google.android.material.appbar.HeaderScrollingViewBehavior.tempRect2` @type ^`android.graphics.Rect` @kind object;
  #L3c825c.  v1:= v1.`androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams.gravity` @type ^`int`;
  #L3c8260.  call temp:= `resolveGravity`(v1) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.resolveGravity:(I)I` @kind static;
  #L3c8266.  v2:= temp;
  #L3c8268.  call temp:= `getMeasuredWidth`(v10) @signature `Landroid/view/View;.getMeasuredWidth:()I` @kind virtual;
  #L3c826e.  v3:= temp;
  #L3c8270.  call temp:= `getMeasuredHeight`(v10) @signature `Landroid/view/View;.getMeasuredHeight:()I` @kind virtual;
  #L3c8276.  v4:= temp;
  #L3c8278.  v6:= v9 @kind object;
  #L3c827a.  v7:= v11;
  #L3c827c.  call `apply`(v2, v3, v4, v5, v6, v7) @signature `Landroidx/core/view/GravityCompat;.apply:(IIILandroid/graphics/Rect;Landroid/graphics/Rect;I)V` @kind static;
  #L3c8282.  call temp:= `getOverlapPixelsForOffset`(v8, v0) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getOverlapPixelsForOffset:(Landroid/view/View;)I` @kind virtual;
  #L3c8288.  v11:= temp;
  #L3c828a.  v1:= v9.`android.graphics.Rect.left` @type ^`int`;
  #L3c828e.  v2:= v9.`android.graphics.Rect.top` @type ^`int`;
  #L3c8292.  v2:= v2 - v11 @kind int;
  #L3c8294.  v3:= v9.`android.graphics.Rect.right` @type ^`int`;
  #L3c8298.  v4:= v9.`android.graphics.Rect.bottom` @type ^`int`;
  #L3c829c.  v4:= v4 - v11 @kind int;
  #L3c829e.  call `layout`(v10, v1, v2, v3, v4) @signature `Landroid/view/View;.layout:(IIII)V` @kind virtual;
  #L3c82a4.  v9:= v9.`android.graphics.Rect.top` @type ^`int`;
  #L3c82a8.  call temp:= `getBottom`(v0) @signature `Landroid/view/View;.getBottom:()I` @kind virtual;
  #L3c82ae.  v10:= temp;
  #L3c82b0.  v9:= v9 - v10 @kind int;
  #L3c82b2.  v8.`com.google.android.material.appbar.HeaderScrollingViewBehavior.verticalLayoutGap` @type ^`int` := v9;
  #L3c82b6.  goto L3c82c4;
  #L3c82b8.  call `layoutChild`(v8, v9, v10, v11) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.layoutChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;I)V` @kind super;
  #L3c82be.  v9:= 0I;
  #L3c82c0.  v8.`com.google.android.material.appbar.HeaderScrollingViewBehavior.verticalLayoutGap` @type ^`int` := v9;
  #L3c82c4.  return @kind void;
}
procedure `boolean` `onMeasureChild`(`com.google.android.material.appbar.HeaderScrollingViewBehavior` v7 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v8 @kind object, `android.view.View` v9 @kind object, `int` v10 , `int` v11 , `int` v12 , `int` v13 ) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.onMeasureChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;IIII)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c7f70.  call temp:= `getLayoutParams`(v9) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L3c7f76.  v0:= temp @kind object;
  #L3c7f78.  v0:= v0.`android.view.ViewGroup$LayoutParams.height` @type ^`int`;
  #L3c7f7c.  v1:= -1I;
  #L3c7f7e.  if v0 == v1 then goto L3c7f88;
  #L3c7f82.  v2:= -2I;
  #L3c7f84.  if v0 != v2 then goto L3c8034;
  #L3c7f88.  call temp:= `getDependencies`(v8, v9) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.getDependencies:(Landroid/view/View;)Ljava/util/List;` @kind virtual;
  #L3c7f8e.  v2:= temp @kind object;
  #L3c7f90.  call temp:= `findFirstDependency`(v7, v2) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Landroid/view/View;` @kind virtual;
  #L3c7f96.  v2:= temp @kind object;
  #L3c7f98.  if v2 == 0 then goto L3c8034;
  #L3c7f9c.  call temp:= `getSize`(v12) @signature `Landroid/view/View$MeasureSpec;.getSize:(I)I` @kind static;
  #L3c7fa2.  v12:= temp;
  #L3c7fa4.  if v12 <= 0 then goto L3c7fd6;
  #L3c7fa8.  call temp:= `getFitsSystemWindows`(v2) @signature `Landroidx/core/view/ViewCompat;.getFitsSystemWindows:(Landroid/view/View;)Z` @kind static;
  #L3c7fae.  v3:= temp;
  #L3c7fb0.  if v3 == 0 then goto L3c7fde;
  #L3c7fb4.  call temp:= `getLastWindowInsets`(v8) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.getLastWindowInsets:()Landroidx/core/view/WindowInsetsCompat;` @kind virtual;
  #L3c7fba.  v3:= temp @kind object;
  #L3c7fbc.  if v3 == 0 then goto L3c7fde;
  #L3c7fc0.  call temp:= `getSystemWindowInsetTop`(v3) @signature `Landroidx/core/view/WindowInsetsCompat;.getSystemWindowInsetTop:()I` @kind virtual;
  #L3c7fc6.  v4:= temp;
  #L3c7fc8.  call temp:= `getSystemWindowInsetBottom`(v3) @signature `Landroidx/core/view/WindowInsetsCompat;.getSystemWindowInsetBottom:()I` @kind virtual;
  #L3c7fce.  v3:= temp;
  #L3c7fd0.  v4:= v4 + v3 @kind int;
  #L3c7fd2.  v12:= v12 + v4 @kind int;
  #L3c7fd4.  goto L3c7fde;
  #L3c7fd6.  call temp:= `getHeight`(v8) @signature `Landroid/view/ViewGroup;.getHeight:()I` @kind virtual;
  #L3c7fdc.  v12:= temp;
  #L3c7fde.  call temp:= `getScrollRange`(v7, v2) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getScrollRange:(Landroid/view/View;)I` @kind virtual;
  #L3c7fe4.  v3:= temp;
  #L3c7fe6.  v12:= v12 + v3 @kind int;
  #L3c7fe8.  call temp:= `getMeasuredHeight`(v2) @signature `Landroid/view/View;.getMeasuredHeight:()I` @kind virtual;
  #L3c7fee.  v2:= temp;
  #L3c7ff0.  call temp:= `shouldHeaderOverlapScrollingChild`(v7) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.shouldHeaderOverlapScrollingChild:()Z` @kind virtual;
  #L3c7ff6.  v3:= temp;
  #L3c7ff8.  if v3 == 0 then goto L3c8008;
  #L3c7ffc.  v2:= -v2 @kind int;
  #L3c7ffe.  v2:= (`float`) v2 @kind i2f;
  #L3c8000.  call `setTranslationY`(v9, v2) @signature `Landroid/view/View;.setTranslationY:(F)V` @kind virtual;
  #L3c8006.  goto L3c800a;
  #L3c8008.  v12:= v12 - v2 @kind int;
  #L3c800a.  if v0 != v1 then goto L3c8014;
  #L3c800e.  v0:= 2.0F;
  #L3c8012.  goto L3c8018;
  #L3c8014.  v0:= -2147483648I;
  #L3c8018.  call temp:= `makeMeasureSpec`(v12, v0) @signature `Landroid/view/View$MeasureSpec;.makeMeasureSpec:(II)I` @kind static;
  #L3c801e.  v5:= temp;
  #L3c8020.  v1:= v8 @kind object;
  #L3c8022.  v2:= v9 @kind object;
  #L3c8024.  v3:= v10;
  #L3c8026.  v4:= v11;
  #L3c8028.  v6:= v13;
  #L3c802a.  call `onMeasureChild`(v1, v2, v3, v4, v5, v6) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.onMeasureChild:(Landroid/view/View;IIII)V` @kind virtual;
  #L3c8030.  v8:= 1I;
  #L3c8032.  return v8;
  #L3c8034.  v8:= 0I;
  #L3c8036.  return v8;
}
procedure `void` `setOverlayTop`(`com.google.android.material.appbar.HeaderScrollingViewBehavior` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.setOverlayTop:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3c82d8.  v0.`com.google.android.material.appbar.HeaderScrollingViewBehavior.overlayTop` @type ^`int` := v1;
  #L3c82dc.  return @kind void;
}
procedure `boolean` `shouldHeaderOverlapScrollingChild`(`com.google.android.material.appbar.HeaderScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.shouldHeaderOverlapScrollingChild:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3c8048.  v0:= 0I;
  #L3c804a.  return v0;
}
