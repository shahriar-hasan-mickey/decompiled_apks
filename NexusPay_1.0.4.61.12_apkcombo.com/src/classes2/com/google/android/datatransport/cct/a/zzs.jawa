record `com.google.android.datatransport.cct.a.zzs` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`com.google.android.datatransport.cct.a.zzs` v0 @kind this) @signature `Lcom/google/android/datatransport/cct/a/zzs;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2517a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2517ae.  return @kind void;
}
procedure `com.google.android.datatransport.cct.a.zzs` `zza`(`java.io.Reader` v3 @kind object) @signature `Lcom/google/android/datatransport/cct/a/zzs;.zza:(Ljava/io/Reader;)Lcom/google/android/datatransport/cct/a/zzs;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2516c8.  v0:= new `android.util.JsonReader`;
  #L2516cc.  call `<init>`(v0, v3) @signature `Landroid/util/JsonReader;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L2516d2.  call `beginObject`(v0) @signature `Landroid/util/JsonReader;.beginObject:()V` @kind virtual;
  #L2516d8.  call temp:= `hasNext`(v0) @signature `Landroid/util/JsonReader;.hasNext:()Z` @kind virtual;
  #L2516de.  v3:= temp;
  #L2516e0.  if v3 == 0 then goto L251750;
  #L2516e4.  call temp:= `nextName`(v0) @signature `Landroid/util/JsonReader;.nextName:()Ljava/lang/String;` @kind virtual;
  #L2516ea.  v3:= temp @kind object;
  #L2516ec.  v1:= "nextRequestWaitMillis" @kind object;
  #L2516f0.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2516f6.  v3:= temp;
  #L2516f8.  if v3 == 0 then goto L251748;
  #L2516fc.  call temp:= `peek`(v0) @signature `Landroid/util/JsonReader;.peek:()Landroid/util/JsonToken;` @kind virtual;
  #L251702.  v3:= temp @kind object;
  #L251704.  v1:= `@@android.util.JsonToken.STRING` @type ^`android.util.JsonToken` @kind object;
  #L251708.  if v3 != v1 then goto L25172e;
  #L25170c.  call temp:= `nextString`(v0) @signature `Landroid/util/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L251712.  v3:= temp @kind object;
  #L251714.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L25171a.  v1:= temp @kind wide;
  #L25171c.  v3:= new `com.google.android.datatransport.cct.a.f`;
  #L251720.  call `<init>`(v3, v1) @signature `Lcom/google/android/datatransport/cct/a/f;.<init>:(J)V` @kind direct;
  #L251726.  call `close`(v0) @signature `Landroid/util/JsonReader;.close:()V` @kind virtual;
  #L25172c.  return v3 @kind object;
  #L25172e.  call temp:= `nextLong`(v0) @signature `Landroid/util/JsonReader;.nextLong:()J` @kind virtual;
  #L251734.  v1:= temp @kind wide;
  #L251736.  v3:= new `com.google.android.datatransport.cct.a.f`;
  #L25173a.  call `<init>`(v3, v1) @signature `Lcom/google/android/datatransport/cct/a/f;.<init>:(J)V` @kind direct;
  #L251740.  call `close`(v0) @signature `Landroid/util/JsonReader;.close:()V` @kind virtual;
  #L251746.  return v3 @kind object;
  #L251748.  call `skipValue`(v0) @signature `Landroid/util/JsonReader;.skipValue:()V` @kind virtual;
  #L25174e.  goto L2516d8;
  #L251750.  v3:= new `java.io.IOException`;
  #L251754.  v1:= "Response is missing nextRequestWaitMillis field." @kind object;
  #L251758.  call `<init>`(v3, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25175e.  throw v3;
  #L251760.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L251762.  call `close`(v0) @signature `Landroid/util/JsonReader;.close:()V` @kind virtual;
  #L251768.  throw v3;
  catch `java.lang.Throwable` @[L2516d2..L2516ec] goto L251760;
  catch `java.lang.Throwable` @[L2516f0..L251726] goto L251760;
  catch `java.lang.Throwable` @[L25172e..L251740] goto L251760;
  catch `java.lang.Throwable` @[L251748..L251754] goto L251760;
  catch `java.lang.Throwable` @[L251758..L251760] goto L251760;
}
procedure `long` `zza`() @signature `Lcom/google/android/datatransport/cct/a/zzs;.zza:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
