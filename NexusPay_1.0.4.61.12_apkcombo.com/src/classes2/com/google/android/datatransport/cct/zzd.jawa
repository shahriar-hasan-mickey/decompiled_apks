record `com.google.android.datatransport.cct.zzd` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/google/android/datatransport/cct/zzd;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L252b8c.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L252b92.  v0:= temp;
  #L252b94.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L252b9a.  v1:= temp;
  #L252b9c.  v0:= v0 - v1 @kind int;
  #L252b9e.  if v0 < 0 then goto L252c0a;
  #L252ba2.  v1:= 1I;
  #L252ba4.  if v0 > v1 then goto L252c0a;
  #L252ba8.  v0:= new `java.lang.StringBuilder`;
  #L252bac.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L252bb2.  v1:= temp;
  #L252bb4.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L252bba.  v2:= temp;
  #L252bbc.  v2:= v2 + v1 @kind int;
  #L252bbe.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L252bc4.  v1:= 0I;
  #L252bc6.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L252bcc.  v2:= temp;
  #L252bce.  if v1 >= v2 then goto L252c00;
  #L252bd2.  call temp:= `charAt`(v3, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L252bd8.  v2:= temp;
  #L252bda.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L252be0.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L252be6.  v2:= temp;
  #L252be8.  if v2 <= v1 then goto L252bfa;
  #L252bec.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L252bf2.  v2:= temp;
  #L252bf4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L252bfa.  v1:= v1 + 1;
  #L252bfe.  goto L252bc6;
  #L252c00.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L252c06.  v3:= temp @kind object;
  #L252c08.  return v3 @kind object;
  #L252c0a.  v3:= new `java.lang.IllegalArgumentException`;
  #L252c0e.  v4:= "Invalid input received" @kind object;
  #L252c12.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L252c18.  throw v3;
}
