record `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` @kind class @AccessFlag PUBLIC {
  `android.content.Context` `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.a` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.backends.BackendRegistry` `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.b` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.scheduling.persistence.EventStore` `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.c` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.d` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.e` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.f` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.time.Clock` `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v0 @kind this, `android.content.Context` v1 @kind object, `com.google.android.datatransport.runtime.backends.BackendRegistry` v2 @kind object, `com.google.android.datatransport.runtime.scheduling.persistence.EventStore` v3 @kind object, `com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object, `com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` v6 @kind object, `com.google.android.datatransport.runtime.time.Clock` v7 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.<init>:(Landroid/content/Context;Lcom/google/android/datatransport/runtime/backends/BackendRegistry;Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;Ljava/util/concurrent/Executor;Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;Lcom/google/android/datatransport/runtime/time/Clock;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L257284.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25728a.  v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.a` @type ^`android.content.Context` := v1 @kind object;
  #L25728e.  v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.b` @type ^`com.google.android.datatransport.runtime.backends.BackendRegistry` := v2 @kind object;
  #L257292.  v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.c` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` := v3 @kind object;
  #L257296.  v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.d` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` := v4 @kind object;
  #L25729a.  v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.e` @type ^`java.util.concurrent.Executor` := v5 @kind object;
  #L25729e.  v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.f` @type ^`com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` := v6 @kind object;
  #L2572a2.  v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.g` @type ^`com.google.android.datatransport.runtime.time.Clock` := v7 @kind object;
  #L2572a6.  return @kind void;
}
procedure `java.lang.Iterable` `b`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v0 @kind object, `com.google.android.datatransport.runtime.TransportContext` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.b:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/TransportContext;)Ljava/lang/Iterable;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2571ac.  v0:= v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.c` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` @kind object;
  #L2571b0.  call temp:= `loadBatch`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;.loadBatch:(Lcom/google/android/datatransport/runtime/TransportContext;)Ljava/lang/Iterable;` @kind interface;
  #L2571b6.  v0:= temp @kind object;
  #L2571b8.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v5 @kind object, `com.google.android.datatransport.runtime.backends.BackendResponse` v6 @kind object, `java.lang.Iterable` v7 @kind object, `com.google.android.datatransport.runtime.TransportContext` v8 @kind object, `int` v9 ) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.c:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/backends/BackendResponse;Ljava/lang/Iterable;Lcom/google/android/datatransport/runtime/TransportContext;I)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2571cc.  call temp:= `getStatus`(v6) @signature `Lcom/google/android/datatransport/runtime/backends/BackendResponse;.getStatus:()Lcom/google/android/datatransport/runtime/backends/BackendResponse$Status;` @kind virtual;
  #L2571d2.  v0:= temp @kind object;
  #L2571d4.  v1:= `@@com.google.android.datatransport.runtime.backends.BackendResponse$Status.TRANSIENT_ERROR` @type ^`com.google.android.datatransport.runtime.backends.BackendResponse$Status` @kind object;
  #L2571d8.  v2:= 1I;
  #L2571da.  if v0 != v1 then goto L2571f6;
  #L2571de.  v6:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.c` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` @kind object;
  #L2571e2.  call `recordFailure`(v6, v7) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;.recordFailure:(Ljava/lang/Iterable;)V` @kind interface;
  #L2571e8.  v5:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.d` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` @kind object;
  #L2571ec.  v9:= v9 + v2 @kind int;
  #L2571ee.  call `schedule`(v5, v8, v9) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;.schedule:(Lcom/google/android/datatransport/runtime/TransportContext;I)V` @kind interface;
  #L2571f4.  goto L25724a;
  #L2571f6.  v9:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.c` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` @kind object;
  #L2571fa.  call `recordSuccess`(v9, v7) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;.recordSuccess:(Ljava/lang/Iterable;)V` @kind interface;
  #L257200.  call temp:= `getStatus`(v6) @signature `Lcom/google/android/datatransport/runtime/backends/BackendResponse;.getStatus:()Lcom/google/android/datatransport/runtime/backends/BackendResponse$Status;` @kind virtual;
  #L257206.  v7:= temp @kind object;
  #L257208.  v9:= `@@com.google.android.datatransport.runtime.backends.BackendResponse$Status.OK` @type ^`com.google.android.datatransport.runtime.backends.BackendResponse$Status` @kind object;
  #L25720c.  if v7 != v9 then goto L257230;
  #L257210.  v7:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.c` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` @kind object;
  #L257214.  v9:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.g` @type ^`com.google.android.datatransport.runtime.time.Clock` @kind object;
  #L257218.  call temp:= `getTime`(v9) @signature `Lcom/google/android/datatransport/runtime/time/Clock;.getTime:()J` @kind interface;
  #L25721e.  v0:= temp @kind wide;
  #L257220.  call temp:= `getNextRequestWaitMillis`(v6) @signature `Lcom/google/android/datatransport/runtime/backends/BackendResponse;.getNextRequestWaitMillis:()J` @kind virtual;
  #L257226.  v3:= temp @kind wide;
  #L257228.  v0:= v0 + v3 @kind long;
  #L25722a.  call `recordNextCallTime`(v7, v8, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;.recordNextCallTime:(Lcom/google/android/datatransport/runtime/TransportContext;J)V` @kind interface;
  #L257230.  v6:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.c` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` @kind object;
  #L257234.  call temp:= `hasPendingEventsFor`(v6, v8) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;.hasPendingEventsFor:(Lcom/google/android/datatransport/runtime/TransportContext;)Z` @kind interface;
  #L25723a.  v6:= temp;
  #L25723c.  if v6 == 0 then goto L25724a;
  #L257240.  v5:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.d` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` @kind object;
  #L257244.  call `schedule`(v5, v8, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;.schedule:(Lcom/google/android/datatransport/runtime/TransportContext;I)V` @kind interface;
  #L25724a.  v5:= 0I;
  #L25724c.  return v5 @kind object;
}
procedure `java.lang.Object` `d`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v0 @kind object, `com.google.android.datatransport.runtime.TransportContext` v1 @kind object, `int` v2 ) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.d:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/TransportContext;I)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L257260.  v0:= v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.d` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` @kind object;
  #L257264.  v2:= v2 + 1;
  #L257268.  call `schedule`(v0, v1, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;.schedule:(Lcom/google/android/datatransport/runtime/TransportContext;I)V` @kind interface;
  #L25726e.  v0:= 0I;
  #L257270.  return v0 @kind object;
}
procedure `void` `e`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v2 @kind object, `com.google.android.datatransport.runtime.TransportContext` v3 @kind object, `int` v4 , `java.lang.Runnable` v5 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.e:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/TransportContext;ILjava/lang/Runnable;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L2572b8.  v0:= v2.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.f` @type ^`com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` @kind object;
  #L2572bc.  v1:= v2.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.c` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` @kind object;
  #L2572c0.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2572c6.  call temp:= `a`(v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/h;.a:(Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;)Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;` @kind static;
  #L2572cc.  v1:= temp @kind object;
  #L2572ce.  call temp:= `runCriticalSection`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;.runCriticalSection:(Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;)Ljava/lang/Object;` @kind interface;
  #L2572d4.  call temp:= `a`(v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.a:()Z` @kind virtual;
  #L2572da.  v0:= temp;
  #L2572dc.  if v0 != 0 then goto L2572f4;
  #L2572e0.  v0:= v2.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.f` @type ^`com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` @kind object;
  #L2572e4.  call temp:= `a`(v2, v3, v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/i;.a:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/TransportContext;I)Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;` @kind static;
  #L2572ea.  v1:= temp @kind object;
  #L2572ec.  call temp:= `runCriticalSection`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;.runCriticalSection:(Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;)Ljava/lang/Object;` @kind interface;
  #L2572f2.  goto L25730e;
  #L2572f4.  call `f`(v2, v3, v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.f:(Lcom/google/android/datatransport/runtime/TransportContext;I)V` @kind virtual;
  #L2572fa.  goto L25730e;
  #L2572fc.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2572fe.  goto L257316;
  #L257300.  v2:= v2.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.d` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` @kind object;
  #L257304.  v4:= v4 + 1;
  #L257308.  call `schedule`(v2, v3, v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;.schedule:(Lcom/google/android/datatransport/runtime/TransportContext;I)V` @kind interface;
  #L25730e.  call `run`(v5) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L257314.  return @kind void;
  #L257316.  call `run`(v5) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L25731c.  throw v2;
  catch `com.google.android.datatransport.runtime.synchronization.SynchronizationException` @[L2572b8..L2572fa] goto L257300;
  catch `java.lang.Throwable` @[L2572b8..L2572fa] goto L2572fc;
  catch `java.lang.Throwable` @[L257300..L25730e] goto L2572fc;
}
procedure `boolean` `a`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v2 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.a:()Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L257168.  v0:= v2.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.a` @type ^`android.content.Context` @kind object;
  #L25716c.  v1:= "connectivity" @kind object;
  #L257170.  call temp:= `getSystemService`(v0, v1) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L257176.  v0:= temp @kind object;
  #L257178.  v0:= (`android.net.ConnectivityManager`) v0 @kind object;
  #L25717c.  call temp:= `getActiveNetworkInfo`(v0) @signature `Landroid/net/ConnectivityManager;.getActiveNetworkInfo:()Landroid/net/NetworkInfo;` @kind virtual;
  #L257182.  v0:= temp @kind object;
  #L257184.  if v0 == 0 then goto L257198;
  #L257188.  call temp:= `isConnected`(v0) @signature `Landroid/net/NetworkInfo;.isConnected:()Z` @kind virtual;
  #L25718e.  v0:= temp;
  #L257190.  if v0 == 0 then goto L257198;
  #L257194.  v0:= 1I;
  #L257196.  goto L25719a;
  #L257198.  v0:= 0I;
  #L25719a.  return v0;
}
procedure `void` `f`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v5 @kind this, `com.google.android.datatransport.runtime.TransportContext` v6 @kind object, `int` v7 ) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.f:(Lcom/google/android/datatransport/runtime/TransportContext;I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L257348.  v0:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.b` @type ^`com.google.android.datatransport.runtime.backends.BackendRegistry` @kind object;
  #L25734c.  call temp:= `getBackendName`(v6) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getBackendName:()Ljava/lang/String;` @kind virtual;
  #L257352.  v1:= temp @kind object;
  #L257354.  call temp:= `get`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/backends/BackendRegistry;.get:(Ljava/lang/String;)Lcom/google/android/datatransport/runtime/backends/TransportBackend;` @kind interface;
  #L25735a.  v0:= temp @kind object;
  #L25735c.  v1:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.f` @type ^`com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` @kind object;
  #L257360.  call temp:= `a`(v5, v6) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/f;.a:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/TransportContext;)Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;` @kind static;
  #L257366.  v2:= temp @kind object;
  #L257368.  call temp:= `runCriticalSection`(v1, v2) @signature `Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;.runCriticalSection:(Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;)Ljava/lang/Object;` @kind interface;
  #L25736e.  v1:= temp @kind object;
  #L257370.  v1:= (`java.lang.Iterable`) v1 @kind object;
  #L257374.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L25737a.  v2:= temp @kind object;
  #L25737c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L257382.  v2:= temp;
  #L257384.  if v2 != 0 then goto L25738a;
  #L257388.  return @kind void;
  #L25738a.  if v0 != 0 then goto L2573a6;
  #L25738e.  v0:= "Uploader" @kind object;
  #L257392.  v2:= "Unknown backend for %s, deleting event batch for it..." @kind object;
  #L257396.  call `d`(v0, v2, v6) @signature `Lcom/google/android/datatransport/runtime/logging/Logging;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L25739c.  call temp:= `fatalError`() @signature `Lcom/google/android/datatransport/runtime/backends/BackendResponse;.fatalError:()Lcom/google/android/datatransport/runtime/backends/BackendResponse;` @kind static;
  #L2573a2.  v0:= temp @kind object;
  #L2573a4.  goto L257410;
  #L2573a6.  v2:= new `java.util.ArrayList`;
  #L2573aa.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2573b0.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2573b6.  v3:= temp @kind object;
  #L2573b8.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2573be.  v4:= temp;
  #L2573c0.  if v4 == 0 then goto L2573e0;
  #L2573c4.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2573ca.  v4:= temp @kind object;
  #L2573cc.  v4:= (`com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent`) v4 @kind object;
  #L2573d0.  call temp:= `getEvent`(v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;.getEvent:()Lcom/google/android/datatransport/runtime/EventInternal;` @kind virtual;
  #L2573d6.  v4:= temp @kind object;
  #L2573d8.  call temp:= `add`(v2, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2573de.  goto L2573b8;
  #L2573e0.  call temp:= `builder`() @signature `Lcom/google/android/datatransport/runtime/backends/BackendRequest;.builder:()Lcom/google/android/datatransport/runtime/backends/BackendRequest$Builder;` @kind static;
  #L2573e6.  v3:= temp @kind object;
  #L2573e8.  call temp:= `setEvents`(v3, v2) @signature `Lcom/google/android/datatransport/runtime/backends/BackendRequest$Builder;.setEvents:(Ljava/lang/Iterable;)Lcom/google/android/datatransport/runtime/backends/BackendRequest$Builder;` @kind virtual;
  #L2573ee.  v2:= temp @kind object;
  #L2573f0.  call temp:= `getExtras`(v6) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getExtras:()[B` @kind virtual;
  #L2573f6.  v3:= temp @kind object;
  #L2573f8.  call temp:= `setExtras`(v2, v3) @signature `Lcom/google/android/datatransport/runtime/backends/BackendRequest$Builder;.setExtras:([B)Lcom/google/android/datatransport/runtime/backends/BackendRequest$Builder;` @kind virtual;
  #L2573fe.  v2:= temp @kind object;
  #L257400.  call temp:= `build`(v2) @signature `Lcom/google/android/datatransport/runtime/backends/BackendRequest$Builder;.build:()Lcom/google/android/datatransport/runtime/backends/BackendRequest;` @kind virtual;
  #L257406.  v2:= temp @kind object;
  #L257408.  call temp:= `send`(v0, v2) @signature `Lcom/google/android/datatransport/runtime/backends/TransportBackend;.send:(Lcom/google/android/datatransport/runtime/backends/BackendRequest;)Lcom/google/android/datatransport/runtime/backends/BackendResponse;` @kind interface;
  #L25740e.  v0:= temp @kind object;
  #L257410.  v2:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.f` @type ^`com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` @kind object;
  #L257414.  call temp:= `a`(v5, v0, v1, v6, v7) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/g;.a:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/backends/BackendResponse;Ljava/lang/Iterable;Lcom/google/android/datatransport/runtime/TransportContext;I)Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;` @kind static;
  #L25741a.  v6:= temp @kind object;
  #L25741c.  call temp:= `runCriticalSection`(v2, v6) @signature `Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;.runCriticalSection:(Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;)Ljava/lang/Object;` @kind interface;
  #L257422.  return @kind void;
}
procedure `void` `upload`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v1 @kind this, `com.google.android.datatransport.runtime.TransportContext` v2 @kind object, `int` v3 , `java.lang.Runnable` v4 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.upload:(Lcom/google/android/datatransport/runtime/TransportContext;ILjava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L257434.  v0:= v1.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.e` @type ^`java.util.concurrent.Executor` @kind object;
  #L257438.  call temp:= `a`(v1, v2, v3, v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/e;.a:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/TransportContext;ILjava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L25743e.  v2:= temp @kind object;
  #L257440.  call `execute`(v0, v2) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L257446.  return @kind void;
}
