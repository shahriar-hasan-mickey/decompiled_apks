record `com.dbbl.nexusPay.qr.decoder.DecoderBeanMap` @kind class @AccessFlag PUBLIC extends `java.util.HashMap` @kind class {
  `boolean` `com.dbbl.nexusPay.qr.decoder.DecoderBeanMap.a` @AccessFlag PRIVATE;
  `java.lang.String` `com.dbbl.nexusPay.qr.decoder.DecoderBeanMap.b` @AccessFlag PRIVATE;
}
global `long` `@@com.dbbl.nexusPay.qr.decoder.DecoderBeanMap.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.dbbl.nexusPay.qr.decoder.DecoderBeanMap` v1 @kind this) @signature `Lcom/dbbl/nexusPay/qr/decoder/DecoderBeanMap;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1bdf30.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1bdf36.  v0:= 0I;
  #L1bdf38.  v1.`com.dbbl.nexusPay.qr.decoder.DecoderBeanMap.a` @type ^`boolean` := v0 @kind boolean;
  #L1bdf3c.  return @kind void;
}
procedure `com.dbbl.nexusPay.qr.decoder.DecoderBeanMap` `find`(`com.dbbl.nexusPay.qr.decoder.DecoderBeanMap` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/dbbl/nexusPay/qr/decoder/DecoderBeanMap;.find:(Ljava/lang/String;)Lcom/dbbl/nexusPay/qr/decoder/DecoderBeanMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bdde4.  call temp:= `get`(v1, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1bddea.  v2:= temp @kind object;
  #L1bddec.  v2:= (`com.dbbl.nexusPay.qr.decoder.DecoderBean`) v2 @kind object;
  #L1bddf0.  if v2 == 0 then goto L1bde1e;
  #L1bddf4.  call temp:= `hasSubData`(v2) @signature `Lcom/dbbl/nexusPay/qr/decoder/DecoderBean;.hasSubData:()Z` @kind virtual;
  #L1bddfa.  v0:= temp;
  #L1bddfc.  if v0 == 0 then goto L1bde0a;
  #L1bde00.  call temp:= `getSubData`(v2) @signature `Lcom/dbbl/nexusPay/qr/decoder/DecoderBean;.getSubData:()Lcom/dbbl/nexusPay/qr/decoder/DecoderBeanMap;` @kind virtual;
  #L1bde06.  v2:= temp @kind object;
  #L1bde08.  return v2 @kind object;
  #L1bde0a.  v0:= 1I;
  #L1bde0c.  v1.`com.dbbl.nexusPay.qr.decoder.DecoderBeanMap.a` @type ^`boolean` := v0 @kind boolean;
  #L1bde10.  call temp:= `getData`(v2) @signature `Lcom/dbbl/nexusPay/qr/decoder/DecoderBean;.getData:()Ljava/lang/String;` @kind virtual;
  #L1bde16.  v2:= temp @kind object;
  #L1bde18.  v1.`com.dbbl.nexusPay.qr.decoder.DecoderBeanMap.b` @type ^`java.lang.String` := v2 @kind object;
  #L1bde1c.  return v1 @kind object;
  #L1bde1e.  v2:= new `com.dbbl.nexusPay.qr.decoder.DecoderBeanMap`;
  #L1bde22.  call `<init>`(v2) @signature `Lcom/dbbl/nexusPay/qr/decoder/DecoderBeanMap;.<init>:()V` @kind direct;
  #L1bde28.  return v2 @kind object;
}
procedure `java.lang.String` `getValue`(`com.dbbl.nexusPay.qr.decoder.DecoderBeanMap` v1 @kind this) @signature `Lcom/dbbl/nexusPay/qr/decoder/DecoderBeanMap;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bde3c.  v0:= v1.`com.dbbl.nexusPay.qr.decoder.DecoderBeanMap.a` @type ^`boolean` @kind boolean;
  #L1bde40.  if v0 == 0 then goto L1bde4a;
  #L1bde44.  v0:= v1.`com.dbbl.nexusPay.qr.decoder.DecoderBeanMap.b` @type ^`java.lang.String` @kind object;
  #L1bde48.  return v0 @kind object;
  #L1bde4a.  call temp:= `size`(v1) @signature `Ljava/util/HashMap;.size:()I` @kind virtual;
  #L1bde50.  v0:= temp;
  #L1bde52.  if v0 != 0 then goto L1bde5a;
  #L1bde56.  v0:= 0I;
  #L1bde58.  return v0 @kind object;
  #L1bde5a.  call temp:= `toString`(v1) @signature `Lcom/dbbl/nexusPay/qr/decoder/DecoderBeanMap;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bde60.  v0:= temp @kind object;
  #L1bde62.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.dbbl.nexusPay.qr.decoder.DecoderBeanMap` v6 @kind this) @signature `Lcom/dbbl/nexusPay/qr/decoder/DecoderBeanMap;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1bde74.  call temp:= `keySet`(v6) @signature `Ljava/util/HashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L1bde7a.  v0:= temp @kind object;
  #L1bde7c.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1bde82.  v0:= temp @kind object;
  #L1bde84.  v1:= "DecoderBeanMap [" @kind object;
  #L1bde88.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1bde8e.  v2:= temp;
  #L1bde90.  v3:= 1I;
  #L1bde92.  v4:= 0I;
  #L1bde94.  if v2 != 0 then goto L1bded0;
  #L1bde98.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1bde9e.  v0:= temp;
  #L1bdea0.  v0:= v0 - v3 @kind int;
  #L1bdea2.  call temp:= `substring`(v1, v4, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1bdea8.  v0:= temp @kind object;
  #L1bdeaa.  v1:= new `java.lang.StringBuilder`;
  #L1bdeae.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1bdeb4.  v0:= temp @kind object;
  #L1bdeb6.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bdebc.  v0:= "]" @kind object;
  #L1bdec0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdec6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bdecc.  v0:= temp @kind object;
  #L1bdece.  return v0 @kind object;
  #L1bded0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1bded6.  v2:= temp @kind object;
  #L1bded8.  v2:= (`java.lang.String`) v2 @kind object;
  #L1bdedc.  v5:= new `java.lang.StringBuilder`;
  #L1bdee0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1bdee6.  v1:= temp @kind object;
  #L1bdee8.  call `<init>`(v5, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bdeee.  v1:= 2I;
  #L1bdef0.  v1:= new `java.lang.Object`[v1];
  #L1bdef4.  v1[v4]:= v2 @kind object;
  #L1bdef8.  call temp:= `get`(v6, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1bdefe.  v2:= temp @kind object;
  #L1bdf00.  v1[v3]:= v2 @kind object;
  #L1bdf04.  v2:= "Key(%s) %s " @kind object;
  #L1bdf08.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1bdf0e.  v1:= temp @kind object;
  #L1bdf10.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bdf16.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bdf1c.  v1:= temp @kind object;
  #L1bdf1e.  goto L1bde88;
}
