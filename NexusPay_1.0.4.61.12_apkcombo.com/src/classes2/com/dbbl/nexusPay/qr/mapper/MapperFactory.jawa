record `com.dbbl.nexusPay.qr.mapper.MapperFactory` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.HashMap` `com.dbbl.nexusPay.qr.mapper.MapperFactory.a` @AccessFlag PRIVATE_FINAL;
}
global `com.dbbl.nexusPay.qr.mapper.MapperFactory` `@@com.dbbl.nexusPay.qr.mapper.MapperFactory.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`com.dbbl.nexusPay.qr.mapper.MapperFactory` v1 @kind this) @signature `Lcom/dbbl/nexusPay/qr/mapper/MapperFactory;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1be84c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1be852.  v0:= new `java.util.HashMap`;
  #L1be856.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1be85c.  v1.`com.dbbl.nexusPay.qr.mapper.MapperFactory.a` @type ^`java.util.HashMap` := v0 @kind object;
  #L1be860.  return @kind void;
}
procedure `com.dbbl.nexusPay.qr.mapper.MapperFactory` `a`() @signature `Lcom/dbbl/nexusPay/qr/mapper/MapperFactory;.a:()Lcom/dbbl/nexusPay/qr/mapper/MapperFactory;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1be820.  v0:= `@@com.dbbl.nexusPay.qr.mapper.MapperFactory.b` @type ^`com.dbbl.nexusPay.qr.mapper.MapperFactory` @kind object;
  #L1be824.  if v0 != 0 then goto L1be836;
  #L1be828.  v0:= new `com.dbbl.nexusPay.qr.mapper.MapperFactory`;
  #L1be82c.  call `<init>`(v0) @signature `Lcom/dbbl/nexusPay/qr/mapper/MapperFactory;.<init>:()V` @kind direct;
  #L1be832.  `@@com.dbbl.nexusPay.qr.mapper.MapperFactory.b` @type ^`com.dbbl.nexusPay.qr.mapper.MapperFactory` := v0 @kind object;
  #L1be836.  v0:= `@@com.dbbl.nexusPay.qr.mapper.MapperFactory.b` @type ^`com.dbbl.nexusPay.qr.mapper.MapperFactory` @kind object;
  #L1be83a.  return v0 @kind object;
}
procedure `com.dbbl.nexusPay.qr.mapper.Mapper` `getMapperInstance`(`java.lang.Class` v3 @kind object) @signature `Lcom/dbbl/nexusPay/qr/mapper/MapperFactory;.getMapperInstance:(Ljava/lang/Class;)Lcom/dbbl/nexusPay/qr/mapper/Mapper;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1be750.  call temp:= `a`() @signature `Lcom/dbbl/nexusPay/qr/mapper/MapperFactory;.a:()Lcom/dbbl/nexusPay/qr/mapper/MapperFactory;` @kind static;
  #L1be756.  v0:= temp @kind object;
  #L1be758.  v0:= v0.`com.dbbl.nexusPay.qr.mapper.MapperFactory.a` @type ^`java.util.HashMap` @kind object;
  #L1be75c.  call temp:= `get`(v0, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1be762.  v0:= temp @kind object;
  #L1be764.  v0:= (`com.dbbl.nexusPay.qr.mapper.Mapper`) v0 @kind object;
  #L1be768.  if v0 != 0 then goto L1be7d6;
  #L1be76c.  v1:= 0I;
  #L1be76e.  v2:= new `java.lang.Class`[v1];
  #L1be772.  call temp:= `getConstructor`(v3, v2) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L1be778.  v2:= temp @kind object;
  #L1be77a.  v1:= new `java.lang.Object`[v1];
  #L1be77e.  call temp:= `newInstance`(v2, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1be784.  v1:= temp @kind object;
  #L1be786.  v1:= (`com.dbbl.nexusPay.qr.mapper.Mapper`) v1 @kind object;
  #L1be78a.  call temp:= `a`() @signature `Lcom/dbbl/nexusPay/qr/mapper/MapperFactory;.a:()Lcom/dbbl/nexusPay/qr/mapper/MapperFactory;` @kind static;
  #L1be790.  v0:= temp @kind object;
  #L1be792.  v0:= v0.`com.dbbl.nexusPay.qr.mapper.MapperFactory.a` @type ^`java.util.HashMap` @kind object;
  #L1be796.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1be79c.  v0:= v1 @kind object;
  #L1be79e.  goto L1be7d6;
  #L1be7a0.  v3:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L1be7a2.  goto L1be7b6;
  #L1be7a4.  v3:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L1be7a6.  goto L1be7b6;
  #L1be7a8.  v3:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L1be7aa.  goto L1be7b6;
  #L1be7ac.  v3:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L1be7ae.  goto L1be7b6;
  #L1be7b0.  v3:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1be7b2.  goto L1be7b6;
  #L1be7b4.  v3:= Exception @type ^`java.lang.InstantiationException` @kind object;
  #L1be7b6.  v0:= v1 @kind object;
  #L1be7b8.  goto L1be7d0;
  #L1be7ba.  v3:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L1be7bc.  goto L1be7d0;
  #L1be7be.  v3:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L1be7c0.  goto L1be7d0;
  #L1be7c2.  v3:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L1be7c4.  goto L1be7d0;
  #L1be7c6.  v3:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L1be7c8.  goto L1be7d0;
  #L1be7ca.  v3:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1be7cc.  goto L1be7d0;
  #L1be7ce.  v3:= Exception @type ^`java.lang.InstantiationException` @kind object;
  #L1be7d0.  call `printStackTrace`(v3) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L1be7d6.  return v0 @kind object;
  catch `java.lang.InstantiationException` @[L1be76e..L1be78a] goto L1be7ce;
  catch `java.lang.IllegalAccessException` @[L1be76e..L1be78a] goto L1be7ca;
  catch `java.lang.IllegalArgumentException` @[L1be76e..L1be78a] goto L1be7c6;
  catch `java.lang.reflect.InvocationTargetException` @[L1be76e..L1be78a] goto L1be7c2;
  catch `java.lang.NoSuchMethodException` @[L1be76e..L1be78a] goto L1be7be;
  catch `java.lang.SecurityException` @[L1be76e..L1be78a] goto L1be7ba;
  catch `java.lang.InstantiationException` @[L1be78a..L1be79c] goto L1be7b4;
  catch `java.lang.IllegalAccessException` @[L1be78a..L1be79c] goto L1be7b0;
  catch `java.lang.IllegalArgumentException` @[L1be78a..L1be79c] goto L1be7ac;
  catch `java.lang.reflect.InvocationTargetException` @[L1be78a..L1be79c] goto L1be7a8;
  catch `java.lang.NoSuchMethodException` @[L1be78a..L1be79c] goto L1be7a4;
  catch `java.lang.SecurityException` @[L1be78a..L1be79c] goto L1be7a0;
}
