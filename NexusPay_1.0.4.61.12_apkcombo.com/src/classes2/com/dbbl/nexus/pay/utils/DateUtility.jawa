record `com.dbbl.nexus.pay.utils.DateUtility` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@com.dbbl.nexus.pay.utils.DateUtility.DATE_FORMAT_DDMMMYYYY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.dbbl.nexus.pay.utils.DateUtility.DATE_FORMAT_DDMMMYYYY_HHMM` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.dbbl.nexus.pay.utils.DateUtility.DATE_FORMAT_MMDDYYYY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.dbbl.nexus.pay.utils.DateUtility.DATE_FORMAT_YYYYMMDD` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.dbbl.nexus.pay.utils.DateUtility.DATE_FORMAT_YYYYMMDD_HHMMSS` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.dbbl.nexus.pay.utils.DateUtility` v0 @kind this) @signature `Lcom/dbbl/nexus/pay/utils/DateUtility;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1b8994.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b899a.  return @kind void;
}
procedure `java.lang.String` `convertDateFormat`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/dbbl/nexus/pay/utils/DateUtility;.convertDateFormat:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b88b0.  v0:= new `java.text.SimpleDateFormat`;
  #L1b88b4.  call `<init>`(v0, v2) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b88ba.  call temp:= `parse`(v0, v1) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #L1b88c0.  v1:= temp @kind object;
  #L1b88c2.  v2:= new `java.text.SimpleDateFormat`;
  #L1b88c6.  call `<init>`(v2, v3) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b88cc.  call temp:= `format`(v2, v1) @signature `Ljava/text/SimpleDateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L1b88d2.  v1:= temp @kind object;
  #L1b88d4.  return v1 @kind object;
  catch `java.text.ParseException` @[L1b88ba..L1b88c2] goto L1b88d4;
}
procedure `java.lang.String` `convertTimestampToString`(`long` v1 , `java.lang.String` v3 @kind object) @signature `Lcom/dbbl/nexus/pay/utils/DateUtility;.convertTimestampToString:(JLjava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b88f8.  if v3 != 0 then goto L1b8900;
  #L1b88fc.  v3:= "yyyyMMdd HH:mm:ss" @kind object;
  #L1b8900.  v0:= new `java.util.Date`;
  #L1b8904.  call `<init>`(v0, v1) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L1b890a.  v1:= new `java.text.SimpleDateFormat`;
  #L1b890e.  call `<init>`(v1, v3) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b8914.  call temp:= `format`(v1, v0) @signature `Ljava/text/Format;.format:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L1b891a.  v1:= temp @kind object;
  #L1b891c.  return v1 @kind object;
}
procedure `java.lang.String` `formatDob`(`java.lang.String` v3 @kind object) @signature `Lcom/dbbl/nexus/pay/utils/DateUtility;.formatDob:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1b8930.  v0:= new `java.text.SimpleDateFormat`;
  #L1b8934.  v1:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L1b8938.  v2:= "yyyyMMdd" @kind object;
  #L1b893c.  call `<init>`(v0, v2, v1) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V` @kind direct;
  #L1b8942.  call temp:= `parse`(v0, v3) @signature `Ljava/text/SimpleDateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #L1b8948.  v3:= temp @kind object;
  #L1b894a.  v0:= new `java.text.SimpleDateFormat`;
  #L1b894e.  v1:= "MM/dd/yyyy" @kind object;
  #L1b8952.  v2:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L1b8956.  call `<init>`(v0, v1, v2) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V` @kind direct;
  #L1b895c.  call temp:= `format`(v0, v3) @signature `Ljava/text/SimpleDateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L1b8962.  v3:= temp @kind object;
  #L1b8964.  return v3 @kind object;
  #L1b8966.  v3:= Exception @type ^`java.text.ParseException` @kind object;
  #L1b8968.  call `printStackTrace`(v3) @signature `Ljava/text/ParseException;.printStackTrace:()V` @kind virtual;
  #L1b896e.  v3:= 0I;
  #L1b8970.  return v3 @kind object;
  catch `java.text.ParseException` @[L1b8942..L1b8964] goto L1b8966;
}
