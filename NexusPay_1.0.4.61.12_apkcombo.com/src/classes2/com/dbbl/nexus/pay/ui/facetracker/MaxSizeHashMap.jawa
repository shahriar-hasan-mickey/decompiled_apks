record `com.dbbl.nexus.pay.ui.facetracker.MaxSizeHashMap` @kind class @AccessFlag PUBLIC extends `java.util.LinkedHashMap` @kind class {
}
procedure `void` `<init>`(`com.dbbl.nexus.pay.ui.facetracker.MaxSizeHashMap` v0 @kind this) @signature `Lcom/dbbl/nexus/pay/ui/facetracker/MaxSizeHashMap;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1780f4.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L1780fa.  return @kind void;
}
procedure `boolean` `removeEldestEntry`(`com.dbbl.nexus.pay.ui.facetracker.MaxSizeHashMap` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lcom/dbbl/nexus/pay/ui/facetracker/MaxSizeHashMap;.removeEldestEntry:(Ljava/util/Map$Entry;)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1780cc.  call temp:= `size`(v1) @signature `Ljava/util/LinkedHashMap;.size:()I` @kind virtual;
  #L1780d2.  v2:= temp;
  #L1780d4.  v0:= 20I;
  #L1780d8.  if v2 <= v0 then goto L1780e0;
  #L1780dc.  v2:= 1I;
  #L1780de.  goto L1780e2;
  #L1780e0.  v2:= 0I;
  #L1780e2.  return v2;
}
