record `com.idtp.dbbl.service.TokenInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `java.lang.String` `com.idtp.dbbl.service.TokenInterceptor.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `com.idtp.dbbl.service.TokenInterceptor.b` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.idtp.dbbl.service.TokenInterceptor` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/idtp/dbbl/service/TokenInterceptor;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2fe8ac.  v0:= "token" @kind object;
  #L2fe8b0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2fe8b6.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fe8bc.  v1.`com.idtp.dbbl.service.TokenInterceptor.a` @type ^`java.lang.String` := v2 @kind object;
  #L2fe8c0.  v1.`com.idtp.dbbl.service.TokenInterceptor.b` @type ^`java.lang.String` := v3 @kind object;
  #L2fe8c4.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`com.idtp.dbbl.service.TokenInterceptor` v4 @kind this, `okhttp3.Interceptor$Chain` v5 @kind object) @signature `Lcom/idtp/dbbl/service/TokenInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2fe830.  v0:= "chain" @kind object;
  #L2fe834.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2fe83a.  v0:= v4.`com.idtp.dbbl.service.TokenInterceptor.b` @type ^`java.lang.String` @kind object;
  #L2fe83e.  v1:= "" @kind object;
  #L2fe842.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2fe848.  v0:= temp;
  #L2fe84a.  if v0 == 0 then goto L2fe854;
  #L2fe84e.  v0:= "initial" @kind object;
  #L2fe852.  goto L2fe858;
  #L2fe854.  v0:= v4.`com.idtp.dbbl.service.TokenInterceptor.b` @type ^`java.lang.String` @kind object;
  #L2fe858.  call temp:= `request`(v5) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L2fe85e.  v1:= temp @kind object;
  #L2fe860.  call temp:= `newBuilder`(v1) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L2fe866.  v1:= temp @kind object;
  #L2fe868.  v2:= v4.`com.idtp.dbbl.service.TokenInterceptor.a` @type ^`java.lang.String` @kind object;
  #L2fe86c.  v3:= "Authorization" @kind object;
  #L2fe870.  call temp:= `header`(v1, v3, v2) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2fe876.  v1:= temp @kind object;
  #L2fe878.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2fe87e.  v2:= "Session" @kind object;
  #L2fe882.  call temp:= `header`(v1, v2, v0) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2fe888.  v0:= temp @kind object;
  #L2fe88a.  call temp:= `build`(v0) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L2fe890.  v0:= temp @kind object;
  #L2fe892.  call temp:= `proceed`(v5, v0) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L2fe898.  v5:= temp @kind object;
  #L2fe89a.  return v5 @kind object;
}
