record `com.idtp.dbbl.view.s1` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `java.lang.CharSequence` `com.idtp.dbbl.view.s1.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `com.idtp.dbbl.view.RTPFragment` `com.idtp.dbbl.view.s1.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.text.DecimalFormat` `com.idtp.dbbl.view.s1.c` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.idtp.dbbl.view.s1` v0 @kind this, `java.lang.CharSequence` v1 @kind object, `com.idtp.dbbl.view.RTPFragment` v2 @kind object, `java.text.DecimalFormat` v3 @kind object) @signature `Lcom/idtp/dbbl/view/s1;.<init>:(Ljava/lang/CharSequence;Lcom/idtp/dbbl/view/RTPFragment;Ljava/text/DecimalFormat;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L301fb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L301fb6.  v0.`com.idtp.dbbl.view.s1.a` @type ^`java.lang.CharSequence` := v1 @kind object;
  #L301fba.  v0.`com.idtp.dbbl.view.s1.b` @type ^`com.idtp.dbbl.view.RTPFragment` := v2 @kind object;
  #L301fbe.  v0.`com.idtp.dbbl.view.s1.c` @type ^`java.text.DecimalFormat` := v3 @kind object;
  #L301fc2.  return @kind void;
}
procedure `void` `run`(`com.idtp.dbbl.view.s1` v3 @kind this) @signature `Lcom/idtp/dbbl/view/s1;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L301fd4.  v0:= v3.`com.idtp.dbbl.view.s1.a` @type ^`java.lang.CharSequence` @kind object;
  #L301fd8.  v1:= v3.`com.idtp.dbbl.view.s1.b` @type ^`com.idtp.dbbl.view.RTPFragment` @kind object;
  #L301fdc.  v2:= v3.`com.idtp.dbbl.view.s1.c` @type ^`java.text.DecimalFormat` @kind object;
  #L301fe0.  call `a`(v0, v1, v2) @signature `Lcom/idtp/dbbl/view/RTPFragment$onViewCreated$4;.a:(Ljava/lang/CharSequence;Lcom/idtp/dbbl/view/RTPFragment;Ljava/text/DecimalFormat;)V` @kind static;
  #L301fe6.  return @kind void;
}
