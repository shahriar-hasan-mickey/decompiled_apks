record `com.idtp.dbbl.view.RegistrationFragment_MembersInjector` @kind class @AccessFlag PUBLIC_FINAL extends `dagger.MembersInjector` @kind interface {
  `javax.inject.Provider` `com.idtp.dbbl.view.RegistrationFragment_MembersInjector.a` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.idtp.dbbl.view.RegistrationFragment_MembersInjector` v0 @kind this, `javax.inject.Provider` v1 @kind object) @signature `Lcom/idtp/dbbl/view/RegistrationFragment_MembersInjector;.<init>:(Ljavax/inject/Provider;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L313d74.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L313d7a.  v0.`com.idtp.dbbl.view.RegistrationFragment_MembersInjector.a` @type ^`javax.inject.Provider` := v1 @kind object;
  #L313d7e.  return @kind void;
}
procedure `dagger.MembersInjector` `create`(`javax.inject.Provider` v1 @kind object) @signature `Lcom/idtp/dbbl/view/RegistrationFragment_MembersInjector;.create:(Ljavax/inject/Provider;)Ldagger/MembersInjector;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L313d58.  v0:= new `com.idtp.dbbl.view.RegistrationFragment_MembersInjector`;
  #L313d5c.  call `<init>`(v0, v1) @signature `Lcom/idtp/dbbl/view/RegistrationFragment_MembersInjector;.<init>:(Ljavax/inject/Provider;)V` @kind direct;
  #L313d62.  return v0 @kind object;
}
procedure `void` `injectFactory`(`com.idtp.dbbl.view.RegistrationFragment` v0 @kind object, `com.idtp.dbbl.viewmodel.IdtpViewModelFactory` v1 @kind object) @signature `Lcom/idtp/dbbl/view/RegistrationFragment_MembersInjector;.injectFactory:(Lcom/idtp/dbbl/view/RegistrationFragment;Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L313d90.  v0.`com.idtp.dbbl.view.RegistrationFragment.factory` @type ^`com.idtp.dbbl.viewmodel.IdtpViewModelFactory` := v1 @kind object;
  #L313d94.  return @kind void;
}
procedure `void` `injectMembers`(`com.idtp.dbbl.view.RegistrationFragment_MembersInjector` v1 @kind this, `com.idtp.dbbl.view.RegistrationFragment` v2 @kind object) @signature `Lcom/idtp/dbbl/view/RegistrationFragment_MembersInjector;.injectMembers:(Lcom/idtp/dbbl/view/RegistrationFragment;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L313da8.  v0:= v1.`com.idtp.dbbl.view.RegistrationFragment_MembersInjector.a` @type ^`javax.inject.Provider` @kind object;
  #L313dac.  call temp:= `get`(v0) @signature `Ljavax/inject/Provider;.get:()Ljava/lang/Object;` @kind interface;
  #L313db2.  v0:= temp @kind object;
  #L313db4.  v0:= (`com.idtp.dbbl.viewmodel.IdtpViewModelFactory`) v0 @kind object;
  #L313db8.  call `injectFactory`(v2, v0) @signature `Lcom/idtp/dbbl/view/RegistrationFragment_MembersInjector;.injectFactory:(Lcom/idtp/dbbl/view/RegistrationFragment;Lcom/idtp/dbbl/viewmodel/IdtpViewModelFactory;)V` @kind static;
  #L313dbe.  return @kind void;
}
procedure `void` `injectMembers`(`com.idtp.dbbl.view.RegistrationFragment_MembersInjector` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/idtp/dbbl/view/RegistrationFragment_MembersInjector;.injectMembers:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L313dd0.  v1:= (`com.idtp.dbbl.view.RegistrationFragment`) v1 @kind object;
  #L313dd4.  call `injectMembers`(v0, v1) @signature `Lcom/idtp/dbbl/view/RegistrationFragment_MembersInjector;.injectMembers:(Lcom/idtp/dbbl/view/RegistrationFragment;)V` @kind virtual;
  #L313dda.  return @kind void;
}
