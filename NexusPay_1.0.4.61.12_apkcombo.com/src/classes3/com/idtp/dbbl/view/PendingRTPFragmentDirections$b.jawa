record `com.idtp.dbbl.view.PendingRTPFragmentDirections$b` @kind class @AccessFlag PUBLIC_FINAL extends `androidx.navigation.NavDirections` @kind interface {
  `com.idtp.dbbl.model.SuccessType` `com.idtp.dbbl.view.PendingRTPFragmentDirections$b.a` @AccessFlag PUBLIC_FINAL;
  `int` `com.idtp.dbbl.view.PendingRTPFragmentDirections$b.b` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.idtp.dbbl.view.PendingRTPFragmentDirections$b` v1 @kind this, `com.idtp.dbbl.model.SuccessType` v2 @kind object) @signature `Lcom/idtp/dbbl/view/PendingRTPFragmentDirections$b;.<init>:(Lcom/idtp/dbbl/model/SuccessType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L30af7c.  v0:= "successType" @kind object;
  #L30af80.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L30af86.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30af8c.  v1.`com.idtp.dbbl.view.PendingRTPFragmentDirections$b.a` @type ^`com.idtp.dbbl.model.SuccessType` := v2 @kind object;
  #L30af90.  v2:= `@@com.idtp.dbbl.R$id.action_rtpReceivedFragment_to_transferSuccessFragment` @type ^`int`;
  #L30af94.  v1.`com.idtp.dbbl.view.PendingRTPFragmentDirections$b.b` @type ^`int` := v2;
  #L30af98.  return @kind void;
}
procedure `boolean` `equals`(`com.idtp.dbbl.view.PendingRTPFragmentDirections$b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/idtp/dbbl/view/PendingRTPFragmentDirections$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30aec0.  v0:= 1I;
  #L30aec2.  if v3 != v4 then goto L30aec8;
  #L30aec6.  return v0;
  #L30aec8.  v1:= instanceof @variable v4 @type ^`com.idtp.dbbl.view.PendingRTPFragmentDirections$b` @kind boolean;
  #L30aecc.  v2:= 0I;
  #L30aece.  if v1 != 0 then goto L30aed4;
  #L30aed2.  return v2;
  #L30aed4.  v4:= (`com.idtp.dbbl.view.PendingRTPFragmentDirections$b`) v4 @kind object;
  #L30aed8.  v1:= v3.`com.idtp.dbbl.view.PendingRTPFragmentDirections$b.a` @type ^`com.idtp.dbbl.model.SuccessType` @kind object;
  #L30aedc.  v4:= v4.`com.idtp.dbbl.view.PendingRTPFragmentDirections$b.a` @type ^`com.idtp.dbbl.model.SuccessType` @kind object;
  #L30aee0.  call temp:= `areEqual`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L30aee6.  v4:= temp;
  #L30aee8.  if v4 != 0 then goto L30aeee;
  #L30aeec.  return v2;
  #L30aeee.  return v0;
}
procedure `int` `getActionId`(`com.idtp.dbbl.view.PendingRTPFragmentDirections$b` v1 @kind this) @signature `Lcom/idtp/dbbl/view/PendingRTPFragmentDirections$b;.getActionId:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30af00.  v0:= v1.`com.idtp.dbbl.view.PendingRTPFragmentDirections$b.b` @type ^`int`;
  #L30af04.  return v0;
}
procedure `android.os.Bundle` `getArguments`(`com.idtp.dbbl.view.PendingRTPFragmentDirections$b` v4 @kind this) @signature `Lcom/idtp/dbbl/view/PendingRTPFragmentDirections$b;.getArguments:()Landroid/os/Bundle;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30ae38.  v0:= new `android.os.Bundle`;
  #L30ae3c.  call `<init>`(v0) @signature `Landroid/os/Bundle;.<init>:()V` @kind direct;
  #L30ae42.  v1:= constclass @type ^`android.os.Parcelable` @kind object;
  #L30ae46.  v2:= constclass @type ^`com.idtp.dbbl.model.SuccessType` @kind object;
  #L30ae4a.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L30ae50.  v1:= temp;
  #L30ae52.  v2:= "success_type" @kind object;
  #L30ae56.  if v1 == 0 then goto L30ae6a;
  #L30ae5a.  v1:= v4.`com.idtp.dbbl.view.PendingRTPFragmentDirections$b.a` @type ^`com.idtp.dbbl.model.SuccessType` @kind object;
  #L30ae5e.  v1:= (`android.os.Parcelable`) v1 @kind object;
  #L30ae62.  call `putParcelable`(v0, v2, v1) @signature `Landroid/os/Bundle;.putParcelable:(Ljava/lang/String;Landroid/os/Parcelable;)V` @kind virtual;
  #L30ae68.  goto L30ae88;
  #L30ae6a.  v1:= constclass @type ^`java.io.Serializable` @kind object;
  #L30ae6e.  v3:= constclass @type ^`com.idtp.dbbl.model.SuccessType` @kind object;
  #L30ae72.  call temp:= `isAssignableFrom`(v1, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L30ae78.  v1:= temp;
  #L30ae7a.  if v1 == 0 then goto L30ae8a;
  #L30ae7e.  v1:= v4.`com.idtp.dbbl.view.PendingRTPFragmentDirections$b.a` @type ^`com.idtp.dbbl.model.SuccessType` @kind object;
  #L30ae82.  call `putSerializable`(v0, v2, v1) @signature `Landroid/os/Bundle;.putSerializable:(Ljava/lang/String;Ljava/io/Serializable;)V` @kind virtual;
  #L30ae88.  return v0 @kind object;
  #L30ae8a.  v0:= new `java.lang.UnsupportedOperationException`;
  #L30ae8e.  v1:= constclass @type ^`com.idtp.dbbl.model.SuccessType` @kind object;
  #L30ae92.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L30ae98.  v1:= temp @kind object;
  #L30ae9a.  v2:= " must implement Parcelable or Serializable or must be an Enum." @kind object;
  #L30ae9e.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30aea4.  v1:= temp @kind object;
  #L30aea6.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30aeac.  throw v0;
}
procedure `int` `hashCode`(`com.idtp.dbbl.view.PendingRTPFragmentDirections$b` v1 @kind this) @signature `Lcom/idtp/dbbl/view/PendingRTPFragmentDirections$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30af18.  v0:= v1.`com.idtp.dbbl.view.PendingRTPFragmentDirections$b.a` @type ^`com.idtp.dbbl.model.SuccessType` @kind object;
  #L30af1c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L30af22.  v0:= temp;
  #L30af24.  return v0;
}
procedure `java.lang.String` `toString`(`com.idtp.dbbl.view.PendingRTPFragmentDirections$b` v2 @kind this) @signature `Lcom/idtp/dbbl/view/PendingRTPFragmentDirections$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30af38.  v0:= new `java.lang.StringBuilder`;
  #L30af3c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30af42.  v1:= "ActionRtpReceivedFragmentToTransferSuccessFragment(successType=" @kind object;
  #L30af46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30af4c.  v1:= v2.`com.idtp.dbbl.view.PendingRTPFragmentDirections$b.a` @type ^`com.idtp.dbbl.model.SuccessType` @kind object;
  #L30af50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30af56.  v1:= 41I;
  #L30af5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30af60.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30af66.  v0:= temp @kind object;
  #L30af68.  return v0 @kind object;
}
