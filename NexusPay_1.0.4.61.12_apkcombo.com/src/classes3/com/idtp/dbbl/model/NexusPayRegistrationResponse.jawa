record `com.idtp.dbbl.model.NexusPayRegistrationResponse` @kind class @AccessFlag PUBLIC_FINAL {
  `com.idtp.dbbl.model.HeaderRegResponse` `com.idtp.dbbl.model.NexusPayRegistrationResponse.a` @AccessFlag PUBLIC;
  `com.idtp.dbbl.model.BodyNexusPayRegResponse` `com.idtp.dbbl.model.NexusPayRegistrationResponse.b` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.NexusPayRegistrationResponse` v2 @kind this) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2fad9c.  v0:= 0I;
  #L2fad9e.  v1:= 3I;
  #L2fada0.  call `<init>`(v2, v0, v0, v1, v0) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.<init>:(Lcom/idtp/dbbl/model/HeaderRegResponse;Lcom/idtp/dbbl/model/BodyNexusPayRegResponse;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2fada6.  return @kind void;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.NexusPayRegistrationResponse` v0 @kind this, `com.idtp.dbbl.model.HeaderRegResponse` v1 @kind object, `com.idtp.dbbl.model.BodyNexusPayRegResponse` v2 @kind object) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.<init>:(Lcom/idtp/dbbl/model/HeaderRegResponse;Lcom/idtp/dbbl/model/BodyNexusPayRegResponse;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2fadb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fadbe.  v0.`com.idtp.dbbl.model.NexusPayRegistrationResponse.a` @type ^`com.idtp.dbbl.model.HeaderRegResponse` := v1 @kind object;
  #L2fadc2.  v0.`com.idtp.dbbl.model.NexusPayRegistrationResponse.b` @type ^`com.idtp.dbbl.model.BodyNexusPayRegResponse` := v2 @kind object;
  #L2fadc6.  return @kind void;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.NexusPayRegistrationResponse` v1 @kind this, `com.idtp.dbbl.model.HeaderRegResponse` v2 @kind object, `com.idtp.dbbl.model.BodyNexusPayRegResponse` v3 @kind object, `int` v4 , `kotlin.jvm.internal.DefaultConstructorMarker` v5 @kind object) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.<init>:(Lcom/idtp/dbbl/model/HeaderRegResponse;Lcom/idtp/dbbl/model/BodyNexusPayRegResponse;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L2fadd8.  v5:= v4 ^& 1;
  #L2faddc.  v0:= 0I;
  #L2fadde.  if v5 == 0 then goto L2fade4;
  #L2fade2.  v2:= v0 @kind object;
  #L2fade4.  v4:= v4 ^& 2;
  #L2fade8.  if v4 == 0 then goto L2fadee;
  #L2fadec.  v3:= v0 @kind object;
  #L2fadee.  call `<init>`(v1, v2, v3) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.<init>:(Lcom/idtp/dbbl/model/HeaderRegResponse;Lcom/idtp/dbbl/model/BodyNexusPayRegResponse;)V` @kind direct;
  #L2fadf4.  return @kind void;
}
procedure `com.idtp.dbbl.model.NexusPayRegistrationResponse` `copy$default`(`com.idtp.dbbl.model.NexusPayRegistrationResponse` v0 @kind object, `com.idtp.dbbl.model.HeaderRegResponse` v1 @kind object, `com.idtp.dbbl.model.BodyNexusPayRegResponse` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.copy$default:(Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;Lcom/idtp/dbbl/model/HeaderRegResponse;Lcom/idtp/dbbl/model/BodyNexusPayRegResponse;ILjava/lang/Object;)Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2facb4.  v4:= v3 ^& 1;
  #L2facb8.  if v4 == 0 then goto L2facc0;
  #L2facbc.  v1:= v0.`com.idtp.dbbl.model.NexusPayRegistrationResponse.a` @type ^`com.idtp.dbbl.model.HeaderRegResponse` @kind object;
  #L2facc0.  v3:= v3 ^& 2;
  #L2facc4.  if v3 == 0 then goto L2faccc;
  #L2facc8.  v2:= v0.`com.idtp.dbbl.model.NexusPayRegistrationResponse.b` @type ^`com.idtp.dbbl.model.BodyNexusPayRegResponse` @kind object;
  #L2faccc.  call temp:= `copy`(v0, v1, v2) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.copy:(Lcom/idtp/dbbl/model/HeaderRegResponse;Lcom/idtp/dbbl/model/BodyNexusPayRegResponse;)Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;` @kind virtual;
  #L2facd2.  v0:= temp @kind object;
  #L2facd4.  return v0 @kind object;
}
procedure `com.idtp.dbbl.model.HeaderRegResponse` `component1`(`com.idtp.dbbl.model.NexusPayRegistrationResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.component1:()Lcom/idtp/dbbl/model/HeaderRegResponse;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fac84.  v0:= v1.`com.idtp.dbbl.model.NexusPayRegistrationResponse.a` @type ^`com.idtp.dbbl.model.HeaderRegResponse` @kind object;
  #L2fac88.  return v0 @kind object;
}
procedure `com.idtp.dbbl.model.BodyNexusPayRegResponse` `component2`(`com.idtp.dbbl.model.NexusPayRegistrationResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.component2:()Lcom/idtp/dbbl/model/BodyNexusPayRegResponse;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fac54.  v0:= v1.`com.idtp.dbbl.model.NexusPayRegistrationResponse.b` @type ^`com.idtp.dbbl.model.BodyNexusPayRegResponse` @kind object;
  #L2fac58.  return v0 @kind object;
}
procedure `com.idtp.dbbl.model.NexusPayRegistrationResponse` `copy`(`com.idtp.dbbl.model.NexusPayRegistrationResponse` v1 @kind this, `com.idtp.dbbl.model.HeaderRegResponse` v2 @kind object, `com.idtp.dbbl.model.BodyNexusPayRegResponse` v3 @kind object) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.copy:(Lcom/idtp/dbbl/model/HeaderRegResponse;Lcom/idtp/dbbl/model/BodyNexusPayRegResponse;)Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2face8.  v0:= new `com.idtp.dbbl.model.NexusPayRegistrationResponse`;
  #L2facec.  call `<init>`(v0, v2, v3) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.<init>:(Lcom/idtp/dbbl/model/HeaderRegResponse;Lcom/idtp/dbbl/model/BodyNexusPayRegResponse;)V` @kind direct;
  #L2facf2.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.idtp.dbbl.model.NexusPayRegistrationResponse` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2fabfc.  v0:= 1I;
  #L2fabfe.  if v4 != v5 then goto L2fac04;
  #L2fac02.  return v0;
  #L2fac04.  v1:= instanceof @variable v5 @type ^`com.idtp.dbbl.model.NexusPayRegistrationResponse` @kind boolean;
  #L2fac08.  v2:= 0I;
  #L2fac0a.  if v1 != 0 then goto L2fac10;
  #L2fac0e.  return v2;
  #L2fac10.  v5:= (`com.idtp.dbbl.model.NexusPayRegistrationResponse`) v5 @kind object;
  #L2fac14.  v1:= v4.`com.idtp.dbbl.model.NexusPayRegistrationResponse.a` @type ^`com.idtp.dbbl.model.HeaderRegResponse` @kind object;
  #L2fac18.  v3:= v5.`com.idtp.dbbl.model.NexusPayRegistrationResponse.a` @type ^`com.idtp.dbbl.model.HeaderRegResponse` @kind object;
  #L2fac1c.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2fac22.  v1:= temp;
  #L2fac24.  if v1 != 0 then goto L2fac2a;
  #L2fac28.  return v2;
  #L2fac2a.  v1:= v4.`com.idtp.dbbl.model.NexusPayRegistrationResponse.b` @type ^`com.idtp.dbbl.model.BodyNexusPayRegResponse` @kind object;
  #L2fac2e.  v5:= v5.`com.idtp.dbbl.model.NexusPayRegistrationResponse.b` @type ^`com.idtp.dbbl.model.BodyNexusPayRegResponse` @kind object;
  #L2fac32.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2fac38.  v5:= temp;
  #L2fac3a.  if v5 != 0 then goto L2fac40;
  #L2fac3e.  return v2;
  #L2fac40.  return v0;
}
procedure `com.idtp.dbbl.model.BodyNexusPayRegResponse` `getBody`(`com.idtp.dbbl.model.NexusPayRegistrationResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.getBody:()Lcom/idtp/dbbl/model/BodyNexusPayRegResponse;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fac6c.  v0:= v1.`com.idtp.dbbl.model.NexusPayRegistrationResponse.b` @type ^`com.idtp.dbbl.model.BodyNexusPayRegResponse` @kind object;
  #L2fac70.  return v0 @kind object;
}
procedure `com.idtp.dbbl.model.HeaderRegResponse` `getHeader`(`com.idtp.dbbl.model.NexusPayRegistrationResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.getHeader:()Lcom/idtp/dbbl/model/HeaderRegResponse;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fac9c.  v0:= v1.`com.idtp.dbbl.model.NexusPayRegistrationResponse.a` @type ^`com.idtp.dbbl.model.HeaderRegResponse` @kind object;
  #L2faca0.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.idtp.dbbl.model.NexusPayRegistrationResponse` v3 @kind this) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2fad04.  v0:= v3.`com.idtp.dbbl.model.NexusPayRegistrationResponse.a` @type ^`com.idtp.dbbl.model.HeaderRegResponse` @kind object;
  #L2fad08.  v1:= 0I;
  #L2fad0a.  if v0 != 0 then goto L2fad12;
  #L2fad0e.  v0:= 0I;
  #L2fad10.  goto L2fad1a;
  #L2fad12.  call temp:= `hashCode`(v0) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.hashCode:()I` @kind virtual;
  #L2fad18.  v0:= temp;
  #L2fad1a.  v0:= v0 * 31;
  #L2fad1e.  v2:= v3.`com.idtp.dbbl.model.NexusPayRegistrationResponse.b` @type ^`com.idtp.dbbl.model.BodyNexusPayRegResponse` @kind object;
  #L2fad22.  if v2 != 0 then goto L2fad28;
  #L2fad26.  goto L2fad30;
  #L2fad28.  call temp:= `hashCode`(v2) @signature `Lcom/idtp/dbbl/model/BodyNexusPayRegResponse;.hashCode:()I` @kind virtual;
  #L2fad2e.  v1:= temp;
  #L2fad30.  v0:= v0 + v1 @kind int;
  #L2fad32.  return v0;
}
procedure `void` `setBody`(`com.idtp.dbbl.model.NexusPayRegistrationResponse` v0 @kind this, `com.idtp.dbbl.model.BodyNexusPayRegResponse` v1 @kind object) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.setBody:(Lcom/idtp/dbbl/model/BodyNexusPayRegResponse;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2fae08.  v0.`com.idtp.dbbl.model.NexusPayRegistrationResponse.b` @type ^`com.idtp.dbbl.model.BodyNexusPayRegResponse` := v1 @kind object;
  #L2fae0c.  return @kind void;
}
procedure `void` `setHeader`(`com.idtp.dbbl.model.NexusPayRegistrationResponse` v0 @kind this, `com.idtp.dbbl.model.HeaderRegResponse` v1 @kind object) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.setHeader:(Lcom/idtp/dbbl/model/HeaderRegResponse;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2fae20.  v0.`com.idtp.dbbl.model.NexusPayRegistrationResponse.a` @type ^`com.idtp.dbbl.model.HeaderRegResponse` := v1 @kind object;
  #L2fae24.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.idtp.dbbl.model.NexusPayRegistrationResponse` v2 @kind this) @signature `Lcom/idtp/dbbl/model/NexusPayRegistrationResponse;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2fad44.  v0:= new `java.lang.StringBuilder`;
  #L2fad48.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fad4e.  v1:= "NexusPayRegistrationResponse(header=" @kind object;
  #L2fad52.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fad58.  v1:= v2.`com.idtp.dbbl.model.NexusPayRegistrationResponse.a` @type ^`com.idtp.dbbl.model.HeaderRegResponse` @kind object;
  #L2fad5c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fad62.  v1:= ", body=" @kind object;
  #L2fad66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fad6c.  v1:= v2.`com.idtp.dbbl.model.NexusPayRegistrationResponse.b` @type ^`com.idtp.dbbl.model.BodyNexusPayRegResponse` @kind object;
  #L2fad70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fad76.  v1:= 41I;
  #L2fad7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fad80.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fad86.  v0:= temp @kind object;
  #L2fad88.  return v0 @kind object;
}
