record `com.idtp.dbbl.model.LoginResponse` @kind class @AccessFlag PUBLIC_FINAL {
  `com.idtp.dbbl.model.Header` `com.idtp.dbbl.model.LoginResponse.a` @AccessFlag PUBLIC;
  `com.idtp.dbbl.model.Body` `com.idtp.dbbl.model.LoginResponse.b` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.LoginResponse` v2 @kind this) @signature `Lcom/idtp/dbbl/model/LoginResponse;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2fab60.  v0:= 0I;
  #L2fab62.  v1:= 3I;
  #L2fab64.  call `<init>`(v2, v0, v0, v1, v0) @signature `Lcom/idtp/dbbl/model/LoginResponse;.<init>:(Lcom/idtp/dbbl/model/Header;Lcom/idtp/dbbl/model/Body;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2fab6a.  return @kind void;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.LoginResponse` v0 @kind this, `com.idtp.dbbl.model.Header` v1 @kind object, `com.idtp.dbbl.model.Body` v2 @kind object) @signature `Lcom/idtp/dbbl/model/LoginResponse;.<init>:(Lcom/idtp/dbbl/model/Header;Lcom/idtp/dbbl/model/Body;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2fab7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fab82.  v0.`com.idtp.dbbl.model.LoginResponse.a` @type ^`com.idtp.dbbl.model.Header` := v1 @kind object;
  #L2fab86.  v0.`com.idtp.dbbl.model.LoginResponse.b` @type ^`com.idtp.dbbl.model.Body` := v2 @kind object;
  #L2fab8a.  return @kind void;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.LoginResponse` v1 @kind this, `com.idtp.dbbl.model.Header` v2 @kind object, `com.idtp.dbbl.model.Body` v3 @kind object, `int` v4 , `kotlin.jvm.internal.DefaultConstructorMarker` v5 @kind object) @signature `Lcom/idtp/dbbl/model/LoginResponse;.<init>:(Lcom/idtp/dbbl/model/Header;Lcom/idtp/dbbl/model/Body;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L2fab9c.  v5:= v4 ^& 1;
  #L2faba0.  v0:= 0I;
  #L2faba2.  if v5 == 0 then goto L2faba8;
  #L2faba6.  v2:= v0 @kind object;
  #L2faba8.  v4:= v4 ^& 2;
  #L2fabac.  if v4 == 0 then goto L2fabb2;
  #L2fabb0.  v3:= v0 @kind object;
  #L2fabb2.  call `<init>`(v1, v2, v3) @signature `Lcom/idtp/dbbl/model/LoginResponse;.<init>:(Lcom/idtp/dbbl/model/Header;Lcom/idtp/dbbl/model/Body;)V` @kind direct;
  #L2fabb8.  return @kind void;
}
procedure `com.idtp.dbbl.model.LoginResponse` `copy$default`(`com.idtp.dbbl.model.LoginResponse` v0 @kind object, `com.idtp.dbbl.model.Header` v1 @kind object, `com.idtp.dbbl.model.Body` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/idtp/dbbl/model/LoginResponse;.copy$default:(Lcom/idtp/dbbl/model/LoginResponse;Lcom/idtp/dbbl/model/Header;Lcom/idtp/dbbl/model/Body;ILjava/lang/Object;)Lcom/idtp/dbbl/model/LoginResponse;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2faa78.  v4:= v3 ^& 1;
  #L2faa7c.  if v4 == 0 then goto L2faa84;
  #L2faa80.  v1:= v0.`com.idtp.dbbl.model.LoginResponse.a` @type ^`com.idtp.dbbl.model.Header` @kind object;
  #L2faa84.  v3:= v3 ^& 2;
  #L2faa88.  if v3 == 0 then goto L2faa90;
  #L2faa8c.  v2:= v0.`com.idtp.dbbl.model.LoginResponse.b` @type ^`com.idtp.dbbl.model.Body` @kind object;
  #L2faa90.  call temp:= `copy`(v0, v1, v2) @signature `Lcom/idtp/dbbl/model/LoginResponse;.copy:(Lcom/idtp/dbbl/model/Header;Lcom/idtp/dbbl/model/Body;)Lcom/idtp/dbbl/model/LoginResponse;` @kind virtual;
  #L2faa96.  v0:= temp @kind object;
  #L2faa98.  return v0 @kind object;
}
procedure `com.idtp.dbbl.model.Header` `component1`(`com.idtp.dbbl.model.LoginResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/LoginResponse;.component1:()Lcom/idtp/dbbl/model/Header;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2faa48.  v0:= v1.`com.idtp.dbbl.model.LoginResponse.a` @type ^`com.idtp.dbbl.model.Header` @kind object;
  #L2faa4c.  return v0 @kind object;
}
procedure `com.idtp.dbbl.model.Body` `component2`(`com.idtp.dbbl.model.LoginResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/LoginResponse;.component2:()Lcom/idtp/dbbl/model/Body;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2faa18.  v0:= v1.`com.idtp.dbbl.model.LoginResponse.b` @type ^`com.idtp.dbbl.model.Body` @kind object;
  #L2faa1c.  return v0 @kind object;
}
procedure `com.idtp.dbbl.model.LoginResponse` `copy`(`com.idtp.dbbl.model.LoginResponse` v1 @kind this, `com.idtp.dbbl.model.Header` v2 @kind object, `com.idtp.dbbl.model.Body` v3 @kind object) @signature `Lcom/idtp/dbbl/model/LoginResponse;.copy:(Lcom/idtp/dbbl/model/Header;Lcom/idtp/dbbl/model/Body;)Lcom/idtp/dbbl/model/LoginResponse;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2faaac.  v0:= new `com.idtp.dbbl.model.LoginResponse`;
  #L2faab0.  call `<init>`(v0, v2, v3) @signature `Lcom/idtp/dbbl/model/LoginResponse;.<init>:(Lcom/idtp/dbbl/model/Header;Lcom/idtp/dbbl/model/Body;)V` @kind direct;
  #L2faab6.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.idtp.dbbl.model.LoginResponse` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/idtp/dbbl/model/LoginResponse;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2fa9c0.  v0:= 1I;
  #L2fa9c2.  if v4 != v5 then goto L2fa9c8;
  #L2fa9c6.  return v0;
  #L2fa9c8.  v1:= instanceof @variable v5 @type ^`com.idtp.dbbl.model.LoginResponse` @kind boolean;
  #L2fa9cc.  v2:= 0I;
  #L2fa9ce.  if v1 != 0 then goto L2fa9d4;
  #L2fa9d2.  return v2;
  #L2fa9d4.  v5:= (`com.idtp.dbbl.model.LoginResponse`) v5 @kind object;
  #L2fa9d8.  v1:= v4.`com.idtp.dbbl.model.LoginResponse.a` @type ^`com.idtp.dbbl.model.Header` @kind object;
  #L2fa9dc.  v3:= v5.`com.idtp.dbbl.model.LoginResponse.a` @type ^`com.idtp.dbbl.model.Header` @kind object;
  #L2fa9e0.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2fa9e6.  v1:= temp;
  #L2fa9e8.  if v1 != 0 then goto L2fa9ee;
  #L2fa9ec.  return v2;
  #L2fa9ee.  v1:= v4.`com.idtp.dbbl.model.LoginResponse.b` @type ^`com.idtp.dbbl.model.Body` @kind object;
  #L2fa9f2.  v5:= v5.`com.idtp.dbbl.model.LoginResponse.b` @type ^`com.idtp.dbbl.model.Body` @kind object;
  #L2fa9f6.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2fa9fc.  v5:= temp;
  #L2fa9fe.  if v5 != 0 then goto L2faa04;
  #L2faa02.  return v2;
  #L2faa04.  return v0;
}
procedure `com.idtp.dbbl.model.Body` `getBody`(`com.idtp.dbbl.model.LoginResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/LoginResponse;.getBody:()Lcom/idtp/dbbl/model/Body;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2faa30.  v0:= v1.`com.idtp.dbbl.model.LoginResponse.b` @type ^`com.idtp.dbbl.model.Body` @kind object;
  #L2faa34.  return v0 @kind object;
}
procedure `com.idtp.dbbl.model.Header` `getHeader`(`com.idtp.dbbl.model.LoginResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/LoginResponse;.getHeader:()Lcom/idtp/dbbl/model/Header;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2faa60.  v0:= v1.`com.idtp.dbbl.model.LoginResponse.a` @type ^`com.idtp.dbbl.model.Header` @kind object;
  #L2faa64.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.idtp.dbbl.model.LoginResponse` v3 @kind this) @signature `Lcom/idtp/dbbl/model/LoginResponse;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2faac8.  v0:= v3.`com.idtp.dbbl.model.LoginResponse.a` @type ^`com.idtp.dbbl.model.Header` @kind object;
  #L2faacc.  v1:= 0I;
  #L2faace.  if v0 != 0 then goto L2faad6;
  #L2faad2.  v0:= 0I;
  #L2faad4.  goto L2faade;
  #L2faad6.  call temp:= `hashCode`(v0) @signature `Lcom/idtp/dbbl/model/Header;.hashCode:()I` @kind virtual;
  #L2faadc.  v0:= temp;
  #L2faade.  v0:= v0 * 31;
  #L2faae2.  v2:= v3.`com.idtp.dbbl.model.LoginResponse.b` @type ^`com.idtp.dbbl.model.Body` @kind object;
  #L2faae6.  if v2 != 0 then goto L2faaec;
  #L2faaea.  goto L2faaf4;
  #L2faaec.  call temp:= `hashCode`(v2) @signature `Lcom/idtp/dbbl/model/Body;.hashCode:()I` @kind virtual;
  #L2faaf2.  v1:= temp;
  #L2faaf4.  v0:= v0 + v1 @kind int;
  #L2faaf6.  return v0;
}
procedure `void` `setBody`(`com.idtp.dbbl.model.LoginResponse` v0 @kind this, `com.idtp.dbbl.model.Body` v1 @kind object) @signature `Lcom/idtp/dbbl/model/LoginResponse;.setBody:(Lcom/idtp/dbbl/model/Body;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2fabcc.  v0.`com.idtp.dbbl.model.LoginResponse.b` @type ^`com.idtp.dbbl.model.Body` := v1 @kind object;
  #L2fabd0.  return @kind void;
}
procedure `void` `setHeader`(`com.idtp.dbbl.model.LoginResponse` v0 @kind this, `com.idtp.dbbl.model.Header` v1 @kind object) @signature `Lcom/idtp/dbbl/model/LoginResponse;.setHeader:(Lcom/idtp/dbbl/model/Header;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2fabe4.  v0.`com.idtp.dbbl.model.LoginResponse.a` @type ^`com.idtp.dbbl.model.Header` := v1 @kind object;
  #L2fabe8.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.idtp.dbbl.model.LoginResponse` v2 @kind this) @signature `Lcom/idtp/dbbl/model/LoginResponse;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2fab08.  v0:= new `java.lang.StringBuilder`;
  #L2fab0c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fab12.  v1:= "LoginResponse(header=" @kind object;
  #L2fab16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fab1c.  v1:= v2.`com.idtp.dbbl.model.LoginResponse.a` @type ^`com.idtp.dbbl.model.Header` @kind object;
  #L2fab20.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fab26.  v1:= ", body=" @kind object;
  #L2fab2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fab30.  v1:= v2.`com.idtp.dbbl.model.LoginResponse.b` @type ^`com.idtp.dbbl.model.Body` @kind object;
  #L2fab34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fab3a.  v1:= 41I;
  #L2fab3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fab44.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fab4a.  v0:= temp @kind object;
  #L2fab4c.  return v0 @kind object;
}
