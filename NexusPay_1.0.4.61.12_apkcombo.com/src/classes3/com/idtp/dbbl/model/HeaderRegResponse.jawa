record `com.idtp.dbbl.model.HeaderRegResponse` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `com.idtp.dbbl.model.HeaderRegResponse.a` @AccessFlag PUBLIC;
  `java.lang.String` `com.idtp.dbbl.model.HeaderRegResponse.b` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.HeaderRegResponse` v3 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2f5bc0.  v0:= 0I;
  #L2f5bc2.  v1:= 0I;
  #L2f5bc4.  v2:= 3I;
  #L2f5bc6.  call `<init>`(v3, v0, v1, v2, v1) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.<init>:(ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2f5bcc.  return @kind void;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.HeaderRegResponse` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.<init>:(ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f5be0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f5be6.  v0.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int` := v1;
  #L2f5bea.  v0.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` := v2 @kind object;
  #L2f5bee.  return @kind void;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.HeaderRegResponse` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `int` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.<init>:(ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2f5c00.  v4:= v3 ^& 1;
  #L2f5c04.  if v4 == 0 then goto L2f5c0a;
  #L2f5c08.  v1:= 0I;
  #L2f5c0a.  v3:= v3 ^& 2;
  #L2f5c0e.  if v3 == 0 then goto L2f5c14;
  #L2f5c12.  v2:= 0I;
  #L2f5c14.  call `<init>`(v0, v1, v2) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L2f5c1a.  return @kind void;
}
procedure `com.idtp.dbbl.model.HeaderRegResponse` `copy$default`(`com.idtp.dbbl.model.HeaderRegResponse` v0 @kind object, `int` v1 , `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.copy$default:(Lcom/idtp/dbbl/model/HeaderRegResponse;ILjava/lang/String;ILjava/lang/Object;)Lcom/idtp/dbbl/model/HeaderRegResponse;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2f5a88.  v4:= v3 ^& 1;
  #L2f5a8c.  if v4 == 0 then goto L2f5a94;
  #L2f5a90.  v1:= v0.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int`;
  #L2f5a94.  v3:= v3 ^& 2;
  #L2f5a98.  if v3 == 0 then goto L2f5aa0;
  #L2f5a9c.  v2:= v0.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` @kind object;
  #L2f5aa0.  call temp:= `copy`(v0, v1, v2) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.copy:(ILjava/lang/String;)Lcom/idtp/dbbl/model/HeaderRegResponse;` @kind virtual;
  #L2f5aa6.  v0:= temp @kind object;
  #L2f5aa8.  return v0 @kind object;
}
procedure `int` `component1`(`com.idtp.dbbl.model.HeaderRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.component1:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f5ad8.  v0:= v1.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int`;
  #L2f5adc.  return v0;
}
procedure `java.lang.String` `component2`(`com.idtp.dbbl.model.HeaderRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.component2:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f5b38.  v0:= v1.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` @kind object;
  #L2f5b3c.  return v0 @kind object;
}
procedure `com.idtp.dbbl.model.HeaderRegResponse` `copy`(`com.idtp.dbbl.model.HeaderRegResponse` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.copy:(ILjava/lang/String;)Lcom/idtp/dbbl/model/HeaderRegResponse;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f5abc.  v0:= new `com.idtp.dbbl.model.HeaderRegResponse`;
  #L2f5ac0.  call `<init>`(v0, v2, v3) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L2f5ac6.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.idtp.dbbl.model.HeaderRegResponse` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f5a38.  v0:= 1I;
  #L2f5a3a.  if v4 != v5 then goto L2f5a40;
  #L2f5a3e.  return v0;
  #L2f5a40.  v1:= instanceof @variable v5 @type ^`com.idtp.dbbl.model.HeaderRegResponse` @kind boolean;
  #L2f5a44.  v2:= 0I;
  #L2f5a46.  if v1 != 0 then goto L2f5a4c;
  #L2f5a4a.  return v2;
  #L2f5a4c.  v5:= (`com.idtp.dbbl.model.HeaderRegResponse`) v5 @kind object;
  #L2f5a50.  v1:= v4.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int`;
  #L2f5a54.  v3:= v5.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int`;
  #L2f5a58.  if v1 == v3 then goto L2f5a5e;
  #L2f5a5c.  return v2;
  #L2f5a5e.  v1:= v4.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` @kind object;
  #L2f5a62.  v5:= v5.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` @kind object;
  #L2f5a66.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2f5a6c.  v5:= temp;
  #L2f5a6e.  if v5 != 0 then goto L2f5a74;
  #L2f5a72.  return v2;
  #L2f5a74.  return v0;
}
procedure `int` `getResponseCode`(`com.idtp.dbbl.model.HeaderRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.getResponseCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f5af0.  v0:= v1.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int`;
  #L2f5af4.  return v0;
}
procedure `java.lang.String` `getResponseMessage`(`com.idtp.dbbl.model.HeaderRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.getResponseMessage:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f5b50.  v0:= v1.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` @kind object;
  #L2f5b54.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.idtp.dbbl.model.HeaderRegResponse` v2 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f5b08.  v0:= v2.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int`;
  #L2f5b0c.  v0:= v0 * 31;
  #L2f5b10.  v1:= v2.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` @kind object;
  #L2f5b14.  if v1 != 0 then goto L2f5b1c;
  #L2f5b18.  v1:= 0I;
  #L2f5b1a.  goto L2f5b24;
  #L2f5b1c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2f5b22.  v1:= temp;
  #L2f5b24.  v0:= v0 + v1 @kind int;
  #L2f5b26.  return v0;
}
procedure `void` `setResponseCode`(`com.idtp.dbbl.model.HeaderRegResponse` v0 @kind this, `int` v1 ) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.setResponseCode:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2f5c2c.  v0.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int` := v1;
  #L2f5c30.  return @kind void;
}
procedure `void` `setResponseMessage`(`com.idtp.dbbl.model.HeaderRegResponse` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.setResponseMessage:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2f5c44.  v0.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` := v1 @kind object;
  #L2f5c48.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.idtp.dbbl.model.HeaderRegResponse` v2 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderRegResponse;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f5b68.  v0:= new `java.lang.StringBuilder`;
  #L2f5b6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f5b72.  v1:= "HeaderRegResponse(responseCode=" @kind object;
  #L2f5b76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5b7c.  v1:= v2.`com.idtp.dbbl.model.HeaderRegResponse.a` @type ^`int`;
  #L2f5b80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5b86.  v1:= ", responseMessage=" @kind object;
  #L2f5b8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5b90.  v1:= v2.`com.idtp.dbbl.model.HeaderRegResponse.b` @type ^`java.lang.String` @kind object;
  #L2f5b94.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5b9a.  v1:= 41I;
  #L2f5b9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5ba4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f5baa.  v0:= temp @kind object;
  #L2f5bac.  return v0 @kind object;
}
