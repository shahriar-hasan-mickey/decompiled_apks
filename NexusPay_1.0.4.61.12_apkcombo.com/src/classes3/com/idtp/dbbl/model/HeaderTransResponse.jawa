record `com.idtp.dbbl.model.HeaderTransResponse` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `com.idtp.dbbl.model.HeaderTransResponse.a` @AccessFlag PUBLIC;
  `java.lang.String` `com.idtp.dbbl.model.HeaderTransResponse.b` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.HeaderTransResponse` v3 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2f5de4.  v0:= 0I;
  #L2f5de6.  v1:= 0I;
  #L2f5de8.  v2:= 3I;
  #L2f5dea.  call `<init>`(v3, v0, v1, v2, v1) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.<init>:(ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2f5df0.  return @kind void;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.HeaderTransResponse` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.<init>:(ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f5e04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f5e0a.  v0.`com.idtp.dbbl.model.HeaderTransResponse.a` @type ^`int` := v1;
  #L2f5e0e.  v0.`com.idtp.dbbl.model.HeaderTransResponse.b` @type ^`java.lang.String` := v2 @kind object;
  #L2f5e12.  return @kind void;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.HeaderTransResponse` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `int` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.<init>:(ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2f5e24.  v4:= v3 ^& 1;
  #L2f5e28.  if v4 == 0 then goto L2f5e2e;
  #L2f5e2c.  v1:= 0I;
  #L2f5e2e.  v3:= v3 ^& 2;
  #L2f5e32.  if v3 == 0 then goto L2f5e38;
  #L2f5e36.  v2:= 0I;
  #L2f5e38.  call `<init>`(v0, v1, v2) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L2f5e3e.  return @kind void;
}
procedure `com.idtp.dbbl.model.HeaderTransResponse` `copy$default`(`com.idtp.dbbl.model.HeaderTransResponse` v0 @kind object, `int` v1 , `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.copy$default:(Lcom/idtp/dbbl/model/HeaderTransResponse;ILjava/lang/String;ILjava/lang/Object;)Lcom/idtp/dbbl/model/HeaderTransResponse;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2f5cac.  v4:= v3 ^& 1;
  #L2f5cb0.  if v4 == 0 then goto L2f5cb8;
  #L2f5cb4.  v1:= v0.`com.idtp.dbbl.model.HeaderTransResponse.a` @type ^`int`;
  #L2f5cb8.  v3:= v3 ^& 2;
  #L2f5cbc.  if v3 == 0 then goto L2f5cc4;
  #L2f5cc0.  v2:= v0.`com.idtp.dbbl.model.HeaderTransResponse.b` @type ^`java.lang.String` @kind object;
  #L2f5cc4.  call temp:= `copy`(v0, v1, v2) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.copy:(ILjava/lang/String;)Lcom/idtp/dbbl/model/HeaderTransResponse;` @kind virtual;
  #L2f5cca.  v0:= temp @kind object;
  #L2f5ccc.  return v0 @kind object;
}
procedure `int` `component1`(`com.idtp.dbbl.model.HeaderTransResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.component1:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f5cfc.  v0:= v1.`com.idtp.dbbl.model.HeaderTransResponse.a` @type ^`int`;
  #L2f5d00.  return v0;
}
procedure `java.lang.String` `component2`(`com.idtp.dbbl.model.HeaderTransResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.component2:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f5d5c.  v0:= v1.`com.idtp.dbbl.model.HeaderTransResponse.b` @type ^`java.lang.String` @kind object;
  #L2f5d60.  return v0 @kind object;
}
procedure `com.idtp.dbbl.model.HeaderTransResponse` `copy`(`com.idtp.dbbl.model.HeaderTransResponse` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.copy:(ILjava/lang/String;)Lcom/idtp/dbbl/model/HeaderTransResponse;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f5ce0.  v0:= new `com.idtp.dbbl.model.HeaderTransResponse`;
  #L2f5ce4.  call `<init>`(v0, v2, v3) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L2f5cea.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.idtp.dbbl.model.HeaderTransResponse` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f5c5c.  v0:= 1I;
  #L2f5c5e.  if v4 != v5 then goto L2f5c64;
  #L2f5c62.  return v0;
  #L2f5c64.  v1:= instanceof @variable v5 @type ^`com.idtp.dbbl.model.HeaderTransResponse` @kind boolean;
  #L2f5c68.  v2:= 0I;
  #L2f5c6a.  if v1 != 0 then goto L2f5c70;
  #L2f5c6e.  return v2;
  #L2f5c70.  v5:= (`com.idtp.dbbl.model.HeaderTransResponse`) v5 @kind object;
  #L2f5c74.  v1:= v4.`com.idtp.dbbl.model.HeaderTransResponse.a` @type ^`int`;
  #L2f5c78.  v3:= v5.`com.idtp.dbbl.model.HeaderTransResponse.a` @type ^`int`;
  #L2f5c7c.  if v1 == v3 then goto L2f5c82;
  #L2f5c80.  return v2;
  #L2f5c82.  v1:= v4.`com.idtp.dbbl.model.HeaderTransResponse.b` @type ^`java.lang.String` @kind object;
  #L2f5c86.  v5:= v5.`com.idtp.dbbl.model.HeaderTransResponse.b` @type ^`java.lang.String` @kind object;
  #L2f5c8a.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2f5c90.  v5:= temp;
  #L2f5c92.  if v5 != 0 then goto L2f5c98;
  #L2f5c96.  return v2;
  #L2f5c98.  return v0;
}
procedure `int` `getResponseCode`(`com.idtp.dbbl.model.HeaderTransResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.getResponseCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f5d14.  v0:= v1.`com.idtp.dbbl.model.HeaderTransResponse.a` @type ^`int`;
  #L2f5d18.  return v0;
}
procedure `java.lang.String` `getResponseMessage`(`com.idtp.dbbl.model.HeaderTransResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.getResponseMessage:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f5d74.  v0:= v1.`com.idtp.dbbl.model.HeaderTransResponse.b` @type ^`java.lang.String` @kind object;
  #L2f5d78.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.idtp.dbbl.model.HeaderTransResponse` v2 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f5d2c.  v0:= v2.`com.idtp.dbbl.model.HeaderTransResponse.a` @type ^`int`;
  #L2f5d30.  v0:= v0 * 31;
  #L2f5d34.  v1:= v2.`com.idtp.dbbl.model.HeaderTransResponse.b` @type ^`java.lang.String` @kind object;
  #L2f5d38.  if v1 != 0 then goto L2f5d40;
  #L2f5d3c.  v1:= 0I;
  #L2f5d3e.  goto L2f5d48;
  #L2f5d40.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2f5d46.  v1:= temp;
  #L2f5d48.  v0:= v0 + v1 @kind int;
  #L2f5d4a.  return v0;
}
procedure `void` `setResponseCode`(`com.idtp.dbbl.model.HeaderTransResponse` v0 @kind this, `int` v1 ) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.setResponseCode:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2f5e50.  v0.`com.idtp.dbbl.model.HeaderTransResponse.a` @type ^`int` := v1;
  #L2f5e54.  return @kind void;
}
procedure `void` `setResponseMessage`(`com.idtp.dbbl.model.HeaderTransResponse` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.setResponseMessage:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2f5e68.  v0.`com.idtp.dbbl.model.HeaderTransResponse.b` @type ^`java.lang.String` := v1 @kind object;
  #L2f5e6c.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.idtp.dbbl.model.HeaderTransResponse` v2 @kind this) @signature `Lcom/idtp/dbbl/model/HeaderTransResponse;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f5d8c.  v0:= new `java.lang.StringBuilder`;
  #L2f5d90.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f5d96.  v1:= "HeaderTransResponse(responseCode=" @kind object;
  #L2f5d9a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5da0.  v1:= v2.`com.idtp.dbbl.model.HeaderTransResponse.a` @type ^`int`;
  #L2f5da4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5daa.  v1:= ", responseMessage=" @kind object;
  #L2f5dae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5db4.  v1:= v2.`com.idtp.dbbl.model.HeaderTransResponse.b` @type ^`java.lang.String` @kind object;
  #L2f5db8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5dbe.  v1:= 41I;
  #L2f5dc2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5dc8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f5dce.  v0:= temp @kind object;
  #L2f5dd0.  return v0 @kind object;
}
