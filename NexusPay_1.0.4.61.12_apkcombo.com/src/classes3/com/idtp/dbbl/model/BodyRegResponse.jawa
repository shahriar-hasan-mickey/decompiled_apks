record `com.idtp.dbbl.model.BodyRegResponse` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `com.idtp.dbbl.model.BodyRegResponse.a` @AccessFlag PUBLIC;
  `java.lang.String` `com.idtp.dbbl.model.BodyRegResponse.b` @AccessFlag PUBLIC;
  `java.lang.String` `com.idtp.dbbl.model.BodyRegResponse.c` @AccessFlag PUBLIC;
  `java.lang.String` `com.idtp.dbbl.model.BodyRegResponse.d` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.BodyRegResponse` v7 @kind this) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2f2e0c.  v1:= 0I;
  #L2f2e0e.  v2:= 0I;
  #L2f2e10.  v3:= 0I;
  #L2f2e12.  v4:= 0I;
  #L2f2e14.  v5:= 15I;
  #L2f2e18.  v6:= 0I;
  #L2f2e1a.  v0:= v7 @kind object;
  #L2f2e1c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2f2e22.  return @kind void;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.BodyRegResponse` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f2e34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f2e3a.  v0.`com.idtp.dbbl.model.BodyRegResponse.a` @type ^`java.lang.String` := v1 @kind object;
  #L2f2e3e.  v0.`com.idtp.dbbl.model.BodyRegResponse.b` @type ^`java.lang.String` := v2 @kind object;
  #L2f2e42.  v0.`com.idtp.dbbl.model.BodyRegResponse.c` @type ^`java.lang.String` := v3 @kind object;
  #L2f2e46.  v0.`com.idtp.dbbl.model.BodyRegResponse.d` @type ^`java.lang.String` := v4 @kind object;
  #L2f2e4a.  return @kind void;
}
procedure `void` `<init>`(`com.idtp.dbbl.model.BodyRegResponse` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 , `kotlin.jvm.internal.DefaultConstructorMarker` v7 @kind object) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f2e5c.  v7:= v6 ^& 1;
  #L2f2e60.  v0:= 0I;
  #L2f2e62.  if v7 == 0 then goto L2f2e68;
  #L2f2e66.  v2:= v0 @kind object;
  #L2f2e68.  v7:= v6 ^& 2;
  #L2f2e6c.  if v7 == 0 then goto L2f2e72;
  #L2f2e70.  v3:= v0 @kind object;
  #L2f2e72.  v7:= v6 ^& 4;
  #L2f2e76.  if v7 == 0 then goto L2f2e7c;
  #L2f2e7a.  v4:= v0 @kind object;
  #L2f2e7c.  v6:= v6 ^& 8;
  #L2f2e80.  if v6 == 0 then goto L2f2e86;
  #L2f2e84.  v5:= v0 @kind object;
  #L2f2e86.  call `<init>`(v1, v2, v3, v4, v5) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L2f2e8c.  return @kind void;
}
procedure `com.idtp.dbbl.model.BodyRegResponse` `copy$default`(`com.idtp.dbbl.model.BodyRegResponse` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.copy$default:(Lcom/idtp/dbbl/model/BodyRegResponse;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lcom/idtp/dbbl/model/BodyRegResponse;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2f2bf0.  v6:= v5 ^& 1;
  #L2f2bf4.  if v6 == 0 then goto L2f2bfc;
  #L2f2bf8.  v1:= v0.`com.idtp.dbbl.model.BodyRegResponse.a` @type ^`java.lang.String` @kind object;
  #L2f2bfc.  v6:= v5 ^& 2;
  #L2f2c00.  if v6 == 0 then goto L2f2c08;
  #L2f2c04.  v2:= v0.`com.idtp.dbbl.model.BodyRegResponse.b` @type ^`java.lang.String` @kind object;
  #L2f2c08.  v6:= v5 ^& 4;
  #L2f2c0c.  if v6 == 0 then goto L2f2c14;
  #L2f2c10.  v3:= v0.`com.idtp.dbbl.model.BodyRegResponse.c` @type ^`java.lang.String` @kind object;
  #L2f2c14.  v5:= v5 ^& 8;
  #L2f2c18.  if v5 == 0 then goto L2f2c20;
  #L2f2c1c.  v4:= v0.`com.idtp.dbbl.model.BodyRegResponse.d` @type ^`java.lang.String` @kind object;
  #L2f2c20.  call temp:= `copy`(v0, v1, v2, v3, v4) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.copy:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/idtp/dbbl/model/BodyRegResponse;` @kind virtual;
  #L2f2c26.  v0:= temp @kind object;
  #L2f2c28.  return v0 @kind object;
}
procedure `java.lang.String` `component1`(`com.idtp.dbbl.model.BodyRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.component1:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f2ccc.  v0:= v1.`com.idtp.dbbl.model.BodyRegResponse.a` @type ^`java.lang.String` @kind object;
  #L2f2cd0.  return v0 @kind object;
}
procedure `java.lang.String` `component2`(`com.idtp.dbbl.model.BodyRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.component2:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f2ce4.  v0:= v1.`com.idtp.dbbl.model.BodyRegResponse.b` @type ^`java.lang.String` @kind object;
  #L2f2ce8.  return v0 @kind object;
}
procedure `java.lang.String` `component3`(`com.idtp.dbbl.model.BodyRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.component3:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f2cfc.  v0:= v1.`com.idtp.dbbl.model.BodyRegResponse.c` @type ^`java.lang.String` @kind object;
  #L2f2d00.  return v0 @kind object;
}
procedure `java.lang.String` `component4`(`com.idtp.dbbl.model.BodyRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.component4:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f2d14.  v0:= v1.`com.idtp.dbbl.model.BodyRegResponse.d` @type ^`java.lang.String` @kind object;
  #L2f2d18.  return v0 @kind object;
}
procedure `com.idtp.dbbl.model.BodyRegResponse` `copy`(`com.idtp.dbbl.model.BodyRegResponse` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.copy:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/idtp/dbbl/model/BodyRegResponse;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f2c3c.  v0:= new `com.idtp.dbbl.model.BodyRegResponse`;
  #L2f2c40.  call `<init>`(v0, v2, v3, v4, v5) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L2f2c46.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.idtp.dbbl.model.BodyRegResponse` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f2b6c.  v0:= 1I;
  #L2f2b6e.  if v4 != v5 then goto L2f2b74;
  #L2f2b72.  return v0;
  #L2f2b74.  v1:= instanceof @variable v5 @type ^`com.idtp.dbbl.model.BodyRegResponse` @kind boolean;
  #L2f2b78.  v2:= 0I;
  #L2f2b7a.  if v1 != 0 then goto L2f2b80;
  #L2f2b7e.  return v2;
  #L2f2b80.  v5:= (`com.idtp.dbbl.model.BodyRegResponse`) v5 @kind object;
  #L2f2b84.  v1:= v4.`com.idtp.dbbl.model.BodyRegResponse.a` @type ^`java.lang.String` @kind object;
  #L2f2b88.  v3:= v5.`com.idtp.dbbl.model.BodyRegResponse.a` @type ^`java.lang.String` @kind object;
  #L2f2b8c.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2f2b92.  v1:= temp;
  #L2f2b94.  if v1 != 0 then goto L2f2b9a;
  #L2f2b98.  return v2;
  #L2f2b9a.  v1:= v4.`com.idtp.dbbl.model.BodyRegResponse.b` @type ^`java.lang.String` @kind object;
  #L2f2b9e.  v3:= v5.`com.idtp.dbbl.model.BodyRegResponse.b` @type ^`java.lang.String` @kind object;
  #L2f2ba2.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2f2ba8.  v1:= temp;
  #L2f2baa.  if v1 != 0 then goto L2f2bb0;
  #L2f2bae.  return v2;
  #L2f2bb0.  v1:= v4.`com.idtp.dbbl.model.BodyRegResponse.c` @type ^`java.lang.String` @kind object;
  #L2f2bb4.  v3:= v5.`com.idtp.dbbl.model.BodyRegResponse.c` @type ^`java.lang.String` @kind object;
  #L2f2bb8.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2f2bbe.  v1:= temp;
  #L2f2bc0.  if v1 != 0 then goto L2f2bc6;
  #L2f2bc4.  return v2;
  #L2f2bc6.  v1:= v4.`com.idtp.dbbl.model.BodyRegResponse.d` @type ^`java.lang.String` @kind object;
  #L2f2bca.  v5:= v5.`com.idtp.dbbl.model.BodyRegResponse.d` @type ^`java.lang.String` @kind object;
  #L2f2bce.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2f2bd4.  v5:= temp;
  #L2f2bd6.  if v5 != 0 then goto L2f2bdc;
  #L2f2bda.  return v2;
  #L2f2bdc.  return v0;
}
procedure `java.lang.String` `getExpTime`(`com.idtp.dbbl.model.BodyRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.getExpTime:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f2d2c.  v0:= v1.`com.idtp.dbbl.model.BodyRegResponse.d` @type ^`java.lang.String` @kind object;
  #L2f2d30.  return v0 @kind object;
}
procedure `java.lang.String` `getRegID`(`com.idtp.dbbl.model.BodyRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.getRegID:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f2d44.  v0:= v1.`com.idtp.dbbl.model.BodyRegResponse.b` @type ^`java.lang.String` @kind object;
  #L2f2d48.  return v0 @kind object;
}
procedure `java.lang.String` `getSessionID`(`com.idtp.dbbl.model.BodyRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.getSessionID:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f2d5c.  v0:= v1.`com.idtp.dbbl.model.BodyRegResponse.c` @type ^`java.lang.String` @kind object;
  #L2f2d60.  return v0 @kind object;
}
procedure `java.lang.String` `getVirtualID`(`com.idtp.dbbl.model.BodyRegResponse` v1 @kind this) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.getVirtualID:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f2d74.  v0:= v1.`com.idtp.dbbl.model.BodyRegResponse.a` @type ^`java.lang.String` @kind object;
  #L2f2d78.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.idtp.dbbl.model.BodyRegResponse` v3 @kind this) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2f2c58.  v0:= v3.`com.idtp.dbbl.model.BodyRegResponse.a` @type ^`java.lang.String` @kind object;
  #L2f2c5c.  v1:= 0I;
  #L2f2c5e.  if v0 != 0 then goto L2f2c66;
  #L2f2c62.  v0:= 0I;
  #L2f2c64.  goto L2f2c6e;
  #L2f2c66.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2f2c6c.  v0:= temp;
  #L2f2c6e.  v0:= v0 * 31;
  #L2f2c72.  v2:= v3.`com.idtp.dbbl.model.BodyRegResponse.b` @type ^`java.lang.String` @kind object;
  #L2f2c76.  if v2 != 0 then goto L2f2c7e;
  #L2f2c7a.  v2:= 0I;
  #L2f2c7c.  goto L2f2c86;
  #L2f2c7e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2f2c84.  v2:= temp;
  #L2f2c86.  v0:= v0 + v2 @kind int;
  #L2f2c88.  v0:= v0 * 31;
  #L2f2c8c.  v2:= v3.`com.idtp.dbbl.model.BodyRegResponse.c` @type ^`java.lang.String` @kind object;
  #L2f2c90.  if v2 != 0 then goto L2f2c98;
  #L2f2c94.  v2:= 0I;
  #L2f2c96.  goto L2f2ca0;
  #L2f2c98.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2f2c9e.  v2:= temp;
  #L2f2ca0.  v0:= v0 + v2 @kind int;
  #L2f2ca2.  v0:= v0 * 31;
  #L2f2ca6.  v2:= v3.`com.idtp.dbbl.model.BodyRegResponse.d` @type ^`java.lang.String` @kind object;
  #L2f2caa.  if v2 != 0 then goto L2f2cb0;
  #L2f2cae.  goto L2f2cb8;
  #L2f2cb0.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2f2cb6.  v1:= temp;
  #L2f2cb8.  v0:= v0 + v1 @kind int;
  #L2f2cba.  return v0;
}
procedure `void` `setExpTime`(`com.idtp.dbbl.model.BodyRegResponse` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.setExpTime:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2f2ea0.  v0.`com.idtp.dbbl.model.BodyRegResponse.d` @type ^`java.lang.String` := v1 @kind object;
  #L2f2ea4.  return @kind void;
}
procedure `void` `setRegID`(`com.idtp.dbbl.model.BodyRegResponse` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.setRegID:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2f2eb8.  v0.`com.idtp.dbbl.model.BodyRegResponse.b` @type ^`java.lang.String` := v1 @kind object;
  #L2f2ebc.  return @kind void;
}
procedure `void` `setSessionID`(`com.idtp.dbbl.model.BodyRegResponse` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.setSessionID:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2f2ed0.  v0.`com.idtp.dbbl.model.BodyRegResponse.c` @type ^`java.lang.String` := v1 @kind object;
  #L2f2ed4.  return @kind void;
}
procedure `void` `setVirtualID`(`com.idtp.dbbl.model.BodyRegResponse` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.setVirtualID:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2f2ee8.  v0.`com.idtp.dbbl.model.BodyRegResponse.a` @type ^`java.lang.String` := v1 @kind object;
  #L2f2eec.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.idtp.dbbl.model.BodyRegResponse` v2 @kind this) @signature `Lcom/idtp/dbbl/model/BodyRegResponse;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f2d8c.  v0:= new `java.lang.StringBuilder`;
  #L2f2d90.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f2d96.  v1:= "BodyRegResponse(virtualID=" @kind object;
  #L2f2d9a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f2da0.  v1:= v2.`com.idtp.dbbl.model.BodyRegResponse.a` @type ^`java.lang.String` @kind object;
  #L2f2da4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f2daa.  v1:= ", regID=" @kind object;
  #L2f2dae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f2db4.  v1:= v2.`com.idtp.dbbl.model.BodyRegResponse.b` @type ^`java.lang.String` @kind object;
  #L2f2db8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f2dbe.  v1:= ", sessionID=" @kind object;
  #L2f2dc2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f2dc8.  v1:= v2.`com.idtp.dbbl.model.BodyRegResponse.c` @type ^`java.lang.String` @kind object;
  #L2f2dcc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f2dd2.  v1:= ", expTime=" @kind object;
  #L2f2dd6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f2ddc.  v1:= v2.`com.idtp.dbbl.model.BodyRegResponse.d` @type ^`java.lang.String` @kind object;
  #L2f2de0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f2de6.  v1:= 41I;
  #L2f2dea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f2df0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f2df6.  v0:= temp @kind object;
  #L2f2df8.  return v0 @kind object;
}
