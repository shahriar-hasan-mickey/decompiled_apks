record `com.huawei.agconnect.datastore.core.CryptoUtil` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.huawei.agconnect.datastore.core.CryptoUtil` v0 @kind this) @signature `Lcom/huawei/agconnect/datastore/core/CryptoUtil;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1bd4c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bd4c6.  return @kind void;
}
procedure `com.huawei.agconnect.datastore.annotation.ICrypto` `createWhenProguard`(`java.lang.Class` v1 @kind object) @signature `Lcom/huawei/agconnect/datastore/core/CryptoUtil;.createWhenProguard:(Ljava/lang/Class;)Lcom/huawei/agconnect/datastore/annotation/ICrypto;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1bd418.  v0:= 0I;
  #L1bd41a.  call temp:= `newInstance`(v1) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L1bd420.  v1:= temp @kind object;
  #L1bd422.  v1:= (`com.huawei.agconnect.datastore.annotation.ICrypto`) v1 @kind object;
  #L1bd426.  return v1 @kind object;
  #L1bd428.  return v0 @kind object;
  catch `java.lang.IllegalAccessException` @[L1bd41a..L1bd426] goto L1bd428;
  catch `java.lang.InstantiationException` @[L1bd41a..L1bd426] goto L1bd428;
}
procedure `com.huawei.agconnect.datastore.annotation.ICrypto` `getHelper`(`java.lang.Class` v4 @kind object) @signature `Lcom/huawei/agconnect/datastore/core/CryptoUtil;.getHelper:(Ljava/lang/Class;)Lcom/huawei/agconnect/datastore/annotation/ICrypto;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1bd44c.  v0:= constclass @type ^`com.huawei.agconnect.datastore.annotation.DefaultCrypto` @kind object;
  #L1bd450.  v1:= 0I;
  #L1bd452.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1bd458.  v2:= temp;
  #L1bd45a.  if v2 != 0 then goto L1bd490;
  #L1bd45e.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1bd464.  v0:= temp;
  #L1bd466.  if v0 == 0 then goto L1bd46c;
  #L1bd46a.  goto L1bd490;
  #L1bd46c.  v0:= "get" @kind object;
  #L1bd470.  v2:= 0I;
  #L1bd472.  v3:= new `java.lang.Class`[v2];
  #L1bd476.  call temp:= `getMethod`(v4, v0, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L1bd47c.  v0:= temp @kind object;
  #L1bd47e.  v2:= new `java.lang.Object`[v2];
  #L1bd482.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1bd488.  v0:= temp @kind object;
  #L1bd48a.  v0:= (`com.huawei.agconnect.datastore.annotation.ICrypto`) v0 @kind object;
  #L1bd48e.  return v0 @kind object;
  #L1bd490.  return v1 @kind object;
  #L1bd492.  call temp:= `createWhenProguard`(v4) @signature `Lcom/huawei/agconnect/datastore/core/CryptoUtil;.createWhenProguard:(Ljava/lang/Class;)Lcom/huawei/agconnect/datastore/annotation/ICrypto;` @kind static;
  #L1bd498.  v4:= temp @kind object;
  #L1bd49a.  return v4 @kind object;
  catch `java.lang.NoSuchMethodException` @[L1bd452..L1bd48e] goto L1bd492;
  catch `java.lang.reflect.InvocationTargetException` @[L1bd452..L1bd48e] goto L1bd490;
  catch `java.lang.IllegalAccessException` @[L1bd452..L1bd48e] goto L1bd490;
}
