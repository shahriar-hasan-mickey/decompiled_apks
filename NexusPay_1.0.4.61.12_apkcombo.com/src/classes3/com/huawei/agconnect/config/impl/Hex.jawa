record `com.huawei.agconnect.config.impl.Hex` @kind class @AccessFlag PUBLIC {
}
global `char`[] `@@com.huawei.agconnect.config.impl.Hex.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/agconnect/config/impl/Hex;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b3f48.  v0:= "0123456789ABCDEF" @kind object;
  #L1b3f4c.  call temp:= `toCharArray`(v0) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L1b3f52.  v0:= temp @kind object;
  #L1b3f54.  `@@com.huawei.agconnect.config.impl.Hex.a` @type ^`char`[] := v0 @kind object;
  #L1b3f58.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.agconnect.config.impl.Hex` v0 @kind this) @signature `Lcom/huawei/agconnect/config/impl/Hex;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1b3f6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b3f72.  return @kind void;
}
procedure `byte`[] `a`(`char`[] v8 @kind object) @signature `Lcom/huawei/agconnect/config/impl/Hex;.a:([C)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b3de4.  v0:= length @variable v8;
  #L1b3de6.  v0:= v0 ^& 1;
  #L1b3dea.  if v0 != 0 then goto L1b3ea0;
  #L1b3dee.  v0:= length @variable v8;
  #L1b3df0.  v0:= v0 ^> 1;
  #L1b3df4.  v0:= new `byte`[v0];
  #L1b3df8.  v1:= 0I;
  #L1b3dfa.  v2:= 0I;
  #L1b3dfc.  v3:= length @variable v8;
  #L1b3dfe.  if v1 >= v3 then goto L1b3e9e;
  #L1b3e02.  v3:= v8[v1] @kind char;
  #L1b3e06.  v4:= 16I;
  #L1b3e0a.  call temp:= `digit`(v3, v4) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L1b3e10.  v3:= temp;
  #L1b3e12.  v5:= "Illegal hexadecimal character at index " @kind object;
  #L1b3e16.  v6:= -1I;
  #L1b3e18.  if v3 == v6 then goto L1b3e74;
  #L1b3e1c.  v1:= v1 + 1;
  #L1b3e20.  v7:= v8[v1] @kind char;
  #L1b3e24.  call temp:= `digit`(v7, v4) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L1b3e2a.  v4:= temp;
  #L1b3e2c.  if v4 == v6 then goto L1b3e4a;
  #L1b3e30.  v1:= v1 + 1;
  #L1b3e34.  v3:= v3 ^< 4;
  #L1b3e38.  v3:= v3 ^| v4 @kind int;
  #L1b3e3a.  v3:= v3 ^& 255;
  #L1b3e3e.  v3:= (`byte`) v3 @kind i2b;
  #L1b3e40.  v0[v2]:= v3 @kind byte;
  #L1b3e44.  v2:= v2 + 1;
  #L1b3e48.  goto L1b3dfc;
  #L1b3e4a.  v8:= new `java.lang.IllegalArgumentException`;
  #L1b3e4e.  v0:= new `java.lang.StringBuilder`;
  #L1b3e52.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b3e58.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3e5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3e64.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b3e6a.  v0:= temp @kind object;
  #L1b3e6c.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b3e72.  throw v8;
  #L1b3e74.  v8:= new `java.lang.IllegalArgumentException`;
  #L1b3e78.  v0:= new `java.lang.StringBuilder`;
  #L1b3e7c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b3e82.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3e88.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3e8e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b3e94.  v0:= temp @kind object;
  #L1b3e96.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b3e9c.  throw v8;
  #L1b3e9e.  return v0 @kind object;
  #L1b3ea0.  v8:= new `java.lang.IllegalArgumentException`;
  #L1b3ea4.  v0:= "Odd number of characters." @kind object;
  #L1b3ea8.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b3eae.  throw v8;
}
procedure `byte`[] `decodeHexString`(`java.lang.String` v0 @kind object) @signature `Lcom/huawei/agconnect/config/impl/Hex;.decodeHexString:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1b3ec0.  call temp:= `toCharArray`(v0) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L1b3ec6.  v0:= temp @kind object;
  #L1b3ec8.  call temp:= `a`(v0) @signature `Lcom/huawei/agconnect/config/impl/Hex;.a:([C)[B` @kind static;
  #L1b3ece.  v0:= temp @kind object;
  #L1b3ed0.  return v0 @kind object;
}
procedure `java.lang.String` `encodeHexString`(`byte`[] v6 @kind object) @signature `Lcom/huawei/agconnect/config/impl/Hex;.encodeHexString:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b3ee4.  v0:= new `java.lang.StringBuilder`;
  #L1b3ee8.  v1:= length @variable v6;
  #L1b3eea.  v1:= v1 * 2;
  #L1b3eee.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L1b3ef4.  v1:= length @variable v6;
  #L1b3ef6.  v2:= 0I;
  #L1b3ef8.  if v2 >= v1 then goto L1b3f2e;
  #L1b3efc.  v3:= v6[v2] @kind byte;
  #L1b3f00.  v4:= `@@com.huawei.agconnect.config.impl.Hex.a` @type ^`char`[] @kind object;
  #L1b3f04.  v5:= v3 ^> 4;
  #L1b3f08.  v5:= v5 ^& 15;
  #L1b3f0c.  v4:= v4[v5] @kind char;
  #L1b3f10.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3f16.  v4:= `@@com.huawei.agconnect.config.impl.Hex.a` @type ^`char`[] @kind object;
  #L1b3f1a.  v3:= v3 ^& 15;
  #L1b3f1e.  v3:= v4[v3] @kind char;
  #L1b3f22.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3f28.  v2:= v2 + 1;
  #L1b3f2c.  goto L1b3ef8;
  #L1b3f2e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b3f34.  v6:= temp @kind object;
  #L1b3f36.  return v6 @kind object;
}
