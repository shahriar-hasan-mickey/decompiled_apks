record `com.huawei.agconnect.config.impl.e` @kind class @AccessFlag PUBLIC extends `com.huawei.agconnect.config.impl.g` @kind interface {
  `com.huawei.agconnect.config.impl.d` `com.huawei.agconnect.config.impl.e.a` @AccessFlag PRIVATE_FINAL;
  `javax.crypto.SecretKey` `com.huawei.agconnect.config.impl.e.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.agconnect.config.impl.e` v0 @kind this, `com.huawei.agconnect.config.impl.d` v1 @kind object) @signature `Lcom/huawei/agconnect/config/impl/e;.<init>:(Lcom/huawei/agconnect/config/impl/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1b4f3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b4f42.  v0.`com.huawei.agconnect.config.impl.e.a` @type ^`com.huawei.agconnect.config.impl.d` := v1 @kind object;
  #L1b4f46.  call temp:= `b`(v0) @signature `Lcom/huawei/agconnect/config/impl/e;.b:()Ljavax/crypto/SecretKey;` @kind direct;
  #L1b4f4c.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v1 @kind object) @signature `Lcom/huawei/agconnect/config/impl/e;.a:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b4d68.  call temp:= `isEmpty`(v1) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1b4d6e.  v0:= temp;
  #L1b4d70.  if v0 != 0 then goto L1b4d88;
  #L1b4d74.  v0:= "^\\[!([A-Fa-f0-9]*)]" @kind object;
  #L1b4d78.  call temp:= `matches`(v0, v1) @signature `Ljava/util/regex/Pattern;.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z` @kind static;
  #L1b4d7e.  v1:= temp;
  #L1b4d80.  if v1 == 0 then goto L1b4d88;
  #L1b4d84.  v1:= 1I;
  #L1b4d86.  goto L1b4d8a;
  #L1b4d88.  v1:= 0I;
  #L1b4d8a.  return v1;
}
procedure `javax.crypto.SecretKey` `b`(`com.huawei.agconnect.config.impl.e` v6 @kind this) @signature `Lcom/huawei/agconnect/config/impl/e;.b:()Ljavax/crypto/SecretKey;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b4e7c.  v0:= 0I;
  #L1b4e7e.  v1:= v6.`com.huawei.agconnect.config.impl.e.a` @type ^`com.huawei.agconnect.config.impl.d` @kind object;
  #L1b4e82.  v2:= "/code/code1" @kind object;
  #L1b4e86.  call temp:= `a`(v1, v2, v0) @signature `Lcom/huawei/agconnect/config/impl/d;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1b4e8c.  v1:= temp @kind object;
  #L1b4e8e.  v2:= v6.`com.huawei.agconnect.config.impl.e.a` @type ^`com.huawei.agconnect.config.impl.d` @kind object;
  #L1b4e92.  v3:= "/code/code2" @kind object;
  #L1b4e96.  call temp:= `a`(v2, v3, v0) @signature `Lcom/huawei/agconnect/config/impl/d;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1b4e9c.  v2:= temp @kind object;
  #L1b4e9e.  v3:= v6.`com.huawei.agconnect.config.impl.e.a` @type ^`com.huawei.agconnect.config.impl.d` @kind object;
  #L1b4ea2.  v4:= "/code/code3" @kind object;
  #L1b4ea6.  call temp:= `a`(v3, v4, v0) @signature `Lcom/huawei/agconnect/config/impl/d;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1b4eac.  v3:= temp @kind object;
  #L1b4eae.  v4:= v6.`com.huawei.agconnect.config.impl.e.a` @type ^`com.huawei.agconnect.config.impl.d` @kind object;
  #L1b4eb2.  v5:= "/code/code4" @kind object;
  #L1b4eb6.  call temp:= `a`(v4, v5, v0) @signature `Lcom/huawei/agconnect/config/impl/d;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1b4ebc.  v4:= temp @kind object;
  #L1b4ebe.  if v1 == 0 then goto L1b4f12;
  #L1b4ec2.  if v2 == 0 then goto L1b4f12;
  #L1b4ec6.  if v3 == 0 then goto L1b4f12;
  #L1b4eca.  if v4 == 0 then goto L1b4f12;
  #L1b4ece.  call temp:= `decodeHexString`(v1) @signature `Lcom/huawei/agconnect/config/impl/Hex;.decodeHexString:(Ljava/lang/String;)[B` @kind static;
  #L1b4ed4.  v1:= temp @kind object;
  #L1b4ed6.  call temp:= `decodeHexString`(v2) @signature `Lcom/huawei/agconnect/config/impl/Hex;.decodeHexString:(Ljava/lang/String;)[B` @kind static;
  #L1b4edc.  v2:= temp @kind object;
  #L1b4ede.  call temp:= `decodeHexString`(v3) @signature `Lcom/huawei/agconnect/config/impl/Hex;.decodeHexString:(Ljava/lang/String;)[B` @kind static;
  #L1b4ee4.  v3:= temp @kind object;
  #L1b4ee6.  call temp:= `decodeHexString`(v4) @signature `Lcom/huawei/agconnect/config/impl/Hex;.decodeHexString:(Ljava/lang/String;)[B` @kind static;
  #L1b4eec.  v4:= temp @kind object;
  #L1b4eee.  v5:= 10000I;
  #L1b4ef2.  call temp:= `a`(v1, v2, v3, v4, v5) @signature `Lcom/huawei/agconnect/config/impl/i;.a:([B[B[B[BI)Ljavax/crypto/SecretKey;` @kind static;
  #L1b4ef8.  v1:= temp @kind object;
  #L1b4efa.  v6.`com.huawei.agconnect.config.impl.e.b` @type ^`javax.crypto.SecretKey` := v1 @kind object;
  #L1b4efe.  goto L1b4f12;
  #L1b4f00.  v1:= "ExclamationMark" @kind object;
  #L1b4f04.  v2:= "Exception when reading the 'K&I' for 'Config'." @kind object;
  #L1b4f08.  call temp:= `e`(v1, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1b4f0e.  v6.`com.huawei.agconnect.config.impl.e.b` @type ^`javax.crypto.SecretKey` := v0 @kind object;
  #L1b4f12.  v0:= v6.`com.huawei.agconnect.config.impl.e.b` @type ^`javax.crypto.SecretKey` @kind object;
  #L1b4f16.  return v0 @kind object;
  catch `java.security.NoSuchAlgorithmException` @[L1b4e7e..L1b4efe] goto L1b4f00;
  catch `java.security.spec.InvalidKeySpecException` @[L1b4e7e..L1b4efe] goto L1b4f00;
  catch `java.lang.IllegalArgumentException` @[L1b4e7e..L1b4efe] goto L1b4f00;
}
procedure `java.lang.String` `c`(`java.lang.String` v2 @kind object) @signature `Lcom/huawei/agconnect/config/impl/e;.c:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1b4e18.  v0:= "" @kind object;
  #L1b4e1c.  v1:= "^\\[!([A-Fa-f0-9]*)]" @kind object;
  #L1b4e20.  call temp:= `compile`(v1) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L1b4e26.  v1:= temp @kind object;
  #L1b4e28.  call temp:= `matcher`(v1, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1b4e2e.  v2:= temp @kind object;
  #L1b4e30.  call temp:= `find`(v2) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L1b4e36.  v1:= temp;
  #L1b4e38.  if v1 == 0 then goto L1b4e48;
  #L1b4e3c.  v1:= 1I;
  #L1b4e3e.  call temp:= `group`(v2, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L1b4e44.  v2:= temp @kind object;
  #L1b4e46.  return v2 @kind object;
  #L1b4e48.  return v0 @kind object;
  #L1b4e4a.  v2:= "ExclamationMark" @kind object;
  #L1b4e4e.  v1:= "getRawString exception" @kind object;
  #L1b4e52.  call temp:= `e`(v2, v1) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1b4e58.  return v0 @kind object;
  catch `java.lang.IllegalStateException` @[L1b4e1c..L1b4e46] goto L1b4e4a;
  catch `java.lang.IndexOutOfBoundsException` @[L1b4e1c..L1b4e46] goto L1b4e4a;
}
procedure `java.lang.String` `a`(`com.huawei.agconnect.config.impl.e` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/huawei/agconnect/config/impl/e;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b4d9c.  v0:= v3.`com.huawei.agconnect.config.impl.e.b` @type ^`javax.crypto.SecretKey` @kind object;
  #L1b4da0.  v1:= "ExclamationMark" @kind object;
  #L1b4da4.  if v0 != 0 then goto L1b4db4;
  #L1b4da8.  v4:= "mKey is null, return default value" @kind object;
  #L1b4dac.  call temp:= `e`(v1, v4) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1b4db2.  return v5 @kind object;
  #L1b4db4.  call temp:= `a`(v4) @signature `Lcom/huawei/agconnect/config/impl/e;.a:(Ljava/lang/String;)Z` @kind static;
  #L1b4dba.  v0:= temp;
  #L1b4dbc.  if v0 == 0 then goto L1b4df2;
  #L1b4dc0.  v0:= new `java.lang.String`;
  #L1b4dc4.  v2:= v3.`com.huawei.agconnect.config.impl.e.b` @type ^`javax.crypto.SecretKey` @kind object;
  #L1b4dc8.  call temp:= `c`(v4) @signature `Lcom/huawei/agconnect/config/impl/e;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1b4dce.  v4:= temp @kind object;
  #L1b4dd0.  call temp:= `decodeHexString`(v4) @signature `Lcom/huawei/agconnect/config/impl/Hex;.decodeHexString:(Ljava/lang/String;)[B` @kind static;
  #L1b4dd6.  v4:= temp @kind object;
  #L1b4dd8.  call temp:= `b`(v2, v4) @signature `Lcom/huawei/agconnect/config/impl/i;.b:(Ljavax/crypto/SecretKey;[B)[B` @kind static;
  #L1b4dde.  v4:= temp @kind object;
  #L1b4de0.  v2:= "UTF-8" @kind object;
  #L1b4de4.  call `<init>`(v0, v4, v2) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L1b4dea.  return v0 @kind object;
  #L1b4dec.  v4:= "UnsupportedEncodingException||GeneralSecurityException||IllegalArgumentException" @kind object;
  #L1b4df0.  goto L1b4dac;
  #L1b4df2.  return v5 @kind object;
  catch `java.io.UnsupportedEncodingException` @[L1b4dc0..L1b4dea] goto L1b4dec;
  catch `java.security.GeneralSecurityException` @[L1b4dc0..L1b4dea] goto L1b4dec;
  catch `java.lang.IllegalArgumentException` @[L1b4dc0..L1b4dea] goto L1b4dec;
}
