record `com.huawei.agconnect.credential.obs.j` @kind class @AccessFlag PUBLIC {
}
procedure `com.huawei.agconnect.AGConnectInstance` `a`(`com.huawei.agconnect.common.api.BackendService$Options` v1 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Lcom/huawei/agconnect/common/api/BackendService$Options;)Lcom/huawei/agconnect/AGConnectInstance;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1bb0e0.  if v1 == 0 then goto L1bb0fc;
  #L1bb0e4.  call temp:= `getApp`(v1) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.getApp:()Lcom/huawei/agconnect/AGConnectInstance;` @kind virtual;
  #L1bb0ea.  v0:= temp @kind object;
  #L1bb0ec.  if v0 != 0 then goto L1bb0f2;
  #L1bb0f0.  goto L1bb0fc;
  #L1bb0f2.  call temp:= `getApp`(v1) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.getApp:()Lcom/huawei/agconnect/AGConnectInstance;` @kind virtual;
  #L1bb0f8.  v1:= temp @kind object;
  #L1bb0fa.  return v1 @kind object;
  #L1bb0fc.  call temp:= `getInstance`() @signature `Lcom/huawei/agconnect/AGConnectInstance;.getInstance:()Lcom/huawei/agconnect/AGConnectInstance;` @kind static;
  #L1bb102.  v1:= temp @kind object;
  #L1bb104.  return v1 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `a`(`com.huawei.agconnect.common.api.BaseRequest` v2 @kind object, `int` v3 , `java.lang.Class` v4 @kind object, `com.huawei.agconnect.common.api.BackendService$Options` v5 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/agconnect/common/api/BackendService$Options;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1bb118.  if v5 == 0 then goto L1bb136;
  #L1bb11c.  call temp:= `getApp`(v5) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.getApp:()Lcom/huawei/agconnect/AGConnectInstance;` @kind virtual;
  #L1bb122.  v0:= temp @kind object;
  #L1bb124.  if v0 == 0 then goto L1bb136;
  #L1bb128.  call temp:= `getApp`(v5) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.getApp:()Lcom/huawei/agconnect/AGConnectInstance;` @kind virtual;
  #L1bb12e.  v0:= temp @kind object;
  #L1bb130.  call `initBase`(v2, v0) @signature `Lcom/huawei/agconnect/common/api/BaseRequest;.initBase:(Lcom/huawei/agconnect/AGConnectInstance;)V` @kind virtual;
  #L1bb136.  if v5 == 0 then goto L1bb19e;
  #L1bb13a.  call temp:= `isClientToken`(v5) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.isClientToken:()Z` @kind virtual;
  #L1bb140.  v0:= temp;
  #L1bb142.  if v0 != 0 then goto L1bb148;
  #L1bb146.  goto L1bb19e;
  #L1bb148.  v0:= new `com.huawei.hmf.tasks.TaskCompletionSource`;
  #L1bb14c.  call `<init>`(v0) @signature `Lcom/huawei/hmf/tasks/TaskCompletionSource;.<init>:()V` @kind direct;
  #L1bb152.  call temp:= `getThrottle`(v5) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.getThrottle:()Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;` @kind virtual;
  #L1bb158.  v1:= temp @kind object;
  #L1bb15a.  call temp:= `b`(v2, v3, v4, v5) @signature `Lcom/huawei/agconnect/credential/obs/j;.b:(Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/agconnect/common/api/BackendService$Options;)Lcom/huawei/hmf/tasks/Task;` @kind static;
  #L1bb160.  v2:= temp @kind object;
  #L1bb162.  call temp:= `immediate`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.immediate:()Ljava/util/concurrent/Executor;` @kind static;
  #L1bb168.  v3:= temp @kind object;
  #L1bb16a.  v4:= new `com.huawei.agconnect.credential.obs.j$5`;
  #L1bb16e.  call `<init>`(v4, v1, v0) @signature `Lcom/huawei/agconnect/credential/obs/j$5;.<init>:(Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;Lcom/huawei/hmf/tasks/TaskCompletionSource;)V` @kind direct;
  #L1bb174.  call temp:= `addOnSuccessListener`(v2, v3, v4) @signature `Lcom/huawei/hmf/tasks/Task;.addOnSuccessListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1bb17a.  v2:= temp @kind object;
  #L1bb17c.  call temp:= `immediate`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.immediate:()Ljava/util/concurrent/Executor;` @kind static;
  #L1bb182.  v3:= temp @kind object;
  #L1bb184.  v4:= new `com.huawei.agconnect.credential.obs.j$1`;
  #L1bb188.  call `<init>`(v4, v1, v0) @signature `Lcom/huawei/agconnect/credential/obs/j$1;.<init>:(Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;Lcom/huawei/hmf/tasks/TaskCompletionSource;)V` @kind direct;
  #L1bb18e.  call temp:= `addOnFailureListener`(v2, v3, v4) @signature `Lcom/huawei/hmf/tasks/Task;.addOnFailureListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1bb194.  call temp:= `getTask`(v0) @signature `Lcom/huawei/hmf/tasks/TaskCompletionSource;.getTask:()Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1bb19a.  v2:= temp @kind object;
  #L1bb19c.  return v2 @kind object;
  #L1bb19e.  call temp:= `a`(v5) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Lcom/huawei/agconnect/common/api/BackendService$Options;)Lcom/huawei/agconnect/AGConnectInstance;` @kind static;
  #L1bb1a4.  v5:= temp @kind object;
  #L1bb1a6.  call temp:= `getOptions`(v5) @signature `Lcom/huawei/agconnect/AGConnectInstance;.getOptions:()Lcom/huawei/agconnect/AGConnectOptions;` @kind virtual;
  #L1bb1ac.  v5:= temp @kind object;
  #L1bb1ae.  call temp:= `call`(v2, v3, v4, v5) @signature `Lcom/huawei/agconnect/common/api/Backend;.call:(Ljava/lang/Object;ILjava/lang/Class;Lcom/huawei/agconnect/AGConnectOptions;)Lcom/huawei/hmf/tasks/Task;` @kind static;
  #L1bb1b4.  v2:= temp @kind object;
  #L1bb1b6.  return v2 @kind object;
}
procedure `void` `a`(`com.huawei.agconnect.common.api.BaseRequest` v5 @kind object, `int` v6 , `java.lang.Class` v7 @kind object, `com.huawei.hmf.tasks.TaskCompletionSource` v8 @kind object, `com.huawei.agconnect.common.api.BackendService$Options` v9 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/hmf/tasks/TaskCompletionSource;Lcom/huawei/agconnect/common/api/BackendService$Options;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1bb2c0.  call temp:= `getThrottle`(v9) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.getThrottle:()Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;` @kind virtual;
  #L1bb2c6.  v0:= temp @kind object;
  #L1bb2c8.  if v0 == 0 then goto L1bb30e;
  #L1bb2cc.  call temp:= `getThrottle`(v9) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.getThrottle:()Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;` @kind virtual;
  #L1bb2d2.  v0:= temp @kind object;
  #L1bb2d4.  call temp:= `getEndTime`(v0) @signature `Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;.getEndTime:()J` @kind virtual;
  #L1bb2da.  v0:= temp @kind wide;
  #L1bb2dc.  v2:= 0L;
  #L1bb2e0.  v4:= lcmp(v0, v2);
  #L1bb2e4.  if v4 <= 0 then goto L1bb300;
  #L1bb2e8.  v5:= new `com.huawei.agconnect.exception.AGCServerException`;
  #L1bb2ec.  v6:= 1I;
  #L1bb2ee.  v7:= "fetch throttled, try again later" @kind object;
  #L1bb2f2.  call `<init>`(v5, v7, v6) @signature `Lcom/huawei/agconnect/exception/AGCServerException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1bb2f8.  call `setException`(v8, v5) @signature `Lcom/huawei/hmf/tasks/TaskCompletionSource;.setException:(Ljava/lang/Exception;)V` @kind virtual;
  #L1bb2fe.  return @kind void;
  #L1bb300.  call temp:= `getThrottle`(v9) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.getThrottle:()Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;` @kind virtual;
  #L1bb306.  v0:= temp @kind object;
  #L1bb308.  call `addForStart`(v0) @signature `Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;.addForStart:()V` @kind virtual;
  #L1bb30e.  call `c`(v5, v6, v7, v8, v9) @signature `Lcom/huawei/agconnect/credential/obs/j;.c:(Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/hmf/tasks/TaskCompletionSource;Lcom/huawei/agconnect/common/api/BackendService$Options;)V` @kind static;
  #L1bb314.  return @kind void;
}
procedure `void` `a`(`com.huawei.agconnect.core.service.auth.Token` v0 @kind object, `com.huawei.agconnect.common.api.BaseRequest` v1 @kind object, `com.huawei.agconnect.common.api.BackendService$Options` v2 @kind object, `com.huawei.hmf.tasks.TaskCompletionSource` v3 @kind object, `int` v4 , `java.lang.Class` v5 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Lcom/huawei/agconnect/core/service/auth/Token;Lcom/huawei/agconnect/common/api/BaseRequest;Lcom/huawei/agconnect/common/api/BackendService$Options;Lcom/huawei/hmf/tasks/TaskCompletionSource;ILjava/lang/Class;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1bb328.  call `b`(v0, v1, v2, v3, v4, v5) @signature `Lcom/huawei/agconnect/credential/obs/j;.b:(Lcom/huawei/agconnect/core/service/auth/Token;Lcom/huawei/agconnect/common/api/BaseRequest;Lcom/huawei/agconnect/common/api/BackendService$Options;Lcom/huawei/hmf/tasks/TaskCompletionSource;ILjava/lang/Class;)V` @kind static;
  #L1bb32e.  return @kind void;
}
procedure `void` `a`(`java.lang.Exception` v0 @kind object, `com.huawei.agconnect.common.api.BackendService$Options` v1 @kind object, `com.huawei.agconnect.common.api.BaseRequest` v2 @kind object, `int` v3 , `java.lang.Class` v4 @kind object, `com.huawei.hmf.tasks.TaskCompletionSource` v5 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Ljava/lang/Exception;Lcom/huawei/agconnect/common/api/BackendService$Options;Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/hmf/tasks/TaskCompletionSource;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1bb340.  call `b`(v0, v1, v2, v3, v4, v5) @signature `Lcom/huawei/agconnect/credential/obs/j;.b:(Ljava/lang/Exception;Lcom/huawei/agconnect/common/api/BackendService$Options;Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/hmf/tasks/TaskCompletionSource;)V` @kind static;
  #L1bb346.  return @kind void;
}
procedure `boolean` `a`(`java.lang.Exception` v1 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Ljava/lang/Exception;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1bb0ac.  v0:= instanceof @variable v1 @type ^`com.huawei.agconnect.exception.AGCServerException` @kind boolean;
  #L1bb0b0.  if v0 == 0 then goto L1bb0cc;
  #L1bb0b4.  v1:= (`com.huawei.agconnect.exception.AGCServerException`) v1 @kind object;
  #L1bb0b8.  call temp:= `getCode`(v1) @signature `Lcom/huawei/agconnect/exception/AGCException;.getCode:()I` @kind virtual;
  #L1bb0be.  v1:= temp;
  #L1bb0c0.  v0:= 401I;
  #L1bb0c4.  if v1 != v0 then goto L1bb0cc;
  #L1bb0c8.  v1:= 1I;
  #L1bb0ca.  goto L1bb0ce;
  #L1bb0cc.  v1:= 0I;
  #L1bb0ce.  return v1;
}
procedure `com.huawei.hmf.tasks.Task` `b`(`com.huawei.agconnect.common.api.BaseRequest` v10 @kind object, `int` v11 , `java.lang.Class` v12 @kind object, `com.huawei.agconnect.common.api.BackendService$Options` v13 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/j;.b:(Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/agconnect/common/api/BackendService$Options;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1bb1c8.  v6:= new `com.huawei.hmf.tasks.TaskCompletionSource`;
  #L1bb1cc.  call `<init>`(v6) @signature `Lcom/huawei/hmf/tasks/TaskCompletionSource;.<init>:()V` @kind direct;
  #L1bb1d2.  call temp:= `a`(v13) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Lcom/huawei/agconnect/common/api/BackendService$Options;)Lcom/huawei/agconnect/AGConnectInstance;` @kind static;
  #L1bb1d8.  v0:= temp @kind object;
  #L1bb1da.  v1:= constclass @type ^`com.huawei.agconnect.core.service.auth.CredentialsProvider` @kind object;
  #L1bb1de.  call temp:= `getService`(v0, v1) @signature `Lcom/huawei/agconnect/AGConnectInstance;.getService:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1bb1e4.  v0:= temp @kind object;
  #L1bb1e6.  v0:= (`com.huawei.agconnect.core.service.auth.CredentialsProvider`) v0 @kind object;
  #L1bb1ea.  call temp:= `getTokens`(v0) @signature `Lcom/huawei/agconnect/core/service/auth/CredentialsProvider;.getTokens:()Lcom/huawei/hmf/tasks/Task;` @kind interface;
  #L1bb1f0.  v7:= temp @kind object;
  #L1bb1f2.  call temp:= `immediate`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.immediate:()Ljava/util/concurrent/Executor;` @kind static;
  #L1bb1f8.  v8:= temp @kind object;
  #L1bb1fa.  v9:= new `com.huawei.agconnect.credential.obs.j$7`;
  #L1bb1fe.  v0:= v9 @kind object;
  #L1bb200.  v1:= v10 @kind object;
  #L1bb202.  v2:= v13 @kind object;
  #L1bb204.  v3:= v6 @kind object;
  #L1bb206.  v4:= v11;
  #L1bb208.  v5:= v12 @kind object;
  #L1bb20a.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/huawei/agconnect/credential/obs/j$7;.<init>:(Lcom/huawei/agconnect/common/api/BaseRequest;Lcom/huawei/agconnect/common/api/BackendService$Options;Lcom/huawei/hmf/tasks/TaskCompletionSource;ILjava/lang/Class;)V` @kind direct;
  #L1bb210.  call temp:= `addOnSuccessListener`(v7, v8, v9) @signature `Lcom/huawei/hmf/tasks/Task;.addOnSuccessListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1bb216.  v10:= temp @kind object;
  #L1bb218.  call temp:= `immediate`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.immediate:()Ljava/util/concurrent/Executor;` @kind static;
  #L1bb21e.  v11:= temp @kind object;
  #L1bb220.  v12:= new `com.huawei.agconnect.credential.obs.j$6`;
  #L1bb224.  call `<init>`(v12, v6) @signature `Lcom/huawei/agconnect/credential/obs/j$6;.<init>:(Lcom/huawei/hmf/tasks/TaskCompletionSource;)V` @kind direct;
  #L1bb22a.  call temp:= `addOnFailureListener`(v10, v11, v12) @signature `Lcom/huawei/hmf/tasks/Task;.addOnFailureListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1bb230.  call temp:= `getTask`(v6) @signature `Lcom/huawei/hmf/tasks/TaskCompletionSource;.getTask:()Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1bb236.  v10:= temp @kind object;
  #L1bb238.  return v10 @kind object;
}
procedure `void` `b`(`com.huawei.agconnect.common.api.BaseRequest` v0 @kind object, `int` v1 , `java.lang.Class` v2 @kind object, `com.huawei.hmf.tasks.TaskCompletionSource` v3 @kind object, `com.huawei.agconnect.common.api.BackendService$Options` v4 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/j;.b:(Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/hmf/tasks/TaskCompletionSource;Lcom/huawei/agconnect/common/api/BackendService$Options;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1bb358.  call `c`(v0, v1, v2, v3, v4) @signature `Lcom/huawei/agconnect/credential/obs/j;.c:(Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/hmf/tasks/TaskCompletionSource;Lcom/huawei/agconnect/common/api/BackendService$Options;)V` @kind static;
  #L1bb35e.  return @kind void;
}
procedure `void` `b`(`com.huawei.agconnect.core.service.auth.Token` v8 @kind object, `com.huawei.agconnect.common.api.BaseRequest` v9 @kind object, `com.huawei.agconnect.common.api.BackendService$Options` v10 @kind object, `com.huawei.hmf.tasks.TaskCompletionSource` v11 @kind object, `int` v12 , `java.lang.Class` v13 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/j;.b:(Lcom/huawei/agconnect/core/service/auth/Token;Lcom/huawei/agconnect/common/api/BaseRequest;Lcom/huawei/agconnect/common/api/BackendService$Options;Lcom/huawei/hmf/tasks/TaskCompletionSource;ILjava/lang/Class;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1bb370.  v0:= new `java.lang.StringBuilder`;
  #L1bb374.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bb37a.  v1:= "Bearer " @kind object;
  #L1bb37e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb384.  call temp:= `getTokenString`(v8) @signature `Lcom/huawei/agconnect/core/service/auth/Token;.getTokenString:()Ljava/lang/String;` @kind interface;
  #L1bb38a.  v8:= temp @kind object;
  #L1bb38c.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb392.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bb398.  v8:= temp @kind object;
  #L1bb39a.  call `setAuthorization`(v9, v8) @signature `Lcom/huawei/agconnect/common/api/BaseRequest;.setAuthorization:(Ljava/lang/String;)V` @kind virtual;
  #L1bb3a0.  call temp:= `isAccessToken`(v10) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.isAccessToken:()Z` @kind virtual;
  #L1bb3a6.  v8:= temp;
  #L1bb3a8.  if v8 == 0 then goto L1bb428;
  #L1bb3ac.  call temp:= `a`(v10) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Lcom/huawei/agconnect/common/api/BackendService$Options;)Lcom/huawei/agconnect/AGConnectInstance;` @kind static;
  #L1bb3b2.  v8:= temp @kind object;
  #L1bb3b4.  v0:= constclass @type ^`com.huawei.agconnect.core.service.auth.AuthProvider` @kind object;
  #L1bb3b8.  call temp:= `getService`(v8, v0) @signature `Lcom/huawei/agconnect/AGConnectInstance;.getService:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1bb3be.  v8:= temp @kind object;
  #L1bb3c0.  v8:= (`com.huawei.agconnect.core.service.auth.AuthProvider`) v8 @kind object;
  #L1bb3c4.  if v8 != 0 then goto L1bb3e0;
  #L1bb3c8.  v8:= new `com.huawei.agconnect.exception.AGCServerException`;
  #L1bb3cc.  v9:= 3I;
  #L1bb3ce.  v10:= "no user login" @kind object;
  #L1bb3d2.  call `<init>`(v8, v10, v9) @signature `Lcom/huawei/agconnect/exception/AGCServerException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1bb3d8.  call `setException`(v11, v8) @signature `Lcom/huawei/hmf/tasks/TaskCompletionSource;.setException:(Ljava/lang/Exception;)V` @kind virtual;
  #L1bb3de.  return @kind void;
  #L1bb3e0.  call temp:= `getTokens`(v8) @signature `Lcom/huawei/agconnect/core/service/auth/AuthProvider;.getTokens:()Lcom/huawei/hmf/tasks/Task;` @kind interface;
  #L1bb3e6.  v8:= temp @kind object;
  #L1bb3e8.  call temp:= `immediate`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.immediate:()Ljava/util/concurrent/Executor;` @kind static;
  #L1bb3ee.  v0:= temp @kind object;
  #L1bb3f0.  v7:= new `com.huawei.agconnect.credential.obs.j$9`;
  #L1bb3f4.  v1:= v7 @kind object;
  #L1bb3f6.  v2:= v9 @kind object;
  #L1bb3f8.  v3:= v12;
  #L1bb3fa.  v4:= v13 @kind object;
  #L1bb3fc.  v5:= v11 @kind object;
  #L1bb3fe.  v6:= v10 @kind object;
  #L1bb400.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lcom/huawei/agconnect/credential/obs/j$9;.<init>:(Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/hmf/tasks/TaskCompletionSource;Lcom/huawei/agconnect/common/api/BackendService$Options;)V` @kind direct;
  #L1bb406.  call temp:= `addOnSuccessListener`(v8, v0, v7) @signature `Lcom/huawei/hmf/tasks/Task;.addOnSuccessListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1bb40c.  v8:= temp @kind object;
  #L1bb40e.  call temp:= `immediate`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.immediate:()Ljava/util/concurrent/Executor;` @kind static;
  #L1bb414.  v9:= temp @kind object;
  #L1bb416.  v10:= new `com.huawei.agconnect.credential.obs.j$8`;
  #L1bb41a.  call `<init>`(v10, v11) @signature `Lcom/huawei/agconnect/credential/obs/j$8;.<init>:(Lcom/huawei/hmf/tasks/TaskCompletionSource;)V` @kind direct;
  #L1bb420.  call temp:= `addOnFailureListener`(v8, v9, v10) @signature `Lcom/huawei/hmf/tasks/Task;.addOnFailureListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1bb426.  goto L1bb42e;
  #L1bb428.  call `a`(v9, v12, v13, v11, v10) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/hmf/tasks/TaskCompletionSource;Lcom/huawei/agconnect/common/api/BackendService$Options;)V` @kind static;
  #L1bb42e.  return @kind void;
}
procedure `void` `b`(`java.lang.Exception` v10 @kind object, `com.huawei.agconnect.common.api.BackendService$Options` v11 @kind object, `com.huawei.agconnect.common.api.BaseRequest` v12 @kind object, `int` v13 , `java.lang.Class` v14 @kind object, `com.huawei.hmf.tasks.TaskCompletionSource` v15 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/j;.b:(Ljava/lang/Exception;Lcom/huawei/agconnect/common/api/BackendService$Options;Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/hmf/tasks/TaskCompletionSource;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1bb440.  call temp:= `a`(v10) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Ljava/lang/Exception;)Z` @kind static;
  #L1bb446.  v0:= temp;
  #L1bb448.  if v0 == 0 then goto L1bb55c;
  #L1bb44c.  v0:= v10 @kind object;
  #L1bb44e.  v0:= (`com.huawei.agconnect.exception.AGCServerException`) v0 @kind object;
  #L1bb452.  call temp:= `getRetCode`(v0) @signature `Lcom/huawei/agconnect/exception/AGCServerException;.getRetCode:()I` @kind virtual;
  #L1bb458.  v0:= temp;
  #L1bb45a.  v1:= 205524993I;
  #L1bb460.  v2:= 1I;
  #L1bb462.  if v0 != v1 then goto L1bb4d8;
  #L1bb466.  call temp:= `isClientTokenRefreshed`(v11) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.isClientTokenRefreshed:()Z` @kind virtual;
  #L1bb46c.  v1:= temp;
  #L1bb46e.  if v1 != 0 then goto L1bb4d8;
  #L1bb472.  call `setClientTokenRefreshed`(v11, v2) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.setClientTokenRefreshed:(Z)V` @kind virtual;
  #L1bb478.  call temp:= `a`(v11) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Lcom/huawei/agconnect/common/api/BackendService$Options;)Lcom/huawei/agconnect/AGConnectInstance;` @kind static;
  #L1bb47e.  v10:= temp @kind object;
  #L1bb480.  v0:= constclass @type ^`com.huawei.agconnect.core.service.auth.CredentialsProvider` @kind object;
  #L1bb484.  call temp:= `getService`(v10, v0) @signature `Lcom/huawei/agconnect/AGConnectInstance;.getService:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1bb48a.  v10:= temp @kind object;
  #L1bb48c.  v10:= (`com.huawei.agconnect.core.service.auth.CredentialsProvider`) v10 @kind object;
  #L1bb490.  call temp:= `getTokens`(v10, v2) @signature `Lcom/huawei/agconnect/core/service/auth/CredentialsProvider;.getTokens:(Z)Lcom/huawei/hmf/tasks/Task;` @kind interface;
  #L1bb496.  v10:= temp @kind object;
  #L1bb498.  call temp:= `immediate`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.immediate:()Ljava/util/concurrent/Executor;` @kind static;
  #L1bb49e.  v0:= temp @kind object;
  #L1bb4a0.  v7:= new `com.huawei.agconnect.credential.obs.j$2`;
  #L1bb4a4.  v1:= v7 @kind object;
  #L1bb4a6.  v2:= v12 @kind object;
  #L1bb4a8.  v3:= v13;
  #L1bb4aa.  v4:= v14 @kind object;
  #L1bb4ac.  v5:= v15 @kind object;
  #L1bb4ae.  v6:= v11 @kind object;
  #L1bb4b0.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lcom/huawei/agconnect/credential/obs/j$2;.<init>:(Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/hmf/tasks/TaskCompletionSource;Lcom/huawei/agconnect/common/api/BackendService$Options;)V` @kind direct;
  #L1bb4b6.  call temp:= `addOnSuccessListener`(v10, v0, v7) @signature `Lcom/huawei/hmf/tasks/Task;.addOnSuccessListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1bb4bc.  v10:= temp @kind object;
  #L1bb4be.  call temp:= `immediate`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.immediate:()Ljava/util/concurrent/Executor;` @kind static;
  #L1bb4c4.  v11:= temp @kind object;
  #L1bb4c6.  v12:= new `com.huawei.agconnect.credential.obs.j$12`;
  #L1bb4ca.  call `<init>`(v12, v15) @signature `Lcom/huawei/agconnect/credential/obs/j$12;.<init>:(Lcom/huawei/hmf/tasks/TaskCompletionSource;)V` @kind direct;
  #L1bb4d0.  call temp:= `addOnFailureListener`(v10, v11, v12) @signature `Lcom/huawei/hmf/tasks/Task;.addOnFailureListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1bb4d6.  return @kind void;
  #L1bb4d8.  v1:= 205524994I;
  #L1bb4de.  if v0 != v1 then goto L1bb55c;
  #L1bb4e2.  call temp:= `isAccessTokenRefreshed`(v11) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.isAccessTokenRefreshed:()Z` @kind virtual;
  #L1bb4e8.  v0:= temp;
  #L1bb4ea.  if v0 != 0 then goto L1bb55c;
  #L1bb4ee.  call `setAccessTokenRefreshed`(v11, v2) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.setAccessTokenRefreshed:(Z)V` @kind virtual;
  #L1bb4f4.  call temp:= `a`(v11) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Lcom/huawei/agconnect/common/api/BackendService$Options;)Lcom/huawei/agconnect/AGConnectInstance;` @kind static;
  #L1bb4fa.  v0:= temp @kind object;
  #L1bb4fc.  v1:= constclass @type ^`com.huawei.agconnect.core.service.auth.AuthProvider` @kind object;
  #L1bb500.  call temp:= `getService`(v0, v1) @signature `Lcom/huawei/agconnect/AGConnectInstance;.getService:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1bb506.  v0:= temp @kind object;
  #L1bb508.  v0:= (`com.huawei.agconnect.core.service.auth.AuthProvider`) v0 @kind object;
  #L1bb50c.  if v0 != 0 then goto L1bb518;
  #L1bb510.  call `setException`(v15, v10) @signature `Lcom/huawei/hmf/tasks/TaskCompletionSource;.setException:(Ljava/lang/Exception;)V` @kind virtual;
  #L1bb516.  return @kind void;
  #L1bb518.  call temp:= `getTokens`(v0, v2) @signature `Lcom/huawei/agconnect/core/service/auth/AuthProvider;.getTokens:(Z)Lcom/huawei/hmf/tasks/Task;` @kind interface;
  #L1bb51e.  v0:= temp @kind object;
  #L1bb520.  call temp:= `immediate`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.immediate:()Ljava/util/concurrent/Executor;` @kind static;
  #L1bb526.  v1:= temp @kind object;
  #L1bb528.  v9:= new `com.huawei.agconnect.credential.obs.j$4`;
  #L1bb52c.  v2:= v9 @kind object;
  #L1bb52e.  v3:= v12 @kind object;
  #L1bb530.  v4:= v13;
  #L1bb532.  v5:= v14 @kind object;
  #L1bb534.  v6:= v15 @kind object;
  #L1bb536.  v7:= v11 @kind object;
  #L1bb538.  v8:= v10 @kind object;
  #L1bb53a.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/huawei/agconnect/credential/obs/j$4;.<init>:(Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/hmf/tasks/TaskCompletionSource;Lcom/huawei/agconnect/common/api/BackendService$Options;Ljava/lang/Exception;)V` @kind direct;
  #L1bb540.  call temp:= `addOnSuccessListener`(v0, v1, v9) @signature `Lcom/huawei/hmf/tasks/Task;.addOnSuccessListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1bb546.  v10:= temp @kind object;
  #L1bb548.  call temp:= `immediate`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.immediate:()Ljava/util/concurrent/Executor;` @kind static;
  #L1bb54e.  v11:= temp @kind object;
  #L1bb550.  v12:= new `com.huawei.agconnect.credential.obs.j$3`;
  #L1bb554.  call `<init>`(v12, v15) @signature `Lcom/huawei/agconnect/credential/obs/j$3;.<init>:(Lcom/huawei/hmf/tasks/TaskCompletionSource;)V` @kind direct;
  #L1bb55a.  goto L1bb4d0;
  #L1bb55c.  call `setException`(v15, v10) @signature `Lcom/huawei/hmf/tasks/TaskCompletionSource;.setException:(Ljava/lang/Exception;)V` @kind virtual;
  #L1bb562.  return @kind void;
}
procedure `com.huawei.hmf.tasks.Task` `c`(`com.huawei.agconnect.common.api.BaseRequest` v9 @kind object, `int` v10 , `java.lang.Class` v11 @kind object, `com.huawei.agconnect.common.api.BackendService$Options` v12 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/j;.c:(Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/agconnect/common/api/BackendService$Options;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1bb24c.  if v12 == 0 then goto L1bb296;
  #L1bb250.  call temp:= `getFactory`(v12) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.getFactory:()Lcom/huawei/agconnect/https/Adapter$Factory;` @kind virtual;
  #L1bb256.  v0:= temp @kind object;
  #L1bb258.  if v0 != 0 then goto L1bb25e;
  #L1bb25c.  goto L1bb296;
  #L1bb25e.  call temp:= `getFactory`(v12) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.getFactory:()Lcom/huawei/agconnect/https/Adapter$Factory;` @kind virtual;
  #L1bb264.  v4:= temp @kind object;
  #L1bb266.  call temp:= `getTimeout`(v12) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.getTimeout:()J` @kind virtual;
  #L1bb26c.  v5:= temp @kind wide;
  #L1bb26e.  call temp:= `getTimeUnit`(v12) @signature `Lcom/huawei/agconnect/common/api/BackendService$Options;.getTimeUnit:()Ljava/util/concurrent/TimeUnit;` @kind virtual;
  #L1bb274.  v7:= temp @kind object;
  #L1bb276.  call temp:= `a`(v12) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Lcom/huawei/agconnect/common/api/BackendService$Options;)Lcom/huawei/agconnect/AGConnectInstance;` @kind static;
  #L1bb27c.  v12:= temp @kind object;
  #L1bb27e.  call temp:= `getOptions`(v12) @signature `Lcom/huawei/agconnect/AGConnectInstance;.getOptions:()Lcom/huawei/agconnect/AGConnectOptions;` @kind virtual;
  #L1bb284.  v8:= temp @kind object;
  #L1bb286.  v1:= v9 @kind object;
  #L1bb288.  v2:= v10;
  #L1bb28a.  v3:= v11 @kind object;
  #L1bb28c.  call temp:= `call`(v1, v2, v3, v4, v5, v7, v8) @signature `Lcom/huawei/agconnect/common/api/Backend;.call:(Ljava/lang/Object;ILjava/lang/Class;Lcom/huawei/agconnect/https/Adapter$Factory;JLjava/util/concurrent/TimeUnit;Lcom/huawei/agconnect/AGConnectOptions;)Lcom/huawei/hmf/tasks/Task;` @kind static;
  #L1bb292.  v9:= temp @kind object;
  #L1bb294.  return v9 @kind object;
  #L1bb296.  call temp:= `a`(v12) @signature `Lcom/huawei/agconnect/credential/obs/j;.a:(Lcom/huawei/agconnect/common/api/BackendService$Options;)Lcom/huawei/agconnect/AGConnectInstance;` @kind static;
  #L1bb29c.  v12:= temp @kind object;
  #L1bb29e.  call temp:= `getOptions`(v12) @signature `Lcom/huawei/agconnect/AGConnectInstance;.getOptions:()Lcom/huawei/agconnect/AGConnectOptions;` @kind virtual;
  #L1bb2a4.  v12:= temp @kind object;
  #L1bb2a6.  call temp:= `call`(v9, v10, v11, v12) @signature `Lcom/huawei/agconnect/common/api/Backend;.call:(Ljava/lang/Object;ILjava/lang/Class;Lcom/huawei/agconnect/AGConnectOptions;)Lcom/huawei/hmf/tasks/Task;` @kind static;
  #L1bb2ac.  v9:= temp @kind object;
  #L1bb2ae.  return v9 @kind object;
}
procedure `void` `c`(`com.huawei.agconnect.common.api.BaseRequest` v9 @kind object, `int` v10 , `java.lang.Class` v11 @kind object, `com.huawei.hmf.tasks.TaskCompletionSource` v12 @kind object, `com.huawei.agconnect.common.api.BackendService$Options` v13 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/j;.c:(Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/hmf/tasks/TaskCompletionSource;Lcom/huawei/agconnect/common/api/BackendService$Options;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1bb574.  call temp:= `c`(v9, v10, v11, v13) @signature `Lcom/huawei/agconnect/credential/obs/j;.c:(Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/agconnect/common/api/BackendService$Options;)Lcom/huawei/hmf/tasks/Task;` @kind static;
  #L1bb57a.  v0:= temp @kind object;
  #L1bb57c.  call temp:= `immediate`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.immediate:()Ljava/util/concurrent/Executor;` @kind static;
  #L1bb582.  v1:= temp @kind object;
  #L1bb584.  v2:= new `com.huawei.agconnect.credential.obs.j$11`;
  #L1bb588.  call `<init>`(v2, v12) @signature `Lcom/huawei/agconnect/credential/obs/j$11;.<init>:(Lcom/huawei/hmf/tasks/TaskCompletionSource;)V` @kind direct;
  #L1bb58e.  call temp:= `addOnSuccessListener`(v0, v1, v2) @signature `Lcom/huawei/hmf/tasks/Task;.addOnSuccessListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1bb594.  v0:= temp @kind object;
  #L1bb596.  call temp:= `immediate`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.immediate:()Ljava/util/concurrent/Executor;` @kind static;
  #L1bb59c.  v1:= temp @kind object;
  #L1bb59e.  v8:= new `com.huawei.agconnect.credential.obs.j$10`;
  #L1bb5a2.  v2:= v8 @kind object;
  #L1bb5a4.  v3:= v13 @kind object;
  #L1bb5a6.  v4:= v9 @kind object;
  #L1bb5a8.  v5:= v10;
  #L1bb5aa.  v6:= v11 @kind object;
  #L1bb5ac.  v7:= v12 @kind object;
  #L1bb5ae.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lcom/huawei/agconnect/credential/obs/j$10;.<init>:(Lcom/huawei/agconnect/common/api/BackendService$Options;Lcom/huawei/agconnect/common/api/BaseRequest;ILjava/lang/Class;Lcom/huawei/hmf/tasks/TaskCompletionSource;)V` @kind direct;
  #L1bb5b4.  call temp:= `addOnFailureListener`(v0, v1, v8) @signature `Lcom/huawei/hmf/tasks/Task;.addOnFailureListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1bb5ba.  return @kind void;
}
