record `com.huawei.agconnect.credential.obs.af` @kind class @AccessFlag PUBLIC extends `javax.net.ssl.SSLSocketFactory` @kind class {
  `javax.net.ssl.SSLContext` `com.huawei.agconnect.credential.obs.af.e` @AccessFlag PRIVATE;
  `javax.net.ssl.SSLSocket` `com.huawei.agconnect.credential.obs.af.f` @AccessFlag PRIVATE;
  `android.content.Context` `com.huawei.agconnect.credential.obs.af.g` @AccessFlag PRIVATE;
  `java.lang.String`[] `com.huawei.agconnect.credential.obs.af.h` @AccessFlag PRIVATE;
  `javax.net.ssl.X509TrustManager` `com.huawei.agconnect.credential.obs.af.i` @AccessFlag PRIVATE;
  `java.lang.String`[] `com.huawei.agconnect.credential.obs.af.j` @AccessFlag PRIVATE;
  `java.lang.String`[] `com.huawei.agconnect.credential.obs.af.k` @AccessFlag PRIVATE;
  `java.lang.String`[] `com.huawei.agconnect.credential.obs.af.l` @AccessFlag PRIVATE;
}
global `org.apache.http.conn.ssl.X509HostnameVerifier` `@@com.huawei.agconnect.credential.obs.af.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.apache.http.conn.ssl.X509HostnameVerifier` `@@com.huawei.agconnect.credential.obs.af.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.huawei.agconnect.credential.obs.af.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.huawei.agconnect.credential.obs.af` `@@com.huawei.agconnect.credential.obs.af.d` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lcom/huawei/agconnect/credential/obs/af;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b7ca0.  v0:= new `org.apache.http.conn.ssl.BrowserCompatHostnameVerifier`;
  #L1b7ca4.  call `<init>`(v0) @signature `Lorg/apache/http/conn/ssl/BrowserCompatHostnameVerifier;.<init>:()V` @kind direct;
  #L1b7caa.  `@@com.huawei.agconnect.credential.obs.af.a` @type ^`org.apache.http.conn.ssl.X509HostnameVerifier` := v0 @kind object;
  #L1b7cae.  v0:= new `org.apache.http.conn.ssl.StrictHostnameVerifier`;
  #L1b7cb2.  call `<init>`(v0) @signature `Lorg/apache/http/conn/ssl/StrictHostnameVerifier;.<init>:()V` @kind direct;
  #L1b7cb8.  `@@com.huawei.agconnect.credential.obs.af.b` @type ^`org.apache.http.conn.ssl.X509HostnameVerifier` := v0 @kind object;
  #L1b7cbc.  v0:= constclass @type ^`com.huawei.agconnect.credential.obs.af` @kind object;
  #L1b7cc0.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b7cc6.  v0:= temp @kind object;
  #L1b7cc8.  `@@com.huawei.agconnect.credential.obs.af.c` @type ^`java.lang.String` := v0 @kind object;
  #L1b7ccc.  v0:= 0I;
  #L1b7cce.  `@@com.huawei.agconnect.credential.obs.af.d` @type ^`com.huawei.agconnect.credential.obs.af` := v0 @kind object;
  #L1b7cd2.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.agconnect.credential.obs.af` v4 @kind this, `android.content.Context` v5 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/af;.<init>:(Landroid/content/Context;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b7ce4.  call `<init>`(v4) @signature `Ljavax/net/ssl/SSLSocketFactory;.<init>:()V` @kind direct;
  #L1b7cea.  v0:= 0I;
  #L1b7cec.  v4.`com.huawei.agconnect.credential.obs.af.e` @type ^`javax.net.ssl.SSLContext` := v0 @kind object;
  #L1b7cf0.  v4.`com.huawei.agconnect.credential.obs.af.f` @type ^`javax.net.ssl.SSLSocket` := v0 @kind object;
  #L1b7cf4.  if v5 != 0 then goto L1b7d08;
  #L1b7cf8.  v5:= `@@com.huawei.agconnect.credential.obs.af.c` @type ^`java.lang.String` @kind object;
  #L1b7cfc.  v0:= "SecureSSLSocketFactory: context is null" @kind object;
  #L1b7d00.  call `d`(v5, v0) @signature `Lcom/huawei/agconnect/credential/obs/an;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1b7d06.  return @kind void;
  #L1b7d08.  call `b`(v4, v5) @signature `Lcom/huawei/agconnect/credential/obs/af;.b:(Landroid/content/Context;)V` @kind virtual;
  #L1b7d0e.  call temp:= `a`() @signature `Lcom/huawei/agconnect/credential/obs/ae;.a:()Ljavax/net/ssl/SSLContext;` @kind static;
  #L1b7d14.  v1:= temp @kind object;
  #L1b7d16.  call `a`(v4, v1) @signature `Lcom/huawei/agconnect/credential/obs/af;.a:(Ljavax/net/ssl/SSLContext;)V` @kind virtual;
  #L1b7d1c.  call temp:= `a`(v5) @signature `Lcom/huawei/agconnect/credential/obs/ag;.a:(Landroid/content/Context;)Lcom/huawei/agconnect/credential/obs/ah;` @kind static;
  #L1b7d22.  v5:= temp @kind object;
  #L1b7d24.  v4.`com.huawei.agconnect.credential.obs.af.i` @type ^`javax.net.ssl.X509TrustManager` := v5 @kind object;
  #L1b7d28.  v1:= v4.`com.huawei.agconnect.credential.obs.af.e` @type ^`javax.net.ssl.SSLContext` @kind object;
  #L1b7d2c.  v2:= 1I;
  #L1b7d2e.  v2:= new `javax.net.ssl.X509TrustManager`[v2];
  #L1b7d32.  v3:= 0I;
  #L1b7d34.  v2[v3]:= v5 @kind object;
  #L1b7d38.  call `init`(v1, v0, v2, v0) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L1b7d3e.  return @kind void;
}
procedure `com.huawei.agconnect.credential.obs.af` `a`(`android.content.Context` v5 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/af;.a:(Landroid/content/Context;)Lcom/huawei/agconnect/credential/obs/af;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b7a80.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1b7a86.  v0:= temp @kind wide;
  #L1b7a88.  call `a`(v5) @signature `Lcom/huawei/agconnect/credential/obs/ak;.a:(Landroid/content/Context;)V` @kind static;
  #L1b7a8e.  v2:= `@@com.huawei.agconnect.credential.obs.af.d` @type ^`com.huawei.agconnect.credential.obs.af` @kind object;
  #L1b7a92.  if v2 != 0 then goto L1b7abc;
  #L1b7a96.  v2:= constclass @type ^`com.huawei.agconnect.credential.obs.af` @kind object;
  #L1b7a9a.  @monitorenter v2
  #L1b7a9c.  v3:= `@@com.huawei.agconnect.credential.obs.af.d` @type ^`com.huawei.agconnect.credential.obs.af` @kind object;
  #L1b7aa0.  if v3 != 0 then goto L1b7ab2;
  #L1b7aa4.  v3:= new `com.huawei.agconnect.credential.obs.af`;
  #L1b7aa8.  call `<init>`(v3, v5) @signature `Lcom/huawei/agconnect/credential/obs/af;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L1b7aae.  `@@com.huawei.agconnect.credential.obs.af.d` @type ^`com.huawei.agconnect.credential.obs.af` := v3 @kind object;
  #L1b7ab2.  @monitorexit v2
  #L1b7ab4.  goto L1b7abc;
  #L1b7ab6.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b7ab8.  @monitorexit v2
  #L1b7aba.  throw v5;
  #L1b7abc.  v2:= `@@com.huawei.agconnect.credential.obs.af.d` @type ^`com.huawei.agconnect.credential.obs.af` @kind object;
  #L1b7ac0.  v2:= v2.`com.huawei.agconnect.credential.obs.af.g` @type ^`android.content.Context` @kind object;
  #L1b7ac4.  if v2 != 0 then goto L1b7ad6;
  #L1b7ac8.  if v5 == 0 then goto L1b7ad6;
  #L1b7acc.  v2:= `@@com.huawei.agconnect.credential.obs.af.d` @type ^`com.huawei.agconnect.credential.obs.af` @kind object;
  #L1b7ad0.  call `b`(v2, v5) @signature `Lcom/huawei/agconnect/credential/obs/af;.b:(Landroid/content/Context;)V` @kind virtual;
  #L1b7ad6.  v5:= `@@com.huawei.agconnect.credential.obs.af.c` @type ^`java.lang.String` @kind object;
  #L1b7ada.  v2:= new `java.lang.StringBuilder`;
  #L1b7ade.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b7ae4.  v3:= "getInstance: cost : " @kind object;
  #L1b7ae8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b7aee.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1b7af4.  v3:= temp @kind wide;
  #L1b7af6.  v3:= v3 - v0 @kind long;
  #L1b7af8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b7afe.  v0:= " ms" @kind object;
  #L1b7b02.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b7b08.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b7b0e.  v0:= temp @kind object;
  #L1b7b10.  call `a`(v5, v0) @signature `Lcom/huawei/agconnect/credential/obs/an;.a:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1b7b16.  v5:= `@@com.huawei.agconnect.credential.obs.af.d` @type ^`com.huawei.agconnect.credential.obs.af` @kind object;
  #L1b7b1a.  return v5 @kind object;
  catch `java.lang.Throwable` @[L1b7a9c..L1b7aba] goto L1b7ab6;
}
procedure `void` `a`(`com.huawei.agconnect.credential.obs.af` v4 @kind this, `java.net.Socket` v5 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/af;.a:(Ljava/net/Socket;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b7d50.  v0:= v4.`com.huawei.agconnect.credential.obs.af.l` @type ^`java.lang.String`[] @kind object;
  #L1b7d54.  call temp:= `a`(v0) @signature `Lcom/huawei/agconnect/credential/obs/aj;.a:([Ljava/lang/String;)Z` @kind static;
  #L1b7d5a.  v0:= temp;
  #L1b7d5c.  v1:= 1I;
  #L1b7d5e.  v2:= 0I;
  #L1b7d60.  if v0 != 0 then goto L1b7d86;
  #L1b7d64.  v0:= `@@com.huawei.agconnect.credential.obs.af.c` @type ^`java.lang.String` @kind object;
  #L1b7d68.  v3:= "set protocols" @kind object;
  #L1b7d6c.  call `b`(v0, v3) @signature `Lcom/huawei/agconnect/credential/obs/an;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1b7d72.  v0:= v5 @kind object;
  #L1b7d74.  v0:= (`javax.net.ssl.SSLSocket`) v0 @kind object;
  #L1b7d78.  v3:= v4.`com.huawei.agconnect.credential.obs.af.l` @type ^`java.lang.String`[] @kind object;
  #L1b7d7c.  call temp:= `c`(v0, v3) @signature `Lcom/huawei/agconnect/credential/obs/ae;.c:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @kind static;
  #L1b7d82.  v0:= 1I;
  #L1b7d84.  goto L1b7d88;
  #L1b7d86.  v0:= 0I;
  #L1b7d88.  v3:= v4.`com.huawei.agconnect.credential.obs.af.k` @type ^`java.lang.String`[] @kind object;
  #L1b7d8c.  call temp:= `a`(v3) @signature `Lcom/huawei/agconnect/credential/obs/aj;.a:([Ljava/lang/String;)Z` @kind static;
  #L1b7d92.  v3:= temp;
  #L1b7d94.  if v3 == 0 then goto L1b7dae;
  #L1b7d98.  v3:= v4.`com.huawei.agconnect.credential.obs.af.j` @type ^`java.lang.String`[] @kind object;
  #L1b7d9c.  call temp:= `a`(v3) @signature `Lcom/huawei/agconnect/credential/obs/aj;.a:([Ljava/lang/String;)Z` @kind static;
  #L1b7da2.  v3:= temp;
  #L1b7da4.  if v3 != 0 then goto L1b7daa;
  #L1b7da8.  goto L1b7dae;
  #L1b7daa.  v1:= 0I;
  #L1b7dac.  goto L1b7dee;
  #L1b7dae.  v2:= `@@com.huawei.agconnect.credential.obs.af.c` @type ^`java.lang.String` @kind object;
  #L1b7db2.  v3:= "set white cipher or black cipher" @kind object;
  #L1b7db6.  call `b`(v2, v3) @signature `Lcom/huawei/agconnect/credential/obs/an;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1b7dbc.  v2:= v5 @kind object;
  #L1b7dbe.  v2:= (`javax.net.ssl.SSLSocket`) v2 @kind object;
  #L1b7dc2.  call `d`(v2) @signature `Lcom/huawei/agconnect/credential/obs/ae;.d:(Ljavax/net/ssl/SSLSocket;)V` @kind static;
  #L1b7dc8.  v3:= v4.`com.huawei.agconnect.credential.obs.af.k` @type ^`java.lang.String`[] @kind object;
  #L1b7dcc.  call temp:= `a`(v3) @signature `Lcom/huawei/agconnect/credential/obs/aj;.a:([Ljava/lang/String;)Z` @kind static;
  #L1b7dd2.  v3:= temp;
  #L1b7dd4.  if v3 != 0 then goto L1b7de4;
  #L1b7dd8.  v3:= v4.`com.huawei.agconnect.credential.obs.af.k` @type ^`java.lang.String`[] @kind object;
  #L1b7ddc.  call temp:= `a`(v2, v3) @signature `Lcom/huawei/agconnect/credential/obs/ae;.a:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @kind static;
  #L1b7de2.  goto L1b7dee;
  #L1b7de4.  v3:= v4.`com.huawei.agconnect.credential.obs.af.j` @type ^`java.lang.String`[] @kind object;
  #L1b7de8.  call temp:= `b`(v2, v3) @signature `Lcom/huawei/agconnect/credential/obs/ae;.b:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @kind static;
  #L1b7dee.  if v0 != 0 then goto L1b7e0c;
  #L1b7df2.  v0:= `@@com.huawei.agconnect.credential.obs.af.c` @type ^`java.lang.String` @kind object;
  #L1b7df6.  v2:= "set default protocols" @kind object;
  #L1b7dfa.  call `b`(v0, v2) @signature `Lcom/huawei/agconnect/credential/obs/an;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1b7e00.  v0:= v5 @kind object;
  #L1b7e02.  v0:= (`javax.net.ssl.SSLSocket`) v0 @kind object;
  #L1b7e06.  call `d`(v0) @signature `Lcom/huawei/agconnect/credential/obs/ae;.d:(Ljavax/net/ssl/SSLSocket;)V` @kind static;
  #L1b7e0c.  if v1 != 0 then goto L1b7e28;
  #L1b7e10.  v0:= `@@com.huawei.agconnect.credential.obs.af.c` @type ^`java.lang.String` @kind object;
  #L1b7e14.  v1:= "set default cipher suites" @kind object;
  #L1b7e18.  call `b`(v0, v1) @signature `Lcom/huawei/agconnect/credential/obs/an;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1b7e1e.  v5:= (`javax.net.ssl.SSLSocket`) v5 @kind object;
  #L1b7e22.  call `a`(v5) @signature `Lcom/huawei/agconnect/credential/obs/ae;.a:(Ljavax/net/ssl/SSLSocket;)V` @kind static;
  #L1b7e28.  return @kind void;
}
procedure `void` `a`(`com.huawei.agconnect.credential.obs.af` v0 @kind this, `javax.net.ssl.SSLContext` v1 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/af;.a:(Ljavax/net/ssl/SSLContext;)V` @AccessFlag PUBLIC {
    temp;

  #L1b7e3c.  v0.`com.huawei.agconnect.credential.obs.af.e` @type ^`javax.net.ssl.SSLContext` := v1 @kind object;
  #L1b7e40.  return @kind void;
}
procedure `void` `b`(`com.huawei.agconnect.credential.obs.af` v0 @kind this, `android.content.Context` v1 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/af;.b:(Landroid/content/Context;)V` @AccessFlag PUBLIC {
    temp;

  #L1b7e54.  call temp:= `getApplicationContext`(v1) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L1b7e5a.  v1:= temp @kind object;
  #L1b7e5c.  v0.`com.huawei.agconnect.credential.obs.af.g` @type ^`android.content.Context` := v1 @kind object;
  #L1b7e60.  return @kind void;
}
procedure `java.net.Socket` `createSocket`(`com.huawei.agconnect.credential.obs.af` v2 @kind this, `java.lang.String` v3 @kind object, `int` v4 ) @signature `Lcom/huawei/agconnect/credential/obs/af;.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b7b74.  v0:= `@@com.huawei.agconnect.credential.obs.af.c` @type ^`java.lang.String` @kind object;
  #L1b7b78.  v1:= "createSocket: host , port" @kind object;
  #L1b7b7c.  call `b`(v0, v1) @signature `Lcom/huawei/agconnect/credential/obs/an;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1b7b82.  v0:= v2.`com.huawei.agconnect.credential.obs.af.e` @type ^`javax.net.ssl.SSLContext` @kind object;
  #L1b7b86.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L1b7b8c.  v0:= temp @kind object;
  #L1b7b8e.  call temp:= `createSocket`(v0, v3, v4) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;` @kind virtual;
  #L1b7b94.  v3:= temp @kind object;
  #L1b7b96.  v4:= instanceof @variable v3 @type ^`javax.net.ssl.SSLSocket` @kind boolean;
  #L1b7b9a.  if v4 == 0 then goto L1b7bc6;
  #L1b7b9e.  call `a`(v2, v3) @signature `Lcom/huawei/agconnect/credential/obs/af;.a:(Ljava/net/Socket;)V` @kind direct;
  #L1b7ba4.  v4:= v3 @kind object;
  #L1b7ba6.  v4:= (`javax.net.ssl.SSLSocket`) v4 @kind object;
  #L1b7baa.  v2.`com.huawei.agconnect.credential.obs.af.f` @type ^`javax.net.ssl.SSLSocket` := v4 @kind object;
  #L1b7bae.  call temp:= `getEnabledCipherSuites`(v4) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L1b7bb4.  v4:= temp @kind object;
  #L1b7bb6.  call temp:= `clone`(v4) @signature `[Ljava/lang/String;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1b7bbc.  v4:= temp @kind object;
  #L1b7bbe.  v4:= (`java.lang.String`[]) v4 @kind object;
  #L1b7bc2.  v2.`com.huawei.agconnect.credential.obs.af.h` @type ^`java.lang.String`[] := v4 @kind object;
  #L1b7bc6.  return v3 @kind object;
}
procedure `java.net.Socket` `createSocket`(`com.huawei.agconnect.credential.obs.af` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.net.InetAddress` v3 @kind object, `int` v4 ) @signature `Lcom/huawei/agconnect/credential/obs/af;.createSocket:(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;

  #L1b7bd8.  call temp:= `createSocket`(v0, v1, v2) @signature `Lcom/huawei/agconnect/credential/obs/af;.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;` @kind virtual;
  #L1b7bde.  v1:= temp @kind object;
  #L1b7be0.  return v1 @kind object;
}
procedure `java.net.Socket` `createSocket`(`com.huawei.agconnect.credential.obs.af` v0 @kind this, `java.net.InetAddress` v1 @kind object, `int` v2 ) @signature `Lcom/huawei/agconnect/credential/obs/af;.createSocket:(Ljava/net/InetAddress;I)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;

  #L1b7bf4.  call temp:= `getHostAddress`(v1) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L1b7bfa.  v1:= temp @kind object;
  #L1b7bfc.  call temp:= `createSocket`(v0, v1, v2) @signature `Lcom/huawei/agconnect/credential/obs/af;.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;` @kind virtual;
  #L1b7c02.  v1:= temp @kind object;
  #L1b7c04.  return v1 @kind object;
}
procedure `java.net.Socket` `createSocket`(`com.huawei.agconnect.credential.obs.af` v0 @kind this, `java.net.InetAddress` v1 @kind object, `int` v2 , `java.net.InetAddress` v3 @kind object, `int` v4 ) @signature `Lcom/huawei/agconnect/credential/obs/af;.createSocket:(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;

  #L1b7c18.  call temp:= `getHostAddress`(v1) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L1b7c1e.  v1:= temp @kind object;
  #L1b7c20.  call temp:= `createSocket`(v0, v1, v2) @signature `Lcom/huawei/agconnect/credential/obs/af;.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;` @kind virtual;
  #L1b7c26.  v1:= temp @kind object;
  #L1b7c28.  return v1 @kind object;
}
procedure `java.net.Socket` `createSocket`(`com.huawei.agconnect.credential.obs.af` v2 @kind this, `java.net.Socket` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `boolean` v6 ) @signature `Lcom/huawei/agconnect/credential/obs/af;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b7c3c.  v0:= `@@com.huawei.agconnect.credential.obs.af.c` @type ^`java.lang.String` @kind object;
  #L1b7c40.  v1:= "createSocket s host port autoClose" @kind object;
  #L1b7c44.  call `b`(v0, v1) @signature `Lcom/huawei/agconnect/credential/obs/an;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1b7c4a.  v0:= v2.`com.huawei.agconnect.credential.obs.af.e` @type ^`javax.net.ssl.SSLContext` @kind object;
  #L1b7c4e.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L1b7c54.  v0:= temp @kind object;
  #L1b7c56.  call temp:= `createSocket`(v0, v3, v4, v5, v6) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L1b7c5c.  v3:= temp @kind object;
  #L1b7c5e.  v4:= instanceof @variable v3 @type ^`javax.net.ssl.SSLSocket` @kind boolean;
  #L1b7c62.  if v4 == 0 then goto L1b7c8e;
  #L1b7c66.  call `a`(v2, v3) @signature `Lcom/huawei/agconnect/credential/obs/af;.a:(Ljava/net/Socket;)V` @kind direct;
  #L1b7c6c.  v4:= v3 @kind object;
  #L1b7c6e.  v4:= (`javax.net.ssl.SSLSocket`) v4 @kind object;
  #L1b7c72.  v2.`com.huawei.agconnect.credential.obs.af.f` @type ^`javax.net.ssl.SSLSocket` := v4 @kind object;
  #L1b7c76.  call temp:= `getEnabledCipherSuites`(v4) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L1b7c7c.  v4:= temp @kind object;
  #L1b7c7e.  call temp:= `clone`(v4) @signature `[Ljava/lang/String;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1b7c84.  v4:= temp @kind object;
  #L1b7c86.  v4:= (`java.lang.String`[]) v4 @kind object;
  #L1b7c8a.  v2.`com.huawei.agconnect.credential.obs.af.h` @type ^`java.lang.String`[] := v4 @kind object;
  #L1b7c8e.  return v3 @kind object;
}
procedure `java.lang.String`[] `getDefaultCipherSuites`(`com.huawei.agconnect.credential.obs.af` v1 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/af;.getDefaultCipherSuites:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b7b38.  v0:= 0I;
  #L1b7b3a.  v0:= new `java.lang.String`[v0];
  #L1b7b3e.  return v0 @kind object;
}
procedure `java.lang.String`[] `getSupportedCipherSuites`(`com.huawei.agconnect.credential.obs.af` v1 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/af;.getSupportedCipherSuites:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b7b50.  v0:= v1.`com.huawei.agconnect.credential.obs.af.h` @type ^`java.lang.String`[] @kind object;
  #L1b7b54.  if v0 == 0 then goto L1b7b5a;
  #L1b7b58.  return v0 @kind object;
  #L1b7b5a.  v0:= 0I;
  #L1b7b5c.  v0:= new `java.lang.String`[v0];
  #L1b7b60.  return v0 @kind object;
}
