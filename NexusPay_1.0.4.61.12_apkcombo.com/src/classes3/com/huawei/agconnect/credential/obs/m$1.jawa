record `com.huawei.agconnect.credential.obs.m$1` @kind class @AccessFlag  extends `okhttp3.Interceptor` @kind interface {
  `com.huawei.agconnect.credential.obs.m` `com.huawei.agconnect.credential.obs.m$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.huawei.agconnect.credential.obs.m$1` v0 @kind this, `com.huawei.agconnect.credential.obs.m` v1 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/m$1;.<init>:(Lcom/huawei/agconnect/credential/obs/m;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1bba1c.  v0.`com.huawei.agconnect.credential.obs.m$1.a` @type ^`com.huawei.agconnect.credential.obs.m` := v1 @kind object;
  #L1bba20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bba26.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`com.huawei.agconnect.credential.obs.m$1` v4 @kind this, `okhttp3.Interceptor$Chain` v5 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/m$1;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1bb90c.  call temp:= `request`(v5) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L1bb912.  v0:= temp @kind object;
  #L1bb914.  v1:= new `java.lang.StringBuilder`;
  #L1bb918.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bb91e.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1bb924.  v2:= temp @kind object;
  #L1bb926.  call temp:= `scheme`(v2) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L1bb92c.  v2:= temp @kind object;
  #L1bb92e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb934.  v2:= "://" @kind object;
  #L1bb938.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb93e.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1bb944.  v2:= temp @kind object;
  #L1bb946.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1bb94c.  v2:= temp @kind object;
  #L1bb94e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb954.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bb95a.  v1:= temp @kind object;
  #L1bb95c.  v2:= "http://localhost" @kind object;
  #L1bb960.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1bb966.  v2:= temp;
  #L1bb968.  if v2 != 0 then goto L1bb976;
  #L1bb96c.  call temp:= `proceed`(v5, v0) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L1bb972.  v5:= temp @kind object;
  #L1bb974.  return v5 @kind object;
  #L1bb976.  v2:= new `java.lang.StringBuilder`;
  #L1bb97a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bb980.  v3:= "https://" @kind object;
  #L1bb984.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb98a.  v3:= v4.`com.huawei.agconnect.credential.obs.m$1.a` @type ^`com.huawei.agconnect.credential.obs.m` @kind object;
  #L1bb98e.  call temp:= `a`(v3) @signature `Lcom/huawei/agconnect/credential/obs/m;.a:(Lcom/huawei/agconnect/credential/obs/m;)Lcom/huawei/agconnect/credential/obs/l;` @kind static;
  #L1bb994.  v3:= temp @kind object;
  #L1bb996.  call temp:= `c`(v3) @signature `Lcom/huawei/agconnect/credential/obs/l;.c:()Ljava/lang/String;` @kind virtual;
  #L1bb99c.  v3:= temp @kind object;
  #L1bb99e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb9a4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bb9aa.  v2:= temp @kind object;
  #L1bb9ac.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1bb9b2.  v3:= temp @kind object;
  #L1bb9b4.  call temp:= `toString`(v3) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bb9ba.  v3:= temp @kind object;
  #L1bb9bc.  call temp:= `replace`(v3, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L1bb9c2.  v1:= temp @kind object;
  #L1bb9c4.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L1bb9ca.  v0:= temp @kind object;
  #L1bb9cc.  call temp:= `url`(v0, v1) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1bb9d2.  v0:= temp @kind object;
  #L1bb9d4.  call temp:= `build`(v0) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L1bb9da.  v0:= temp @kind object;
  #L1bb9dc.  v1:= v4.`com.huawei.agconnect.credential.obs.m$1.a` @type ^`com.huawei.agconnect.credential.obs.m` @kind object;
  #L1bb9e0.  call temp:= `b`(v1) @signature `Lcom/huawei/agconnect/credential/obs/m;.b:(Lcom/huawei/agconnect/credential/obs/m;)Ljava/lang/Boolean;` @kind static;
  #L1bb9e6.  v1:= temp @kind object;
  #L1bb9e8.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L1bb9ee.  v1:= temp;
  #L1bb9f0.  if v1 != 0 then goto L1bba02;
  #L1bb9f4.  v1:= v4.`com.huawei.agconnect.credential.obs.m$1.a` @type ^`com.huawei.agconnect.credential.obs.m` @kind object;
  #L1bb9f8.  v2:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L1bb9fc.  call temp:= `a`(v1, v2) @signature `Lcom/huawei/agconnect/credential/obs/m;.a:(Lcom/huawei/agconnect/credential/obs/m;Ljava/lang/Boolean;)Ljava/lang/Boolean;` @kind static;
  #L1bba02.  call temp:= `proceed`(v5, v0) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L1bba08.  v5:= temp @kind object;
  #L1bba0a.  return v5 @kind object;
}
