record `com.huawei.agconnect.credential.obs.r` @kind class @AccessFlag PUBLIC extends `com.huawei.agconnect.core.service.auth.Token` @kind interface {
  `long` `com.huawei.agconnect.credential.obs.r.expires` @AccessFlag ;
  `java.lang.String` `com.huawei.agconnect.credential.obs.r.tokenString` @AccessFlag ;
  `long` `com.huawei.agconnect.credential.obs.r.validTime` @AccessFlag ;
}
procedure `void` `<init>`(`com.huawei.agconnect.credential.obs.r` v2 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/r;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1bbe8c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bbe92.  v0:= 0L;
  #L1bbe96.  v2.`com.huawei.agconnect.credential.obs.r.validTime` @type ^`long` := v0 @kind wide;
  #L1bbe9a.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.agconnect.credential.obs.r` v2 @kind this, `java.lang.String` v3 @kind object, `long` v4 ) @signature `Lcom/huawei/agconnect/credential/obs/r;.<init>:(Ljava/lang/String;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1bbeac.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bbeb2.  v0:= 0L;
  #L1bbeb6.  v2.`com.huawei.agconnect.credential.obs.r.validTime` @type ^`long` := v0 @kind wide;
  #L1bbeba.  call `a`(v2, v3, v4) @signature `Lcom/huawei/agconnect/credential/obs/r;.a:(Ljava/lang/String;J)V` @kind direct;
  #L1bbec0.  return @kind void;
}
procedure `void` `a`(`com.huawei.agconnect.credential.obs.r` v4 @kind this, `java.lang.String` v5 @kind object, `long` v6 ) @signature `Lcom/huawei/agconnect/credential/obs/r;.a:(Ljava/lang/String;J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1bbed4.  v4.`com.huawei.agconnect.credential.obs.r.tokenString` @type ^`java.lang.String` := v5 @kind object;
  #L1bbed8.  v4.`com.huawei.agconnect.credential.obs.r.expires` @type ^`long` := v6 @kind wide;
  #L1bbedc.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1bbee2.  v0:= temp @kind wide;
  #L1bbee4.  v2:= 1000L;
  #L1bbee8.  v6:= v6 * v2 @kind long;
  #L1bbeec.  v0:= v0 + v6 @kind long;
  #L1bbeee.  v5:= 120000L;
  #L1bbef4.  v0:= v0 - v5 @kind long;
  #L1bbef6.  v4.`com.huawei.agconnect.credential.obs.r.validTime` @type ^`long` := v0 @kind wide;
  #L1bbefa.  return @kind void;
}
procedure `boolean` `a`(`com.huawei.agconnect.credential.obs.r` v5 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/r;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1bbdf8.  v0:= v5.`com.huawei.agconnect.credential.obs.r.tokenString` @type ^`java.lang.String` @kind object;
  #L1bbdfc.  if v0 == 0 then goto L1bbe18;
  #L1bbe00.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1bbe06.  v0:= temp @kind wide;
  #L1bbe08.  v2:= v5.`com.huawei.agconnect.credential.obs.r.validTime` @type ^`long` @kind wide;
  #L1bbe0c.  v4:= lcmp(v0, v2);
  #L1bbe10.  if v4 > 0 then goto L1bbe18;
  #L1bbe14.  v0:= 1I;
  #L1bbe16.  goto L1bbe1a;
  #L1bbe18.  v0:= 0I;
  #L1bbe1a.  return v0;
}
procedure `long` `getExpiration`(`com.huawei.agconnect.credential.obs.r` v2 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/r;.getExpiration:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1bbe44.  v0:= v2.`com.huawei.agconnect.credential.obs.r.expires` @type ^`long` @kind wide;
  #L1bbe48.  return v0 @kind wide;
}
procedure `long` `getIssuedAt`(`com.huawei.agconnect.credential.obs.r` v2 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/r;.getIssuedAt:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1bbe5c.  v0:= 0L;
  #L1bbe60.  return v0 @kind wide;
}
procedure `long` `getNotBefore`(`com.huawei.agconnect.credential.obs.r` v2 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/r;.getNotBefore:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1bbe74.  v0:= 0L;
  #L1bbe78.  return v0 @kind wide;
}
procedure `java.lang.String` `getTokenString`(`com.huawei.agconnect.credential.obs.r` v1 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/r;.getTokenString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bbe2c.  v0:= v1.`com.huawei.agconnect.credential.obs.r.tokenString` @type ^`java.lang.String` @kind object;
  #L1bbe30.  return v0 @kind object;
}
