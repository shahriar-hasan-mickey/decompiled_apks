record `com.huawei.agconnect.credential.obs.d` @kind class @AccessFlag FINAL {
}
global `char`[] `@@com.huawei.agconnect.credential.obs.d.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/agconnect/credential/obs/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b9e0c.  v0:= "0123456789ABCDEF" @kind object;
  #L1b9e10.  call temp:= `toCharArray`(v0) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L1b9e16.  v0:= temp @kind object;
  #L1b9e18.  `@@com.huawei.agconnect.credential.obs.d.a` @type ^`char`[] := v0 @kind object;
  #L1b9e1c.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/d;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L1b9d9c.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1b9da2.  v0:= temp;
  #L1b9da4.  if v0 == 0 then goto L1b9dac;
  #L1b9da8.  v2:= "SHA-256" @kind object;
  #L1b9dac.  call temp:= `getInstance`(v2) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L1b9db2.  v2:= temp @kind object;
  #L1b9db4.  call temp:= `defaultCharset`() @signature `Ljava/nio/charset/Charset;.defaultCharset:()Ljava/nio/charset/Charset;` @kind static;
  #L1b9dba.  v0:= temp @kind object;
  #L1b9dbc.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L1b9dc2.  v1:= temp @kind object;
  #L1b9dc4.  call `update`(v2, v1) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L1b9dca.  call temp:= `digest`(v2) @signature `Ljava/security/MessageDigest;.digest:()[B` @kind virtual;
  #L1b9dd0.  v1:= temp @kind object;
  #L1b9dd2.  call temp:= `a`(v1) @signature `Lcom/huawei/agconnect/credential/obs/d;.a:([B)Ljava/lang/String;` @kind static;
  #L1b9dd8.  v1:= temp @kind object;
  #L1b9dda.  goto L1b9dea;
  #L1b9ddc.  v1:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L1b9dde.  v2:= "" @kind object;
  #L1b9de2.  call `e`(v2, v2, v1) @signature `Lcom/huawei/agconnect/common/api/Logger;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L1b9de8.  v1:= 0I;
  #L1b9dea.  return v1 @kind object;
  catch `java.security.NoSuchAlgorithmException` @[L1b9d9c..L1b9dda] goto L1b9ddc;
}
procedure `java.lang.String` `a`(`byte`[] v6 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/d;.a:([B)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b9d38.  v0:= new `java.lang.StringBuilder`;
  #L1b9d3c.  v1:= length @variable v6;
  #L1b9d3e.  v1:= v1 * 2;
  #L1b9d42.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L1b9d48.  v1:= length @variable v6;
  #L1b9d4a.  v2:= 0I;
  #L1b9d4c.  if v2 >= v1 then goto L1b9d82;
  #L1b9d50.  v3:= v6[v2] @kind byte;
  #L1b9d54.  v4:= `@@com.huawei.agconnect.credential.obs.d.a` @type ^`char`[] @kind object;
  #L1b9d58.  v5:= v3 ^> 4;
  #L1b9d5c.  v5:= v5 ^& 15;
  #L1b9d60.  v4:= v4[v5] @kind char;
  #L1b9d64.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b9d6a.  v4:= `@@com.huawei.agconnect.credential.obs.d.a` @type ^`char`[] @kind object;
  #L1b9d6e.  v3:= v3 ^& 15;
  #L1b9d72.  v3:= v4[v3] @kind char;
  #L1b9d76.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b9d7c.  v2:= v2 + 1;
  #L1b9d80.  goto L1b9d4c;
  #L1b9d82.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b9d88.  v6:= temp @kind object;
  #L1b9d8a.  return v6 @kind object;
}
