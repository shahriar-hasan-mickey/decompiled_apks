record `com.huawei.agconnect.credential.obs.ae` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `java.lang.String`[] `@@com.huawei.agconnect.credential.obs.ae.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@com.huawei.agconnect.credential.obs.ae.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@com.huawei.agconnect.credential.obs.ae.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/agconnect/credential/obs/ae;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L1b7928.  v0:= "TLS_DHE_DSS_WITH_AES_128_CBC_SHA" @kind object;
  #L1b792c.  v1:= "TLS_DHE_RSA_WITH_AES_128_CBC_SHA" @kind object;
  #L1b7930.  v2:= "TLS_DHE_DSS_WITH_AES_256_CBC_SHA" @kind object;
  #L1b7934.  v3:= "TLS_DHE_RSA_WITH_AES_256_CBC_SHA" @kind object;
  #L1b7938.  v4:= "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA" @kind object;
  #L1b793c.  v5:= "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA" @kind object;
  #L1b7940.  v6:= "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA" @kind object;
  #L1b7944.  v7:= "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA" @kind object;
  #L1b7948.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5, v6, v7];
  #L1b794e.  v0:= temp @kind object;
  #L1b7950.  `@@com.huawei.agconnect.credential.obs.ae.a` @type ^`java.lang.String`[] := v0 @kind object;
  #L1b7954.  v1:= "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256" @kind object;
  #L1b7958.  v2:= "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384" @kind object;
  #L1b795c.  v3:= "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256" @kind object;
  #L1b7960.  v4:= "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384" @kind object;
  #L1b7964.  v5:= "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256" @kind object;
  #L1b7968.  v6:= "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384" @kind object;
  #L1b796c.  v7:= "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256" @kind object;
  #L1b7970.  v8:= "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384" @kind object;
  #L1b7974.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8];
  #L1b797a.  v0:= temp @kind object;
  #L1b797c.  `@@com.huawei.agconnect.credential.obs.ae.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L1b7980.  v1:= "TLS_RSA" @kind object;
  #L1b7984.  v2:= "CBC" @kind object;
  #L1b7988.  v3:= "TEA" @kind object;
  #L1b798c.  v4:= "SHA0" @kind object;
  #L1b7990.  v5:= "MD2" @kind object;
  #L1b7994.  v6:= "MD4" @kind object;
  #L1b7998.  v7:= "RIPEMD" @kind object;
  #L1b799c.  v8:= "NULL" @kind object;
  #L1b79a0.  v9:= "RC4" @kind object;
  #L1b79a4.  v10:= "DES" @kind object;
  #L1b79a8.  v11:= "DESX" @kind object;
  #L1b79ac.  v12:= "DES40" @kind object;
  #L1b79b0.  v13:= "RC2" @kind object;
  #L1b79b4.  v14:= "MD5" @kind object;
  #L1b79b8.  v15:= "ANON" @kind object;
  #L1b79bc.  v16:= "TLS_EMPTY_RENEGOTIATION_INFO_SCSV" @kind object;
  #L1b79c0.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16];
  #L1b79c6.  v0:= temp @kind object;
  #L1b79c8.  `@@com.huawei.agconnect.credential.obs.ae.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L1b79cc.  return @kind void;
}
procedure `javax.net.ssl.SSLContext` `a`() @signature `Lcom/huawei/agconnect/credential/obs/ae;.a:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1b78e8.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1b78ec.  v1:= 29I;
  #L1b78f0.  if v0 < v1 then goto L1b7902;
  #L1b78f4.  v0:= "TLSv1.3" @kind object;
  #L1b78f8.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L1b78fe.  v0:= temp @kind object;
  #L1b7900.  goto L1b7916;
  #L1b7902.  v1:= 16I;
  #L1b7906.  if v0 < v1 then goto L1b7910;
  #L1b790a.  v0:= "TLSv1.2" @kind object;
  #L1b790e.  goto L1b78f8;
  #L1b7910.  v0:= "TLS" @kind object;
  #L1b7914.  goto L1b78f8;
  #L1b7916.  return v0 @kind object;
}
procedure `void` `a`(`javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/ae;.a:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b79e0.  if v1 != 0 then goto L1b79e6;
  #L1b79e4.  return @kind void;
  #L1b79e6.  call temp:= `b`(v1) @signature `Lcom/huawei/agconnect/credential/obs/ae;.b:(Ljavax/net/ssl/SSLSocket;)Z` @kind static;
  #L1b79ec.  v0:= temp;
  #L1b79ee.  if v0 != 0 then goto L1b79f8;
  #L1b79f2.  call temp:= `c`(v1) @signature `Lcom/huawei/agconnect/credential/obs/ae;.c:(Ljavax/net/ssl/SSLSocket;)Z` @kind static;
  #L1b79f8.  return @kind void;
}
procedure `boolean` `a`(`javax.net.ssl.SSLSocket` v7 @kind object, `java.lang.String`[] v8 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/ae;.a:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b76cc.  v0:= 0I;
  #L1b76ce.  if v7 != 0 then goto L1b76d4;
  #L1b76d2.  return v0;
  #L1b76d4.  call temp:= `getEnabledCipherSuites`(v7) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L1b76da.  v1:= temp @kind object;
  #L1b76dc.  v2:= new `java.util.ArrayList`;
  #L1b76e0.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1b76e6.  call temp:= `asList`(v8) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1b76ec.  v8:= temp @kind object;
  #L1b76ee.  v3:= length @variable v1;
  #L1b76f0.  v4:= 0I;
  #L1b76f2.  if v4 >= v3 then goto L1b771e;
  #L1b76f6.  v5:= v1[v4] @kind object;
  #L1b76fa.  v6:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L1b76fe.  call temp:= `toUpperCase`(v5, v6) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L1b7704.  v6:= temp @kind object;
  #L1b7706.  call temp:= `contains`(v8, v6) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1b770c.  v6:= temp;
  #L1b770e.  if v6 == 0 then goto L1b7718;
  #L1b7712.  call temp:= `add`(v2, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1b7718.  v4:= v4 + 1;
  #L1b771c.  goto L1b76f2;
  #L1b771e.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1b7724.  v8:= temp;
  #L1b7726.  if v8 != 0 then goto L1b774c;
  #L1b772a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b7730.  v8:= temp;
  #L1b7732.  v8:= new `java.lang.String`[v8];
  #L1b7736.  call temp:= `toArray`(v2, v8) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1b773c.  v8:= temp @kind object;
  #L1b773e.  v8:= (`java.lang.String`[]) v8 @kind object;
  #L1b7742.  call `setEnabledCipherSuites`(v7, v8) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledCipherSuites:([Ljava/lang/String;)V` @kind virtual;
  #L1b7748.  v7:= 1I;
  #L1b774a.  return v7;
  #L1b774c.  return v0;
}
procedure `boolean` `b`(`javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/ae;.b:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1b7760.  if v2 != 0 then goto L1b7768;
  #L1b7764.  v2:= 0I;
  #L1b7766.  return v2;
  #L1b7768.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1b776c.  v1:= 19I;
  #L1b7770.  if v0 <= v1 then goto L1b7782;
  #L1b7774.  v0:= `@@com.huawei.agconnect.credential.obs.ae.b` @type ^`java.lang.String`[] @kind object;
  #L1b7778.  call temp:= `a`(v2, v0) @signature `Lcom/huawei/agconnect/credential/obs/ae;.a:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @kind static;
  #L1b777e.  v2:= temp;
  #L1b7780.  return v2;
  #L1b7782.  v0:= `@@com.huawei.agconnect.credential.obs.ae.a` @type ^`java.lang.String`[] @kind object;
  #L1b7786.  call temp:= `a`(v2, v0) @signature `Lcom/huawei/agconnect/credential/obs/ae;.a:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @kind static;
  #L1b778c.  v2:= temp;
  #L1b778e.  return v2;
}
procedure `boolean` `b`(`javax.net.ssl.SSLSocket` v12 @kind object, `java.lang.String`[] v13 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/ae;.b:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1b77a0.  v0:= 0I;
  #L1b77a2.  if v12 != 0 then goto L1b77a8;
  #L1b77a6.  return v0;
  #L1b77a8.  call temp:= `getEnabledCipherSuites`(v12) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L1b77ae.  v1:= temp @kind object;
  #L1b77b0.  v2:= new `java.util.ArrayList`;
  #L1b77b4.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1b77ba.  v3:= length @variable v1;
  #L1b77bc.  v4:= 0I;
  #L1b77be.  v5:= 1I;
  #L1b77c0.  if v4 >= v3 then goto L1b7812;
  #L1b77c4.  v6:= v1[v4] @kind object;
  #L1b77c8.  v7:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L1b77cc.  call temp:= `toUpperCase`(v6, v7) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L1b77d2.  v7:= temp @kind object;
  #L1b77d4.  v8:= length @variable v13;
  #L1b77d6.  v9:= 0I;
  #L1b77d8.  if v9 >= v8 then goto L1b7800;
  #L1b77dc.  v10:= v13[v9] @kind object;
  #L1b77e0.  v11:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L1b77e4.  call temp:= `toUpperCase`(v10, v11) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L1b77ea.  v10:= temp @kind object;
  #L1b77ec.  call temp:= `contains`(v7, v10) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L1b77f2.  v10:= temp;
  #L1b77f4.  if v10 == 0 then goto L1b77fa;
  #L1b77f8.  goto L1b7802;
  #L1b77fa.  v9:= v9 + 1;
  #L1b77fe.  goto L1b77d8;
  #L1b7800.  v5:= 0I;
  #L1b7802.  if v5 != 0 then goto L1b780c;
  #L1b7806.  call temp:= `add`(v2, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1b780c.  v4:= v4 + 1;
  #L1b7810.  goto L1b77be;
  #L1b7812.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1b7818.  v13:= temp;
  #L1b781a.  if v13 != 0 then goto L1b783e;
  #L1b781e.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b7824.  v13:= temp;
  #L1b7826.  v13:= new `java.lang.String`[v13];
  #L1b782a.  call temp:= `toArray`(v2, v13) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1b7830.  v13:= temp @kind object;
  #L1b7832.  v13:= (`java.lang.String`[]) v13 @kind object;
  #L1b7836.  call `setEnabledCipherSuites`(v12, v13) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledCipherSuites:([Ljava/lang/String;)V` @kind virtual;
  #L1b783c.  return v5;
  #L1b783e.  return v0;
}
procedure `boolean` `c`(`javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/ae;.c:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b7850.  if v1 != 0 then goto L1b7858;
  #L1b7854.  v1:= 0I;
  #L1b7856.  return v1;
  #L1b7858.  v0:= `@@com.huawei.agconnect.credential.obs.ae.c` @type ^`java.lang.String`[] @kind object;
  #L1b785c.  call temp:= `b`(v1, v0) @signature `Lcom/huawei/agconnect/credential/obs/ae;.b:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @kind static;
  #L1b7862.  v1:= temp;
  #L1b7864.  return v1;
}
procedure `boolean` `c`(`javax.net.ssl.SSLSocket` v2 @kind object, `java.lang.String`[] v3 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/ae;.c:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1b7878.  v0:= 0I;
  #L1b787a.  if v2 == 0 then goto L1b78c4;
  #L1b787e.  if v3 != 0 then goto L1b7884;
  #L1b7882.  goto L1b78c4;
  #L1b7884.  call `setEnabledProtocols`(v2, v3) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L1b788a.  v2:= 1I;
  #L1b788c.  return v2;
  #L1b788e.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L1b7890.  v3:= new `java.lang.StringBuilder`;
  #L1b7894.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b789a.  v1:= "setEnabledProtocols: exception : " @kind object;
  #L1b789e.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b78a4.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1b78aa.  v2:= temp @kind object;
  #L1b78ac.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b78b2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b78b8.  v2:= temp @kind object;
  #L1b78ba.  v3:= "SSLUtil" @kind object;
  #L1b78be.  call `d`(v3, v2) @signature `Lcom/huawei/agconnect/credential/obs/an;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1b78c4.  return v0;
  catch `java.lang.Exception` @[L1b7884..L1b788a] goto L1b788e;
}
procedure `void` `d`(`javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/ae;.d:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b7a0c.  if v4 != 0 then goto L1b7a12;
  #L1b7a10.  return @kind void;
  #L1b7a12.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1b7a16.  v1:= "TLSv1.2" @kind object;
  #L1b7a1a.  v2:= 29I;
  #L1b7a1e.  if v0 < v2 then goto L1b7a34;
  #L1b7a22.  v0:= "TLSv1.3" @kind object;
  #L1b7a26.  temp:= new `java.lang.String`[v0, v1];
  #L1b7a2c.  v0:= temp @kind object;
  #L1b7a2e.  call `setEnabledProtocols`(v4, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L1b7a34.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1b7a38.  v3:= 16I;
  #L1b7a3c.  if v0 < v3 then goto L1b7a54;
  #L1b7a40.  if v0 >= v2 then goto L1b7a54;
  #L1b7a44.  temp:= new `java.lang.String`[v1];
  #L1b7a4a.  v0:= temp @kind object;
  #L1b7a4c.  call `setEnabledProtocols`(v4, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L1b7a52.  goto L1b7a6e;
  #L1b7a54.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1b7a58.  if v0 >= v3 then goto L1b7a6e;
  #L1b7a5c.  v0:= "TLSv1" @kind object;
  #L1b7a60.  temp:= new `java.lang.String`[v0];
  #L1b7a66.  v0:= temp @kind object;
  #L1b7a68.  call `setEnabledProtocols`(v4, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L1b7a6e.  return @kind void;
}
