record `com.huawei.agconnect.credential.obs.u$a` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `java.lang.String` `com.huawei.agconnect.credential.obs.u$a.a` @AccessFlag ;
  `java.lang.String` `com.huawei.agconnect.credential.obs.u$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`com.huawei.agconnect.credential.obs.u$a` v0 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/u$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1bc7c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bc7c6.  return @kind void;
}
procedure `com.huawei.agconnect.credential.obs.u$a` `a`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/u$a;.a:(Ljava/lang/String;Ljava/lang/String;)Lcom/huawei/agconnect/credential/obs/u$a;` @AccessFlag STATIC {
    temp;
    v0;

  #L1bc734.  v0:= new `com.huawei.agconnect.credential.obs.u$a`;
  #L1bc738.  call `<init>`(v0) @signature `Lcom/huawei/agconnect/credential/obs/u$a;.<init>:()V` @kind direct;
  #L1bc73e.  v0.`com.huawei.agconnect.credential.obs.u$a.a` @type ^`java.lang.String` := v1 @kind object;
  #L1bc742.  v0.`com.huawei.agconnect.credential.obs.u$a.b` @type ^`java.lang.String` := v2 @kind object;
  #L1bc746.  return v0 @kind object;
}
procedure `boolean` `a`(`com.huawei.agconnect.credential.obs.u$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/u$a;.a:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1bc6a8.  call temp:= `isEmpty`(v4) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1bc6ae.  v0:= temp;
  #L1bc6b0.  v1:= 0I;
  #L1bc6b2.  if v0 == 0 then goto L1bc6b8;
  #L1bc6b6.  return v1;
  #L1bc6b8.  v0:= ":" @kind object;
  #L1bc6bc.  call temp:= `indexOf`(v4, v0) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L1bc6c2.  v0:= temp;
  #L1bc6c4.  v2:= -1I;
  #L1bc6c6.  if v0 == v2 then goto L1bc6d4;
  #L1bc6ca.  call temp:= `substring`(v4, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1bc6d0.  v0:= temp @kind object;
  #L1bc6d2.  goto L1bc6d6;
  #L1bc6d4.  v0:= v4 @kind object;
  #L1bc6d6.  v2:= `@@okhttp3.Dns.SYSTEM` @type ^`okhttp3.Dns` @kind object;
  #L1bc6da.  call temp:= `lookup`(v2, v0) @signature `Lokhttp3/Dns;.lookup:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L1bc6e0.  v4:= 1I;
  #L1bc6e2.  return v4;
  #L1bc6e4.  v0:= new `java.lang.StringBuilder`;
  #L1bc6e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bc6ee.  v2:= "checkUrl#UnknownHostException:" @kind object;
  #L1bc6f2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bc6f8.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bc6fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bc704.  v4:= temp @kind object;
  #L1bc706.  v0:= "EndpointServiceImpl" @kind object;
  #L1bc70a.  call `e`(v0, v4) @signature `Lcom/huawei/agconnect/common/api/Logger;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1bc710.  return v1;
  catch `java.net.UnknownHostException` @[L1bc6b8..L1bc6e0] goto L1bc6e4;
}
procedure `java.lang.String` `a`(`com.huawei.agconnect.credential.obs.u$a` v2 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/u$a;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1bc774.  v0:= v2.`com.huawei.agconnect.credential.obs.u$a.a` @type ^`java.lang.String` @kind object;
  #L1bc778.  call temp:= `a`(v2, v0) @signature `Lcom/huawei/agconnect/credential/obs/u$a;.a:(Ljava/lang/String;)Z` @kind direct;
  #L1bc77e.  v0:= temp;
  #L1bc780.  if v0 == 0 then goto L1bc78a;
  #L1bc784.  v0:= v2.`com.huawei.agconnect.credential.obs.u$a.a` @type ^`java.lang.String` @kind object;
  #L1bc788.  return v0 @kind object;
  #L1bc78a.  v0:= v2.`com.huawei.agconnect.credential.obs.u$a.b` @type ^`java.lang.String` @kind object;
  #L1bc78e.  call temp:= `a`(v2, v0) @signature `Lcom/huawei/agconnect/credential/obs/u$a;.a:(Ljava/lang/String;)Z` @kind direct;
  #L1bc794.  v0:= temp;
  #L1bc796.  if v0 == 0 then goto L1bc7a0;
  #L1bc79a.  v0:= v2.`com.huawei.agconnect.credential.obs.u$a.b` @type ^`java.lang.String` @kind object;
  #L1bc79e.  return v0 @kind object;
  #L1bc7a0.  v0:= new `java.io.IOException`;
  #L1bc7a4.  v1:= "main/backup url both are invalid" @kind object;
  #L1bc7a8.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bc7ae.  throw v0;
}
procedure `java.lang.Object` `call`(`com.huawei.agconnect.credential.obs.u$a` v1 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/u$a;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1bc758.  call temp:= `a`(v1) @signature `Lcom/huawei/agconnect/credential/obs/u$a;.a:()Ljava/lang/String;` @kind virtual;
  #L1bc75e.  v0:= temp @kind object;
  #L1bc760.  return v0 @kind object;
}
