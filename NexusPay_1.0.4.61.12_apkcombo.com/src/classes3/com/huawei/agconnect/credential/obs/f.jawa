record `com.huawei.agconnect.credential.obs.f` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `com.huawei.agconnect.credential.obs.f.b` @AccessFlag PRIVATE;
  `javax.crypto.SecretKey` `com.huawei.agconnect.credential.obs.f.c` @AccessFlag PRIVATE;
  `java.lang.String` `com.huawei.agconnect.credential.obs.f.fish` @AccessFlag ;
  `java.lang.String` `com.huawei.agconnect.credential.obs.f.jerry` @AccessFlag ;
  `java.lang.String` `com.huawei.agconnect.credential.obs.f.randmonKey` @AccessFlag ;
}
global `com.huawei.agconnect.credential.obs.f` `@@com.huawei.agconnect.credential.obs.f.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/agconnect/credential/obs/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ba18c.  v0:= new `com.huawei.agconnect.credential.obs.f`;
  #L1ba190.  call `<init>`(v0) @signature `Lcom/huawei/agconnect/credential/obs/f;.<init>:()V` @kind direct;
  #L1ba196.  `@@com.huawei.agconnect.credential.obs.f.a` @type ^`com.huawei.agconnect.credential.obs.f` := v0 @kind object;
  #L1ba19a.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.agconnect.credential.obs.f` v1 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/f;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1ba1ac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ba1b2.  v0:= 0I;
  #L1ba1b4.  v1.`com.huawei.agconnect.credential.obs.f.b` @type ^`java.lang.String` := v0 @kind object;
  #L1ba1b8.  return @kind void;
}
procedure `java.lang.String` `a`(`com.huawei.agconnect.credential.obs.f` v0 @kind this, `int` v1 ) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;

  #L1b9f28.  v1:= v1 / 2;
  #L1b9f2c.  call temp:= `generateSecureRandom`(v1) @signature `Lcom/huawei/agconnect/common/api/RandomWrapper;.generateSecureRandom:(I)[B` @kind static;
  #L1b9f32.  v1:= temp @kind object;
  #L1b9f34.  call temp:= `a`(v1) @signature `Lcom/huawei/agconnect/credential/obs/aq;.a:([B)Ljava/lang/String;` @kind static;
  #L1b9f3a.  v1:= temp @kind object;
  #L1b9f3c.  return v1 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object, `int` v4 ) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1b9f50.  call temp:= `a`(v3) @signature `Lcom/huawei/agconnect/credential/obs/aq;.a:(Ljava/lang/String;)[B` @kind static;
  #L1b9f56.  v3:= temp @kind object;
  #L1b9f58.  if v3 == 0 then goto L1b9f9c;
  #L1b9f5c.  v0:= length @variable v3;
  #L1b9f5e.  if v0 != 0 then goto L1b9f64;
  #L1b9f62.  goto L1b9f9c;
  #L1b9f64.  v0:= 0I;
  #L1b9f66.  v1:= length @variable v3;
  #L1b9f68.  if v0 >= v1 then goto L1b9f92;
  #L1b9f6c.  if v4 >= 0 then goto L1b9f80;
  #L1b9f70.  v1:= v3[v0] @kind byte;
  #L1b9f74.  v2:= -v4 @kind int;
  #L1b9f76.  v1:= v1 ^< v2 @kind int;
  #L1b9f78.  v1:= (`byte`) v1 @kind i2b;
  #L1b9f7a.  v3[v0]:= v1 @kind byte;
  #L1b9f7e.  goto L1b9f8c;
  #L1b9f80.  v1:= v3[v0] @kind byte;
  #L1b9f84.  v1:= v1 ^> v4 @kind int;
  #L1b9f86.  v1:= (`byte`) v1 @kind i2b;
  #L1b9f88.  v3[v0]:= v1 @kind byte;
  #L1b9f8c.  v0:= v0 + 1;
  #L1b9f90.  goto L1b9f66;
  #L1b9f92.  call temp:= `a`(v3) @signature `Lcom/huawei/agconnect/credential/obs/aq;.a:([B)Ljava/lang/String;` @kind static;
  #L1b9f98.  v3:= temp @kind object;
  #L1b9f9a.  return v3 @kind object;
  #L1b9f9c.  v3:= 0I;
  #L1b9f9e.  return v3 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b9fb0.  call temp:= `a`(v5) @signature `Lcom/huawei/agconnect/credential/obs/aq;.a:(Ljava/lang/String;)[B` @kind static;
  #L1b9fb6.  v5:= temp @kind object;
  #L1b9fb8.  call temp:= `a`(v6) @signature `Lcom/huawei/agconnect/credential/obs/aq;.a:(Ljava/lang/String;)[B` @kind static;
  #L1b9fbe.  v6:= temp @kind object;
  #L1b9fc0.  if v5 == 0 then goto L1b9ffe;
  #L1b9fc4.  if v6 == 0 then goto L1b9ffe;
  #L1b9fc8.  v0:= length @variable v5;
  #L1b9fca.  v1:= length @variable v6;
  #L1b9fcc.  if v0 == v1 then goto L1b9fd2;
  #L1b9fd0.  goto L1b9ffe;
  #L1b9fd2.  v0:= length @variable v5;
  #L1b9fd4.  v1:= new `byte`[v0];
  #L1b9fd8.  v2:= 0I;
  #L1b9fda.  if v2 >= v0 then goto L1b9ff4;
  #L1b9fde.  v3:= v5[v2] @kind byte;
  #L1b9fe2.  v4:= v6[v2] @kind byte;
  #L1b9fe6.  v3:= v3 ^~ v4 @kind int;
  #L1b9fe8.  v3:= (`byte`) v3 @kind i2b;
  #L1b9fea.  v1[v2]:= v3 @kind byte;
  #L1b9fee.  v2:= v2 + 1;
  #L1b9ff2.  goto L1b9fda;
  #L1b9ff4.  call temp:= `a`(v1) @signature `Lcom/huawei/agconnect/credential/obs/aq;.a:([B)Ljava/lang/String;` @kind static;
  #L1b9ffa.  v5:= temp @kind object;
  #L1b9ffc.  return v5 @kind object;
  #L1b9ffe.  v5:= 0I;
  #L1ba000.  return v5 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1ba014.  v0:= -4I;
  #L1ba016.  call temp:= `a`(v1, v0) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L1ba01c.  v1:= temp @kind object;
  #L1ba01e.  call temp:= `a`(v1, v2) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1ba024.  v1:= temp @kind object;
  #L1ba026.  v2:= 6I;
  #L1ba028.  call temp:= `a`(v1, v2) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L1ba02e.  v1:= temp @kind object;
  #L1ba030.  call temp:= `a`(v1, v3) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1ba036.  v1:= temp @kind object;
  #L1ba038.  return v1 @kind object;
}
procedure `javax.crypto.SecretKey` `a`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/SecretKey;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1ba0b0.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ba0b6.  v0:= temp;
  #L1ba0b8.  v1:= 32I;
  #L1ba0bc.  if v0 != v1 then goto L1ba12e;
  #L1ba0c0.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ba0c6.  v0:= temp;
  #L1ba0c8.  if v0 != v1 then goto L1ba12e;
  #L1ba0cc.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ba0d2.  v0:= temp;
  #L1ba0d4.  if v0 != v1 then goto L1ba12e;
  #L1ba0d8.  call temp:= `a`(v2, v3, v4) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1ba0de.  v2:= temp @kind object;
  #L1ba0e0.  v3:= "PBKDF2WithHmacSHA1" @kind object;
  #L1ba0e4.  call temp:= `getInstance`(v3) @signature `Ljavax/crypto/SecretKeyFactory;.getInstance:(Ljava/lang/String;)Ljavax/crypto/SecretKeyFactory;` @kind static;
  #L1ba0ea.  v3:= temp @kind object;
  #L1ba0ec.  v4:= new `javax.crypto.spec.PBEKeySpec`;
  #L1ba0f0.  call temp:= `toCharArray`(v2) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L1ba0f6.  v2:= temp @kind object;
  #L1ba0f8.  call temp:= `a`(v5) @signature `Lcom/huawei/agconnect/credential/obs/aq;.a:(Ljava/lang/String;)[B` @kind static;
  #L1ba0fe.  v5:= temp @kind object;
  #L1ba100.  v0:= 5000I;
  #L1ba104.  v1:= 128I;
  #L1ba108.  call `<init>`(v4, v2, v5, v0, v1) @signature `Ljavax/crypto/spec/PBEKeySpec;.<init>:([C[BII)V` @kind direct;
  #L1ba10e.  call temp:= `generateSecret`(v3, v4) @signature `Ljavax/crypto/SecretKeyFactory;.generateSecret:(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;` @kind virtual;
  #L1ba114.  v2:= temp @kind object;
  #L1ba116.  v3:= new `javax.crypto.spec.SecretKeySpec`;
  #L1ba11a.  call temp:= `getEncoded`(v2) @signature `Ljavax/crypto/SecretKey;.getEncoded:()[B` @kind interface;
  #L1ba120.  v2:= temp @kind object;
  #L1ba122.  v4:= "AES" @kind object;
  #L1ba126.  call `<init>`(v3, v2, v4) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L1ba12c.  return v3 @kind object;
  #L1ba12e.  v2:= new `java.lang.IllegalArgumentException`;
  #L1ba132.  v3:= "invalid data for generating the key." @kind object;
  #L1ba136.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ba13c.  throw v2;
}
procedure `boolean` `a`(`com.huawei.agconnect.credential.obs.f` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1b9e48.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1b9e4e.  v0:= temp;
  #L1b9e50.  if v0 != 0 then goto L1b9e6a;
  #L1b9e54.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b9e5a.  v2:= temp;
  #L1b9e5c.  v0:= 32I;
  #L1b9e60.  if v2 == v0 then goto L1b9e66;
  #L1b9e64.  goto L1b9e6a;
  #L1b9e66.  v2:= 0I;
  #L1b9e68.  goto L1b9e6c;
  #L1b9e6a.  v2:= 1I;
  #L1b9e6c.  return v2;
}
procedure `java.lang.String` `c`(`com.huawei.agconnect.credential.obs.f` v2 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/f;.c:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1ba04c.  call temp:= `a`() @signature `Lcom/huawei/agconnect/credential/obs/g;.a:()Lcom/huawei/agconnect/credential/obs/g;` @kind static;
  #L1ba052.  v0:= temp @kind object;
  #L1ba054.  call `d`(v0, v2) @signature `Lcom/huawei/agconnect/credential/obs/g;.d:(Lcom/huawei/agconnect/credential/obs/f;)V` @kind virtual;
  #L1ba05a.  v0:= v2.`com.huawei.agconnect.credential.obs.f.randmonKey` @type ^`java.lang.String` @kind object;
  #L1ba05e.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1ba064.  v0:= temp;
  #L1ba066.  v1:= 16I;
  #L1ba06a.  if v0 != 0 then goto L1ba07e;
  #L1ba06e.  v0:= v2.`com.huawei.agconnect.credential.obs.f.randmonKey` @type ^`java.lang.String` @kind object;
  #L1ba072.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ba078.  v0:= temp;
  #L1ba07a.  if v0 == v1 then goto L1ba098;
  #L1ba07e.  call temp:= `a`(v2, v1) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(I)Ljava/lang/String;` @kind direct;
  #L1ba084.  v0:= temp @kind object;
  #L1ba086.  v2.`com.huawei.agconnect.credential.obs.f.randmonKey` @type ^`java.lang.String` := v0 @kind object;
  #L1ba08a.  call temp:= `a`() @signature `Lcom/huawei/agconnect/credential/obs/g;.a:()Lcom/huawei/agconnect/credential/obs/g;` @kind static;
  #L1ba090.  v0:= temp @kind object;
  #L1ba092.  call `a`(v0, v2) @signature `Lcom/huawei/agconnect/credential/obs/g;.a:(Lcom/huawei/agconnect/credential/obs/f;)V` @kind virtual;
  #L1ba098.  v0:= v2.`com.huawei.agconnect.credential.obs.f.randmonKey` @type ^`java.lang.String` @kind object;
  #L1ba09c.  return v0 @kind object;
}
procedure `void` `d`(`com.huawei.agconnect.credential.obs.f` v4 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/f;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ba1cc.  call temp:= `a`() @signature `Lcom/huawei/agconnect/credential/obs/g;.a:()Lcom/huawei/agconnect/credential/obs/g;` @kind static;
  #L1ba1d2.  v0:= temp @kind object;
  #L1ba1d4.  call `f`(v0, v4) @signature `Lcom/huawei/agconnect/credential/obs/g;.f:(Lcom/huawei/agconnect/credential/obs/f;)V` @kind virtual;
  #L1ba1da.  call temp:= `a`() @signature `Lcom/huawei/agconnect/credential/obs/g;.a:()Lcom/huawei/agconnect/credential/obs/g;` @kind static;
  #L1ba1e0.  v0:= temp @kind object;
  #L1ba1e2.  call `e`(v0, v4) @signature `Lcom/huawei/agconnect/credential/obs/g;.e:(Lcom/huawei/agconnect/credential/obs/f;)V` @kind virtual;
  #L1ba1e8.  v0:= v4.`com.huawei.agconnect.credential.obs.f.jerry` @type ^`java.lang.String` @kind object;
  #L1ba1ec.  call temp:= `a`(v4, v0) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;)Z` @kind direct;
  #L1ba1f2.  v0:= temp;
  #L1ba1f4.  if v0 != 0 then goto L1ba208;
  #L1ba1f8.  v0:= v4.`com.huawei.agconnect.credential.obs.f.fish` @type ^`java.lang.String` @kind object;
  #L1ba1fc.  call temp:= `a`(v4, v0) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;)Z` @kind direct;
  #L1ba202.  v0:= temp;
  #L1ba204.  if v0 == 0 then goto L1ba240;
  #L1ba208.  v0:= 32I;
  #L1ba20c.  call temp:= `a`(v4, v0) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(I)Ljava/lang/String;` @kind direct;
  #L1ba212.  v1:= temp @kind object;
  #L1ba214.  v4.`com.huawei.agconnect.credential.obs.f.jerry` @type ^`java.lang.String` := v1 @kind object;
  #L1ba218.  call temp:= `a`(v4, v0) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(I)Ljava/lang/String;` @kind direct;
  #L1ba21e.  v0:= temp @kind object;
  #L1ba220.  v4.`com.huawei.agconnect.credential.obs.f.fish` @type ^`java.lang.String` := v0 @kind object;
  #L1ba224.  call temp:= `a`() @signature `Lcom/huawei/agconnect/credential/obs/g;.a:()Lcom/huawei/agconnect/credential/obs/g;` @kind static;
  #L1ba22a.  v0:= temp @kind object;
  #L1ba22c.  call `b`(v0, v4) @signature `Lcom/huawei/agconnect/credential/obs/g;.b:(Lcom/huawei/agconnect/credential/obs/f;)V` @kind virtual;
  #L1ba232.  call temp:= `a`() @signature `Lcom/huawei/agconnect/credential/obs/g;.a:()Lcom/huawei/agconnect/credential/obs/g;` @kind static;
  #L1ba238.  v0:= temp @kind object;
  #L1ba23a.  call `c`(v0, v4) @signature `Lcom/huawei/agconnect/credential/obs/g;.c:(Lcom/huawei/agconnect/credential/obs/f;)V` @kind virtual;
  #L1ba240.  call temp:= `d`() @signature `Lcom/huawei/agconnect/credential/obs/n;.d:()Ljava/lang/String;` @kind static;
  #L1ba246.  v0:= temp @kind object;
  #L1ba248.  v1:= v4.`com.huawei.agconnect.credential.obs.f.jerry` @type ^`java.lang.String` @kind object;
  #L1ba24c.  v2:= "767d9b01105c2acd25fb7955a5394f78" @kind object;
  #L1ba250.  v3:= v4.`com.huawei.agconnect.credential.obs.f.fish` @type ^`java.lang.String` @kind object;
  #L1ba254.  call temp:= `a`(v0, v1, v2, v3) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/SecretKey;` @kind static;
  #L1ba25a.  v0:= temp @kind object;
  #L1ba25c.  v4.`com.huawei.agconnect.credential.obs.f.c` @type ^`javax.crypto.SecretKey` := v0 @kind object;
  #L1ba260.  goto L1ba276;
  #L1ba262.  v0:= "KeyManager" @kind object;
  #L1ba266.  v1:= "Exception when reading the 'T&J&C&F' for 'KeyManager'." @kind object;
  #L1ba26a.  call `e`(v0, v1) @signature `Lcom/huawei/agconnect/common/api/Logger;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1ba270.  v0:= 0I;
  #L1ba272.  v4.`com.huawei.agconnect.credential.obs.f.c` @type ^`javax.crypto.SecretKey` := v0 @kind object;
  #L1ba276.  return @kind void;
  catch `java.security.NoSuchAlgorithmException` @[L1ba240..L1ba260] goto L1ba262;
  catch `java.security.spec.InvalidKeySpecException` @[L1ba240..L1ba260] goto L1ba262;
}
procedure `java.lang.String` `a`(`com.huawei.agconnect.credential.obs.f` v3 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b9e80.  @monitorenter v3
  #L1b9e82.  v0:= v3.`com.huawei.agconnect.credential.obs.f.b` @type ^`java.lang.String` @kind object;
  #L1b9e86.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1b9e8c.  v0:= temp;
  #L1b9e8e.  if v0 == 0 then goto L1b9efe;
  #L1b9e92.  call temp:= `c`() @signature `Lcom/huawei/agconnect/credential/obs/n;.c:()Ljava/lang/String;` @kind static;
  #L1b9e98.  v0:= temp @kind object;
  #L1b9e9a.  v1:= 6I;
  #L1b9e9c.  call temp:= `a`(v0, v1) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L1b9ea2.  v0:= temp @kind object;
  #L1b9ea4.  call temp:= `a`() @signature `Lcom/huawei/agconnect/credential/obs/e;.a:()Ljava/lang/String;` @kind static;
  #L1b9eaa.  v1:= temp @kind object;
  #L1b9eac.  call temp:= `a`(v0, v1) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1b9eb2.  v0:= temp @kind object;
  #L1b9eb4.  v1:= "AE6D8285" @kind object;
  #L1b9eb8.  v2:= -4I;
  #L1b9eba.  call temp:= `a`(v1, v2) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L1b9ec0.  v1:= temp @kind object;
  #L1b9ec2.  v2:= "4D5480E9" @kind object;
  #L1b9ec6.  call temp:= `a`(v1, v2) @signature `Lcom/huawei/agconnect/credential/obs/f;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1b9ecc.  v1:= temp @kind object;
  #L1b9ece.  v2:= new `java.lang.StringBuilder`;
  #L1b9ed2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b9ed8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b9ede.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b9ee4.  call temp:= `c`(v3) @signature `Lcom/huawei/agconnect/credential/obs/f;.c:()Ljava/lang/String;` @kind direct;
  #L1b9eea.  v0:= temp @kind object;
  #L1b9eec.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b9ef2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b9ef8.  v0:= temp @kind object;
  #L1b9efa.  v3.`com.huawei.agconnect.credential.obs.f.b` @type ^`java.lang.String` := v0 @kind object;
  #L1b9efe.  v0:= v3.`com.huawei.agconnect.credential.obs.f.b` @type ^`java.lang.String` @kind object;
  #L1b9f02.  @monitorexit v3
  #L1b9f04.  return v0 @kind object;
  #L1b9f06.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b9f08.  @monitorexit v3
  #L1b9f0a.  throw v0;
  catch `java.lang.Throwable` @[L1b9e82..L1b9f02] goto L1b9f06;
}
procedure `javax.crypto.SecretKey` `b`(`com.huawei.agconnect.credential.obs.f` v1 @kind this) @signature `Lcom/huawei/agconnect/credential/obs/f;.b:()Ljavax/crypto/SecretKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ba150.  @monitorenter v1
  #L1ba152.  v0:= v1.`com.huawei.agconnect.credential.obs.f.c` @type ^`javax.crypto.SecretKey` @kind object;
  #L1ba156.  if v0 != 0 then goto L1ba160;
  #L1ba15a.  call `d`(v1) @signature `Lcom/huawei/agconnect/credential/obs/f;.d:()V` @kind direct;
  #L1ba160.  v0:= v1.`com.huawei.agconnect.credential.obs.f.c` @type ^`javax.crypto.SecretKey` @kind object;
  #L1ba164.  @monitorexit v1
  #L1ba166.  return v0 @kind object;
  #L1ba168.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ba16a.  @monitorexit v1
  #L1ba16c.  throw v0;
  catch `java.lang.Throwable` @[L1ba152..L1ba164] goto L1ba168;
}
