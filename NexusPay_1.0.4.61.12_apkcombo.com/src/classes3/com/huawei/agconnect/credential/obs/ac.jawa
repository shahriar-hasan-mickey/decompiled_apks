record `com.huawei.agconnect.credential.obs.ac` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`byte`[] v5 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/ac;.a:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b75d0.  if v5 == 0 then goto L1b762c;
  #L1b75d4.  v0:= length @variable v5;
  #L1b75d6.  if v0 != 0 then goto L1b75dc;
  #L1b75da.  goto L1b762c;
  #L1b75dc.  v0:= new `java.lang.StringBuilder`;
  #L1b75e0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b75e6.  v1:= 0I;
  #L1b75e8.  v2:= length @variable v5;
  #L1b75ea.  if v1 >= v2 then goto L1b7622;
  #L1b75ee.  v2:= v5[v1] @kind byte;
  #L1b75f2.  v2:= v2 ^& 255;
  #L1b75f6.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1b75fc.  v2:= temp @kind object;
  #L1b75fe.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b7604.  v3:= temp;
  #L1b7606.  v4:= 1I;
  #L1b7608.  if v3 != v4 then goto L1b7616;
  #L1b760c.  v3:= 48I;
  #L1b7610.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b7616.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b761c.  v1:= v1 + 1;
  #L1b7620.  goto L1b75e8;
  #L1b7622.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b7628.  v5:= temp @kind object;
  #L1b762a.  return v5 @kind object;
  #L1b762c.  v5:= "" @kind object;
  #L1b7630.  return v5 @kind object;
}
procedure `byte`[] `a`(`java.lang.String` v12 @kind object) @signature `Lcom/huawei/agconnect/credential/obs/ac;.a:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1b7488.  v0:= "0x" @kind object;
  #L1b748c.  v1:= "UTF-8" @kind object;
  #L1b7490.  call temp:= `isEmpty`(v12) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1b7496.  v2:= temp;
  #L1b7498.  v3:= 0I;
  #L1b749a.  if v2 == 0 then goto L1b74a4;
  #L1b749e.  v12:= new `byte`[v3];
  #L1b74a2.  return v12 @kind object;
  #L1b74a4.  v2:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L1b74a8.  call temp:= `toUpperCase`(v12, v2) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L1b74ae.  v12:= temp @kind object;
  #L1b74b0.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b74b6.  v2:= temp;
  #L1b74b8.  v2:= v2 / 2;
  #L1b74bc.  v4:= new `byte`[v2];
  #L1b74c0.  call temp:= `getBytes`(v12, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L1b74c6.  v12:= temp @kind object;
  #L1b74c8.  v5:= 0I;
  #L1b74ca.  if v5 >= v2 then goto L1b75ae;
  #L1b74ce.  v6:= new `java.lang.StringBuilder`;
  #L1b74d2.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b74d8.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b74de.  v7:= new `java.lang.String`;
  #L1b74e2.  v8:= 1I;
  #L1b74e4.  v9:= new `byte`[v8];
  #L1b74e8.  v10:= v5 * 2;
  #L1b74ec.  v11:= v12[v10] @kind byte;
  #L1b74f0.  v9[v3]:= v11 @kind byte;
  #L1b74f4.  call `<init>`(v7, v9, v1) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L1b74fa.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b7500.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b7506.  v6:= temp @kind object;
  #L1b7508.  call temp:= `decode`(v6) @signature `Ljava/lang/Byte;.decode:(Ljava/lang/String;)Ljava/lang/Byte;` @kind static;
  #L1b750e.  v6:= temp @kind object;
  #L1b7510.  call temp:= `byteValue`(v6) @signature `Ljava/lang/Byte;.byteValue:()B` @kind virtual;
  #L1b7516.  v6:= temp;
  #L1b7518.  v6:= v6 ^< 4;
  #L1b751c.  v6:= (`byte`) v6 @kind i2b;
  #L1b751e.  v7:= new `java.lang.StringBuilder`;
  #L1b7522.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b7528.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b752e.  v9:= new `java.lang.String`;
  #L1b7532.  v8:= new `byte`[v8];
  #L1b7536.  v10:= v10 + 1;
  #L1b753a.  v10:= v12[v10] @kind byte;
  #L1b753e.  v8[v3]:= v10 @kind byte;
  #L1b7542.  call `<init>`(v9, v8, v1) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L1b7548.  call temp:= `append`(v7, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b754e.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b7554.  v7:= temp @kind object;
  #L1b7556.  call temp:= `decode`(v7) @signature `Ljava/lang/Byte;.decode:(Ljava/lang/String;)Ljava/lang/Byte;` @kind static;
  #L1b755c.  v7:= temp @kind object;
  #L1b755e.  call temp:= `byteValue`(v7) @signature `Ljava/lang/Byte;.byteValue:()B` @kind virtual;
  #L1b7564.  v7:= temp;
  #L1b7566.  v6:= v6 ^~ v7 @kind int;
  #L1b7568.  v6:= (`byte`) v6 @kind i2b;
  #L1b756a.  v4[v5]:= v6 @kind byte;
  #L1b756e.  v5:= v5 + 1;
  #L1b7572.  goto L1b74ca;
  #L1b7574.  v12:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L1b7576.  goto L1b757a;
  #L1b7578.  v12:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L1b757a.  v0:= new `java.lang.StringBuilder`;
  #L1b757e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b7584.  v1:= "hex string 2 byte array exception : " @kind object;
  #L1b7588.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b758e.  call temp:= `getMessage`(v12) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1b7594.  v12:= temp @kind object;
  #L1b7596.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b759c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b75a2.  v12:= temp @kind object;
  #L1b75a4.  v0:= "HexUtil" @kind object;
  #L1b75a8.  call `c`(v0, v12) @signature `Lcom/huawei/agconnect/credential/obs/ad;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1b75ae.  return v4 @kind object;
  catch `java.io.UnsupportedEncodingException` @[L1b74c0..L1b756e] goto L1b7578;
  catch `java.lang.NumberFormatException` @[L1b74c0..L1b756e] goto L1b7574;
}
