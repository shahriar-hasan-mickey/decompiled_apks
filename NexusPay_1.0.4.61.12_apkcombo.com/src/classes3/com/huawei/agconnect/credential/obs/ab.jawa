record `com.huawei.agconnect.credential.obs.ab` @kind class @AccessFlag PUBLIC {
}
global `boolean` `@@com.huawei.agconnect.credential.obs.ab.a` @AccessFlag PRIVATE_STATIC;
global `boolean` `@@com.huawei.agconnect.credential.obs.ab.b` @AccessFlag PRIVATE_STATIC;
procedure `java.security.SecureRandom` `a`() @signature `Lcom/huawei/agconnect/credential/obs/ab;.a:()Ljava/security/SecureRandom;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1b735c.  v0:= "EncryptUtil" @kind object;
  #L1b7360.  v1:= "generateSecureRandomNew " @kind object;
  #L1b7364.  call `a`(v0, v1) @signature `Lcom/huawei/agconnect/credential/obs/ad;.a:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1b736a.  v1:= 0I;
  #L1b736c.  v2:= 0I;
  #L1b736e.  v3:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1b7372.  v4:= 26I;
  #L1b7376.  if v3 < v4 then goto L1b7384;
  #L1b737a.  call temp:= `getInstanceStrong`() @signature `Ljava/security/SecureRandom;.getInstanceStrong:()Ljava/security/SecureRandom;` @kind static;
  #L1b7380.  v2:= temp @kind object;
  #L1b7382.  goto L1b7390;
  #L1b7384.  v3:= "SHA1PRNG" @kind object;
  #L1b7388.  call temp:= `getInstance`(v3) @signature `Ljava/security/SecureRandom;.getInstance:(Ljava/lang/String;)Ljava/security/SecureRandom;` @kind static;
  #L1b738e.  v2:= temp @kind object;
  #L1b7390.  v3:= 1I;
  #L1b7392.  v4:= new `org.bouncycastle.crypto.engines.AESEngine`;
  #L1b7396.  call `<init>`(v4) @signature `Lorg/bouncycastle/crypto/engines/AESEngine;.<init>:()V` @kind direct;
  #L1b739c.  v5:= 256I;
  #L1b73a0.  v6:= 384I;
  #L1b73a4.  v7:= 32I;
  #L1b73a8.  v7:= new `byte`[v7];
  #L1b73ac.  call `nextBytes`(v2, v7) @signature `Ljava/security/SecureRandom;.nextBytes:([B)V` @kind virtual;
  #L1b73b2.  v8:= new `org.bouncycastle.crypto.prng.SP800SecureRandomBuilder`;
  #L1b73b6.  call `<init>`(v8, v2, v3) @signature `Lorg/bouncycastle/crypto/prng/SP800SecureRandomBuilder;.<init>:(Ljava/security/SecureRandom;Z)V` @kind direct;
  #L1b73bc.  call temp:= `setEntropyBitsRequired`(v8, v6) @signature `Lorg/bouncycastle/crypto/prng/SP800SecureRandomBuilder;.setEntropyBitsRequired:(I)Lorg/bouncycastle/crypto/prng/SP800SecureRandomBuilder;` @kind virtual;
  #L1b73c2.  v3:= temp @kind object;
  #L1b73c4.  call temp:= `buildCTR`(v3, v4, v5, v7, v1) @signature `Lorg/bouncycastle/crypto/prng/SP800SecureRandomBuilder;.buildCTR:(Lorg/bouncycastle/crypto/BlockCipher;I[BZ)Lorg/bouncycastle/crypto/prng/SP800SecureRandom;` @kind virtual;
  #L1b73ca.  v0:= temp @kind object;
  #L1b73cc.  return v0 @kind object;
  #L1b73ce.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b73d0.  v4:= `@@com.huawei.agconnect.credential.obs.ab.b` @type ^`boolean` @kind boolean;
  #L1b73d4.  if v4 == 0 then goto L1b7422;
  #L1b73d8.  v4:= new `java.lang.StringBuilder`;
  #L1b73dc.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b73e2.  v5:= "exception : " @kind object;
  #L1b73e6.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b73ec.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1b73f2.  v3:= temp @kind object;
  #L1b73f4.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b73fa.  v3:= " , you should implementation bcprov-jdk15on library" @kind object;
  #L1b73fe.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b7404.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b740a.  v3:= temp @kind object;
  #L1b740c.  call `c`(v0, v3) @signature `Lcom/huawei/agconnect/credential/obs/ad;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1b7412.  `@@com.huawei.agconnect.credential.obs.ab.b` @type ^`boolean` := v1 @kind boolean;
  #L1b7416.  goto L1b7422;
  #L1b7418.  v1:= "NoSuchAlgorithmException" @kind object;
  #L1b741c.  call `c`(v0, v1) @signature `Lcom/huawei/agconnect/credential/obs/ad;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1b7422.  return v2 @kind object;
  catch `java.security.NoSuchAlgorithmException` @[L1b736e..L1b73cc] goto L1b7418;
  catch `java.lang.Throwable` @[L1b736e..L1b73cc] goto L1b73ce;
}
procedure `void` `a`(`boolean` v2 ) @signature `Lcom/huawei/agconnect/credential/obs/ab;.a:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1b7444.  v0:= new `java.lang.StringBuilder`;
  #L1b7448.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b744e.  v1:= "setBouncycastleFlag: " @kind object;
  #L1b7452.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b7458.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b745e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b7464.  v0:= temp @kind object;
  #L1b7466.  v1:= "EncryptUtil" @kind object;
  #L1b746a.  call `b`(v1, v0) @signature `Lcom/huawei/agconnect/credential/obs/ad;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1b7470.  `@@com.huawei.agconnect.credential.obs.ab.a` @type ^`boolean` := v2 @kind boolean;
  #L1b7474.  return @kind void;
}
procedure `byte`[] `a`(`int` v2 ) @signature `Lcom/huawei/agconnect/credential/obs/ab;.a:(I)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1b72b4.  v0:= `@@com.huawei.agconnect.credential.obs.ab.a` @type ^`boolean` @kind boolean;
  #L1b72b8.  if v0 != 0 then goto L1b7300;
  #L1b72bc.  v2:= new `byte`[v2];
  #L1b72c0.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1b72c4.  v1:= 26I;
  #L1b72c8.  if v0 < v1 then goto L1b72d6;
  #L1b72cc.  call temp:= `getInstanceStrong`() @signature `Ljava/security/SecureRandom;.getInstanceStrong:()Ljava/security/SecureRandom;` @kind static;
  #L1b72d2.  v0:= temp @kind object;
  #L1b72d4.  goto L1b72e2;
  #L1b72d6.  v0:= "SHA1PRNG" @kind object;
  #L1b72da.  call temp:= `getInstance`(v0) @signature `Ljava/security/SecureRandom;.getInstance:(Ljava/lang/String;)Ljava/security/SecureRandom;` @kind static;
  #L1b72e0.  v0:= temp @kind object;
  #L1b72e2.  call `nextBytes`(v0, v2) @signature `Ljava/security/SecureRandom;.nextBytes:([B)V` @kind virtual;
  #L1b72e8.  return v2 @kind object;
  #L1b72ea.  v2:= "EncryptUtil" @kind object;
  #L1b72ee.  v0:= "getSecureRandomBytes: NoSuchAlgorithmException" @kind object;
  #L1b72f2.  call temp:= `e`(v2, v0) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1b72f8.  v2:= 0I;
  #L1b72fa.  v2:= new `byte`[v2];
  #L1b72fe.  return v2 @kind object;
  #L1b7300.  call temp:= `b`(v2) @signature `Lcom/huawei/agconnect/credential/obs/ab;.b:(I)[B` @kind static;
  #L1b7306.  v2:= temp @kind object;
  #L1b7308.  return v2 @kind object;
  catch `java.security.NoSuchAlgorithmException` @[L1b72c0..L1b72e8] goto L1b72ea;
}
procedure `byte`[] `b`(`int` v1 ) @signature `Lcom/huawei/agconnect/credential/obs/ab;.b:(I)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1b732c.  call temp:= `a`() @signature `Lcom/huawei/agconnect/credential/obs/ab;.a:()Ljava/security/SecureRandom;` @kind static;
  #L1b7332.  v0:= temp @kind object;
  #L1b7334.  if v0 != 0 then goto L1b7340;
  #L1b7338.  v1:= 0I;
  #L1b733a.  v1:= new `byte`[v1];
  #L1b733e.  return v1 @kind object;
  #L1b7340.  v1:= new `byte`[v1];
  #L1b7344.  call `nextBytes`(v0, v1) @signature `Ljava/security/SecureRandom;.nextBytes:([B)V` @kind virtual;
  #L1b734a.  return v1 @kind object;
}
