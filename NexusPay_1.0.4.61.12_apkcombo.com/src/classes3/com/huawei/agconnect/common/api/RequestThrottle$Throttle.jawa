record `com.huawei.agconnect.common.api.RequestThrottle$Throttle` @kind class @AccessFlag PUBLIC {
  `java.util.ArrayDeque` `com.huawei.agconnect.common.api.RequestThrottle$Throttle.countDeque` @AccessFlag PRIVATE_FINAL;
  `java.lang.Integer` `com.huawei.agconnect.common.api.RequestThrottle$Throttle.failCount` @AccessFlag PRIVATE;
  `java.lang.Long` `com.huawei.agconnect.common.api.RequestThrottle$Throttle.failTime` @AccessFlag PRIVATE;
  `boolean` `com.huawei.agconnect.common.api.RequestThrottle$Throttle.isDeveloperMode` @AccessFlag PRIVATE;
  `java.lang.String` `com.huawei.agconnect.common.api.RequestThrottle$Throttle.name` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.huawei.agconnect.common.api.RequestThrottle$Throttle.MAX_REQUEST_COUNT_IN_INTERVAL` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.huawei.agconnect.common.api.RequestThrottle$Throttle.SP_FILE_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.huawei.agconnect.common.api.RequestThrottle$Throttle.THROTTLE_INTERVAL_TIME` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.huawei.agconnect.common.api.RequestThrottle$Throttle` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1b33e0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b33e6.  v0:= new `java.util.ArrayDeque`;
  #L1b33ea.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L1b33f0.  v1.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.countDeque` @type ^`java.util.ArrayDeque` := v0 @kind object;
  #L1b33f4.  v1.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.name` @type ^`java.lang.String` := v2 @kind object;
  #L1b33f8.  call `loadCache`(v1) @signature `Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;.loadCache:()V` @kind direct;
  #L1b33fe.  return @kind void;
}
procedure `void` `loadCache`(`com.huawei.agconnect.common.api.RequestThrottle$Throttle` v10 @kind this) @signature `Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;.loadCache:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1b34dc.  call temp:= `getInstance`() @signature `Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;.getInstance:()Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;` @kind static;
  #L1b34e2.  v0:= temp @kind object;
  #L1b34e4.  v1:= new `java.lang.StringBuilder`;
  #L1b34e8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b34ee.  v2:= v10.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.name` @type ^`java.lang.String` @kind object;
  #L1b34f2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b34f8.  v2:= "-countDeque" @kind object;
  #L1b34fc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3502.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b3508.  v2:= temp @kind object;
  #L1b350a.  v3:= constclass @type ^`java.lang.String` @kind object;
  #L1b350e.  v5:= constclass @type ^`com.huawei.agconnect.datastore.annotation.DefaultCrypto` @kind object;
  #L1b3512.  v1:= "com.huawei.agc.throttle" @kind object;
  #L1b3516.  v4:= "" @kind object;
  #L1b351a.  call temp:= `get`(v0, v1, v2, v3, v4, v5) @signature `Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;.get:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1b3520.  v0:= temp @kind object;
  #L1b3522.  v0:= (`java.lang.String`) v0 @kind object;
  #L1b3526.  v1:= "," @kind object;
  #L1b352a.  call temp:= `split`(v0, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L1b3530.  v0:= temp @kind object;
  #L1b3532.  v1:= length @variable v0;
  #L1b3534.  v2:= 0I;
  #L1b3536.  v3:= 0I;
  #L1b3538.  if v3 >= v1 then goto L1b3576;
  #L1b353c.  v4:= v0[v3] @kind object;
  #L1b3540.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b3546.  v5:= temp;
  #L1b3548.  if v5 <= 0 then goto L1b3570;
  #L1b354c.  v5:= v10.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.countDeque` @type ^`java.util.ArrayDeque` @kind object;
  #L1b3550.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(Ljava/lang/String;)Ljava/lang/Long;` @kind static;
  #L1b3556.  v4:= temp @kind object;
  #L1b3558.  call `addLast`(v5, v4) @signature `Ljava/util/ArrayDeque;.addLast:(Ljava/lang/Object;)V` @kind virtual;
  #L1b355e.  goto L1b3570;
  #L1b3560.  v4:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L1b3562.  v5:= "AGC_THROTTLE" @kind object;
  #L1b3566.  v6:= "count deque" @kind object;
  #L1b356a.  call `e`(v5, v6, v4) @signature `Lcom/huawei/agconnect/common/api/Logger;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L1b3570.  v3:= v3 + 1;
  #L1b3574.  goto L1b3538;
  #L1b3576.  call temp:= `getInstance`() @signature `Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;.getInstance:()Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;` @kind static;
  #L1b357c.  v4:= temp @kind object;
  #L1b357e.  v0:= new `java.lang.StringBuilder`;
  #L1b3582.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b3588.  v1:= v10.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.name` @type ^`java.lang.String` @kind object;
  #L1b358c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3592.  v1:= "-failCount" @kind object;
  #L1b3596.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b359c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b35a2.  v6:= temp @kind object;
  #L1b35a4.  v7:= constclass @type ^`java.lang.Integer` @kind object;
  #L1b35a8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1b35ae.  v8:= temp @kind object;
  #L1b35b0.  v9:= constclass @type ^`com.huawei.agconnect.datastore.annotation.DefaultCrypto` @kind object;
  #L1b35b4.  v5:= "com.huawei.agc.throttle" @kind object;
  #L1b35b8.  call temp:= `get`(v4, v5, v6, v7, v8, v9) @signature `Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;.get:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1b35be.  v0:= temp @kind object;
  #L1b35c0.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L1b35c4.  v10.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.failCount` @type ^`java.lang.Integer` := v0 @kind object;
  #L1b35c8.  call temp:= `getInstance`() @signature `Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;.getInstance:()Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;` @kind static;
  #L1b35ce.  v1:= temp @kind object;
  #L1b35d0.  v0:= new `java.lang.StringBuilder`;
  #L1b35d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b35da.  v2:= v10.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.name` @type ^`java.lang.String` @kind object;
  #L1b35de.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b35e4.  v2:= "-failTime" @kind object;
  #L1b35e8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b35ee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b35f4.  v3:= temp @kind object;
  #L1b35f6.  v4:= constclass @type ^`java.lang.Long` @kind object;
  #L1b35fa.  v5:= 0L;
  #L1b35fe.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1b3604.  v5:= temp @kind object;
  #L1b3606.  v6:= constclass @type ^`com.huawei.agconnect.datastore.annotation.DefaultCrypto` @kind object;
  #L1b360a.  v2:= "com.huawei.agc.throttle" @kind object;
  #L1b360e.  call temp:= `get`(v1, v2, v3, v4, v5, v6) @signature `Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;.get:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1b3614.  v0:= temp @kind object;
  #L1b3616.  v0:= (`java.lang.Long`) v0 @kind object;
  #L1b361a.  v10.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.failTime` @type ^`java.lang.Long` := v0 @kind object;
  #L1b361e.  return @kind void;
  catch `java.lang.NumberFormatException` @[L1b3540..L1b355e] goto L1b3560;
}
procedure `void` `saveCache`(`com.huawei.agconnect.common.api.RequestThrottle$Throttle` v15 @kind this) @signature `Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;.saveCache:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L1b3640.  v0:= new `java.lang.StringBuilder`;
  #L1b3644.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b364a.  v1:= new `java.util.ArrayList`;
  #L1b364e.  v2:= v15.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.countDeque` @type ^`java.util.ArrayDeque` @kind object;
  #L1b3652.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L1b3658.  v2:= 0I;
  #L1b365a.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1b3660.  v3:= temp;
  #L1b3662.  if v2 >= v3 then goto L1b3694;
  #L1b3666.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1b366c.  v3:= temp @kind object;
  #L1b366e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3674.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1b367a.  v3:= temp;
  #L1b367c.  v3:= v3 + -1;
  #L1b3680.  if v2 == v3 then goto L1b368e;
  #L1b3684.  v3:= "," @kind object;
  #L1b3688.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b368e.  v2:= v2 + 1;
  #L1b3692.  goto L1b365a;
  #L1b3694.  call temp:= `getInstance`() @signature `Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;.getInstance:()Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;` @kind static;
  #L1b369a.  v3:= temp @kind object;
  #L1b369c.  v1:= new `java.lang.StringBuilder`;
  #L1b36a0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b36a6.  v2:= v15.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.name` @type ^`java.lang.String` @kind object;
  #L1b36aa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b36b0.  v2:= "-countDeque" @kind object;
  #L1b36b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b36ba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b36c0.  v5:= temp @kind object;
  #L1b36c2.  v6:= constclass @type ^`java.lang.String` @kind object;
  #L1b36c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b36cc.  v7:= temp @kind object;
  #L1b36ce.  v8:= constclass @type ^`com.huawei.agconnect.datastore.annotation.DefaultCrypto` @kind object;
  #L1b36d2.  v4:= "com.huawei.agc.throttle" @kind object;
  #L1b36d6.  call `put`(v3, v4, v5, v6, v7, v8) @signature `Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;.put:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Class;)V` @kind virtual;
  #L1b36dc.  call temp:= `getInstance`() @signature `Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;.getInstance:()Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;` @kind static;
  #L1b36e2.  v9:= temp @kind object;
  #L1b36e4.  v0:= new `java.lang.StringBuilder`;
  #L1b36e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b36ee.  v1:= v15.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.name` @type ^`java.lang.String` @kind object;
  #L1b36f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b36f8.  v1:= "-failCount" @kind object;
  #L1b36fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3702.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b3708.  v11:= temp @kind object;
  #L1b370a.  v12:= constclass @type ^`java.lang.Integer` @kind object;
  #L1b370e.  v13:= v15.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.failCount` @type ^`java.lang.Integer` @kind object;
  #L1b3712.  v14:= constclass @type ^`com.huawei.agconnect.datastore.annotation.DefaultCrypto` @kind object;
  #L1b3716.  v10:= "com.huawei.agc.throttle" @kind object;
  #L1b371a.  call `put`(v9, v10, v11, v12, v13, v14) @signature `Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;.put:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Class;)V` @kind virtual;
  #L1b3720.  call temp:= `getInstance`() @signature `Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;.getInstance:()Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;` @kind static;
  #L1b3726.  v0:= temp @kind object;
  #L1b3728.  v1:= new `java.lang.StringBuilder`;
  #L1b372c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b3732.  v2:= v15.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.name` @type ^`java.lang.String` @kind object;
  #L1b3736.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b373c.  v2:= "-failTime" @kind object;
  #L1b3740.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3746.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b374c.  v2:= temp @kind object;
  #L1b374e.  v3:= constclass @type ^`java.lang.Long` @kind object;
  #L1b3752.  v4:= v15.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.failTime` @type ^`java.lang.Long` @kind object;
  #L1b3756.  v5:= constclass @type ^`com.huawei.agconnect.datastore.annotation.DefaultCrypto` @kind object;
  #L1b375a.  v1:= "com.huawei.agc.throttle" @kind object;
  #L1b375e.  call `put`(v0, v1, v2, v3, v4, v5) @signature `Lcom/huawei/agconnect/datastore/core/SharedPrefUtil;.put:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Class;)V` @kind virtual;
  #L1b3764.  return @kind void;
}
procedure `void` `addForFail`(`com.huawei.agconnect.common.api.RequestThrottle$Throttle` v2 @kind this) @signature `Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;.addForFail:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b3410.  v0:= v2.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.failCount` @type ^`java.lang.Integer` @kind object;
  #L1b3414.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1b341a.  v0:= temp;
  #L1b341c.  v0:= v0 + 1;
  #L1b3420.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1b3426.  v0:= temp @kind object;
  #L1b3428.  v2.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.failCount` @type ^`java.lang.Integer` := v0 @kind object;
  #L1b342c.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1b3432.  v0:= temp @kind wide;
  #L1b3434.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1b343a.  v0:= temp @kind object;
  #L1b343c.  v2.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.failTime` @type ^`java.lang.Long` := v0 @kind object;
  #L1b3440.  call `saveCache`(v2) @signature `Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;.saveCache:()V` @kind direct;
  #L1b3446.  return @kind void;
}
procedure `void` `addForStart`(`com.huawei.agconnect.common.api.RequestThrottle$Throttle` v3 @kind this) @signature `Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;.addForStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b3458.  v0:= v3.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.countDeque` @type ^`java.util.ArrayDeque` @kind object;
  #L1b345c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayDeque;.size:()I` @kind virtual;
  #L1b3462.  v0:= temp;
  #L1b3464.  v1:= 20I;
  #L1b3468.  if v0 != v1 then goto L1b3476;
  #L1b346c.  v0:= v3.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.countDeque` @type ^`java.util.ArrayDeque` @kind object;
  #L1b3470.  call temp:= `removeFirst`(v0) @signature `Ljava/util/ArrayDeque;.removeFirst:()Ljava/lang/Object;` @kind virtual;
  #L1b3476.  v0:= v3.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.countDeque` @type ^`java.util.ArrayDeque` @kind object;
  #L1b347a.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1b3480.  v1:= temp @kind wide;
  #L1b3482.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1b3488.  v1:= temp @kind object;
  #L1b348a.  call `addLast`(v0, v1) @signature `Ljava/util/ArrayDeque;.addLast:(Ljava/lang/Object;)V` @kind virtual;
  #L1b3490.  return @kind void;
}
procedure `void` `addForSuccess`(`com.huawei.agconnect.common.api.RequestThrottle$Throttle` v2 @kind this) @signature `Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;.addForSuccess:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b34a4.  v0:= 0I;
  #L1b34a6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1b34ac.  v0:= temp @kind object;
  #L1b34ae.  v2.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.failCount` @type ^`java.lang.Integer` := v0 @kind object;
  #L1b34b2.  v0:= 0L;
  #L1b34b6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1b34bc.  v0:= temp @kind object;
  #L1b34be.  v2.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.failTime` @type ^`java.lang.Long` := v0 @kind object;
  #L1b34c2.  call `saveCache`(v2) @signature `Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;.saveCache:()V` @kind direct;
  #L1b34c8.  return @kind void;
}
procedure `boolean` `checkFail`(`com.huawei.agconnect.common.api.RequestThrottle$Throttle` v2 @kind this, `java.lang.Exception` v3 @kind object) @signature `Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;.checkFail:(Ljava/lang/Exception;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b3254.  v0:= instanceof @variable v3 @type ^`com.huawei.agconnect.exception.AGCException` @kind boolean;
  #L1b3258.  if v0 == 0 then goto L1b32b4;
  #L1b325c.  v3:= (`com.huawei.agconnect.exception.AGCException`) v3 @kind object;
  #L1b3260.  call temp:= `getCode`(v3) @signature `Lcom/huawei/agconnect/exception/AGCException;.getCode:()I` @kind virtual;
  #L1b3266.  v0:= temp;
  #L1b3268.  v1:= 429I;
  #L1b326c.  if v0 == v1 then goto L1b32b0;
  #L1b3270.  call temp:= `getCode`(v3) @signature `Lcom/huawei/agconnect/exception/AGCException;.getCode:()I` @kind virtual;
  #L1b3276.  v0:= temp;
  #L1b3278.  v1:= 500I;
  #L1b327c.  if v0 == v1 then goto L1b32b0;
  #L1b3280.  call temp:= `getCode`(v3) @signature `Lcom/huawei/agconnect/exception/AGCException;.getCode:()I` @kind virtual;
  #L1b3286.  v0:= temp;
  #L1b3288.  v1:= 502I;
  #L1b328c.  if v0 == v1 then goto L1b32b0;
  #L1b3290.  call temp:= `getCode`(v3) @signature `Lcom/huawei/agconnect/exception/AGCException;.getCode:()I` @kind virtual;
  #L1b3296.  v0:= temp;
  #L1b3298.  v1:= 503I;
  #L1b329c.  if v0 == v1 then goto L1b32b0;
  #L1b32a0.  call temp:= `getCode`(v3) @signature `Lcom/huawei/agconnect/exception/AGCException;.getCode:()I` @kind virtual;
  #L1b32a6.  v3:= temp;
  #L1b32a8.  v0:= 504I;
  #L1b32ac.  if v3 != v0 then goto L1b32b4;
  #L1b32b0.  v3:= 1I;
  #L1b32b2.  return v3;
  #L1b32b4.  v3:= 0I;
  #L1b32b6.  return v3;
}
procedure `long` `getEndTime`(`com.huawei.agconnect.common.api.RequestThrottle$Throttle` v9 @kind this) @signature `Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;.getEndTime:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1b32c8.  v0:= v9.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.isDeveloperMode` @type ^`boolean` @kind boolean;
  #L1b32cc.  if v0 != 0 then goto L1b333a;
  #L1b32d0.  v0:= v9.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.countDeque` @type ^`java.util.ArrayDeque` @kind object;
  #L1b32d4.  call temp:= `size`(v0) @signature `Ljava/util/ArrayDeque;.size:()I` @kind virtual;
  #L1b32da.  v0:= temp;
  #L1b32dc.  v1:= 20I;
  #L1b32e0.  if v0 < v1 then goto L1b333a;
  #L1b32e4.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1b32ea.  v0:= temp @kind wide;
  #L1b32ec.  v2:= v9.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.countDeque` @type ^`java.util.ArrayDeque` @kind object;
  #L1b32f0.  call temp:= `getFirst`(v2) @signature `Ljava/util/ArrayDeque;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L1b32f6.  v2:= temp @kind object;
  #L1b32f8.  v2:= (`java.lang.Long`) v2 @kind object;
  #L1b32fc.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1b3302.  v2:= temp @kind wide;
  #L1b3304.  v0:= v0 - v2 @kind long;
  #L1b3306.  v2:= 3600000L;
  #L1b330c.  v4:= lcmp(v0, v2);
  #L1b3310.  if v4 >= 0 then goto L1b333a;
  #L1b3314.  v0:= v9.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.countDeque` @type ^`java.util.ArrayDeque` @kind object;
  #L1b3318.  call temp:= `getFirst`(v0) @signature `Ljava/util/ArrayDeque;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L1b331e.  v0:= temp @kind object;
  #L1b3320.  v0:= (`java.lang.Long`) v0 @kind object;
  #L1b3324.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1b332a.  v0:= temp @kind wide;
  #L1b332c.  v0:= v0 + v2 @kind long;
  #L1b332e.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1b3334.  v2:= temp @kind wide;
  #L1b3336.  v0:= v0 - v2 @kind long;
  #L1b3338.  return v0 @kind wide;
  #L1b333a.  v0:= v9.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.failCount` @type ^`java.lang.Integer` @kind object;
  #L1b333e.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1b3344.  v0:= temp;
  #L1b3346.  v1:= 0L;
  #L1b334a.  v3:= 1I;
  #L1b334c.  if v0 <= v3 then goto L1b33cc;
  #L1b3350.  v0:= v9.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.failTime` @type ^`java.lang.Long` @kind object;
  #L1b3354.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1b335a.  v4:= temp @kind wide;
  #L1b335c.  v0:= lcmp(v4, v1);
  #L1b3360.  if v0 <= 0 then goto L1b33cc;
  #L1b3364.  v4:= 2.0D;
  #L1b3368.  v0:= v9.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.failCount` @type ^`java.lang.Integer` @kind object;
  #L1b336c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1b3372.  v0:= temp;
  #L1b3374.  v0:= v0 - v3 @kind int;
  #L1b3376.  v3:= 8I;
  #L1b337a.  call temp:= `min`(v0, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1b3380.  v0:= temp;
  #L1b3382.  v6:= (`double`) v0 @kind i2d;
  #L1b3384.  call temp:= `pow`(v4, v6) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L1b338a.  v3:= temp @kind wide;
  #L1b338c.  v3:= (`long`) v3 @kind d2l;
  #L1b338e.  v5:= 60L;
  #L1b3392.  v3:= v3 * v5 @kind long;
  #L1b3396.  v5:= 1000L;
  #L1b339a.  v3:= v3 * v5 @kind long;
  #L1b339e.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1b33a4.  v5:= temp @kind wide;
  #L1b33a6.  v0:= v9.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.failTime` @type ^`java.lang.Long` @kind object;
  #L1b33aa.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1b33b0.  v7:= temp @kind wide;
  #L1b33b2.  v7:= v7 + v3 @kind long;
  #L1b33b4.  v0:= lcmp(v5, v7);
  #L1b33b8.  if v0 >= 0 then goto L1b33cc;
  #L1b33bc.  v0:= v9.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.failTime` @type ^`java.lang.Long` @kind object;
  #L1b33c0.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1b33c6.  v0:= temp @kind wide;
  #L1b33c8.  v0:= v0 + v3 @kind long;
  #L1b33ca.  goto L1b332e;
  #L1b33cc.  return v1 @kind wide;
}
procedure `void` `setDeveloperMode`(`com.huawei.agconnect.common.api.RequestThrottle$Throttle` v0 @kind this, `boolean` v1 ) @signature `Lcom/huawei/agconnect/common/api/RequestThrottle$Throttle;.setDeveloperMode:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1b3778.  v0.`com.huawei.agconnect.common.api.RequestThrottle$Throttle.isDeveloperMode` @type ^`boolean` := v1 @kind boolean;
  #L1b377c.  return @kind void;
}
