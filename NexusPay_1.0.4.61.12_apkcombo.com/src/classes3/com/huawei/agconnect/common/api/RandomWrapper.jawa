record `com.huawei.agconnect.common.api.RandomWrapper` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.huawei.agconnect.common.api.RandomWrapper` v0 @kind this) @signature `Lcom/huawei/agconnect/common/api/RandomWrapper;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1b323c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b3242.  return @kind void;
}
procedure `byte`[] `generateSecureRandom`(`int` v2 ) @signature `Lcom/huawei/agconnect/common/api/RandomWrapper;.generateSecureRandom:(I)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1b31fc.  v0:= 1I;
  #L1b31fe.  call `a`(v0) @signature `Lcom/huawei/agconnect/credential/obs/ab;.a:(Z)V` @kind static;
  #L1b3204.  call temp:= `a`(v2) @signature `Lcom/huawei/agconnect/credential/obs/ab;.a:(I)[B` @kind static;
  #L1b320a.  v0:= temp @kind object;
  #L1b320c.  v1:= length @variable v0;
  #L1b320e.  if v1 != 0 then goto L1b3228;
  #L1b3212.  v0:= new `java.security.SecureRandom`;
  #L1b3216.  call `<init>`(v0) @signature `Ljava/security/SecureRandom;.<init>:()V` @kind direct;
  #L1b321c.  v2:= new `byte`[v2];
  #L1b3220.  call `nextBytes`(v0, v2) @signature `Ljava/security/SecureRandom;.nextBytes:([B)V` @kind virtual;
  #L1b3226.  v0:= v2 @kind object;
  #L1b3228.  return v0 @kind object;
}
