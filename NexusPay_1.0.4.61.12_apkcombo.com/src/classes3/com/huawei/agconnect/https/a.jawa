record `com.huawei.agconnect.https.a` @kind class @AccessFlag ABSTRACT {
}
global `com.huawei.agconnect.https.a$d` `@@com.huawei.agconnect.https.a.a` @AccessFlag PRIVATE_STATIC;
global `com.huawei.agconnect.https.a$c` `@@com.huawei.agconnect.https.a.b` @AccessFlag PRIVATE_STATIC;
global `com.huawei.agconnect.https.a$b` `@@com.huawei.agconnect.https.a.c` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/huawei/agconnect/https/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c0248.  v0:= new `com.huawei.agconnect.https.a$d`;
  #L1c024c.  call `<init>`(v0) @signature `Lcom/huawei/agconnect/https/a$d;.<init>:()V` @kind direct;
  #L1c0252.  `@@com.huawei.agconnect.https.a.a` @type ^`com.huawei.agconnect.https.a$d` := v0 @kind object;
  #L1c0256.  v0:= new `com.huawei.agconnect.https.a$c`;
  #L1c025a.  call `<init>`(v0) @signature `Lcom/huawei/agconnect/https/a$c;.<init>:()V` @kind direct;
  #L1c0260.  `@@com.huawei.agconnect.https.a.b` @type ^`com.huawei.agconnect.https.a$c` := v0 @kind object;
  #L1c0264.  v0:= new `com.huawei.agconnect.https.a$b`;
  #L1c0268.  call `<init>`(v0) @signature `Lcom/huawei/agconnect/https/a$b;.<init>:()V` @kind direct;
  #L1c026e.  `@@com.huawei.agconnect.https.a.c` @type ^`com.huawei.agconnect.https.a$b` := v0 @kind object;
  #L1c0272.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.agconnect.https.a` v0 @kind this) @signature `Lcom/huawei/agconnect/https/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c0284.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c028a.  return @kind void;
}
procedure `okhttp3.Request$Builder` `a`(`java.lang.Object` v12 @kind object) @signature `Lcom/huawei/agconnect/https/a;.a:(Ljava/lang/Object;)Lokhttp3/Request$Builder;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1c0160.  call temp:= `c`(v12) @signature `Lcom/huawei/agconnect/https/a;.c:(Ljava/lang/Object;)Lokhttp3/HttpUrl$Builder;` @kind static;
  #L1c0166.  v0:= temp @kind object;
  #L1c0168.  v1:= new `okhttp3.Request$Builder`;
  #L1c016c.  call `<init>`(v1) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L1c0172.  call temp:= `getClass`(v12) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1c0178.  v2:= temp @kind object;
  #L1c017a.  call temp:= `getDeclaredFields`(v2) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L1c0180.  v3:= temp @kind object;
  #L1c0182.  v4:= length @variable v3;
  #L1c0184.  if v4 <= 0 then goto L1c0216;
  #L1c0188.  v4:= length @variable v3;
  #L1c018a.  v5:= 0I;
  #L1c018c.  v6:= 0I;
  #L1c018e.  if v6 >= v4 then goto L1c0216;
  #L1c0192.  v7:= v3[v6] @kind object;
  #L1c0196.  call `d`(v7) @signature `Lcom/huawei/agconnect/https/a;.d:(Ljava/lang/reflect/Field;)V` @kind static;
  #L1c019c.  call temp:= `getDeclaredAnnotations`(v7) @signature `Ljava/lang/reflect/Field;.getDeclaredAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1c01a2.  v8:= temp @kind object;
  #L1c01a4.  v9:= 0I;
  #L1c01a6.  v10:= length @variable v8;
  #L1c01a8.  if v9 >= v10 then goto L1c0210;
  #L1c01ac.  v10:= v8[v9] @kind object;
  #L1c01b0.  call temp:= `annotationType`(v10) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L1c01b6.  v10:= temp @kind object;
  #L1c01b8.  v11:= constclass @type ^`com.huawei.agconnect.https.annotation.Query` @kind object;
  #L1c01bc.  call temp:= `equals`(v11, v10) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c01c2.  v11:= temp;
  #L1c01c4.  if v11 == 0 then goto L1c01d4;
  #L1c01c8.  v10:= `@@com.huawei.agconnect.https.a.a` @type ^`com.huawei.agconnect.https.a$d` @kind object;
  #L1c01cc.  call temp:= `e`(v10, v7, v12, v0) @signature `Lcom/huawei/agconnect/https/a$d;.e:(Ljava/lang/reflect/Field;Ljava/lang/Object;Lokhttp3/HttpUrl$Builder;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1c01d2.  goto L1c020a;
  #L1c01d4.  v11:= constclass @type ^`com.huawei.agconnect.https.annotation.HeaderMap` @kind object;
  #L1c01d8.  call temp:= `equals`(v11, v10) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c01de.  v11:= temp;
  #L1c01e0.  if v11 == 0 then goto L1c01f0;
  #L1c01e4.  v10:= `@@com.huawei.agconnect.https.a.b` @type ^`com.huawei.agconnect.https.a$c` @kind object;
  #L1c01e8.  call temp:= `e`(v10, v7, v12, v1) @signature `Lcom/huawei/agconnect/https/a$c;.e:(Ljava/lang/reflect/Field;Ljava/lang/Object;Lokhttp3/Request$Builder;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1c01ee.  goto L1c020a;
  #L1c01f0.  v11:= constclass @type ^`com.huawei.agconnect.https.annotation.Header` @kind object;
  #L1c01f4.  call temp:= `equals`(v11, v10) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c01fa.  v10:= temp;
  #L1c01fc.  if v10 == 0 then goto L1c020a;
  #L1c0200.  v10:= `@@com.huawei.agconnect.https.a.c` @type ^`com.huawei.agconnect.https.a$b` @kind object;
  #L1c0204.  call temp:= `e`(v10, v7, v12, v1) @signature `Lcom/huawei/agconnect/https/a$b;.e:(Ljava/lang/reflect/Field;Ljava/lang/Object;Lokhttp3/Request$Builder;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1c020a.  v9:= v9 + 1;
  #L1c020e.  goto L1c01a6;
  #L1c0210.  v6:= v6 + 1;
  #L1c0214.  goto L1c018e;
  #L1c0216.  call temp:= `getSuperclass`(v2) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L1c021c.  v2:= temp @kind object;
  #L1c021e.  v3:= constclass @type ^`java.lang.Object` @kind object;
  #L1c0222.  if v2 != v3 then goto L1c017a;
  #L1c0226.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1c022c.  v12:= temp @kind object;
  #L1c022e.  call temp:= `url`(v1, v12) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1c0234.  v12:= temp @kind object;
  #L1c0236.  return v12 @kind object;
}
procedure `void` `b`(`java.lang.reflect.Field` v0 @kind object) @signature `Lcom/huawei/agconnect/https/a;.b:(Ljava/lang/reflect/Field;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c029c.  call `d`(v0) @signature `Lcom/huawei/agconnect/https/a;.d:(Ljava/lang/reflect/Field;)V` @kind static;
  #L1c02a2.  return @kind void;
}
procedure `okhttp3.HttpUrl$Builder` `c`(`java.lang.Object` v9 @kind object) @signature `Lcom/huawei/agconnect/https/a;.c:(Ljava/lang/Object;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1c00b4.  v0:= new `java.util.ArrayList`;
  #L1c00b8.  v1:= 1I;
  #L1c00ba.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1c00c0.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1c00c6.  v2:= temp @kind object;
  #L1c00c8.  call temp:= `getDeclaredFields`(v2) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L1c00ce.  v3:= temp @kind object;
  #L1c00d0.  v4:= length @variable v3;
  #L1c00d2.  v5:= 0I;
  #L1c00d4.  if v4 <= 0 then goto L1c0100;
  #L1c00d8.  v4:= length @variable v3;
  #L1c00da.  v6:= 0I;
  #L1c00dc.  if v6 >= v4 then goto L1c0100;
  #L1c00e0.  v7:= v3[v6] @kind object;
  #L1c00e4.  v8:= constclass @type ^`com.huawei.agconnect.https.annotation.Url` @kind object;
  #L1c00e8.  call temp:= `isAnnotationPresent`(v7, v8) @signature `Ljava/lang/reflect/Field;.isAnnotationPresent:(Ljava/lang/Class;)Z` @kind virtual;
  #L1c00ee.  v8:= temp;
  #L1c00f0.  if v8 == 0 then goto L1c00fa;
  #L1c00f4.  call temp:= `add`(v0, v7) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c00fa.  v6:= v6 + 1;
  #L1c00fe.  goto L1c00dc;
  #L1c0100.  call temp:= `getSuperclass`(v2) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L1c0106.  v2:= temp @kind object;
  #L1c0108.  v3:= constclass @type ^`java.lang.Object` @kind object;
  #L1c010c.  if v2 != v3 then goto L1c00c8;
  #L1c0110.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1c0116.  v2:= temp;
  #L1c0118.  if v2 != v1 then goto L1c013e;
  #L1c011c.  v1:= new `com.huawei.agconnect.https.a$e`;
  #L1c0120.  call `<init>`(v1) @signature `Lcom/huawei/agconnect/https/a$e;.<init>:()V` @kind direct;
  #L1c0126.  call temp:= `get`(v0, v5) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1c012c.  v0:= temp @kind object;
  #L1c012e.  v0:= (`java.lang.reflect.Field`) v0 @kind object;
  #L1c0132.  v2:= 0I;
  #L1c0134.  call temp:= `e`(v1, v0, v9, v2) @signature `Lcom/huawei/agconnect/https/a$e;.e:(Ljava/lang/reflect/Field;Ljava/lang/Object;Lokhttp3/HttpUrl$Builder;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1c013a.  v9:= temp @kind object;
  #L1c013c.  return v9 @kind object;
  #L1c013e.  v9:= new `java.lang.IllegalArgumentException`;
  #L1c0142.  v0:= "ONLY ONE String Field can be annotated as Url" @kind object;
  #L1c0146.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c014c.  throw v9;
}
procedure `void` `d`(`java.lang.reflect.Field` v1 @kind object) @signature `Lcom/huawei/agconnect/https/a;.d:(Ljava/lang/reflect/Field;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1c02b4.  call temp:= `isAccessible`(v1) @signature `Ljava/lang/reflect/Field;.isAccessible:()Z` @kind virtual;
  #L1c02ba.  v0:= temp;
  #L1c02bc.  if v0 != 0 then goto L1c02d0;
  #L1c02c0.  v0:= new `com.huawei.agconnect.https.a$a`;
  #L1c02c4.  call `<init>`(v0, v1) @signature `Lcom/huawei/agconnect/https/a$a;.<init>:(Ljava/lang/reflect/Field;)V` @kind direct;
  #L1c02ca.  call temp:= `doPrivileged`(v0) @signature `Ljava/security/AccessController;.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;` @kind static;
  #L1c02d0.  return @kind void;
}
