record `com.huawei.agconnect.https.a$d` @kind class @AccessFlag FINAL extends `com.huawei.agconnect.https.a` @kind class {
}
procedure `void` `<init>`(`com.huawei.agconnect.https.a$d` v0 @kind this) @signature `Lcom/huawei/agconnect/https/a$d;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1be944.  call `<init>`(v0) @signature `Lcom/huawei/agconnect/https/a;.<init>:()V` @kind direct;
  #L1be94a.  return @kind void;
}
procedure `okhttp3.HttpUrl$Builder` `e`(`com.huawei.agconnect.https.a$d` v3 @kind this, `java.lang.reflect.Field` v4 @kind object, `java.lang.Object` v5 @kind object, `okhttp3.HttpUrl$Builder` v6 @kind object) @signature `Lcom/huawei/agconnect/https/a$d;.e:(Ljava/lang/reflect/Field;Ljava/lang/Object;Lokhttp3/HttpUrl$Builder;)Lokhttp3/HttpUrl$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L1be868.  if v6 == 0 then goto L1be914;
  #L1be86c.  call `b`(v4) @signature `Lcom/huawei/agconnect/https/a;.b:(Ljava/lang/reflect/Field;)V` @kind static;
  #L1be872.  call temp:= `get`(v4, v5) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1be878.  v5:= temp @kind object;
  #L1be87a.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L1be87e.  call temp:= `getType`(v4) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L1be884.  v1:= temp @kind object;
  #L1be886.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1be88c.  v0:= temp;
  #L1be88e.  if v0 == 0 then goto L1be8f6;
  #L1be892.  v0:= constclass @type ^`com.huawei.agconnect.https.annotation.Query` @kind object;
  #L1be896.  call temp:= `getAnnotation`(v4, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1be89c.  v0:= temp @kind object;
  #L1be89e.  v0:= (`com.huawei.agconnect.https.annotation.Query`) v0 @kind object;
  #L1be8a2.  call temp:= `value`(v0) @signature `Lcom/huawei/agconnect/https/annotation/Query;.value:()Ljava/lang/String;` @kind interface;
  #L1be8a8.  v1:= temp @kind object;
  #L1be8aa.  call temp:= `encoded`(v0) @signature `Lcom/huawei/agconnect/https/annotation/Query;.encoded:()Z` @kind interface;
  #L1be8b0.  v0:= temp;
  #L1be8b2.  if v1 == 0 then goto L1be8c2;
  #L1be8b6.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1be8bc.  v2:= temp;
  #L1be8be.  if v2 == 0 then goto L1be8ca;
  #L1be8c2.  call temp:= `getName`(v4) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L1be8c8.  v1:= temp @kind object;
  #L1be8ca.  if v5 != 0 then goto L1be8d2;
  #L1be8ce.  v5:= "" @kind object;
  #L1be8d2.  if v0 == 0 then goto L1be8e6;
  #L1be8d6.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1be8dc.  v4:= temp @kind object;
  #L1be8de.  call temp:= `addEncodedQueryParameter`(v6, v1, v4) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1be8e4.  goto L1be8f4;
  #L1be8e6.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1be8ec.  v4:= temp @kind object;
  #L1be8ee.  call temp:= `addQueryParameter`(v6, v1, v4) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1be8f4.  return v6 @kind object;
  #L1be8f6.  v4:= new `java.security.InvalidParameterException`;
  #L1be8fa.  v5:= "QueryHandler should be the annotation of String" @kind object;
  #L1be8fe.  call `<init>`(v4, v5) @signature `Ljava/security/InvalidParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1be904.  throw v4;
  #L1be906.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1be908.  v5:= new `java.lang.RuntimeException`;
  #L1be90c.  call `<init>`(v5, v4) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1be912.  throw v5;
  #L1be914.  v4:= new `java.lang.IllegalArgumentException`;
  #L1be918.  v5:= "builder cannot be null" @kind object;
  #L1be91c.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1be922.  throw v4;
  catch `java.lang.IllegalAccessException` @[L1be86c..L1be906] goto L1be906;
}
