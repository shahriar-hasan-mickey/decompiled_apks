record `com.huawei.agconnect.https.h` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.huawei.agconnect.https.h` v0 @kind this) @signature `Lcom/huawei/agconnect/https/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1c094c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c0952.  return @kind void;
}
procedure `java.lang.Class` `a`(`java.lang.reflect.Type` v3 @kind object) @signature `Lcom/huawei/agconnect/https/h;.a:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1c083c.  if v3 == 0 then goto L1c092a;
  #L1c0840.  v0:= instanceof @variable v3 @type ^`java.lang.Class` @kind boolean;
  #L1c0844.  if v0 == 0 then goto L1c084e;
  #L1c0848.  v3:= (`java.lang.Class`) v3 @kind object;
  #L1c084c.  return v3 @kind object;
  #L1c084e.  v0:= instanceof @variable v3 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1c0852.  if v0 == 0 then goto L1c087c;
  #L1c0856.  v3:= (`java.lang.reflect.ParameterizedType`) v3 @kind object;
  #L1c085a.  call temp:= `getRawType`(v3) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L1c0860.  v3:= temp @kind object;
  #L1c0862.  v0:= instanceof @variable v3 @type ^`java.lang.Class` @kind boolean;
  #L1c0866.  if v0 == 0 then goto L1c0870;
  #L1c086a.  v3:= (`java.lang.Class`) v3 @kind object;
  #L1c086e.  return v3 @kind object;
  #L1c0870.  v3:= new `java.lang.IllegalArgumentException`;
  #L1c0874.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L1c087a.  throw v3;
  #L1c087c.  v0:= instanceof @variable v3 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L1c0880.  v1:= 0I;
  #L1c0882.  if v0 == 0 then goto L1c08ac;
  #L1c0886.  v3:= (`java.lang.reflect.GenericArrayType`) v3 @kind object;
  #L1c088a.  call temp:= `getGenericComponentType`(v3) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L1c0890.  v3:= temp @kind object;
  #L1c0892.  call temp:= `a`(v3) @signature `Lcom/huawei/agconnect/https/h;.a:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1c0898.  v3:= temp @kind object;
  #L1c089a.  call temp:= `newInstance`(v3, v1) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L1c08a0.  v3:= temp @kind object;
  #L1c08a2.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1c08a8.  v3:= temp @kind object;
  #L1c08aa.  return v3 @kind object;
  #L1c08ac.  v0:= instanceof @variable v3 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L1c08b0.  if v0 == 0 then goto L1c08ba;
  #L1c08b4.  v3:= constclass @type ^`java.lang.Object` @kind object;
  #L1c08b8.  return v3 @kind object;
  #L1c08ba.  v0:= instanceof @variable v3 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L1c08be.  if v0 == 0 then goto L1c08dc;
  #L1c08c2.  v3:= (`java.lang.reflect.WildcardType`) v3 @kind object;
  #L1c08c6.  call temp:= `getUpperBounds`(v3) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L1c08cc.  v3:= temp @kind object;
  #L1c08ce.  v3:= v3[v1] @kind object;
  #L1c08d2.  call temp:= `a`(v3) @signature `Lcom/huawei/agconnect/https/h;.a:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1c08d8.  v3:= temp @kind object;
  #L1c08da.  return v3 @kind object;
  #L1c08dc.  v0:= new `java.lang.IllegalArgumentException`;
  #L1c08e0.  v1:= new `java.lang.StringBuilder`;
  #L1c08e4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c08ea.  v2:= "Expected a Class, ParameterizedType, or GenericArrayType, but <" @kind object;
  #L1c08ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c08f4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c08fa.  v2:= "> is of type " @kind object;
  #L1c08fe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c0904.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1c090a.  v3:= temp @kind object;
  #L1c090c.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1c0912.  v3:= temp @kind object;
  #L1c0914.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c091a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c0920.  v3:= temp @kind object;
  #L1c0922.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c0928.  throw v0;
  #L1c092a.  v3:= new `java.lang.NullPointerException`;
  #L1c092e.  v0:= "type == null" @kind object;
  #L1c0932.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c0938.  throw v3;
}
