record `com.huawei.agconnect.https.g` @kind class @AccessFlag  extends `okhttp3.Interceptor` @kind interface {
  `int` `com.huawei.agconnect.https.g.a` @AccessFlag PRIVATE;
  `int` `com.huawei.agconnect.https.g.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.agconnect.https.g` v0 @kind this, `int` v1 ) @signature `Lcom/huawei/agconnect/https/g;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c0820.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c0826.  v0.`com.huawei.agconnect.https.g.a` @type ^`int` := v1;
  #L1c082a.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`com.huawei.agconnect.https.g` v4 @kind this, `okhttp3.Interceptor$Chain` v5 @kind object) @signature `Lcom/huawei/agconnect/https/g;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c07dc.  call temp:= `request`(v5) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L1c07e2.  v0:= temp @kind object;
  #L1c07e4.  call temp:= `proceed`(v5, v0) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L1c07ea.  v1:= temp @kind object;
  #L1c07ec.  call temp:= `isSuccessful`(v1) @signature `Lokhttp3/Response;.isSuccessful:()Z` @kind virtual;
  #L1c07f2.  v2:= temp;
  #L1c07f4.  if v2 != 0 then goto L1c080e;
  #L1c07f8.  v2:= v4.`com.huawei.agconnect.https.g.b` @type ^`int`;
  #L1c07fc.  v3:= v4.`com.huawei.agconnect.https.g.a` @type ^`int`;
  #L1c0800.  if v2 >= v3 then goto L1c080e;
  #L1c0804.  v2:= v2 + 1;
  #L1c0808.  v4.`com.huawei.agconnect.https.g.b` @type ^`int` := v2;
  #L1c080c.  goto L1c07e4;
  #L1c080e.  return v1 @kind object;
}
