record `com.huawei.agconnect.https.adapter.c` @kind class @AccessFlag PUBLIC extends `com.huawei.agconnect.https.Adapter` @kind interface {
}
global `okhttp3.MediaType` `@@com.huawei.agconnect.https.adapter.c.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/agconnect/https/adapter/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1bfc04.  v0:= "application/json; charset=UTF-8" @kind object;
  #L1bfc08.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L1bfc0e.  v0:= temp @kind object;
  #L1bfc10.  `@@com.huawei.agconnect.https.adapter.c.a` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L1bfc14.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.agconnect.https.adapter.c` v0 @kind this) @signature `Lcom/huawei/agconnect/https/adapter/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1bfc28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bfc2e.  return @kind void;
}
procedure `java.lang.String` `a`(`com.huawei.agconnect.https.adapter.c` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/huawei/agconnect/https/adapter/c;.a:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1bfaa8.  call temp:= `isAccessible`(v2) @signature `Ljava/lang/reflect/Field;.isAccessible:()Z` @kind virtual;
  #L1bfaae.  v0:= temp;
  #L1bfab0.  if v0 != 0 then goto L1bfac4;
  #L1bfab4.  v0:= new `com.huawei.agconnect.https.adapter.c$a`;
  #L1bfab8.  call `<init>`(v0, v1, v2) @signature `Lcom/huawei/agconnect/https/adapter/c$a;.<init>:(Lcom/huawei/agconnect/https/adapter/c;Ljava/lang/reflect/Field;)V` @kind direct;
  #L1bfabe.  call temp:= `doPrivileged`(v0) @signature `Ljava/security/AccessController;.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;` @kind static;
  #L1bfac4.  call temp:= `get`(v2, v3) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1bfaca.  v2:= temp @kind object;
  #L1bfacc.  if v2 != 0 then goto L1bfad4;
  #L1bfad0.  v2:= 0I;
  #L1bfad2.  goto L1bfae8;
  #L1bfad4.  v3:= new `com.huawei.agconnect.https.adapter.b`;
  #L1bfad8.  v0:= 0I;
  #L1bfada.  call `<init>`(v3, v0) @signature `Lcom/huawei/agconnect/https/adapter/b;.<init>:(Z)V` @kind direct;
  #L1bfae0.  call temp:= `c`(v3, v2) @signature `Lcom/huawei/agconnect/https/adapter/b;.c:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L1bfae6.  v2:= temp @kind object;
  #L1bfae8.  return v2 @kind object;
}
procedure `okhttp3.RequestBody` `a`(`com.huawei.agconnect.https.adapter.c` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Lcom/huawei/agconnect/https/adapter/c;.a:(Ljava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1bfafc.  call temp:= `getClass`(v10) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1bfb02.  v0:= temp @kind object;
  #L1bfb04.  v1:= 0I;
  #L1bfb06.  v2:= 0I;
  #L1bfb08.  v3:= 0I;
  #L1bfb0a.  call temp:= `getDeclaredFields`(v0) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L1bfb10.  v4:= temp @kind object;
  #L1bfb12.  v5:= length @variable v4;
  #L1bfb14.  if v5 <= 0 then goto L1bfb4c;
  #L1bfb18.  v5:= length @variable v4;
  #L1bfb1a.  v6:= 0I;
  #L1bfb1c.  if v6 >= v5 then goto L1bfb46;
  #L1bfb20.  v7:= v4[v6] @kind object;
  #L1bfb24.  v8:= constclass @type ^`com.huawei.agconnect.https.annotation.Body` @kind object;
  #L1bfb28.  call temp:= `isAnnotationPresent`(v7, v8) @signature `Ljava/lang/reflect/Field;.isAnnotationPresent:(Ljava/lang/Class;)Z` @kind virtual;
  #L1bfb2e.  v8:= temp;
  #L1bfb30.  if v8 == 0 then goto L1bfb40;
  #L1bfb34.  call temp:= `a`(v9, v7, v10) @signature `Lcom/huawei/agconnect/https/adapter/c;.a:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L1bfb3a.  v2:= temp @kind object;
  #L1bfb3c.  v3:= 1I;
  #L1bfb3e.  goto L1bfb46;
  #L1bfb40.  v6:= v6 + 1;
  #L1bfb44.  goto L1bfb1c;
  #L1bfb46.  if v3 == 0 then goto L1bfb4c;
  #L1bfb4a.  goto L1bfb5c;
  #L1bfb4c.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L1bfb52.  v0:= temp @kind object;
  #L1bfb54.  v4:= constclass @type ^`java.lang.Object` @kind object;
  #L1bfb58.  if v0 != v4 then goto L1bfb0a;
  #L1bfb5c.  v10:= `@@com.huawei.agconnect.https.adapter.c.a` @type ^`okhttp3.MediaType` @kind object;
  #L1bfb60.  if v2 != 0 then goto L1bfb68;
  #L1bfb64.  v2:= "{}" @kind object;
  #L1bfb68.  call temp:= `create`(v10, v2) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;` @kind static;
  #L1bfb6e.  v10:= temp @kind object;
  #L1bfb70.  return v10 @kind object;
  #L1bfb72.  v10:= Exception @type ^`org.json.JSONException` @kind object;
  #L1bfb74.  v0:= new `java.io.IOException`;
  #L1bfb78.  v1:= new `java.lang.StringBuilder`;
  #L1bfb7c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bfb82.  v2:= "catch JSONException:" @kind object;
  #L1bfb86.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bfb8c.  call temp:= `getMessage`(v10) @signature `Lorg/json/JSONException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1bfb92.  v10:= temp @kind object;
  #L1bfb94.  call temp:= `append`(v1, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bfb9a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bfba0.  v10:= temp @kind object;
  #L1bfba2.  call `<init>`(v0, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bfba8.  throw v0;
  #L1bfbaa.  v10:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1bfbac.  v0:= new `java.io.IOException`;
  #L1bfbb0.  v1:= new `java.lang.StringBuilder`;
  #L1bfbb4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bfbba.  v2:= "catch IllegalAccessException:" @kind object;
  #L1bfbbe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bfbc4.  call temp:= `getMessage`(v10) @signature `Ljava/lang/IllegalAccessException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1bfbca.  v10:= temp @kind object;
  #L1bfbcc.  call temp:= `append`(v1, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bfbd2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bfbd8.  v10:= temp @kind object;
  #L1bfbda.  call `<init>`(v0, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bfbe0.  throw v0;
  catch `java.lang.IllegalAccessException` @[L1bfafc..L1bfb58] goto L1bfbaa;
  catch `org.json.JSONException` @[L1bfafc..L1bfb58] goto L1bfb72;
}
procedure `java.lang.Object` `adapter`(`com.huawei.agconnect.https.adapter.c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/huawei/agconnect/https/adapter/c;.adapter:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1bfa8c.  call temp:= `a`(v0, v1) @signature `Lcom/huawei/agconnect/https/adapter/c;.a:(Ljava/lang/Object;)Lokhttp3/RequestBody;` @kind virtual;
  #L1bfa92.  v1:= temp @kind object;
  #L1bfa94.  return v1 @kind object;
}
