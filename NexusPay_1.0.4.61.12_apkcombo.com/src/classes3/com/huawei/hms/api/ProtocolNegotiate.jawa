record `com.huawei.hms.api.ProtocolNegotiate` @kind class @AccessFlag PUBLIC {
  `int` `com.huawei.hms.api.ProtocolNegotiate.a` @AccessFlag PRIVATE;
}
global `com.huawei.hms.api.ProtocolNegotiate` `@@com.huawei.hms.api.ProtocolNegotiate.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/api/ProtocolNegotiate;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ecf58.  v0:= new `com.huawei.hms.api.ProtocolNegotiate`;
  #L1ecf5c.  call `<init>`(v0) @signature `Lcom/huawei/hms/api/ProtocolNegotiate;.<init>:()V` @kind direct;
  #L1ecf62.  `@@com.huawei.hms.api.ProtocolNegotiate.b` @type ^`com.huawei.hms.api.ProtocolNegotiate` := v0 @kind object;
  #L1ecf66.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.api.ProtocolNegotiate` v1 @kind this) @signature `Lcom/huawei/hms/api/ProtocolNegotiate;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ecf78.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ecf7e.  v0:= 1I;
  #L1ecf80.  v1.`com.huawei.hms.api.ProtocolNegotiate.a` @type ^`int` := v0;
  #L1ecf84.  return @kind void;
}
procedure `com.huawei.hms.api.ProtocolNegotiate` `getInstance`() @signature `Lcom/huawei/hms/api/ProtocolNegotiate;.getInstance:()Lcom/huawei/hms/api/ProtocolNegotiate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1eceb8.  v0:= `@@com.huawei.hms.api.ProtocolNegotiate.b` @type ^`com.huawei.hms.api.ProtocolNegotiate` @kind object;
  #L1ecebc.  return v0 @kind object;
}
procedure `int` `getVersion`(`com.huawei.hms.api.ProtocolNegotiate` v1 @kind this) @signature `Lcom/huawei/hms/api/ProtocolNegotiate;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eced0.  v0:= v1.`com.huawei.hms.api.ProtocolNegotiate.a` @type ^`int`;
  #L1eced4.  return v0;
}
procedure `int` `negotiate`(`com.huawei.hms.api.ProtocolNegotiate` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lcom/huawei/hms/api/ProtocolNegotiate;.negotiate:(Ljava/util/List;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ecee8.  v0:= 1I;
  #L1eceea.  if v4 == 0 then goto L1ecf40;
  #L1eceee.  call temp:= `isEmpty`(v4) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1ecef4.  v1:= temp;
  #L1ecef6.  if v1 == 0 then goto L1ecefc;
  #L1ecefa.  goto L1ecf40;
  #L1ecefc.  v1:= 2I;
  #L1ecefe.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1ecf04.  v2:= temp @kind object;
  #L1ecf06.  call temp:= `contains`(v4, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1ecf0c.  v2:= temp;
  #L1ecf0e.  if v2 != 0 then goto L1ecf36;
  #L1ecf12.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1ecf18.  v1:= temp;
  #L1ecf1a.  v1:= v1 - v0 @kind int;
  #L1ecf1c.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1ecf22.  v4:= temp @kind object;
  #L1ecf24.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L1ecf28.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1ecf2e.  v4:= temp;
  #L1ecf30.  v3.`com.huawei.hms.api.ProtocolNegotiate.a` @type ^`int` := v4;
  #L1ecf34.  goto L1ecf3a;
  #L1ecf36.  v3.`com.huawei.hms.api.ProtocolNegotiate.a` @type ^`int` := v1;
  #L1ecf3a.  v4:= v3.`com.huawei.hms.api.ProtocolNegotiate.a` @type ^`int`;
  #L1ecf3e.  return v4;
  #L1ecf40.  v3.`com.huawei.hms.api.ProtocolNegotiate.a` @type ^`int` := v0;
  #L1ecf44.  return v0;
}
