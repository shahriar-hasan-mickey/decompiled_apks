record `com.huawei.hms.hatool.o0$b` @kind class @AccessFlag PUBLIC extends `java.util.concurrent.ThreadFactory` @kind interface {
  `java.lang.ThreadGroup` `com.huawei.hms.hatool.o0$b.a` @AccessFlag PUBLIC_FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `com.huawei.hms.hatool.o0$b.b` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `com.huawei.hms.hatool.o0$b.c` @AccessFlag PUBLIC_FINAL;
}
global `java.util.concurrent.atomic.AtomicInteger` `@@com.huawei.hms.hatool.o0$b.d` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/hatool/o0$b;.<clinit>:()V` @AccessFlag PUBLIC_STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L21b3f0.  v0:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L21b3f4.  v1:= 1I;
  #L21b3f6.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L21b3fc.  `@@com.huawei.hms.hatool.o0$b.d` @type ^`java.util.concurrent.atomic.AtomicInteger` := v0 @kind object;
  #L21b400.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.hatool.o0$b` v2 @kind this) @signature `Lcom/huawei/hms/hatool/o0$b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L21b414.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21b41a.  v0:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L21b41e.  v1:= 1I;
  #L21b420.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L21b426.  v2.`com.huawei.hms.hatool.o0$b.b` @type ^`java.util.concurrent.atomic.AtomicInteger` := v0 @kind object;
  #L21b42a.  call temp:= `getSecurityManager`() @signature `Ljava/lang/System;.getSecurityManager:()Ljava/lang/SecurityManager;` @kind static;
  #L21b430.  v0:= temp @kind object;
  #L21b432.  if v0 == 0 then goto L21b440;
  #L21b436.  call temp:= `getThreadGroup`(v0) @signature `Ljava/lang/SecurityManager;.getThreadGroup:()Ljava/lang/ThreadGroup;` @kind virtual;
  #L21b43c.  v0:= temp @kind object;
  #L21b43e.  goto L21b450;
  #L21b440.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L21b446.  v0:= temp @kind object;
  #L21b448.  call temp:= `getThreadGroup`(v0) @signature `Ljava/lang/Thread;.getThreadGroup:()Ljava/lang/ThreadGroup;` @kind virtual;
  #L21b44e.  v0:= temp @kind object;
  #L21b450.  v2.`com.huawei.hms.hatool.o0$b.a` @type ^`java.lang.ThreadGroup` := v0 @kind object;
  #L21b454.  v0:= new `java.lang.StringBuilder`;
  #L21b458.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21b45e.  v1:= "FormalHASDK-base-" @kind object;
  #L21b462.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21b468.  v1:= `@@com.huawei.hms.hatool.o0$b.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L21b46c.  call temp:= `getAndIncrement`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L21b472.  v1:= temp;
  #L21b474.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L21b47a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21b480.  v0:= temp @kind object;
  #L21b482.  v2.`com.huawei.hms.hatool.o0$b.c` @type ^`java.lang.String` := v0 @kind object;
  #L21b486.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`com.huawei.hms.hatool.o0$b` v7 @kind this, `java.lang.Runnable` v8 @kind object) @signature `Lcom/huawei/hms/hatool/o0$b;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21b398.  v6:= new `java.lang.Thread`;
  #L21b39c.  v1:= v7.`com.huawei.hms.hatool.o0$b.a` @type ^`java.lang.ThreadGroup` @kind object;
  #L21b3a0.  v0:= new `java.lang.StringBuilder`;
  #L21b3a4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21b3aa.  v2:= v7.`com.huawei.hms.hatool.o0$b.c` @type ^`java.lang.String` @kind object;
  #L21b3ae.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21b3b4.  v2:= v7.`com.huawei.hms.hatool.o0$b.b` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L21b3b8.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L21b3be.  v2:= temp;
  #L21b3c0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L21b3c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21b3cc.  v3:= temp @kind object;
  #L21b3ce.  v4:= 0L;
  #L21b3d2.  v0:= v6 @kind object;
  #L21b3d4.  v2:= v8 @kind object;
  #L21b3d6.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V` @kind direct;
  #L21b3dc.  return v6 @kind object;
}
