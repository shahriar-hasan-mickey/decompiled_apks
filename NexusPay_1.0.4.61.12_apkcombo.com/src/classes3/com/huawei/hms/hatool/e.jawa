record `com.huawei.hms.hatool.e` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/hatool/e;.<clinit>:()V` @AccessFlag PUBLIC_STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L217e28.  v0:= "UTF-8" @kind object;
  #L217e2c.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L217e32.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/huawei/hms/hatool/e;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L217dac.  v0:= "UTF-8" @kind object;
  #L217db0.  call temp:= `getBytes`(v2, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L217db6.  v2:= temp @kind object;
  #L217db8.  call temp:= `a`(v1, v2) @signature `Lcom/huawei/hms/hatool/e;.a:(Ljava/lang/String;[B)Ljava/lang/String;` @kind static;
  #L217dbe.  v1:= temp @kind object;
  #L217dc0.  return v1 @kind object;
  #L217dc2.  v1:= "hmsSdk" @kind object;
  #L217dc6.  v2:= "Unsupported encoding exception,utf-8" @kind object;
  #L217dca.  call `c`(v1, v2) @signature `Lcom/huawei/hms/hatool/y;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L217dd0.  v1:= "" @kind object;
  #L217dd4.  return v1 @kind object;
  catch `java.io.UnsupportedEncodingException` @[L217dac..L217dc0] goto L217dc2;
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object, `byte`[] v4 @kind object) @signature `Lcom/huawei/hms/hatool/e;.a:(Ljava/lang/String;[B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L217d38.  v0:= "" @kind object;
  #L217d3c.  v1:= "hmsSdk" @kind object;
  #L217d40.  if v4 == 0 then goto L217d80;
  #L217d44.  v2:= length @variable v4;
  #L217d46.  if v2 != 0 then goto L217d4c;
  #L217d4a.  goto L217d80;
  #L217d4c.  call temp:= `hexStr2ByteArray`(v3) @signature `Lcom/huawei/secure/android/common/encrypt/utils/HexUtil;.hexStr2ByteArray:(Ljava/lang/String;)[B` @kind static;
  #L217d52.  v3:= temp @kind object;
  #L217d54.  call temp:= `a`(v3) @signature `Lcom/huawei/hms/hatool/e;.a:([B)Ljava/security/PublicKey;` @kind static;
  #L217d5a.  v3:= temp @kind object;
  #L217d5c.  call temp:= `a`(v4, v3) @signature `Lcom/huawei/hms/hatool/e;.a:([BLjava/security/PublicKey;)[B` @kind static;
  #L217d62.  v3:= temp @kind object;
  #L217d64.  call temp:= `byteArray2HexStr`(v3) @signature `Lcom/huawei/secure/android/common/encrypt/utils/HexUtil;.byteArray2HexStr:([B)Ljava/lang/String;` @kind static;
  #L217d6a.  v3:= temp @kind object;
  #L217d6c.  return v3 @kind object;
  #L217d6e.  v3:= "encrypt(): Invalid key specification" @kind object;
  #L217d72.  goto L217d78;
  #L217d74.  v3:= "encrypt(): getInstance - No such algorithm,transformation" @kind object;
  #L217d78.  call `f`(v1, v3) @signature `Lcom/huawei/hms/hatool/y;.f:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L217d7e.  return v0 @kind object;
  #L217d80.  v3:= "encrypt: content is empty or null" @kind object;
  #L217d84.  call `f`(v1, v3) @signature `Lcom/huawei/hms/hatool/y;.f:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L217d8a.  return v0 @kind object;
  catch `java.security.NoSuchAlgorithmException` @[L217d4c..L217d6c] goto L217d74;
  catch `java.security.spec.InvalidKeySpecException` @[L217d4c..L217d6c] goto L217d6e;
}
procedure `java.security.PublicKey` `a`(`byte`[] v1 @kind object) @signature `Lcom/huawei/hms/hatool/e;.a:([B)Ljava/security/PublicKey;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L217df8.  v0:= new `java.security.spec.X509EncodedKeySpec`;
  #L217dfc.  call `<init>`(v0, v1) @signature `Ljava/security/spec/X509EncodedKeySpec;.<init>:([B)V` @kind direct;
  #L217e02.  v1:= "RSA" @kind object;
  #L217e06.  call temp:= `getInstance`(v1) @signature `Ljava/security/KeyFactory;.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;` @kind static;
  #L217e0c.  v1:= temp @kind object;
  #L217e0e.  call temp:= `generatePublic`(v1, v0) @signature `Ljava/security/KeyFactory;.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;` @kind virtual;
  #L217e14.  v1:= temp @kind object;
  #L217e16.  return v1 @kind object;
}
procedure `byte`[] `a`(`byte`[] v3 @kind object, `java.security.PublicKey` v4 @kind object) @signature `Lcom/huawei/hms/hatool/e;.a:([BLjava/security/PublicKey;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L217ca4.  v0:= "hmsSdk" @kind object;
  #L217ca8.  if v4 == 0 then goto L217cca;
  #L217cac.  v1:= "RSA/ECB/OAEPWITHSHA-1ANDMGF1PADDING" @kind object;
  #L217cb0.  call temp:= `getInstance`(v1) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L217cb6.  v1:= temp @kind object;
  #L217cb8.  v2:= 1I;
  #L217cba.  call `init`(v1, v2, v4) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L217cc0.  call temp:= `doFinal`(v1, v3) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L217cc6.  v3:= temp @kind object;
  #L217cc8.  return v3 @kind object;
  #L217cca.  v3:= new `java.io.UnsupportedEncodingException`;
  #L217cce.  v4:= "The loaded public key is null" @kind object;
  #L217cd2.  call `<init>`(v3, v4) @signature `Ljava/io/UnsupportedEncodingException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L217cd8.  throw v3;
  #L217cda.  v3:= "rsaEncrypt(): doFinal - The provided block is not filled with" @kind object;
  #L217cde.  goto L217cfc;
  #L217ce0.  v3:= "rsaEncrypt():False filling parameters!" @kind object;
  #L217ce4.  goto L217cfc;
  #L217ce6.  v3:= "rsaEncrypt():  No such filling parameters " @kind object;
  #L217cea.  goto L217cfc;
  #L217cec.  v3:= "rsaEncrypt(): init - Invalid key!" @kind object;
  #L217cf0.  goto L217cfc;
  #L217cf2.  v3:= "rsaEncrypt(): getInstance - No such algorithm,transformation" @kind object;
  #L217cf6.  goto L217cfc;
  #L217cf8.  v3:= "rsaEncrypt(): getBytes - Unsupported coding format!" @kind object;
  #L217cfc.  call `f`(v0, v3) @signature `Lcom/huawei/hms/hatool/y;.f:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L217d02.  v3:= 0I;
  #L217d04.  v3:= new `byte`[v3];
  #L217d08.  return v3 @kind object;
  catch `java.io.UnsupportedEncodingException` @[L217cac..L217cda] goto L217cf8;
  catch `java.security.NoSuchAlgorithmException` @[L217cac..L217cda] goto L217cf2;
  catch `java.security.InvalidKeyException` @[L217cac..L217cda] goto L217cec;
  catch `javax.crypto.NoSuchPaddingException` @[L217cac..L217cda] goto L217ce6;
  catch `javax.crypto.BadPaddingException` @[L217cac..L217cda] goto L217ce0;
  catch `javax.crypto.IllegalBlockSizeException` @[L217cac..L217cda] goto L217cda;
}
