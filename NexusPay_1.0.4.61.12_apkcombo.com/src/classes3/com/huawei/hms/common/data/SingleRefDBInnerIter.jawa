record `com.huawei.hms.common.data.SingleRefDBInnerIter` @kind class @AccessFlag PUBLIC extends `com.huawei.hms.common.data.DBInnerIter` @kind class {
}
procedure `void` `<init>`(`com.huawei.hms.common.data.SingleRefDBInnerIter` v0 @kind this, `com.huawei.hms.common.data.DataBuffer` v1 @kind object) @signature `Lcom/huawei/hms/common/data/SingleRefDBInnerIter;.<init>:(Lcom/huawei/hms/common/data/DataBuffer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1f5a30.  call `<init>`(v0, v1) @signature `Lcom/huawei/hms/common/data/DBInnerIter;.<init>:(Lcom/huawei/hms/common/data/DataBuffer;)V` @kind direct;
  #L1f5a36.  return @kind void;
}
procedure `java.lang.Object` `next`(`com.huawei.hms.common.data.SingleRefDBInnerIter` v4 @kind this) @signature `Lcom/huawei/hms/common/data/SingleRefDBInnerIter;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f5980.  call temp:= `hasNext`(v4) @signature `Lcom/huawei/hms/common/data/DBInnerIter;.hasNext:()Z` @kind virtual;
  #L1f5986.  v0:= temp;
  #L1f5988.  if v0 != 0 then goto L1f5990;
  #L1f598c.  v0:= 0I;
  #L1f598e.  return v0 @kind object;
  #L1f5990.  v0:= v4.`com.huawei.hms.common.data.DBInnerIter.index` @type ^`int`;
  #L1f5994.  v0:= v0 + 1;
  #L1f5998.  v4.`com.huawei.hms.common.data.DBInnerIter.index` @type ^`int` := v0;
  #L1f599c.  v1:= 0I;
  #L1f599e.  if v0 != 0 then goto L1f5a12;
  #L1f59a2.  v0:= v4.`com.huawei.hms.common.data.DBInnerIter.dataBuffer` @type ^`com.huawei.hms.common.data.DataBuffer` @kind object;
  #L1f59a6.  call temp:= `get`(v0, v1) @signature `Lcom/huawei/hms/common/data/DataBuffer;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1f59ac.  v0:= temp @kind object;
  #L1f59ae.  v0:= instanceof @variable v0 @type ^`com.huawei.hms.common.data.DataBufferRef` @kind boolean;
  #L1f59b2.  v2:= new `java.lang.StringBuilder`;
  #L1f59b6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f59bc.  v3:= "DataBuffer reference of type " @kind object;
  #L1f59c0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f59c6.  v3:= v4.`com.huawei.hms.common.data.DBInnerIter.dataBuffer` @type ^`com.huawei.hms.common.data.DataBuffer` @kind object;
  #L1f59ca.  call temp:= `get`(v3, v1) @signature `Lcom/huawei/hms/common/data/DataBuffer;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1f59d0.  v3:= temp @kind object;
  #L1f59d2.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1f59d8.  v3:= temp @kind object;
  #L1f59da.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f59e0.  v3:= " is not movable" @kind object;
  #L1f59e4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f59ea.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f59f0.  v2:= temp @kind object;
  #L1f59f2.  call `checkState`(v0, v2) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkState:(ZLjava/lang/Object;)V` @kind static;
  #L1f59f8.  v0:= v4.`com.huawei.hms.common.data.DBInnerIter.dataBuffer` @type ^`com.huawei.hms.common.data.DataBuffer` @kind object;
  #L1f59fc.  call temp:= `get`(v0, v1) @signature `Lcom/huawei/hms/common/data/DataBuffer;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1f5a02.  v0:= temp @kind object;
  #L1f5a04.  v0:= (`com.huawei.hms.common.data.DataBufferRef`) v0 @kind object;
  #L1f5a08.  v2:= v4.`com.huawei.hms.common.data.DBInnerIter.index` @type ^`int`;
  #L1f5a0c.  call `getWindowIndex`(v0, v2) @signature `Lcom/huawei/hms/common/data/DataBufferRef;.getWindowIndex:(I)V` @kind virtual;
  #L1f5a12.  v0:= v4.`com.huawei.hms.common.data.DBInnerIter.dataBuffer` @type ^`com.huawei.hms.common.data.DataBuffer` @kind object;
  #L1f5a16.  call temp:= `get`(v0, v1) @signature `Lcom/huawei/hms/common/data/DataBuffer;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1f5a1c.  v0:= temp @kind object;
  #L1f5a1e.  return v0 @kind object;
}
