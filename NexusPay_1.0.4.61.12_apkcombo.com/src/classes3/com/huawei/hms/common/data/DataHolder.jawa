record `com.huawei.hms.common.data.DataHolder` @kind class @AccessFlag PUBLIC_FINAL extends `com.huawei.hms.common.internal.safeparcel.AbstractSafeParcelable` @kind class, `java.io.Closeable` @kind interface {
  `java.lang.String`[] `com.huawei.hms.common.data.DataHolder.columns` @AccessFlag PRIVATE;
  `android.os.Bundle` `com.huawei.hms.common.data.DataHolder.columnsBundle` @AccessFlag PRIVATE;
  `android.database.CursorWindow`[] `com.huawei.hms.common.data.DataHolder.cursorWindows` @AccessFlag PRIVATE;
  `int` `com.huawei.hms.common.data.DataHolder.dataCount` @AccessFlag PRIVATE;
  `boolean` `com.huawei.hms.common.data.DataHolder.isInstance` @AccessFlag PRIVATE;
  `boolean` `com.huawei.hms.common.data.DataHolder.mClosed` @AccessFlag PRIVATE;
  `android.os.Bundle` `com.huawei.hms.common.data.DataHolder.metadata` @AccessFlag PRIVATE;
  `int`[] `com.huawei.hms.common.data.DataHolder.perCursorCounts` @AccessFlag PRIVATE;
  `int` `com.huawei.hms.common.data.DataHolder.statusCode` @AccessFlag PRIVATE;
  `int` `com.huawei.hms.common.data.DataHolder.version` @AccessFlag PRIVATE;
}
global `com.huawei.hms.common.data.DataHolder$Builder` `@@com.huawei.hms.common.data.DataHolder.BUILDER` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.os.Parcelable$Creator` `@@com.huawei.hms.common.data.DataHolder.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.huawei.hms.common.data.DataHolder.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.huawei.hms.common.data.DataHolder.TYPE_BOOLEAN` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.huawei.hms.common.data.DataHolder.TYPE_BYTE_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.huawei.hms.common.data.DataHolder.TYPE_DOUBLE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.huawei.hms.common.data.DataHolder.TYPE_FLOAT` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.huawei.hms.common.data.DataHolder.TYPE_INT` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.huawei.hms.common.data.DataHolder.TYPE_LONG` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.huawei.hms.common.data.DataHolder.TYPE_STRING` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/common/data/DataHolder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1f54d0.  v0:= new `com.huawei.hms.common.data.DataHolderCreator`;
  #L1f54d4.  call `<init>`(v0) @signature `Lcom/huawei/hms/common/data/DataHolderCreator;.<init>:()V` @kind direct;
  #L1f54da.  `@@com.huawei.hms.common.data.DataHolder.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L1f54de.  v0:= new `com.huawei.hms.common.data.DataHolderBuilderCreator`;
  #L1f54e2.  v1:= 0I;
  #L1f54e4.  v1:= new `java.lang.String`[v1];
  #L1f54e8.  v2:= 0I;
  #L1f54ea.  call `<init>`(v0, v1, v2) @signature `Lcom/huawei/hms/common/data/DataHolderBuilderCreator;.<init>:([Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L1f54f0.  `@@com.huawei.hms.common.data.DataHolder.BUILDER` @type ^`com.huawei.hms.common.data.DataHolder$Builder` := v0 @kind object;
  #L1f54f4.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.common.data.DataHolder` v1 @kind this, `int` v2 , `java.lang.String`[] v3 @kind object, `android.database.CursorWindow`[] v4 @kind object, `int` v5 , `android.os.Bundle` v6 @kind object) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:(I[Ljava/lang/String;[Landroid/database/CursorWindow;ILandroid/os/Bundle;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1f55dc.  call `<init>`(v1) @signature `Lcom/huawei/hms/common/internal/safeparcel/AbstractSafeParcelable;.<init>:()V` @kind direct;
  #L1f55e2.  v0:= 0I;
  #L1f55e4.  v1.`com.huawei.hms.common.data.DataHolder.mClosed` @type ^`boolean` := v0 @kind boolean;
  #L1f55e8.  v0:= 1I;
  #L1f55ea.  v1.`com.huawei.hms.common.data.DataHolder.isInstance` @type ^`boolean` := v0 @kind boolean;
  #L1f55ee.  v1.`com.huawei.hms.common.data.DataHolder.version` @type ^`int` := v2;
  #L1f55f2.  v1.`com.huawei.hms.common.data.DataHolder.columns` @type ^`java.lang.String`[] := v3 @kind object;
  #L1f55f6.  v1.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] := v4 @kind object;
  #L1f55fa.  v1.`com.huawei.hms.common.data.DataHolder.statusCode` @type ^`int` := v5;
  #L1f55fe.  v1.`com.huawei.hms.common.data.DataHolder.metadata` @type ^`android.os.Bundle` := v6 @kind object;
  #L1f5602.  call `collectColumsAndCount`(v1) @signature `Lcom/huawei/hms/common/data/DataHolder;.collectColumsAndCount:()V` @kind virtual;
  #L1f5608.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.common.data.DataHolder` v1 @kind this, `android.database.Cursor` v2 @kind object, `int` v3 , `android.os.Bundle` v4 @kind object) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:(Landroid/database/Cursor;ILandroid/os/Bundle;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1f5508.  v0:= new `com.huawei.hms.common.sqlite.HMSCursorWrapper`;
  #L1f550c.  call `<init>`(v0, v2) @signature `Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;.<init>:(Landroid/database/Cursor;)V` @kind direct;
  #L1f5512.  call `<init>`(v1, v0, v3, v4) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:(Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;ILandroid/os/Bundle;)V` @kind direct;
  #L1f5518.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.common.data.DataHolder` v1 @kind this, `com.huawei.hms.common.data.DataHolder$Builder` v2 @kind object, `int` v3 , `android.os.Bundle` v4 @kind object) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:(Lcom/huawei/hms/common/data/DataHolder$Builder;ILandroid/os/Bundle;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1f552c.  call temp:= `access$200`(v2) @signature `Lcom/huawei/hms/common/data/DataHolder$Builder;.access$200:(Lcom/huawei/hms/common/data/DataHolder$Builder;)[Ljava/lang/String;` @kind static;
  #L1f5532.  v4:= temp @kind object;
  #L1f5534.  v0:= -1I;
  #L1f5536.  call temp:= `getCursorWindows`(v2, v0) @signature `Lcom/huawei/hms/common/data/DataHolder;.getCursorWindows:(Lcom/huawei/hms/common/data/DataHolder$Builder;I)[Landroid/database/CursorWindow;` @kind static;
  #L1f553c.  v2:= temp @kind object;
  #L1f553e.  v0:= 0I;
  #L1f5540.  call `<init>`(v1, v4, v2, v3, v0) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:([Ljava/lang/String;[Landroid/database/CursorWindow;ILandroid/os/Bundle;)V` @kind direct;
  #L1f5546.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.common.data.DataHolder` v1 @kind this, `com.huawei.hms.common.data.DataHolder$Builder` v2 @kind object, `int` v3 , `android.os.Bundle` v4 @kind object, `int` v5 ) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:(Lcom/huawei/hms/common/data/DataHolder$Builder;ILandroid/os/Bundle;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1f5570.  call temp:= `access$200`(v2) @signature `Lcom/huawei/hms/common/data/DataHolder$Builder;.access$200:(Lcom/huawei/hms/common/data/DataHolder$Builder;)[Ljava/lang/String;` @kind static;
  #L1f5576.  v5:= temp @kind object;
  #L1f5578.  v0:= -1I;
  #L1f557a.  call temp:= `getCursorWindows`(v2, v0) @signature `Lcom/huawei/hms/common/data/DataHolder;.getCursorWindows:(Lcom/huawei/hms/common/data/DataHolder$Builder;I)[Landroid/database/CursorWindow;` @kind static;
  #L1f5580.  v2:= temp @kind object;
  #L1f5582.  call `<init>`(v1, v5, v2, v3, v4) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:([Ljava/lang/String;[Landroid/database/CursorWindow;ILandroid/os/Bundle;)V` @kind direct;
  #L1f5588.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.common.data.DataHolder` v0 @kind this, `com.huawei.hms.common.data.DataHolder$Builder` v1 @kind object, `int` v2 , `android.os.Bundle` v3 @kind object, `int` v4 , `com.huawei.hms.common.data.DataHolder$1` v5 @kind object) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:(Lcom/huawei/hms/common/data/DataHolder$Builder;ILandroid/os/Bundle;ILcom/huawei/hms/common/data/DataHolder$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1f559c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:(Lcom/huawei/hms/common/data/DataHolder$Builder;ILandroid/os/Bundle;I)V` @kind direct;
  #L1f55a2.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.common.data.DataHolder` v0 @kind this, `com.huawei.hms.common.data.DataHolder$Builder` v1 @kind object, `int` v2 , `android.os.Bundle` v3 @kind object, `com.huawei.hms.common.data.DataHolder$1` v4 @kind object) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:(Lcom/huawei/hms/common/data/DataHolder$Builder;ILandroid/os/Bundle;Lcom/huawei/hms/common/data/DataHolder$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1f5558.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:(Lcom/huawei/hms/common/data/DataHolder$Builder;ILandroid/os/Bundle;)V` @kind direct;
  #L1f555e.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.common.data.DataHolder` v1 @kind this, `com.huawei.hms.common.sqlite.HMSCursorWrapper` v2 @kind object, `int` v3 , `android.os.Bundle` v4 @kind object) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:(Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;ILandroid/os/Bundle;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1f55b4.  call temp:= `getColumnNames`(v2) @signature `Landroid/database/CursorWrapper;.getColumnNames:()[Ljava/lang/String;` @kind virtual;
  #L1f55ba.  v0:= temp @kind object;
  #L1f55bc.  call temp:= `getCursorWindows`(v2) @signature `Lcom/huawei/hms/common/data/DataHolder;.getCursorWindows:(Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;)[Landroid/database/CursorWindow;` @kind static;
  #L1f55c2.  v2:= temp @kind object;
  #L1f55c4.  call `<init>`(v1, v0, v2, v3, v4) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:([Ljava/lang/String;[Landroid/database/CursorWindow;ILandroid/os/Bundle;)V` @kind direct;
  #L1f55ca.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.common.data.DataHolder` v1 @kind this, `java.lang.String`[] v2 @kind object, `android.database.CursorWindow`[] v3 @kind object, `int` v4 , `android.os.Bundle` v5 @kind object) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:([Ljava/lang/String;[Landroid/database/CursorWindow;ILandroid/os/Bundle;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1f561c.  call `<init>`(v1) @signature `Lcom/huawei/hms/common/internal/safeparcel/AbstractSafeParcelable;.<init>:()V` @kind direct;
  #L1f5622.  v0:= "columnsP cannot be null" @kind object;
  #L1f5626.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1f562c.  v0:= "cursorWindowP cannot be null" @kind object;
  #L1f5630.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1f5636.  v0:= 0I;
  #L1f5638.  v1.`com.huawei.hms.common.data.DataHolder.mClosed` @type ^`boolean` := v0 @kind boolean;
  #L1f563c.  v0:= 1I;
  #L1f563e.  v1.`com.huawei.hms.common.data.DataHolder.isInstance` @type ^`boolean` := v0 @kind boolean;
  #L1f5642.  v1.`com.huawei.hms.common.data.DataHolder.version` @type ^`int` := v0;
  #L1f5646.  v1.`com.huawei.hms.common.data.DataHolder.columns` @type ^`java.lang.String`[] := v2 @kind object;
  #L1f564a.  v1.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] := v3 @kind object;
  #L1f564e.  v1.`com.huawei.hms.common.data.DataHolder.statusCode` @type ^`int` := v4;
  #L1f5652.  v1.`com.huawei.hms.common.data.DataHolder.metadata` @type ^`android.os.Bundle` := v5 @kind object;
  #L1f5656.  call `collectColumsAndCount`(v1) @signature `Lcom/huawei/hms/common/data/DataHolder;.collectColumsAndCount:()V` @kind virtual;
  #L1f565c.  return @kind void;
}
procedure `com.huawei.hms.common.data.DataHolder$Builder` `builder`(`java.lang.String`[] v2 @kind object) @signature `Lcom/huawei/hms/common/data/DataHolder;.builder:([Ljava/lang/String;)Lcom/huawei/hms/common/data/DataHolder$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1f4fa0.  v0:= new `com.huawei.hms.common.data.DataHolder$Builder`;
  #L1f4fa4.  v1:= 0I;
  #L1f4fa6.  call `<init>`(v0, v2, v1, v1) @signature `Lcom/huawei/hms/common/data/DataHolder$Builder;.<init>:([Ljava/lang/String;Ljava/lang/String;Lcom/huawei/hms/common/data/DataHolder$1;)V` @kind direct;
  #L1f4fac.  return v0 @kind object;
}
procedure `void` `checkAvailable`(`com.huawei.hms.common.data.DataHolder` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/huawei/hms/common/data/DataHolder;.checkAvailable:(Ljava/lang/String;I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1f5670.  v0:= v1.`com.huawei.hms.common.data.DataHolder.columnsBundle` @type ^`android.os.Bundle` @kind object;
  #L1f5674.  if v0 == 0 then goto L1f56d0;
  #L1f5678.  call temp:= `containsKey`(v0, v2) @signature `Landroid/os/Bundle;.containsKey:(Ljava/lang/String;)Z` @kind virtual;
  #L1f567e.  v0:= temp;
  #L1f5680.  if v0 != 0 then goto L1f5686;
  #L1f5684.  goto L1f56d0;
  #L1f5686.  call temp:= `isClosed`(v1) @signature `Lcom/huawei/hms/common/data/DataHolder;.isClosed:()Z` @kind virtual;
  #L1f568c.  v2:= temp;
  #L1f568e.  if v2 == 0 then goto L1f5698;
  #L1f5692.  v2:= "buffer has been closed" @kind object;
  #L1f5696.  goto L1f56f2;
  #L1f5698.  if v3 < 0 then goto L1f56ac;
  #L1f569c.  v2:= v1.`com.huawei.hms.common.data.DataHolder.dataCount` @type ^`int`;
  #L1f56a0.  if v3 < v2 then goto L1f56a6;
  #L1f56a4.  goto L1f56ac;
  #L1f56a6.  v2:= "" @kind object;
  #L1f56aa.  goto L1f56f2;
  #L1f56ac.  v2:= new `java.lang.StringBuilder`;
  #L1f56b0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f56b6.  v0:= "row is out of index:" @kind object;
  #L1f56ba.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f56c0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f56c6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f56cc.  v2:= temp @kind object;
  #L1f56ce.  goto L1f56f2;
  #L1f56d0.  v3:= new `java.lang.StringBuilder`;
  #L1f56d4.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f56da.  v0:= "cannot find column: " @kind object;
  #L1f56de.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f56e4.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f56ea.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f56f0.  v2:= temp @kind object;
  #L1f56f2.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1f56f8.  v3:= temp;
  #L1f56fa.  call `checkArgument`(v3, v2) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkArgument:(ZLjava/lang/Object;)V` @kind static;
  #L1f5700.  return @kind void;
}
procedure `com.huawei.hms.common.data.DataHolder` `empty`(`int` v3 ) @signature `Lcom/huawei/hms/common/data/DataHolder;.empty:(I)Lcom/huawei/hms/common/data/DataHolder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1f4f7c.  v0:= new `com.huawei.hms.common.data.DataHolder`;
  #L1f4f80.  v1:= `@@com.huawei.hms.common.data.DataHolder.BUILDER` @type ^`com.huawei.hms.common.data.DataHolder$Builder` @kind object;
  #L1f4f84.  v2:= 0I;
  #L1f4f86.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/huawei/hms/common/data/DataHolder;.<init>:(Lcom/huawei/hms/common/data/DataHolder$Builder;ILandroid/os/Bundle;)V` @kind direct;
  #L1f4f8c.  return v0 @kind object;
}
procedure `android.database.CursorWindow`[] `getCursorWindows`(`com.huawei.hms.common.data.DataHolder$Builder` v2 @kind object, `int` v3 ) @signature `Lcom/huawei/hms/common/data/DataHolder;.getCursorWindows:(Lcom/huawei/hms/common/data/DataHolder$Builder;I)[Landroid/database/CursorWindow;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1f4c48.  call temp:= `access$200`(v2) @signature `Lcom/huawei/hms/common/data/DataHolder$Builder;.access$200:(Lcom/huawei/hms/common/data/DataHolder$Builder;)[Ljava/lang/String;` @kind static;
  #L1f4c4e.  v0:= temp @kind object;
  #L1f4c50.  v0:= length @variable v0;
  #L1f4c52.  v1:= 0I;
  #L1f4c54.  if v0 != 0 then goto L1f4c5e;
  #L1f4c58.  v2:= new `android.database.CursorWindow`[v1];
  #L1f4c5c.  return v2 @kind object;
  #L1f4c5e.  if v3 < 0 then goto L1f4c76;
  #L1f4c62.  call temp:= `access$300`(v2) @signature `Lcom/huawei/hms/common/data/DataHolder$Builder;.access$300:(Lcom/huawei/hms/common/data/DataHolder$Builder;)Ljava/util/ArrayList;` @kind static;
  #L1f4c68.  v0:= temp @kind object;
  #L1f4c6a.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1f4c70.  v0:= temp;
  #L1f4c72.  if v3 < v0 then goto L1f4c86;
  #L1f4c76.  call temp:= `access$300`(v2) @signature `Lcom/huawei/hms/common/data/DataHolder$Builder;.access$300:(Lcom/huawei/hms/common/data/DataHolder$Builder;)Ljava/util/ArrayList;` @kind static;
  #L1f4c7c.  v3:= temp @kind object;
  #L1f4c7e.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1f4c84.  v3:= temp;
  #L1f4c86.  call temp:= `access$300`(v2) @signature `Lcom/huawei/hms/common/data/DataHolder$Builder;.access$300:(Lcom/huawei/hms/common/data/DataHolder$Builder;)Ljava/util/ArrayList;` @kind static;
  #L1f4c8c.  v0:= temp @kind object;
  #L1f4c8e.  call temp:= `subList`(v0, v1, v3) @signature `Ljava/util/ArrayList;.subList:(II)Ljava/util/List;` @kind virtual;
  #L1f4c94.  v0:= temp @kind object;
  #L1f4c96.  call temp:= `iterCursorWindow`(v2, v3, v0) @signature `Lcom/huawei/hms/common/data/DataHolder;.iterCursorWindow:(Lcom/huawei/hms/common/data/DataHolder$Builder;ILjava/util/List;)Ljava/util/ArrayList;` @kind static;
  #L1f4c9c.  v2:= temp @kind object;
  #L1f4c9e.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1f4ca4.  v3:= temp;
  #L1f4ca6.  v3:= new `android.database.CursorWindow`[v3];
  #L1f4caa.  call temp:= `toArray`(v2, v3) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L1f4cb0.  v2:= temp @kind object;
  #L1f4cb2.  v2:= (`android.database.CursorWindow`[]) v2 @kind object;
  #L1f4cb6.  return v2 @kind object;
}
procedure `android.database.CursorWindow`[] `getCursorWindows`(`com.huawei.hms.common.sqlite.HMSCursorWrapper` v5 @kind object) @signature `Lcom/huawei/hms/common/data/DataHolder;.getCursorWindows:(Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;)[Landroid/database/CursorWindow;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1f4cc8.  v0:= new `java.util.ArrayList`;
  #L1f4ccc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1f4cd2.  v1:= 0I;
  #L1f4cd4.  call temp:= `getCount`(v5) @signature `Landroid/database/CursorWrapper;.getCount:()I` @kind virtual;
  #L1f4cda.  v2:= temp;
  #L1f4cdc.  call temp:= `getWindow`(v5) @signature `Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;.getWindow:()Landroid/database/CursorWindow;` @kind virtual;
  #L1f4ce2.  v3:= temp @kind object;
  #L1f4ce4.  if v3 == 0 then goto L1f4d12;
  #L1f4ce8.  call temp:= `getStartPosition`(v3) @signature `Landroid/database/CursorWindow;.getStartPosition:()I` @kind virtual;
  #L1f4cee.  v4:= temp;
  #L1f4cf0.  if v4 != 0 then goto L1f4d12;
  #L1f4cf4.  call `acquireReference`(v3) @signature `Landroid/database/CursorWindow;.acquireReference:()V` @kind virtual;
  #L1f4cfa.  v4:= 0I;
  #L1f4cfc.  call `setWindow`(v5, v4) @signature `Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;.setWindow:(Landroid/database/CursorWindow;)V` @kind virtual;
  #L1f4d02.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f4d08.  call temp:= `getNumRows`(v3) @signature `Landroid/database/CursorWindow;.getNumRows:()I` @kind virtual;
  #L1f4d0e.  v3:= temp;
  #L1f4d10.  goto L1f4d14;
  #L1f4d12.  v3:= 0I;
  #L1f4d14.  call temp:= `iterCursorWrapper`(v5, v3, v2) @signature `Lcom/huawei/hms/common/data/DataHolder;.iterCursorWrapper:(Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;II)Ljava/util/ArrayList;` @kind static;
  #L1f4d1a.  v2:= temp @kind object;
  #L1f4d1c.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L1f4d22.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1f4d28.  v2:= temp;
  #L1f4d2a.  v2:= new `android.database.CursorWindow`[v2];
  #L1f4d2e.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L1f4d34.  v0:= temp @kind object;
  #L1f4d36.  v0:= (`android.database.CursorWindow`[]) v0 @kind object;
  #L1f4d3a.  call `close`(v5) @signature `Landroid/database/CursorWrapper;.close:()V` @kind virtual;
  #L1f4d40.  return v0 @kind object;
  #L1f4d42.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f4d44.  v2:= "DataHolder" @kind object;
  #L1f4d48.  v3:= new `java.lang.StringBuilder`;
  #L1f4d4c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f4d52.  v4:= "fail to getCursorWindows: " @kind object;
  #L1f4d56.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f4d5c.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1f4d62.  v0:= temp @kind object;
  #L1f4d64.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f4d6a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f4d70.  v0:= temp @kind object;
  #L1f4d72.  call `e`(v2, v0) @signature `Lcom/huawei/hms/support/log/HMSLog;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1f4d78.  v0:= new `android.database.CursorWindow`[v1];
  #L1f4d7c.  call `close`(v5) @signature `Landroid/database/CursorWrapper;.close:()V` @kind virtual;
  #L1f4d82.  return v0 @kind object;
  #L1f4d84.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f4d86.  call `close`(v5) @signature `Landroid/database/CursorWrapper;.close:()V` @kind virtual;
  #L1f4d8c.  throw v0;
  catch `java.lang.Throwable` @[L1f4cd4..L1f4d3a] goto L1f4d42;
  catch `java.lang.Throwable` @[L1f4d48..L1f4d7c] goto L1f4d84;
}
procedure `java.util.ArrayList` `iterCursorWindow`(`com.huawei.hms.common.data.DataHolder$Builder` v10 @kind object, `int` v11 , `java.util.List` v12 @kind object) @signature `Lcom/huawei/hms/common/data/DataHolder;.iterCursorWindow:(Lcom/huawei/hms/common/data/DataHolder$Builder;ILjava/util/List;)Ljava/util/ArrayList;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1f52bc.  v0:= new `java.util.ArrayList`;
  #L1f52c0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1f52c6.  v1:= new `android.database.CursorWindow`;
  #L1f52ca.  v2:= 0I;
  #L1f52cc.  call `<init>`(v1, v2) @signature `Landroid/database/CursorWindow;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f52d2.  call temp:= `access$200`(v10) @signature `Lcom/huawei/hms/common/data/DataHolder$Builder;.access$200:(Lcom/huawei/hms/common/data/DataHolder$Builder;)[Ljava/lang/String;` @kind static;
  #L1f52d8.  v3:= temp @kind object;
  #L1f52da.  v3:= length @variable v3;
  #L1f52dc.  call temp:= `setNumColumns`(v1, v3) @signature `Landroid/database/CursorWindow;.setNumColumns:(I)Z` @kind virtual;
  #L1f52e2.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f52e8.  v3:= 0I;
  #L1f52ea.  v4:= 0I;
  #L1f52ec.  if v4 >= v11 then goto L1f541c;
  #L1f52f0.  call temp:= `allocRow`(v1) @signature `Landroid/database/CursorWindow;.allocRow:()Z` @kind virtual;
  #L1f52f6.  v5:= temp;
  #L1f52f8.  v6:= "DataHolder" @kind object;
  #L1f52fc.  if v5 != 0 then goto L1f5348;
  #L1f5300.  v1:= "Failed to allocate a row" @kind object;
  #L1f5304.  call `d`(v6, v1) @signature `Lcom/huawei/hms/support/log/HMSLog;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1f530a.  v1:= new `android.database.CursorWindow`;
  #L1f530e.  call `<init>`(v1, v2) @signature `Landroid/database/CursorWindow;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f5314.  call `setStartPosition`(v1, v4) @signature `Landroid/database/CursorWindow;.setStartPosition:(I)V` @kind virtual;
  #L1f531a.  call temp:= `access$200`(v10) @signature `Lcom/huawei/hms/common/data/DataHolder$Builder;.access$200:(Lcom/huawei/hms/common/data/DataHolder$Builder;)[Ljava/lang/String;` @kind static;
  #L1f5320.  v5:= temp @kind object;
  #L1f5322.  v5:= length @variable v5;
  #L1f5324.  call temp:= `setNumColumns`(v1, v5) @signature `Landroid/database/CursorWindow;.setNumColumns:(I)Z` @kind virtual;
  #L1f532a.  call temp:= `allocRow`(v1) @signature `Landroid/database/CursorWindow;.allocRow:()Z` @kind virtual;
  #L1f5330.  v5:= temp;
  #L1f5332.  if v5 != 0 then goto L1f5342;
  #L1f5336.  v10:= "Failed to retry to allocate a row" @kind object;
  #L1f533a.  call `e`(v6, v10) @signature `Lcom/huawei/hms/support/log/HMSLog;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1f5340.  return v0 @kind object;
  #L1f5342.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f5348.  call temp:= `get`(v12, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1f534e.  v5:= temp @kind object;
  #L1f5350.  v5:= (`java.util.HashMap`) v5 @kind object;
  #L1f5354.  v7:= 1I;
  #L1f5356.  v8:= 0I;
  #L1f5358.  call temp:= `access$200`(v10) @signature `Lcom/huawei/hms/common/data/DataHolder$Builder;.access$200:(Lcom/huawei/hms/common/data/DataHolder$Builder;)[Ljava/lang/String;` @kind static;
  #L1f535e.  v9:= temp @kind object;
  #L1f5360.  v9:= length @variable v9;
  #L1f5362.  if v8 >= v9 then goto L1f538e;
  #L1f5366.  call temp:= `access$200`(v10) @signature `Lcom/huawei/hms/common/data/DataHolder$Builder;.access$200:(Lcom/huawei/hms/common/data/DataHolder$Builder;)[Ljava/lang/String;` @kind static;
  #L1f536c.  v7:= temp @kind object;
  #L1f536e.  v7:= v7[v8] @kind object;
  #L1f5372.  call temp:= `get`(v5, v7) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1f5378.  v7:= temp @kind object;
  #L1f537a.  call temp:= `putValue`(v1, v7, v4, v8) @signature `Lcom/huawei/hms/common/data/DataHolder;.putValue:(Landroid/database/CursorWindow;Ljava/lang/Object;II)Z` @kind static;
  #L1f5380.  v7:= temp;
  #L1f5382.  if v7 != 0 then goto L1f5388;
  #L1f5386.  goto L1f538e;
  #L1f5388.  v8:= v8 + 1;
  #L1f538c.  goto L1f5358;
  #L1f538e.  if v7 != 0 then goto L1f53e8;
  #L1f5392.  v11:= new `java.lang.StringBuilder`;
  #L1f5396.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f539c.  v12:= "fail to put data for row " @kind object;
  #L1f53a0.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f53a6.  call temp:= `append`(v11, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f53ac.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f53b2.  v11:= temp @kind object;
  #L1f53b4.  call `d`(v6, v11) @signature `Lcom/huawei/hms/support/log/HMSLog;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1f53ba.  call `freeLastRow`(v1) @signature `Landroid/database/CursorWindow;.freeLastRow:()V` @kind virtual;
  #L1f53c0.  v11:= new `android.database.CursorWindow`;
  #L1f53c4.  call `<init>`(v11, v2) @signature `Landroid/database/CursorWindow;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f53ca.  call `setStartPosition`(v11, v4) @signature `Landroid/database/CursorWindow;.setStartPosition:(I)V` @kind virtual;
  #L1f53d0.  call temp:= `access$200`(v10) @signature `Lcom/huawei/hms/common/data/DataHolder$Builder;.access$200:(Lcom/huawei/hms/common/data/DataHolder$Builder;)[Ljava/lang/String;` @kind static;
  #L1f53d6.  v10:= temp @kind object;
  #L1f53d8.  v10:= length @variable v10;
  #L1f53da.  call temp:= `setNumColumns`(v11, v10) @signature `Landroid/database/CursorWindow;.setNumColumns:(I)Z` @kind virtual;
  #L1f53e0.  call temp:= `add`(v0, v11) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f53e6.  goto L1f541c;
  #L1f53e8.  v4:= v4 + 1;
  #L1f53ec.  goto L1f52ec;
  #L1f53f0.  v10:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1f53f2.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1f53f8.  v11:= temp @kind object;
  #L1f53fa.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1f5400.  v12:= temp;
  #L1f5402.  if v12 == 0 then goto L1f541a;
  #L1f5406.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1f540c.  v12:= temp @kind object;
  #L1f540e.  v12:= (`android.database.CursorWindow`) v12 @kind object;
  #L1f5412.  call `close`(v12) @signature `Landroid/database/CursorWindow;.close:()V` @kind virtual;
  #L1f5418.  goto L1f53fa;
  #L1f541a.  throw v10;
  #L1f541c.  return v0 @kind object;
  catch `java.lang.RuntimeException` @[L1f52f0..L1f52f8] goto L1f53f0;
  catch `java.lang.RuntimeException` @[L1f5300..L1f53e6] goto L1f53f0;
}
procedure `java.util.ArrayList` `iterCursorWrapper`(`com.huawei.hms.common.sqlite.HMSCursorWrapper` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/huawei/hms/common/data/DataHolder;.iterCursorWrapper:(Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;II)Ljava/util/ArrayList;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1f5448.  v0:= new `java.util.ArrayList`;
  #L1f544c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1f5452.  if v4 >= v5 then goto L1f54bc;
  #L1f5456.  call temp:= `moveToPosition`(v3, v4) @signature `Landroid/database/CursorWrapper;.moveToPosition:(I)Z` @kind virtual;
  #L1f545c.  v1:= temp;
  #L1f545e.  if v1 == 0 then goto L1f54bc;
  #L1f5462.  call temp:= `getWindow`(v3) @signature `Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;.getWindow:()Landroid/database/CursorWindow;` @kind virtual;
  #L1f5468.  v1:= temp @kind object;
  #L1f546a.  v2:= 0I;
  #L1f546c.  if v1 != 0 then goto L1f5488;
  #L1f5470.  v1:= new `android.database.CursorWindow`;
  #L1f5474.  call `<init>`(v1, v2) @signature `Landroid/database/CursorWindow;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f547a.  call `setStartPosition`(v1, v4) @signature `Landroid/database/CursorWindow;.setStartPosition:(I)V` @kind virtual;
  #L1f5480.  call `fillWindow`(v3, v4, v1) @signature `Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;.fillWindow:(ILandroid/database/CursorWindow;)V` @kind virtual;
  #L1f5486.  goto L1f5494;
  #L1f5488.  call `acquireReference`(v1) @signature `Landroid/database/CursorWindow;.acquireReference:()V` @kind virtual;
  #L1f548e.  call `setWindow`(v3, v2) @signature `Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;.setWindow:(Landroid/database/CursorWindow;)V` @kind virtual;
  #L1f5494.  call temp:= `getNumRows`(v1) @signature `Landroid/database/CursorWindow;.getNumRows:()I` @kind virtual;
  #L1f549a.  v4:= temp;
  #L1f549c.  if v4 != 0 then goto L1f54a2;
  #L1f54a0.  goto L1f54bc;
  #L1f54a2.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f54a8.  call temp:= `getNumRows`(v1) @signature `Landroid/database/CursorWindow;.getNumRows:()I` @kind virtual;
  #L1f54ae.  v4:= temp;
  #L1f54b0.  call temp:= `getStartPosition`(v1) @signature `Landroid/database/CursorWindow;.getStartPosition:()I` @kind virtual;
  #L1f54b6.  v1:= temp;
  #L1f54b8.  v4:= v4 + v1 @kind int;
  #L1f54ba.  goto L1f5452;
  #L1f54bc.  return v0 @kind object;
}
procedure `boolean` `putValue`(`android.database.CursorWindow` v2 @kind object, `java.lang.Object` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/huawei/hms/common/data/DataHolder;.putValue:(Landroid/database/CursorWindow;Ljava/lang/Object;II)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1f4e5c.  if v3 != 0 then goto L1f4e6a;
  #L1f4e60.  call temp:= `putNull`(v2, v4, v5) @signature `Landroid/database/CursorWindow;.putNull:(II)Z` @kind virtual;
  #L1f4e66.  v2:= temp;
  #L1f4e68.  return v2;
  #L1f4e6a.  v0:= instanceof @variable v3 @type ^`java.lang.Boolean` @kind boolean;
  #L1f4e6e.  if v0 == 0 then goto L1f4e96;
  #L1f4e72.  v3:= (`java.lang.Boolean`) v3 @kind object;
  #L1f4e76.  call temp:= `booleanValue`(v3) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L1f4e7c.  v3:= temp;
  #L1f4e7e.  if v3 == 0 then goto L1f4e88;
  #L1f4e82.  v0:= 1L;
  #L1f4e86.  goto L1f4e8c;
  #L1f4e88.  v0:= 0L;
  #L1f4e8c.  call temp:= `putLong`(v2, v0, v4, v5) @signature `Landroid/database/CursorWindow;.putLong:(JII)Z` @kind virtual;
  #L1f4e92.  v2:= temp;
  #L1f4e94.  return v2;
  #L1f4e96.  v0:= instanceof @variable v3 @type ^`java.lang.Integer` @kind boolean;
  #L1f4e9a.  if v0 == 0 then goto L1f4eb6;
  #L1f4e9e.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L1f4ea2.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1f4ea8.  v3:= temp;
  #L1f4eaa.  v0:= (`long`) v3 @kind i2l;
  #L1f4eac.  call temp:= `putLong`(v2, v0, v4, v5) @signature `Landroid/database/CursorWindow;.putLong:(JII)Z` @kind virtual;
  #L1f4eb2.  v2:= temp;
  #L1f4eb4.  return v2;
  #L1f4eb6.  v0:= instanceof @variable v3 @type ^`java.lang.Long` @kind boolean;
  #L1f4eba.  if v0 == 0 then goto L1f4ed4;
  #L1f4ebe.  v3:= (`java.lang.Long`) v3 @kind object;
  #L1f4ec2.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1f4ec8.  v0:= temp @kind wide;
  #L1f4eca.  call temp:= `putLong`(v2, v0, v4, v5) @signature `Landroid/database/CursorWindow;.putLong:(JII)Z` @kind virtual;
  #L1f4ed0.  v2:= temp;
  #L1f4ed2.  return v2;
  #L1f4ed4.  v0:= instanceof @variable v3 @type ^`java.lang.Float` @kind boolean;
  #L1f4ed8.  if v0 == 0 then goto L1f4ef4;
  #L1f4edc.  v3:= (`java.lang.Float`) v3 @kind object;
  #L1f4ee0.  call temp:= `floatValue`(v3) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L1f4ee6.  v3:= temp;
  #L1f4ee8.  v0:= (`double`) v3 @kind f2d;
  #L1f4eea.  call temp:= `putDouble`(v2, v0, v4, v5) @signature `Landroid/database/CursorWindow;.putDouble:(DII)Z` @kind virtual;
  #L1f4ef0.  v2:= temp;
  #L1f4ef2.  return v2;
  #L1f4ef4.  v0:= instanceof @variable v3 @type ^`java.lang.Double` @kind boolean;
  #L1f4ef8.  if v0 == 0 then goto L1f4f12;
  #L1f4efc.  v3:= (`java.lang.Double`) v3 @kind object;
  #L1f4f00.  call temp:= `doubleValue`(v3) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L1f4f06.  v0:= temp @kind wide;
  #L1f4f08.  call temp:= `putDouble`(v2, v0, v4, v5) @signature `Landroid/database/CursorWindow;.putDouble:(DII)Z` @kind virtual;
  #L1f4f0e.  v2:= temp;
  #L1f4f10.  return v2;
  #L1f4f12.  v0:= instanceof @variable v3 @type ^`java.lang.String` @kind boolean;
  #L1f4f16.  if v0 == 0 then goto L1f4f28;
  #L1f4f1a.  v3:= (`java.lang.String`) v3 @kind object;
  #L1f4f1e.  call temp:= `putString`(v2, v3, v4, v5) @signature `Landroid/database/CursorWindow;.putString:(Ljava/lang/String;II)Z` @kind virtual;
  #L1f4f24.  v2:= temp;
  #L1f4f26.  return v2;
  #L1f4f28.  v0:= instanceof @variable v3 @type ^`byte`[] @kind boolean;
  #L1f4f2c.  if v0 == 0 then goto L1f4f3e;
  #L1f4f30.  v3:= (`byte`[]) v3 @kind object;
  #L1f4f34.  call temp:= `putBlob`(v2, v3, v4, v5) @signature `Landroid/database/CursorWindow;.putBlob:([BII)Z` @kind virtual;
  #L1f4f3a.  v2:= temp;
  #L1f4f3c.  return v2;
  #L1f4f3e.  v2:= new `java.lang.IllegalArgumentException`;
  #L1f4f42.  v4:= new `java.lang.StringBuilder`;
  #L1f4f46.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f4f4c.  v5:= "unsupported type for column: " @kind object;
  #L1f4f50.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f4f56.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f4f5c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f4f62.  v3:= temp @kind object;
  #L1f4f64.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f4f6a.  throw v2;
}
procedure `void` `close`(`com.huawei.hms.common.data.DataHolder` v4 @kind this) @signature `Lcom/huawei/hms/common/data/DataHolder;.close:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f5714.  @monitorenter v4
  #L1f5716.  v0:= v4.`com.huawei.hms.common.data.DataHolder.mClosed` @type ^`boolean` @kind boolean;
  #L1f571a.  if v0 != 0 then goto L1f5740;
  #L1f571e.  v0:= v4.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f5722.  v1:= length @variable v0;
  #L1f5724.  v2:= 0I;
  #L1f5726.  if v2 >= v1 then goto L1f573a;
  #L1f572a.  v3:= v0[v2] @kind object;
  #L1f572e.  call `close`(v3) @signature `Landroid/database/CursorWindow;.close:()V` @kind virtual;
  #L1f5734.  v2:= v2 + 1;
  #L1f5738.  goto L1f5726;
  #L1f573a.  v0:= 1I;
  #L1f573c.  v4.`com.huawei.hms.common.data.DataHolder.mClosed` @type ^`boolean` := v0 @kind boolean;
  #L1f5740.  @monitorexit v4
  #L1f5742.  return @kind void;
  #L1f5744.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f5746.  @monitorexit v4
  #L1f5748.  throw v0;
  catch `java.lang.Throwable` @[L1f5716..L1f5740] goto L1f5744;
}
procedure `void` `collectColumsAndCount`(`com.huawei.hms.common.data.DataHolder` v4 @kind this) @signature `Lcom/huawei/hms/common/data/DataHolder;.collectColumsAndCount:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f5768.  v0:= new `android.os.Bundle`;
  #L1f576c.  call `<init>`(v0) @signature `Landroid/os/Bundle;.<init>:()V` @kind direct;
  #L1f5772.  v4.`com.huawei.hms.common.data.DataHolder.columnsBundle` @type ^`android.os.Bundle` := v0 @kind object;
  #L1f5776.  v0:= 0I;
  #L1f5778.  v1:= 0I;
  #L1f577a.  v2:= v4.`com.huawei.hms.common.data.DataHolder.columns` @type ^`java.lang.String`[] @kind object;
  #L1f577e.  v3:= length @variable v2;
  #L1f5780.  if v1 >= v3 then goto L1f5798;
  #L1f5784.  v3:= v4.`com.huawei.hms.common.data.DataHolder.columnsBundle` @type ^`android.os.Bundle` @kind object;
  #L1f5788.  v2:= v2[v1] @kind object;
  #L1f578c.  call `putInt`(v3, v2, v1) @signature `Landroid/os/Bundle;.putInt:(Ljava/lang/String;I)V` @kind virtual;
  #L1f5792.  v1:= v1 + 1;
  #L1f5796.  goto L1f577a;
  #L1f5798.  v1:= v4.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f579c.  v1:= length @variable v1;
  #L1f579e.  v1:= new `int`[v1];
  #L1f57a2.  v4.`com.huawei.hms.common.data.DataHolder.perCursorCounts` @type ^`int`[] := v1 @kind object;
  #L1f57a6.  v1:= 0I;
  #L1f57a8.  v2:= v4.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f57ac.  v3:= length @variable v2;
  #L1f57ae.  if v0 >= v3 then goto L1f57de;
  #L1f57b2.  v3:= v4.`com.huawei.hms.common.data.DataHolder.perCursorCounts` @type ^`int`[] @kind object;
  #L1f57b6.  v3[v0]:= v1;
  #L1f57ba.  v1:= v2[v0] @kind object;
  #L1f57be.  call temp:= `getStartPosition`(v1) @signature `Landroid/database/CursorWindow;.getStartPosition:()I` @kind virtual;
  #L1f57c4.  v1:= temp;
  #L1f57c6.  v2:= v4.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f57ca.  v2:= v2[v0] @kind object;
  #L1f57ce.  call temp:= `getNumRows`(v2) @signature `Landroid/database/CursorWindow;.getNumRows:()I` @kind virtual;
  #L1f57d4.  v2:= temp;
  #L1f57d6.  v1:= v1 + v2 @kind int;
  #L1f57d8.  v0:= v0 + 1;
  #L1f57dc.  goto L1f57a8;
  #L1f57de.  v4.`com.huawei.hms.common.data.DataHolder.dataCount` @type ^`int` := v1;
  #L1f57e2.  return @kind void;
}
procedure `void` `copyToBuffer`(`com.huawei.hms.common.data.DataHolder` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `android.database.CharArrayBuffer` v5 @kind object) @signature `Lcom/huawei/hms/common/data/DataHolder;.copyToBuffer:(Ljava/lang/String;IILandroid/database/CharArrayBuffer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1f57f4.  call `checkAvailable`(v1, v2, v3) @signature `Lcom/huawei/hms/common/data/DataHolder;.checkAvailable:(Ljava/lang/String;I)V` @kind direct;
  #L1f57fa.  v0:= v1.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f57fe.  v4:= v0[v4] @kind object;
  #L1f5802.  v0:= v1.`com.huawei.hms.common.data.DataHolder.columnsBundle` @type ^`android.os.Bundle` @kind object;
  #L1f5806.  call temp:= `getInt`(v0, v2) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L1f580c.  v2:= temp;
  #L1f580e.  call `copyStringToBuffer`(v4, v3, v2, v5) @signature `Landroid/database/CursorWindow;.copyStringToBuffer:(IILandroid/database/CharArrayBuffer;)V` @kind virtual;
  #L1f5814.  return @kind void;
}
procedure `void` `finalize`(`com.huawei.hms.common.data.DataHolder` v1 @kind this) @signature `Lcom/huawei/hms/common/data/DataHolder;.finalize:()V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L1f5828.  v0:= v1.`com.huawei.hms.common.data.DataHolder.isInstance` @type ^`boolean` @kind boolean;
  #L1f582c.  if v0 == 0 then goto L1f584c;
  #L1f5830.  v0:= v1.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f5834.  v0:= length @variable v0;
  #L1f5836.  if v0 <= 0 then goto L1f584c;
  #L1f583a.  call temp:= `isClosed`(v1) @signature `Lcom/huawei/hms/common/data/DataHolder;.isClosed:()Z` @kind virtual;
  #L1f5840.  v0:= temp;
  #L1f5842.  if v0 != 0 then goto L1f584c;
  #L1f5846.  call `close`(v1) @signature `Lcom/huawei/hms/common/data/DataHolder;.close:()V` @kind virtual;
  #L1f584c.  call `finalize`(v1) @signature `Ljava/lang/Object;.finalize:()V` @kind super;
  #L1f5852.  return @kind void;
}
procedure `int` `getCount`(`com.huawei.hms.common.data.DataHolder` v1 @kind this) @signature `Lcom/huawei/hms/common/data/DataHolder;.getCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1f4fc0.  v0:= v1.`com.huawei.hms.common.data.DataHolder.dataCount` @type ^`int`;
  #L1f4fc4.  return v0;
}
procedure `android.os.Bundle` `getMetadata`(`com.huawei.hms.common.data.DataHolder` v1 @kind this) @signature `Lcom/huawei/hms/common/data/DataHolder;.getMetadata:()Landroid/os/Bundle;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1f4db8.  v0:= v1.`com.huawei.hms.common.data.DataHolder.metadata` @type ^`android.os.Bundle` @kind object;
  #L1f4dbc.  return v0 @kind object;
}
procedure `int` `getStatusCode`(`com.huawei.hms.common.data.DataHolder` v1 @kind this) @signature `Lcom/huawei/hms/common/data/DataHolder;.getStatusCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1f4fd8.  v0:= v1.`com.huawei.hms.common.data.DataHolder.statusCode` @type ^`int`;
  #L1f4fdc.  return v0;
}
procedure `java.lang.Object` `getValue`(`com.huawei.hms.common.data.DataHolder` v3 @kind this, `java.lang.String` v4 @kind object, `int` v5 , `int` v6 , `java.lang.String` v7 @kind object) @signature `Lcom/huawei/hms/common/data/DataHolder;.getValue:(Ljava/lang/String;IILjava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1f506c.  call temp:= `hashCode`(v7) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1f5072.  v0:= temp;
  #L1f5074.  v1:= 1I;
  #L1f5076.  v2:= 0I;
  #L1f5078.  goto L1f524c;
  #L1f507e.  goto L1f510c;
  #L1f5080.  v0:= "type_byte_array" @kind object;
  #L1f5084.  call temp:= `equals`(v7, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f508a.  v7:= temp;
  #L1f508c.  if v7 == 0 then goto L1f510c;
  #L1f5090.  v7:= 6I;
  #L1f5092.  goto L1f510e;
  #L1f5094.  v0:= "type_string" @kind object;
  #L1f5098.  call temp:= `equals`(v7, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f509e.  v7:= temp;
  #L1f50a0.  if v7 == 0 then goto L1f510c;
  #L1f50a4.  v7:= 2I;
  #L1f50a6.  goto L1f510e;
  #L1f50a8.  v0:= "type_long" @kind object;
  #L1f50ac.  call temp:= `equals`(v7, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f50b2.  v7:= temp;
  #L1f50b4.  if v7 == 0 then goto L1f510c;
  #L1f50b8.  v7:= 1I;
  #L1f50ba.  goto L1f510e;
  #L1f50bc.  v0:= "type_double" @kind object;
  #L1f50c0.  call temp:= `equals`(v7, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f50c6.  v7:= temp;
  #L1f50c8.  if v7 == 0 then goto L1f510c;
  #L1f50cc.  v7:= 5I;
  #L1f50ce.  goto L1f510e;
  #L1f50d0.  v0:= "type_int" @kind object;
  #L1f50d4.  call temp:= `equals`(v7, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f50da.  v7:= temp;
  #L1f50dc.  if v7 == 0 then goto L1f510c;
  #L1f50e0.  v7:= 0I;
  #L1f50e2.  goto L1f510e;
  #L1f50e4.  v0:= "type_boolean" @kind object;
  #L1f50e8.  call temp:= `equals`(v7, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f50ee.  v7:= temp;
  #L1f50f0.  if v7 == 0 then goto L1f510c;
  #L1f50f4.  v7:= 3I;
  #L1f50f6.  goto L1f510e;
  #L1f50f8.  v0:= "type_float" @kind object;
  #L1f50fc.  call temp:= `equals`(v7, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f5102.  v7:= temp;
  #L1f5104.  if v7 == 0 then goto L1f510c;
  #L1f5108.  v7:= 4I;
  #L1f510a.  goto L1f510e;
  #L1f510c.  v7:= -1I;
  #L1f510e.  goto L1f5288;
  #L1f5114.  v4:= 0I;
  #L1f5116.  return v4 @kind object;
  #L1f5118.  call `checkAvailable`(v3, v4, v5) @signature `Lcom/huawei/hms/common/data/DataHolder;.checkAvailable:(Ljava/lang/String;I)V` @kind direct;
  #L1f511e.  v7:= v3.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f5122.  v6:= v7[v6] @kind object;
  #L1f5126.  v7:= v3.`com.huawei.hms.common.data.DataHolder.columnsBundle` @type ^`android.os.Bundle` @kind object;
  #L1f512a.  call temp:= `getInt`(v7, v4) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L1f5130.  v4:= temp;
  #L1f5132.  call temp:= `getBlob`(v6, v5, v4) @signature `Landroid/database/CursorWindow;.getBlob:(II)[B` @kind virtual;
  #L1f5138.  v4:= temp @kind object;
  #L1f513a.  return v4 @kind object;
  #L1f513c.  call `checkAvailable`(v3, v4, v5) @signature `Lcom/huawei/hms/common/data/DataHolder;.checkAvailable:(Ljava/lang/String;I)V` @kind direct;
  #L1f5142.  v7:= v3.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f5146.  v6:= v7[v6] @kind object;
  #L1f514a.  v7:= v3.`com.huawei.hms.common.data.DataHolder.columnsBundle` @type ^`android.os.Bundle` @kind object;
  #L1f514e.  call temp:= `getInt`(v7, v4) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L1f5154.  v4:= temp;
  #L1f5156.  call temp:= `getDouble`(v6, v5, v4) @signature `Landroid/database/CursorWindow;.getDouble:(II)D` @kind virtual;
  #L1f515c.  v4:= temp @kind wide;
  #L1f515e.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L1f5164.  v4:= temp @kind object;
  #L1f5166.  return v4 @kind object;
  #L1f5168.  call `checkAvailable`(v3, v4, v5) @signature `Lcom/huawei/hms/common/data/DataHolder;.checkAvailable:(Ljava/lang/String;I)V` @kind direct;
  #L1f516e.  v7:= v3.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f5172.  v6:= v7[v6] @kind object;
  #L1f5176.  v7:= v3.`com.huawei.hms.common.data.DataHolder.columnsBundle` @type ^`android.os.Bundle` @kind object;
  #L1f517a.  call temp:= `getInt`(v7, v4) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L1f5180.  v4:= temp;
  #L1f5182.  call temp:= `getFloat`(v6, v5, v4) @signature `Landroid/database/CursorWindow;.getFloat:(II)F` @kind virtual;
  #L1f5188.  v4:= temp;
  #L1f518a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L1f5190.  v4:= temp @kind object;
  #L1f5192.  return v4 @kind object;
  #L1f5194.  call `checkAvailable`(v3, v4, v5) @signature `Lcom/huawei/hms/common/data/DataHolder;.checkAvailable:(Ljava/lang/String;I)V` @kind direct;
  #L1f519a.  v7:= v3.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f519e.  v6:= v7[v6] @kind object;
  #L1f51a2.  v7:= v3.`com.huawei.hms.common.data.DataHolder.columnsBundle` @type ^`android.os.Bundle` @kind object;
  #L1f51a6.  call temp:= `getInt`(v7, v4) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L1f51ac.  v4:= temp;
  #L1f51ae.  call temp:= `getLong`(v6, v5, v4) @signature `Landroid/database/CursorWindow;.getLong:(II)J` @kind virtual;
  #L1f51b4.  v4:= temp @kind wide;
  #L1f51b6.  v6:= 1L;
  #L1f51ba.  v0:= lcmp(v4, v6);
  #L1f51be.  if v0 != 0 then goto L1f51c4;
  #L1f51c2.  goto L1f51c6;
  #L1f51c4.  v1:= 0I;
  #L1f51c6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1f51cc.  v4:= temp @kind object;
  #L1f51ce.  return v4 @kind object;
  #L1f51d0.  call `checkAvailable`(v3, v4, v5) @signature `Lcom/huawei/hms/common/data/DataHolder;.checkAvailable:(Ljava/lang/String;I)V` @kind direct;
  #L1f51d6.  v7:= v3.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f51da.  v6:= v7[v6] @kind object;
  #L1f51de.  v7:= v3.`com.huawei.hms.common.data.DataHolder.columnsBundle` @type ^`android.os.Bundle` @kind object;
  #L1f51e2.  call temp:= `getInt`(v7, v4) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L1f51e8.  v4:= temp;
  #L1f51ea.  call temp:= `getString`(v6, v5, v4) @signature `Landroid/database/CursorWindow;.getString:(II)Ljava/lang/String;` @kind virtual;
  #L1f51f0.  v4:= temp @kind object;
  #L1f51f2.  return v4 @kind object;
  #L1f51f4.  call `checkAvailable`(v3, v4, v5) @signature `Lcom/huawei/hms/common/data/DataHolder;.checkAvailable:(Ljava/lang/String;I)V` @kind direct;
  #L1f51fa.  v7:= v3.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f51fe.  v6:= v7[v6] @kind object;
  #L1f5202.  v7:= v3.`com.huawei.hms.common.data.DataHolder.columnsBundle` @type ^`android.os.Bundle` @kind object;
  #L1f5206.  call temp:= `getInt`(v7, v4) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L1f520c.  v4:= temp;
  #L1f520e.  call temp:= `getLong`(v6, v5, v4) @signature `Landroid/database/CursorWindow;.getLong:(II)J` @kind virtual;
  #L1f5214.  v4:= temp @kind wide;
  #L1f5216.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1f521c.  v4:= temp @kind object;
  #L1f521e.  return v4 @kind object;
  #L1f5220.  call `checkAvailable`(v3, v4, v5) @signature `Lcom/huawei/hms/common/data/DataHolder;.checkAvailable:(Ljava/lang/String;I)V` @kind direct;
  #L1f5226.  v7:= v3.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f522a.  v6:= v7[v6] @kind object;
  #L1f522e.  v7:= v3.`com.huawei.hms.common.data.DataHolder.columnsBundle` @type ^`android.os.Bundle` @kind object;
  #L1f5232.  call temp:= `getInt`(v7, v4) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L1f5238.  v4:= temp;
  #L1f523a.  call temp:= `getInt`(v6, v5, v4) @signature `Landroid/database/CursorWindow;.getInt:(II)I` @kind virtual;
  #L1f5240.  v4:= temp;
  #L1f5242.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1f5248.  v4:= temp @kind object;
  #L1f524a.  return v4 @kind object;
  #L1f524c.  switch v0
                  | -1092271849 => goto L1f50f8
                  | -870070237 => goto L1f50e4
                  | -675993238 => goto L1f50d0
                  | 445002870 => goto L1f50bc
                  | 519136353 => goto L1f50a8
                  | 878975158 => goto L1f5094
                  | 1300508295 => goto L1f5080
                  | else => goto L1f507e;
  #L1f5288.  switch v7
                  | 0 => goto L1f5220
                  | 1 => goto L1f51f4
                  | 2 => goto L1f51d0
                  | 3 => goto L1f5194
                  | 4 => goto L1f5168
                  | 5 => goto L1f513c
                  | 6 => goto L1f5118
                  | else => goto L1f5114;
}
procedure `int` `getWindowIndex`(`com.huawei.hms.common.data.DataHolder` v4 @kind this, `int` v5 ) @signature `Lcom/huawei/hms/common/data/DataHolder;.getWindowIndex:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f4ff0.  v0:= 0I;
  #L1f4ff2.  if v5 >= 0 then goto L1f5004;
  #L1f4ff6.  v1:= v4.`com.huawei.hms.common.data.DataHolder.dataCount` @type ^`int`;
  #L1f4ffa.  if v5 >= v1 then goto L1f5000;
  #L1f4ffe.  goto L1f5004;
  #L1f5000.  v1:= 0I;
  #L1f5002.  goto L1f5006;
  #L1f5004.  v1:= 1I;
  #L1f5006.  v2:= new `java.lang.StringBuilder`;
  #L1f500a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f5010.  v3:= "rowIndex is out of index:" @kind object;
  #L1f5014.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f501a.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f5020.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f5026.  v2:= temp @kind object;
  #L1f5028.  call `checkArgument`(v1, v2) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkArgument:(ZLjava/lang/Object;)V` @kind static;
  #L1f502e.  v1:= v4.`com.huawei.hms.common.data.DataHolder.perCursorCounts` @type ^`int`[] @kind object;
  #L1f5032.  v2:= length @variable v1;
  #L1f5034.  if v0 >= v2 then goto L1f504c;
  #L1f5038.  v1:= v1[v0];
  #L1f503c.  if v5 >= v1 then goto L1f5046;
  #L1f5040.  v0:= v0 + -1;
  #L1f5044.  goto L1f504c;
  #L1f5046.  v0:= v0 + 1;
  #L1f504a.  goto L1f502e;
  #L1f504c.  v5:= v4.`com.huawei.hms.common.data.DataHolder.perCursorCounts` @type ^`int`[] @kind object;
  #L1f5050.  v5:= length @variable v5;
  #L1f5052.  if v0 != v5 then goto L1f505a;
  #L1f5056.  v0:= v0 + -1;
  #L1f505a.  return v0;
}
procedure `boolean` `hasColumn`(`com.huawei.hms.common.data.DataHolder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/huawei/hms/common/data/DataHolder;.hasColumn:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1f4dd0.  v0:= v1.`com.huawei.hms.common.data.DataHolder.columnsBundle` @type ^`android.os.Bundle` @kind object;
  #L1f4dd4.  call temp:= `containsKey`(v0, v2) @signature `Landroid/os/Bundle;.containsKey:(Ljava/lang/String;)Z` @kind virtual;
  #L1f4dda.  v2:= temp;
  #L1f4ddc.  return v2;
}
procedure `boolean` `hasNull`(`com.huawei.hms.common.data.DataHolder` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/huawei/hms/common/data/DataHolder;.hasNull:(Ljava/lang/String;II)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1f4df0.  call `checkAvailable`(v1, v2, v3) @signature `Lcom/huawei/hms/common/data/DataHolder;.checkAvailable:(Ljava/lang/String;I)V` @kind direct;
  #L1f4df6.  v0:= v1.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f4dfa.  v4:= v0[v4] @kind object;
  #L1f4dfe.  v0:= v1.`com.huawei.hms.common.data.DataHolder.columnsBundle` @type ^`android.os.Bundle` @kind object;
  #L1f4e02.  call temp:= `getInt`(v0, v2) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L1f4e08.  v2:= temp;
  #L1f4e0a.  call temp:= `getType`(v4, v3, v2) @signature `Landroid/database/CursorWindow;.getType:(II)I` @kind virtual;
  #L1f4e10.  v2:= temp;
  #L1f4e12.  if v2 != 0 then goto L1f4e1a;
  #L1f4e16.  v2:= 1I;
  #L1f4e18.  goto L1f4e1c;
  #L1f4e1a.  v2:= 0I;
  #L1f4e1c.  return v2;
}
procedure `boolean` `isClosed`(`com.huawei.hms.common.data.DataHolder` v1 @kind this) @signature `Lcom/huawei/hms/common/data/DataHolder;.isClosed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1f4e30.  @monitorenter v1
  #L1f4e32.  v0:= v1.`com.huawei.hms.common.data.DataHolder.mClosed` @type ^`boolean` @kind boolean;
  #L1f4e36.  @monitorexit v1
  #L1f4e38.  return v0;
  #L1f4e3a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f4e3c.  @monitorexit v1
  #L1f4e3e.  throw v0;
  catch `java.lang.Throwable` @[L1f4e32..L1f4e36] goto L1f4e3a;
}
procedure `void` `writeToParcel`(`com.huawei.hms.common.data.DataHolder` v5 @kind this, `android.os.Parcel` v6 @kind object, `int` v7 ) @signature `Lcom/huawei/hms/common/data/DataHolder;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1f5864.  call temp:= `beginObjectHeader`(v6) @signature `Lcom/huawei/hms/common/internal/safeparcel/SafeParcelWriter;.beginObjectHeader:(Landroid/os/Parcel;)I` @kind static;
  #L1f586a.  v0:= temp;
  #L1f586c.  v1:= v5.`com.huawei.hms.common.data.DataHolder.columns` @type ^`java.lang.String`[] @kind object;
  #L1f5870.  v2:= 1I;
  #L1f5872.  v3:= 0I;
  #L1f5874.  call `writeStringArray`(v6, v2, v1, v3) @signature `Lcom/huawei/hms/common/internal/safeparcel/SafeParcelWriter;.writeStringArray:(Landroid/os/Parcel;I[Ljava/lang/String;Z)V` @kind static;
  #L1f587a.  v1:= v5.`com.huawei.hms.common.data.DataHolder.cursorWindows` @type ^`android.database.CursorWindow`[] @kind object;
  #L1f587e.  v4:= 2I;
  #L1f5880.  call `writeTypedArray`(v6, v4, v1, v7, v3) @signature `Lcom/huawei/hms/common/internal/safeparcel/SafeParcelWriter;.writeTypedArray:(Landroid/os/Parcel;I[Landroid/os/Parcelable;IZ)V` @kind static;
  #L1f5886.  call temp:= `getStatusCode`(v5) @signature `Lcom/huawei/hms/common/data/DataHolder;.getStatusCode:()I` @kind virtual;
  #L1f588c.  v1:= temp;
  #L1f588e.  v4:= 3I;
  #L1f5890.  call `writeInt`(v6, v4, v1) @signature `Lcom/huawei/hms/common/internal/safeparcel/SafeParcelWriter;.writeInt:(Landroid/os/Parcel;II)V` @kind static;
  #L1f5896.  call temp:= `getMetadata`(v5) @signature `Lcom/huawei/hms/common/data/DataHolder;.getMetadata:()Landroid/os/Bundle;` @kind virtual;
  #L1f589c.  v1:= temp @kind object;
  #L1f589e.  v4:= 4I;
  #L1f58a0.  call `writeBundle`(v6, v4, v1, v3) @signature `Lcom/huawei/hms/common/internal/safeparcel/SafeParcelWriter;.writeBundle:(Landroid/os/Parcel;ILandroid/os/Bundle;Z)V` @kind static;
  #L1f58a6.  v1:= v5.`com.huawei.hms.common.data.DataHolder.version` @type ^`int`;
  #L1f58aa.  v3:= 1000I;
  #L1f58ae.  call `writeInt`(v6, v3, v1) @signature `Lcom/huawei/hms/common/internal/safeparcel/SafeParcelWriter;.writeInt:(Landroid/os/Parcel;II)V` @kind static;
  #L1f58b4.  call `finishObjectHeader`(v6, v0) @signature `Lcom/huawei/hms/common/internal/safeparcel/SafeParcelWriter;.finishObjectHeader:(Landroid/os/Parcel;I)V` @kind static;
  #L1f58ba.  v6:= v7 ^& 1;
  #L1f58be.  if v6 == 0 then goto L1f58c8;
  #L1f58c2.  call `close`(v5) @signature `Lcom/huawei/hms/common/data/DataHolder;.close:()V` @kind virtual;
  #L1f58c8.  return @kind void;
}
