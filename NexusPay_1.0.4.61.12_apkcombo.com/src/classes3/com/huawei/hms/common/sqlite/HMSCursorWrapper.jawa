record `com.huawei.hms.common.sqlite.HMSCursorWrapper` @kind class @AccessFlag PUBLIC extends `android.database.CursorWrapper` @kind class, `android.database.CrossProcessCursor` @kind interface {
  `android.database.AbstractWindowedCursor` `com.huawei.hms.common.sqlite.HMSCursorWrapper.mCursor` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hms.common.sqlite.HMSCursorWrapper` v4 @kind this, `android.database.Cursor` v5 @kind object) @signature `Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;.<init>:(Landroid/database/Cursor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1feee4.  call `<init>`(v4, v5) @signature `Landroid/database/CursorWrapper;.<init>:(Landroid/database/Cursor;)V` @kind direct;
  #L1feeea.  if v5 == 0 then goto L1fef94;
  #L1feeee.  v0:= instanceof @variable v5 @type ^`android.database.CursorWrapper` @kind boolean;
  #L1feef2.  v1:= " is not a subclass for CursorWrapper" @kind object;
  #L1feef6.  if v0 == 0 then goto L1fef60;
  #L1feefa.  v5:= (`android.database.CursorWrapper`) v5 @kind object;
  #L1feefe.  call temp:= `getWrappedCursor`(v5) @signature `Landroid/database/CursorWrapper;.getWrappedCursor:()Landroid/database/Cursor;` @kind virtual;
  #L1fef04.  v5:= temp @kind object;
  #L1fef06.  if v5 == 0 then goto L1fef50;
  #L1fef0a.  v0:= instanceof @variable v5 @type ^`android.database.AbstractWindowedCursor` @kind boolean;
  #L1fef0e.  if v0 == 0 then goto L1fef1c;
  #L1fef12.  v5:= (`android.database.AbstractWindowedCursor`) v5 @kind object;
  #L1fef16.  v4.`com.huawei.hms.common.sqlite.HMSCursorWrapper.mCursor` @type ^`android.database.AbstractWindowedCursor` := v5 @kind object;
  #L1fef1a.  return @kind void;
  #L1fef1c.  v0:= new `java.lang.IllegalArgumentException`;
  #L1fef20.  v2:= new `java.lang.StringBuilder`;
  #L1fef24.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fef2a.  v3:= "getWrappedCursor:" @kind object;
  #L1fef2e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fef34.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fef3a.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fef40.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fef46.  v5:= temp @kind object;
  #L1fef48.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fef4e.  throw v0;
  #L1fef50.  v5:= new `java.lang.IllegalArgumentException`;
  #L1fef54.  v0:= "getWrappedCursor cannot be null" @kind object;
  #L1fef58.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fef5e.  throw v5;
  #L1fef60.  v0:= new `java.lang.IllegalArgumentException`;
  #L1fef64.  v2:= new `java.lang.StringBuilder`;
  #L1fef68.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fef6e.  v3:= "cursor:" @kind object;
  #L1fef72.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fef78.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fef7e.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fef84.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fef8a.  v5:= temp @kind object;
  #L1fef8c.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fef92.  throw v0;
  #L1fef94.  v5:= new `java.lang.IllegalArgumentException`;
  #L1fef98.  v0:= "cursor cannot be null" @kind object;
  #L1fef9c.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fefa2.  throw v5;
}
procedure `void` `fillWindow`(`com.huawei.hms.common.sqlite.HMSCursorWrapper` v1 @kind this, `int` v2 , `android.database.CursorWindow` v3 @kind object) @signature `Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;.fillWindow:(ILandroid/database/CursorWindow;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fefb4.  v0:= v1.`com.huawei.hms.common.sqlite.HMSCursorWrapper.mCursor` @type ^`android.database.AbstractWindowedCursor` @kind object;
  #L1fefb8.  call `fillWindow`(v0, v2, v3) @signature `Landroid/database/AbstractWindowedCursor;.fillWindow:(ILandroid/database/CursorWindow;)V` @kind virtual;
  #L1fefbe.  return @kind void;
}
procedure `android.database.CursorWindow` `getWindow`(`com.huawei.hms.common.sqlite.HMSCursorWrapper` v1 @kind this) @signature `Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;.getWindow:()Landroid/database/CursorWindow;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1feea4.  v0:= v1.`com.huawei.hms.common.sqlite.HMSCursorWrapper.mCursor` @type ^`android.database.AbstractWindowedCursor` @kind object;
  #L1feea8.  call temp:= `getWindow`(v0) @signature `Landroid/database/AbstractWindowedCursor;.getWindow:()Landroid/database/CursorWindow;` @kind virtual;
  #L1feeae.  v0:= temp @kind object;
  #L1feeb0.  return v0 @kind object;
}
procedure `android.database.Cursor` `getWrappedCursor`(`com.huawei.hms.common.sqlite.HMSCursorWrapper` v1 @kind this) @signature `Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;.getWrappedCursor:()Landroid/database/Cursor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fee8c.  v0:= v1.`com.huawei.hms.common.sqlite.HMSCursorWrapper.mCursor` @type ^`android.database.AbstractWindowedCursor` @kind object;
  #L1fee90.  return v0 @kind object;
}
procedure `boolean` `onMove`(`com.huawei.hms.common.sqlite.HMSCursorWrapper` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;.onMove:(II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1feec4.  v0:= v1.`com.huawei.hms.common.sqlite.HMSCursorWrapper.mCursor` @type ^`android.database.AbstractWindowedCursor` @kind object;
  #L1feec8.  call temp:= `onMove`(v0, v2, v3) @signature `Landroid/database/AbstractWindowedCursor;.onMove:(II)Z` @kind virtual;
  #L1feece.  v2:= temp;
  #L1feed0.  return v2;
}
procedure `void` `setWindow`(`com.huawei.hms.common.sqlite.HMSCursorWrapper` v1 @kind this, `android.database.CursorWindow` v2 @kind object) @signature `Lcom/huawei/hms/common/sqlite/HMSCursorWrapper;.setWindow:(Landroid/database/CursorWindow;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fefd0.  v0:= v1.`com.huawei.hms.common.sqlite.HMSCursorWrapper.mCursor` @type ^`android.database.AbstractWindowedCursor` @kind object;
  #L1fefd4.  call `setWindow`(v0, v2) @signature `Landroid/database/AbstractWindowedCursor;.setWindow:(Landroid/database/CursorWindow;)V` @kind virtual;
  #L1fefda.  return @kind void;
}
