record `com.huawei.hms.common.util.Objects$ToStringHelper` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `com.huawei.hms.common.util.Objects$ToStringHelper.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `com.huawei.hms.common.util.Objects$ToStringHelper.b` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.common.util.Objects$ToStringHelper` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/huawei/hms/common/util/Objects$ToStringHelper;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L200480.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L200486.  call temp:= `checkNotNull`(v1) @signature `Lcom/huawei/hms/common/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L20048c.  v1:= temp @kind object;
  #L20048e.  v0.`com.huawei.hms.common.util.Objects$ToStringHelper.b` @type ^`java.lang.Object` := v1 @kind object;
  #L200492.  v1:= new `java.util.ArrayList`;
  #L200496.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L20049c.  v0.`com.huawei.hms.common.util.Objects$ToStringHelper.a` @type ^`java.util.List` := v1 @kind object;
  #L2004a0.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.common.util.Objects$ToStringHelper` v0 @kind this, `java.lang.Object` v1 @kind object, `com.huawei.hms.common.util.Objects$a` v2 @kind object) @signature `Lcom/huawei/hms/common/util/Objects$ToStringHelper;.<init>:(Ljava/lang/Object;Lcom/huawei/hms/common/util/Objects$a;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2004b4.  call `<init>`(v0, v1) @signature `Lcom/huawei/hms/common/util/Objects$ToStringHelper;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2004ba.  return @kind void;
}
procedure `com.huawei.hms.common.util.Objects$ToStringHelper` `add`(`com.huawei.hms.common.util.Objects$ToStringHelper` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/huawei/hms/common/util/Objects$ToStringHelper;.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/huawei/hms/common/util/Objects$ToStringHelper;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L200390.  call temp:= `checkNotNull`(v3) @signature `Lcom/huawei/hms/common/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L200396.  v3:= temp @kind object;
  #L200398.  v3:= (`java.lang.String`) v3 @kind object;
  #L20039c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2003a2.  v4:= temp @kind object;
  #L2003a4.  v0:= v2.`com.huawei.hms.common.util.Objects$ToStringHelper.a` @type ^`java.util.List` @kind object;
  #L2003a8.  v1:= new `java.lang.StringBuilder`;
  #L2003ac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2003b2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2003b8.  v3:= "=" @kind object;
  #L2003bc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2003c2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2003c8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2003ce.  v3:= temp @kind object;
  #L2003d0.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2003d6.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`com.huawei.hms.common.util.Objects$ToStringHelper` v4 @kind this) @signature `Lcom/huawei/hms/common/util/Objects$ToStringHelper;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2003e8.  v0:= new `java.lang.StringBuilder`;
  #L2003ec.  v1:= 100I;
  #L2003f0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2003f6.  v1:= v4.`com.huawei.hms.common.util.Objects$ToStringHelper.b` @type ^`java.lang.Object` @kind object;
  #L2003fa.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L200400.  v1:= temp @kind object;
  #L200402.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L200408.  v1:= temp @kind object;
  #L20040a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200410.  v1:= 123I;
  #L200414.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20041a.  v1:= v4.`com.huawei.hms.common.util.Objects$ToStringHelper.a` @type ^`java.util.List` @kind object;
  #L20041e.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L200424.  v1:= temp;
  #L200426.  v2:= 0I;
  #L200428.  if v2 >= v1 then goto L20045a;
  #L20042c.  v3:= v4.`com.huawei.hms.common.util.Objects$ToStringHelper.a` @type ^`java.util.List` @kind object;
  #L200430.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L200436.  v3:= temp @kind object;
  #L200438.  v3:= (`java.lang.String`) v3 @kind object;
  #L20043c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200442.  v3:= v1 + -1;
  #L200446.  if v2 >= v3 then goto L200454;
  #L20044a.  v3:= ", " @kind object;
  #L20044e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200454.  v2:= v2 + 1;
  #L200458.  goto L200428;
  #L20045a.  v1:= 125I;
  #L20045e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L200464.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20046a.  v0:= temp @kind object;
  #L20046c.  return v0 @kind object;
}
