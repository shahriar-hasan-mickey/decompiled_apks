record `com.huawei.hms.common.internal.BindResolveClients` @kind class @AccessFlag PUBLIC {
  `java.util.ArrayList` `com.huawei.hms.common.internal.BindResolveClients.mClientList` @AccessFlag PRIVATE;
}
global `java.lang.Object` `@@com.huawei.hms.common.internal.BindResolveClients.LOCK_INST` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/common/internal/BindResolveClients;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1f6d44.  v0:= new `java.lang.Object`;
  #L1f6d48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f6d4e.  `@@com.huawei.hms.common.internal.BindResolveClients.LOCK_INST` @type ^`java.lang.Object` := v0 @kind object;
  #L1f6d52.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.common.internal.BindResolveClients` v1 @kind this) @signature `Lcom/huawei/hms/common/internal/BindResolveClients;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1f6d64.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f6d6a.  v0:= new `java.util.ArrayList`;
  #L1f6d6e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1f6d74.  v1.`com.huawei.hms.common.internal.BindResolveClients.mClientList` @type ^`java.util.ArrayList` := v0 @kind object;
  #L1f6d78.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.common.internal.BindResolveClients` v0 @kind this, `com.huawei.hms.common.internal.BindResolveClients$1` v1 @kind object) @signature `Lcom/huawei/hms/common/internal/BindResolveClients;.<init>:(Lcom/huawei/hms/common/internal/BindResolveClients$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1f6d8c.  call `<init>`(v0) @signature `Lcom/huawei/hms/common/internal/BindResolveClients;.<init>:()V` @kind direct;
  #L1f6d92.  return @kind void;
}
procedure `com.huawei.hms.common.internal.BindResolveClients` `getInstance`() @signature `Lcom/huawei/hms/common/internal/BindResolveClients;.getInstance:()Lcom/huawei/hms/common/internal/BindResolveClients;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1f6d28.  call temp:= `access$100`() @signature `Lcom/huawei/hms/common/internal/BindResolveClients$SingletonManager;.access$100:()Lcom/huawei/hms/common/internal/BindResolveClients;` @kind static;
  #L1f6d2e.  v0:= temp @kind object;
  #L1f6d30.  return v0 @kind object;
}
procedure `boolean` `isClientRegistered`(`com.huawei.hms.common.internal.BindResolveClients` v2 @kind this, `com.huawei.hms.common.internal.ResolveClientBean` v3 @kind object) @signature `Lcom/huawei/hms/common/internal/BindResolveClients;.isClientRegistered:(Lcom/huawei/hms/common/internal/ResolveClientBean;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f6cf0.  v0:= `@@com.huawei.hms.common.internal.BindResolveClients.LOCK_INST` @type ^`java.lang.Object` @kind object;
  #L1f6cf4.  @monitorenter v0
  #L1f6cf6.  v1:= v2.`com.huawei.hms.common.internal.BindResolveClients.mClientList` @type ^`java.util.ArrayList` @kind object;
  #L1f6cfa.  call temp:= `contains`(v1, v3) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f6d00.  v3:= temp;
  #L1f6d02.  @monitorexit v0
  #L1f6d04.  return v3;
  #L1f6d06.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f6d08.  @monitorexit v0
  #L1f6d0a.  throw v3;
  catch `java.lang.Throwable` @[L1f6cf6..L1f6d0a] goto L1f6d06;
}
procedure `void` `notifyClientReconnect`(`com.huawei.hms.common.internal.BindResolveClients` v3 @kind this) @signature `Lcom/huawei/hms/common/internal/BindResolveClients;.notifyClientReconnect:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1f6da4.  v0:= `@@com.huawei.hms.common.internal.BindResolveClients.LOCK_INST` @type ^`java.lang.Object` @kind object;
  #L1f6da8.  @monitorenter v0
  #L1f6daa.  v1:= v3.`com.huawei.hms.common.internal.BindResolveClients.mClientList` @type ^`java.util.ArrayList` @kind object;
  #L1f6dae.  call temp:= `listIterator`(v1) @signature `Ljava/util/ArrayList;.listIterator:()Ljava/util/ListIterator;` @kind virtual;
  #L1f6db4.  v1:= temp @kind object;
  #L1f6db6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1f6dbc.  v2:= temp;
  #L1f6dbe.  if v2 == 0 then goto L1f6dd6;
  #L1f6dc2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1f6dc8.  v2:= temp @kind object;
  #L1f6dca.  v2:= (`com.huawei.hms.common.internal.ResolveClientBean`) v2 @kind object;
  #L1f6dce.  call `clientReconnect`(v2) @signature `Lcom/huawei/hms/common/internal/ResolveClientBean;.clientReconnect:()V` @kind virtual;
  #L1f6dd4.  goto L1f6db6;
  #L1f6dd6.  v1:= v3.`com.huawei.hms.common.internal.BindResolveClients.mClientList` @type ^`java.util.ArrayList` @kind object;
  #L1f6dda.  call `clear`(v1) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L1f6de0.  @monitorexit v0
  #L1f6de2.  return @kind void;
  #L1f6de4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f6de6.  @monitorexit v0
  #L1f6de8.  throw v1;
  catch `java.lang.Throwable` @[L1f6daa..L1f6de8] goto L1f6de4;
}
procedure `void` `register`(`com.huawei.hms.common.internal.BindResolveClients` v2 @kind this, `com.huawei.hms.common.internal.ResolveClientBean` v3 @kind object) @signature `Lcom/huawei/hms/common/internal/BindResolveClients;.register:(Lcom/huawei/hms/common/internal/ResolveClientBean;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f6e08.  if v3 != 0 then goto L1f6e0e;
  #L1f6e0c.  return @kind void;
  #L1f6e0e.  v0:= `@@com.huawei.hms.common.internal.BindResolveClients.LOCK_INST` @type ^`java.lang.Object` @kind object;
  #L1f6e12.  @monitorenter v0
  #L1f6e14.  v1:= v2.`com.huawei.hms.common.internal.BindResolveClients.mClientList` @type ^`java.util.ArrayList` @kind object;
  #L1f6e18.  call temp:= `contains`(v1, v3) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f6e1e.  v1:= temp;
  #L1f6e20.  if v1 != 0 then goto L1f6e2e;
  #L1f6e24.  v1:= v2.`com.huawei.hms.common.internal.BindResolveClients.mClientList` @type ^`java.util.ArrayList` @kind object;
  #L1f6e28.  call temp:= `add`(v1, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f6e2e.  @monitorexit v0
  #L1f6e30.  return @kind void;
  #L1f6e32.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f6e34.  @monitorexit v0
  #L1f6e36.  throw v3;
  catch `java.lang.Throwable` @[L1f6e14..L1f6e36] goto L1f6e32;
}
procedure `void` `unRegister`(`com.huawei.hms.common.internal.BindResolveClients` v3 @kind this, `com.huawei.hms.common.internal.ResolveClientBean` v4 @kind object) @signature `Lcom/huawei/hms/common/internal/BindResolveClients;.unRegister:(Lcom/huawei/hms/common/internal/ResolveClientBean;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1f6e54.  if v4 != 0 then goto L1f6e5a;
  #L1f6e58.  return @kind void;
  #L1f6e5a.  v0:= `@@com.huawei.hms.common.internal.BindResolveClients.LOCK_INST` @type ^`java.lang.Object` @kind object;
  #L1f6e5e.  @monitorenter v0
  #L1f6e60.  v1:= v3.`com.huawei.hms.common.internal.BindResolveClients.mClientList` @type ^`java.util.ArrayList` @kind object;
  #L1f6e64.  call temp:= `contains`(v1, v4) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f6e6a.  v1:= temp;
  #L1f6e6c.  if v1 == 0 then goto L1f6ea2;
  #L1f6e70.  v1:= v3.`com.huawei.hms.common.internal.BindResolveClients.mClientList` @type ^`java.util.ArrayList` @kind object;
  #L1f6e74.  call temp:= `listIterator`(v1) @signature `Ljava/util/ArrayList;.listIterator:()Ljava/util/ListIterator;` @kind virtual;
  #L1f6e7a.  v1:= temp @kind object;
  #L1f6e7c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1f6e82.  v2:= temp;
  #L1f6e84.  if v2 == 0 then goto L1f6ea2;
  #L1f6e88.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1f6e8e.  v2:= temp @kind object;
  #L1f6e90.  call temp:= `equals`(v4, v2) @signature `Lcom/huawei/hms/common/internal/ResolveClientBean;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f6e96.  v2:= temp;
  #L1f6e98.  if v2 == 0 then goto L1f6e7c;
  #L1f6e9c.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L1f6ea2.  @monitorexit v0
  #L1f6ea4.  return @kind void;
  #L1f6ea6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f6ea8.  @monitorexit v0
  #L1f6eaa.  throw v4;
  catch `java.lang.Throwable` @[L1f6e60..L1f6eaa] goto L1f6ea6;
}
procedure `void` `unRegisterAll`(`com.huawei.hms.common.internal.BindResolveClients` v2 @kind this) @signature `Lcom/huawei/hms/common/internal/BindResolveClients;.unRegisterAll:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f6ec8.  v0:= `@@com.huawei.hms.common.internal.BindResolveClients.LOCK_INST` @type ^`java.lang.Object` @kind object;
  #L1f6ecc.  @monitorenter v0
  #L1f6ece.  v1:= v2.`com.huawei.hms.common.internal.BindResolveClients.mClientList` @type ^`java.util.ArrayList` @kind object;
  #L1f6ed2.  call `clear`(v1) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L1f6ed8.  @monitorexit v0
  #L1f6eda.  return @kind void;
  #L1f6edc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f6ede.  @monitorexit v0
  #L1f6ee0.  throw v1;
  catch `java.lang.Throwable` @[L1f6ece..L1f6ee0] goto L1f6edc;
}
