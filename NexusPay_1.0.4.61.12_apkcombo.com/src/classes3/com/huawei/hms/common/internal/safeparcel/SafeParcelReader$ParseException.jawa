record `com.huawei.hms.common.internal.safeparcel.SafeParcelReader$ParseException` @kind class @AccessFlag PUBLIC extends `java.lang.RuntimeException` @kind class {
}
procedure `void` `<init>`(`com.huawei.hms.common.internal.safeparcel.SafeParcelReader$ParseException` v2 @kind this, `java.lang.String` v3 @kind object, `android.os.Parcel` v4 @kind object) @signature `Lcom/huawei/hms/common/internal/safeparcel/SafeParcelReader$ParseException;.<init>:(Ljava/lang/String;Landroid/os/Parcel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1f9488.  v0:= new `java.lang.StringBuffer`;
  #L1f948c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1f9492.  v1:= temp @kind object;
  #L1f9494.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1f949a.  v1:= temp;
  #L1f949c.  v1:= v1 + 41;
  #L1f94a0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuffer;.<init>:(I)V` @kind direct;
  #L1f94a6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L1f94ac.  v3:= " Parcel: pos=" @kind object;
  #L1f94b0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L1f94b6.  call temp:= `dataPosition`(v4) @signature `Landroid/os/Parcel;.dataPosition:()I` @kind virtual;
  #L1f94bc.  v3:= temp;
  #L1f94be.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuffer;.append:(I)Ljava/lang/StringBuffer;` @kind virtual;
  #L1f94c4.  v3:= " size=" @kind object;
  #L1f94c8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L1f94ce.  call temp:= `dataSize`(v4) @signature `Landroid/os/Parcel;.dataSize:()I` @kind virtual;
  #L1f94d4.  v3:= temp;
  #L1f94d6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuffer;.append:(I)Ljava/lang/StringBuffer;` @kind virtual;
  #L1f94dc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f94e2.  v3:= temp @kind object;
  #L1f94e4.  call `<init>`(v2, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f94ea.  return @kind void;
}
