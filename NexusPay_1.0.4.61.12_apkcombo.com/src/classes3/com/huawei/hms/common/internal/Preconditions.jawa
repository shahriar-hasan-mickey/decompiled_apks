record `com.huawei.hms.common.internal.Preconditions` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.huawei.hms.common.internal.Preconditions` v2 @kind this) @signature `Lcom/huawei/hms/common/internal/Preconditions;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1f7a60.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f7a66.  v0:= new `java.lang.AssertionError`;
  #L1f7a6a.  v1:= "Cannot use constructor to make a new instance" @kind object;
  #L1f7a6e.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1f7a74.  throw v0;
}
procedure `boolean` `a`() @signature `Lcom/huawei/hms/common/internal/Preconditions;.a:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1f79e0.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L1f79e6.  v0:= temp @kind object;
  #L1f79e8.  call temp:= `myLooper`() @signature `Landroid/os/Looper;.myLooper:()Landroid/os/Looper;` @kind static;
  #L1f79ee.  v1:= temp @kind object;
  #L1f79f0.  if v0 != v1 then goto L1f79f8;
  #L1f79f4.  v0:= 1I;
  #L1f79f6.  goto L1f79fa;
  #L1f79f8.  v0:= 0I;
  #L1f79fa.  return v0;
}
procedure `void` `checkArgument`(`boolean` v0 , `java.lang.Object` v1 @kind object) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkArgument:(ZLjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1f7a88.  if v0 == 0 then goto L1f7a8e;
  #L1f7a8c.  return @kind void;
  #L1f7a8e.  v0:= new `java.lang.IllegalArgumentException`;
  #L1f7a92.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1f7a98.  v1:= temp @kind object;
  #L1f7a9a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f7aa0.  throw v0;
}
procedure `void` `checkHandlerThread`(`android.os.Handler` v1 @kind object) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkHandlerThread:(Landroid/os/Handler;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1f7ab4.  v0:= "Must be called on the handler thread" @kind object;
  #L1f7ab8.  call `checkHandlerThread`(v1, v0) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkHandlerThread:(Landroid/os/Handler;Ljava/lang/String;)V` @kind static;
  #L1f7abe.  return @kind void;
}
procedure `void` `checkHandlerThread`(`android.os.Handler` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkHandlerThread:(Landroid/os/Handler;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1f7ad0.  call temp:= `myLooper`() @signature `Landroid/os/Looper;.myLooper:()Landroid/os/Looper;` @kind static;
  #L1f7ad6.  v0:= temp @kind object;
  #L1f7ad8.  call temp:= `getLooper`(v1) @signature `Landroid/os/Handler;.getLooper:()Landroid/os/Looper;` @kind virtual;
  #L1f7ade.  v1:= temp @kind object;
  #L1f7ae0.  if v0 != v1 then goto L1f7ae6;
  #L1f7ae4.  return @kind void;
  #L1f7ae6.  v1:= new `java.lang.IllegalStateException`;
  #L1f7aea.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f7af0.  throw v1;
}
procedure `void` `checkMainThread`(`java.lang.String` v1 @kind object) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkMainThread:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1f7b04.  call temp:= `a`() @signature `Lcom/huawei/hms/common/internal/Preconditions;.a:()Z` @kind static;
  #L1f7b0a.  v0:= temp;
  #L1f7b0c.  if v0 == 0 then goto L1f7b12;
  #L1f7b10.  return @kind void;
  #L1f7b12.  v0:= new `java.lang.IllegalStateException`;
  #L1f7b16.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f7b1c.  throw v0;
}
procedure `void` `checkNotMainThread`() @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkNotMainThread:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1f7b30.  call temp:= `a`() @signature `Lcom/huawei/hms/common/internal/Preconditions;.a:()Z` @kind static;
  #L1f7b36.  v0:= temp;
  #L1f7b38.  if v0 != 0 then goto L1f7b3e;
  #L1f7b3c.  return @kind void;
  #L1f7b3e.  v0:= new `java.lang.IllegalStateException`;
  #L1f7b42.  v1:= "Must not be called on the main application thread" @kind object;
  #L1f7b46.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f7b4c.  throw v0;
}
procedure `java.lang.Object` `checkNotNull`(`java.lang.Object` v1 @kind object) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1f7a0c.  if v1 == 0 then goto L1f7a12;
  #L1f7a10.  return v1 @kind object;
  #L1f7a12.  v1:= new `java.lang.NullPointerException`;
  #L1f7a16.  v0:= "must not refer to a null object" @kind object;
  #L1f7a1a.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f7a20.  throw v1;
}
procedure `java.lang.Object` `checkNotNull`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1f7a34.  if v0 == 0 then goto L1f7a3a;
  #L1f7a38.  return v0 @kind object;
  #L1f7a3a.  v0:= new `java.lang.NullPointerException`;
  #L1f7a3e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1f7a44.  v1:= temp @kind object;
  #L1f7a46.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f7a4c.  throw v0;
}
procedure `void` `checkState`(`boolean` v0 , `java.lang.Object` v1 @kind object) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkState:(ZLjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1f7b60.  if v0 == 0 then goto L1f7b66;
  #L1f7b64.  return @kind void;
  #L1f7b66.  v0:= new `java.lang.IllegalStateException`;
  #L1f7b6a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1f7b70.  v1:= temp @kind object;
  #L1f7b72.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f7b78.  throw v0;
}
