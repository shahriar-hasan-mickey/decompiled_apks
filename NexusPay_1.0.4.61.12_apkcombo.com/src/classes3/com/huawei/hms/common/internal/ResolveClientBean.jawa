record `com.huawei.hms.common.internal.ResolveClientBean` @kind class @AccessFlag PUBLIC {
  `int` `com.huawei.hms.common.internal.ResolveClientBean.clientKey` @AccessFlag PRIVATE_FINAL;
  `com.huawei.hms.common.internal.AnyClient` `com.huawei.hms.common.internal.ResolveClientBean.mClient` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.common.internal.ResolveClientBean.minSdkVersion` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hms.common.internal.ResolveClientBean` v2 @kind this, `com.huawei.hms.common.internal.AnyClient` v3 @kind object, `int` v4 ) @signature `Lcom/huawei/hms/common/internal/ResolveClientBean;.<init>:(Lcom/huawei/hms/common/internal/AnyClient;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1f8670.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f8676.  v2.`com.huawei.hms.common.internal.ResolveClientBean.mClient` @type ^`com.huawei.hms.common.internal.AnyClient` := v3 @kind object;
  #L1f867a.  v0:= 1I;
  #L1f867c.  v0:= new `java.lang.Object`[v0];
  #L1f8680.  v1:= 0I;
  #L1f8682.  v0[v1]:= v3 @kind object;
  #L1f8686.  call temp:= `hashCode`(v0) @signature `Lcom/huawei/hms/common/internal/Objects;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L1f868c.  v3:= temp;
  #L1f868e.  v2.`com.huawei.hms.common.internal.ResolveClientBean.clientKey` @type ^`int` := v3;
  #L1f8692.  v2.`com.huawei.hms.common.internal.ResolveClientBean.minSdkVersion` @type ^`int` := v4;
  #L1f8696.  return @kind void;
}
procedure `void` `clientReconnect`(`com.huawei.hms.common.internal.ResolveClientBean` v3 @kind this) @signature `Lcom/huawei/hms/common/internal/ResolveClientBean;.clientReconnect:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1f86a8.  v0:= v3.`com.huawei.hms.common.internal.ResolveClientBean.mClient` @type ^`com.huawei.hms.common.internal.AnyClient` @kind object;
  #L1f86ac.  v1:= v3.`com.huawei.hms.common.internal.ResolveClientBean.minSdkVersion` @type ^`int`;
  #L1f86b0.  v2:= 1I;
  #L1f86b2.  call `connect`(v0, v1, v2) @signature `Lcom/huawei/hms/common/internal/AnyClient;.connect:(IZ)V` @kind interface;
  #L1f86b8.  return @kind void;
}
procedure `boolean` `equals`(`com.huawei.hms.common.internal.ResolveClientBean` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/huawei/hms/common/internal/ResolveClientBean;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f8600.  if v1 != v2 then goto L1f8608;
  #L1f8604.  v2:= 1I;
  #L1f8606.  return v2;
  #L1f8608.  if v2 == 0 then goto L1f862c;
  #L1f860c.  v0:= instanceof @variable v2 @type ^`com.huawei.hms.common.internal.ResolveClientBean` @kind boolean;
  #L1f8610.  if v0 != 0 then goto L1f8616;
  #L1f8614.  goto L1f862c;
  #L1f8616.  v2:= (`com.huawei.hms.common.internal.ResolveClientBean`) v2 @kind object;
  #L1f861a.  v0:= v1.`com.huawei.hms.common.internal.ResolveClientBean.mClient` @type ^`com.huawei.hms.common.internal.AnyClient` @kind object;
  #L1f861e.  v2:= v2.`com.huawei.hms.common.internal.ResolveClientBean.mClient` @type ^`com.huawei.hms.common.internal.AnyClient` @kind object;
  #L1f8622.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f8628.  v2:= temp;
  #L1f862a.  return v2;
  #L1f862c.  v2:= 0I;
  #L1f862e.  return v2;
}
procedure `com.huawei.hms.common.internal.AnyClient` `getClient`(`com.huawei.hms.common.internal.ResolveClientBean` v1 @kind this) @signature `Lcom/huawei/hms/common/internal/ResolveClientBean;.getClient:()Lcom/huawei/hms/common/internal/AnyClient;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f8640.  v0:= v1.`com.huawei.hms.common.internal.ResolveClientBean.mClient` @type ^`com.huawei.hms.common.internal.AnyClient` @kind object;
  #L1f8644.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.huawei.hms.common.internal.ResolveClientBean` v1 @kind this) @signature `Lcom/huawei/hms/common/internal/ResolveClientBean;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f8658.  v0:= v1.`com.huawei.hms.common.internal.ResolveClientBean.clientKey` @type ^`int`;
  #L1f865c.  return v0;
}
