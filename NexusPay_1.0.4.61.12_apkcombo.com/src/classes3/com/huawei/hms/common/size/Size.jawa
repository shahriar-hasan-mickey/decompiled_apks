record `com.huawei.hms.common.size.Size` @kind class @AccessFlag PUBLIC {
  `int` `com.huawei.hms.common.size.Size.height` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.common.size.Size.width` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.common.size.Size` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/huawei/hms/common/size/Size;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1fee6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fee72.  v0.`com.huawei.hms.common.size.Size.width` @type ^`int` := v1;
  #L1fee76.  v0.`com.huawei.hms.common.size.Size.height` @type ^`int` := v2;
  #L1fee7a.  return @kind void;
}
procedure `com.huawei.hms.common.size.Size` `parseSize`(`java.lang.String` v3 @kind object) @signature `Lcom/huawei/hms/common/size/Size;.parseSize:(Ljava/lang/String;)Lcom/huawei/hms/common/size/Size;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1fed24.  v0:= "x" @kind object;
  #L1fed28.  call temp:= `indexOf`(v3, v0) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L1fed2e.  v0:= temp;
  #L1fed30.  if v0 >= 0 then goto L1fed40;
  #L1fed34.  v0:= "*" @kind object;
  #L1fed38.  call temp:= `indexOf`(v3, v0) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L1fed3e.  v0:= temp;
  #L1fed40.  v1:= new `com.huawei.hms.common.size.Size`;
  #L1fed44.  v2:= 0I;
  #L1fed46.  call temp:= `substring`(v3, v2, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1fed4c.  v2:= temp @kind object;
  #L1fed4e.  call temp:= `parseInt`(v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L1fed54.  v2:= temp;
  #L1fed56.  v0:= v0 + 1;
  #L1fed5a.  call temp:= `substring`(v3, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1fed60.  v3:= temp @kind object;
  #L1fed62.  call temp:= `parseInt`(v3) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L1fed68.  v3:= temp;
  #L1fed6a.  call `<init>`(v1, v2, v3) @signature `Lcom/huawei/hms/common/size/Size;.<init>:(II)V` @kind direct;
  #L1fed70.  return v1 @kind object;
  #L1fed72.  v3:= new `java.lang.IllegalArgumentException`;
  #L1fed76.  v0:= "Size parses failed" @kind object;
  #L1fed7a.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fed80.  throw v3;
  catch `java.lang.Exception` @[L1fed24..L1fed70] goto L1fed72;
}
procedure `boolean` `equals`(`com.huawei.hms.common.size.Size` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/huawei/hms/common/size/Size;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fecdc.  v0:= 0I;
  #L1fecde.  if v5 != 0 then goto L1fece4;
  #L1fece2.  return v0;
  #L1fece4.  v1:= 1I;
  #L1fece6.  if v4 != v5 then goto L1fecec;
  #L1fecea.  return v1;
  #L1fecec.  v2:= instanceof @variable v5 @type ^`com.huawei.hms.common.size.Size` @kind boolean;
  #L1fecf0.  if v2 == 0 then goto L1fed12;
  #L1fecf4.  v5:= (`com.huawei.hms.common.size.Size`) v5 @kind object;
  #L1fecf8.  v2:= v4.`com.huawei.hms.common.size.Size.width` @type ^`int`;
  #L1fecfc.  v3:= v5.`com.huawei.hms.common.size.Size.width` @type ^`int`;
  #L1fed00.  if v2 != v3 then goto L1fed12;
  #L1fed04.  v2:= v4.`com.huawei.hms.common.size.Size.height` @type ^`int`;
  #L1fed08.  v5:= v5.`com.huawei.hms.common.size.Size.height` @type ^`int`;
  #L1fed0c.  if v2 != v5 then goto L1fed12;
  #L1fed10.  v0:= 1I;
  #L1fed12.  return v0;
}
procedure `int` `getHeight`(`com.huawei.hms.common.size.Size` v1 @kind this) @signature `Lcom/huawei/hms/common/size/Size;.getHeight:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1feda4.  v0:= v1.`com.huawei.hms.common.size.Size.height` @type ^`int`;
  #L1feda8.  return v0;
}
procedure `int` `getWidth`(`com.huawei.hms.common.size.Size` v1 @kind this) @signature `Lcom/huawei/hms/common/size/Size;.getWidth:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fedbc.  v0:= v1.`com.huawei.hms.common.size.Size.width` @type ^`int`;
  #L1fedc0.  return v0;
}
procedure `int` `hashCode`(`com.huawei.hms.common.size.Size` v3 @kind this) @signature `Lcom/huawei/hms/common/size/Size;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1fedd4.  v0:= 2I;
  #L1fedd6.  v0:= new `java.lang.Object`[v0];
  #L1fedda.  call temp:= `getWidth`(v3) @signature `Lcom/huawei/hms/common/size/Size;.getWidth:()I` @kind virtual;
  #L1fede0.  v1:= temp;
  #L1fede2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fede8.  v1:= temp @kind object;
  #L1fedea.  v2:= 0I;
  #L1fedec.  v0[v2]:= v1 @kind object;
  #L1fedf0.  call temp:= `getHeight`(v3) @signature `Lcom/huawei/hms/common/size/Size;.getHeight:()I` @kind virtual;
  #L1fedf6.  v1:= temp;
  #L1fedf8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fedfe.  v1:= temp @kind object;
  #L1fee00.  v2:= 1I;
  #L1fee02.  v0[v2]:= v1 @kind object;
  #L1fee06.  call temp:= `hashCode`(v0) @signature `Lcom/huawei/hms/common/internal/Objects;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L1fee0c.  v0:= temp;
  #L1fee0e.  return v0;
}
procedure `java.lang.String` `toString`(`com.huawei.hms.common.size.Size` v4 @kind this) @signature `Lcom/huawei/hms/common/size/Size;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fee20.  v0:= v4.`com.huawei.hms.common.size.Size.width` @type ^`int`;
  #L1fee24.  v1:= v4.`com.huawei.hms.common.size.Size.height` @type ^`int`;
  #L1fee28.  v2:= new `java.lang.StringBuilder`;
  #L1fee2c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fee32.  v3:= "Width is " @kind object;
  #L1fee36.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fee3c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fee42.  v0:= " Height is " @kind object;
  #L1fee46.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fee4c.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fee52.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fee58.  v0:= temp @kind object;
  #L1fee5a.  return v0 @kind object;
}
