record `com.huawei.hms.push.SendException` @kind class @AccessFlag PUBLIC_FINAL extends `com.huawei.hms.push.BaseException` @kind class {
}
global `int` `@@com.huawei.hms.push.SendException.ERROR_INVALID_PARAMETERS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.push.SendException.ERROR_NO_NETWORK` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.push.SendException.ERROR_NO_TOKEN` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.push.SendException.ERROR_PUSH_SERVER` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.push.SendException.ERROR_SERVICE_NOT_AVAILABLE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.push.SendException.ERROR_SIZE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.push.SendException.ERROR_TOKEN_INVALID` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.push.SendException.ERROR_TOO_MANY_MESSAGES` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.push.SendException.ERROR_TTL_EXCEEDED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.push.SendException.ERROR_UNKNOWN` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.huawei.hms.push.SendException` v0 @kind this, `int` v1 ) @signature `Lcom/huawei/hms/push/SendException;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L25293c.  call `<init>`(v0, v1) @signature `Lcom/huawei/hms/push/BaseException;.<init>:(I)V` @kind direct;
  #L252942.  return @kind void;
}
