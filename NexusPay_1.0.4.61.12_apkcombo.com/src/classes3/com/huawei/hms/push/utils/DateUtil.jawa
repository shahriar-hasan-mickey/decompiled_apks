record `com.huawei.hms.push.utils.DateUtil` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.huawei.hms.push.utils.DateUtil` v0 @kind this) @signature `Lcom/huawei/hms/push/utils/DateUtil;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L256e04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L256e0a.  return @kind void;
}
procedure `java.lang.String` `parseMilliSecondToString`(`java.lang.Long` v3 @kind object) @signature `Lcom/huawei/hms/push/utils/DateUtil;.parseMilliSecondToString:(Ljava/lang/Long;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L256cf0.  v0:= 0I;
  #L256cf2.  if v3 != 0 then goto L256cf8;
  #L256cf6.  return v0 @kind object;
  #L256cf8.  v1:= new `java.text.SimpleDateFormat`;
  #L256cfc.  v2:= "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'" @kind object;
  #L256d00.  call `<init>`(v1, v2) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L256d06.  call temp:= `format`(v1, v3) @signature `Ljava/text/SimpleDateFormat;.format:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L256d0c.  v3:= temp @kind object;
  #L256d0e.  return v3 @kind object;
  #L256d10.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L256d12.  v1:= "DateUtil" @kind object;
  #L256d16.  v2:= "parseMilliSecondToString Exception." @kind object;
  #L256d1a.  call `e`(v1, v2, v3) @signature `Lcom/huawei/hms/support/log/HMSLog;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L256d20.  return v0 @kind object;
  catch `java.lang.Exception` @[L256cf8..L256cfc] goto L256d10;
  catch `java.lang.Exception` @[L256d00..L256d0e] goto L256d10;
}
procedure `long` `parseUtcToMillisecond`(`java.lang.String` v5 @kind object) @signature `Lcom/huawei/hms/push/utils/DateUtil;.parseUtcToMillisecond:(Ljava/lang/String;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L256d4c.  v0:= new `java.text.SimpleDateFormat`;
  #L256d50.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L256d54.  v2:= "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'" @kind object;
  #L256d58.  call `<init>`(v0, v2, v1) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V` @kind direct;
  #L256d5e.  v1:= "UTC" @kind object;
  #L256d62.  call temp:= `getTimeZone`(v1) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L256d68.  v1:= temp @kind object;
  #L256d6a.  call `setTimeZone`(v0, v1) @signature `Ljava/text/SimpleDateFormat;.setTimeZone:(Ljava/util/TimeZone;)V` @kind virtual;
  #L256d70.  v1:= "." @kind object;
  #L256d74.  call temp:= `indexOf`(v5, v1) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L256d7a.  v2:= temp;
  #L256d7c.  v3:= 0I;
  #L256d7e.  call temp:= `substring`(v5, v3, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L256d84.  v2:= temp @kind object;
  #L256d86.  call temp:= `indexOf`(v5, v1) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L256d8c.  v1:= temp;
  #L256d8e.  call temp:= `substring`(v5, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L256d94.  v5:= temp @kind object;
  #L256d96.  v1:= new `java.lang.StringBuilder`;
  #L256d9a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L256da0.  v4:= 4I;
  #L256da2.  call temp:= `substring`(v5, v3, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L256da8.  v5:= temp @kind object;
  #L256daa.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256db0.  v5:= "Z" @kind object;
  #L256db4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256dba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L256dc0.  v5:= temp @kind object;
  #L256dc2.  v1:= new `java.lang.StringBuilder`;
  #L256dc6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L256dcc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256dd2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256dd8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L256dde.  v5:= temp @kind object;
  #L256de0.  call temp:= `parse`(v0, v5) @signature `Ljava/text/SimpleDateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #L256de6.  v5:= temp @kind object;
  #L256de8.  call temp:= `getTime`(v5) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L256dee.  v0:= temp @kind wide;
  #L256df0.  return v0 @kind wide;
}
