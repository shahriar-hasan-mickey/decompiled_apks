record `com.huawei.hms.push.utils.JsonUtil` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.huawei.hms.push.utils.JsonUtil` v0 @kind this) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2571d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2571de.  return @kind void;
}
procedure `void` `a`(`org.json.JSONObject` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object, `android.os.Bundle` v6 @kind object) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.a:(Lorg/json/JSONObject;Ljava/lang/String;Ljava/lang/Object;Landroid/os/Bundle;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2571f0.  v0:= "JsonUtil" @kind object;
  #L2571f4.  if v5 != 0 then goto L257204;
  #L2571f8.  v3:= "transfer jsonObject to bundle failed, defaultValue is null." @kind object;
  #L2571fc.  call `w`(v0, v3) @signature `Lcom/huawei/hms/support/log/HMSLog;.w:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L257202.  return @kind void;
  #L257204.  v1:= instanceof @variable v5 @type ^`java.lang.String` @kind boolean;
  #L257208.  v2:= 0I;
  #L25720a.  if v1 == 0 then goto L257232;
  #L25720e.  v5:= (`java.lang.String`) v5 @kind object;
  #L257212.  call temp:= `isEmpty`(v5) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L257218.  v0:= temp;
  #L25721a.  if v0 == 0 then goto L257220;
  #L25721e.  goto L257222;
  #L257220.  v2:= v5 @kind object;
  #L257222.  call temp:= `getString`(v3, v4, v2) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.getString:(Lorg/json/JSONObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L257228.  v3:= temp @kind object;
  #L25722a.  call `putString`(v6, v4, v3) @signature `Landroid/os/Bundle;.putString:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L257230.  goto L2572d2;
  #L257232.  v1:= instanceof @variable v5 @type ^`java.lang.Integer` @kind boolean;
  #L257236.  if v1 == 0 then goto L257256;
  #L25723a.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L25723e.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L257244.  v5:= temp;
  #L257246.  call temp:= `getInt`(v3, v4, v5) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.getInt:(Lorg/json/JSONObject;Ljava/lang/String;I)I` @kind static;
  #L25724c.  v3:= temp;
  #L25724e.  call `putInt`(v6, v4, v3) @signature `Landroid/os/Bundle;.putInt:(Ljava/lang/String;I)V` @kind virtual;
  #L257254.  goto L2572d2;
  #L257256.  v1:= instanceof @variable v5 @type ^`int`[] @kind boolean;
  #L25725a.  if v1 == 0 then goto L25727c;
  #L25725e.  v5:= (`int`[]) v5 @kind object;
  #L257262.  v0:= length @variable v5;
  #L257264.  if v0 != 0 then goto L25726a;
  #L257268.  goto L25726c;
  #L25726a.  v2:= v5 @kind object;
  #L25726c.  call temp:= `getIntArray`(v3, v4, v2) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.getIntArray:(Lorg/json/JSONObject;Ljava/lang/String;[I)[I` @kind static;
  #L257272.  v3:= temp @kind object;
  #L257274.  call `putIntArray`(v6, v4, v3) @signature `Landroid/os/Bundle;.putIntArray:(Ljava/lang/String;[I)V` @kind virtual;
  #L25727a.  goto L2572d2;
  #L25727c.  v1:= instanceof @variable v5 @type ^`long`[] @kind boolean;
  #L257280.  if v1 == 0 then goto L2572a2;
  #L257284.  v5:= (`long`[]) v5 @kind object;
  #L257288.  v0:= length @variable v5;
  #L25728a.  if v0 != 0 then goto L257290;
  #L25728e.  goto L257292;
  #L257290.  v2:= v5 @kind object;
  #L257292.  call temp:= `getLongArray`(v3, v4, v2) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.getLongArray:(Lorg/json/JSONObject;Ljava/lang/String;[J)[J` @kind static;
  #L257298.  v3:= temp @kind object;
  #L25729a.  call `putLongArray`(v6, v4, v3) @signature `Landroid/os/Bundle;.putLongArray:(Ljava/lang/String;[J)V` @kind virtual;
  #L2572a0.  goto L2572d2;
  #L2572a2.  v1:= instanceof @variable v5 @type ^`java.lang.String`[] @kind boolean;
  #L2572a6.  if v1 == 0 then goto L2572c8;
  #L2572aa.  v5:= (`java.lang.String`[]) v5 @kind object;
  #L2572ae.  v0:= length @variable v5;
  #L2572b0.  if v0 != 0 then goto L2572b6;
  #L2572b4.  goto L2572b8;
  #L2572b6.  v2:= v5 @kind object;
  #L2572b8.  call temp:= `getStringArray`(v3, v4, v2) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.getStringArray:(Lorg/json/JSONObject;Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L2572be.  v3:= temp @kind object;
  #L2572c0.  call `putStringArray`(v6, v4, v3) @signature `Landroid/os/Bundle;.putStringArray:(Ljava/lang/String;[Ljava/lang/String;)V` @kind virtual;
  #L2572c6.  goto L2572d2;
  #L2572c8.  v3:= "transfer jsonObject to bundle failed, invalid data type." @kind object;
  #L2572cc.  call `w`(v0, v3) @signature `Lcom/huawei/hms/support/log/HMSLog;.w:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2572d2.  return @kind void;
}
procedure `int` `getInt`(`org.json.JSONObject` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.getInt:(Lorg/json/JSONObject;Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L256e1c.  if v1 == 0 then goto L256e6c;
  #L256e20.  call temp:= `has`(v1, v2) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L256e26.  v0:= temp;
  #L256e28.  if v0 == 0 then goto L256e6c;
  #L256e2c.  call temp:= `getInt`(v1, v2) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L256e32.  v3:= temp;
  #L256e34.  goto L256e6c;
  #L256e36.  v1:= new `java.lang.StringBuilder`;
  #L256e3a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L256e40.  v0:= "JSONException: get " @kind object;
  #L256e44.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256e4a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256e50.  v2:= " error." @kind object;
  #L256e54.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256e5a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L256e60.  v1:= temp @kind object;
  #L256e62.  v2:= "JsonUtil" @kind object;
  #L256e66.  call `w`(v2, v1) @signature `Lcom/huawei/hms/support/log/HMSLog;.w:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L256e6c.  return v3;
  catch `org.json.JSONException` @[L256e20..L256e34] goto L256e36;
}
procedure `int`[] `getIntArray`(`org.json.JSONObject` v3 @kind object, `java.lang.String` v4 @kind object, `int`[] v5 @kind object) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.getIntArray:(Lorg/json/JSONObject;Ljava/lang/String;[I)[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L256e90.  v0:= 0I;
  #L256e92.  if v3 == 0 then goto L256f18;
  #L256e96.  call temp:= `has`(v3, v4) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L256e9c.  v1:= temp;
  #L256e9e.  if v1 == 0 then goto L256f18;
  #L256ea2.  call temp:= `getJSONArray`(v3, v4) @signature `Lorg/json/JSONObject;.getJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;` @kind virtual;
  #L256ea8.  v3:= temp @kind object;
  #L256eaa.  call temp:= `length`(v3) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L256eb0.  v1:= temp;
  #L256eb2.  v0:= new `int`[v1];
  #L256eb6.  v1:= 0I;
  #L256eb8.  call temp:= `length`(v3) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L256ebe.  v2:= temp;
  #L256ec0.  if v1 >= v2 then goto L256f18;
  #L256ec4.  call temp:= `get`(v3, v1) @signature `Lorg/json/JSONArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L256eca.  v2:= temp @kind object;
  #L256ecc.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L256ed0.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L256ed6.  v2:= temp;
  #L256ed8.  v0[v1]:= v2;
  #L256edc.  v1:= v1 + 1;
  #L256ee0.  goto L256eb8;
  #L256ee2.  v3:= new `java.lang.StringBuilder`;
  #L256ee6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L256eec.  v1:= "JSONException: get " @kind object;
  #L256ef0.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256ef6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256efc.  v4:= " error." @kind object;
  #L256f00.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256f06.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L256f0c.  v3:= temp @kind object;
  #L256f0e.  v4:= "JsonUtil" @kind object;
  #L256f12.  call `w`(v4, v3) @signature `Lcom/huawei/hms/support/log/HMSLog;.w:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L256f18.  if v0 != 0 then goto L256f1e;
  #L256f1c.  goto L256f20;
  #L256f1e.  v5:= v0 @kind object;
  #L256f20.  return v5 @kind object;
  catch `org.json.JSONException` @[L256e96..L256edc] goto L256ee2;
}
procedure `org.json.JSONArray` `getIntJsonArray`(`int`[] v4 @kind object) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.getIntJsonArray:([I)Lorg/json/JSONArray;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L257118.  v0:= new `org.json.JSONArray`;
  #L25711c.  call `<init>`(v0) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L257122.  if v4 == 0 then goto L257146;
  #L257126.  v1:= length @variable v4;
  #L257128.  if v1 != 0 then goto L25712e;
  #L25712c.  goto L257146;
  #L25712e.  v1:= length @variable v4;
  #L257130.  v2:= 0I;
  #L257132.  if v2 >= v1 then goto L257146;
  #L257136.  v3:= v4[v2];
  #L25713a.  call temp:= `put`(v0, v3) @signature `Lorg/json/JSONArray;.put:(I)Lorg/json/JSONArray;` @kind virtual;
  #L257140.  v2:= v2 + 1;
  #L257144.  goto L257132;
  #L257146.  return v0 @kind object;
}
procedure `long`[] `getLongArray`(`org.json.JSONObject` v4 @kind object, `java.lang.String` v5 @kind object, `long`[] v6 @kind object) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.getLongArray:(Lorg/json/JSONObject;Ljava/lang/String;[J)[J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L257070.  v0:= 0I;
  #L257072.  if v4 == 0 then goto L2570ec;
  #L257076.  call temp:= `has`(v4, v5) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L25707c.  v1:= temp;
  #L25707e.  if v1 == 0 then goto L2570ec;
  #L257082.  call temp:= `getJSONArray`(v4, v5) @signature `Lorg/json/JSONObject;.getJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;` @kind virtual;
  #L257088.  v4:= temp @kind object;
  #L25708a.  call temp:= `length`(v4) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L257090.  v1:= temp;
  #L257092.  v0:= new `long`[v1];
  #L257096.  v1:= 0I;
  #L257098.  call temp:= `length`(v4) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L25709e.  v2:= temp;
  #L2570a0.  if v1 >= v2 then goto L2570ec;
  #L2570a4.  call temp:= `getLong`(v4, v1) @signature `Lorg/json/JSONArray;.getLong:(I)J` @kind virtual;
  #L2570aa.  v2:= temp @kind wide;
  #L2570ac.  v0[v1]:= v2 @kind wide;
  #L2570b0.  v1:= v1 + 1;
  #L2570b4.  goto L257098;
  #L2570b6.  v4:= new `java.lang.StringBuilder`;
  #L2570ba.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2570c0.  v1:= "JSONException: get " @kind object;
  #L2570c4.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2570ca.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2570d0.  v5:= " error." @kind object;
  #L2570d4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2570da.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2570e0.  v4:= temp @kind object;
  #L2570e2.  v5:= "JsonUtil" @kind object;
  #L2570e6.  call `w`(v5, v4) @signature `Lcom/huawei/hms/support/log/HMSLog;.w:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2570ec.  if v0 != 0 then goto L2570f2;
  #L2570f0.  goto L2570f4;
  #L2570f2.  v6:= v0 @kind object;
  #L2570f4.  return v6 @kind object;
  catch `org.json.JSONException` @[L257076..L2570b0] goto L2570b6;
}
procedure `org.json.JSONArray` `getLongJsonArray`(`long`[] v5 @kind object) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.getLongJsonArray:([J)Lorg/json/JSONArray;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L257158.  v0:= new `org.json.JSONArray`;
  #L25715c.  call `<init>`(v0) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L257162.  if v5 == 0 then goto L257186;
  #L257166.  v1:= length @variable v5;
  #L257168.  if v1 != 0 then goto L25716e;
  #L25716c.  goto L257186;
  #L25716e.  v1:= length @variable v5;
  #L257170.  v2:= 0I;
  #L257172.  if v2 >= v1 then goto L257186;
  #L257176.  v3:= v5[v2] @kind wide;
  #L25717a.  call temp:= `put`(v0, v3) @signature `Lorg/json/JSONArray;.put:(J)Lorg/json/JSONArray;` @kind virtual;
  #L257180.  v2:= v2 + 1;
  #L257184.  goto L257172;
  #L257186.  return v0 @kind object;
}
procedure `java.lang.String` `getString`(`org.json.JSONObject` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.getString:(Lorg/json/JSONObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L256f44.  if v1 == 0 then goto L256fa8;
  #L256f48.  call temp:= `has`(v1, v2) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L256f4e.  v0:= temp;
  #L256f50.  if v0 == 0 then goto L256fa8;
  #L256f54.  call temp:= `get`(v1, v2) @signature `Lorg/json/JSONObject;.get:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L256f5a.  v0:= temp @kind object;
  #L256f5c.  if v0 == 0 then goto L256fa8;
  #L256f60.  call temp:= `get`(v1, v2) @signature `Lorg/json/JSONObject;.get:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L256f66.  v1:= temp @kind object;
  #L256f68.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L256f6e.  v3:= temp @kind object;
  #L256f70.  goto L256fa8;
  #L256f72.  v1:= new `java.lang.StringBuilder`;
  #L256f76.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L256f7c.  v0:= "JSONException: get " @kind object;
  #L256f80.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256f86.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256f8c.  v2:= " error." @kind object;
  #L256f90.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256f96.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L256f9c.  v1:= temp @kind object;
  #L256f9e.  v2:= "JsonUtil" @kind object;
  #L256fa2.  call `w`(v2, v1) @signature `Lcom/huawei/hms/support/log/HMSLog;.w:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L256fa8.  return v3 @kind object;
  catch `org.json.JSONException` @[L256f48..L256f70] goto L256f72;
}
procedure `java.lang.String`[] `getStringArray`(`org.json.JSONObject` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String`[] v4 @kind object) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.getStringArray:(Lorg/json/JSONObject;Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L256fcc.  v4:= 0I;
  #L256fce.  if v2 == 0 then goto L25704c;
  #L256fd2.  call temp:= `has`(v2, v3) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L256fd8.  v0:= temp;
  #L256fda.  if v0 == 0 then goto L25704c;
  #L256fde.  call temp:= `getJSONArray`(v2, v3) @signature `Lorg/json/JSONObject;.getJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;` @kind virtual;
  #L256fe4.  v2:= temp @kind object;
  #L256fe6.  call temp:= `length`(v2) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L256fec.  v0:= temp;
  #L256fee.  v4:= new `java.lang.String`[v0];
  #L256ff2.  v0:= 0I;
  #L256ff4.  call temp:= `length`(v2) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L256ffa.  v1:= temp;
  #L256ffc.  if v0 >= v1 then goto L25704c;
  #L257000.  call temp:= `get`(v2, v0) @signature `Lorg/json/JSONArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L257006.  v1:= temp @kind object;
  #L257008.  v1:= (`java.lang.String`) v1 @kind object;
  #L25700c.  v4[v0]:= v1 @kind object;
  #L257010.  v0:= v0 + 1;
  #L257014.  goto L256ff4;
  #L257016.  v2:= new `java.lang.StringBuilder`;
  #L25701a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L257020.  v0:= "JSONException: get " @kind object;
  #L257024.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25702a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L257030.  v3:= " error." @kind object;
  #L257034.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25703a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L257040.  v2:= temp @kind object;
  #L257042.  v3:= "JsonUtil" @kind object;
  #L257046.  call `w`(v3, v2) @signature `Lcom/huawei/hms/support/log/HMSLog;.w:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L25704c.  return v4 @kind object;
  catch `org.json.JSONException` @[L256fd2..L257010] goto L257016;
}
procedure `org.json.JSONArray` `getStringJsonArray`(`java.lang.String`[] v4 @kind object) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.getStringJsonArray:([Ljava/lang/String;)Lorg/json/JSONArray;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L257198.  v0:= new `org.json.JSONArray`;
  #L25719c.  call `<init>`(v0) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L2571a2.  if v4 == 0 then goto L2571c6;
  #L2571a6.  v1:= length @variable v4;
  #L2571a8.  if v1 != 0 then goto L2571ae;
  #L2571ac.  goto L2571c6;
  #L2571ae.  v1:= length @variable v4;
  #L2571b0.  v2:= 0I;
  #L2571b2.  if v2 >= v1 then goto L2571c6;
  #L2571b6.  v3:= v4[v2] @kind object;
  #L2571ba.  call temp:= `put`(v0, v3) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L2571c0.  v2:= v2 + 1;
  #L2571c4.  goto L2571b2;
  #L2571c6.  return v0 @kind object;
}
procedure `void` `transferJsonObjectToBundle`(`org.json.JSONObject` v2 @kind object, `android.os.Bundle` v3 @kind object, `java.util.HashMap` v4 @kind object) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.transferJsonObjectToBundle:(Lorg/json/JSONObject;Landroid/os/Bundle;Ljava/util/HashMap;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2572e4.  call temp:= `entrySet`(v4) @signature `Ljava/util/HashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L2572ea.  v4:= temp @kind object;
  #L2572ec.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2572f2.  v4:= temp @kind object;
  #L2572f4.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2572fa.  v0:= temp;
  #L2572fc.  if v0 == 0 then goto L257328;
  #L257300.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L257306.  v0:= temp @kind object;
  #L257308.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L25730c.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L257312.  v1:= temp @kind object;
  #L257314.  v1:= (`java.lang.String`) v1 @kind object;
  #L257318.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L25731e.  v0:= temp @kind object;
  #L257320.  call `a`(v2, v1, v0, v3) @signature `Lcom/huawei/hms/push/utils/JsonUtil;.a:(Lorg/json/JSONObject;Ljava/lang/String;Ljava/lang/Object;Landroid/os/Bundle;)V` @kind static;
  #L257326.  goto L2572f4;
  #L257328.  return @kind void;
}
