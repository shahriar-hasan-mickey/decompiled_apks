record `com.huawei.hms.support.gentyref.GenericTypeReflector` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.huawei.hms.support.gentyref.GenericTypeReflector` v0 @kind this) @signature `Lcom/huawei/hms/support/gentyref/GenericTypeReflector;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c419c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c41a2.  return @kind void;
}
procedure `java.lang.Class` `getType`(`java.lang.reflect.Type` v3 @kind object) @signature `Lcom/huawei/hms/support/gentyref/GenericTypeReflector;.getType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2c40f4.  v0:= instanceof @variable v3 @type ^`java.lang.Class` @kind boolean;
  #L2c40f8.  if v0 == 0 then goto L2c4102;
  #L2c40fc.  v3:= (`java.lang.Class`) v3 @kind object;
  #L2c4100.  return v3 @kind object;
  #L2c4102.  v0:= instanceof @variable v3 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L2c4106.  if v0 == 0 then goto L2c411c;
  #L2c410a.  v3:= (`java.lang.reflect.ParameterizedType`) v3 @kind object;
  #L2c410e.  call temp:= `getRawType`(v3) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L2c4114.  v3:= temp @kind object;
  #L2c4116.  v3:= (`java.lang.Class`) v3 @kind object;
  #L2c411a.  return v3 @kind object;
  #L2c411c.  v0:= instanceof @variable v3 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L2c4120.  if v0 == 0 then goto L2c4154;
  #L2c4124.  v3:= (`java.lang.reflect.TypeVariable`) v3 @kind object;
  #L2c4128.  call temp:= `getBounds`(v3) @signature `Ljava/lang/reflect/TypeVariable;.getBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L2c412e.  v0:= temp @kind object;
  #L2c4130.  v0:= length @variable v0;
  #L2c4132.  if v0 != 0 then goto L2c413c;
  #L2c4136.  v3:= constclass @type ^`java.lang.Object` @kind object;
  #L2c413a.  return v3 @kind object;
  #L2c413c.  call temp:= `getBounds`(v3) @signature `Ljava/lang/reflect/TypeVariable;.getBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L2c4142.  v3:= temp @kind object;
  #L2c4144.  v0:= 0I;
  #L2c4146.  v3:= v3[v0] @kind object;
  #L2c414a.  call temp:= `getType`(v3) @signature `Lcom/huawei/hms/support/gentyref/GenericTypeReflector;.getType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L2c4150.  v3:= temp @kind object;
  #L2c4152.  return v3 @kind object;
  #L2c4154.  v0:= new `java.lang.IllegalArgumentException`;
  #L2c4158.  v1:= new `java.lang.StringBuilder`;
  #L2c415c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c4162.  v2:= "not supported: " @kind object;
  #L2c4166.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c416c.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c4172.  v3:= temp @kind object;
  #L2c4174.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c417a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c4180.  v3:= temp @kind object;
  #L2c4182.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c4188.  throw v0;
}
