record `com.huawei.hms.support.api.client.ResultConvert` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`com.huawei.hms.support.api.client.ResultConvert` v0 @kind this) @signature `Lcom/huawei/hms/support/api/client/ResultConvert;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2bddac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bddb2.  return @kind void;
}
procedure `com.huawei.hms.support.api.client.PendingResult` `newFailedPendingResult`(`com.huawei.hms.support.api.client.ResultConvert` v2 @kind this, `com.huawei.hms.support.api.client.Status` v3 @kind object) @signature `Lcom/huawei/hms/support/api/client/ResultConvert;.newFailedPendingResult:(Lcom/huawei/hms/support/api/client/Status;)Lcom/huawei/hms/support/api/client/PendingResult;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2bdd40.  v0:= "The input status cannot be null" @kind object;
  #L2bdd44.  call temp:= `checkNotNull`(v3, v0) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2bdd4a.  call temp:= `isSuccess`(v3) @signature `Lcom/huawei/hms/support/api/client/Status;.isSuccess:()Z` @kind virtual;
  #L2bdd50.  v0:= temp;
  #L2bdd52.  v0:= v0 ^~ 1;
  #L2bdd56.  v1:= "The input status must be call with success status" @kind object;
  #L2bdd5a.  call `checkArgument`(v0, v1) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkArgument:(ZLjava/lang/Object;)V` @kind static;
  #L2bdd60.  v0:= new `com.huawei.hms.support.api.client.ResultConvert$FailPendingResult`;
  #L2bdd64.  call `<init>`(v0, v2, v3) @signature `Lcom/huawei/hms/support/api/client/ResultConvert$FailPendingResult;.<init>:(Lcom/huawei/hms/support/api/client/ResultConvert;Lcom/huawei/hms/support/api/client/Status;)V` @kind direct;
  #L2bdd6a.  return v0 @kind object;
}
procedure `com.huawei.hms.support.api.client.Status` `onFailed`(`com.huawei.hms.support.api.client.ResultConvert` v1 @kind this, `com.huawei.hms.support.api.client.Status` v2 @kind object) @signature `Lcom/huawei/hms/support/api/client/ResultConvert;.onFailed:(Lcom/huawei/hms/support/api/client/Status;)Lcom/huawei/hms/support/api/client/Status;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bdd7c.  v0:= "The input status cannot be null" @kind object;
  #L2bdd80.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/huawei/hms/common/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2bdd86.  call temp:= `getStatusCode`(v2) @signature `Lcom/huawei/hms/support/api/client/Status;.getStatusCode:()I` @kind virtual;
  #L2bdd8c.  v0:= temp;
  #L2bdd8e.  if v0 == 0 then goto L2bdd94;
  #L2bdd92.  return v2 @kind object;
  #L2bdd94.  v2:= `@@com.huawei.hms.support.api.client.Status.CoreException` @type ^`com.huawei.hms.support.api.client.Status` @kind object;
  #L2bdd98.  return v2 @kind object;
}
procedure `com.huawei.hms.support.api.client.PendingResult` `onSuccess`(`com.huawei.hms.support.api.client.Result` v0 @kind object) @signature `Lcom/huawei/hms/support/api/client/ResultConvert;.onSuccess:(Lcom/huawei/hms/support/api/client/Result;)Lcom/huawei/hms/support/api/client/PendingResult;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
