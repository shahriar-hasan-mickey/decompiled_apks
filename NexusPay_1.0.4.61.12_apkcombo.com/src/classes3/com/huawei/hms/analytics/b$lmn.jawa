record `com.huawei.hms.analytics.b$lmn` @kind class @AccessFlag PUBLIC_FINAL extends `com.huawei.hmf.tasks.OnFailureListener` @kind interface {
}
procedure `void` `<init>`(`com.huawei.hms.analytics.b$lmn` v0 @kind this) @signature `Lcom/huawei/hms/analytics/b$lmn;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1cfce8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1cfcee.  return @kind void;
}
procedure `void` `onFailure`(`com.huawei.hms.analytics.b$lmn` v2 @kind this, `java.lang.Exception` v3 @kind object) @signature `Lcom/huawei/hms/analytics/b$lmn;.onFailure:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1cfd00.  v0:= new `java.lang.StringBuilder`;
  #L1cfd04.  v1:= "Task notifyKitAPP fail." @kind object;
  #L1cfd08.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cfd0e.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1cfd14.  v3:= temp @kind object;
  #L1cfd16.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cfd1c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cfd22.  v3:= temp @kind object;
  #L1cfd24.  v0:= "HAObservableHolder" @kind object;
  #L1cfd28.  call `e`(v0, v3) @signature `Lcom/huawei/hms/analytics/core/log/HiLog;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1cfd2e.  return @kind void;
}
