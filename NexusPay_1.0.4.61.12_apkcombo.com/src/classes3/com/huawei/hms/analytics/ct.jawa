record `com.huawei.hms.analytics.ct` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.List` `@@com.huawei.hms.analytics.ct.klm` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@com.huawei.hms.analytics.ct.lmn` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/analytics/ct;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d98b8.  v0:= "_campaign_info" @kind object;
  #L1d98bc.  temp:= new `java.lang.String`[v0];
  #L1d98c2.  v0:= temp @kind object;
  #L1d98c4.  `@@com.huawei.hms.analytics.ct.lmn` @type ^`java.lang.String`[] := v0 @kind object;
  #L1d98c8.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d98ce.  v0:= temp @kind object;
  #L1d98d0.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1d98d6.  v0:= temp @kind object;
  #L1d98d8.  `@@com.huawei.hms.analytics.ct.klm` @type ^`java.util.List` := v0 @kind object;
  #L1d98dc.  return @kind void;
}
procedure `java.util.List` `klm`(`org.json.JSONArray` v4 @kind object) @signature `Lcom/huawei/hms/analytics/ct;.klm:(Lorg/json/JSONArray;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d95e4.  v0:= new `java.util.ArrayList`;
  #L1d95e8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1d95ee.  v1:= 0I;
  #L1d95f0.  call temp:= `length`(v4) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L1d95f6.  v2:= temp;
  #L1d95f8.  if v1 >= v2 then goto L1d9620;
  #L1d95fc.  call temp:= `getJSONObject`(v4, v1) @signature `Lorg/json/JSONArray;.getJSONObject:(I)Lorg/json/JSONObject;` @kind virtual;
  #L1d9602.  v2:= temp @kind object;
  #L1d9604.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1d960a.  goto L1d961a;
  #L1d960c.  v2:= "ConvertMethod" @kind object;
  #L1d9610.  v3:= "json array item is not jsonObject" @kind object;
  #L1d9614.  call `w`(v2, v3) @signature `Lcom/huawei/hms/analytics/core/log/HiLog;.w:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1d961a.  v1:= v1 + 1;
  #L1d961e.  goto L1d95f0;
  #L1d9620.  return v0 @kind object;
  catch `org.json.JSONException` @[L1d95fc..L1d960a] goto L1d960c;
}
procedure `java.util.Map` `klm`(`java.util.Map` v3 @kind object) @signature `Lcom/huawei/hms/analytics/ct;.klm:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1d9644.  v0:= new `java.util.HashMap`;
  #L1d9648.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1d964e.  if v3 == 0 then goto L1d96a8;
  #L1d9652.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L1d9658.  v1:= temp;
  #L1d965a.  if v1 != 0 then goto L1d9660;
  #L1d965e.  goto L1d96a8;
  #L1d9660.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L1d9666.  v3:= temp @kind object;
  #L1d9668.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d966e.  v3:= temp @kind object;
  #L1d9670.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d9676.  v1:= temp;
  #L1d9678.  if v1 == 0 then goto L1d96a8;
  #L1d967c.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d9682.  v1:= temp @kind object;
  #L1d9684.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L1d9688.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1d968e.  v2:= temp @kind object;
  #L1d9690.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1d9696.  v1:= temp @kind object;
  #L1d9698.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1d969e.  v1:= temp @kind object;
  #L1d96a0.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d96a6.  goto L1d9670;
  #L1d96a8.  return v0 @kind object;
}
procedure `android.os.Bundle` `lmn`(`android.os.Bundle` v0 @kind object) @signature `Lcom/huawei/hms/analytics/ct;.lmn:(Landroid/os/Bundle;)Landroid/os/Bundle;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1d9558.  if v0 != 0 then goto L1d9560;
  #L1d955c.  v0:= 0I;
  #L1d955e.  return v0 @kind object;
  #L1d9560.  call temp:= `clone`(v0) @signature `Landroid/os/Bundle;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1d9566.  v0:= temp @kind object;
  #L1d9568.  v0:= (`android.os.Bundle`) v0 @kind object;
  #L1d956c.  return v0 @kind object;
}
procedure `java.lang.String` `lmn`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/huawei/hms/analytics/ct;.lmn:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1d9580.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1d9586.  v0:= temp;
  #L1d9588.  v1:= "" @kind object;
  #L1d958c.  if v0 != 0 then goto L1d95c0;
  #L1d9590.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1d9596.  v0:= temp;
  #L1d9598.  if v0 == 0 then goto L1d959e;
  #L1d959c.  goto L1d95c0;
  #L1d959e.  v0:= new `org.json.JSONObject`;
  #L1d95a2.  call `<init>`(v0, v2) @signature `Lorg/json/JSONObject;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d95a8.  call temp:= `getString`(v0, v3) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1d95ae.  v1:= temp @kind object;
  #L1d95b0.  goto L1d95c0;
  #L1d95b2.  v2:= "ConvertMethod" @kind object;
  #L1d95b6.  v3:= "JSONException: Failed to obtain the key from jsonStr." @kind object;
  #L1d95ba.  call `w`(v2, v3) @signature `Lcom/huawei/hms/analytics/core/log/HiLog;.w:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1d95c0.  return v1 @kind object;
  catch `org.json.JSONException` @[L1d959e..L1d95b0] goto L1d95b2;
}
procedure `java.util.Map` `lmn`(`org.json.JSONObject` v5 @kind object) @signature `Lcom/huawei/hms/analytics/ct;.lmn:(Lorg/json/JSONObject;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d96bc.  v0:= new `java.util.HashMap`;
  #L1d96c0.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1d96c6.  if v5 == 0 then goto L1d9752;
  #L1d96ca.  call temp:= `length`(v5) @signature `Lorg/json/JSONObject;.length:()I` @kind virtual;
  #L1d96d0.  v1:= temp;
  #L1d96d2.  if v1 != 0 then goto L1d96d8;
  #L1d96d6.  goto L1d9752;
  #L1d96d8.  call temp:= `keys`(v5) @signature `Lorg/json/JSONObject;.keys:()Ljava/util/Iterator;` @kind virtual;
  #L1d96de.  v1:= temp @kind object;
  #L1d96e0.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d96e6.  v2:= temp;
  #L1d96e8.  if v2 == 0 then goto L1d9752;
  #L1d96ec.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d96f2.  v2:= temp @kind object;
  #L1d96f4.  v2:= (`java.lang.String`) v2 @kind object;
  #L1d96f8.  v3:= "_restriction_shared" @kind object;
  #L1d96fc.  call temp:= `equals`(v3, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d9702.  v3:= temp;
  #L1d9704.  if v3 == 0 then goto L1d9738;
  #L1d9708.  v3:= new `java.lang.StringBuilder`;
  #L1d970c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d9712.  call temp:= `lmn`() @signature `Lcom/huawei/hms/analytics/al;.lmn:()Lcom/huawei/hms/analytics/al;` @kind static;
  #L1d9718.  v4:= temp @kind object;
  #L1d971a.  v4:= v4.`com.huawei.hms.analytics.al.lmn` @type ^`com.huawei.hms.analytics.an` @kind object;
  #L1d971e.  v4:= v4.`com.huawei.hms.analytics.an.def` @type ^`boolean` @kind boolean;
  #L1d9722.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9728.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d972e.  v3:= temp @kind object;
  #L1d9730.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d9736.  goto L1d96e0;
  #L1d9738.  v3:= `@@com.huawei.hms.analytics.ct.klm` @type ^`java.util.List` @kind object;
  #L1d973c.  call temp:= `lmn`(v2, v3) @signature `Lcom/huawei/hms/analytics/cr;.lmn:(Ljava/lang/String;Ljava/util/List;)Z` @kind static;
  #L1d9742.  v3:= temp;
  #L1d9744.  if v3 != 0 then goto L1d96e0;
  #L1d9748.  call temp:= `optString`(v5, v2) @signature `Lorg/json/JSONObject;.optString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1d974e.  v3:= temp @kind object;
  #L1d9750.  goto L1d9730;
  #L1d9752.  return v0 @kind object;
}
procedure `org.json.JSONArray` `lmn`(`java.util.List` v2 @kind object) @signature `Lcom/huawei/hms/analytics/ct;.lmn:(Ljava/util/List;)Lorg/json/JSONArray;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1d9764.  v0:= new `org.json.JSONArray`;
  #L1d9768.  call `<init>`(v0) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L1d976e.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d9774.  v2:= temp @kind object;
  #L1d9776.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d977c.  v1:= temp;
  #L1d977e.  if v1 == 0 then goto L1d9796;
  #L1d9782.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d9788.  v1:= temp @kind object;
  #L1d978a.  v1:= (`org.json.JSONObject`) v1 @kind object;
  #L1d978e.  call temp:= `put`(v0, v1) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L1d9794.  goto L1d9776;
  #L1d9796.  return v0 @kind object;
}
procedure `org.json.JSONArray` `lmn`(`org.json.JSONArray` v5 @kind object) @signature `Lcom/huawei/hms/analytics/ct;.lmn:(Lorg/json/JSONArray;)Lorg/json/JSONArray;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d97a8.  if v5 != 0 then goto L1d97b8;
  #L1d97ac.  v5:= new `org.json.JSONArray`;
  #L1d97b0.  call `<init>`(v5) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L1d97b6.  return v5 @kind object;
  #L1d97b8.  call temp:= `length`(v5) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L1d97be.  v0:= temp;
  #L1d97c0.  v1:= 1000I;
  #L1d97c4.  if v1 < v0 then goto L1d97ca;
  #L1d97c8.  return v5 @kind object;
  #L1d97ca.  v0:= new `org.json.JSONArray`;
  #L1d97ce.  call `<init>`(v0) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L1d97d4.  v2:= 0I;
  #L1d97d6.  if v2 >= v1 then goto L1d97fe;
  #L1d97da.  call temp:= `get`(v5, v2) @signature `Lorg/json/JSONArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1d97e0.  v3:= temp @kind object;
  #L1d97e2.  call temp:= `put`(v0, v3) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L1d97e8.  goto L1d97f8;
  #L1d97ea.  v3:= "ConvertMethod" @kind object;
  #L1d97ee.  v4:= "truncate JSONArray error" @kind object;
  #L1d97f2.  call `w`(v3, v4) @signature `Lcom/huawei/hms/analytics/core/log/HiLog;.w:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1d97f8.  v2:= v2 + 1;
  #L1d97fc.  goto L1d97d6;
  #L1d97fe.  return v0 @kind object;
  catch `org.json.JSONException` @[L1d97da..L1d97e8] goto L1d97ea;
}
procedure `org.json.JSONObject` `lmn`(`java.util.Map` v3 @kind object) @signature `Lcom/huawei/hms/analytics/ct;.lmn:(Ljava/util/Map;)Lorg/json/JSONObject;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1d9820.  if v3 == 0 then goto L1d9892;
  #L1d9824.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L1d982a.  v0:= temp;
  #L1d982c.  if v0 != 0 then goto L1d9832;
  #L1d9830.  goto L1d9892;
  #L1d9832.  v0:= new `org.json.JSONObject`;
  #L1d9836.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L1d983c.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L1d9842.  v3:= temp @kind object;
  #L1d9844.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d984a.  v3:= temp @kind object;
  #L1d984c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d9852.  v1:= temp;
  #L1d9854.  if v1 == 0 then goto L1d9890;
  #L1d9858.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d985e.  v1:= temp @kind object;
  #L1d9860.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L1d9864.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1d986a.  v2:= temp @kind object;
  #L1d986c.  v2:= (`java.lang.String`) v2 @kind object;
  #L1d9870.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1d9876.  v1:= temp @kind object;
  #L1d9878.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L1d987e.  goto L1d984c;
  #L1d9880.  v1:= "ConvertMethod" @kind object;
  #L1d9884.  v2:= "map to json exception" @kind object;
  #L1d9888.  call `w`(v1, v2) @signature `Lcom/huawei/hms/analytics/core/log/HiLog;.w:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1d988e.  goto L1d984c;
  #L1d9890.  return v0 @kind object;
  #L1d9892.  v3:= 0I;
  #L1d9894.  return v3 @kind object;
  catch `org.json.JSONException` @[L1d9864..L1d987e] goto L1d9880;
}
