record `com.huawei.hms.analytics.HiAnalyticsInstance$3` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `com.huawei.hms.analytics.HiAnalyticsInstance` `com.huawei.hms.analytics.HiAnalyticsInstance$3.klm` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `com.huawei.hms.analytics.HiAnalyticsInstance$3.lmn` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.huawei.hms.analytics.HiAnalyticsInstance$3` v0 @kind this, `com.huawei.hms.analytics.HiAnalyticsInstance` v1 @kind object, `boolean` v2 ) @signature `Lcom/huawei/hms/analytics/HiAnalyticsInstance$3;.<init>:(Lcom/huawei/hms/analytics/HiAnalyticsInstance;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1cba9c.  v0.`com.huawei.hms.analytics.HiAnalyticsInstance$3.klm` @type ^`com.huawei.hms.analytics.HiAnalyticsInstance` := v1 @kind object;
  #L1cbaa0.  v0.`com.huawei.hms.analytics.HiAnalyticsInstance$3.lmn` @type ^`boolean` := v2 @kind boolean;
  #L1cbaa4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1cbaaa.  return @kind void;
}
procedure `void` `run`(`com.huawei.hms.analytics.HiAnalyticsInstance$3` v2 @kind this) @signature `Lcom/huawei/hms/analytics/HiAnalyticsInstance$3;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1cbabc.  call temp:= `lmn`() @signature `Lcom/huawei/hms/analytics/au;.lmn:()Z` @kind static;
  #L1cbac2.  v0:= temp;
  #L1cbac4.  if v0 == 0 then goto L1cbada;
  #L1cbac8.  call temp:= `klm`() @signature `Lcom/huawei/hms/analytics/HiAnalyticsInstance;.klm:()Lcom/huawei/hms/analytics/bc;` @kind static;
  #L1cbace.  v0:= temp @kind object;
  #L1cbad0.  v1:= v2.`com.huawei.hms.analytics.HiAnalyticsInstance$3.lmn` @type ^`boolean` @kind boolean;
  #L1cbad4.  call `ghi`(v0, v1) @signature `Lcom/huawei/hms/analytics/bc;.ghi:(Z)V` @kind interface;
  #L1cbada.  return @kind void;
}
