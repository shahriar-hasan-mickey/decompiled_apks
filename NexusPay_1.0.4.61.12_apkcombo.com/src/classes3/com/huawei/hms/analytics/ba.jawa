record `com.huawei.hms.analytics.ba` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `klm`(`org.greenrobot.greendao.database.Database` v6 @kind object, `java.lang.Class`[] v7 @kind object) @signature `Lcom/huawei/hms/analytics/ba;.klm:(Lorg/greenrobot/greendao/database/Database;[Ljava/lang/Class;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1cfdfc.  v0:= 0I;
  #L1cfdfe.  v1:= 0I;
  #L1cfe00.  if v1 > 0 then goto L1cfe70;
  #L1cfe04.  v2:= v7[v0] @kind object;
  #L1cfe08.  v3:= new `org.greenrobot.greendao.internal.DaoConfig`;
  #L1cfe0c.  call `<init>`(v3, v6, v2) @signature `Lorg/greenrobot/greendao/internal/DaoConfig;.<init>:(Lorg/greenrobot/greendao/database/Database;Ljava/lang/Class;)V` @kind direct;
  #L1cfe12.  v2:= v3.`org.greenrobot.greendao.internal.DaoConfig.tablename` @type ^`java.lang.String` @kind object;
  #L1cfe16.  v3:= new `java.lang.StringBuilder`;
  #L1cfe1a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1cfe20.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cfe26.  v4:= "_TEMP" @kind object;
  #L1cfe2a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cfe30.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cfe36.  v3:= temp @kind object;
  #L1cfe38.  v4:= new `java.lang.StringBuilder`;
  #L1cfe3c.  v5:= "ALTER TABLE " @kind object;
  #L1cfe40.  call `<init>`(v4, v5) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cfe46.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cfe4c.  v2:= " RENAME TO " @kind object;
  #L1cfe50.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cfe56.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cfe5c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cfe62.  v2:= temp @kind object;
  #L1cfe64.  call `execSQL`(v6, v2) @signature `Lorg/greenrobot/greendao/database/Database;.execSQL:(Ljava/lang/String;)V` @kind interface;
  #L1cfe6a.  v1:= v1 + 1;
  #L1cfe6e.  goto L1cfe00;
  #L1cfe70.  return @kind void;
}
procedure `java.util.List` `lmn`(`org.greenrobot.greendao.database.Database` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/huawei/hms/analytics/ba;.lmn:(Lorg/greenrobot/greendao/database/Database;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1cfd40.  v0:= 0I;
  #L1cfd42.  v1:= new `java.lang.StringBuilder`;
  #L1cfd46.  v2:= "SELECT * FROM " @kind object;
  #L1cfd4a.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cfd50.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cfd56.  v4:= " limit 1" @kind object;
  #L1cfd5a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cfd60.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cfd66.  v4:= temp @kind object;
  #L1cfd68.  call temp:= `rawQuery`(v3, v4, v0) @signature `Lorg/greenrobot/greendao/database/Database;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind interface;
  #L1cfd6e.  v0:= temp @kind object;
  #L1cfd70.  if v0 == 0 then goto L1cfd9a;
  #L1cfd74.  v3:= new `java.util.ArrayList`;
  #L1cfd78.  call temp:= `getColumnNames`(v0) @signature `Landroid/database/Cursor;.getColumnNames:()[Ljava/lang/String;` @kind interface;
  #L1cfd7e.  v4:= temp @kind object;
  #L1cfd80.  call temp:= `asList`(v4) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1cfd86.  v4:= temp @kind object;
  #L1cfd88.  call `<init>`(v3, v4) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L1cfd8e.  if v0 == 0 then goto L1cfd98;
  #L1cfd92.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L1cfd98.  return v3 @kind object;
  #L1cfd9a.  if v0 == 0 then goto L1cfdbc;
  #L1cfd9e.  goto L1cfdb6;
  #L1cfda0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1cfda2.  goto L1cfdc8;
  #L1cfda4.  v3:= "MigrationDB" @kind object;
  #L1cfda8.  v4:= "rawQuery Exception." @kind object;
  #L1cfdac.  call `w`(v3, v4) @signature `Lcom/huawei/hms/analytics/core/log/HiLog;.w:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1cfdb2.  if v0 == 0 then goto L1cfdbc;
  #L1cfdb6.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L1cfdbc.  v3:= new `java.util.ArrayList`;
  #L1cfdc0.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1cfdc6.  return v3 @kind object;
  #L1cfdc8.  if v0 == 0 then goto L1cfdd2;
  #L1cfdcc.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L1cfdd2.  throw v3;
  catch `java.lang.Exception` @[L1cfd42..L1cfd8e] goto L1cfda4;
  catch `java.lang.Throwable` @[L1cfd42..L1cfd8e] goto L1cfda0;
  catch `java.lang.Throwable` @[L1cfda4..L1cfdb2] goto L1cfda0;
}
procedure `void` `lmn`(`org.greenrobot.greendao.database.Database` v13 @kind object, `java.lang.Class`[] v14 @kind object) @signature `Lcom/huawei/hms/analytics/ba;.lmn:(Lorg/greenrobot/greendao/database/Database;[Ljava/lang/Class;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1cfe84.  v0:= 0I;
  #L1cfe86.  v1:= 0I;
  #L1cfe88.  if v1 > 0 then goto L1d008e;
  #L1cfe8c.  v2:= v14[v1] @kind object;
  #L1cfe90.  v3:= new `org.greenrobot.greendao.internal.DaoConfig`;
  #L1cfe94.  call `<init>`(v3, v13, v2) @signature `Lorg/greenrobot/greendao/internal/DaoConfig;.<init>:(Lorg/greenrobot/greendao/database/Database;Ljava/lang/Class;)V` @kind direct;
  #L1cfe9a.  v2:= v3.`org.greenrobot.greendao.internal.DaoConfig.tablename` @type ^`java.lang.String` @kind object;
  #L1cfe9e.  v4:= new `java.lang.StringBuilder`;
  #L1cfea2.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1cfea8.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cfeae.  v5:= "_TEMP" @kind object;
  #L1cfeb2.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cfeb8.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cfebe.  v4:= temp @kind object;
  #L1cfec0.  v5:= new `java.util.ArrayList`;
  #L1cfec4.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1cfeca.  v6:= new `java.util.ArrayList`;
  #L1cfece.  call `<init>`(v6) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1cfed4.  v7:= v3.`org.greenrobot.greendao.internal.DaoConfig.properties` @type ^`org.greenrobot.greendao.Property`[] @kind object;
  #L1cfed8.  v7:= length @variable v7;
  #L1cfeda.  v8:= 0I;
  #L1cfedc.  if v8 >= v7 then goto L1cfffc;
  #L1cfee0.  v9:= v3.`org.greenrobot.greendao.internal.DaoConfig.properties` @type ^`org.greenrobot.greendao.Property`[] @kind object;
  #L1cfee4.  v9:= v9[v8] @kind object;
  #L1cfee8.  v9:= v9.`org.greenrobot.greendao.Property.columnName` @type ^`java.lang.String` @kind object;
  #L1cfeec.  call temp:= `lmn`(v13, v4) @signature `Lcom/huawei/hms/analytics/ba;.lmn:(Lorg/greenrobot/greendao/database/Database;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1cfef2.  v10:= temp @kind object;
  #L1cfef4.  call temp:= `contains`(v10, v9) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1cfefa.  v10:= temp;
  #L1cfefc.  if v10 == 0 then goto L1cff10;
  #L1cff00.  call temp:= `add`(v5, v9) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cff06.  call temp:= `add`(v6, v9) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cff0c.  goto L1cfff4;
  #L1cff10.  v10:= v3.`org.greenrobot.greendao.internal.DaoConfig.properties` @type ^`org.greenrobot.greendao.Property`[] @kind object;
  #L1cff14.  v10:= v10[v8] @kind object;
  #L1cff18.  v10:= v10.`org.greenrobot.greendao.Property.type` @type ^`java.lang.Class` @kind object;
  #L1cff1c.  v11:= constclass @type ^`java.lang.String` @kind object;
  #L1cff20.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cff26.  v11:= temp;
  #L1cff28.  v12:= "INTEGER" @kind object;
  #L1cff2c.  if v11 == 0 then goto L1cff36;
  #L1cff30.  v10:= "TEXT" @kind object;
  #L1cff34.  goto L1cffb2;
  #L1cff36.  v11:= constclass @type ^`java.lang.Long` @kind object;
  #L1cff3a.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cff40.  v11:= temp;
  #L1cff42.  if v11 != 0 then goto L1cffb0;
  #L1cff46.  v11:= constclass @type ^`java.lang.Integer` @kind object;
  #L1cff4a.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cff50.  v11:= temp;
  #L1cff52.  if v11 != 0 then goto L1cffb0;
  #L1cff56.  v11:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L1cff5a.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cff60.  v11:= temp;
  #L1cff62.  if v11 != 0 then goto L1cffb0;
  #L1cff66.  v11:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L1cff6a.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cff70.  v11:= temp;
  #L1cff72.  if v11 == 0 then goto L1cff78;
  #L1cff76.  goto L1cffb0;
  #L1cff78.  v11:= constclass @type ^`java.lang.Boolean` @kind object;
  #L1cff7c.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cff82.  v11:= temp;
  #L1cff84.  if v11 != 0 then goto L1cffaa;
  #L1cff88.  v11:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L1cff8c.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cff92.  v10:= temp;
  #L1cff94.  if v10 == 0 then goto L1cff9a;
  #L1cff98.  goto L1cffaa;
  #L1cff9a.  v9:= new `java.lang.Exception`;
  #L1cff9e.  v10:= "Migration Helper types does not match current parameter" @kind object;
  #L1cffa2.  call `<init>`(v9, v10) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cffa8.  throw v9;
  #L1cffaa.  v10:= "BOOLEAN" @kind object;
  #L1cffae.  goto L1cffb2;
  #L1cffb0.  v10:= v12 @kind object;
  #L1cffb2.  call temp:= `equals`(v10, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cffb8.  v10:= temp;
  #L1cffba.  if v10 == 0 then goto L1cfff4;
  #L1cffbe.  v10:= "0 as " @kind object;
  #L1cffc2.  call temp:= `valueOf`(v9) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1cffc8.  v11:= temp @kind object;
  #L1cffca.  call temp:= `concat`(v10, v11) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1cffd0.  v10:= temp @kind object;
  #L1cffd2.  call temp:= `add`(v6, v10) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cffd8.  call temp:= `add`(v5, v9) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cffde.  goto L1cfff4;
  #L1cffe0.  v9:= Exception @type ^`java.lang.Exception` @kind object;
  #L1cffe2.  call temp:= `getMessage`(v9) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1cffe8.  v9:= temp @kind object;
  #L1cffea.  v10:= "MigrationDB" @kind object;
  #L1cffee.  call `w`(v10, v9) @signature `Lcom/huawei/hms/analytics/core/log/HiLog;.w:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1cfff4.  v8:= v8 + 1;
  #L1cfff8.  goto L1cfedc;
  #L1cfffc.  v3:= new `java.lang.StringBuilder`;
  #L1d0000.  v7:= "INSERT INTO " @kind object;
  #L1d0004.  call `<init>`(v3, v7) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d000a.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d0010.  v2:= " (" @kind object;
  #L1d0014.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d001a.  v2:= "," @kind object;
  #L1d001e.  call temp:= `join`(v2, v5) @signature `Landroid/text/TextUtils;.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;` @kind static;
  #L1d0024.  v5:= temp @kind object;
  #L1d0026.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d002c.  v5:= ") SELECT " @kind object;
  #L1d0030.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d0036.  call temp:= `join`(v2, v6) @signature `Landroid/text/TextUtils;.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;` @kind static;
  #L1d003c.  v2:= temp @kind object;
  #L1d003e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d0044.  v2:= " FROM " @kind object;
  #L1d0048.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d004e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d0054.  v2:= ";" @kind object;
  #L1d0058.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d005e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d0064.  v2:= temp @kind object;
  #L1d0066.  call `execSQL`(v13, v2) @signature `Lorg/greenrobot/greendao/database/Database;.execSQL:(Ljava/lang/String;)V` @kind interface;
  #L1d006c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1d0072.  v2:= temp @kind object;
  #L1d0074.  v3:= "DROP TABLE " @kind object;
  #L1d0078.  call temp:= `concat`(v3, v2) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1d007e.  v2:= temp @kind object;
  #L1d0080.  call `execSQL`(v13, v2) @signature `Lorg/greenrobot/greendao/database/Database;.execSQL:(Ljava/lang/String;)V` @kind interface;
  #L1d0086.  v1:= v1 + 1;
  #L1d008a.  goto L1cfe88;
  #L1d008e.  return @kind void;
  catch `java.lang.Exception` @[L1cff10..L1cff28] goto L1cffe0;
  catch `java.lang.Exception` @[L1cff30..L1cffde] goto L1cffe0;
}
