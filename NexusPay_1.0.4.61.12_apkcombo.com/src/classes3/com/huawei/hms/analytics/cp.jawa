record `com.huawei.hms.analytics.cp` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@com.huawei.hms.analytics.cp.klm` @AccessFlag PRIVATE_STATIC_FINAL;
global `char`[] `@@com.huawei.hms.analytics.cp.lmn` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/analytics/cp;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d8cf0.  v0:= 65I;
  #L1d8cf4.  v0:= new `char`[v0];
  #L1d8cf8.  goto L1d8d18;
  #L1d8cfe.  `@@com.huawei.hms.analytics.cp.lmn` @type ^`char`[] := v0 @kind object;
  #L1d8d02.  v0:= 256I;
  #L1d8d06.  v0:= new `byte`[v0];
  #L1d8d0a.  goto L1d8da4;
  #L1d8d10.  `@@com.huawei.hms.analytics.cp.klm` @type ^`byte`[] := v0 @kind object;
  #L1d8d14.  return @kind void;
  #L1d8d16.  
  #L1d8d18.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 43I, 47I, 61I) @kind object;
  #L1d8da1.  goto L1d8cfe;
  #L1d8da2.  
  #L1d8da4.  v0:= (-1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, 62I, -1I, -1I, -1I, 63I, 52I, 53I, 54I, 55I, 56I, 57I, 58I, 59I, 60I, 61I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, 0I, 1I, 2I, 3I, 4I, 5I, 6I, 7I, 8I, 9I, 10I, 11I, 12I, 13I, 14I, 15I, 16I, 17I, 18I, 19I, 20I, 21I, 22I, 23I, 24I, 25I, -1I, -1I, -1I, -1I, -1I, -1I, 26I, 27I, 28I, 29I, 30I, 31I, 32I, 33I, 34I, 35I, 36I, 37I, 38I, 39I, 40I, 41I, 42I, 43I, 44I, 45I, 46I, 47I, 48I, 49I, 50I, 51I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I) @kind object;
  #L1d8eab.  goto L1d8d10;
}
procedure `java.lang.String` `klm`(`java.lang.String` v3 @kind object) @signature `Lcom/huawei/hms/analytics/cp;.klm:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1d8ca4.  v0:= "" @kind object;
  #L1d8ca8.  call temp:= `lmn`(v3) @signature `Lcom/huawei/hms/analytics/cp;.lmn:(Ljava/lang/String;)[B` @kind static;
  #L1d8cae.  v3:= temp @kind object;
  #L1d8cb0.  v1:= length @variable v3;
  #L1d8cb2.  if v1 != 0 then goto L1d8cb8;
  #L1d8cb6.  return v0 @kind object;
  #L1d8cb8.  v1:= new `java.lang.String`;
  #L1d8cbc.  v2:= "UTF-8" @kind object;
  #L1d8cc0.  call temp:= `forName`(v2) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L1d8cc6.  v2:= temp @kind object;
  #L1d8cc8.  call `<init>`(v1, v3, v2) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L1d8cce.  v0:= v1 @kind object;
  #L1d8cd0.  return v0 @kind object;
  catch `java.lang.Throwable` @[L1d8ca8..L1d8cce] goto L1d8cd0;
}
procedure `byte`[] `lmn`(`java.lang.String` v10 @kind object) @signature `Lcom/huawei/hms/analytics/cp;.lmn:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1d8bc8.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d8bce.  v0:= temp;
  #L1d8bd0.  v1:= 0I;
  #L1d8bd2.  v2:= 0I;
  #L1d8bd4.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d8bda.  v3:= temp;
  #L1d8bdc.  v4:= 255I;
  #L1d8be0.  if v2 >= v3 then goto L1d8c06;
  #L1d8be4.  call temp:= `charAt`(v10, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1d8bea.  v3:= temp;
  #L1d8bec.  if v3 > v4 then goto L1d8bfc;
  #L1d8bf0.  v4:= `@@com.huawei.hms.analytics.cp.klm` @type ^`byte`[] @kind object;
  #L1d8bf4.  v3:= v4[v3] @kind byte;
  #L1d8bf8.  if v3 >= 0 then goto L1d8c00;
  #L1d8bfc.  v0:= v0 + -1;
  #L1d8c00.  v2:= v2 + 1;
  #L1d8c04.  goto L1d8bd4;
  #L1d8c06.  v2:= v0 / 4;
  #L1d8c0a.  v3:= 3I;
  #L1d8c0c.  v2:= v2 * 3;
  #L1d8c10.  v0:= v0 %% 4;
  #L1d8c14.  if v0 != v3 then goto L1d8c1c;
  #L1d8c18.  v2:= v2 + 2;
  #L1d8c1c.  v3:= 2I;
  #L1d8c1e.  if v0 != v3 then goto L1d8c26;
  #L1d8c22.  v2:= v2 + 1;
  #L1d8c26.  v0:= new `byte`[v2];
  #L1d8c2a.  v3:= 0I;
  #L1d8c2c.  v5:= 0I;
  #L1d8c2e.  v6:= 0I;
  #L1d8c30.  v7:= 0I;
  #L1d8c32.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d8c38.  v8:= temp;
  #L1d8c3a.  if v3 >= v8 then goto L1d8c88;
  #L1d8c3e.  call temp:= `charAt`(v10, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1d8c44.  v8:= temp;
  #L1d8c46.  if v8 <= v4 then goto L1d8c4e;
  #L1d8c4a.  v8:= -1I;
  #L1d8c4c.  goto L1d8c56;
  #L1d8c4e.  v9:= `@@com.huawei.hms.analytics.cp.klm` @type ^`byte`[] @kind object;
  #L1d8c52.  v8:= v9[v8] @kind byte;
  #L1d8c56.  if v8 < 0 then goto L1d8c82;
  #L1d8c5a.  v6:= v6 ^< 6;
  #L1d8c5e.  v7:= v7 + 6;
  #L1d8c62.  v6:= v6 ^| v8 @kind int;
  #L1d8c64.  v8:= 8I;
  #L1d8c68.  if v7 < v8 then goto L1d8c82;
  #L1d8c6c.  v7:= v7 + -8;
  #L1d8c70.  v8:= v5 + 1;
  #L1d8c74.  v9:= v6 ^> v7 @kind int;
  #L1d8c78.  v9:= v9 ^& v4 @kind int;
  #L1d8c7a.  v9:= (`byte`) v9 @kind i2b;
  #L1d8c7c.  v0[v5]:= v9 @kind byte;
  #L1d8c80.  v5:= v8;
  #L1d8c82.  v3:= v3 + 1;
  #L1d8c86.  goto L1d8c32;
  #L1d8c88.  if v5 == v2 then goto L1d8c92;
  #L1d8c8c.  v10:= new `byte`[v1];
  #L1d8c90.  return v10 @kind object;
  #L1d8c92.  return v0 @kind object;
}
