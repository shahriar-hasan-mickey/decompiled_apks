record `com.huawei.hms.scankit.aiscan.common.F` @kind class @AccessFlag PUBLIC_FINAL {
  `com.huawei.hms.scankit.p.y` `com.huawei.hms.scankit.aiscan.common.F.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.aiscan.common.F.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.aiscan.common.F.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.aiscan.common.F.d` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.aiscan.common.F.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.aiscan.common.F.f` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.aiscan.common.F.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.F` v3 @kind this, `com.huawei.hms.scankit.p.y` v4 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.<init>:(Lcom/huawei/hms/scankit/p/y;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L25afb0.  call temp:= `d`(v4) @signature `Lcom/huawei/hms/scankit/p/y;.d:()I` @kind virtual;
  #L25afb6.  v0:= temp;
  #L25afb8.  v0:= v0 / 2;
  #L25afbc.  call temp:= `b`(v4) @signature `Lcom/huawei/hms/scankit/p/y;.b:()I` @kind virtual;
  #L25afc2.  v1:= temp;
  #L25afc4.  v1:= v1 / 2;
  #L25afc8.  v2:= 10I;
  #L25afcc.  call `<init>`(v3, v4, v2, v0, v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.<init>:(Lcom/huawei/hms/scankit/p/y;III)V` @kind direct;
  #L25afd2.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.F` v2 @kind this, `com.huawei.hms.scankit.p.y` v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.<init>:(Lcom/huawei/hms/scankit/p/y;III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L25afe4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25afea.  v2.`com.huawei.hms.scankit.aiscan.common.F.a` @type ^`com.huawei.hms.scankit.p.y` := v3 @kind object;
  #L25afee.  call temp:= `b`(v3) @signature `Lcom/huawei/hms/scankit/p/y;.b:()I` @kind virtual;
  #L25aff4.  v0:= temp;
  #L25aff6.  v2.`com.huawei.hms.scankit.aiscan.common.F.b` @type ^`int` := v0;
  #L25affa.  call temp:= `d`(v3) @signature `Lcom/huawei/hms/scankit/p/y;.d:()I` @kind virtual;
  #L25b000.  v3:= temp;
  #L25b002.  v2.`com.huawei.hms.scankit.aiscan.common.F.c` @type ^`int` := v3;
  #L25b006.  v4:= v4 / 2;
  #L25b00a.  v0:= v5 - v4 @kind int;
  #L25b00e.  v2.`com.huawei.hms.scankit.aiscan.common.F.d` @type ^`int` := v0;
  #L25b012.  v5:= v5 + v4 @kind int;
  #L25b014.  v2.`com.huawei.hms.scankit.aiscan.common.F.e` @type ^`int` := v5;
  #L25b018.  v1:= v6 - v4 @kind int;
  #L25b01c.  v2.`com.huawei.hms.scankit.aiscan.common.F.g` @type ^`int` := v1;
  #L25b020.  v6:= v6 + v4 @kind int;
  #L25b022.  v2.`com.huawei.hms.scankit.aiscan.common.F.f` @type ^`int` := v6;
  #L25b026.  if v1 < 0 then goto L25b03c;
  #L25b02a.  if v0 < 0 then goto L25b03c;
  #L25b02e.  v4:= v2.`com.huawei.hms.scankit.aiscan.common.F.b` @type ^`int`;
  #L25b032.  if v6 >= v4 then goto L25b03c;
  #L25b036.  if v5 >= v3 then goto L25b03c;
  #L25b03a.  return @kind void;
  #L25b03c.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L25b042.  v3:= temp @kind object;
  #L25b044.  throw v3;
}
procedure `com.huawei.hms.scankit.aiscan.common.z` `a`(`com.huawei.hms.scankit.aiscan.common.F` v5 @kind this, `float` v6 , `float` v7 , `float` v8 , `float` v9 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:(FFFF)Lcom/huawei/hms/scankit/aiscan/common/z;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L25abe4.  call temp:= `a`(v6, v7, v8, v9) @signature `Lcom/huawei/hms/scankit/aiscan/common/n;.a:(FFFF)F` @kind static;
  #L25abea.  v0:= temp;
  #L25abec.  call temp:= `a`(v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/n;.a:(F)I` @kind static;
  #L25abf2.  v0:= temp;
  #L25abf4.  v8:= v8 - v6 @kind float;
  #L25abf6.  v1:= (`float`) v0 @kind i2f;
  #L25abf8.  v8:= v8 / v1 @kind float;
  #L25abfa.  v9:= v9 - v7 @kind float;
  #L25abfc.  v9:= v9 / v1 @kind float;
  #L25abfe.  v1:= 0I;
  #L25ac00.  if v1 >= v0 then goto L25ac48;
  #L25ac04.  v2:= (`float`) v1 @kind i2f;
  #L25ac06.  v3:= v2 * v8 @kind float;
  #L25ac0a.  v3:= v3 + v6 @kind float;
  #L25ac0c.  call temp:= `a`(v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/n;.a:(F)I` @kind static;
  #L25ac12.  v3:= temp;
  #L25ac14.  v2:= v2 * v9 @kind float;
  #L25ac18.  v2:= v2 + v7 @kind float;
  #L25ac1a.  call temp:= `a`(v2) @signature `Lcom/huawei/hms/scankit/aiscan/common/n;.a:(F)I` @kind static;
  #L25ac20.  v2:= temp;
  #L25ac22.  v4:= v5.`com.huawei.hms.scankit.aiscan.common.F.a` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L25ac26.  call temp:= `b`(v4, v3, v2) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @kind virtual;
  #L25ac2c.  v4:= temp;
  #L25ac2e.  if v4 == 0 then goto L25ac42;
  #L25ac32.  v6:= new `com.huawei.hms.scankit.aiscan.common.z`;
  #L25ac36.  v7:= (`float`) v3 @kind i2f;
  #L25ac38.  v8:= (`float`) v2 @kind i2f;
  #L25ac3a.  call `<init>`(v6, v7, v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FF)V` @kind direct;
  #L25ac40.  return v6 @kind object;
  #L25ac42.  v1:= v1 + 1;
  #L25ac46.  goto L25ac00;
  #L25ac48.  v6:= 0I;
  #L25ac4a.  return v6 @kind object;
}
procedure `void` `a`(`com.huawei.hms.scankit.aiscan.common.F` v6 @kind this, `int`[] v7 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:([I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L25b058.  v0:= 1I;
  #L25b05a.  v1:= 1I;
  #L25b05c.  v2:= 8I;
  #L25b060.  if v1 != 0 then goto L25b06c;
  #L25b064.  v1:= v7[v2];
  #L25b068.  if v1 == v0 then goto L25b0c0;
  #L25b06c.  v1:= 3I;
  #L25b06e.  v3:= v7[v1];
  #L25b072.  v4:= v6.`com.huawei.hms.scankit.aiscan.common.F.b` @type ^`int`;
  #L25b076.  if v3 >= v4 then goto L25b0c0;
  #L25b07a.  v3:= 0I;
  #L25b07c.  v3:= v7[v3];
  #L25b080.  v4:= v7[v0];
  #L25b084.  v5:= v7[v1];
  #L25b088.  call temp:= `a`(v6, v3, v4, v5, v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:(IIIZ)Z` @kind direct;
  #L25b08e.  v3:= temp;
  #L25b090.  if v3 == 0 then goto L25b0aa;
  #L25b094.  v4:= v7[v1];
  #L25b098.  v4:= v4 + v0 @kind int;
  #L25b09a.  v7[v1]:= v4;
  #L25b09e.  v1:= 5I;
  #L25b0a0.  v7[v1]:= v0;
  #L25b0a4.  v7[v2]:= v0;
  #L25b0a8.  goto L25b0bc;
  #L25b0aa.  v2:= v7[v2];
  #L25b0ae.  if v2 == v0 then goto L25b0bc;
  #L25b0b2.  v2:= v7[v1];
  #L25b0b6.  v2:= v2 + v0 @kind int;
  #L25b0b8.  v7[v1]:= v2;
  #L25b0bc.  v1:= v3;
  #L25b0be.  goto L25b05c;
  #L25b0c0.  return @kind void;
}
procedure `boolean` `a`(`com.huawei.hms.scankit.aiscan.common.F` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `boolean` v5 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:(IIIZ)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L25ab90.  v0:= 1I;
  #L25ab92.  if v5 == 0 then goto L25abb2;
  #L25ab96.  if v2 > v3 then goto L25abce;
  #L25ab9a.  v5:= v1.`com.huawei.hms.scankit.aiscan.common.F.a` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L25ab9e.  call temp:= `b`(v5, v2, v4) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @kind virtual;
  #L25aba4.  v5:= temp;
  #L25aba6.  if v5 == 0 then goto L25abac;
  #L25abaa.  return v0;
  #L25abac.  v2:= v2 + 1;
  #L25abb0.  goto L25ab96;
  #L25abb2.  if v2 > v3 then goto L25abce;
  #L25abb6.  v5:= v1.`com.huawei.hms.scankit.aiscan.common.F.a` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L25abba.  call temp:= `b`(v5, v4, v2) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @kind virtual;
  #L25abc0.  v5:= temp;
  #L25abc2.  if v5 == 0 then goto L25abc8;
  #L25abc6.  return v0;
  #L25abc8.  v2:= v2 + 1;
  #L25abcc.  goto L25abb2;
  #L25abce.  v2:= 0I;
  #L25abd0.  return v2;
}
procedure `com.huawei.hms.scankit.aiscan.common.z`[] `a`(`com.huawei.hms.scankit.aiscan.common.F` v11 @kind this, `com.huawei.hms.scankit.aiscan.common.z` v12 @kind object, `com.huawei.hms.scankit.aiscan.common.z` v13 @kind object, `com.huawei.hms.scankit.aiscan.common.z` v14 @kind object, `com.huawei.hms.scankit.aiscan.common.z` v15 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:(Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/z;)[Lcom/huawei/hms/scankit/aiscan/common/z;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L25ad64.  call temp:= `b`(v12) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.b:()F` @kind virtual;
  #L25ad6a.  v0:= temp;
  #L25ad6c.  call temp:= `c`(v12) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.c:()F` @kind virtual;
  #L25ad72.  v12:= temp;
  #L25ad74.  call temp:= `b`(v13) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.b:()F` @kind virtual;
  #L25ad7a.  v1:= temp;
  #L25ad7c.  call temp:= `c`(v13) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.c:()F` @kind virtual;
  #L25ad82.  v13:= temp;
  #L25ad84.  call temp:= `b`(v14) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.b:()F` @kind virtual;
  #L25ad8a.  v2:= temp;
  #L25ad8c.  call temp:= `c`(v14) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.c:()F` @kind virtual;
  #L25ad92.  v14:= temp;
  #L25ad94.  call temp:= `b`(v15) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.b:()F` @kind virtual;
  #L25ad9a.  v3:= temp;
  #L25ad9c.  call temp:= `c`(v15) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.c:()F` @kind virtual;
  #L25ada2.  v15:= temp;
  #L25ada4.  v4:= v11.`com.huawei.hms.scankit.aiscan.common.F.c` @type ^`int`;
  #L25ada8.  v4:= (`float`) v4 @kind i2f;
  #L25adaa.  v5:= 2.0F;
  #L25adae.  v4:= v4 / v5 @kind float;
  #L25adb0.  v5:= 3I;
  #L25adb2.  v6:= 2I;
  #L25adb4.  v7:= 1I;
  #L25adb6.  v8:= 0I;
  #L25adb8.  v9:= 4I;
  #L25adba.  v10:= 1.0F;
  #L25adbe.  v4:= fcmpg(v0, v4);
  #L25adc2.  if v4 >= 0 then goto L25ae14;
  #L25adc6.  v4:= new `com.huawei.hms.scankit.aiscan.common.z`[v9];
  #L25adca.  v9:= new `com.huawei.hms.scankit.aiscan.common.z`;
  #L25adce.  v3:= v3 - v10 @kind float;
  #L25add0.  v15:= v15 + v10 @kind float;
  #L25add2.  call `<init>`(v9, v3, v15) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FF)V` @kind direct;
  #L25add8.  v4[v8]:= v9 @kind object;
  #L25addc.  v15:= new `com.huawei.hms.scankit.aiscan.common.z`;
  #L25ade0.  v1:= v1 + v10 @kind float;
  #L25ade2.  v13:= v13 + v10 @kind float;
  #L25ade4.  call `<init>`(v15, v1, v13) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FF)V` @kind direct;
  #L25adea.  v4[v7]:= v15 @kind object;
  #L25adee.  v13:= new `com.huawei.hms.scankit.aiscan.common.z`;
  #L25adf2.  v2:= v2 - v10 @kind float;
  #L25adf4.  v14:= v14 - v10 @kind float;
  #L25adf6.  call `<init>`(v13, v2, v14) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FF)V` @kind direct;
  #L25adfc.  v4[v6]:= v13 @kind object;
  #L25ae00.  v13:= new `com.huawei.hms.scankit.aiscan.common.z`;
  #L25ae04.  v0:= v0 + v10 @kind float;
  #L25ae06.  v12:= v12 - v10 @kind float;
  #L25ae08.  call `<init>`(v13, v0, v12) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FF)V` @kind direct;
  #L25ae0e.  v4[v5]:= v13 @kind object;
  #L25ae12.  return v4 @kind object;
  #L25ae14.  v4:= new `com.huawei.hms.scankit.aiscan.common.z`[v9];
  #L25ae18.  v9:= new `com.huawei.hms.scankit.aiscan.common.z`;
  #L25ae1c.  v3:= v3 + v10 @kind float;
  #L25ae1e.  v15:= v15 + v10 @kind float;
  #L25ae20.  call `<init>`(v9, v3, v15) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FF)V` @kind direct;
  #L25ae26.  v4[v8]:= v9 @kind object;
  #L25ae2a.  v15:= new `com.huawei.hms.scankit.aiscan.common.z`;
  #L25ae2e.  v1:= v1 + v10 @kind float;
  #L25ae30.  v13:= v13 - v10 @kind float;
  #L25ae32.  call `<init>`(v15, v1, v13) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FF)V` @kind direct;
  #L25ae38.  v4[v7]:= v15 @kind object;
  #L25ae3c.  v13:= new `com.huawei.hms.scankit.aiscan.common.z`;
  #L25ae40.  v2:= v2 - v10 @kind float;
  #L25ae42.  v14:= v14 + v10 @kind float;
  #L25ae44.  call `<init>`(v13, v2, v14) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FF)V` @kind direct;
  #L25ae4a.  v4[v6]:= v13 @kind object;
  #L25ae4e.  v13:= new `com.huawei.hms.scankit.aiscan.common.z`;
  #L25ae52.  v0:= v0 - v10 @kind float;
  #L25ae54.  v12:= v12 - v10 @kind float;
  #L25ae56.  call `<init>`(v13, v0, v12) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FF)V` @kind direct;
  #L25ae5c.  v4[v5]:= v13 @kind object;
  #L25ae60.  return v4 @kind object;
}
procedure `com.huawei.hms.scankit.aiscan.common.z`[] `b`(`com.huawei.hms.scankit.aiscan.common.F` v12 @kind this, `int`[] v13 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.b:([I)[Lcom/huawei/hms/scankit/aiscan/common/z;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L25ae74.  v0:= 1I;
  #L25ae76.  v1:= v13[v0];
  #L25ae7a.  v2:= 0I;
  #L25ae7c.  v3:= v13[v2];
  #L25ae80.  v1:= v1 - v3 @kind int;
  #L25ae82.  v3:= 0I;
  #L25ae84.  v4:= v3 @kind object;
  #L25ae86.  v5:= 1I;
  #L25ae88.  v6:= 3I;
  #L25ae8a.  if v4 != 0 then goto L25aebc;
  #L25ae8e.  if v5 >= v1 then goto L25aebc;
  #L25ae92.  v4:= v13[v2];
  #L25ae96.  v4:= (`float`) v4 @kind i2f;
  #L25ae98.  v7:= v13[v6];
  #L25ae9c.  v7:= v7 - v5 @kind int;
  #L25ae9e.  v7:= (`float`) v7 @kind i2f;
  #L25aea0.  v8:= v13[v2];
  #L25aea4.  v8:= v8 + v5 @kind int;
  #L25aea6.  v8:= (`float`) v8 @kind i2f;
  #L25aea8.  v6:= v13[v6];
  #L25aeac.  v6:= (`float`) v6 @kind i2f;
  #L25aeae.  call temp:= `a`(v12, v4, v7, v8, v6) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:(FFFF)Lcom/huawei/hms/scankit/aiscan/common/z;` @kind direct;
  #L25aeb4.  v4:= temp @kind object;
  #L25aeb6.  v5:= v5 + 1;
  #L25aeba.  goto L25ae88;
  #L25aebc.  if v4 == 0 then goto L25af96;
  #L25aec0.  v5:= v3 @kind object;
  #L25aec2.  v7:= 1I;
  #L25aec4.  v8:= 2I;
  #L25aec6.  if v5 != 0 then goto L25aef8;
  #L25aeca.  if v7 >= v1 then goto L25aef8;
  #L25aece.  v5:= v13[v2];
  #L25aed2.  v5:= (`float`) v5 @kind i2f;
  #L25aed4.  v9:= v13[v8];
  #L25aed8.  v9:= v9 + v7 @kind int;
  #L25aeda.  v9:= (`float`) v9 @kind i2f;
  #L25aedc.  v10:= v13[v2];
  #L25aee0.  v10:= v10 + v7 @kind int;
  #L25aee2.  v10:= (`float`) v10 @kind i2f;
  #L25aee4.  v8:= v13[v8];
  #L25aee8.  v8:= (`float`) v8 @kind i2f;
  #L25aeea.  call temp:= `a`(v12, v5, v9, v10, v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:(FFFF)Lcom/huawei/hms/scankit/aiscan/common/z;` @kind direct;
  #L25aef0.  v5:= temp @kind object;
  #L25aef2.  v7:= v7 + 1;
  #L25aef6.  goto L25aec4;
  #L25aef8.  if v5 == 0 then goto L25af8c;
  #L25aefc.  v2:= v3 @kind object;
  #L25aefe.  v7:= 1I;
  #L25af00.  if v2 != 0 then goto L25af32;
  #L25af04.  if v7 >= v1 then goto L25af32;
  #L25af08.  v2:= v13[v0];
  #L25af0c.  v2:= (`float`) v2 @kind i2f;
  #L25af0e.  v9:= v13[v8];
  #L25af12.  v9:= v9 + v7 @kind int;
  #L25af14.  v9:= (`float`) v9 @kind i2f;
  #L25af16.  v10:= v13[v0];
  #L25af1a.  v10:= v10 - v7 @kind int;
  #L25af1c.  v10:= (`float`) v10 @kind i2f;
  #L25af1e.  v11:= v13[v8];
  #L25af22.  v11:= (`float`) v11 @kind i2f;
  #L25af24.  call temp:= `a`(v12, v2, v9, v10, v11) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:(FFFF)Lcom/huawei/hms/scankit/aiscan/common/z;` @kind direct;
  #L25af2a.  v2:= temp @kind object;
  #L25af2c.  v7:= v7 + 1;
  #L25af30.  goto L25af00;
  #L25af32.  if v2 == 0 then goto L25af82;
  #L25af36.  v7:= 1I;
  #L25af38.  if v3 != 0 then goto L25af6a;
  #L25af3c.  if v7 >= v1 then goto L25af6a;
  #L25af40.  v3:= v13[v0];
  #L25af44.  v3:= (`float`) v3 @kind i2f;
  #L25af46.  v8:= v13[v6];
  #L25af4a.  v8:= v8 - v7 @kind int;
  #L25af4c.  v8:= (`float`) v8 @kind i2f;
  #L25af4e.  v9:= v13[v0];
  #L25af52.  v9:= v9 - v7 @kind int;
  #L25af54.  v9:= (`float`) v9 @kind i2f;
  #L25af56.  v10:= v13[v6];
  #L25af5a.  v10:= (`float`) v10 @kind i2f;
  #L25af5c.  call temp:= `a`(v12, v3, v8, v9, v10) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:(FFFF)Lcom/huawei/hms/scankit/aiscan/common/z;` @kind direct;
  #L25af62.  v3:= temp @kind object;
  #L25af64.  v7:= v7 + 1;
  #L25af68.  goto L25af38;
  #L25af6a.  if v3 == 0 then goto L25af78;
  #L25af6e.  call temp:= `a`(v12, v3, v4, v2, v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:(Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/z;)[Lcom/huawei/hms/scankit/aiscan/common/z;` @kind direct;
  #L25af74.  v13:= temp @kind object;
  #L25af76.  return v13 @kind object;
  #L25af78.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L25af7e.  v13:= temp @kind object;
  #L25af80.  throw v13;
  #L25af82.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L25af88.  v13:= temp @kind object;
  #L25af8a.  throw v13;
  #L25af8c.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L25af92.  v13:= temp @kind object;
  #L25af94.  throw v13;
  #L25af96.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L25af9c.  v13:= temp @kind object;
  #L25af9e.  throw v13;
}
procedure `void` `c`(`com.huawei.hms.scankit.aiscan.common.F` v6 @kind this, `int`[] v7 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.c:([I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L25b0d4.  v0:= 1I;
  #L25b0d6.  v1:= 1I;
  #L25b0d8.  v2:= 9I;
  #L25b0dc.  if v1 != 0 then goto L25b0e8;
  #L25b0e0.  v1:= v7[v2];
  #L25b0e4.  if v1 == v0 then goto L25b13a;
  #L25b0e8.  v1:= 0I;
  #L25b0ea.  v3:= v7[v1];
  #L25b0ee.  if v3 < 0 then goto L25b13a;
  #L25b0f2.  v3:= 2I;
  #L25b0f4.  v3:= v7[v3];
  #L25b0f8.  v4:= 3I;
  #L25b0fa.  v4:= v7[v4];
  #L25b0fe.  v5:= v7[v1];
  #L25b102.  call temp:= `a`(v6, v3, v4, v5, v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:(IIIZ)Z` @kind direct;
  #L25b108.  v3:= temp;
  #L25b10a.  if v3 == 0 then goto L25b124;
  #L25b10e.  v4:= v7[v1];
  #L25b112.  v4:= v4 - v0 @kind int;
  #L25b114.  v7[v1]:= v4;
  #L25b118.  v1:= 5I;
  #L25b11a.  v7[v1]:= v0;
  #L25b11e.  v7[v2]:= v0;
  #L25b122.  goto L25b136;
  #L25b124.  v2:= v7[v2];
  #L25b128.  if v2 == v0 then goto L25b136;
  #L25b12c.  v2:= v7[v1];
  #L25b130.  v2:= v2 - v0 @kind int;
  #L25b132.  v7[v1]:= v2;
  #L25b136.  v1:= v3;
  #L25b138.  goto L25b0d8;
  #L25b13a.  return @kind void;
}
procedure `void` `d`(`com.huawei.hms.scankit.aiscan.common.F` v6 @kind this, `int`[] v7 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.d:([I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L25b14c.  v0:= 1I;
  #L25b14e.  v1:= 1I;
  #L25b150.  v2:= 7I;
  #L25b152.  if v1 != 0 then goto L25b15e;
  #L25b156.  v1:= v7[v2];
  #L25b15a.  if v1 == v0 then goto L25b1b2;
  #L25b15e.  v1:= v7[v0];
  #L25b162.  v3:= v6.`com.huawei.hms.scankit.aiscan.common.F.c` @type ^`int`;
  #L25b166.  if v1 >= v3 then goto L25b1b2;
  #L25b16a.  v1:= 2I;
  #L25b16c.  v1:= v7[v1];
  #L25b170.  v3:= 3I;
  #L25b172.  v3:= v7[v3];
  #L25b176.  v4:= v7[v0];
  #L25b17a.  v5:= 0I;
  #L25b17c.  call temp:= `a`(v6, v1, v3, v4, v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:(IIIZ)Z` @kind direct;
  #L25b182.  v1:= temp;
  #L25b184.  if v1 == 0 then goto L25b19e;
  #L25b188.  v3:= v7[v0];
  #L25b18c.  v3:= v3 + v0 @kind int;
  #L25b18e.  v7[v0]:= v3;
  #L25b192.  v3:= 5I;
  #L25b194.  v7[v3]:= v0;
  #L25b198.  v7[v2]:= v0;
  #L25b19c.  goto L25b150;
  #L25b19e.  v2:= v7[v2];
  #L25b1a2.  if v2 == v0 then goto L25b150;
  #L25b1a6.  v2:= v7[v0];
  #L25b1aa.  v2:= v2 + v0 @kind int;
  #L25b1ac.  v7[v0]:= v2;
  #L25b1b0.  goto L25b150;
  #L25b1b2.  return @kind void;
}
procedure `void` `e`(`com.huawei.hms.scankit.aiscan.common.F` v6 @kind this, `int`[] v7 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.e:([I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L25b1c4.  v0:= 1I;
  #L25b1c6.  v1:= 1I;
  #L25b1c8.  v2:= 10I;
  #L25b1cc.  if v1 != 0 then goto L25b1d8;
  #L25b1d0.  v1:= v7[v2];
  #L25b1d4.  if v1 == v0 then goto L25b228;
  #L25b1d8.  v1:= 2I;
  #L25b1da.  v3:= v7[v1];
  #L25b1de.  if v3 < 0 then goto L25b228;
  #L25b1e2.  v3:= 0I;
  #L25b1e4.  v3:= v7[v3];
  #L25b1e8.  v4:= v7[v0];
  #L25b1ec.  v5:= v7[v1];
  #L25b1f0.  call temp:= `a`(v6, v3, v4, v5, v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:(IIIZ)Z` @kind direct;
  #L25b1f6.  v3:= temp;
  #L25b1f8.  if v3 == 0 then goto L25b212;
  #L25b1fc.  v4:= v7[v1];
  #L25b200.  v4:= v4 - v0 @kind int;
  #L25b202.  v7[v1]:= v4;
  #L25b206.  v1:= 5I;
  #L25b208.  v7[v1]:= v0;
  #L25b20c.  v7[v2]:= v0;
  #L25b210.  goto L25b224;
  #L25b212.  v2:= v7[v2];
  #L25b216.  if v2 == v0 then goto L25b224;
  #L25b21a.  v2:= v7[v1];
  #L25b21e.  v2:= v2 - v0 @kind int;
  #L25b220.  v7[v1]:= v2;
  #L25b224.  v1:= v3;
  #L25b226.  goto L25b1c8;
  #L25b228.  return @kind void;
}
procedure `com.huawei.hms.scankit.aiscan.common.z`[] `a`(`com.huawei.hms.scankit.aiscan.common.F` v10 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:()[Lcom/huawei/hms/scankit/aiscan/common/z;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L25ac5c.  v0:= 11I;
  #L25ac60.  v0:= new `int`[v0];
  #L25ac64.  v1:= v10.`com.huawei.hms.scankit.aiscan.common.F.d` @type ^`int`;
  #L25ac68.  v2:= 0I;
  #L25ac6a.  v0[v2]:= v1;
  #L25ac6e.  v1:= v10.`com.huawei.hms.scankit.aiscan.common.F.e` @type ^`int`;
  #L25ac72.  v3:= 1I;
  #L25ac74.  v0[v3]:= v1;
  #L25ac78.  v1:= v10.`com.huawei.hms.scankit.aiscan.common.F.g` @type ^`int`;
  #L25ac7c.  v4:= 2I;
  #L25ac7e.  v0[v4]:= v1;
  #L25ac82.  v1:= v10.`com.huawei.hms.scankit.aiscan.common.F.f` @type ^`int`;
  #L25ac86.  v5:= 3I;
  #L25ac88.  v0[v5]:= v1;
  #L25ac8c.  v1:= 4I;
  #L25ac8e.  v0[v1]:= v2;
  #L25ac92.  v6:= 5I;
  #L25ac94.  v0[v6]:= v3;
  #L25ac98.  v7:= 6I;
  #L25ac9a.  v0[v7]:= v2;
  #L25ac9e.  v8:= 7I;
  #L25aca0.  v0[v8]:= v2;
  #L25aca4.  v8:= 8I;
  #L25aca8.  v0[v8]:= v2;
  #L25acac.  v8:= 9I;
  #L25acb0.  v0[v8]:= v2;
  #L25acb4.  v8:= 10I;
  #L25acb8.  v0[v8]:= v2;
  #L25acbc.  v8:= v0[v6];
  #L25acc0.  if v8 != v3 then goto L25ad2e;
  #L25acc4.  v0[v6]:= v2;
  #L25acc8.  call `d`(v10, v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.d:([I)V` @kind direct;
  #L25acce.  v8:= v0[v3];
  #L25acd2.  v9:= v10.`com.huawei.hms.scankit.aiscan.common.F.c` @type ^`int`;
  #L25acd6.  if v8 < v9 then goto L25ace0;
  #L25acda.  v0[v1]:= v3;
  #L25acde.  goto L25ad2e;
  #L25ace0.  call `a`(v10, v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.a:([I)V` @kind direct;
  #L25ace6.  v8:= v0[v5];
  #L25acea.  v9:= v10.`com.huawei.hms.scankit.aiscan.common.F.b` @type ^`int`;
  #L25acee.  if v8 < v9 then goto L25acf8;
  #L25acf2.  v0[v1]:= v3;
  #L25acf6.  goto L25ad2e;
  #L25acf8.  call `c`(v10, v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.c:([I)V` @kind direct;
  #L25acfe.  v8:= v0[v2];
  #L25ad02.  if v8 >= 0 then goto L25ad0c;
  #L25ad06.  v0[v1]:= v3;
  #L25ad0a.  goto L25ad2e;
  #L25ad0c.  call `e`(v10, v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.e:([I)V` @kind direct;
  #L25ad12.  v8:= v0[v4];
  #L25ad16.  if v8 >= 0 then goto L25ad20;
  #L25ad1a.  v0[v1]:= v3;
  #L25ad1e.  goto L25ad2e;
  #L25ad20.  v8:= v0[v6];
  #L25ad24.  if v8 != v3 then goto L25acbc;
  #L25ad28.  v0[v7]:= v3;
  #L25ad2c.  goto L25acbc;
  #L25ad2e.  v1:= v0[v1];
  #L25ad32.  if v1 == v3 then goto L25ad48;
  #L25ad36.  v1:= v0[v7];
  #L25ad3a.  if v1 != v3 then goto L25ad48;
  #L25ad3e.  call temp:= `b`(v10, v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/F;.b:([I)[Lcom/huawei/hms/scankit/aiscan/common/z;` @kind direct;
  #L25ad44.  v0:= temp @kind object;
  #L25ad46.  return v0 @kind object;
  #L25ad48.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L25ad4e.  v0:= temp @kind object;
  #L25ad50.  throw v0;
}
