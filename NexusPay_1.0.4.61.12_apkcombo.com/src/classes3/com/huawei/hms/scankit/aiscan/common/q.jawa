record `com.huawei.hms.scankit.aiscan.common.q` @kind class @AccessFlag PUBLIC_FINAL {
  `float` `com.huawei.hms.scankit.aiscan.common.q.a` @AccessFlag PRIVATE_FINAL;
  `float` `com.huawei.hms.scankit.aiscan.common.q.b` @AccessFlag PRIVATE_FINAL;
  `float` `com.huawei.hms.scankit.aiscan.common.q.c` @AccessFlag PRIVATE_FINAL;
  `float` `com.huawei.hms.scankit.aiscan.common.q.d` @AccessFlag PRIVATE_FINAL;
  `float` `com.huawei.hms.scankit.aiscan.common.q.e` @AccessFlag PRIVATE_FINAL;
  `float` `com.huawei.hms.scankit.aiscan.common.q.f` @AccessFlag PRIVATE_FINAL;
  `float` `com.huawei.hms.scankit.aiscan.common.q.g` @AccessFlag PRIVATE_FINAL;
  `float` `com.huawei.hms.scankit.aiscan.common.q.h` @AccessFlag PRIVATE_FINAL;
  `float` `com.huawei.hms.scankit.aiscan.common.q.i` @AccessFlag PRIVATE_FINAL;
  `float` `com.huawei.hms.scankit.aiscan.common.q.j` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.aiscan.common.q.k` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.aiscan.common.q.l` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.aiscan.common.q.m` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.aiscan.common.q.n` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.aiscan.common.q.o` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.aiscan.common.q.p` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.aiscan.common.q.q` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.aiscan.common.q.r` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.aiscan.common.q.s` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.aiscan.common.q.t` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.aiscan.common.q.u` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.aiscan.common.q.v` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.aiscan.common.q.w` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.q` v0 @kind this, `float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 , `float` v6 , `float` v7 , `float` v8 , `float` v9 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.<init>:(FFFFFFFFF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L25e8a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25e8aa.  v0.`com.huawei.hms.scankit.aiscan.common.q.a` @type ^`float` := v1;
  #L25e8ae.  v0.`com.huawei.hms.scankit.aiscan.common.q.b` @type ^`float` := v4;
  #L25e8b2.  v0.`com.huawei.hms.scankit.aiscan.common.q.c` @type ^`float` := v7;
  #L25e8b6.  v0.`com.huawei.hms.scankit.aiscan.common.q.d` @type ^`float` := v2;
  #L25e8ba.  v0.`com.huawei.hms.scankit.aiscan.common.q.e` @type ^`float` := v5;
  #L25e8be.  v0.`com.huawei.hms.scankit.aiscan.common.q.f` @type ^`float` := v8;
  #L25e8c2.  v0.`com.huawei.hms.scankit.aiscan.common.q.g` @type ^`float` := v3;
  #L25e8c6.  v0.`com.huawei.hms.scankit.aiscan.common.q.h` @type ^`float` := v6;
  #L25e8ca.  v0.`com.huawei.hms.scankit.aiscan.common.q.i` @type ^`float` := v9;
  #L25e8ce.  v0.`com.huawei.hms.scankit.aiscan.common.q.j` @type ^`float` := v1;
  #L25e8d2.  v0.`com.huawei.hms.scankit.aiscan.common.q.k` @type ^`float` := v2;
  #L25e8d6.  v0.`com.huawei.hms.scankit.aiscan.common.q.l` @type ^`float` := v3;
  #L25e8da.  v0.`com.huawei.hms.scankit.aiscan.common.q.m` @type ^`float` := v4;
  #L25e8de.  v0.`com.huawei.hms.scankit.aiscan.common.q.n` @type ^`float` := v5;
  #L25e8e2.  v0.`com.huawei.hms.scankit.aiscan.common.q.o` @type ^`float` := v6;
  #L25e8e6.  v0.`com.huawei.hms.scankit.aiscan.common.q.p` @type ^`float` := v7;
  #L25e8ea.  v0.`com.huawei.hms.scankit.aiscan.common.q.q` @type ^`float` := v8;
  #L25e8ee.  v0.`com.huawei.hms.scankit.aiscan.common.q.r` @type ^`float` := v9;
  #L25e8f2.  v1:= 0I;
  #L25e8f4.  v0.`com.huawei.hms.scankit.aiscan.common.q.s` @type ^`float` := v1;
  #L25e8f8.  v0.`com.huawei.hms.scankit.aiscan.common.q.t` @type ^`float` := v1;
  #L25e8fc.  v0.`com.huawei.hms.scankit.aiscan.common.q.u` @type ^`float` := v1;
  #L25e900.  v0.`com.huawei.hms.scankit.aiscan.common.q.v` @type ^`float` := v1;
  #L25e904.  v0.`com.huawei.hms.scankit.aiscan.common.q.w` @type ^`float` := v1;
  #L25e908.  return @kind void;
}
procedure `com.huawei.hms.scankit.aiscan.common.q` `a`(`float` v0 , `float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 , `float` v6 , `float` v7 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.a:(FFFFFFFF)Lcom/huawei/hms/scankit/aiscan/common/q;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L25e778.  call temp:= `b`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.b:(FFFFFFFF)Lcom/huawei/hms/scankit/aiscan/common/q;` @kind static;
  #L25e77e.  v0:= temp @kind object;
  #L25e780.  call temp:= `a`(v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.a:()Lcom/huawei/hms/scankit/aiscan/common/q;` @kind virtual;
  #L25e786.  v0:= temp @kind object;
  #L25e788.  return v0 @kind object;
}
procedure `com.huawei.hms.scankit.aiscan.common.q` `a`(`float` v0 , `float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 , `float` v6 , `float` v7 , `float` v8 , `float` v9 , `float` v10 , `float` v11 , `float` v12 , `float` v13 , `float` v14 , `float` v15 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.a:(FFFFFFFFFFFFFFFF)Lcom/huawei/hms/scankit/aiscan/common/q;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L25e79c.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.a:(FFFFFFFF)Lcom/huawei/hms/scankit/aiscan/common/q;` @kind static;
  #L25e7a2.  v0:= temp @kind object;
  #L25e7a4.  call temp:= `b`(v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.b:(FFFFFFFF)Lcom/huawei/hms/scankit/aiscan/common/q;` @kind static;
  #L25e7aa.  v1:= temp @kind object;
  #L25e7ac.  call temp:= `a`(v1, v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.a:(Lcom/huawei/hms/scankit/aiscan/common/q;)Lcom/huawei/hms/scankit/aiscan/common/q;` @kind virtual;
  #L25e7b2.  v0:= temp @kind object;
  #L25e7b4.  return v0 @kind object;
}
procedure `com.huawei.hms.scankit.aiscan.common.q` `b`(`float` v11 , `float` v12 , `float` v13 , `float` v14 , `float` v15 , `float` v16 , `float` v17 , `float` v18 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.b:(FFFFFFFF)Lcom/huawei/hms/scankit/aiscan/common/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L25e7c8.  v0:= v11 - v13 @kind float;
  #L25e7cc.  v0:= v0 + v15 @kind float;
  #L25e7ce.  v0:= v0 - v17 @kind float;
  #L25e7d2.  v1:= v12 - v14 @kind float;
  #L25e7d6.  v1:= v1 + v16 @kind float;
  #L25e7da.  v1:= v1 - v18 @kind float;
  #L25e7de.  v2:= 0I;
  #L25e7e0.  v3:= fcmpl(v0, v2);
  #L25e7e4.  if v3 != 0 then goto L25e81a;
  #L25e7e8.  v2:= fcmpl(v1, v2);
  #L25e7ec.  if v2 != 0 then goto L25e81a;
  #L25e7f0.  v10:= new `com.huawei.hms.scankit.aiscan.common.q`;
  #L25e7f4.  v1:= v13 - v11 @kind float;
  #L25e7f8.  v2:= v15 - v13 @kind float;
  #L25e7fc.  v4:= v14 - v12 @kind float;
  #L25e800.  v5:= v16 - v14 @kind float;
  #L25e804.  v7:= 0I;
  #L25e806.  v8:= 0I;
  #L25e808.  v9:= 1.0F;
  #L25e80c.  v0:= v10 @kind object;
  #L25e80e.  v3:= v11;
  #L25e810.  v6:= v12;
  #L25e812.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.<init>:(FFFFFFFFF)V` @kind direct;
  #L25e818.  return v10 @kind object;
  #L25e81a.  v2:= v13 - v15 @kind float;
  #L25e81e.  v3:= v17 - v15 @kind float;
  #L25e822.  v4:= v14 - v16 @kind float;
  #L25e826.  v5:= v18 - v16 @kind float;
  #L25e82a.  v6:= v2 * v5 @kind float;
  #L25e82e.  v7:= v3 * v4 @kind float;
  #L25e832.  v6:= v6 - v7 @kind float;
  #L25e834.  v5:= v5 * v0 @kind float;
  #L25e838.  v3:= v3 * v1 @kind float;
  #L25e83c.  v5:= v5 - v3 @kind float;
  #L25e83e.  v7:= v5 / v6 @kind float;
  #L25e842.  v2:= v2 * v1 @kind float;
  #L25e846.  v0:= v0 * v4 @kind float;
  #L25e84a.  v2:= v2 - v0 @kind float;
  #L25e84c.  v8:= v2 / v6 @kind float;
  #L25e850.  v10:= new `com.huawei.hms.scankit.aiscan.common.q`;
  #L25e854.  v0:= v13 - v11 @kind float;
  #L25e858.  v1:= v7 * v13 @kind float;
  #L25e85c.  v1:= v1 + v0 @kind float;
  #L25e85e.  v0:= v17 - v11 @kind float;
  #L25e862.  v2:= v8 * v17 @kind float;
  #L25e866.  v2:= v2 + v0 @kind float;
  #L25e868.  v0:= v14 - v12 @kind float;
  #L25e86c.  v3:= v7 * v14 @kind float;
  #L25e870.  v4:= v0 + v3 @kind float;
  #L25e874.  v0:= v18 - v12 @kind float;
  #L25e878.  v3:= v8 * v18 @kind float;
  #L25e87c.  v5:= v0 + v3 @kind float;
  #L25e880.  v9:= 1.0F;
  #L25e884.  v0:= v10 @kind object;
  #L25e886.  v3:= v11;
  #L25e888.  v6:= v12;
  #L25e88a.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.<init>:(FFFFFFFFF)V` @kind direct;
  #L25e890.  return v10 @kind object;
}
procedure `com.huawei.hms.scankit.aiscan.common.q` `a`(`com.huawei.hms.scankit.aiscan.common.q` v18 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.a:()Lcom/huawei/hms/scankit/aiscan/common/q;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L25e590.  v0:= v18 @kind object;
  #L25e594.  v11:= new `com.huawei.hms.scankit.aiscan.common.q`;
  #L25e598.  v1:= v0.`com.huawei.hms.scankit.aiscan.common.q.e` @type ^`float`;
  #L25e59c.  v2:= v0.`com.huawei.hms.scankit.aiscan.common.q.i` @type ^`float`;
  #L25e5a0.  v3:= v1 * v2 @kind float;
  #L25e5a4.  v4:= v0.`com.huawei.hms.scankit.aiscan.common.q.f` @type ^`float`;
  #L25e5a8.  v5:= v0.`com.huawei.hms.scankit.aiscan.common.q.h` @type ^`float`;
  #L25e5ac.  v6:= v4 * v5 @kind float;
  #L25e5b0.  v3:= v3 - v6 @kind float;
  #L25e5b2.  v6:= v0.`com.huawei.hms.scankit.aiscan.common.q.g` @type ^`float`;
  #L25e5b6.  v7:= v4 * v6 @kind float;
  #L25e5ba.  v8:= v0.`com.huawei.hms.scankit.aiscan.common.q.d` @type ^`float`;
  #L25e5be.  v9:= v8 * v2 @kind float;
  #L25e5c2.  v7:= v7 - v9 @kind float;
  #L25e5c4.  v9:= v8 * v5 @kind float;
  #L25e5c8.  v10:= v1 * v6 @kind float;
  #L25e5cc.  v9:= v9 - v10 @kind float;
  #L25e5ce.  v10:= v0.`com.huawei.hms.scankit.aiscan.common.q.c` @type ^`float`;
  #L25e5d2.  v12:= v10 * v5 @kind float;
  #L25e5d6.  v13:= v0.`com.huawei.hms.scankit.aiscan.common.q.b` @type ^`float`;
  #L25e5da.  v14:= v13 * v2 @kind float;
  #L25e5de.  v12:= v12 - v14 @kind float;
  #L25e5e0.  v14:= v0.`com.huawei.hms.scankit.aiscan.common.q.a` @type ^`float`;
  #L25e5e4.  v2:= v2 * v14 @kind float;
  #L25e5e8.  v15:= v10 * v6 @kind float;
  #L25e5ec.  v15:= v2 - v15 @kind float;
  #L25e5f0.  v6:= v6 * v13 @kind float;
  #L25e5f4.  v5:= v5 * v14 @kind float;
  #L25e5f8.  v16:= v6 - v5 @kind float;
  #L25e5fc.  v2:= v13 * v4 @kind float;
  #L25e600.  v5:= v10 * v1 @kind float;
  #L25e604.  v17:= v2 - v5 @kind float;
  #L25e608.  v10:= v10 * v8 @kind float;
  #L25e60c.  v4:= v4 * v14 @kind float;
  #L25e610.  v10:= v10 - v4 @kind float;
  #L25e612.  v14:= v14 * v1 @kind float;
  #L25e616.  v13:= v13 * v8 @kind float;
  #L25e61a.  v13:= v14 - v13 @kind float;
  #L25e61e.  v1:= v11 @kind object;
  #L25e620.  v2:= v3;
  #L25e622.  v3:= v7;
  #L25e624.  v4:= v9;
  #L25e626.  v5:= v12;
  #L25e628.  v6:= v15;
  #L25e62a.  v7:= v16;
  #L25e62e.  v8:= v17;
  #L25e632.  v9:= v10;
  #L25e634.  v10:= v13;
  #L25e636.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.<init>:(FFFFFFFFF)V` @kind direct;
  #L25e63c.  return v11 @kind object;
}
procedure `com.huawei.hms.scankit.aiscan.common.q` `a`(`com.huawei.hms.scankit.aiscan.common.q` v19 @kind this, `com.huawei.hms.scankit.aiscan.common.q` v20 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.a:(Lcom/huawei/hms/scankit/aiscan/common/q;)Lcom/huawei/hms/scankit/aiscan/common/q;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L25e650.  v0:= v19 @kind object;
  #L25e654.  v1:= v20 @kind object;
  #L25e658.  v11:= new `com.huawei.hms.scankit.aiscan.common.q`;
  #L25e65c.  v2:= v0.`com.huawei.hms.scankit.aiscan.common.q.a` @type ^`float`;
  #L25e660.  v3:= v1.`com.huawei.hms.scankit.aiscan.common.q.a` @type ^`float`;
  #L25e664.  v4:= v2 * v3 @kind float;
  #L25e668.  v5:= v0.`com.huawei.hms.scankit.aiscan.common.q.d` @type ^`float`;
  #L25e66c.  v6:= v1.`com.huawei.hms.scankit.aiscan.common.q.b` @type ^`float`;
  #L25e670.  v7:= v5 * v6 @kind float;
  #L25e674.  v4:= v4 + v7 @kind float;
  #L25e676.  v7:= v0.`com.huawei.hms.scankit.aiscan.common.q.g` @type ^`float`;
  #L25e67a.  v8:= v1.`com.huawei.hms.scankit.aiscan.common.q.c` @type ^`float`;
  #L25e67e.  v9:= v7 * v8 @kind float;
  #L25e682.  v4:= v4 + v9 @kind float;
  #L25e684.  v9:= v1.`com.huawei.hms.scankit.aiscan.common.q.d` @type ^`float`;
  #L25e688.  v10:= v2 * v9 @kind float;
  #L25e68c.  v12:= v1.`com.huawei.hms.scankit.aiscan.common.q.e` @type ^`float`;
  #L25e690.  v13:= v5 * v12 @kind float;
  #L25e694.  v10:= v10 + v13 @kind float;
  #L25e696.  v13:= v1.`com.huawei.hms.scankit.aiscan.common.q.f` @type ^`float`;
  #L25e69a.  v14:= v7 * v13 @kind float;
  #L25e69e.  v10:= v10 + v14 @kind float;
  #L25e6a0.  v14:= v1.`com.huawei.hms.scankit.aiscan.common.q.g` @type ^`float`;
  #L25e6a4.  v2:= v2 * v14 @kind float;
  #L25e6a8.  v15:= v1.`com.huawei.hms.scankit.aiscan.common.q.h` @type ^`float`;
  #L25e6ac.  v5:= v5 * v15 @kind float;
  #L25e6b0.  v2:= v2 + v5 @kind float;
  #L25e6b2.  v1:= v1.`com.huawei.hms.scankit.aiscan.common.q.i` @type ^`float`;
  #L25e6b6.  v7:= v7 * v1 @kind float;
  #L25e6ba.  v5:= v2 + v7 @kind float;
  #L25e6be.  v2:= v0.`com.huawei.hms.scankit.aiscan.common.q.b` @type ^`float`;
  #L25e6c2.  v7:= v2 * v3 @kind float;
  #L25e6c6.  v20:= v5;
  #L25e6ca.  v5:= v0.`com.huawei.hms.scankit.aiscan.common.q.e` @type ^`float`;
  #L25e6ce.  v16:= v5 * v6 @kind float;
  #L25e6d2.  v7:= v7 + v16 @kind float;
  #L25e6d6.  v16:= v10;
  #L25e6da.  v10:= v0.`com.huawei.hms.scankit.aiscan.common.q.h` @type ^`float`;
  #L25e6de.  v17:= v10 * v8 @kind float;
  #L25e6e2.  v7:= v7 + v17 @kind float;
  #L25e6e6.  v17:= v2 * v9 @kind float;
  #L25e6ea.  v18:= v5 * v12 @kind float;
  #L25e6ee.  v17:= v17 + v18 @kind float;
  #L25e6f2.  v18:= v10 * v13 @kind float;
  #L25e6f6.  v17:= v17 + v18 @kind float;
  #L25e6fa.  v2:= v2 * v14 @kind float;
  #L25e6fe.  v5:= v5 * v15 @kind float;
  #L25e702.  v2:= v2 + v5 @kind float;
  #L25e704.  v10:= v10 * v1 @kind float;
  #L25e708.  v10:= v10 + v2 @kind float;
  #L25e70a.  v2:= v0.`com.huawei.hms.scankit.aiscan.common.q.c` @type ^`float`;
  #L25e70e.  v3:= v3 * v2 @kind float;
  #L25e712.  v5:= v0.`com.huawei.hms.scankit.aiscan.common.q.f` @type ^`float`;
  #L25e716.  v6:= v6 * v5 @kind float;
  #L25e71a.  v3:= v3 + v6 @kind float;
  #L25e71c.  v6:= v0.`com.huawei.hms.scankit.aiscan.common.q.i` @type ^`float`;
  #L25e720.  v8:= v8 * v6 @kind float;
  #L25e724.  v8:= v8 + v3 @kind float;
  #L25e726.  v9:= v9 * v2 @kind float;
  #L25e72a.  v12:= v12 * v5 @kind float;
  #L25e72e.  v9:= v9 + v12 @kind float;
  #L25e730.  v13:= v13 * v6 @kind float;
  #L25e734.  v9:= v9 + v13 @kind float;
  #L25e736.  v2:= v2 * v14 @kind float;
  #L25e73a.  v5:= v5 * v15 @kind float;
  #L25e73e.  v2:= v2 + v5 @kind float;
  #L25e740.  v6:= v6 * v1 @kind float;
  #L25e744.  v12:= v2 + v6 @kind float;
  #L25e748.  v1:= v11 @kind object;
  #L25e74a.  v2:= v4;
  #L25e74c.  v3:= v16;
  #L25e750.  v4:= v20;
  #L25e754.  v5:= v7;
  #L25e756.  v6:= v17;
  #L25e75a.  v7:= v10;
  #L25e75c.  v10:= v12;
  #L25e75e.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.<init>:(FFFFFFFFF)V` @kind direct;
  #L25e764.  return v11 @kind object;
}
procedure `void` `a`(`com.huawei.hms.scankit.aiscan.common.q` v0 @kind this, `float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 , `float` v6 , `float` v7 , `float` v8 , `float` v9 , `float` v10 , `float` v11 , `float` v12 , `float` v13 , `float` v14 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.a:(FFFFFFFFFFFFFF)V` @AccessFlag PUBLIC {
    temp;

  #L25e91c.  v0.`com.huawei.hms.scankit.aiscan.common.q.j` @type ^`float` := v1;
  #L25e920.  v0.`com.huawei.hms.scankit.aiscan.common.q.k` @type ^`float` := v2;
  #L25e924.  v0.`com.huawei.hms.scankit.aiscan.common.q.l` @type ^`float` := v3;
  #L25e928.  v0.`com.huawei.hms.scankit.aiscan.common.q.m` @type ^`float` := v4;
  #L25e92c.  v0.`com.huawei.hms.scankit.aiscan.common.q.n` @type ^`float` := v5;
  #L25e930.  v0.`com.huawei.hms.scankit.aiscan.common.q.o` @type ^`float` := v6;
  #L25e934.  v0.`com.huawei.hms.scankit.aiscan.common.q.p` @type ^`float` := v7;
  #L25e938.  v0.`com.huawei.hms.scankit.aiscan.common.q.q` @type ^`float` := v8;
  #L25e93c.  v0.`com.huawei.hms.scankit.aiscan.common.q.r` @type ^`float` := v9;
  #L25e940.  v0.`com.huawei.hms.scankit.aiscan.common.q.s` @type ^`float` := v10;
  #L25e944.  v0.`com.huawei.hms.scankit.aiscan.common.q.t` @type ^`float` := v11;
  #L25e948.  v0.`com.huawei.hms.scankit.aiscan.common.q.u` @type ^`float` := v12;
  #L25e94c.  v0.`com.huawei.hms.scankit.aiscan.common.q.v` @type ^`float` := v13;
  #L25e950.  v0.`com.huawei.hms.scankit.aiscan.common.q.w` @type ^`float` := v14;
  #L25e954.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.aiscan.common.q` v19 @kind this, `float`[] v20 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.a:([F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L25e968.  v0:= v19 @kind object;
  #L25e96c.  v1:= v20 @kind object;
  #L25e970.  v2:= length @variable v1;
  #L25e972.  v3:= v0.`com.huawei.hms.scankit.aiscan.common.q.a` @type ^`float`;
  #L25e976.  v4:= v0.`com.huawei.hms.scankit.aiscan.common.q.b` @type ^`float`;
  #L25e97a.  v5:= v0.`com.huawei.hms.scankit.aiscan.common.q.c` @type ^`float`;
  #L25e97e.  v6:= v0.`com.huawei.hms.scankit.aiscan.common.q.d` @type ^`float`;
  #L25e982.  v7:= v0.`com.huawei.hms.scankit.aiscan.common.q.e` @type ^`float`;
  #L25e986.  v8:= v0.`com.huawei.hms.scankit.aiscan.common.q.f` @type ^`float`;
  #L25e98a.  v9:= v0.`com.huawei.hms.scankit.aiscan.common.q.g` @type ^`float`;
  #L25e98e.  v10:= v0.`com.huawei.hms.scankit.aiscan.common.q.h` @type ^`float`;
  #L25e992.  v11:= v0.`com.huawei.hms.scankit.aiscan.common.q.i` @type ^`float`;
  #L25e996.  v12:= 0I;
  #L25e998.  if v12 >= v2 then goto L25e9ea;
  #L25e99c.  v13:= v1[v12];
  #L25e9a0.  v14:= v12 + 1;
  #L25e9a4.  v15:= v1[v14];
  #L25e9a8.  v16:= v5 * v13 @kind float;
  #L25e9ac.  v17:= v8 * v15 @kind float;
  #L25e9b0.  v16:= v16 + v17 @kind float;
  #L25e9b4.  v16:= v16 + v11 @kind float;
  #L25e9b8.  v17:= v3 * v13 @kind float;
  #L25e9bc.  v18:= v6 * v15 @kind float;
  #L25e9c0.  v17:= v17 + v18 @kind float;
  #L25e9c4.  v17:= v17 + v9 @kind float;
  #L25e9c8.  v17:= v17 / v16 @kind float;
  #L25e9cc.  v1[v12]:= v17;
  #L25e9d0.  v13:= v13 * v4 @kind float;
  #L25e9d4.  v15:= v15 * v7 @kind float;
  #L25e9d8.  v13:= v13 + v15 @kind float;
  #L25e9da.  v13:= v13 + v10 @kind float;
  #L25e9dc.  v13:= v13 / v16 @kind float;
  #L25e9e0.  v1[v14]:= v13;
  #L25e9e4.  v12:= v12 + 2;
  #L25e9e8.  goto L25e998;
  #L25e9ea.  return @kind void;
}
procedure `void` `b`(`com.huawei.hms.scankit.aiscan.common.q` v8 @kind this, `float`[] v9 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/q;.b:([F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L25e9fc.  v0:= length @variable v9;
  #L25e9fe.  v1:= 0I;
  #L25ea00.  if v1 >= v0 then goto L25eabe;
  #L25ea04.  v2:= v9[v1];
  #L25ea08.  v3:= v1 + 1;
  #L25ea0c.  v4:= v9[v3];
  #L25ea10.  v5:= v8.`com.huawei.hms.scankit.aiscan.common.q.t` @type ^`float`;
  #L25ea14.  v5:= v5 * v2 @kind float;
  #L25ea18.  v6:= v8.`com.huawei.hms.scankit.aiscan.common.q.u` @type ^`float`;
  #L25ea1c.  v6:= v6 * v4 @kind float;
  #L25ea20.  v5:= v5 + v6 @kind float;
  #L25ea22.  v6:= v8.`com.huawei.hms.scankit.aiscan.common.q.v` @type ^`float`;
  #L25ea26.  v6:= v6 * v2 @kind float;
  #L25ea2a.  v6:= v6 * v2 @kind float;
  #L25ea2e.  v5:= v5 + v6 @kind float;
  #L25ea30.  v6:= v8.`com.huawei.hms.scankit.aiscan.common.q.w` @type ^`float`;
  #L25ea34.  v6:= v6 * v4 @kind float;
  #L25ea38.  v6:= v6 * v4 @kind float;
  #L25ea3c.  v5:= v5 + v6 @kind float;
  #L25ea3e.  v6:= 1.0F;
  #L25ea42.  v5:= v5 + v6 @kind float;
  #L25ea44.  v6:= v8.`com.huawei.hms.scankit.aiscan.common.q.j` @type ^`float`;
  #L25ea48.  v6:= v6 * v2 @kind float;
  #L25ea4c.  v7:= v8.`com.huawei.hms.scankit.aiscan.common.q.k` @type ^`float`;
  #L25ea50.  v7:= v7 * v4 @kind float;
  #L25ea54.  v6:= v6 + v7 @kind float;
  #L25ea56.  v7:= v8.`com.huawei.hms.scankit.aiscan.common.q.l` @type ^`float`;
  #L25ea5a.  v7:= v7 * v2 @kind float;
  #L25ea5e.  v7:= v7 * v2 @kind float;
  #L25ea62.  v6:= v6 + v7 @kind float;
  #L25ea64.  v7:= v8.`com.huawei.hms.scankit.aiscan.common.q.m` @type ^`float`;
  #L25ea68.  v7:= v7 * v4 @kind float;
  #L25ea6c.  v7:= v7 * v4 @kind float;
  #L25ea70.  v6:= v6 + v7 @kind float;
  #L25ea72.  v7:= v8.`com.huawei.hms.scankit.aiscan.common.q.n` @type ^`float`;
  #L25ea76.  v6:= v6 + v7 @kind float;
  #L25ea78.  v6:= v6 / v5 @kind float;
  #L25ea7a.  v9[v1]:= v6;
  #L25ea7e.  v6:= v8.`com.huawei.hms.scankit.aiscan.common.q.o` @type ^`float`;
  #L25ea82.  v6:= v6 * v2 @kind float;
  #L25ea86.  v7:= v8.`com.huawei.hms.scankit.aiscan.common.q.p` @type ^`float`;
  #L25ea8a.  v7:= v7 * v4 @kind float;
  #L25ea8e.  v6:= v6 + v7 @kind float;
  #L25ea90.  v7:= v8.`com.huawei.hms.scankit.aiscan.common.q.q` @type ^`float`;
  #L25ea94.  v7:= v7 * v2 @kind float;
  #L25ea98.  v7:= v7 * v2 @kind float;
  #L25ea9c.  v6:= v6 + v7 @kind float;
  #L25ea9e.  v2:= v8.`com.huawei.hms.scankit.aiscan.common.q.r` @type ^`float`;
  #L25eaa2.  v2:= v2 * v4 @kind float;
  #L25eaa6.  v2:= v2 * v4 @kind float;
  #L25eaaa.  v6:= v6 + v2 @kind float;
  #L25eaac.  v2:= v8.`com.huawei.hms.scankit.aiscan.common.q.s` @type ^`float`;
  #L25eab0.  v6:= v6 + v2 @kind float;
  #L25eab2.  v6:= v6 / v5 @kind float;
  #L25eab4.  v9[v3]:= v6;
  #L25eab8.  v1:= v1 + 2;
  #L25eabc.  goto L25ea00;
  #L25eabe.  return @kind void;
}
