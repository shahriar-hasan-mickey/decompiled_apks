record `com.huawei.hms.scankit.aiscan.common.r` @kind class @AccessFlag PUBLIC_FINAL extends `com.huawei.hms.scankit.aiscan.common.m` @kind class {
  `byte`[] `com.huawei.hms.scankit.aiscan.common.r.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.aiscan.common.r.d` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.aiscan.common.r.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.aiscan.common.r.f` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.aiscan.common.r.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.r` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 , `int` v6 , `int` v7 , `int` v8 , `boolean` v9 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/r;.<init>:([BIIIIIIZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L25ed08.  call `<init>`(v1, v7, v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.<init>:(II)V` @kind direct;
  #L25ed0e.  v0:= v5 + v7 @kind int;
  #L25ed12.  if v0 > v3 then goto L25ed3e;
  #L25ed16.  v0:= v6 + v8 @kind int;
  #L25ed1a.  if v0 > v4 then goto L25ed3e;
  #L25ed1e.  v1.`com.huawei.hms.scankit.aiscan.common.r.c` @type ^`byte`[] := v2 @kind object;
  #L25ed22.  v1.`com.huawei.hms.scankit.aiscan.common.r.d` @type ^`int` := v3;
  #L25ed26.  v1.`com.huawei.hms.scankit.aiscan.common.r.e` @type ^`int` := v4;
  #L25ed2a.  v1.`com.huawei.hms.scankit.aiscan.common.r.f` @type ^`int` := v5;
  #L25ed2e.  v1.`com.huawei.hms.scankit.aiscan.common.r.g` @type ^`int` := v6;
  #L25ed32.  if v9 == 0 then goto L25ed3c;
  #L25ed36.  call `a`(v1, v7, v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/r;.a:(II)V` @kind direct;
  #L25ed3c.  return @kind void;
  #L25ed3e.  v2:= new `java.lang.IllegalArgumentException`;
  #L25ed42.  v3:= "Crop rectangle does not fit within image data." @kind object;
  #L25ed46.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25ed4c.  throw v2;
  #L25ed4e.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L25ed50.  throw v2;
  catch `java.lang.Exception` @[L25ed3e..L25ed42] goto L25ed4e;
  catch `java.lang.Exception` @[L25ed46..L25ed4e] goto L25ed4e;
}
procedure `void` `a`(`com.huawei.hms.scankit.aiscan.common.r` v8 @kind this, `int` v9 , `int` v10 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/r;.a:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L25ed7c.  v0:= v8.`com.huawei.hms.scankit.aiscan.common.r.c` @type ^`byte`[] @kind object;
  #L25ed80.  v1:= v8.`com.huawei.hms.scankit.aiscan.common.r.g` @type ^`int`;
  #L25ed84.  v2:= v8.`com.huawei.hms.scankit.aiscan.common.r.d` @type ^`int`;
  #L25ed88.  v1:= v1 * v2 @kind int;
  #L25ed8c.  v2:= v8.`com.huawei.hms.scankit.aiscan.common.r.f` @type ^`int`;
  #L25ed90.  v1:= v1 + v2 @kind int;
  #L25ed92.  v2:= 0I;
  #L25ed94.  if v2 >= v10 then goto L25edea;
  #L25ed98.  v3:= v9 / 2;
  #L25ed9c.  v3:= v3 + v1 @kind int;
  #L25ed9e.  v4:= v1 + v9 @kind int;
  #L25eda2.  v4:= v4 + -1;
  #L25eda6.  v5:= v1;
  #L25eda8.  if v5 >= v3 then goto L25edde;
  #L25edac.  call temp:= `a`(v0, v5) @signature `Lcom/huawei/hms/scankit/util/b;.a:([BI)Z` @kind static;
  #L25edb2.  v6:= temp;
  #L25edb4.  if v6 == 0 then goto L25edd4;
  #L25edb8.  call temp:= `a`(v0, v4) @signature `Lcom/huawei/hms/scankit/util/b;.a:([BI)Z` @kind static;
  #L25edbe.  v6:= temp;
  #L25edc0.  if v6 == 0 then goto L25edd4;
  #L25edc4.  v6:= v0[v5] @kind byte;
  #L25edc8.  v7:= v0[v4] @kind byte;
  #L25edcc.  v0[v5]:= v7 @kind byte;
  #L25edd0.  v0[v4]:= v6 @kind byte;
  #L25edd4.  v5:= v5 + 1;
  #L25edd8.  v4:= v4 + -1;
  #L25eddc.  goto L25eda8;
  #L25edde.  v2:= v2 + 1;
  #L25ede2.  v3:= v8.`com.huawei.hms.scankit.aiscan.common.r.d` @type ^`int`;
  #L25ede6.  v1:= v1 + v3 @kind int;
  #L25ede8.  goto L25ed94;
  #L25edea.  return @kind void;
}
procedure `com.huawei.hms.scankit.aiscan.common.m` `a`(`com.huawei.hms.scankit.aiscan.common.r` v10 @kind this, `int` v11 , `int` v12 , `int` v13 , `int` v14 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/r;.a:(IIII)Lcom/huawei/hms/scankit/aiscan/common/m;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L25ec1c.  v9:= new `com.huawei.hms.scankit.aiscan.common.r`;
  #L25ec20.  v1:= v10.`com.huawei.hms.scankit.aiscan.common.r.c` @type ^`byte`[] @kind object;
  #L25ec24.  v2:= v10.`com.huawei.hms.scankit.aiscan.common.r.d` @type ^`int`;
  #L25ec28.  v3:= v10.`com.huawei.hms.scankit.aiscan.common.r.e` @type ^`int`;
  #L25ec2c.  v0:= v10.`com.huawei.hms.scankit.aiscan.common.r.f` @type ^`int`;
  #L25ec30.  v4:= v0 + v11 @kind int;
  #L25ec34.  v11:= v10.`com.huawei.hms.scankit.aiscan.common.r.g` @type ^`int`;
  #L25ec38.  v5:= v11 + v12 @kind int;
  #L25ec3c.  v8:= 0I;
  #L25ec3e.  v0:= v9 @kind object;
  #L25ec40.  v6:= v13;
  #L25ec42.  v7:= v14;
  #L25ec44.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/r;.<init>:([BIIIIIIZ)V` @kind direct;
  #L25ec4a.  return v9 @kind object;
}
procedure `byte`[] `a`(`com.huawei.hms.scankit.aiscan.common.r` v3 @kind this, `int` v4 , `byte`[] v5 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/r;.a:(I[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L25ead0.  if v4 < 0 then goto L25eb18;
  #L25ead4.  call temp:= `a`(v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.a:()I` @kind virtual;
  #L25eada.  v0:= temp;
  #L25eadc.  if v4 >= v0 then goto L25eb18;
  #L25eae0.  call temp:= `c`(v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.c:()I` @kind virtual;
  #L25eae6.  v0:= temp;
  #L25eae8.  if v5 == 0 then goto L25eaf2;
  #L25eaec.  v1:= length @variable v5;
  #L25eaee.  if v1 >= v0 then goto L25eaf6;
  #L25eaf2.  v5:= new `byte`[v0];
  #L25eaf6.  v1:= v3.`com.huawei.hms.scankit.aiscan.common.r.g` @type ^`int`;
  #L25eafa.  v4:= v4 + v1 @kind int;
  #L25eafc.  v1:= v3.`com.huawei.hms.scankit.aiscan.common.r.d` @type ^`int`;
  #L25eb00.  v4:= v4 * v1 @kind int;
  #L25eb04.  v1:= v3.`com.huawei.hms.scankit.aiscan.common.r.f` @type ^`int`;
  #L25eb08.  v4:= v4 + v1 @kind int;
  #L25eb0a.  v1:= v3.`com.huawei.hms.scankit.aiscan.common.r.c` @type ^`byte`[] @kind object;
  #L25eb0e.  v2:= 0I;
  #L25eb10.  call `arraycopy`(v1, v4, v5, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L25eb16.  return v5 @kind object;
  #L25eb18.  v5:= new `java.lang.IllegalArgumentException`;
  #L25eb1c.  v0:= new `java.lang.StringBuilder`;
  #L25eb20.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L25eb26.  v1:= "Requested row is outside the image: " @kind object;
  #L25eb2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25eb30.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L25eb36.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L25eb3c.  v4:= temp @kind object;
  #L25eb3e.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25eb44.  throw v5;
  #L25eb46.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L25eb48.  throw v4;
  catch `java.lang.Exception` @[L25eb18..L25eb26] goto L25eb46;
  catch `java.lang.Exception` @[L25eb2a..L25eb46] goto L25eb46;
}
procedure `com.huawei.hms.scankit.aiscan.common.m` `b`(`com.huawei.hms.scankit.aiscan.common.r` v10 @kind this, `int` v11 , `int` v12 , `int` v13 , `int` v14 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/r;.b:(IIII)Lcom/huawei/hms/scankit/aiscan/common/m;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L25ec5c.  v0:= v10.`com.huawei.hms.scankit.aiscan.common.r.e` @type ^`int`;
  #L25ec60.  v1:= v10.`com.huawei.hms.scankit.aiscan.common.r.d` @type ^`int`;
  #L25ec64.  v2:= 0I;
  #L25ec66.  if v0 <= v1 then goto L25ecb8;
  #L25ec6a.  v0:= v11 * v12 @kind int;
  #L25ec6e.  v1:= new `byte`[v0];
  #L25ec72.  v0:= v10.`com.huawei.hms.scankit.aiscan.common.r.e` @type ^`int`;
  #L25ec76.  if v2 >= v0 then goto L25ec98;
  #L25ec7a.  v0:= v10.`com.huawei.hms.scankit.aiscan.common.r.c` @type ^`byte`[] @kind object;
  #L25ec7e.  v3:= v10.`com.huawei.hms.scankit.aiscan.common.r.d` @type ^`int`;
  #L25ec82.  v4:= v2 * v3 @kind int;
  #L25ec86.  v5:= v2 * v11 @kind int;
  #L25ec8a.  v5:= v5 + v13 @kind int;
  #L25ec8c.  call `arraycopy`(v0, v4, v1, v5, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L25ec92.  v2:= v2 + 1;
  #L25ec96.  goto L25ec72;
  #L25ec98.  v9:= new `com.huawei.hms.scankit.aiscan.common.r`;
  #L25ec9c.  v4:= v10.`com.huawei.hms.scankit.aiscan.common.r.f` @type ^`int`;
  #L25eca0.  v5:= v10.`com.huawei.hms.scankit.aiscan.common.r.g` @type ^`int`;
  #L25eca4.  v8:= 0I;
  #L25eca6.  v0:= v9 @kind object;
  #L25eca8.  v2:= v11;
  #L25ecaa.  v3:= v12;
  #L25ecac.  v6:= v11;
  #L25ecae.  v7:= v12;
  #L25ecb0.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/r;.<init>:([BIIIIIIZ)V` @kind direct;
  #L25ecb6.  goto L25ecf4;
  #L25ecb8.  v3:= v11 * v12 @kind int;
  #L25ecbc.  v3:= new `byte`[v3];
  #L25ecc0.  v4:= v10.`com.huawei.hms.scankit.aiscan.common.r.c` @type ^`byte`[] @kind object;
  #L25ecc4.  v5:= v14 * v11 @kind int;
  #L25ecc8.  v0:= v0 * v1 @kind int;
  #L25eccc.  call `arraycopy`(v4, v2, v3, v5, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L25ecd2.  v9:= new `com.huawei.hms.scankit.aiscan.common.r`;
  #L25ecd6.  v6:= v10.`com.huawei.hms.scankit.aiscan.common.r.d` @type ^`int`;
  #L25ecda.  v4:= v10.`com.huawei.hms.scankit.aiscan.common.r.f` @type ^`int`;
  #L25ecde.  v5:= v10.`com.huawei.hms.scankit.aiscan.common.r.g` @type ^`int`;
  #L25ece2.  v8:= 0I;
  #L25ece4.  v0:= v9 @kind object;
  #L25ece6.  v1:= v3 @kind object;
  #L25ece8.  v2:= v6;
  #L25ecea.  v3:= v12;
  #L25ecec.  v7:= v12;
  #L25ecee.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/r;.<init>:([BIIIIIIZ)V` @kind direct;
  #L25ecf4.  return v9 @kind object;
}
procedure `byte`[] `b`(`com.huawei.hms.scankit.aiscan.common.r` v8 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/r;.b:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L25eb74.  call temp:= `c`(v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.c:()I` @kind virtual;
  #L25eb7a.  v0:= temp;
  #L25eb7c.  call temp:= `a`(v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.a:()I` @kind virtual;
  #L25eb82.  v1:= temp;
  #L25eb84.  v2:= v8.`com.huawei.hms.scankit.aiscan.common.r.d` @type ^`int`;
  #L25eb88.  if v0 != v2 then goto L25eb9a;
  #L25eb8c.  v2:= v8.`com.huawei.hms.scankit.aiscan.common.r.e` @type ^`int`;
  #L25eb90.  if v1 != v2 then goto L25eb9a;
  #L25eb94.  v0:= v8.`com.huawei.hms.scankit.aiscan.common.r.c` @type ^`byte`[] @kind object;
  #L25eb98.  return v0 @kind object;
  #L25eb9a.  v2:= v0 * v1 @kind int;
  #L25eb9e.  v3:= new `byte`[v2];
  #L25eba2.  v4:= v8.`com.huawei.hms.scankit.aiscan.common.r.g` @type ^`int`;
  #L25eba6.  v5:= v8.`com.huawei.hms.scankit.aiscan.common.r.d` @type ^`int`;
  #L25ebaa.  v4:= v4 * v5 @kind int;
  #L25ebae.  v6:= v8.`com.huawei.hms.scankit.aiscan.common.r.f` @type ^`int`;
  #L25ebb2.  v4:= v4 + v6 @kind int;
  #L25ebb4.  v6:= 0I;
  #L25ebb6.  v7:= 0I;
  #L25ebb8.  if v0 != v5 then goto L25ebca;
  #L25ebbc.  v0:= v8.`com.huawei.hms.scankit.aiscan.common.r.c` @type ^`byte`[] @kind object;
  #L25ebc0.  call `arraycopy`(v0, v4, v3, v6, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L25ebc6.  return v3 @kind object;
  #L25ebc8.  return v7 @kind object;
  #L25ebca.  if v6 >= v1 then goto L25ebea;
  #L25ebce.  v2:= v6 * v0 @kind int;
  #L25ebd2.  v5:= v8.`com.huawei.hms.scankit.aiscan.common.r.c` @type ^`byte`[] @kind object;
  #L25ebd6.  call `arraycopy`(v5, v4, v3, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L25ebdc.  v2:= v8.`com.huawei.hms.scankit.aiscan.common.r.d` @type ^`int`;
  #L25ebe0.  v4:= v4 + v2 @kind int;
  #L25ebe2.  v6:= v6 + 1;
  #L25ebe6.  goto L25ebca;
  #L25ebe8.  return v7 @kind object;
  #L25ebea.  return v3 @kind object;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L25ebbc..L25ebc6] goto L25ebc8;
  catch `java.lang.Exception` @[L25ebbc..L25ebc6] goto L25ebc8;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L25ebd2..L25ebe0] goto L25ebe8;
  catch `java.lang.Exception` @[L25ebd2..L25ebe0] goto L25ebe8;
}
