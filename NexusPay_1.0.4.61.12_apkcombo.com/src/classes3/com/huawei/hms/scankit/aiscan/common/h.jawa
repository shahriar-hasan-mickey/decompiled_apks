record `com.huawei.hms.scankit.aiscan.common.h` @kind class @AccessFlag PUBLIC_FINAL {
  `int`[] `com.huawei.hms.scankit.aiscan.common.h.i` @AccessFlag PRIVATE_FINAL;
  `int`[] `com.huawei.hms.scankit.aiscan.common.h.j` @AccessFlag PRIVATE_FINAL;
  `com.huawei.hms.scankit.aiscan.common.i` `com.huawei.hms.scankit.aiscan.common.h.k` @AccessFlag PRIVATE_FINAL;
  `com.huawei.hms.scankit.aiscan.common.i` `com.huawei.hms.scankit.aiscan.common.h.l` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.aiscan.common.h.m` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.aiscan.common.h.n` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.aiscan.common.h.o` @AccessFlag PRIVATE_FINAL;
}
global `com.huawei.hms.scankit.aiscan.common.h` `@@com.huawei.hms.scankit.aiscan.common.h.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.huawei.hms.scankit.aiscan.common.h` `@@com.huawei.hms.scankit.aiscan.common.h.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.huawei.hms.scankit.aiscan.common.h` `@@com.huawei.hms.scankit.aiscan.common.h.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.huawei.hms.scankit.aiscan.common.h` `@@com.huawei.hms.scankit.aiscan.common.h.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.huawei.hms.scankit.aiscan.common.h` `@@com.huawei.hms.scankit.aiscan.common.h.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.huawei.hms.scankit.aiscan.common.h` `@@com.huawei.hms.scankit.aiscan.common.h.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.huawei.hms.scankit.aiscan.common.h` `@@com.huawei.hms.scankit.aiscan.common.h.g` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.huawei.hms.scankit.aiscan.common.h` `@@com.huawei.hms.scankit.aiscan.common.h.h` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L25c348.  v0:= new `com.huawei.hms.scankit.aiscan.common.h`;
  #L25c34c.  v1:= 4201I;
  #L25c350.  v2:= 4096I;
  #L25c354.  v3:= 1I;
  #L25c356.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.<init>:(III)V` @kind direct;
  #L25c35c.  `@@com.huawei.hms.scankit.aiscan.common.h.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` := v0 @kind object;
  #L25c360.  v0:= new `com.huawei.hms.scankit.aiscan.common.h`;
  #L25c364.  v1:= 1033I;
  #L25c368.  v2:= 1024I;
  #L25c36c.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.<init>:(III)V` @kind direct;
  #L25c372.  `@@com.huawei.hms.scankit.aiscan.common.h.b` @type ^`com.huawei.hms.scankit.aiscan.common.h` := v0 @kind object;
  #L25c376.  v0:= new `com.huawei.hms.scankit.aiscan.common.h`;
  #L25c37a.  v1:= 67I;
  #L25c37e.  v2:= 64I;
  #L25c382.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.<init>:(III)V` @kind direct;
  #L25c388.  `@@com.huawei.hms.scankit.aiscan.common.h.c` @type ^`com.huawei.hms.scankit.aiscan.common.h` := v0 @kind object;
  #L25c38c.  v0:= new `com.huawei.hms.scankit.aiscan.common.h`;
  #L25c390.  v1:= 19I;
  #L25c394.  v2:= 16I;
  #L25c398.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.<init>:(III)V` @kind direct;
  #L25c39e.  `@@com.huawei.hms.scankit.aiscan.common.h.d` @type ^`com.huawei.hms.scankit.aiscan.common.h` := v0 @kind object;
  #L25c3a2.  v0:= new `com.huawei.hms.scankit.aiscan.common.h`;
  #L25c3a6.  v1:= 285I;
  #L25c3aa.  v2:= 256I;
  #L25c3ae.  v4:= 0I;
  #L25c3b0.  call `<init>`(v0, v1, v2, v4) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.<init>:(III)V` @kind direct;
  #L25c3b6.  `@@com.huawei.hms.scankit.aiscan.common.h.e` @type ^`com.huawei.hms.scankit.aiscan.common.h` := v0 @kind object;
  #L25c3ba.  v0:= new `com.huawei.hms.scankit.aiscan.common.h`;
  #L25c3be.  v1:= 301I;
  #L25c3c2.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.<init>:(III)V` @kind direct;
  #L25c3c8.  `@@com.huawei.hms.scankit.aiscan.common.h.f` @type ^`com.huawei.hms.scankit.aiscan.common.h` := v0 @kind object;
  #L25c3cc.  `@@com.huawei.hms.scankit.aiscan.common.h.g` @type ^`com.huawei.hms.scankit.aiscan.common.h` := v0 @kind object;
  #L25c3d0.  v0:= `@@com.huawei.hms.scankit.aiscan.common.h.c` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c3d4.  `@@com.huawei.hms.scankit.aiscan.common.h.h` @type ^`com.huawei.hms.scankit.aiscan.common.h` := v0 @kind object;
  #L25c3d8.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.h` v4 @kind this, `int` v5 , `int` v6 , `int` v7 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.<init>:(III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L25c3ec.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25c3f2.  v4.`com.huawei.hms.scankit.aiscan.common.h.n` @type ^`int` := v5;
  #L25c3f6.  v4.`com.huawei.hms.scankit.aiscan.common.h.m` @type ^`int` := v6;
  #L25c3fa.  v4.`com.huawei.hms.scankit.aiscan.common.h.o` @type ^`int` := v7;
  #L25c3fe.  v7:= new `int`[v6];
  #L25c402.  v4.`com.huawei.hms.scankit.aiscan.common.h.i` @type ^`int`[] := v7 @kind object;
  #L25c406.  v7:= new `int`[v6];
  #L25c40a.  v4.`com.huawei.hms.scankit.aiscan.common.h.j` @type ^`int`[] := v7 @kind object;
  #L25c40e.  v7:= 0I;
  #L25c410.  v0:= 1I;
  #L25c412.  v1:= 0I;
  #L25c414.  v2:= 1I;
  #L25c416.  if v1 >= v6 then goto L25c438;
  #L25c41a.  v3:= v4.`com.huawei.hms.scankit.aiscan.common.h.i` @type ^`int`[] @kind object;
  #L25c41e.  v3[v1]:= v2;
  #L25c422.  v2:= v2 * 2;
  #L25c426.  if v2 < v6 then goto L25c432;
  #L25c42a.  v2:= v2 ^~ v5 @kind int;
  #L25c42c.  v3:= v6 + -1;
  #L25c430.  v2:= v2 ^& v3 @kind int;
  #L25c432.  v1:= v1 + 1;
  #L25c436.  goto L25c416;
  #L25c438.  v5:= 0I;
  #L25c43a.  v1:= v6 + -1;
  #L25c43e.  if v5 >= v1 then goto L25c458;
  #L25c442.  v1:= v4.`com.huawei.hms.scankit.aiscan.common.h.j` @type ^`int`[] @kind object;
  #L25c446.  v2:= v4.`com.huawei.hms.scankit.aiscan.common.h.i` @type ^`int`[] @kind object;
  #L25c44a.  v2:= v2[v5];
  #L25c44e.  v1[v2]:= v5;
  #L25c452.  v5:= v5 + 1;
  #L25c456.  goto L25c43a;
  #L25c458.  v5:= new `com.huawei.hms.scankit.aiscan.common.i`;
  #L25c45c.  v6:= new `int`[v0];
  #L25c460.  v6[v7]:= v7;
  #L25c464.  call `<init>`(v5, v4, v6) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/h;[I)V` @kind direct;
  #L25c46a.  v4.`com.huawei.hms.scankit.aiscan.common.h.k` @type ^`com.huawei.hms.scankit.aiscan.common.i` := v5 @kind object;
  #L25c46e.  v5:= new `com.huawei.hms.scankit.aiscan.common.i`;
  #L25c472.  v6:= new `int`[v0];
  #L25c476.  v6[v7]:= v0;
  #L25c47a.  call `<init>`(v5, v4, v6) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/h;[I)V` @kind direct;
  #L25c480.  v4.`com.huawei.hms.scankit.aiscan.common.h.l` @type ^`com.huawei.hms.scankit.aiscan.common.i` := v5 @kind object;
  #L25c484.  return @kind void;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.a:(II)I` @AccessFlag STATIC {
    temp;

  #L25c1ec.  v0:= v0 ^~ v1 @kind int;
  #L25c1ee.  return v0;
}
procedure `int` `a`(`com.huawei.hms.scankit.aiscan.common.h` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25c1a4.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.h.o` @type ^`int`;
  #L25c1a8.  return v0;
}
procedure `int` `a`(`com.huawei.hms.scankit.aiscan.common.h` v1 @kind this, `int` v2 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.a:(I)I` @AccessFlag  {
    temp;
    v0;

  #L25c1bc.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.h.i` @type ^`int`[] @kind object;
  #L25c1c0.  call temp:= `a`(v0, v2) @signature `Lcom/huawei/hms/scankit/util/b;.a:([II)Z` @kind static;
  #L25c1c6.  v0:= temp;
  #L25c1c8.  if v0 == 0 then goto L25c1d6;
  #L25c1cc.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.h.i` @type ^`int`[] @kind object;
  #L25c1d0.  v2:= v0[v2];
  #L25c1d4.  return v2;
  #L25c1d6.  v2:= -1I;
  #L25c1d8.  return v2;
}
procedure `int` `b`(`com.huawei.hms.scankit.aiscan.common.h` v3 @kind this, `int` v4 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.b:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L25c200.  if v4 == 0 then goto L25c220;
  #L25c204.  v0:= v3.`com.huawei.hms.scankit.aiscan.common.h.i` @type ^`int`[] @kind object;
  #L25c208.  v1:= v3.`com.huawei.hms.scankit.aiscan.common.h.m` @type ^`int`;
  #L25c20c.  v2:= v3.`com.huawei.hms.scankit.aiscan.common.h.j` @type ^`int`[] @kind object;
  #L25c210.  v4:= v2[v4];
  #L25c214.  v1:= v1 - v4 @kind int;
  #L25c216.  v1:= v1 + -1;
  #L25c21a.  v4:= v0[v1];
  #L25c21e.  return v4;
  #L25c220.  v4:= new `java.lang.ArithmeticException`;
  #L25c224.  call `<init>`(v4) @signature `Ljava/lang/ArithmeticException;.<init>:()V` @kind direct;
  #L25c22a.  throw v4;
  #L25c22c.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L25c22e.  throw v4;
  catch `java.lang.Exception` @[L25c220..L25c22c] goto L25c22c;
}
procedure `com.huawei.hms.scankit.aiscan.common.i` `b`(`com.huawei.hms.scankit.aiscan.common.h` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.b:()Lcom/huawei/hms/scankit/aiscan/common/i;` @AccessFlag  {
    temp;
    v0;

  #L25c11c.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.h.l` @type ^`com.huawei.hms.scankit.aiscan.common.i` @kind object;
  #L25c120.  return v0 @kind object;
}
procedure `com.huawei.hms.scankit.aiscan.common.i` `b`(`com.huawei.hms.scankit.aiscan.common.h` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.b:(II)Lcom/huawei/hms/scankit/aiscan/common/i;` @AccessFlag  {
    temp;
    v0;

  #L25c134.  if v2 < 0 then goto L25c15c;
  #L25c138.  if v3 != 0 then goto L25c142;
  #L25c13c.  v2:= v1.`com.huawei.hms.scankit.aiscan.common.h.k` @type ^`com.huawei.hms.scankit.aiscan.common.i` @kind object;
  #L25c140.  return v2 @kind object;
  #L25c142.  v2:= v2 + 1;
  #L25c146.  v2:= new `int`[v2];
  #L25c14a.  v0:= 0I;
  #L25c14c.  v2[v0]:= v3;
  #L25c150.  v3:= new `com.huawei.hms.scankit.aiscan.common.i`;
  #L25c154.  call `<init>`(v3, v1, v2) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/h;[I)V` @kind direct;
  #L25c15a.  return v3 @kind object;
  #L25c15c.  v2:= new `java.lang.IllegalArgumentException`;
  #L25c160.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L25c166.  throw v2;
  #L25c168.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L25c16a.  throw v2;
  catch `java.lang.Exception` @[L25c15c..L25c168] goto L25c168;
}
procedure `int` `c`(`com.huawei.hms.scankit.aiscan.common.h` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25c250.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.h.m` @type ^`int`;
  #L25c254.  return v0;
}
procedure `int` `c`(`com.huawei.hms.scankit.aiscan.common.h` v1 @kind this, `int` v2 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.c:(I)I` @AccessFlag  {
    temp;
    v0;

  #L25c268.  if v2 == 0 then goto L25c276;
  #L25c26c.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.h.j` @type ^`int`[] @kind object;
  #L25c270.  v2:= v0[v2];
  #L25c274.  return v2;
  #L25c276.  v2:= new `java.lang.IllegalArgumentException`;
  #L25c27a.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L25c280.  throw v2;
  #L25c282.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L25c284.  throw v2;
  catch `java.lang.Exception` @[L25c276..L25c282] goto L25c282;
}
procedure `int` `c`(`com.huawei.hms.scankit.aiscan.common.h` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.c:(II)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L25c2a8.  if v3 == 0 then goto L25c2d4;
  #L25c2ac.  if v4 != 0 then goto L25c2b2;
  #L25c2b0.  goto L25c2d4;
  #L25c2b2.  v0:= v2.`com.huawei.hms.scankit.aiscan.common.h.i` @type ^`int`[] @kind object;
  #L25c2b6.  v1:= v2.`com.huawei.hms.scankit.aiscan.common.h.j` @type ^`int`[] @kind object;
  #L25c2ba.  v3:= v1[v3];
  #L25c2be.  v4:= v1[v4];
  #L25c2c2.  v3:= v3 + v4 @kind int;
  #L25c2c4.  v4:= v2.`com.huawei.hms.scankit.aiscan.common.h.m` @type ^`int`;
  #L25c2c8.  v4:= v4 + -1;
  #L25c2cc.  v3:= v3 %% v4 @kind int;
  #L25c2ce.  v3:= v0[v3];
  #L25c2d2.  return v3;
  #L25c2d4.  v3:= 0I;
  #L25c2d6.  return v3;
}
procedure `com.huawei.hms.scankit.aiscan.common.i` `d`(`com.huawei.hms.scankit.aiscan.common.h` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.d:()Lcom/huawei/hms/scankit/aiscan/common/i;` @AccessFlag  {
    temp;
    v0;

  #L25c18c.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.h.k` @type ^`com.huawei.hms.scankit.aiscan.common.i` @kind object;
  #L25c190.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.huawei.hms.scankit.aiscan.common.h` v2 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L25c2e8.  v0:= new `java.lang.StringBuilder`;
  #L25c2ec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L25c2f2.  v1:= "GF(0x" @kind object;
  #L25c2f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25c2fc.  v1:= v2.`com.huawei.hms.scankit.aiscan.common.h.n` @type ^`int`;
  #L25c300.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L25c306.  v1:= temp @kind object;
  #L25c308.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25c30e.  v1:= 44I;
  #L25c312.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L25c318.  v1:= v2.`com.huawei.hms.scankit.aiscan.common.h.m` @type ^`int`;
  #L25c31c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L25c322.  v1:= 41I;
  #L25c326.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L25c32c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L25c332.  v0:= temp @kind object;
  #L25c334.  return v0 @kind object;
}
