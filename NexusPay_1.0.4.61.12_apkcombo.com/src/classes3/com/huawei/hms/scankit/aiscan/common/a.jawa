record `com.huawei.hms.scankit.aiscan.common.a` @kind class @AccessFlag PUBLIC extends `java.lang.Exception` @kind class {
}
global `boolean` `@@com.huawei.hms.scankit.aiscan.common.a.a` @AccessFlag PROTECTED_STATIC_FINAL;
global `java.lang.StackTraceElement`[] `@@com.huawei.hms.scankit.aiscan.common.a.b` @AccessFlag PROTECTED_STATIC_FINAL;
global `com.huawei.hms.scankit.aiscan.common.a` `@@com.huawei.hms.scankit.aiscan.common.a.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L25b284.  v0:= "surefire.test.class.path" @kind object;
  #L25b288.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L25b28e.  v0:= temp @kind object;
  #L25b290.  v1:= 0I;
  #L25b292.  if v0 == 0 then goto L25b29a;
  #L25b296.  v0:= 1I;
  #L25b298.  goto L25b29c;
  #L25b29a.  v0:= 0I;
  #L25b29c.  `@@com.huawei.hms.scankit.aiscan.common.a.a` @type ^`boolean` := v0 @kind boolean;
  #L25b2a0.  v0:= new `java.lang.StackTraceElement`[v1];
  #L25b2a4.  `@@com.huawei.hms.scankit.aiscan.common.a.b` @type ^`java.lang.StackTraceElement`[] := v0 @kind object;
  #L25b2a8.  v0:= new `com.huawei.hms.scankit.aiscan.common.a`;
  #L25b2ac.  call `<init>`(v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.<init>:()V` @kind direct;
  #L25b2b2.  `@@com.huawei.hms.scankit.aiscan.common.a.c` @type ^`com.huawei.hms.scankit.aiscan.common.a` := v0 @kind object;
  #L25b2b6.  v1:= `@@com.huawei.hms.scankit.aiscan.common.a.b` @type ^`java.lang.StackTraceElement`[] @kind object;
  #L25b2ba.  call `setStackTrace`(v0, v1) @signature `Ljava/lang/Exception;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L25b2c0.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.a` v0 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L25b2d4.  call `<init>`(v0) @signature `Ljava/lang/Exception;.<init>:()V` @kind direct;
  #L25b2da.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.<init>:(Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L25b2ec.  call `<init>`(v0, v1) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25b2f2.  return @kind void;
}
procedure `com.huawei.hms.scankit.aiscan.common.a` `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L25b23c.  v0:= `@@com.huawei.hms.scankit.aiscan.common.a.a` @type ^`boolean` @kind boolean;
  #L25b240.  if v0 == 0 then goto L25b250;
  #L25b244.  v0:= new `com.huawei.hms.scankit.aiscan.common.a`;
  #L25b248.  call `<init>`(v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.<init>:()V` @kind direct;
  #L25b24e.  goto L25b254;
  #L25b250.  v0:= `@@com.huawei.hms.scankit.aiscan.common.a.c` @type ^`com.huawei.hms.scankit.aiscan.common.a` @kind object;
  #L25b254.  return v0 @kind object;
}
procedure `com.huawei.hms.scankit.aiscan.common.a` `a`(`java.lang.String` v1 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:(Ljava/lang/String;)Lcom/huawei/hms/scankit/aiscan/common/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L25b268.  v0:= new `com.huawei.hms.scankit.aiscan.common.a`;
  #L25b26c.  call `<init>`(v0, v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25b272.  return v0 @kind object;
}
