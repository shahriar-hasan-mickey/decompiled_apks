record `com.huawei.hms.scankit.aiscan.common.v` @kind class @AccessFlag PUBLIC_FINAL {
  `com.huawei.hms.scankit.aiscan.common.h` `com.huawei.hms.scankit.aiscan.common.v.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.huawei.hms.scankit.aiscan.common.v.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.v` v5 @kind this, `com.huawei.hms.scankit.aiscan.common.h` v6 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/v;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L25f590.  call `<init>`(v5) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25f596.  v5.`com.huawei.hms.scankit.aiscan.common.v.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` := v6 @kind object;
  #L25f59a.  v0:= new `java.util.ArrayList`;
  #L25f59e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L25f5a4.  v5.`com.huawei.hms.scankit.aiscan.common.v.b` @type ^`java.util.List` := v0 @kind object;
  #L25f5a8.  v1:= new `com.huawei.hms.scankit.aiscan.common.i`;
  #L25f5ac.  v2:= 1I;
  #L25f5ae.  v3:= new `int`[v2];
  #L25f5b2.  v4:= 0I;
  #L25f5b4.  v3[v4]:= v2;
  #L25f5b8.  call `<init>`(v1, v6, v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/h;[I)V` @kind direct;
  #L25f5be.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L25f5c4.  return @kind void;
}
procedure `com.huawei.hms.scankit.aiscan.common.i` `a`(`com.huawei.hms.scankit.aiscan.common.v` v8 @kind this, `int` v9 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/v;.a:(I)Lcom/huawei/hms/scankit/aiscan/common/i;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L25f4e4.  v0:= v8.`com.huawei.hms.scankit.aiscan.common.v.b` @type ^`java.util.List` @kind object;
  #L25f4e8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L25f4ee.  v0:= temp;
  #L25f4f0.  if v9 < v0 then goto L25f56c;
  #L25f4f4.  v0:= v8.`com.huawei.hms.scankit.aiscan.common.v.b` @type ^`java.util.List` @kind object;
  #L25f4f8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L25f4fe.  v1:= temp;
  #L25f500.  v2:= 1I;
  #L25f502.  v1:= v1 - v2 @kind int;
  #L25f504.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L25f50a.  v0:= temp @kind object;
  #L25f50c.  v0:= (`com.huawei.hms.scankit.aiscan.common.i`) v0 @kind object;
  #L25f510.  v1:= v8.`com.huawei.hms.scankit.aiscan.common.v.b` @type ^`java.util.List` @kind object;
  #L25f514.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L25f51a.  v1:= temp;
  #L25f51c.  if v1 > v9 then goto L25f56c;
  #L25f520.  v3:= new `com.huawei.hms.scankit.aiscan.common.i`;
  #L25f524.  v4:= v8.`com.huawei.hms.scankit.aiscan.common.v.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25f528.  v5:= 2I;
  #L25f52a.  v5:= new `int`[v5];
  #L25f52e.  v6:= 0I;
  #L25f530.  v5[v6]:= v2;
  #L25f534.  v6:= v1 + -1;
  #L25f538.  call temp:= `a`(v4) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.a:()I` @kind virtual;
  #L25f53e.  v7:= temp;
  #L25f540.  v6:= v6 + v7 @kind int;
  #L25f542.  call temp:= `a`(v4, v6) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.a:(I)I` @kind virtual;
  #L25f548.  v6:= temp;
  #L25f54a.  v5[v2]:= v6;
  #L25f54e.  call `<init>`(v3, v4, v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/h;[I)V` @kind direct;
  #L25f554.  call temp:= `c`(v0, v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.c:(Lcom/huawei/hms/scankit/aiscan/common/i;)Lcom/huawei/hms/scankit/aiscan/common/i;` @kind virtual;
  #L25f55a.  v0:= temp @kind object;
  #L25f55c.  v3:= v8.`com.huawei.hms.scankit.aiscan.common.v.b` @type ^`java.util.List` @kind object;
  #L25f560.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L25f566.  v1:= v1 + 1;
  #L25f56a.  goto L25f51c;
  #L25f56c.  v0:= v8.`com.huawei.hms.scankit.aiscan.common.v.b` @type ^`java.util.List` @kind object;
  #L25f570.  call temp:= `get`(v0, v9) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L25f576.  v9:= temp @kind object;
  #L25f578.  v9:= (`com.huawei.hms.scankit.aiscan.common.i`) v9 @kind object;
  #L25f57c.  return v9 @kind object;
}
procedure `void` `a`(`com.huawei.hms.scankit.aiscan.common.v` v6 @kind this, `int`[] v7 @kind object, `int` v8 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/v;.a:([II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L25f5d8.  if v8 == 0 then goto L25f65c;
  #L25f5dc.  v0:= length @variable v7;
  #L25f5de.  v0:= v0 - v8 @kind int;
  #L25f5e0.  if v0 <= 0 then goto L25f648;
  #L25f5e4.  call temp:= `a`(v6, v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/v;.a:(I)Lcom/huawei/hms/scankit/aiscan/common/i;` @kind direct;
  #L25f5ea.  v1:= temp @kind object;
  #L25f5ec.  v2:= new `int`[v0];
  #L25f5f0.  v3:= 0I;
  #L25f5f2.  call `arraycopy`(v7, v3, v2, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L25f5f8.  v4:= new `com.huawei.hms.scankit.aiscan.common.i`;
  #L25f5fc.  v5:= v6.`com.huawei.hms.scankit.aiscan.common.v.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25f600.  call `<init>`(v4, v5, v2) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/h;[I)V` @kind direct;
  #L25f606.  v2:= 1I;
  #L25f608.  call temp:= `a`(v4, v8, v2) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.a:(II)Lcom/huawei/hms/scankit/aiscan/common/i;` @kind virtual;
  #L25f60e.  v4:= temp @kind object;
  #L25f610.  call temp:= `b`(v4, v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:(Lcom/huawei/hms/scankit/aiscan/common/i;)[Lcom/huawei/hms/scankit/aiscan/common/i;` @kind virtual;
  #L25f616.  v1:= temp @kind object;
  #L25f618.  v1:= v1[v2] @kind object;
  #L25f61c.  call temp:= `a`(v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.a:()[I` @kind virtual;
  #L25f622.  v1:= temp @kind object;
  #L25f624.  v2:= length @variable v1;
  #L25f626.  v8:= v8 - v2 @kind int;
  #L25f628.  v2:= 0I;
  #L25f62a.  if v2 >= v8 then goto L25f63c;
  #L25f62e.  v4:= v0 + v2 @kind int;
  #L25f632.  v7[v4]:= v3;
  #L25f636.  v2:= v2 + 1;
  #L25f63a.  goto L25f62a;
  #L25f63c.  v0:= v0 + v8 @kind int;
  #L25f63e.  v8:= length @variable v1;
  #L25f640.  call `arraycopy`(v1, v3, v7, v0, v8) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L25f646.  return @kind void;
  #L25f648.  v7:= new `java.lang.IllegalArgumentException`;
  #L25f64c.  v8:= "No data bytes provided" @kind object;
  #L25f650.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25f656.  throw v7;
  #L25f658.  v7:= Exception @type ^`java.lang.Exception` @kind object;
  #L25f65a.  throw v7;
  #L25f65c.  v7:= new `java.lang.IllegalArgumentException`;
  #L25f660.  v8:= "No error correction bytes" @kind object;
  #L25f664.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25f66a.  throw v7;
  #L25f66c.  v7:= Exception @type ^`java.lang.Exception` @kind object;
  #L25f66e.  throw v7;
  catch `java.lang.Exception` @[L25f648..L25f64c] goto L25f658;
  catch `java.lang.Exception` @[L25f650..L25f658] goto L25f658;
  catch `java.lang.Exception` @[L25f65c..L25f660] goto L25f66c;
  catch `java.lang.Exception` @[L25f664..L25f66c] goto L25f66c;
}
