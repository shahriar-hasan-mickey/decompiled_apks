record `com.huawei.hms.scankit.aiscan.common.B` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@com.huawei.hms.scankit.aiscan.common.B.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@com.huawei.hms.scankit.aiscan.common.B.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/scankit/aiscan/common/B;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L259e40.  call temp:= `defaultCharset`() @signature `Ljava/nio/charset/Charset;.defaultCharset:()Ljava/nio/charset/Charset;` @kind static;
  #L259e46.  v0:= temp @kind object;
  #L259e48.  call temp:= `name`(v0) @signature `Ljava/nio/charset/Charset;.name:()Ljava/lang/String;` @kind virtual;
  #L259e4e.  v0:= temp @kind object;
  #L259e50.  `@@com.huawei.hms.scankit.aiscan.common.B.a` @type ^`java.lang.String` := v0 @kind object;
  #L259e54.  v1:= "SJIS" @kind object;
  #L259e58.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L259e5e.  v0:= temp;
  #L259e60.  if v0 != 0 then goto L259e7e;
  #L259e64.  v0:= `@@com.huawei.hms.scankit.aiscan.common.B.a` @type ^`java.lang.String` @kind object;
  #L259e68.  v1:= "EUC_JP" @kind object;
  #L259e6c.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L259e72.  v0:= temp;
  #L259e74.  if v0 == 0 then goto L259e7a;
  #L259e78.  goto L259e7e;
  #L259e7a.  v0:= 0I;
  #L259e7c.  goto L259e80;
  #L259e7e.  v0:= 1I;
  #L259e80.  `@@com.huawei.hms.scankit.aiscan.common.B.b` @type ^`boolean` := v0 @kind boolean;
  #L259e84.  return @kind void;
}
procedure `java.lang.Boolean` `a`(`byte`[] v11 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/B;.a:([B)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L259af0.  v0:= length @variable v11;
  #L259af2.  v1:= 0I;
  #L259af4.  v2:= 0I;
  #L259af6.  v3:= 1I;
  #L259af8.  if v2 >= v0 then goto L259bde;
  #L259afc.  v4:= v11[v2] @kind byte;
  #L259b00.  v5:= v4 ^& 128;
  #L259b04.  if v5 != 0 then goto L259b0c;
  #L259b08.  goto L259bda;
  #L259b0c.  v4:= v4 ^& 255;
  #L259b10.  v5:= 160I;
  #L259b14.  v6:= 170I;
  #L259b18.  v7:= 127I;
  #L259b1c.  v8:= 255I;
  #L259b20.  if v4 >= v6 then goto L259b28;
  #L259b24.  if v4 > v5 then goto L259b38;
  #L259b28.  v9:= 248I;
  #L259b2c.  if v4 >= v9 then goto L259b60;
  #L259b30.  v9:= 175I;
  #L259b34.  if v4 <= v9 then goto L259b60;
  #L259b38.  v2:= v2 + 1;
  #L259b3c.  if v2 >= v0 then goto L259be0;
  #L259b40.  v4:= v11[v2] @kind byte;
  #L259b44.  v4:= v4 ^& v8 @kind int;
  #L259b46.  if v4 >= v8 then goto L259be0;
  #L259b4a.  v4:= v11[v2] @kind byte;
  #L259b4e.  v4:= v4 ^& v8 @kind int;
  #L259b50.  if v4 <= v5 then goto L259be0;
  #L259b54.  v4:= v11[v2] @kind byte;
  #L259b58.  v4:= v4 ^& v8 @kind int;
  #L259b5a.  if v4 == v7 then goto L259be0;
  #L259b5e.  goto L259bda;
  #L259b60.  v5:= 63I;
  #L259b64.  v9:= 161I;
  #L259b68.  if v4 >= v9 then goto L259b9c;
  #L259b6c.  v10:= 128I;
  #L259b70.  if v4 <= v10 then goto L259b9c;
  #L259b74.  v2:= v2 + 1;
  #L259b78.  if v2 >= v0 then goto L259be0;
  #L259b7c.  v4:= v11[v2] @kind byte;
  #L259b80.  v4:= v4 ^& v8 @kind int;
  #L259b82.  if v4 >= v8 then goto L259be0;
  #L259b86.  v4:= v11[v2] @kind byte;
  #L259b8a.  v4:= v4 ^& v8 @kind int;
  #L259b8c.  if v4 <= v5 then goto L259be0;
  #L259b90.  v4:= v11[v2] @kind byte;
  #L259b94.  v4:= v4 ^& v8 @kind int;
  #L259b96.  if v4 == v7 then goto L259be0;
  #L259b9a.  goto L259bda;
  #L259b9c.  if v4 >= v8 then goto L259ba8;
  #L259ba0.  v10:= 169I;
  #L259ba4.  if v4 > v10 then goto L259bb4;
  #L259ba8.  if v4 >= v6 then goto L259be0;
  #L259bac.  v6:= 167I;
  #L259bb0.  if v4 <= v6 then goto L259be0;
  #L259bb4.  v2:= v2 + 1;
  #L259bb8.  if v2 >= v0 then goto L259be0;
  #L259bbc.  v4:= v11[v2] @kind byte;
  #L259bc0.  v4:= v4 ^& v8 @kind int;
  #L259bc2.  if v4 >= v9 then goto L259be0;
  #L259bc6.  v4:= v11[v2] @kind byte;
  #L259bca.  v4:= v4 ^& v8 @kind int;
  #L259bcc.  if v4 <= v5 then goto L259be0;
  #L259bd0.  v4:= v11[v2] @kind byte;
  #L259bd4.  v4:= v4 ^& v8 @kind int;
  #L259bd6.  if v4 == v7 then goto L259be0;
  #L259bda.  v2:= v2 + v3 @kind int;
  #L259bdc.  goto L259af6;
  #L259bde.  v1:= 1I;
  #L259be0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L259be6.  v11:= temp @kind object;
  #L259be8.  return v11 @kind object;
}
procedure `java.lang.String` `a`(`byte`[] v18 @kind object, `java.util.Map` v19 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/B;.a:([BLjava/util/Map;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L259cd0.  v0:= v18 @kind object;
  #L259cd4.  v1:= v19 @kind object;
  #L259cd8.  if v1 == 0 then goto L259d02;
  #L259cdc.  v2:= `@@com.huawei.hms.scankit.aiscan.common.d.f` @type ^`com.huawei.hms.scankit.aiscan.common.d` @kind object;
  #L259ce0.  call temp:= `containsKey`(v1, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L259ce6.  v2:= temp;
  #L259ce8.  if v2 == 0 then goto L259d02;
  #L259cec.  v0:= `@@com.huawei.hms.scankit.aiscan.common.d.f` @type ^`com.huawei.hms.scankit.aiscan.common.d` @kind object;
  #L259cf0.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L259cf6.  v0:= temp @kind object;
  #L259cf8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L259cfe.  v0:= temp @kind object;
  #L259d00.  return v0 @kind object;
  #L259d02.  v1:= 15I;
  #L259d06.  v1:= new `int`[v1];
  #L259d0a.  v2:= length @variable v0;
  #L259d0c.  v3:= 0I;
  #L259d0e.  v1[v3]:= v2;
  #L259d12.  v2:= 1I;
  #L259d14.  v1[v2]:= v2;
  #L259d18.  v4:= 2I;
  #L259d1a.  v1[v4]:= v2;
  #L259d1e.  v5:= 3I;
  #L259d20.  v1[v5]:= v2;
  #L259d24.  v6:= length @variable v0;
  #L259d26.  if v6 <= v5 then goto L259d52;
  #L259d2a.  v6:= v0[v3] @kind byte;
  #L259d2e.  v7:= -17I;
  #L259d32.  if v6 != v7 then goto L259d52;
  #L259d36.  v6:= v0[v2] @kind byte;
  #L259d3a.  v7:= -69I;
  #L259d3e.  if v6 != v7 then goto L259d52;
  #L259d42.  v6:= v0[v4] @kind byte;
  #L259d46.  v7:= -65I;
  #L259d4a.  if v6 != v7 then goto L259d52;
  #L259d4e.  v6:= 1I;
  #L259d50.  goto L259d54;
  #L259d52.  v6:= 0I;
  #L259d54.  v7:= 0I;
  #L259d56.  v8:= v1[v3];
  #L259d5a.  if v7 >= v8 then goto L259d96;
  #L259d5e.  v8:= v1[v2];
  #L259d62.  if v8 == v2 then goto L259d76;
  #L259d66.  v8:= v1[v4];
  #L259d6a.  if v8 == v2 then goto L259d76;
  #L259d6e.  v8:= v1[v5];
  #L259d72.  if v8 != v2 then goto L259d96;
  #L259d76.  v8:= v0[v7] @kind byte;
  #L259d7a.  v8:= v8 ^& 255;
  #L259d7e.  call `c`(v8, v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/B;.c:(I[I)V` @kind static;
  #L259d84.  call `b`(v8, v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/B;.b:(I[I)V` @kind static;
  #L259d8a.  call `a`(v8, v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/B;.a:(I[I)V` @kind static;
  #L259d90.  v7:= v7 + 1;
  #L259d94.  goto L259d56;
  #L259d96.  v5:= v1[v5];
  #L259d9a.  if v5 != v2 then goto L259da2;
  #L259d9e.  v5:= 1I;
  #L259da0.  goto L259da4;
  #L259da2.  v5:= 0I;
  #L259da4.  v4:= v1[v4];
  #L259da8.  if v4 != v2 then goto L259db0;
  #L259dac.  v4:= 1I;
  #L259dae.  goto L259db2;
  #L259db0.  v4:= 0I;
  #L259db2.  v7:= v1[v2];
  #L259db6.  if v7 != v2 then goto L259dbe;
  #L259dba.  v7:= 1I;
  #L259dbc.  goto L259dc0;
  #L259dbe.  v7:= 0I;
  #L259dc0.  v2:= 4I;
  #L259dc2.  v8:= v1[v2];
  #L259dc6.  v2:= 8I;
  #L259dca.  v9:= v1[v2];
  #L259dce.  v2:= 5I;
  #L259dd0.  v10:= v1[v2];
  #L259dd4.  v2:= 6I;
  #L259dd6.  v11:= v1[v2];
  #L259dda.  v2:= 7I;
  #L259ddc.  v12:= v1[v2];
  #L259de0.  v2:= 12I;
  #L259de4.  v13:= v1[v2];
  #L259de8.  v2:= 13I;
  #L259dec.  v14:= v1[v2];
  #L259df0.  v2:= 9I;
  #L259df4.  v15:= v1[v2];
  #L259df8.  v2:= 14I;
  #L259dfc.  v16:= v1[v2];
  #L259e00.  v17:= v1[v3];
  #L259e04.  v0:= v18 @kind object;
  #L259e08.  v1:= v5;
  #L259e0a.  v2:= v4;
  #L259e0c.  v3:= v7;
  #L259e0e.  v4:= v8;
  #L259e10.  v5:= v9;
  #L259e12.  v7:= v10;
  #L259e14.  v8:= v11;
  #L259e16.  v9:= v12;
  #L259e18.  v10:= v13;
  #L259e1a.  v11:= v14;
  #L259e1c.  v12:= v15;
  #L259e1e.  v13:= v16;
  #L259e22.  v14:= v17;
  #L259e26.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14) @signature `Lcom/huawei/hms/scankit/aiscan/common/B;.a:([BZZZIIZIIIIIIII)Ljava/lang/String;` @kind static;
  #L259e2c.  v0:= temp @kind object;
  #L259e2e.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`byte`[] v1 @kind object, `boolean` v2 , `boolean` v3 , `boolean` v4 , `int` v5 , `int` v6 , `boolean` v7 , `int` v8 , `int` v9 , `int` v10 , `int` v11 , `int` v12 , `int` v13 , `int` v14 , `int` v15 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/B;.a:([BZZZIIZIIIIIIII)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L259bfc.  v0:= 0I;
  #L259bfe.  if v2 == 0 then goto L259c08;
  #L259c02.  if v5 <= 0 then goto L259c08;
  #L259c06.  v2:= 0I;
  #L259c08.  if v3 == 0 then goto L259c12;
  #L259c0c.  if v6 <= 0 then goto L259c12;
  #L259c10.  v3:= 0I;
  #L259c12.  v5:= "UTF8" @kind object;
  #L259c16.  if v2 == 0 then goto L259c28;
  #L259c1a.  if v7 != 0 then goto L259c26;
  #L259c1e.  v8:= v8 + v9 @kind int;
  #L259c20.  v8:= v8 + v10 @kind int;
  #L259c22.  if v8 <= 0 then goto L259c28;
  #L259c26.  return v5 @kind object;
  #L259c28.  call temp:= `a`(v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/B;.a:([B)Ljava/lang/Boolean;` @kind static;
  #L259c2e.  v1:= temp @kind object;
  #L259c30.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L259c36.  v1:= temp;
  #L259c38.  if v1 == 0 then goto L259c42;
  #L259c3c.  v1:= "GBK" @kind object;
  #L259c40.  return v1 @kind object;
  #L259c42.  v1:= "SJIS" @kind object;
  #L259c46.  if v3 == 0 then goto L259c5e;
  #L259c4a.  v6:= `@@com.huawei.hms.scankit.aiscan.common.B.b` @type ^`boolean` @kind boolean;
  #L259c4e.  if v6 != 0 then goto L259c5c;
  #L259c52.  v6:= 3I;
  #L259c54.  if v11 >= v6 then goto L259c5c;
  #L259c58.  if v12 < v6 then goto L259c5e;
  #L259c5c.  return v1 @kind object;
  #L259c5e.  v6:= "ISO8859_1" @kind object;
  #L259c62.  if v4 == 0 then goto L259c82;
  #L259c66.  if v3 == 0 then goto L259c82;
  #L259c6a.  v2:= 2I;
  #L259c6c.  if v11 != v2 then goto L259c74;
  #L259c70.  if v13 == v2 then goto L259c80;
  #L259c74.  v14:= v14 * 10;
  #L259c78.  if v14 < v15 then goto L259c7e;
  #L259c7c.  goto L259c80;
  #L259c7e.  v1:= v6 @kind object;
  #L259c80.  return v1 @kind object;
  #L259c82.  if v4 == 0 then goto L259c90;
  #L259c86.  v14:= v14 * 10;
  #L259c8a.  if v14 >= v15 then goto L259c90;
  #L259c8e.  return v6 @kind object;
  #L259c90.  if v3 == 0 then goto L259c96;
  #L259c94.  return v1 @kind object;
  #L259c96.  if v2 == 0 then goto L259c9c;
  #L259c9a.  return v5 @kind object;
  #L259c9c.  if v2 != 0 then goto L259cba;
  #L259ca0.  v1:= `@@com.huawei.hms.scankit.aiscan.common.B.a` @type ^`java.lang.String` @kind object;
  #L259ca4.  v2:= "UTF-8" @kind object;
  #L259ca8.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L259cae.  v1:= temp;
  #L259cb0.  if v1 == 0 then goto L259cba;
  #L259cb4.  v1:= "GB2312" @kind object;
  #L259cb8.  return v1 @kind object;
  #L259cba.  v1:= `@@com.huawei.hms.scankit.aiscan.common.B.a` @type ^`java.lang.String` @kind object;
  #L259cbe.  return v1 @kind object;
}
procedure `void` `a`(`int` v2 , `int`[] v3 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/B;.a:(I[I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L259e98.  v0:= 1I;
  #L259e9a.  v1:= v3[v0];
  #L259e9e.  if v1 != v0 then goto L259ee8;
  #L259ea2.  v1:= 127I;
  #L259ea6.  if v2 <= v1 then goto L259eba;
  #L259eaa.  v1:= 160I;
  #L259eae.  if v2 >= v1 then goto L259eba;
  #L259eb2.  v2:= 0I;
  #L259eb4.  v3[v0]:= v2;
  #L259eb8.  goto L259ee8;
  #L259eba.  v1:= 159I;
  #L259ebe.  if v2 <= v1 then goto L259ee8;
  #L259ec2.  v1:= 192I;
  #L259ec6.  if v2 < v1 then goto L259eda;
  #L259eca.  v1:= 215I;
  #L259ece.  if v2 == v1 then goto L259eda;
  #L259ed2.  v1:= 247I;
  #L259ed6.  if v2 != v1 then goto L259ee8;
  #L259eda.  v2:= 14I;
  #L259ede.  v1:= v3[v2];
  #L259ee2.  v1:= v1 + v0 @kind int;
  #L259ee4.  v3[v2]:= v1;
  #L259ee8.  return @kind void;
}
procedure `void` `b`(`int` v7 , `int`[] v8 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/B;.b:(I[I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L259efc.  v0:= 2I;
  #L259efe.  v1:= v8[v0];
  #L259f02.  v2:= 1I;
  #L259f04.  if v1 != v2 then goto L259fea;
  #L259f08.  v1:= 8I;
  #L259f0c.  v3:= v8[v1];
  #L259f10.  v4:= 127I;
  #L259f14.  v5:= 0I;
  #L259f16.  if v3 <= 0 then goto L259f42;
  #L259f1a.  v3:= 64I;
  #L259f1e.  if v7 < v3 then goto L259f3c;
  #L259f22.  if v7 == v4 then goto L259f3c;
  #L259f26.  v3:= 252I;
  #L259f2a.  if v7 <= v3 then goto L259f30;
  #L259f2e.  goto L259f3c;
  #L259f30.  v7:= v8[v1];
  #L259f34.  v7:= v7 - v2 @kind int;
  #L259f36.  v8[v1]:= v7;
  #L259f3a.  goto L259fea;
  #L259f3c.  v8[v0]:= v5;
  #L259f40.  goto L259fea;
  #L259f42.  v3:= 128I;
  #L259f46.  if v7 == v3 then goto L259fe6;
  #L259f4a.  v3:= 160I;
  #L259f4e.  if v7 == v3 then goto L259fe6;
  #L259f52.  v6:= 239I;
  #L259f56.  if v7 <= v6 then goto L259f5c;
  #L259f5a.  goto L259fe6;
  #L259f5c.  v0:= 11I;
  #L259f60.  v6:= 10I;
  #L259f64.  if v7 <= v3 then goto L259fa6;
  #L259f68.  v3:= 224I;
  #L259f6c.  if v7 >= v3 then goto L259fa6;
  #L259f70.  v7:= 9I;
  #L259f74.  v1:= v8[v7];
  #L259f78.  v1:= v1 + v2 @kind int;
  #L259f7a.  v8[v7]:= v1;
  #L259f7e.  v8[v0]:= v5;
  #L259f82.  v7:= v8[v6];
  #L259f86.  v7:= v7 + v2 @kind int;
  #L259f88.  v8[v6]:= v7;
  #L259f8c.  v7:= v8[v6];
  #L259f90.  v0:= 12I;
  #L259f94.  v1:= v8[v0];
  #L259f98.  if v7 <= v1 then goto L259fea;
  #L259f9c.  v7:= v8[v6];
  #L259fa0.  v8[v0]:= v7;
  #L259fa4.  goto L259fea;
  #L259fa6.  if v7 <= v4 then goto L259fdc;
  #L259faa.  v7:= v8[v1];
  #L259fae.  v7:= v7 + v2 @kind int;
  #L259fb0.  v8[v1]:= v7;
  #L259fb4.  v8[v6]:= v5;
  #L259fb8.  v7:= v8[v0];
  #L259fbc.  v7:= v7 + v2 @kind int;
  #L259fbe.  v8[v0]:= v7;
  #L259fc2.  v7:= v8[v0];
  #L259fc6.  v1:= 13I;
  #L259fca.  v2:= v8[v1];
  #L259fce.  if v7 <= v2 then goto L259fea;
  #L259fd2.  v7:= v8[v0];
  #L259fd6.  v8[v1]:= v7;
  #L259fda.  goto L259fea;
  #L259fdc.  v8[v6]:= v5;
  #L259fe0.  v8[v0]:= v5;
  #L259fe4.  goto L259fea;
  #L259fe6.  v8[v0]:= v5;
  #L259fea.  return @kind void;
}
procedure `void` `c`(`int` v5 , `int`[] v6 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/B;.c:(I[I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L259ffc.  v0:= 3I;
  #L259ffe.  v1:= v6[v0];
  #L25a002.  v2:= 1I;
  #L25a004.  if v1 != v2 then goto L25a0a8;
  #L25a008.  v1:= 4I;
  #L25a00a.  v3:= v6[v1];
  #L25a00e.  v4:= 0I;
  #L25a010.  if v3 <= 0 then goto L25a02e;
  #L25a014.  v5:= v5 ^& 128;
  #L25a018.  if v5 != 0 then goto L25a022;
  #L25a01c.  v6[v0]:= v4;
  #L25a020.  goto L25a0a8;
  #L25a022.  v5:= v6[v1];
  #L25a026.  v5:= v5 - v2 @kind int;
  #L25a028.  v6[v1]:= v5;
  #L25a02c.  goto L25a0a8;
  #L25a02e.  v3:= v5 ^& 128;
  #L25a032.  if v3 == 0 then goto L25a0a8;
  #L25a036.  v3:= v5 ^& 64;
  #L25a03a.  if v3 != 0 then goto L25a044;
  #L25a03e.  v6[v0]:= v4;
  #L25a042.  goto L25a0a8;
  #L25a044.  v3:= v6[v1];
  #L25a048.  v3:= v3 + v2 @kind int;
  #L25a04a.  v6[v1]:= v3;
  #L25a04e.  v3:= v5 ^& 32;
  #L25a052.  if v3 != 0 then goto L25a064;
  #L25a056.  v5:= 5I;
  #L25a058.  v0:= v6[v5];
  #L25a05c.  v0:= v0 + v2 @kind int;
  #L25a05e.  v6[v5]:= v0;
  #L25a062.  goto L25a0a8;
  #L25a064.  v3:= v6[v1];
  #L25a068.  v3:= v3 + v2 @kind int;
  #L25a06a.  v6[v1]:= v3;
  #L25a06e.  v3:= v5 ^& 16;
  #L25a072.  if v3 != 0 then goto L25a084;
  #L25a076.  v5:= 6I;
  #L25a078.  v0:= v6[v5];
  #L25a07c.  v0:= v0 + v2 @kind int;
  #L25a07e.  v6[v5]:= v0;
  #L25a082.  goto L25a0a8;
  #L25a084.  v3:= v6[v1];
  #L25a088.  v3:= v3 + v2 @kind int;
  #L25a08a.  v6[v1]:= v3;
  #L25a08e.  v5:= v5 ^& 8;
  #L25a092.  if v5 != 0 then goto L25a0a4;
  #L25a096.  v5:= 7I;
  #L25a098.  v0:= v6[v5];
  #L25a09c.  v0:= v0 + v2 @kind int;
  #L25a09e.  v6[v5]:= v0;
  #L25a0a2.  goto L25a0a8;
  #L25a0a4.  v6[v0]:= v4;
  #L25a0a8.  return @kind void;
}
