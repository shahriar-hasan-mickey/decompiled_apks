record `com.huawei.hms.scankit.aiscan.common.i` @kind class @AccessFlag FINAL {
  `com.huawei.hms.scankit.aiscan.common.h` `com.huawei.hms.scankit.aiscan.common.i.a` @AccessFlag PRIVATE_FINAL;
  `int`[] `com.huawei.hms.scankit.aiscan.common.i.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.i` v4 @kind this, `com.huawei.hms.scankit.aiscan.common.h` v5 @kind object, `int`[] v6 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/h;[I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L25ca48.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25ca4e.  v0:= length @variable v6;
  #L25ca50.  if v0 == 0 then goto L25caaa;
  #L25ca54.  v4.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` := v5 @kind object;
  #L25ca58.  v5:= length @variable v6;
  #L25ca5a.  v0:= 1I;
  #L25ca5c.  if v5 <= v0 then goto L25caa4;
  #L25ca60.  v1:= 0I;
  #L25ca62.  v2:= v6[v1];
  #L25ca66.  if v2 != 0 then goto L25caa4;
  #L25ca6a.  v2:= 1I;
  #L25ca6c.  if v2 >= v5 then goto L25ca7e;
  #L25ca70.  v3:= v6[v2];
  #L25ca74.  if v3 != 0 then goto L25ca7e;
  #L25ca78.  v2:= v2 + 1;
  #L25ca7c.  goto L25ca6c;
  #L25ca7e.  if v2 != v5 then goto L25ca90;
  #L25ca82.  v5:= new `int`[v0];
  #L25ca86.  v5[v1]:= v1;
  #L25ca8a.  v4.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] := v5 @kind object;
  #L25ca8e.  goto L25caa8;
  #L25ca90.  v5:= v5 - v2 @kind int;
  #L25ca92.  v5:= new `int`[v5];
  #L25ca96.  v4.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] := v5 @kind object;
  #L25ca9a.  v0:= length @variable v5;
  #L25ca9c.  call `arraycopy`(v6, v2, v5, v1, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L25caa2.  goto L25caa8;
  #L25caa4.  v4.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] := v6 @kind object;
  #L25caa8.  return @kind void;
  #L25caaa.  v5:= new `java.lang.IllegalArgumentException`;
  #L25caae.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L25cab4.  throw v5;
  #L25cab6.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L25cab8.  throw v5;
  catch `java.lang.Exception` @[L25caaa..L25cab6] goto L25cab6;
}
procedure `int` `a`(`com.huawei.hms.scankit.aiscan.common.i` v4 @kind this, `int` v5 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.a:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L25c898.  v0:= 0I;
  #L25c89a.  if v5 != 0 then goto L25c8a8;
  #L25c89e.  call temp:= `b`(v4, v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:(I)I` @kind virtual;
  #L25c8a4.  v5:= temp;
  #L25c8a6.  return v5;
  #L25c8a8.  v1:= 1I;
  #L25c8aa.  if v5 != v1 then goto L25c8ce;
  #L25c8ae.  v5:= v4.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c8b2.  v1:= length @variable v5;
  #L25c8b4.  v2:= 0I;
  #L25c8b6.  if v0 >= v1 then goto L25c8cc;
  #L25c8ba.  v3:= v5[v0];
  #L25c8be.  call temp:= `a`(v2, v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.a:(II)I` @kind static;
  #L25c8c4.  v2:= temp;
  #L25c8c6.  v0:= v0 + 1;
  #L25c8ca.  goto L25c8b6;
  #L25c8cc.  return v2;
  #L25c8ce.  v2:= v4.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c8d2.  v0:= v2[v0];
  #L25c8d6.  v2:= length @variable v2;
  #L25c8d8.  if v1 >= v2 then goto L25c8fe;
  #L25c8dc.  v3:= v4.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c8e0.  call temp:= `c`(v3, v5, v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.c:(II)I` @kind virtual;
  #L25c8e6.  v0:= temp;
  #L25c8e8.  v3:= v4.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c8ec.  v3:= v3[v1];
  #L25c8f0.  call temp:= `a`(v0, v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.a:(II)I` @kind static;
  #L25c8f6.  v0:= temp;
  #L25c8f8.  v1:= v1 + 1;
  #L25c8fc.  goto L25c8d8;
  #L25c8fe.  return v0;
}
procedure `com.huawei.hms.scankit.aiscan.common.i` `a`(`com.huawei.hms.scankit.aiscan.common.i` v4 @kind this, `int` v5 , `int` v6 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.a:(II)Lcom/huawei/hms/scankit/aiscan/common/i;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L25c58c.  if v5 < 0 then goto L25c5e2;
  #L25c590.  if v6 != 0 then goto L25c5a2;
  #L25c594.  v5:= v4.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c598.  call temp:= `d`(v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.d:()Lcom/huawei/hms/scankit/aiscan/common/i;` @kind virtual;
  #L25c59e.  v5:= temp @kind object;
  #L25c5a0.  return v5 @kind object;
  #L25c5a2.  v0:= v4.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c5a6.  v0:= length @variable v0;
  #L25c5a8.  v5:= v5 + v0 @kind int;
  #L25c5aa.  v5:= new `int`[v5];
  #L25c5ae.  v1:= 0I;
  #L25c5b0.  if v1 >= v0 then goto L25c5d2;
  #L25c5b4.  v2:= v4.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c5b8.  v3:= v4.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c5bc.  v3:= v3[v1];
  #L25c5c0.  call temp:= `c`(v2, v3, v6) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.c:(II)I` @kind virtual;
  #L25c5c6.  v2:= temp;
  #L25c5c8.  v5[v1]:= v2;
  #L25c5cc.  v1:= v1 + 1;
  #L25c5d0.  goto L25c5b0;
  #L25c5d2.  v6:= new `com.huawei.hms.scankit.aiscan.common.i`;
  #L25c5d6.  v0:= v4.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c5da.  call `<init>`(v6, v0, v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/h;[I)V` @kind direct;
  #L25c5e0.  return v6 @kind object;
  #L25c5e2.  v5:= new `java.lang.IllegalArgumentException`;
  #L25c5e6.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L25c5ec.  throw v5;
  #L25c5ee.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L25c5f0.  throw v5;
  catch `java.lang.Exception` @[L25c5e2..L25c5ee] goto L25c5ee;
}
procedure `com.huawei.hms.scankit.aiscan.common.i` `a`(`com.huawei.hms.scankit.aiscan.common.i` v7 @kind this, `com.huawei.hms.scankit.aiscan.common.i` v8 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.a:(Lcom/huawei/hms/scankit/aiscan/common/i;)Lcom/huawei/hms/scankit/aiscan/common/i;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L25c4bc.  v0:= v7.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c4c0.  v1:= v8.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c4c4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L25c4ca.  v0:= temp;
  #L25c4cc.  if v0 == 0 then goto L25c54e;
  #L25c4d0.  call temp:= `c`(v7) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.c:()Z` @kind virtual;
  #L25c4d6.  v0:= temp;
  #L25c4d8.  if v0 == 0 then goto L25c4de;
  #L25c4dc.  return v8 @kind object;
  #L25c4de.  call temp:= `c`(v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.c:()Z` @kind virtual;
  #L25c4e4.  v0:= temp;
  #L25c4e6.  if v0 == 0 then goto L25c4ec;
  #L25c4ea.  return v7 @kind object;
  #L25c4ec.  v0:= v7.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c4f0.  v8:= v8.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c4f4.  v1:= length @variable v0;
  #L25c4f6.  v2:= length @variable v8;
  #L25c4f8.  if v1 <= v2 then goto L25c4fe;
  #L25c4fc.  goto L25c504;
  #L25c4fe.  v6:= v0 @kind object;
  #L25c500.  v0:= v8 @kind object;
  #L25c502.  v8:= v6 @kind object;
  #L25c504.  v1:= length @variable v0;
  #L25c506.  v1:= new `int`[v1];
  #L25c50a.  v2:= length @variable v0;
  #L25c50c.  v3:= length @variable v8;
  #L25c50e.  v2:= v2 - v3 @kind int;
  #L25c510.  v3:= 0I;
  #L25c512.  call `arraycopy`(v0, v3, v1, v3, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L25c518.  v3:= v2;
  #L25c51a.  v4:= length @variable v0;
  #L25c51c.  if v3 >= v4 then goto L25c53e;
  #L25c520.  v4:= v3 - v2 @kind int;
  #L25c524.  v4:= v8[v4];
  #L25c528.  v5:= v0[v3];
  #L25c52c.  call temp:= `a`(v4, v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.a:(II)I` @kind static;
  #L25c532.  v4:= temp;
  #L25c534.  v1[v3]:= v4;
  #L25c538.  v3:= v3 + 1;
  #L25c53c.  goto L25c51a;
  #L25c53e.  v8:= new `com.huawei.hms.scankit.aiscan.common.i`;
  #L25c542.  v0:= v7.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c546.  call `<init>`(v8, v0, v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/h;[I)V` @kind direct;
  #L25c54c.  return v8 @kind object;
  #L25c54e.  v8:= new `java.lang.IllegalArgumentException`;
  #L25c552.  v0:= "GenericGFPolys do not have same GenericGF field" @kind object;
  #L25c556.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25c55c.  throw v8;
  #L25c55e.  v8:= Exception @type ^`java.lang.Exception` @kind object;
  #L25c560.  throw v8;
  catch `java.lang.Exception` @[L25c54e..L25c552] goto L25c55e;
  catch `java.lang.Exception` @[L25c556..L25c55e] goto L25c55e;
}
procedure `int`[] `a`(`com.huawei.hms.scankit.aiscan.common.i` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.a:()[I` @AccessFlag  {
    temp;
    v0;

  #L25c950.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c954.  return v0 @kind object;
}
procedure `int` `b`(`com.huawei.hms.scankit.aiscan.common.i` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:()I` @AccessFlag  {
    temp;
    v0;

  #L25c910.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c914.  v0:= length @variable v0;
  #L25c916.  v0:= v0 + -1;
  #L25c91a.  return v0;
}
procedure `int` `b`(`com.huawei.hms.scankit.aiscan.common.i` v2 @kind this, `int` v3 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L25c92c.  v0:= v2.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c930.  v1:= length @variable v0;
  #L25c932.  v1:= v1 + -1;
  #L25c936.  v1:= v1 - v3 @kind int;
  #L25c938.  v3:= v0[v1];
  #L25c93c.  return v3;
}
procedure `com.huawei.hms.scankit.aiscan.common.i`[] `b`(`com.huawei.hms.scankit.aiscan.common.i` v7 @kind this, `com.huawei.hms.scankit.aiscan.common.i` v8 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:(Lcom/huawei/hms/scankit/aiscan/common/i;)[Lcom/huawei/hms/scankit/aiscan/common/i;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L25c760.  v0:= v7.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c764.  v1:= v8.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c768.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L25c76e.  v0:= temp;
  #L25c770.  if v0 == 0 then goto L25c846;
  #L25c774.  call temp:= `c`(v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.c:()Z` @kind virtual;
  #L25c77a.  v0:= temp;
  #L25c77c.  if v0 != 0 then goto L25c832;
  #L25c780.  v0:= v7.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c784.  call temp:= `d`(v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.d:()Lcom/huawei/hms/scankit/aiscan/common/i;` @kind virtual;
  #L25c78a.  v0:= temp @kind object;
  #L25c78c.  call temp:= `b`(v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:()I` @kind virtual;
  #L25c792.  v1:= temp;
  #L25c794.  call temp:= `b`(v8, v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:(I)I` @kind virtual;
  #L25c79a.  v1:= temp;
  #L25c79c.  v2:= v7.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c7a0.  call temp:= `b`(v2, v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.b:(I)I` @kind virtual;
  #L25c7a6.  v1:= temp;
  #L25c7a8.  v2:= v7 @kind object;
  #L25c7aa.  call temp:= `b`(v2) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:()I` @kind virtual;
  #L25c7b0.  v3:= temp;
  #L25c7b2.  call temp:= `b`(v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:()I` @kind virtual;
  #L25c7b8.  v4:= temp;
  #L25c7ba.  if v3 < v4 then goto L25c81e;
  #L25c7be.  call temp:= `c`(v2) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.c:()Z` @kind virtual;
  #L25c7c4.  v3:= temp;
  #L25c7c6.  if v3 != 0 then goto L25c81e;
  #L25c7ca.  call temp:= `b`(v2) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:()I` @kind virtual;
  #L25c7d0.  v3:= temp;
  #L25c7d2.  call temp:= `b`(v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:()I` @kind virtual;
  #L25c7d8.  v4:= temp;
  #L25c7da.  v3:= v3 - v4 @kind int;
  #L25c7dc.  v4:= v7.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c7e0.  call temp:= `b`(v2) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:()I` @kind virtual;
  #L25c7e6.  v5:= temp;
  #L25c7e8.  call temp:= `b`(v2, v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:(I)I` @kind virtual;
  #L25c7ee.  v5:= temp;
  #L25c7f0.  call temp:= `c`(v4, v5, v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.c:(II)I` @kind virtual;
  #L25c7f6.  v4:= temp;
  #L25c7f8.  call temp:= `a`(v8, v3, v4) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.a:(II)Lcom/huawei/hms/scankit/aiscan/common/i;` @kind virtual;
  #L25c7fe.  v5:= temp @kind object;
  #L25c800.  v6:= v7.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c804.  call temp:= `b`(v6, v3, v4) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.b:(II)Lcom/huawei/hms/scankit/aiscan/common/i;` @kind virtual;
  #L25c80a.  v3:= temp @kind object;
  #L25c80c.  call temp:= `a`(v0, v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.a:(Lcom/huawei/hms/scankit/aiscan/common/i;)Lcom/huawei/hms/scankit/aiscan/common/i;` @kind virtual;
  #L25c812.  v0:= temp @kind object;
  #L25c814.  call temp:= `a`(v2, v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.a:(Lcom/huawei/hms/scankit/aiscan/common/i;)Lcom/huawei/hms/scankit/aiscan/common/i;` @kind virtual;
  #L25c81a.  v2:= temp @kind object;
  #L25c81c.  goto L25c7aa;
  #L25c81e.  v8:= 2I;
  #L25c820.  v8:= new `com.huawei.hms.scankit.aiscan.common.i`[v8];
  #L25c824.  v1:= 0I;
  #L25c826.  v8[v1]:= v0 @kind object;
  #L25c82a.  v0:= 1I;
  #L25c82c.  v8[v0]:= v2 @kind object;
  #L25c830.  return v8 @kind object;
  #L25c832.  v8:= new `java.lang.IllegalArgumentException`;
  #L25c836.  v0:= "Divide by 0" @kind object;
  #L25c83a.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25c840.  throw v8;
  #L25c842.  v8:= Exception @type ^`java.lang.Exception` @kind object;
  #L25c844.  throw v8;
  #L25c846.  v8:= new `java.lang.IllegalArgumentException`;
  #L25c84a.  v0:= "GenericGFPolys do not have same GenericGF field" @kind object;
  #L25c84e.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25c854.  throw v8;
  #L25c856.  v8:= Exception @type ^`java.lang.Exception` @kind object;
  #L25c858.  throw v8;
  catch `java.lang.Exception` @[L25c832..L25c836] goto L25c842;
  catch `java.lang.Exception` @[L25c83a..L25c842] goto L25c842;
  catch `java.lang.Exception` @[L25c846..L25c84a] goto L25c856;
  catch `java.lang.Exception` @[L25c84e..L25c856] goto L25c856;
}
procedure `com.huawei.hms.scankit.aiscan.common.i` `c`(`com.huawei.hms.scankit.aiscan.common.i` v5 @kind this, `int` v6 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.c:(I)Lcom/huawei/hms/scankit/aiscan/common/i;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L25c6f8.  if v6 != 0 then goto L25c70a;
  #L25c6fc.  v6:= v5.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c700.  call temp:= `d`(v6) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.d:()Lcom/huawei/hms/scankit/aiscan/common/i;` @kind virtual;
  #L25c706.  v6:= temp @kind object;
  #L25c708.  return v6 @kind object;
  #L25c70a.  v0:= 1I;
  #L25c70c.  if v6 != v0 then goto L25c712;
  #L25c710.  return v5 @kind object;
  #L25c712.  v0:= v5.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c716.  v0:= length @variable v0;
  #L25c718.  v1:= new `int`[v0];
  #L25c71c.  v2:= 0I;
  #L25c71e.  if v2 >= v0 then goto L25c740;
  #L25c722.  v3:= v5.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c726.  v4:= v5.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c72a.  v4:= v4[v2];
  #L25c72e.  call temp:= `c`(v3, v4, v6) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.c:(II)I` @kind virtual;
  #L25c734.  v3:= temp;
  #L25c736.  v1[v2]:= v3;
  #L25c73a.  v2:= v2 + 1;
  #L25c73e.  goto L25c71e;
  #L25c740.  v6:= new `com.huawei.hms.scankit.aiscan.common.i`;
  #L25c744.  v0:= v5.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c748.  call `<init>`(v6, v0, v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/h;[I)V` @kind direct;
  #L25c74e.  return v6 @kind object;
}
procedure `com.huawei.hms.scankit.aiscan.common.i` `c`(`com.huawei.hms.scankit.aiscan.common.i` v12 @kind this, `com.huawei.hms.scankit.aiscan.common.i` v13 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.c:(Lcom/huawei/hms/scankit/aiscan/common/i;)Lcom/huawei/hms/scankit/aiscan/common/i;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L25c614.  v0:= v12.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c618.  v1:= v13.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c61c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L25c622.  v0:= temp;
  #L25c624.  if v0 == 0 then goto L25c6ba;
  #L25c628.  call temp:= `c`(v12) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.c:()Z` @kind virtual;
  #L25c62e.  v0:= temp;
  #L25c630.  if v0 != 0 then goto L25c6ac;
  #L25c634.  call temp:= `c`(v13) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.c:()Z` @kind virtual;
  #L25c63a.  v0:= temp;
  #L25c63c.  if v0 == 0 then goto L25c642;
  #L25c640.  goto L25c6ac;
  #L25c642.  v0:= v12.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c646.  v1:= length @variable v0;
  #L25c648.  v13:= v13.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c64c.  v2:= length @variable v13;
  #L25c64e.  v3:= v1 + v2 @kind int;
  #L25c652.  v3:= v3 + -1;
  #L25c656.  v3:= new `int`[v3];
  #L25c65a.  v4:= 0I;
  #L25c65c.  v5:= 0I;
  #L25c65e.  if v5 >= v1 then goto L25c69c;
  #L25c662.  v6:= v0[v5];
  #L25c666.  v7:= 0I;
  #L25c668.  if v7 >= v2 then goto L25c696;
  #L25c66c.  v8:= v5 + v7 @kind int;
  #L25c670.  v9:= v3[v8];
  #L25c674.  v10:= v12.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c678.  v11:= v13[v7];
  #L25c67c.  call temp:= `c`(v10, v6, v11) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.c:(II)I` @kind virtual;
  #L25c682.  v10:= temp;
  #L25c684.  call temp:= `a`(v9, v10) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.a:(II)I` @kind static;
  #L25c68a.  v9:= temp;
  #L25c68c.  v3[v8]:= v9;
  #L25c690.  v7:= v7 + 1;
  #L25c694.  goto L25c668;
  #L25c696.  v5:= v5 + 1;
  #L25c69a.  goto L25c65e;
  #L25c69c.  v13:= new `com.huawei.hms.scankit.aiscan.common.i`;
  #L25c6a0.  v0:= v12.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c6a4.  call `<init>`(v13, v0, v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/h;[I)V` @kind direct;
  #L25c6aa.  return v13 @kind object;
  #L25c6ac.  v13:= v12.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c6b0.  call temp:= `d`(v13) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.d:()Lcom/huawei/hms/scankit/aiscan/common/i;` @kind virtual;
  #L25c6b6.  v13:= temp @kind object;
  #L25c6b8.  return v13 @kind object;
  #L25c6ba.  v13:= new `java.lang.IllegalArgumentException`;
  #L25c6be.  v0:= "GenericGFPolys do not have same GenericGF field" @kind object;
  #L25c6c2.  call `<init>`(v13, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25c6c8.  throw v13;
  #L25c6ca.  v13:= Exception @type ^`java.lang.Exception` @kind object;
  #L25c6cc.  throw v13;
  catch `java.lang.Exception` @[L25c6ba..L25c6be] goto L25c6ca;
  catch `java.lang.Exception` @[L25c6c2..L25c6ca] goto L25c6ca;
}
procedure `boolean` `c`(`com.huawei.hms.scankit.aiscan.common.i` v2 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.c:()Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L25c498.  v0:= v2.`com.huawei.hms.scankit.aiscan.common.i.b` @type ^`int`[] @kind object;
  #L25c49c.  v1:= 0I;
  #L25c49e.  v0:= v0[v1];
  #L25c4a2.  if v0 != 0 then goto L25c4a8;
  #L25c4a6.  v1:= 1I;
  #L25c4a8.  return v1;
}
procedure `java.lang.String` `toString`(`com.huawei.hms.scankit.aiscan.common.i` v5 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L25c968.  v0:= new `java.lang.StringBuilder`;
  #L25c96c.  call temp:= `b`(v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:()I` @kind virtual;
  #L25c972.  v1:= temp;
  #L25c974.  v1:= v1 * 8;
  #L25c978.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L25c97e.  call temp:= `b`(v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:()I` @kind virtual;
  #L25c984.  v1:= temp;
  #L25c986.  if v1 < 0 then goto L25ca2e;
  #L25c98a.  call temp:= `b`(v5, v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/i;.b:(I)I` @kind virtual;
  #L25c990.  v2:= temp;
  #L25c992.  if v2 == 0 then goto L25ca28;
  #L25c996.  if v2 >= 0 then goto L25c9a8;
  #L25c99a.  v3:= " - " @kind object;
  #L25c99e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25c9a4.  v2:= -v2 @kind int;
  #L25c9a6.  goto L25c9be;
  #L25c9a8.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L25c9ae.  v3:= temp;
  #L25c9b0.  if v3 <= 0 then goto L25c9be;
  #L25c9b4.  v3:= " + " @kind object;
  #L25c9b8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25c9be.  v3:= 1I;
  #L25c9c0.  if v1 == 0 then goto L25c9c8;
  #L25c9c4.  if v2 == v3 then goto L25ca04;
  #L25c9c8.  v4:= v5.`com.huawei.hms.scankit.aiscan.common.i.a` @type ^`com.huawei.hms.scankit.aiscan.common.h` @kind object;
  #L25c9cc.  call temp:= `c`(v4, v2) @signature `Lcom/huawei/hms/scankit/aiscan/common/h;.c:(I)I` @kind virtual;
  #L25c9d2.  v2:= temp;
  #L25c9d4.  if v2 != 0 then goto L25c9e4;
  #L25c9d8.  v2:= 49I;
  #L25c9dc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L25c9e2.  goto L25ca04;
  #L25c9e4.  if v2 != v3 then goto L25c9f4;
  #L25c9e8.  v2:= 97I;
  #L25c9ec.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L25c9f2.  goto L25ca04;
  #L25c9f4.  v4:= "a^" @kind object;
  #L25c9f8.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25c9fe.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L25ca04.  if v1 == 0 then goto L25ca28;
  #L25ca08.  if v1 != v3 then goto L25ca18;
  #L25ca0c.  v2:= 120I;
  #L25ca10.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L25ca16.  goto L25ca28;
  #L25ca18.  v2:= "x^" @kind object;
  #L25ca1c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25ca22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L25ca28.  v1:= v1 + -1;
  #L25ca2c.  goto L25c986;
  #L25ca2e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L25ca34.  v0:= temp @kind object;
  #L25ca36.  return v0 @kind object;
}
