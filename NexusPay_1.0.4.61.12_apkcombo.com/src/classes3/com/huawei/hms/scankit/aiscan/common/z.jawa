record `com.huawei.hms.scankit.aiscan.common.z` @kind class @AccessFlag PUBLIC extends `android.os.Parcelable` @kind interface {
  `float` `com.huawei.hms.scankit.aiscan.common.z.a` @AccessFlag PRIVATE_FINAL;
  `float` `com.huawei.hms.scankit.aiscan.common.z.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.aiscan.common.z.c` @AccessFlag PRIVATE;
  `boolean` `com.huawei.hms.scankit.aiscan.common.z.d` @AccessFlag PRIVATE;
}
global `android.os.Parcelable$Creator` `@@com.huawei.hms.scankit.aiscan.common.z.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L260034.  v0:= new `com.huawei.hms.scankit.aiscan.common.y`;
  #L260038.  call `<init>`(v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/y;.<init>:()V` @kind direct;
  #L26003e.  `@@com.huawei.hms.scankit.aiscan.common.z.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L260042.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.z` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L260090.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L260096.  v0:= 0I;
  #L260098.  v1.`com.huawei.hms.scankit.aiscan.common.z.c` @type ^`int` := v0;
  #L26009c.  v1.`com.huawei.hms.scankit.aiscan.common.z.d` @type ^`boolean` := v0 @kind boolean;
  #L2600a0.  v1.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float` := v2;
  #L2600a4.  v1.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float` := v3;
  #L2600a8.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.z` v1 @kind this, `float` v2 , `float` v3 , `int` v4 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FFI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2600ec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2600f2.  v0:= 0I;
  #L2600f4.  v1.`com.huawei.hms.scankit.aiscan.common.z.c` @type ^`int` := v0;
  #L2600f8.  v1.`com.huawei.hms.scankit.aiscan.common.z.d` @type ^`boolean` := v0 @kind boolean;
  #L2600fc.  v1.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float` := v2;
  #L260100.  v1.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float` := v3;
  #L260104.  v1.`com.huawei.hms.scankit.aiscan.common.z.c` @type ^`int` := v4;
  #L260108.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.z` v1 @kind this, `float` v2 , `float` v3 , `boolean` v4 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FFZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2600bc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2600c2.  v0:= 0I;
  #L2600c4.  v1.`com.huawei.hms.scankit.aiscan.common.z.c` @type ^`int` := v0;
  #L2600c8.  v1.`com.huawei.hms.scankit.aiscan.common.z.d` @type ^`boolean` := v0 @kind boolean;
  #L2600cc.  v1.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float` := v2;
  #L2600d0.  v1.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float` := v3;
  #L2600d4.  v1.`com.huawei.hms.scankit.aiscan.common.z.d` @type ^`boolean` := v4 @kind boolean;
  #L2600d8.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.z` v1 @kind this, `android.os.Parcel` v2 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(Landroid/os/Parcel;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L260054.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26005a.  v0:= 0I;
  #L26005c.  v1.`com.huawei.hms.scankit.aiscan.common.z.c` @type ^`int` := v0;
  #L260060.  v1.`com.huawei.hms.scankit.aiscan.common.z.d` @type ^`boolean` := v0 @kind boolean;
  #L260064.  call temp:= `readFloat`(v2) @signature `Landroid/os/Parcel;.readFloat:()F` @kind virtual;
  #L26006a.  v0:= temp;
  #L26006c.  v1.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float` := v0;
  #L260070.  call temp:= `readFloat`(v2) @signature `Landroid/os/Parcel;.readFloat:()F` @kind virtual;
  #L260076.  v2:= temp;
  #L260078.  v1.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float` := v2;
  #L26007c.  return @kind void;
}
procedure `float` `a`(`com.huawei.hms.scankit.aiscan.common.z` v2 @kind object, `com.huawei.hms.scankit.aiscan.common.z` v3 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.a:(Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/z;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L25fe64.  v0:= v2.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float`;
  #L25fe68.  v2:= v2.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float`;
  #L25fe6c.  v1:= v3.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float`;
  #L25fe70.  v3:= v3.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float`;
  #L25fe74.  call temp:= `a`(v0, v2, v1, v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/n;.a:(FFFF)F` @kind static;
  #L25fe7a.  v2:= temp;
  #L25fe7c.  return v2;
}
procedure `float` `a`(`com.huawei.hms.scankit.aiscan.common.z` v3 @kind object, `com.huawei.hms.scankit.aiscan.common.z` v4 @kind object, `com.huawei.hms.scankit.aiscan.common.z` v5 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.a:(Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/z;)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L25fe90.  v0:= v4.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float`;
  #L25fe94.  v4:= v4.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float`;
  #L25fe98.  v1:= v5.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float`;
  #L25fe9c.  v1:= v1 - v0 @kind float;
  #L25fe9e.  v2:= v3.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float`;
  #L25fea2.  v2:= v2 - v4 @kind float;
  #L25fea4.  v1:= v1 * v2 @kind float;
  #L25fea8.  v5:= v5.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float`;
  #L25feac.  v5:= v5 - v4 @kind float;
  #L25feae.  v3:= v3.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float`;
  #L25feb2.  v3:= v3 - v0 @kind float;
  #L25feb4.  v5:= v5 * v3 @kind float;
  #L25feb8.  v1:= v1 - v5 @kind float;
  #L25feba.  return v1;
}
procedure `void` `a`(`com.huawei.hms.scankit.aiscan.common.z`[] v17 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.a:([Lcom/huawei/hms/scankit/aiscan/common/z;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L26011c.  v0:= 0I;
  #L26011e.  v1:= v17[v0] @kind object;
  #L260122.  v2:= 1I;
  #L260124.  v3:= v17[v2] @kind object;
  #L260128.  call temp:= `a`(v1, v3) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.a:(Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/z;)F` @kind static;
  #L26012e.  v1:= temp;
  #L260130.  v3:= v17[v2] @kind object;
  #L260134.  v4:= 2I;
  #L260136.  v5:= v17[v4] @kind object;
  #L26013a.  call temp:= `a`(v3, v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.a:(Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/z;)F` @kind static;
  #L260140.  v3:= temp;
  #L260142.  v5:= v17[v0] @kind object;
  #L260146.  v6:= v17[v4] @kind object;
  #L26014a.  call temp:= `a`(v5, v6) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.a:(Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/z;)F` @kind static;
  #L260150.  v5:= temp;
  #L260152.  call temp:= `a`(v3, v1, v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.a:(FFF)[I` @kind static;
  #L260158.  v6:= temp @kind object;
  #L26015a.  v7:= v6[v0];
  #L26015e.  v8:= v6[v2];
  #L260162.  v6:= v6[v4];
  #L260166.  v9:= v17[v7] @kind object;
  #L26016a.  v10:= v17[v8] @kind object;
  #L26016e.  v11:= v17[v6] @kind object;
  #L260172.  v12:= 3I;
  #L260174.  v12:= new `float`[v12];
  #L260178.  v12[v0]:= v3;
  #L26017c.  v12[v2]:= v5;
  #L260180.  v12[v4]:= v1;
  #L260184.  v1:= `@@com.huawei.hms.scankit.p._a.f` @type ^`int`;
  #L260188.  v1:= v1 %% v4 @kind int;
  #L26018a.  if v1 != 0 then goto L2601b8;
  #L26018e.  v1:= v12[v8];
  #L260192.  v3:= v12[v7];
  #L260196.  v1:= v1 / v3 @kind float;
  #L260198.  v12:= (`double`) v1 @kind f2d;
  #L26019a.  v14:= 1.1D;
  #L2601a4.  v1:= dcmpg(v12, v14);
  #L2601a8.  if v1 >= 0 then goto L2601b8;
  #L2601ac.  v9:= v17[v7] @kind object;
  #L2601b0.  v10:= v17[v8] @kind object;
  #L2601b4.  v11:= v17[v6] @kind object;
  #L2601b8.  call temp:= `a`(v10, v9, v11) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.a:(Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/z;)F` @kind static;
  #L2601be.  v1:= temp;
  #L2601c0.  v3:= 0I;
  #L2601c2.  v1:= fcmpg(v1, v3);
  #L2601c6.  if v1 >= 0 then goto L2601d4;
  #L2601ca.  v16:= v11 @kind object;
  #L2601ce.  v11:= v10 @kind object;
  #L2601d0.  v10:= v16 @kind object;
  #L2601d4.  v17[v0]:= v10 @kind object;
  #L2601d8.  v17[v2]:= v9 @kind object;
  #L2601dc.  v17[v4]:= v11 @kind object;
  #L2601e0.  return @kind void;
}
procedure `int`[] `a`(`float` v5 , `float` v6 , `float` v7 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.a:(FFF)[I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L25ff58.  v0:= 1I;
  #L25ff5a.  v1:= 0I;
  #L25ff5c.  v2:= 2I;
  #L25ff5e.  v3:= fcmpl(v5, v6);
  #L25ff62.  if v3 < 0 then goto L25ff84;
  #L25ff66.  v4:= fcmpl(v5, v7);
  #L25ff6a.  if v4 < 0 then goto L25ff84;
  #L25ff6e.  v5:= fcmpl(v6, v7);
  #L25ff72.  if v5 <= 0 then goto L25ff7c;
  #L25ff76.  v5:= 0I;
  #L25ff78.  v6:= 2I;
  #L25ff7a.  goto L25ffae;
  #L25ff7c.  v5:= 0I;
  #L25ff7e.  v6:= 1I;
  #L25ff80.  v7:= 2I;
  #L25ff82.  goto L25ffb8;
  #L25ff84.  v4:= fcmpl(v7, v5);
  #L25ff88.  if v4 < 0 then goto L25ffa2;
  #L25ff8c.  v6:= fcmpl(v7, v6);
  #L25ff90.  if v6 < 0 then goto L25ffa2;
  #L25ff94.  v5:= 1I;
  #L25ff96.  if v3 <= 0 then goto L25ff9e;
  #L25ff9a.  v6:= 0I;
  #L25ff9c.  goto L25ff80;
  #L25ff9e.  v6:= 2I;
  #L25ffa0.  goto L25ffb6;
  #L25ffa2.  v5:= fcmpl(v5, v5);
  #L25ffa6.  if v5 <= 0 then goto L25ffb2;
  #L25ffaa.  v5:= 2I;
  #L25ffac.  v6:= 0I;
  #L25ffae.  v7:= 1I;
  #L25ffb0.  goto L25ffb8;
  #L25ffb2.  v5:= 2I;
  #L25ffb4.  v6:= 1I;
  #L25ffb6.  v7:= 0I;
  #L25ffb8.  v3:= 3I;
  #L25ffba.  v3:= new `int`[v3];
  #L25ffbe.  v3[v1]:= v5;
  #L25ffc2.  v3[v0]:= v6;
  #L25ffc6.  v3[v2]:= v7;
  #L25ffca.  return v3 @kind object;
}
procedure `int` `a`(`com.huawei.hms.scankit.aiscan.common.z` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25fefc.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.z.c` @type ^`int`;
  #L25ff00.  return v0;
}
procedure `float` `b`(`com.huawei.hms.scankit.aiscan.common.z` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.b:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L25fecc.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float`;
  #L25fed0.  return v0;
}
procedure `float` `c`(`com.huawei.hms.scankit.aiscan.common.z` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.c:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L25fee4.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float`;
  #L25fee8.  return v0;
}
procedure `boolean` `d`(`com.huawei.hms.scankit.aiscan.common.z` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25fde8.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.z.d` @type ^`boolean` @kind boolean;
  #L25fdec.  return v0;
}
procedure `int` `describeContents`(`com.huawei.hms.scankit.aiscan.common.z` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25ff14.  v0:= 0I;
  #L25ff16.  return v0;
}
procedure `boolean` `equals`(`com.huawei.hms.scankit.aiscan.common.z` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L25fe00.  v0:= instanceof @variable v7 @type ^`com.huawei.hms.scankit.aiscan.common.z` @kind boolean;
  #L25fe04.  v1:= 0I;
  #L25fe06.  if v0 == 0 then goto L25fe52;
  #L25fe0a.  v7:= (`com.huawei.hms.scankit.aiscan.common.z`) v7 @kind object;
  #L25fe0e.  v0:= v6.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float`;
  #L25fe12.  v2:= v7.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float`;
  #L25fe16.  v0:= v0 - v2 @kind float;
  #L25fe18.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L25fe1e.  v0:= temp;
  #L25fe20.  v2:= (`double`) v0 @kind f2d;
  #L25fe22.  v4:= 1.0E-4D;
  #L25fe2c.  v0:= dcmpg(v2, v4);
  #L25fe30.  if v0 >= 0 then goto L25fe52;
  #L25fe34.  v0:= v6.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float`;
  #L25fe38.  v7:= v7.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float`;
  #L25fe3c.  v0:= v0 - v7 @kind float;
  #L25fe3e.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L25fe44.  v7:= temp;
  #L25fe46.  v2:= (`double`) v7 @kind f2d;
  #L25fe48.  v7:= dcmpg(v2, v4);
  #L25fe4c.  if v7 >= 0 then goto L25fe52;
  #L25fe50.  v1:= 1I;
  #L25fe52.  return v1;
}
procedure `int` `hashCode`(`com.huawei.hms.scankit.aiscan.common.z` v2 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L25ff28.  v0:= v2.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float`;
  #L25ff2c.  call temp:= `floatToIntBits`(v0) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L25ff32.  v0:= temp;
  #L25ff34.  v0:= v0 * 31;
  #L25ff38.  v1:= v2.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float`;
  #L25ff3c.  call temp:= `floatToIntBits`(v1) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L25ff42.  v1:= temp;
  #L25ff44.  v0:= v0 + v1 @kind int;
  #L25ff46.  return v0;
}
procedure `java.lang.String` `toString`(`com.huawei.hms.scankit.aiscan.common.z` v2 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L25ffdc.  v0:= new `java.lang.StringBuilder`;
  #L25ffe0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L25ffe6.  v1:= "(" @kind object;
  #L25ffea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25fff0.  v1:= v2.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float`;
  #L25fff4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L25fffa.  v1:= 44I;
  #L25fffe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L260004.  v1:= v2.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float`;
  #L260008.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L26000e.  v1:= 41I;
  #L260012.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L260018.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L26001e.  v0:= temp @kind object;
  #L260020.  return v0 @kind object;
}
procedure `void` `writeToParcel`(`com.huawei.hms.scankit.aiscan.common.z` v0 @kind this, `android.os.Parcel` v1 @kind object, `int` v2 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;

  #L2601f4.  v2:= v0.`com.huawei.hms.scankit.aiscan.common.z.a` @type ^`float`;
  #L2601f8.  call `writeFloat`(v1, v2) @signature `Landroid/os/Parcel;.writeFloat:(F)V` @kind virtual;
  #L2601fe.  v2:= v0.`com.huawei.hms.scankit.aiscan.common.z.b` @type ^`float`;
  #L260202.  call `writeFloat`(v1, v2) @signature `Landroid/os/Parcel;.writeFloat:(F)V` @kind virtual;
  #L260208.  return @kind void;
}
