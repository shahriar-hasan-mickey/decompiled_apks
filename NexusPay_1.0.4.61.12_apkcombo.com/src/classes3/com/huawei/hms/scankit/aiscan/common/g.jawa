record `com.huawei.hms.scankit.aiscan.common.g` @kind class @AccessFlag PUBLIC {
  `com.huawei.hms.scankit.p.y` `com.huawei.hms.scankit.aiscan.common.g.a` @AccessFlag PRIVATE_FINAL;
  `com.huawei.hms.scankit.aiscan.common.z`[] `com.huawei.hms.scankit.aiscan.common.g.b` @AccessFlag PRIVATE_FINAL;
  `com.huawei.hms.scankit.aiscan.common.z`[] `com.huawei.hms.scankit.aiscan.common.g.c` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.aiscan.common.g.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.g` v1 @kind this, `com.huawei.hms.scankit.p.y` v2 @kind object, `com.huawei.hms.scankit.aiscan.common.z`[] v3 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/g;.<init>:(Lcom/huawei/hms/scankit/p/y;[Lcom/huawei/hms/scankit/aiscan/common/z;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L25c0c4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25c0ca.  v0:= 0I;
  #L25c0cc.  v1.`com.huawei.hms.scankit.aiscan.common.g.c` @type ^`com.huawei.hms.scankit.aiscan.common.z`[] := v0 @kind object;
  #L25c0d0.  v1.`com.huawei.hms.scankit.aiscan.common.g.a` @type ^`com.huawei.hms.scankit.p.y` := v2 @kind object;
  #L25c0d4.  v1.`com.huawei.hms.scankit.aiscan.common.g.b` @type ^`com.huawei.hms.scankit.aiscan.common.z`[] := v3 @kind object;
  #L25c0d8.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.aiscan.common.g` v1 @kind this, `com.huawei.hms.scankit.p.y` v2 @kind object, `com.huawei.hms.scankit.aiscan.common.z`[] v3 @kind object, `com.huawei.hms.scankit.aiscan.common.z`[] v4 @kind object, `float` v5 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/g;.<init>:(Lcom/huawei/hms/scankit/p/y;[Lcom/huawei/hms/scankit/aiscan/common/z;[Lcom/huawei/hms/scankit/aiscan/common/z;F)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L25c0ec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25c0f2.  v0:= 0I;
  #L25c0f4.  v1.`com.huawei.hms.scankit.aiscan.common.g.c` @type ^`com.huawei.hms.scankit.aiscan.common.z`[] := v0 @kind object;
  #L25c0f8.  v1.`com.huawei.hms.scankit.aiscan.common.g.a` @type ^`com.huawei.hms.scankit.p.y` := v2 @kind object;
  #L25c0fc.  v1.`com.huawei.hms.scankit.aiscan.common.g.b` @type ^`com.huawei.hms.scankit.aiscan.common.z`[] := v3 @kind object;
  #L25c100.  v1.`com.huawei.hms.scankit.aiscan.common.g.c` @type ^`com.huawei.hms.scankit.aiscan.common.z`[] := v4 @kind object;
  #L25c104.  v1.`com.huawei.hms.scankit.aiscan.common.g.d` @type ^`float` := v5;
  #L25c108.  return @kind void;
}
procedure `com.huawei.hms.scankit.p.y` `a`(`com.huawei.hms.scankit.aiscan.common.g` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/g;.a:()Lcom/huawei/hms/scankit/p/y;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L25c094.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.g.a` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L25c098.  return v0 @kind object;
}
procedure `com.huawei.hms.scankit.aiscan.common.z`[] `b`(`com.huawei.hms.scankit.aiscan.common.g` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/g;.b:()[Lcom/huawei/hms/scankit/aiscan/common/z;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25c064.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.g.c` @type ^`com.huawei.hms.scankit.aiscan.common.z`[] @kind object;
  #L25c068.  return v0 @kind object;
}
procedure `float` `c`(`com.huawei.hms.scankit.aiscan.common.g` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/g;.c:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25c0ac.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.g.d` @type ^`float`;
  #L25c0b0.  return v0;
}
procedure `com.huawei.hms.scankit.aiscan.common.z`[] `d`(`com.huawei.hms.scankit.aiscan.common.g` v1 @kind this) @signature `Lcom/huawei/hms/scankit/aiscan/common/g;.d:()[Lcom/huawei/hms/scankit/aiscan/common/z;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L25c07c.  v0:= v1.`com.huawei.hms.scankit.aiscan.common.g.b` @type ^`com.huawei.hms.scankit.aiscan.common.z`[] @kind object;
  #L25c080.  return v0 @kind object;
}
