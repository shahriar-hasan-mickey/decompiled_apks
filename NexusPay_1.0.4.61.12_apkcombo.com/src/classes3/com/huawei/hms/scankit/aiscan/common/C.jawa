record `com.huawei.hms.scankit.aiscan.common.C` @kind class @AccessFlag PUBLIC {
}
global `float` `@@com.huawei.hms.scankit.aiscan.common.C.a` @AccessFlag PRIVATE_STATIC;
global `float` `@@com.huawei.hms.scankit.aiscan.common.C.b` @AccessFlag PRIVATE_STATIC;
global `float` `@@com.huawei.hms.scankit.aiscan.common.C.c` @AccessFlag PRIVATE_STATIC;
global `float` `@@com.huawei.hms.scankit.aiscan.common.C.d` @AccessFlag PRIVATE_STATIC;
global `float` `@@com.huawei.hms.scankit.aiscan.common.C.e` @AccessFlag PRIVATE_STATIC;
global `java.util.HashMap` `@@com.huawei.hms.scankit.aiscan.common.C.f` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/scankit/aiscan/common/C;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L25a278.  v0:= new `java.util.HashMap`;
  #L25a27c.  v1:= 255I;
  #L25a280.  call `<init>`(v0, v1) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L25a286.  `@@com.huawei.hms.scankit.aiscan.common.C.f` @type ^`java.util.HashMap` := v0 @kind object;
  #L25a28a.  return @kind void;
}
procedure `int` `a`(`int` v3 , `float` v4 ) @signature `Lcom/huawei/hms/scankit/aiscan/common/C;.a:(IF)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L25a158.  v0:= `@@com.huawei.hms.scankit.aiscan.common.C.f` @type ^`java.util.HashMap` @kind object;
  #L25a15c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L25a162.  v1:= temp @kind object;
  #L25a164.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L25a16a.  v0:= temp;
  #L25a16c.  if v0 != 0 then goto L25a1c2;
  #L25a170.  v0:= (`float`) v3 @kind i2f;
  #L25a172.  v0:= v0 / v4 @kind float;
  #L25a174.  v1:= `@@com.huawei.hms.scankit.aiscan.common.C.a` @type ^`float`;
  #L25a178.  v1:= v1 * v0 @kind float;
  #L25a17c.  v2:= `@@com.huawei.hms.scankit.aiscan.common.C.b` @type ^`float`;
  #L25a180.  v1:= v1 + v2 @kind float;
  #L25a182.  v1:= v1 * v0 @kind float;
  #L25a186.  v4:= v4 * v1 @kind float;
  #L25a18a.  v1:= `@@com.huawei.hms.scankit.aiscan.common.C.c` @type ^`float`;
  #L25a18e.  v1:= v1 * v0 @kind float;
  #L25a192.  v2:= `@@com.huawei.hms.scankit.aiscan.common.C.d` @type ^`float`;
  #L25a196.  v1:= v1 + v2 @kind float;
  #L25a198.  v0:= v0 * v1 @kind float;
  #L25a19c.  v1:= `@@com.huawei.hms.scankit.aiscan.common.C.e` @type ^`float`;
  #L25a1a0.  v0:= v0 + v1 @kind float;
  #L25a1a2.  v4:= v4 / v0 @kind float;
  #L25a1a4.  v0:= `@@com.huawei.hms.scankit.aiscan.common.C.f` @type ^`java.util.HashMap` @kind object;
  #L25a1a8.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L25a1ae.  v3:= temp @kind object;
  #L25a1b0.  v4:= (`int`) v4 @kind f2i;
  #L25a1b2.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L25a1b8.  v1:= temp @kind object;
  #L25a1ba.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L25a1c0.  return v4;
  #L25a1c2.  v4:= `@@com.huawei.hms.scankit.aiscan.common.C.f` @type ^`java.util.HashMap` @kind object;
  #L25a1c6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L25a1cc.  v3:= temp @kind object;
  #L25a1ce.  call temp:= `get`(v4, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L25a1d4.  v3:= temp @kind object;
  #L25a1d6.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L25a1da.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L25a1e0.  v3:= temp;
  #L25a1e2.  return v3;
}
procedure `com.huawei.hms.scankit.aiscan.common.m` `a`(`com.huawei.hms.scankit.aiscan.common.m` v11 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/C;.a:(Lcom/huawei/hms/scankit/aiscan/common/m;)Lcom/huawei/hms/scankit/aiscan/common/m;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L25a0bc.  call temp:= `b`(v11) @signature `Lcom/huawei/hms/scankit/aiscan/common/C;.b:(Lcom/huawei/hms/scankit/aiscan/common/m;)I` @kind static;
  #L25a0c2.  v0:= temp;
  #L25a0c4.  call temp:= `c`(v11) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.c:()I` @kind virtual;
  #L25a0ca.  v7:= temp;
  #L25a0cc.  call temp:= `a`(v11) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.a:()I` @kind virtual;
  #L25a0d2.  v8:= temp;
  #L25a0d4.  call temp:= `b`(v11) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.b:()[B` @kind virtual;
  #L25a0da.  v11:= temp @kind object;
  #L25a0dc.  v1:= v8 * v7 @kind int;
  #L25a0e0.  v2:= new `byte`[v1];
  #L25a0e4.  v1:= 0I;
  #L25a0e6.  v3:= 0I;
  #L25a0e8.  v4:= 255I;
  #L25a0ec.  if v3 >= v8 then goto L25a120;
  #L25a0f0.  v5:= 0I;
  #L25a0f2.  if v5 >= v7 then goto L25a11a;
  #L25a0f6.  v6:= v3 * v7 @kind int;
  #L25a0fa.  v6:= v6 + v5 @kind int;
  #L25a0fc.  v9:= v11[v6] @kind byte;
  #L25a100.  v9:= v9 ^& v4 @kind int;
  #L25a102.  v10:= (`float`) v0 @kind i2f;
  #L25a104.  call temp:= `a`(v9, v10) @signature `Lcom/huawei/hms/scankit/aiscan/common/C;.a:(IF)I` @kind static;
  #L25a10a.  v9:= temp;
  #L25a10c.  v9:= v9 ^& v4 @kind int;
  #L25a10e.  v9:= (`byte`) v9 @kind i2b;
  #L25a110.  v2[v6]:= v9 @kind byte;
  #L25a114.  v5:= v5 + 1;
  #L25a118.  goto L25a0f2;
  #L25a11a.  v3:= v3 + 1;
  #L25a11e.  goto L25a0e8;
  #L25a120.  v11:= new `java.util.HashMap`;
  #L25a124.  call `<init>`(v11, v4) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L25a12a.  `@@com.huawei.hms.scankit.aiscan.common.C.f` @type ^`java.util.HashMap` := v11 @kind object;
  #L25a12e.  v11:= new `com.huawei.hms.scankit.aiscan.common.r`;
  #L25a132.  v5:= 0I;
  #L25a134.  v6:= 0I;
  #L25a136.  v9:= 0I;
  #L25a138.  v1:= v11 @kind object;
  #L25a13a.  v3:= v7;
  #L25a13c.  v4:= v8;
  #L25a13e.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/huawei/hms/scankit/aiscan/common/r;.<init>:([BIIIIIIZ)V` @kind direct;
  #L25a144.  return v11 @kind object;
}
procedure `int` `b`(`com.huawei.hms.scankit.aiscan.common.m` v8 @kind object) @signature `Lcom/huawei/hms/scankit/aiscan/common/C;.b:(Lcom/huawei/hms/scankit/aiscan/common/m;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L25a1f4.  call temp:= `b`(v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.b:()[B` @kind virtual;
  #L25a1fa.  v0:= temp @kind object;
  #L25a1fc.  if v0 != 0 then goto L25a204;
  #L25a200.  v8:= 1I;
  #L25a202.  return v8;
  #L25a204.  v1:= 0L;
  #L25a208.  call temp:= `c`(v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.c:()I` @kind virtual;
  #L25a20e.  v3:= temp;
  #L25a210.  call temp:= `a`(v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.a:()I` @kind virtual;
  #L25a216.  v8:= temp;
  #L25a218.  v4:= v8 / 4;
  #L25a21c.  v5:= v8 * 3;
  #L25a220.  v5:= v5 / 4;
  #L25a224.  if v4 >= v5 then goto L25a256;
  #L25a228.  v5:= v3 / 4;
  #L25a22c.  v6:= v3 * 3;
  #L25a230.  v6:= v6 / 4;
  #L25a234.  if v5 >= v6 then goto L25a250;
  #L25a238.  v6:= v4 * v3 @kind int;
  #L25a23c.  v6:= v6 + v5 @kind int;
  #L25a23e.  v6:= v0[v6] @kind byte;
  #L25a242.  v6:= v6 ^& 255;
  #L25a246.  v6:= (`long`) v6 @kind i2l;
  #L25a248.  v1:= v1 + v6 @kind long;
  #L25a24a.  v5:= v5 + 1;
  #L25a24e.  goto L25a22c;
  #L25a250.  v4:= v4 + 1;
  #L25a254.  goto L25a21c;
  #L25a256.  v8:= length @variable v0;
  #L25a258.  v3:= (`long`) v8 @kind i2l;
  #L25a25a.  v1:= v1 / v3 @kind long;
  #L25a25c.  v3:= 4L;
  #L25a260.  v1:= v1 * v3 @kind long;
  #L25a264.  v8:= (`int`) v1 @kind l2i;
  #L25a266.  return v8;
}
