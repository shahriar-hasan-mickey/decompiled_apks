record `com.huawei.hms.scankit.drawable.a` @kind class @AccessFlag PUBLIC extends `android.view.animation.Interpolator` @kind interface {
  `float` `com.huawei.hms.scankit.drawable.a.d` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.drawable.a.e` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.drawable.a.f` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.scankit.drawable.a.g` @AccessFlag PRIVATE;
}
global `java.math.BigDecimal` `@@com.huawei.hms.scankit.drawable.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigDecimal` `@@com.huawei.hms.scankit.drawable.a.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `float` `@@com.huawei.hms.scankit.drawable.a.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/scankit/drawable/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2614cc.  v0:= new `java.math.BigDecimal`;
  #L2614d0.  v1:= 1.0F;
  #L2614d4.  call temp:= `toString`(v1) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L2614da.  v1:= temp @kind object;
  #L2614dc.  call `<init>`(v0, v1) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2614e2.  `@@com.huawei.hms.scankit.drawable.a.a` @type ^`java.math.BigDecimal` := v0 @kind object;
  #L2614e6.  v0:= new `java.math.BigDecimal`;
  #L2614ea.  v1:= 4000L;
  #L2614ee.  call temp:= `toString`(v1) @signature `Ljava/lang/Long;.toString:(J)Ljava/lang/String;` @kind static;
  #L2614f4.  v1:= temp @kind object;
  #L2614f6.  call `<init>`(v0, v1) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2614fc.  `@@com.huawei.hms.scankit.drawable.a.b` @type ^`java.math.BigDecimal` := v0 @kind object;
  #L261500.  v1:= `@@com.huawei.hms.scankit.drawable.a.a` @type ^`java.math.BigDecimal` @kind object;
  #L261504.  v2:= 20I;
  #L261508.  v3:= 4I;
  #L26150a.  call temp:= `divide`(v1, v0, v2, v3) @signature `Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;II)Ljava/math/BigDecimal;` @kind virtual;
  #L261510.  v0:= temp @kind object;
  #L261512.  call temp:= `floatValue`(v0) @signature `Ljava/math/BigDecimal;.floatValue:()F` @kind virtual;
  #L261518.  v0:= temp;
  #L26151a.  `@@com.huawei.hms.scankit.drawable.a.c` @type ^`float` := v0;
  #L26151e.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.drawable.a` v1 @kind this, `float` v2 , `float` v3 , `float` v4 , `float` v5 ) @signature `Lcom/huawei/hms/scankit/drawable/a;.<init>:(FFFF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L261530.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L261536.  v0:= 0I;
  #L261538.  v1.`com.huawei.hms.scankit.drawable.a.d` @type ^`float` := v0;
  #L26153c.  v1.`com.huawei.hms.scankit.drawable.a.e` @type ^`float` := v0;
  #L261540.  v1.`com.huawei.hms.scankit.drawable.a.f` @type ^`float` := v0;
  #L261544.  v1.`com.huawei.hms.scankit.drawable.a.g` @type ^`float` := v0;
  #L261548.  v1.`com.huawei.hms.scankit.drawable.a.d` @type ^`float` := v2;
  #L26154c.  v1.`com.huawei.hms.scankit.drawable.a.e` @type ^`float` := v3;
  #L261550.  v1.`com.huawei.hms.scankit.drawable.a.f` @type ^`float` := v4;
  #L261554.  v1.`com.huawei.hms.scankit.drawable.a.g` @type ^`float` := v5;
  #L261558.  return @kind void;
}
procedure `long` `a`(`com.huawei.hms.scankit.drawable.a` v9 @kind this, `float` v10 ) @signature `Lcom/huawei/hms/scankit/drawable/a;.a:(F)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L261470.  v0:= 0L;
  #L261474.  v2:= 4000L;
  #L261478.  v4:= lcmp(v0, v2);
  #L26147c.  if v4 > 0 then goto L2614b8;
  #L261480.  v4:= v0 + v2 @kind long;
  #L261484.  v6:= 1I;
  #L261486.  v4:= v4 ^>> v6 @kind long;
  #L261488.  v6:= `@@com.huawei.hms.scankit.drawable.a.c` @type ^`float`;
  #L26148c.  v7:= (`float`) v4 @kind l2f;
  #L26148e.  v6:= v6 * v7 @kind float;
  #L261492.  call temp:= `b`(v9, v6) @signature `Lcom/huawei/hms/scankit/drawable/a;.b:(F)F` @kind direct;
  #L261498.  v6:= temp;
  #L26149a.  v7:= 1L;
  #L26149e.  v6:= fcmpg(v6, v10);
  #L2614a2.  if v6 >= 0 then goto L2614ac;
  #L2614a6.  v0:= v4 + v7 @kind long;
  #L2614aa.  goto L261478;
  #L2614ac.  if v6 > 0 then goto L2614b2;
  #L2614b0.  return v4 @kind wide;
  #L2614b2.  v2:= v4 - v7 @kind long;
  #L2614b6.  goto L261478;
  #L2614b8.  return v0 @kind wide;
}
procedure `java.lang.String` `a`(`com.huawei.hms.scankit.drawable.a` v2 @kind this) @signature `Lcom/huawei/hms/scankit/drawable/a;.a:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2613dc.  v0:= new `java.lang.StringBuilder`;
  #L2613e0.  v1:= "CubicBezierInterpolator" @kind object;
  #L2613e4.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2613ea.  v1:= "  mControlPoint1x = " @kind object;
  #L2613ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2613f4.  v1:= v2.`com.huawei.hms.scankit.drawable.a.d` @type ^`float`;
  #L2613f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L2613fe.  v1:= ", mControlPoint1y = " @kind object;
  #L261402.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261408.  v1:= v2.`com.huawei.hms.scankit.drawable.a.e` @type ^`float`;
  #L26140c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L261412.  v1:= ", mControlPoint2x = " @kind object;
  #L261416.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26141c.  v1:= v2.`com.huawei.hms.scankit.drawable.a.f` @type ^`float`;
  #L261420.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L261426.  v1:= ", mControlPoint2y = " @kind object;
  #L26142a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261430.  v1:= v2.`com.huawei.hms.scankit.drawable.a.g` @type ^`float`;
  #L261434.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L26143a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L261440.  v0:= temp @kind object;
  #L261442.  return v0 @kind object;
}
procedure `float` `b`(`com.huawei.hms.scankit.drawable.a` v3 @kind this, `float` v4 ) @signature `Lcom/huawei/hms/scankit/drawable/a;.b:(F)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L261318.  v0:= 1.0F;
  #L26131c.  v0:= v0 - v4 @kind float;
  #L26131e.  v1:= 3.0F;
  #L261322.  v1:= v1 * v0 @kind float;
  #L261326.  v0:= v0 * v1 @kind float;
  #L26132a.  v0:= v0 * v4 @kind float;
  #L26132e.  v2:= v3.`com.huawei.hms.scankit.drawable.a.d` @type ^`float`;
  #L261332.  v0:= v0 * v2 @kind float;
  #L261336.  v1:= v1 * v4 @kind float;
  #L26133a.  v1:= v1 * v4 @kind float;
  #L26133e.  v2:= v3.`com.huawei.hms.scankit.drawable.a.f` @type ^`float`;
  #L261342.  v1:= v1 * v2 @kind float;
  #L261346.  v0:= v0 + v1 @kind float;
  #L261348.  v1:= v4 * v4 @kind float;
  #L26134c.  v1:= v1 * v4 @kind float;
  #L261350.  v0:= v0 + v1 @kind float;
  #L261352.  return v0;
}
procedure `float` `c`(`com.huawei.hms.scankit.drawable.a` v3 @kind this, `float` v4 ) @signature `Lcom/huawei/hms/scankit/drawable/a;.c:(F)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L261364.  v0:= 1.0F;
  #L261368.  v0:= v0 - v4 @kind float;
  #L26136a.  v1:= 3.0F;
  #L26136e.  v1:= v1 * v0 @kind float;
  #L261372.  v0:= v0 * v1 @kind float;
  #L261376.  v0:= v0 * v4 @kind float;
  #L26137a.  v2:= v3.`com.huawei.hms.scankit.drawable.a.e` @type ^`float`;
  #L26137e.  v0:= v0 * v2 @kind float;
  #L261382.  v1:= v1 * v4 @kind float;
  #L261386.  v1:= v1 * v4 @kind float;
  #L26138a.  v2:= v3.`com.huawei.hms.scankit.drawable.a.g` @type ^`float`;
  #L26138e.  v1:= v1 * v2 @kind float;
  #L261392.  v0:= v0 + v1 @kind float;
  #L261394.  v1:= v4 * v4 @kind float;
  #L261398.  v1:= v1 * v4 @kind float;
  #L26139c.  v0:= v0 + v1 @kind float;
  #L26139e.  return v0;
}
procedure `float` `getInterpolation`(`com.huawei.hms.scankit.drawable.a` v3 @kind this, `float` v4 ) @signature `Lcom/huawei/hms/scankit/drawable/a;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2613b0.  v0:= `@@com.huawei.hms.scankit.drawable.a.c` @type ^`float`;
  #L2613b4.  call temp:= `a`(v3, v4) @signature `Lcom/huawei/hms/scankit/drawable/a;.a:(F)J` @kind direct;
  #L2613ba.  v1:= temp @kind wide;
  #L2613bc.  v4:= (`float`) v1 @kind l2f;
  #L2613be.  v0:= v0 * v4 @kind float;
  #L2613c2.  call temp:= `c`(v3, v0) @signature `Lcom/huawei/hms/scankit/drawable/a;.c:(F)F` @kind direct;
  #L2613c8.  v4:= temp;
  #L2613ca.  return v4;
}
procedure `java.lang.String` `toString`(`com.huawei.hms.scankit.drawable.a` v1 @kind this) @signature `Lcom/huawei/hms/scankit/drawable/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L261454.  call temp:= `a`(v1) @signature `Lcom/huawei/hms/scankit/drawable/a;.a:()Ljava/lang/String;` @kind direct;
  #L26145a.  v0:= temp @kind object;
  #L26145c.  return v0 @kind object;
}
