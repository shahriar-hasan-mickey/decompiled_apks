record `com.huawei.hms.scankit.p.tc` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.huawei.hms.scankit.p.Pb` @kind interface {
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.tc` v0 @kind this) @signature `Lcom/huawei/hms/scankit/p/tc;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29c4bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29c4c2.  return @kind void;
}
procedure `int` `a`(`boolean`[] v7 @kind object, `int` v8 , `int`[] v9 @kind object, `boolean` v10 ) @signature `Lcom/huawei/hms/scankit/p/tc;.a:([ZI[IZ)I` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L29c3c8.  v0:= length @variable v9;
  #L29c3ca.  v1:= 0I;
  #L29c3cc.  v2:= 0I;
  #L29c3ce.  v3:= 0I;
  #L29c3d0.  if v2 >= v0 then goto L29c3fa;
  #L29c3d4.  v4:= v9[v2];
  #L29c3d8.  v5:= 0I;
  #L29c3da.  if v5 >= v4 then goto L29c3ee;
  #L29c3de.  v6:= v8 + 1;
  #L29c3e2.  v7[v8]:= v10 @kind boolean;
  #L29c3e6.  v5:= v5 + 1;
  #L29c3ea.  v8:= v6;
  #L29c3ec.  goto L29c3da;
  #L29c3ee.  v3:= v3 + v4 @kind int;
  #L29c3f0.  v10:= v10 ^~ 1;
  #L29c3f4.  v2:= v2 + 1;
  #L29c3f8.  goto L29c3d0;
  #L29c3fa.  return v3;
}
procedure `com.huawei.hms.scankit.p.y` `a`(`boolean`[] v5 @kind object, `int` v6 , `int` v7 , `int` v8 ) @signature `Lcom/huawei/hms/scankit/p/tc;.a:([ZIII)Lcom/huawei/hms/scankit/p/y;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L29c270.  v0:= length @variable v5;
  #L29c272.  v8:= v8 + v0 @kind int;
  #L29c274.  call temp:= `max`(v6, v8) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L29c27a.  v6:= temp;
  #L29c27c.  v1:= 1I;
  #L29c27e.  call temp:= `max`(v1, v7) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L29c284.  v7:= temp;
  #L29c286.  v8:= v6 / v8 @kind int;
  #L29c28a.  v1:= v0 * v8 @kind int;
  #L29c28e.  v1:= v6 - v1 @kind int;
  #L29c292.  v1:= v1 / 2;
  #L29c296.  v2:= new `com.huawei.hms.scankit.p.y`;
  #L29c29a.  call `<init>`(v2, v6, v7) @signature `Lcom/huawei/hms/scankit/p/y;.<init>:(II)V` @kind direct;
  #L29c2a0.  v6:= 0I;
  #L29c2a2.  v3:= 0I;
  #L29c2a4.  if v3 >= v0 then goto L29c2be;
  #L29c2a8.  v4:= v5[v3] @kind boolean;
  #L29c2ac.  if v4 == 0 then goto L29c2b6;
  #L29c2b0.  call `a`(v2, v1, v6, v8, v7) @signature `Lcom/huawei/hms/scankit/p/y;.a:(IIII)V` @kind virtual;
  #L29c2b6.  v3:= v3 + 1;
  #L29c2ba.  v1:= v1 + v8 @kind int;
  #L29c2bc.  goto L29c2a4;
  #L29c2be.  return v2 @kind object;
}
procedure `int` `a`(`com.huawei.hms.scankit.p.tc` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/tc;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29c3b0.  v0:= 10I;
  #L29c3b4.  return v0;
}
procedure `com.huawei.hms.scankit.p.y` `a`(`com.huawei.hms.scankit.p.tc` v1 @kind this, `java.lang.String` v2 @kind object, `com.huawei.hms.scankit.aiscan.common.BarcodeFormat` v3 @kind object, `int` v4 , `int` v5 , `java.util.Map` v6 @kind object) @signature `Lcom/huawei/hms/scankit/p/tc;.a:(Ljava/lang/String;Lcom/huawei/hms/scankit/aiscan/common/BarcodeFormat;IILjava/util/Map;)Lcom/huawei/hms/scankit/p/y;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29c2d0.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L29c2d6.  v3:= temp;
  #L29c2d8.  if v3 != 0 then goto L29c37e;
  #L29c2dc.  if v4 < 0 then goto L29c340;
  #L29c2e0.  if v5 < 0 then goto L29c340;
  #L29c2e4.  call temp:= `a`(v1) @signature `Lcom/huawei/hms/scankit/p/tc;.a:()I` @kind virtual;
  #L29c2ea.  v3:= temp;
  #L29c2ec.  if v6 == 0 then goto L29c32e;
  #L29c2f0.  v0:= `@@com.huawei.hms.scankit.p.Jc.f` @type ^`com.huawei.hms.scankit.p.Jc` @kind object;
  #L29c2f4.  call temp:= `containsKey`(v6, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L29c2fa.  v0:= temp;
  #L29c2fc.  if v0 == 0 then goto L29c32e;
  #L29c300.  v3:= `@@com.huawei.hms.scankit.p.Jc.f` @type ^`com.huawei.hms.scankit.p.Jc` @kind object;
  #L29c304.  call temp:= `get`(v6, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L29c30a.  v3:= temp @kind object;
  #L29c30c.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L29c312.  v3:= temp @kind object;
  #L29c314.  call temp:= `parseInt`(v3) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L29c31a.  v3:= temp;
  #L29c31c.  goto L29c32e;
  #L29c31e.  v2:= new `java.lang.IllegalArgumentException`;
  #L29c322.  v3:= "EncodeHintType MARGIN can not format integer" @kind object;
  #L29c326.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29c32c.  throw v2;
  #L29c32e.  call temp:= `a`(v1, v2) @signature `Lcom/huawei/hms/scankit/p/tc;.a:(Ljava/lang/String;)[Z` @kind virtual;
  #L29c334.  v2:= temp @kind object;
  #L29c336.  call temp:= `a`(v2, v4, v5, v3) @signature `Lcom/huawei/hms/scankit/p/tc;.a:([ZIII)Lcom/huawei/hms/scankit/p/y;` @kind static;
  #L29c33c.  v2:= temp @kind object;
  #L29c33e.  return v2 @kind object;
  #L29c340.  v2:= new `java.lang.IllegalArgumentException`;
  #L29c344.  v3:= new `java.lang.StringBuilder`;
  #L29c348.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29c34e.  v6:= "Negative size is not allowed. Input: " @kind object;
  #L29c352.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29c358.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29c35e.  v4:= 120I;
  #L29c362.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L29c368.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29c36e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29c374.  v3:= temp @kind object;
  #L29c376.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29c37c.  throw v2;
  #L29c37e.  v2:= new `java.lang.IllegalArgumentException`;
  #L29c382.  v3:= "Found empty contents" @kind object;
  #L29c386.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29c38c.  throw v2;
  catch `java.lang.NumberFormatException` @[L29c300..L29c31c] goto L29c31e;
}
procedure `boolean`[] `a`(`java.lang.String` v0 @kind object) @signature `Lcom/huawei/hms/scankit/p/tc;.a:(Ljava/lang/String;)[Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
