record `com.huawei.hms.scankit.p.za` @kind class @AccessFlag FINAL {
  `com.huawei.hms.scankit.p.y` `com.huawei.hms.scankit.p.za.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.huawei.hms.scankit.p.za.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.za.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.za.d` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.za.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.za.f` @AccessFlag PRIVATE_FINAL;
  `float` `com.huawei.hms.scankit.p.za.g` @AccessFlag PRIVATE_FINAL;
  `int`[] `com.huawei.hms.scankit.p.za.h` @AccessFlag PRIVATE_FINAL;
  `com.huawei.hms.scankit.aiscan.common.A` `com.huawei.hms.scankit.p.za.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.za` v1 @kind this, `com.huawei.hms.scankit.p.y` v2 @kind object, `int` v3 , `int` v4 , `int` v5 , `int` v6 , `float` v7 , `com.huawei.hms.scankit.aiscan.common.A` v8 @kind object) @signature `Lcom/huawei/hms/scankit/p/za;.<init>:(Lcom/huawei/hms/scankit/p/y;IIIIFLcom/huawei/hms/scankit/aiscan/common/A;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2a16dc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a16e2.  v1.`com.huawei.hms.scankit.p.za.a` @type ^`com.huawei.hms.scankit.p.y` := v2 @kind object;
  #L2a16e6.  v2:= new `java.util.ArrayList`;
  #L2a16ea.  v0:= 5I;
  #L2a16ec.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2a16f2.  v1.`com.huawei.hms.scankit.p.za.b` @type ^`java.util.List` := v2 @kind object;
  #L2a16f6.  v1.`com.huawei.hms.scankit.p.za.c` @type ^`int` := v3;
  #L2a16fa.  v1.`com.huawei.hms.scankit.p.za.d` @type ^`int` := v4;
  #L2a16fe.  v1.`com.huawei.hms.scankit.p.za.e` @type ^`int` := v5;
  #L2a1702.  v1.`com.huawei.hms.scankit.p.za.f` @type ^`int` := v6;
  #L2a1706.  v1.`com.huawei.hms.scankit.p.za.g` @type ^`float` := v7;
  #L2a170a.  v2:= 3I;
  #L2a170c.  v2:= new `int`[v2];
  #L2a1710.  v1.`com.huawei.hms.scankit.p.za.h` @type ^`int`[] := v2 @kind object;
  #L2a1714.  v1.`com.huawei.hms.scankit.p.za.i` @type ^`com.huawei.hms.scankit.aiscan.common.A` := v8 @kind object;
  #L2a1718.  return @kind void;
}
procedure `float` `a`(`com.huawei.hms.scankit.p.za` v9 @kind this, `int` v10 , `int` v11 , `int` v12 , `int` v13 ) @signature `Lcom/huawei/hms/scankit/p/za;.a:(IIII)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2a156c.  v0:= v9.`com.huawei.hms.scankit.p.za.a` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L2a1570.  call temp:= `b`(v0) @signature `Lcom/huawei/hms/scankit/p/y;.b:()I` @kind virtual;
  #L2a1576.  v1:= temp;
  #L2a1578.  v2:= v9.`com.huawei.hms.scankit.p.za.h` @type ^`int`[] @kind object;
  #L2a157c.  v3:= 0I;
  #L2a157e.  v2[v3]:= v3;
  #L2a1582.  v4:= 1I;
  #L2a1584.  v2[v4]:= v3;
  #L2a1588.  v5:= 2I;
  #L2a158a.  v2[v5]:= v3;
  #L2a158e.  v6:= v10;
  #L2a1590.  if v6 < 0 then goto L2a15b8;
  #L2a1594.  call temp:= `b`(v0, v11, v6) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @kind virtual;
  #L2a159a.  v7:= temp;
  #L2a159c.  if v7 == 0 then goto L2a15b8;
  #L2a15a0.  v7:= v2[v4];
  #L2a15a4.  if v7 > v12 then goto L2a15b8;
  #L2a15a8.  v7:= v2[v4];
  #L2a15ac.  v7:= v7 + v4 @kind int;
  #L2a15ae.  v2[v4]:= v7;
  #L2a15b2.  v6:= v6 + -1;
  #L2a15b6.  goto L2a1590;
  #L2a15b8.  v7:= NaNF;
  #L2a15bc.  if v6 < 0 then goto L2a169e;
  #L2a15c0.  v8:= v2[v4];
  #L2a15c4.  if v8 <= v12 then goto L2a15cc;
  #L2a15c8.  goto L2a169e;
  #L2a15cc.  if v6 < 0 then goto L2a15f4;
  #L2a15d0.  call temp:= `b`(v0, v11, v6) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @kind virtual;
  #L2a15d6.  v8:= temp;
  #L2a15d8.  if v8 != 0 then goto L2a15f4;
  #L2a15dc.  v8:= v2[v3];
  #L2a15e0.  if v8 > v12 then goto L2a15f4;
  #L2a15e4.  v8:= v2[v3];
  #L2a15e8.  v8:= v8 + v4 @kind int;
  #L2a15ea.  v2[v3]:= v8;
  #L2a15ee.  v6:= v6 + -1;
  #L2a15f2.  goto L2a15cc;
  #L2a15f4.  v6:= v2[v3];
  #L2a15f8.  if v6 <= v12 then goto L2a15fe;
  #L2a15fc.  return v7;
  #L2a15fe.  v10:= v10 + v4 @kind int;
  #L2a1600.  if v10 >= v1 then goto L2a1628;
  #L2a1604.  call temp:= `b`(v0, v11, v10) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @kind virtual;
  #L2a160a.  v6:= temp;
  #L2a160c.  if v6 == 0 then goto L2a1628;
  #L2a1610.  v6:= v2[v4];
  #L2a1614.  if v6 > v12 then goto L2a1628;
  #L2a1618.  v6:= v2[v4];
  #L2a161c.  v6:= v6 + v4 @kind int;
  #L2a161e.  v2[v4]:= v6;
  #L2a1622.  v10:= v10 + 1;
  #L2a1626.  goto L2a1600;
  #L2a1628.  if v10 == v1 then goto L2a169e;
  #L2a162c.  v6:= v2[v4];
  #L2a1630.  if v6 <= v12 then goto L2a1636;
  #L2a1634.  goto L2a169e;
  #L2a1636.  if v10 >= v1 then goto L2a165e;
  #L2a163a.  call temp:= `b`(v0, v11, v10) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @kind virtual;
  #L2a1640.  v6:= temp;
  #L2a1642.  if v6 != 0 then goto L2a165e;
  #L2a1646.  v6:= v2[v5];
  #L2a164a.  if v6 > v12 then goto L2a165e;
  #L2a164e.  v6:= v2[v5];
  #L2a1652.  v6:= v6 + v4 @kind int;
  #L2a1654.  v2[v5]:= v6;
  #L2a1658.  v10:= v10 + 1;
  #L2a165c.  goto L2a1636;
  #L2a165e.  v11:= v2[v5];
  #L2a1662.  if v11 <= v12 then goto L2a1668;
  #L2a1666.  return v7;
  #L2a1668.  v11:= v2[v3];
  #L2a166c.  v12:= v2[v4];
  #L2a1670.  v11:= v11 + v12 @kind int;
  #L2a1672.  v12:= v2[v5];
  #L2a1676.  v11:= v11 + v12 @kind int;
  #L2a1678.  v12:= v13 * 3;
  #L2a167c.  if v11 >= v12 then goto L2a169e;
  #L2a1680.  v11:= v11 * 3;
  #L2a1684.  if v11 > v13 then goto L2a168a;
  #L2a1688.  goto L2a169e;
  #L2a168a.  call temp:= `a`(v9, v2) @signature `Lcom/huawei/hms/scankit/p/za;.a:([I)Z` @kind direct;
  #L2a1690.  v11:= temp;
  #L2a1692.  if v11 == 0 then goto L2a169e;
  #L2a1696.  call temp:= `a`(v2, v10) @signature `Lcom/huawei/hms/scankit/p/za;.a:([II)F` @kind static;
  #L2a169c.  v7:= temp;
  #L2a169e.  return v7;
}
procedure `float` `a`(`int`[] v1 @kind object, `int` v2 ) @signature `Lcom/huawei/hms/scankit/p/za;.a:([II)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2a16b0.  v0:= 2I;
  #L2a16b2.  v0:= v1[v0];
  #L2a16b6.  v2:= v2 - v0 @kind int;
  #L2a16b8.  v2:= (`float`) v2 @kind i2f;
  #L2a16ba.  v0:= 1I;
  #L2a16bc.  v1:= v1[v0];
  #L2a16c0.  v1:= (`float`) v1 @kind i2f;
  #L2a16c2.  v0:= 2.0F;
  #L2a16c6.  v1:= v1 / v0 @kind float;
  #L2a16c8.  v2:= v2 - v1 @kind float;
  #L2a16ca.  return v2;
}
procedure `com.huawei.hms.scankit.p.ya` `a`(`com.huawei.hms.scankit.p.za` v4 @kind this, `int` v5 , `int` v6 , `int` v7 , `int`[] v8 @kind object) @signature `Lcom/huawei/hms/scankit/p/za;.a:(III[I)Lcom/huawei/hms/scankit/p/ya;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a140c.  v0:= 0I;
  #L2a140e.  v1:= 0I;
  #L2a1410.  if v6 >= v7 then goto L2a1492;
  #L2a1414.  v2:= v4.`com.huawei.hms.scankit.p.za.a` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L2a1418.  call temp:= `b`(v2, v6, v5) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @kind virtual;
  #L2a141e.  v2:= temp;
  #L2a1420.  v3:= 1I;
  #L2a1422.  if v2 == 0 then goto L2a147a;
  #L2a1426.  if v1 != v3 then goto L2a1436;
  #L2a142a.  v2:= v8[v3];
  #L2a142e.  v2:= v2 + v3 @kind int;
  #L2a1430.  v8[v3]:= v2;
  #L2a1434.  goto L2a148c;
  #L2a1436.  v2:= 2I;
  #L2a1438.  if v1 != v2 then goto L2a146a;
  #L2a143c.  call temp:= `a`(v4, v8) @signature `Lcom/huawei/hms/scankit/p/za;.a:([I)Z` @kind direct;
  #L2a1442.  v1:= temp;
  #L2a1444.  if v1 == 0 then goto L2a1456;
  #L2a1448.  call temp:= `a`(v4, v8, v5, v6) @signature `Lcom/huawei/hms/scankit/p/za;.a:([III)Lcom/huawei/hms/scankit/p/ya;` @kind direct;
  #L2a144e.  v1:= temp @kind object;
  #L2a1450.  if v1 == 0 then goto L2a1456;
  #L2a1454.  return v1 @kind object;
  #L2a1456.  v1:= v8[v2];
  #L2a145a.  v8[v0]:= v1;
  #L2a145e.  v8[v3]:= v3;
  #L2a1462.  v8[v2]:= v0;
  #L2a1466.  v1:= 1I;
  #L2a1468.  goto L2a148c;
  #L2a146a.  v1:= v1 + 1;
  #L2a146e.  v2:= v8[v1];
  #L2a1472.  v2:= v2 + v3 @kind int;
  #L2a1474.  v8[v1]:= v2;
  #L2a1478.  goto L2a148c;
  #L2a147a.  if v1 != v3 then goto L2a1482;
  #L2a147e.  v1:= v1 + 1;
  #L2a1482.  v2:= v8[v1];
  #L2a1486.  v2:= v2 + v3 @kind int;
  #L2a1488.  v8[v1]:= v2;
  #L2a148c.  v6:= v6 + 1;
  #L2a1490.  goto L2a1410;
  #L2a1492.  v5:= 0I;
  #L2a1494.  return v5 @kind object;
}
procedure `com.huawei.hms.scankit.p.ya` `a`(`com.huawei.hms.scankit.p.za` v6 @kind this, `int`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/huawei/hms/scankit/p/za;.a:([III)Lcom/huawei/hms/scankit/p/ya;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2a14a8.  v0:= 0I;
  #L2a14aa.  v1:= v7[v0];
  #L2a14ae.  v2:= 1I;
  #L2a14b0.  v3:= v7[v2];
  #L2a14b4.  v1:= v1 + v3 @kind int;
  #L2a14b6.  v3:= 2I;
  #L2a14b8.  v4:= v7[v3];
  #L2a14bc.  v1:= v1 + v4 @kind int;
  #L2a14be.  call temp:= `a`(v7, v9) @signature `Lcom/huawei/hms/scankit/p/za;.a:([II)F` @kind static;
  #L2a14c4.  v9:= temp;
  #L2a14c6.  v4:= (`int`) v9 @kind f2i;
  #L2a14c8.  v5:= v7[v2];
  #L2a14cc.  v5:= v5 * 3;
  #L2a14d0.  call temp:= `a`(v6, v8, v4, v5, v1) @signature `Lcom/huawei/hms/scankit/p/za;.a:(IIII)F` @kind direct;
  #L2a14d6.  v8:= temp;
  #L2a14d8.  call temp:= `isNaN`(v8) @signature `Ljava/lang/Float;.isNaN:(F)Z` @kind static;
  #L2a14de.  v1:= temp;
  #L2a14e0.  if v1 != 0 then goto L2a1558;
  #L2a14e4.  v0:= v7[v0];
  #L2a14e8.  v1:= v7[v2];
  #L2a14ec.  v0:= v0 + v1 @kind int;
  #L2a14ee.  v7:= v7[v3];
  #L2a14f2.  v0:= v0 + v7 @kind int;
  #L2a14f4.  v7:= (`float`) v0 @kind i2f;
  #L2a14f6.  v0:= 3.0F;
  #L2a14fa.  v7:= v7 / v0 @kind float;
  #L2a14fc.  v0:= v6.`com.huawei.hms.scankit.p.za.b` @type ^`java.util.List` @kind object;
  #L2a1500.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2a1506.  v0:= temp @kind object;
  #L2a1508.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2a150e.  v1:= temp;
  #L2a1510.  if v1 == 0 then goto L2a1536;
  #L2a1514.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2a151a.  v1:= temp @kind object;
  #L2a151c.  v1:= (`com.huawei.hms.scankit.p.ya`) v1 @kind object;
  #L2a1520.  call temp:= `a`(v1, v7, v8, v9) @signature `Lcom/huawei/hms/scankit/p/ya;.a:(FFF)Z` @kind virtual;
  #L2a1526.  v2:= temp;
  #L2a1528.  if v2 == 0 then goto L2a1508;
  #L2a152c.  call temp:= `b`(v1, v8, v9, v7) @signature `Lcom/huawei/hms/scankit/p/ya;.b:(FFF)Lcom/huawei/hms/scankit/p/ya;` @kind virtual;
  #L2a1532.  v7:= temp @kind object;
  #L2a1534.  return v7 @kind object;
  #L2a1536.  v0:= new `com.huawei.hms.scankit.p.ya`;
  #L2a153a.  call `<init>`(v0, v9, v8, v7) @signature `Lcom/huawei/hms/scankit/p/ya;.<init>:(FFF)V` @kind direct;
  #L2a1540.  v7:= v6.`com.huawei.hms.scankit.p.za.b` @type ^`java.util.List` @kind object;
  #L2a1544.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2a154a.  v7:= v6.`com.huawei.hms.scankit.p.za.i` @type ^`com.huawei.hms.scankit.aiscan.common.A` @kind object;
  #L2a154e.  if v7 == 0 then goto L2a1558;
  #L2a1552.  call `a`(v7, v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/A;.a:(Lcom/huawei/hms/scankit/aiscan/common/z;)V` @kind interface;
  #L2a1558.  v7:= 0I;
  #L2a155a.  return v7 @kind object;
}
procedure `boolean` `a`(`com.huawei.hms.scankit.p.za` v5 @kind this, `int`[] v6 @kind object) @signature `Lcom/huawei/hms/scankit/p/za;.a:([I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a12e0.  v0:= v5.`com.huawei.hms.scankit.p.za.g` @type ^`float`;
  #L2a12e4.  v1:= 3.0F;
  #L2a12e8.  v1:= v1 * v0 @kind float;
  #L2a12ec.  v2:= 4.0F;
  #L2a12f0.  v1:= v1 / v2 @kind float;
  #L2a12f2.  v2:= 0I;
  #L2a12f4.  v3:= 0I;
  #L2a12f6.  v4:= 3I;
  #L2a12f8.  if v3 >= v4 then goto L2a131e;
  #L2a12fc.  v4:= v6[v3];
  #L2a1300.  v4:= (`float`) v4 @kind i2f;
  #L2a1302.  v4:= v0 - v4 @kind float;
  #L2a1306.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2a130c.  v4:= temp;
  #L2a130e.  v4:= fcmpl(v4, v1);
  #L2a1312.  if v4 < 0 then goto L2a1318;
  #L2a1316.  return v2;
  #L2a1318.  v3:= v3 + 1;
  #L2a131c.  goto L2a12f6;
  #L2a131e.  v6:= 1I;
  #L2a1320.  return v6;
}
procedure `com.huawei.hms.scankit.p.ya` `a`(`com.huawei.hms.scankit.p.za` v10 @kind this) @signature `Lcom/huawei/hms/scankit/p/za;.a:()Lcom/huawei/hms/scankit/p/ya;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2a1334.  v0:= v10.`com.huawei.hms.scankit.p.za.c` @type ^`int`;
  #L2a1338.  v1:= v10.`com.huawei.hms.scankit.p.za.f` @type ^`int`;
  #L2a133c.  v2:= v10.`com.huawei.hms.scankit.p.za.e` @type ^`int`;
  #L2a1340.  v2:= v2 + v0 @kind int;
  #L2a1342.  v3:= v10.`com.huawei.hms.scankit.p.za.d` @type ^`int`;
  #L2a1346.  v4:= v1 / 2;
  #L2a134a.  v3:= v3 + v4 @kind int;
  #L2a134c.  v4:= 3I;
  #L2a134e.  v4:= new `int`[v4];
  #L2a1352.  v5:= 0I;
  #L2a1354.  v6:= 0I;
  #L2a1356.  if v6 >= v1 then goto L2a13ce;
  #L2a135a.  v7:= v6 ^& 1;
  #L2a135e.  v8:= 2I;
  #L2a1360.  if v7 != 0 then goto L2a136c;
  #L2a1364.  v7:= v6 + 1;
  #L2a1368.  v7:= v7 / v8 @kind int;
  #L2a136a.  goto L2a1374;
  #L2a136c.  v7:= v6 + 1;
  #L2a1370.  v7:= v7 / v8 @kind int;
  #L2a1372.  v7:= -v7 @kind int;
  #L2a1374.  v7:= v7 + v3 @kind int;
  #L2a1376.  v4[v5]:= v5;
  #L2a137a.  v9:= 1I;
  #L2a137c.  v4[v9]:= v5;
  #L2a1380.  v4[v8]:= v5;
  #L2a1384.  v8:= v0;
  #L2a1386.  if v8 >= v2 then goto L2a13a0;
  #L2a138a.  v9:= v10.`com.huawei.hms.scankit.p.za.a` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L2a138e.  call temp:= `b`(v9, v8, v7) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @kind virtual;
  #L2a1394.  v9:= temp;
  #L2a1396.  if v9 != 0 then goto L2a13a0;
  #L2a139a.  v8:= v8 + 1;
  #L2a139e.  goto L2a1386;
  #L2a13a0.  call temp:= `a`(v10, v7, v8, v2, v4) @signature `Lcom/huawei/hms/scankit/p/za;.a:(III[I)Lcom/huawei/hms/scankit/p/ya;` @kind direct;
  #L2a13a6.  v8:= temp @kind object;
  #L2a13a8.  if v8 == 0 then goto L2a13ae;
  #L2a13ac.  return v8 @kind object;
  #L2a13ae.  call temp:= `a`(v10, v4) @signature `Lcom/huawei/hms/scankit/p/za;.a:([I)Z` @kind direct;
  #L2a13b4.  v8:= temp;
  #L2a13b6.  if v8 == 0 then goto L2a13c8;
  #L2a13ba.  call temp:= `a`(v10, v4, v7, v2) @signature `Lcom/huawei/hms/scankit/p/za;.a:([III)Lcom/huawei/hms/scankit/p/ya;` @kind direct;
  #L2a13c0.  v7:= temp @kind object;
  #L2a13c2.  if v7 == 0 then goto L2a13c8;
  #L2a13c6.  return v7 @kind object;
  #L2a13c8.  v6:= v6 + 1;
  #L2a13cc.  goto L2a1356;
  #L2a13ce.  v0:= v10.`com.huawei.hms.scankit.p.za.b` @type ^`java.util.List` @kind object;
  #L2a13d2.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2a13d8.  v0:= temp;
  #L2a13da.  if v0 != 0 then goto L2a13f0;
  #L2a13de.  v0:= v10.`com.huawei.hms.scankit.p.za.b` @type ^`java.util.List` @kind object;
  #L2a13e2.  call temp:= `get`(v0, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2a13e8.  v0:= temp @kind object;
  #L2a13ea.  v0:= (`com.huawei.hms.scankit.p.ya`) v0 @kind object;
  #L2a13ee.  return v0 @kind object;
  #L2a13f0.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L2a13f6.  v0:= temp @kind object;
  #L2a13f8.  throw v0;
}
