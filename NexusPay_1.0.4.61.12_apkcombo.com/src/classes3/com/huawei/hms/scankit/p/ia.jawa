record `com.huawei.hms.scankit.p.ia` @kind class @AccessFlag FINAL {
  `int` `com.huawei.hms.scankit.p.ia.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.ia.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.ia.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.ia.d` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.ia.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.ia` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/huawei/hms/scankit/p/ia;.<init>:(IIII)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L28e144.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28e14a.  v0:= -1I;
  #L28e14c.  v1.`com.huawei.hms.scankit.p.ia.e` @type ^`int` := v0;
  #L28e150.  v1.`com.huawei.hms.scankit.p.ia.a` @type ^`int` := v2;
  #L28e154.  v1.`com.huawei.hms.scankit.p.ia.b` @type ^`int` := v3;
  #L28e158.  v1.`com.huawei.hms.scankit.p.ia.c` @type ^`int` := v4;
  #L28e15c.  v1.`com.huawei.hms.scankit.p.ia.d` @type ^`int` := v5;
  #L28e160.  return @kind void;
}
procedure `int` `a`(`com.huawei.hms.scankit.p.ia` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/ia;.a:()I` @AccessFlag  {
    temp;
    v0;

  #L28df48.  v0:= v1.`com.huawei.hms.scankit.p.ia.c` @type ^`int`;
  #L28df4c.  return v0;
}
procedure `boolean` `a`(`com.huawei.hms.scankit.p.ia` v1 @kind this, `int` v2 ) @signature `Lcom/huawei/hms/scankit/p/ia;.a:(I)Z` @AccessFlag  {
    temp;
    v0;

  #L28def8.  v0:= -1I;
  #L28defa.  if v2 == v0 then goto L28df12;
  #L28defe.  v0:= v1.`com.huawei.hms.scankit.p.ia.c` @type ^`int`;
  #L28df02.  v2:= v2 %% 3;
  #L28df06.  v2:= v2 * 3;
  #L28df0a.  if v0 != v2 then goto L28df12;
  #L28df0e.  v2:= 1I;
  #L28df10.  goto L28df14;
  #L28df12.  v2:= 0I;
  #L28df14.  return v2;
}
procedure `int` `b`(`com.huawei.hms.scankit.p.ia` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/ia;.b:()I` @AccessFlag  {
    temp;
    v0;

  #L28df60.  v0:= v1.`com.huawei.hms.scankit.p.ia.b` @type ^`int`;
  #L28df64.  return v0;
}
procedure `void` `b`(`com.huawei.hms.scankit.p.ia` v0 @kind this, `int` v1 ) @signature `Lcom/huawei/hms/scankit/p/ia;.b:(I)V` @AccessFlag  {
    temp;

  #L28e174.  v0.`com.huawei.hms.scankit.p.ia.e` @type ^`int` := v1;
  #L28e178.  return @kind void;
}
procedure `int` `c`(`com.huawei.hms.scankit.p.ia` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/ia;.c:()I` @AccessFlag  {
    temp;
    v0;

  #L28df78.  v0:= v1.`com.huawei.hms.scankit.p.ia.e` @type ^`int`;
  #L28df7c.  return v0;
}
procedure `int` `d`(`com.huawei.hms.scankit.p.ia` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/ia;.d:()I` @AccessFlag  {
    temp;
    v0;

  #L28df90.  v0:= v1.`com.huawei.hms.scankit.p.ia.a` @type ^`int`;
  #L28df94.  return v0;
}
procedure `int` `e`(`com.huawei.hms.scankit.p.ia` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/ia;.e:()I` @AccessFlag  {
    temp;
    v0;

  #L28dfa8.  v0:= v1.`com.huawei.hms.scankit.p.ia.d` @type ^`int`;
  #L28dfac.  return v0;
}
procedure `int` `f`(`com.huawei.hms.scankit.p.ia` v2 @kind this) @signature `Lcom/huawei/hms/scankit/p/ia;.f:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L28dfc0.  v0:= v2.`com.huawei.hms.scankit.p.ia.b` @type ^`int`;
  #L28dfc4.  v1:= v2.`com.huawei.hms.scankit.p.ia.a` @type ^`int`;
  #L28dfc8.  v0:= v0 - v1 @kind int;
  #L28dfca.  return v0;
}
procedure `boolean` `g`(`com.huawei.hms.scankit.p.ia` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/ia;.g:()Z` @AccessFlag  {
    temp;
    v0;

  #L28df28.  v0:= v1.`com.huawei.hms.scankit.p.ia.e` @type ^`int`;
  #L28df2c.  call temp:= `a`(v1, v0) @signature `Lcom/huawei/hms/scankit/p/ia;.a:(I)Z` @kind virtual;
  #L28df32.  v0:= temp;
  #L28df34.  return v0;
}
procedure `void` `h`(`com.huawei.hms.scankit.p.ia` v2 @kind this) @signature `Lcom/huawei/hms/scankit/p/ia;.h:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L28e18c.  v0:= v2.`com.huawei.hms.scankit.p.ia.d` @type ^`int`;
  #L28e190.  v0:= v0 / 30;
  #L28e194.  v0:= v0 * 3;
  #L28e198.  v1:= v2.`com.huawei.hms.scankit.p.ia.c` @type ^`int`;
  #L28e19c.  v1:= v1 / 3;
  #L28e1a0.  v0:= v0 + v1 @kind int;
  #L28e1a2.  v2.`com.huawei.hms.scankit.p.ia.e` @type ^`int` := v0;
  #L28e1a6.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.huawei.hms.scankit.p.ia` v2 @kind this) @signature `Lcom/huawei/hms/scankit/p/ia;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28dfdc.  v0:= new `java.lang.StringBuilder`;
  #L28dfe0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28dfe6.  v1:= v2.`com.huawei.hms.scankit.p.ia.e` @type ^`int`;
  #L28dfea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L28dff0.  v1:= "|" @kind object;
  #L28dff4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28dffa.  v1:= v2.`com.huawei.hms.scankit.p.ia.d` @type ^`int`;
  #L28dffe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L28e004.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28e00a.  v0:= temp @kind object;
  #L28e00c.  return v0 @kind object;
}
