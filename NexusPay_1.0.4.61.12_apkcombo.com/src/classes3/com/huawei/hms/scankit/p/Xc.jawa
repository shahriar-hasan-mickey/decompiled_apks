record `com.huawei.hms.scankit.p.Xc` @kind class @AccessFlag PUBLIC extends `com.huawei.hms.scankit.p.Vc` @kind interface {
  `float` `com.huawei.hms.scankit.p.Xc.a` @AccessFlag PRIVATE_FINAL;
  `float` `com.huawei.hms.scankit.p.Xc.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.Xc` v0 @kind this, `float` v1 , `float` v2 ) @signature `Lcom/huawei/hms/scankit/p/Xc;.<init>:(FF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2832d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2832da.  v0.`com.huawei.hms.scankit.p.Xc.b` @type ^`float` := v1;
  #L2832de.  v0.`com.huawei.hms.scankit.p.Xc.a` @type ^`float` := v2;
  #L2832e2.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.Xc` v3 @kind this, `com.huawei.hms.scankit.p.Pc` v4 @kind object) @signature `Lcom/huawei/hms/scankit/p/Xc;.a:(Lcom/huawei/hms/scankit/p/Pc;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2832f4.  v0:= v3.`com.huawei.hms.scankit.p.Xc.a` @type ^`float`;
  #L2832f8.  v1:= v3.`com.huawei.hms.scankit.p.Xc.b` @type ^`float`;
  #L2832fc.  v2:= fcmpl(v0, v1);
  #L283300.  if v2 != 0 then goto L283306;
  #L283304.  goto L283316;
  #L283306.  v0:= v0 - v1 @kind float;
  #L283308.  call temp:= `a`(v0) @signature `Lcom/huawei/hms/scankit/p/Yc;.a:(F)F` @kind static;
  #L28330e.  v0:= temp;
  #L283310.  v1:= v3.`com.huawei.hms.scankit.p.Xc.b` @type ^`float`;
  #L283314.  v0:= v0 + v1 @kind float;
  #L283316.  call `b`(v4, v0) @signature `Lcom/huawei/hms/scankit/p/Pc;.b:(F)V` @kind virtual;
  #L28331c.  call `a`(v4, v0) @signature `Lcom/huawei/hms/scankit/p/Pc;.a:(F)V` @kind virtual;
  #L283322.  return @kind void;
}
