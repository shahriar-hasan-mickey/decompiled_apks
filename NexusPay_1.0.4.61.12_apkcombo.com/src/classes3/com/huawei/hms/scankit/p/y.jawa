record `com.huawei.hms.scankit.p.y` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Cloneable` @kind interface {
  `int` `com.huawei.hms.scankit.p.y.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.y.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.y.c` @AccessFlag PRIVATE_FINAL;
  `int`[] `com.huawei.hms.scankit.p.y.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.y` v0 @kind this, `int` v1 ) @signature `Lcom/huawei/hms/scankit/p/y;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a0fd8.  call `<init>`(v0, v1, v1) @signature `Lcom/huawei/hms/scankit/p/y;.<init>:(II)V` @kind direct;
  #L2a0fde.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.y` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/huawei/hms/scankit/p/y;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a0ff0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a0ff6.  v0:= 1I;
  #L2a0ff8.  if v2 < v0 then goto L2a1022;
  #L2a0ffc.  if v3 < v0 then goto L2a1022;
  #L2a1000.  v1.`com.huawei.hms.scankit.p.y.a` @type ^`int` := v2;
  #L2a1004.  v1.`com.huawei.hms.scankit.p.y.b` @type ^`int` := v3;
  #L2a1008.  v2:= v2 + 31;
  #L2a100c.  v2:= v2 / 32;
  #L2a1010.  v1.`com.huawei.hms.scankit.p.y.c` @type ^`int` := v2;
  #L2a1014.  v2:= v2 * v3 @kind int;
  #L2a1018.  v2:= new `int`[v2];
  #L2a101c.  v1.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] := v2 @kind object;
  #L2a1020.  return @kind void;
  #L2a1022.  v2:= new `java.lang.IllegalArgumentException`;
  #L2a1026.  v3:= "Both dimensions must be greater than 0" @kind object;
  #L2a102a.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a1030.  throw v2;
  #L2a1032.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L2a1034.  throw v2;
  catch `java.lang.Exception` @[L2a1022..L2a1026] goto L2a1032;
  catch `java.lang.Exception` @[L2a102a..L2a1032] goto L2a1032;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.y` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int`[] v4 @kind object) @signature `Lcom/huawei/hms/scankit/p/y;.<init>:(III[I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a1060.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a1066.  v0.`com.huawei.hms.scankit.p.y.a` @type ^`int` := v1;
  #L2a106a.  v0.`com.huawei.hms.scankit.p.y.b` @type ^`int` := v2;
  #L2a106e.  v0.`com.huawei.hms.scankit.p.y.c` @type ^`int` := v3;
  #L2a1072.  v0.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] := v4 @kind object;
  #L2a1076.  return @kind void;
}
procedure `java.lang.String` `a`(`com.huawei.hms.scankit.p.y` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lcom/huawei/hms/scankit/p/y;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a0f40.  v0:= new `java.lang.StringBuilder`;
  #L2a0f44.  v1:= v5.`com.huawei.hms.scankit.p.y.b` @type ^`int`;
  #L2a0f48.  v2:= v5.`com.huawei.hms.scankit.p.y.a` @type ^`int`;
  #L2a0f4c.  v2:= v2 + 1;
  #L2a0f50.  v1:= v1 * v2 @kind int;
  #L2a0f54.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2a0f5a.  v1:= 0I;
  #L2a0f5c.  v2:= 0I;
  #L2a0f5e.  v3:= v5.`com.huawei.hms.scankit.p.y.b` @type ^`int`;
  #L2a0f62.  if v2 >= v3 then goto L2a0f9a;
  #L2a0f66.  v3:= 0I;
  #L2a0f68.  v4:= v5.`com.huawei.hms.scankit.p.y.a` @type ^`int`;
  #L2a0f6c.  if v3 >= v4 then goto L2a0f8e;
  #L2a0f70.  call temp:= `b`(v5, v3, v2) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @kind virtual;
  #L2a0f76.  v4:= temp;
  #L2a0f78.  if v4 == 0 then goto L2a0f80;
  #L2a0f7c.  v4:= v6 @kind object;
  #L2a0f7e.  goto L2a0f82;
  #L2a0f80.  v4:= v7 @kind object;
  #L2a0f82.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a0f88.  v3:= v3 + 1;
  #L2a0f8c.  goto L2a0f68;
  #L2a0f8e.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a0f94.  v2:= v2 + 1;
  #L2a0f98.  goto L2a0f5e;
  #L2a0f9a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a0fa0.  v6:= temp @kind object;
  #L2a0fa2.  return v6 @kind object;
}
procedure `com.huawei.hms.scankit.p.x` `a`(`com.huawei.hms.scankit.p.y` v4 @kind this, `int` v5 , `com.huawei.hms.scankit.p.x` v6 @kind object) @signature `Lcom/huawei/hms/scankit/p/y;.a:(ILcom/huawei/hms/scankit/p/x;)Lcom/huawei/hms/scankit/p/x;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a0d1c.  if v6 == 0 then goto L2a0d3a;
  #L2a0d20.  call temp:= `d`(v6) @signature `Lcom/huawei/hms/scankit/p/x;.d:()I` @kind virtual;
  #L2a0d26.  v0:= temp;
  #L2a0d28.  v1:= v4.`com.huawei.hms.scankit.p.y.a` @type ^`int`;
  #L2a0d2c.  if v0 >= v1 then goto L2a0d32;
  #L2a0d30.  goto L2a0d3a;
  #L2a0d32.  call `a`(v6) @signature `Lcom/huawei/hms/scankit/p/x;.a:()V` @kind virtual;
  #L2a0d38.  goto L2a0d48;
  #L2a0d3a.  v6:= new `com.huawei.hms.scankit.p.x`;
  #L2a0d3e.  v0:= v4.`com.huawei.hms.scankit.p.y.a` @type ^`int`;
  #L2a0d42.  call `<init>`(v6, v0) @signature `Lcom/huawei/hms/scankit/p/x;.<init>:(I)V` @kind direct;
  #L2a0d48.  v0:= v4.`com.huawei.hms.scankit.p.y.c` @type ^`int`;
  #L2a0d4c.  v5:= v5 * v0 @kind int;
  #L2a0d50.  v0:= 0I;
  #L2a0d52.  v1:= v4.`com.huawei.hms.scankit.p.y.c` @type ^`int`;
  #L2a0d56.  if v0 >= v1 then goto L2a0d76;
  #L2a0d5a.  v1:= v0 * 32;
  #L2a0d5e.  v2:= v4.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a0d62.  v3:= v5 + v0 @kind int;
  #L2a0d66.  v2:= v2[v3];
  #L2a0d6a.  call `b`(v6, v1, v2) @signature `Lcom/huawei/hms/scankit/p/x;.b:(II)V` @kind virtual;
  #L2a0d70.  v0:= v0 + 1;
  #L2a0d74.  goto L2a0d52;
  #L2a0d76.  return v6 @kind object;
}
procedure `java.lang.String` `a`(`com.huawei.hms.scankit.p.y` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/huawei/hms/scankit/p/y;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a0f20.  v0:= "\n" @kind object;
  #L2a0f24.  call temp:= `a`(v1, v2, v3, v0) @signature `Lcom/huawei/hms/scankit/p/y;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L2a0f2a.  v2:= temp @kind object;
  #L2a0f2c.  return v2 @kind object;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.y` v4 @kind this) @signature `Lcom/huawei/hms/scankit/p/y;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a1088.  v0:= v4.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a108c.  v0:= length @variable v0;
  #L2a108e.  v1:= 0I;
  #L2a1090.  v2:= 0I;
  #L2a1092.  if v2 >= v0 then goto L2a10a4;
  #L2a1096.  v3:= v4.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a109a.  v3[v2]:= v1;
  #L2a109e.  v2:= v2 + 1;
  #L2a10a2.  goto L2a1092;
  #L2a10a4.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.y` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/huawei/hms/scankit/p/y;.a:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a10b8.  v0:= v3.`com.huawei.hms.scankit.p.y.c` @type ^`int`;
  #L2a10bc.  v5:= v5 * v0 @kind int;
  #L2a10c0.  v0:= v4 / 32;
  #L2a10c4.  v5:= v5 + v0 @kind int;
  #L2a10c6.  v0:= v3.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a10ca.  call temp:= `a`(v0, v5) @signature `Lcom/huawei/hms/scankit/util/b;.a:([II)Z` @kind static;
  #L2a10d0.  v0:= temp;
  #L2a10d2.  if v0 == 0 then goto L2a10ee;
  #L2a10d6.  v0:= v3.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a10da.  v1:= v0[v5];
  #L2a10de.  v4:= v4 ^& 31;
  #L2a10e2.  v2:= 1I;
  #L2a10e4.  v4:= v2 ^< v4 @kind int;
  #L2a10e8.  v4:= v4 ^~ v1 @kind int;
  #L2a10ea.  v0[v5]:= v4;
  #L2a10ee.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.y` v7 @kind this, `int` v8 , `int` v9 , `int` v10 , `int` v11 ) @signature `Lcom/huawei/hms/scankit/p/y;.a:(IIII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2a1100.  if v9 < 0 then goto L2a118a;
  #L2a1104.  if v8 < 0 then goto L2a118a;
  #L2a1108.  v0:= 1I;
  #L2a110a.  if v11 < v0 then goto L2a1176;
  #L2a110e.  if v10 < v0 then goto L2a1176;
  #L2a1112.  v10:= v10 + v8 @kind int;
  #L2a1114.  v11:= v11 + v9 @kind int;
  #L2a1116.  v1:= v7.`com.huawei.hms.scankit.p.y.b` @type ^`int`;
  #L2a111a.  if v11 > v1 then goto L2a1162;
  #L2a111e.  v1:= v7.`com.huawei.hms.scankit.p.y.a` @type ^`int`;
  #L2a1122.  if v10 > v1 then goto L2a1162;
  #L2a1126.  if v9 >= v11 then goto L2a1160;
  #L2a112a.  v1:= v7.`com.huawei.hms.scankit.p.y.c` @type ^`int`;
  #L2a112e.  v1:= v1 * v9 @kind int;
  #L2a1132.  v2:= v8;
  #L2a1134.  if v2 >= v10 then goto L2a115a;
  #L2a1138.  v3:= v7.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a113c.  v4:= v2 / 32;
  #L2a1140.  v4:= v4 + v1 @kind int;
  #L2a1142.  v5:= v3[v4];
  #L2a1146.  v6:= v2 ^& 31;
  #L2a114a.  v6:= v0 ^< v6 @kind int;
  #L2a114e.  v5:= v5 ^| v6 @kind int;
  #L2a1150.  v3[v4]:= v5;
  #L2a1154.  v2:= v2 + 1;
  #L2a1158.  goto L2a1134;
  #L2a115a.  v9:= v9 + 1;
  #L2a115e.  goto L2a1126;
  #L2a1160.  return @kind void;
  #L2a1162.  v8:= new `java.lang.IllegalArgumentException`;
  #L2a1166.  v9:= "The region must fit inside the matrix" @kind object;
  #L2a116a.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a1170.  throw v8;
  #L2a1172.  v8:= Exception @type ^`java.lang.Exception` @kind object;
  #L2a1174.  throw v8;
  #L2a1176.  v8:= new `java.lang.IllegalArgumentException`;
  #L2a117a.  v9:= "Height and width must be at least 1" @kind object;
  #L2a117e.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a1184.  throw v8;
  #L2a1186.  v8:= Exception @type ^`java.lang.Exception` @kind object;
  #L2a1188.  throw v8;
  #L2a118a.  v8:= new `java.lang.IllegalArgumentException`;
  #L2a118e.  v9:= "Left and top must be nonnegative" @kind object;
  #L2a1192.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a1198.  throw v8;
  #L2a119a.  v8:= Exception @type ^`java.lang.Exception` @kind object;
  #L2a119c.  throw v8;
  catch `java.lang.Exception` @[L2a1162..L2a1166] goto L2a1172;
  catch `java.lang.Exception` @[L2a116a..L2a1172] goto L2a1172;
  catch `java.lang.Exception` @[L2a1176..L2a117a] goto L2a1186;
  catch `java.lang.Exception` @[L2a117e..L2a1186] goto L2a1186;
  catch `java.lang.Exception` @[L2a118a..L2a118e] goto L2a119a;
  catch `java.lang.Exception` @[L2a1192..L2a119a] goto L2a119a;
}
procedure `int` `b`(`com.huawei.hms.scankit.p.y` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/y;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a0e90.  v0:= v1.`com.huawei.hms.scankit.p.y.b` @type ^`int`;
  #L2a0e94.  return v0;
}
procedure `void` `b`(`com.huawei.hms.scankit.p.y` v3 @kind this, `int` v4 , `com.huawei.hms.scankit.p.x` v5 @kind object) @signature `Lcom/huawei/hms/scankit/p/y;.b:(ILcom/huawei/hms/scankit/p/x;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a11f0.  call temp:= `c`(v5) @signature `Lcom/huawei/hms/scankit/p/x;.c:()[I` @kind virtual;
  #L2a11f6.  v5:= temp @kind object;
  #L2a11f8.  v0:= v3.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a11fc.  v1:= v3.`com.huawei.hms.scankit.p.y.c` @type ^`int`;
  #L2a1200.  v4:= v4 * v1 @kind int;
  #L2a1204.  v2:= 0I;
  #L2a1206.  call `arraycopy`(v5, v2, v0, v4, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2a120c.  return @kind void;
}
procedure `boolean` `b`(`com.huawei.hms.scankit.p.y` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a0b48.  v0:= v2.`com.huawei.hms.scankit.p.y.c` @type ^`int`;
  #L2a0b4c.  v4:= v4 * v0 @kind int;
  #L2a0b50.  v0:= v3 / 32;
  #L2a0b54.  v4:= v4 + v0 @kind int;
  #L2a0b56.  v0:= v2.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a0b5a.  call temp:= `a`(v0, v4) @signature `Lcom/huawei/hms/scankit/util/b;.a:([II)Z` @kind static;
  #L2a0b60.  v0:= temp;
  #L2a0b62.  v1:= 0I;
  #L2a0b64.  if v0 == 0 then goto L2a0b82;
  #L2a0b68.  v0:= v2.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a0b6c.  v4:= v0[v4];
  #L2a0b70.  v3:= v3 ^& 31;
  #L2a0b74.  v3:= v4 ^>> v3 @kind int;
  #L2a0b78.  v4:= 1I;
  #L2a0b7a.  v3:= v3 ^& v4 @kind int;
  #L2a0b7c.  if v3 == 0 then goto L2a0b82;
  #L2a0b80.  v1:= 1I;
  #L2a0b82.  return v1;
}
procedure `com.huawei.hms.scankit.p.y` `c`(`com.huawei.hms.scankit.p.y` v5 @kind this) @signature `Lcom/huawei/hms/scankit/p/y;.c:()Lcom/huawei/hms/scankit/p/y;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a0d88.  v0:= v5.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a0d8c.  v0:= length @variable v0;
  #L2a0d8e.  v0:= new `int`[v0];
  #L2a0d92.  v1:= 0I;
  #L2a0d94.  v2:= v5.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a0d98.  v3:= length @variable v2;
  #L2a0d9a.  if v1 >= v3 then goto L2a0dae;
  #L2a0d9e.  v2:= v2[v1];
  #L2a0da2.  v2:= ~v2 @kind int;
  #L2a0da4.  v0[v1]:= v2;
  #L2a0da8.  v1:= v1 + 1;
  #L2a0dac.  goto L2a0d94;
  #L2a0dae.  v1:= new `com.huawei.hms.scankit.p.y`;
  #L2a0db2.  v2:= v5.`com.huawei.hms.scankit.p.y.a` @type ^`int`;
  #L2a0db6.  v3:= v5.`com.huawei.hms.scankit.p.y.b` @type ^`int`;
  #L2a0dba.  v4:= v5.`com.huawei.hms.scankit.p.y.c` @type ^`int`;
  #L2a0dbe.  call `<init>`(v1, v2, v3, v4, v0) @signature `Lcom/huawei/hms/scankit/p/y;.<init>:(III[I)V` @kind direct;
  #L2a0dc4.  return v1 @kind object;
}
procedure `void` `c`(`com.huawei.hms.scankit.p.y` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/huawei/hms/scankit/p/y;.c:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a1220.  v0:= v3.`com.huawei.hms.scankit.p.y.c` @type ^`int`;
  #L2a1224.  v5:= v5 * v0 @kind int;
  #L2a1228.  v0:= v4 / 32;
  #L2a122c.  v5:= v5 + v0 @kind int;
  #L2a122e.  v0:= v3.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a1232.  call temp:= `a`(v0, v5) @signature `Lcom/huawei/hms/scankit/util/b;.a:([II)Z` @kind static;
  #L2a1238.  v0:= temp;
  #L2a123a.  if v0 == 0 then goto L2a1256;
  #L2a123e.  v0:= v3.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a1242.  v1:= v0[v5];
  #L2a1246.  v4:= v4 ^& 31;
  #L2a124a.  v2:= 1I;
  #L2a124c.  v4:= v2 ^< v4 @kind int;
  #L2a1250.  v4:= v4 ^| v1 @kind int;
  #L2a1252.  v0[v5]:= v4;
  #L2a1256.  return @kind void;
}
procedure `com.huawei.hms.scankit.p.y` `clone`(`com.huawei.hms.scankit.p.y` v5 @kind this) @signature `Lcom/huawei/hms/scankit/p/y;.clone:()Lcom/huawei/hms/scankit/p/y;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a0dd8.  v0:= new `com.huawei.hms.scankit.p.y`;
  #L2a0ddc.  v1:= v5.`com.huawei.hms.scankit.p.y.a` @type ^`int`;
  #L2a0de0.  v2:= v5.`com.huawei.hms.scankit.p.y.b` @type ^`int`;
  #L2a0de4.  v3:= v5.`com.huawei.hms.scankit.p.y.c` @type ^`int`;
  #L2a0de8.  v4:= v5.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a0dec.  call temp:= `clone`(v4) @signature `[I.clone:()Ljava/lang/Object;` @kind virtual;
  #L2a0df2.  v4:= temp @kind object;
  #L2a0df4.  v4:= (`int`[]) v4 @kind object;
  #L2a0df8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/huawei/hms/scankit/p/y;.<init>:(III[I)V` @kind direct;
  #L2a0dfe.  return v0 @kind object;
}
procedure `java.lang.Object` `clone`(`com.huawei.hms.scankit.p.y` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/y;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2a0f04.  call temp:= `clone`(v1) @signature `Lcom/huawei/hms/scankit/p/y;.clone:()Lcom/huawei/hms/scankit/p/y;` @kind virtual;
  #L2a0f0a.  v0:= temp @kind object;
  #L2a0f0c.  return v0 @kind object;
}
procedure `int` `d`(`com.huawei.hms.scankit.p.y` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/y;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a0ea8.  v0:= v1.`com.huawei.hms.scankit.p.y.a` @type ^`int`;
  #L2a0eac.  return v0;
}
procedure `void` `e`(`com.huawei.hms.scankit.p.y` v5 @kind this) @signature `Lcom/huawei/hms/scankit/p/y;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a1268.  call temp:= `d`(v5) @signature `Lcom/huawei/hms/scankit/p/y;.d:()I` @kind virtual;
  #L2a126e.  v0:= temp;
  #L2a1270.  call temp:= `b`(v5) @signature `Lcom/huawei/hms/scankit/p/y;.b:()I` @kind virtual;
  #L2a1276.  v1:= temp;
  #L2a1278.  v2:= new `com.huawei.hms.scankit.p.x`;
  #L2a127c.  call `<init>`(v2, v0) @signature `Lcom/huawei/hms/scankit/p/x;.<init>:(I)V` @kind direct;
  #L2a1282.  v3:= new `com.huawei.hms.scankit.p.x`;
  #L2a1286.  call `<init>`(v3, v0) @signature `Lcom/huawei/hms/scankit/p/x;.<init>:(I)V` @kind direct;
  #L2a128c.  v0:= 0I;
  #L2a128e.  v4:= v1 + 1;
  #L2a1292.  v4:= v4 / 2;
  #L2a1296.  if v0 >= v4 then goto L2a12ce;
  #L2a129a.  call temp:= `a`(v5, v0, v2) @signature `Lcom/huawei/hms/scankit/p/y;.a:(ILcom/huawei/hms/scankit/p/x;)Lcom/huawei/hms/scankit/p/x;` @kind virtual;
  #L2a12a0.  v2:= temp @kind object;
  #L2a12a2.  v4:= v1 + -1;
  #L2a12a6.  v4:= v4 - v0 @kind int;
  #L2a12a8.  call temp:= `a`(v5, v4, v3) @signature `Lcom/huawei/hms/scankit/p/y;.a:(ILcom/huawei/hms/scankit/p/x;)Lcom/huawei/hms/scankit/p/x;` @kind virtual;
  #L2a12ae.  v3:= temp @kind object;
  #L2a12b0.  call `g`(v2) @signature `Lcom/huawei/hms/scankit/p/x;.g:()V` @kind virtual;
  #L2a12b6.  call `g`(v3) @signature `Lcom/huawei/hms/scankit/p/x;.g:()V` @kind virtual;
  #L2a12bc.  call `b`(v5, v0, v3) @signature `Lcom/huawei/hms/scankit/p/y;.b:(ILcom/huawei/hms/scankit/p/x;)V` @kind virtual;
  #L2a12c2.  call `b`(v5, v4, v2) @signature `Lcom/huawei/hms/scankit/p/y;.b:(ILcom/huawei/hms/scankit/p/x;)V` @kind virtual;
  #L2a12c8.  v0:= v0 + 1;
  #L2a12cc.  goto L2a128e;
  #L2a12ce.  return @kind void;
}
procedure `boolean` `equals`(`com.huawei.hms.scankit.p.y` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/huawei/hms/scankit/p/y;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a0b94.  v0:= instanceof @variable v4 @type ^`com.huawei.hms.scankit.p.y` @kind boolean;
  #L2a0b98.  v1:= 0I;
  #L2a0b9a.  if v0 != 0 then goto L2a0ba0;
  #L2a0b9e.  return v1;
  #L2a0ba0.  v4:= (`com.huawei.hms.scankit.p.y`) v4 @kind object;
  #L2a0ba4.  v0:= v3.`com.huawei.hms.scankit.p.y.a` @type ^`int`;
  #L2a0ba8.  v2:= v4.`com.huawei.hms.scankit.p.y.a` @type ^`int`;
  #L2a0bac.  if v0 != v2 then goto L2a0bde;
  #L2a0bb0.  v0:= v3.`com.huawei.hms.scankit.p.y.b` @type ^`int`;
  #L2a0bb4.  v2:= v4.`com.huawei.hms.scankit.p.y.b` @type ^`int`;
  #L2a0bb8.  if v0 != v2 then goto L2a0bde;
  #L2a0bbc.  v0:= v3.`com.huawei.hms.scankit.p.y.c` @type ^`int`;
  #L2a0bc0.  v2:= v4.`com.huawei.hms.scankit.p.y.c` @type ^`int`;
  #L2a0bc4.  if v0 != v2 then goto L2a0bde;
  #L2a0bc8.  v0:= v3.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a0bcc.  v4:= v4.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a0bd0.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Arrays;.equals:([I[I)Z` @kind static;
  #L2a0bd6.  v4:= temp;
  #L2a0bd8.  if v4 == 0 then goto L2a0bde;
  #L2a0bdc.  v1:= 1I;
  #L2a0bde.  return v1;
}
procedure `int` `hashCode`(`com.huawei.hms.scankit.p.y` v2 @kind this) @signature `Lcom/huawei/hms/scankit/p/y;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a0ec0.  v0:= v2.`com.huawei.hms.scankit.p.y.a` @type ^`int`;
  #L2a0ec4.  v1:= v0 * 31;
  #L2a0ec8.  v1:= v1 + v0 @kind int;
  #L2a0eca.  v1:= v1 * 31;
  #L2a0ece.  v0:= v2.`com.huawei.hms.scankit.p.y.b` @type ^`int`;
  #L2a0ed2.  v1:= v1 + v0 @kind int;
  #L2a0ed4.  v1:= v1 * 31;
  #L2a0ed8.  v0:= v2.`com.huawei.hms.scankit.p.y.c` @type ^`int`;
  #L2a0edc.  v1:= v1 + v0 @kind int;
  #L2a0ede.  v1:= v1 * 31;
  #L2a0ee2.  v0:= v2.`com.huawei.hms.scankit.p.y.d` @type ^`int`[] @kind object;
  #L2a0ee6.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([I)I` @kind static;
  #L2a0eec.  v0:= temp;
  #L2a0eee.  v1:= v1 + v0 @kind int;
  #L2a0ef0.  return v1;
}
procedure `java.lang.String` `toString`(`com.huawei.hms.scankit.p.y` v2 @kind this) @signature `Lcom/huawei/hms/scankit/p/y;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a0fb4.  v0:= "X " @kind object;
  #L2a0fb8.  v1:= "  " @kind object;
  #L2a0fbc.  call temp:= `a`(v2, v0, v1) @signature `Lcom/huawei/hms/scankit/p/y;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2a0fc2.  v0:= temp @kind object;
  #L2a0fc4.  return v0 @kind object;
}
