record `com.huawei.hms.scankit.p.yc` @kind class @AccessFlag PUBLIC_FINAL {
  `com.huawei.hms.scankit.p.zc`[] `com.huawei.hms.scankit.p.yc.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.yc.b` @AccessFlag PRIVATE;
  `int` `com.huawei.hms.scankit.p.yc.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.yc.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.yc` v5 @kind this, `int` v6 , `int` v7 ) @signature `Lcom/huawei/hms/scankit/p/yc;.<init>:(II)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a0e10.  call `<init>`(v5) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a0e16.  v0:= new `com.huawei.hms.scankit.p.zc`[v6];
  #L2a0e1a.  v5.`com.huawei.hms.scankit.p.yc.a` @type ^`com.huawei.hms.scankit.p.zc`[] := v0 @kind object;
  #L2a0e1e.  v0:= length @variable v0;
  #L2a0e20.  v1:= 0I;
  #L2a0e22.  if v1 >= v0 then goto L2a0e4a;
  #L2a0e26.  v2:= v5.`com.huawei.hms.scankit.p.yc.a` @type ^`com.huawei.hms.scankit.p.zc`[] @kind object;
  #L2a0e2a.  v3:= new `com.huawei.hms.scankit.p.zc`;
  #L2a0e2e.  v4:= v7 + 4;
  #L2a0e32.  v4:= v4 * 17;
  #L2a0e36.  v4:= v4 + 1;
  #L2a0e3a.  call `<init>`(v3, v4) @signature `Lcom/huawei/hms/scankit/p/zc;.<init>:(I)V` @kind direct;
  #L2a0e40.  v2[v1]:= v3 @kind object;
  #L2a0e44.  v1:= v1 + 1;
  #L2a0e48.  goto L2a0e22;
  #L2a0e4a.  v7:= v7 * 17;
  #L2a0e4e.  v5.`com.huawei.hms.scankit.p.yc.d` @type ^`int` := v7;
  #L2a0e52.  v5.`com.huawei.hms.scankit.p.yc.c` @type ^`int` := v6;
  #L2a0e56.  v6:= -1I;
  #L2a0e58.  v5.`com.huawei.hms.scankit.p.yc.b` @type ^`int` := v6;
  #L2a0e5c.  return @kind void;
}
procedure `com.huawei.hms.scankit.p.zc` `a`(`com.huawei.hms.scankit.p.yc` v2 @kind this) @signature `Lcom/huawei/hms/scankit/p/yc;.a:()Lcom/huawei/hms/scankit/p/zc;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2a0cc8.  v0:= v2.`com.huawei.hms.scankit.p.yc.b` @type ^`int`;
  #L2a0ccc.  if v0 < 0 then goto L2a0cec;
  #L2a0cd0.  v0:= v2.`com.huawei.hms.scankit.p.yc.b` @type ^`int`;
  #L2a0cd4.  v1:= v2.`com.huawei.hms.scankit.p.yc.a` @type ^`com.huawei.hms.scankit.p.zc`[] @kind object;
  #L2a0cd8.  v1:= length @variable v1;
  #L2a0cda.  if v0 >= v1 then goto L2a0cec;
  #L2a0cde.  v0:= v2.`com.huawei.hms.scankit.p.yc.a` @type ^`com.huawei.hms.scankit.p.zc`[] @kind object;
  #L2a0ce2.  v1:= v2.`com.huawei.hms.scankit.p.yc.b` @type ^`int`;
  #L2a0ce6.  v0:= v0[v1] @kind object;
  #L2a0cea.  return v0 @kind object;
  #L2a0cec.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L2a0cf0.  call `<init>`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L2a0cf6.  throw v0;
  #L2a0cf8.  v0:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L2a0cfa.  throw v0;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L2a0cc8..L2a0cf8] goto L2a0cf8;
}
procedure `byte`[][] `a`(`com.huawei.hms.scankit.p.yc` v7 @kind this, `int` v8 , `int` v9 ) @signature `Lcom/huawei/hms/scankit/p/yc;.a:(II)[[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2a0c5c.  v0:= v7.`com.huawei.hms.scankit.p.yc.c` @type ^`int`;
  #L2a0c60.  v0:= v0 * v9 @kind int;
  #L2a0c64.  v1:= v7.`com.huawei.hms.scankit.p.yc.d` @type ^`int`;
  #L2a0c68.  v1:= v1 * v8 @kind int;
  #L2a0c6c.  v2:= 2I;
  #L2a0c6e.  v2:= new `int`[v2];
  #L2a0c72.  v3:= 1I;
  #L2a0c74.  v2[v3]:= v1;
  #L2a0c78.  v1:= 0I;
  #L2a0c7a.  v2[v1]:= v0;
  #L2a0c7e.  v4:= constclass @type ^`byte` @kind object;
  #L2a0c82.  call temp:= `newInstance`(v4, v2) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;[I)Ljava/lang/Object;` @kind static;
  #L2a0c88.  v2:= temp @kind object;
  #L2a0c8a.  v2:= (`byte`[][]) v2 @kind object;
  #L2a0c8e.  if v1 >= v0 then goto L2a0cb6;
  #L2a0c92.  v4:= v0 - v1 @kind int;
  #L2a0c96.  v4:= v4 - v3 @kind int;
  #L2a0c98.  v5:= v7.`com.huawei.hms.scankit.p.yc.a` @type ^`com.huawei.hms.scankit.p.zc`[] @kind object;
  #L2a0c9c.  v6:= v1 / v9 @kind int;
  #L2a0ca0.  v5:= v5[v6] @kind object;
  #L2a0ca4.  call temp:= `a`(v5, v8) @signature `Lcom/huawei/hms/scankit/p/zc;.a:(I)[B` @kind virtual;
  #L2a0caa.  v5:= temp @kind object;
  #L2a0cac.  v2[v4]:= v5 @kind object;
  #L2a0cb0.  v1:= v1 + 1;
  #L2a0cb4.  goto L2a0c8e;
  #L2a0cb6.  return v2 @kind object;
}
procedure `void` `b`(`com.huawei.hms.scankit.p.yc` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/yc;.b:()V` @AccessFlag  {
    temp;
    v0;

  #L2a0e70.  v0:= v1.`com.huawei.hms.scankit.p.yc.b` @type ^`int`;
  #L2a0e74.  v0:= v0 + 1;
  #L2a0e78.  v1.`com.huawei.hms.scankit.p.yc.b` @type ^`int` := v0;
  #L2a0e7c.  return @kind void;
}
