record `com.huawei.hms.scankit.p.pc` @kind class @AccessFlag PUBLIC extends `com.huawei.hms.scankit.p.tc` @kind class {
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.pc` v0 @kind this) @signature `Lcom/huawei/hms/scankit/p/pc;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L294690.  call `<init>`(v0) @signature `Lcom/huawei/hms/scankit/p/tc;.<init>:()V` @kind direct;
  #L294696.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v6 @kind object, `int` v7 ) @signature `Lcom/huawei/hms/scankit/p/pc;.a:(Ljava/lang/String;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L29463c.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L294642.  v0:= temp;
  #L294644.  v1:= 1I;
  #L294646.  v0:= v0 - v1 @kind int;
  #L294648.  v2:= 0I;
  #L29464a.  v3:= 1I;
  #L29464c.  if v0 < 0 then goto L294678;
  #L294650.  call temp:= `charAt`(v6, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L294656.  v4:= temp;
  #L294658.  v5:= "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%abcd*" @kind object;
  #L29465c.  call temp:= `indexOf`(v5, v4) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L294662.  v4:= temp;
  #L294664.  v4:= v4 * v3 @kind int;
  #L294668.  v2:= v2 + v4 @kind int;
  #L29466a.  v3:= v3 + v1 @kind int;
  #L29466c.  if v3 <= v7 then goto L294672;
  #L294670.  v3:= 1I;
  #L294672.  v0:= v0 + -1;
  #L294676.  goto L29464c;
  #L294678.  v2:= v2 %% 47;
  #L29467c.  return v2;
}
procedure `int` `a`(`boolean`[] v5 @kind object, `int` v6 , `int`[] v7 @kind object) @signature `Lcom/huawei/hms/scankit/p/pc;.a:([ZI[I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2945fc.  v0:= length @variable v7;
  #L2945fe.  v1:= 0I;
  #L294600.  v2:= 0I;
  #L294602.  if v2 >= v0 then goto L294624;
  #L294606.  v3:= v7[v2];
  #L29460a.  v4:= v6 + 1;
  #L29460e.  if v3 == 0 then goto L294616;
  #L294612.  v3:= 1I;
  #L294614.  goto L294618;
  #L294616.  v3:= 0I;
  #L294618.  v5[v6]:= v3 @kind boolean;
  #L29461c.  v2:= v2 + 1;
  #L294620.  v6:= v4;
  #L294622.  goto L294602;
  #L294624.  v5:= 9I;
  #L294628.  return v5;
}
procedure `void` `a`(`int` v4 , `int`[] v5 @kind object) @signature `Lcom/huawei/hms/scankit/p/pc;.a:(I[I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2946a8.  v0:= 0I;
  #L2946aa.  v1:= 0I;
  #L2946ac.  v2:= 9I;
  #L2946b0.  if v1 >= v2 then goto L2946d0;
  #L2946b4.  v2:= v1 - 8;
  #L2946b8.  v3:= 1I;
  #L2946ba.  v2:= v3 ^< v2 @kind int;
  #L2946be.  v2:= v2 ^& v4 @kind int;
  #L2946c0.  if v2 != 0 then goto L2946c6;
  #L2946c4.  v3:= 0I;
  #L2946c6.  v5[v1]:= v3;
  #L2946ca.  v1:= v1 + 1;
  #L2946ce.  goto L2946ac;
  #L2946d0.  return @kind void;
}
procedure `com.huawei.hms.scankit.p.y` `a`(`com.huawei.hms.scankit.p.pc` v1 @kind this, `java.lang.String` v2 @kind object, `com.huawei.hms.scankit.aiscan.common.BarcodeFormat` v3 @kind object, `int` v4 , `int` v5 , `java.util.Map` v6 @kind object) @signature `Lcom/huawei/hms/scankit/p/pc;.a:(Ljava/lang/String;Lcom/huawei/hms/scankit/aiscan/common/BarcodeFormat;IILjava/util/Map;)Lcom/huawei/hms/scankit/p/y;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2945ac.  v0:= `@@com.huawei.hms.scankit.aiscan.common.BarcodeFormat.d` @type ^`com.huawei.hms.scankit.aiscan.common.BarcodeFormat` @kind object;
  #L2945b0.  if v3 != v0 then goto L2945be;
  #L2945b4.  call temp:= `a`(v1, v2, v3, v4, v5, v6) @signature `Lcom/huawei/hms/scankit/p/tc;.a:(Ljava/lang/String;Lcom/huawei/hms/scankit/aiscan/common/BarcodeFormat;IILjava/util/Map;)Lcom/huawei/hms/scankit/p/y;` @kind super;
  #L2945ba.  v2:= temp @kind object;
  #L2945bc.  return v2 @kind object;
  #L2945be.  v2:= new `java.lang.IllegalArgumentException`;
  #L2945c2.  v4:= new `java.lang.StringBuilder`;
  #L2945c6.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2945cc.  v5:= "Can only encode CODE_93, but got " @kind object;
  #L2945d0.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2945d6.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2945dc.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2945e2.  v3:= temp @kind object;
  #L2945e4.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2945ea.  throw v2;
}
procedure `boolean`[] `a`(`com.huawei.hms.scankit.p.pc` v9 @kind this, `java.lang.String` v10 @kind object) @signature `Lcom/huawei/hms/scankit/p/pc;.a:(Ljava/lang/String;)[Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L294448.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L29444e.  v0:= temp;
  #L294450.  v1:= 80I;
  #L294454.  if v0 > v1 then goto L29456e;
  #L294458.  v1:= 9I;
  #L29445c.  v2:= new `int`[v1];
  #L294460.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L294466.  v3:= temp;
  #L294468.  v3:= v3 + 2;
  #L29446c.  v3:= v3 + 2;
  #L294470.  v3:= v3 * 9;
  #L294474.  v1:= 1I;
  #L294476.  v3:= v3 + v1 @kind int;
  #L294478.  v4:= `@@com.huawei.hms.scankit.p.S.b` @type ^`int`[] @kind object;
  #L29447c.  v5:= 47I;
  #L294480.  v4:= v4[v5];
  #L294484.  call `a`(v4, v2) @signature `Lcom/huawei/hms/scankit/p/pc;.a:(I[I)V` @kind static;
  #L29448a.  v3:= new `boolean`[v3];
  #L29448e.  v4:= 0I;
  #L294490.  call temp:= `a`(v3, v4, v2) @signature `Lcom/huawei/hms/scankit/p/pc;.a:([ZI[I)I` @kind static;
  #L294496.  v6:= temp;
  #L294498.  v7:= "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%abcd*" @kind object;
  #L29449c.  if v4 >= v0 then goto L2944e2;
  #L2944a0.  call temp:= `charAt`(v10, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2944a6.  v8:= temp;
  #L2944a8.  call temp:= `indexOf`(v7, v8) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L2944ae.  v7:= temp;
  #L2944b0.  if v7 < 0 then goto L2944d2;
  #L2944b4.  v8:= `@@com.huawei.hms.scankit.p.S.b` @type ^`int`[] @kind object;
  #L2944b8.  v7:= v8[v7];
  #L2944bc.  call `a`(v7, v2) @signature `Lcom/huawei/hms/scankit/p/pc;.a:(I[I)V` @kind static;
  #L2944c2.  call temp:= `a`(v3, v6, v2) @signature `Lcom/huawei/hms/scankit/p/pc;.a:([ZI[I)I` @kind static;
  #L2944c8.  v7:= temp;
  #L2944ca.  v6:= v6 + v7 @kind int;
  #L2944cc.  v4:= v4 + 1;
  #L2944d0.  goto L294498;
  #L2944d2.  v10:= new `java.lang.IllegalArgumentException`;
  #L2944d6.  v0:= "Bad contents: please check contents" @kind object;
  #L2944da.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2944e0.  throw v10;
  #L2944e2.  v0:= 20I;
  #L2944e6.  call temp:= `a`(v10, v0) @signature `Lcom/huawei/hms/scankit/p/pc;.a:(Ljava/lang/String;I)I` @kind static;
  #L2944ec.  v0:= temp;
  #L2944ee.  v4:= `@@com.huawei.hms.scankit.p.S.b` @type ^`int`[] @kind object;
  #L2944f2.  v4:= v4[v0];
  #L2944f6.  call `a`(v4, v2) @signature `Lcom/huawei/hms/scankit/p/pc;.a:(I[I)V` @kind static;
  #L2944fc.  call temp:= `a`(v3, v6, v2) @signature `Lcom/huawei/hms/scankit/p/pc;.a:([ZI[I)I` @kind static;
  #L294502.  v4:= temp;
  #L294504.  v6:= v6 + v4 @kind int;
  #L294506.  v4:= new `java.lang.StringBuilder`;
  #L29450a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L294510.  call temp:= `append`(v4, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L294516.  call temp:= `charAt`(v7, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L29451c.  v10:= temp;
  #L29451e.  call temp:= `append`(v4, v10) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L294524.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29452a.  v10:= temp @kind object;
  #L29452c.  v0:= 15I;
  #L294530.  call temp:= `a`(v10, v0) @signature `Lcom/huawei/hms/scankit/p/pc;.a:(Ljava/lang/String;I)I` @kind static;
  #L294536.  v10:= temp;
  #L294538.  v0:= `@@com.huawei.hms.scankit.p.S.b` @type ^`int`[] @kind object;
  #L29453c.  v10:= v0[v10];
  #L294540.  call `a`(v10, v2) @signature `Lcom/huawei/hms/scankit/p/pc;.a:(I[I)V` @kind static;
  #L294546.  call temp:= `a`(v3, v6, v2) @signature `Lcom/huawei/hms/scankit/p/pc;.a:([ZI[I)I` @kind static;
  #L29454c.  v10:= temp;
  #L29454e.  v6:= v6 + v10 @kind int;
  #L294550.  v10:= `@@com.huawei.hms.scankit.p.S.b` @type ^`int`[] @kind object;
  #L294554.  v10:= v10[v5];
  #L294558.  call `a`(v10, v2) @signature `Lcom/huawei/hms/scankit/p/pc;.a:(I[I)V` @kind static;
  #L29455e.  call temp:= `a`(v3, v6, v2) @signature `Lcom/huawei/hms/scankit/p/pc;.a:([ZI[I)I` @kind static;
  #L294564.  v10:= temp;
  #L294566.  v6:= v6 + v10 @kind int;
  #L294568.  v3[v6]:= v1 @kind boolean;
  #L29456c.  return v3 @kind object;
  #L29456e.  v10:= new `java.lang.IllegalArgumentException`;
  #L294572.  v1:= new `java.lang.StringBuilder`;
  #L294576.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29457c.  v2:= "Requested contents should be less than 80 digits long, but got " @kind object;
  #L294580.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L294586.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29458c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L294592.  v0:= temp @kind object;
  #L294594.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29459a.  throw v10;
}
