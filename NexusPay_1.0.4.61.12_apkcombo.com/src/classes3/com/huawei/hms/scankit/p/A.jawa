record `com.huawei.hms.scankit.p.A` @kind class @AccessFlag PUBLIC extends `com.huawei.hms.scankit.p.v` @kind class {
  `byte`[] `com.huawei.hms.scankit.p.A.d` @AccessFlag PRIVATE;
  `int`[] `com.huawei.hms.scankit.p.A.e` @AccessFlag PRIVATE_FINAL;
}
global `byte`[] `@@com.huawei.hms.scankit.p.A.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.huawei.hms.scankit.p.A.c` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/scankit/p/A;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L267bfc.  v0:= 0I;
  #L267bfe.  v0:= new `byte`[v0];
  #L267c02.  `@@com.huawei.hms.scankit.p.A.b` @type ^`byte`[] := v0 @kind object;
  #L267c06.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.A` v0 @kind this, `com.huawei.hms.scankit.aiscan.common.m` v1 @kind object) @signature `Lcom/huawei/hms/scankit/p/A;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/m;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L267c18.  call `<init>`(v0, v1) @signature `Lcom/huawei/hms/scankit/p/v;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/m;)V` @kind direct;
  #L267c1e.  v1:= `@@com.huawei.hms.scankit.p.A.b` @type ^`byte`[] @kind object;
  #L267c22.  v0.`com.huawei.hms.scankit.p.A.d` @type ^`byte`[] := v1 @kind object;
  #L267c26.  v1:= 32I;
  #L267c2a.  v1:= new `int`[v1];
  #L267c2e.  v0.`com.huawei.hms.scankit.p.A.e` @type ^`int`[] := v1 @kind object;
  #L267c32.  return @kind void;
}
procedure `int` `a`(`int`[] v11 @kind object, `boolean` v12 ) @signature `Lcom/huawei/hms/scankit/p/A;.a:([IZ)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L267b14.  v0:= length @variable v11;
  #L267b16.  v1:= 0I;
  #L267b18.  v2:= 0I;
  #L267b1a.  v3:= 0I;
  #L267b1c.  v4:= 0I;
  #L267b1e.  v5:= 0I;
  #L267b20.  if v2 >= v0 then goto L267b44;
  #L267b24.  v6:= v11[v2];
  #L267b28.  if v6 <= v3 then goto L267b32;
  #L267b2c.  v3:= v11[v2];
  #L267b30.  v5:= v2;
  #L267b32.  v6:= v11[v2];
  #L267b36.  if v6 <= v4 then goto L267b3e;
  #L267b3a.  v4:= v11[v2];
  #L267b3e.  v2:= v2 + 1;
  #L267b42.  goto L267b20;
  #L267b44.  v2:= 0I;
  #L267b46.  v3:= 0I;
  #L267b48.  v6:= 0I;
  #L267b4a.  if v2 >= v0 then goto L267b6c;
  #L267b4e.  v7:= v2 - v5 @kind int;
  #L267b52.  v8:= v11[v2];
  #L267b56.  v8:= v8 * v7 @kind int;
  #L267b5a.  v8:= v8 * v7 @kind int;
  #L267b5e.  if v8 <= v6 then goto L267b66;
  #L267b62.  v3:= v2;
  #L267b64.  v6:= v8;
  #L267b66.  v2:= v2 + 1;
  #L267b6a.  goto L267b4a;
  #L267b6c.  if v5 <= v3 then goto L267b72;
  #L267b70.  goto L267b78;
  #L267b72.  v10:= v5;
  #L267b74.  v5:= v3;
  #L267b76.  v3:= v10;
  #L267b78.  v2:= v5 - v3 @kind int;
  #L267b7c.  v0:= v0 / 16;
  #L267b80.  if v2 <= v0 then goto L267be2;
  #L267b84.  v0:= v5 + -1;
  #L267b88.  v6:= -1I;
  #L267b8a.  v6:= v0;
  #L267b8c.  v7:= -1I;
  #L267b8e.  if v0 <= v3 then goto L267bbc;
  #L267b92.  v8:= v0 - v3 @kind int;
  #L267b96.  v8:= v8 * v8 @kind int;
  #L267b9a.  v9:= v5 - v0 @kind int;
  #L267b9e.  v8:= v8 * v9 @kind int;
  #L267ba2.  v9:= v11[v0];
  #L267ba6.  v9:= v4 - v9 @kind int;
  #L267baa.  v8:= v8 * v9 @kind int;
  #L267bae.  if v8 <= v7 then goto L267bb6;
  #L267bb2.  v6:= v0;
  #L267bb4.  v7:= v8;
  #L267bb6.  v0:= v0 + -1;
  #L267bba.  goto L267b8e;
  #L267bbc.  if v12 == 0 then goto L267bdc;
  #L267bc0.  v11:= 10I;
  #L267bc4.  if v6 >= v11 then goto L267bd8;
  #L267bc8.  v12:= 100000I;
  #L267bce.  if v7 >= v12 then goto L267bd8;
  #L267bd2.  if v2 >= v11 then goto L267bd8;
  #L267bd6.  v1:= 1I;
  #L267bd8.  `@@com.huawei.hms.scankit.p._a.o` @type ^`boolean` := v1 @kind boolean;
  #L267bdc.  v11:= v6 ^< 3;
  #L267be0.  return v11;
  #L267be2.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L267be8.  v11:= temp @kind object;
  #L267bea.  throw v11;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.A` v2 @kind this, `int` v3 ) @signature `Lcom/huawei/hms/scankit/p/A;.a:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L267c44.  v0:= v2.`com.huawei.hms.scankit.p.A.d` @type ^`byte`[] @kind object;
  #L267c48.  v0:= length @variable v0;
  #L267c4a.  if v0 >= v3 then goto L267c56;
  #L267c4e.  v3:= new `byte`[v3];
  #L267c52.  v2.`com.huawei.hms.scankit.p.A.d` @type ^`byte`[] := v3 @kind object;
  #L267c56.  v3:= 0I;
  #L267c58.  v0:= 0I;
  #L267c5a.  v1:= 32I;
  #L267c5e.  if v0 >= v1 then goto L267c70;
  #L267c62.  v1:= v2.`com.huawei.hms.scankit.p.A.e` @type ^`int`[] @kind object;
  #L267c66.  v1[v0]:= v3;
  #L267c6a.  v0:= v0 + 1;
  #L267c6e.  goto L267c5a;
  #L267c70.  return @kind void;
}
procedure `com.huawei.hms.scankit.p.v` `a`(`com.huawei.hms.scankit.p.A` v1 @kind this, `com.huawei.hms.scankit.aiscan.common.m` v2 @kind object) @signature `Lcom/huawei/hms/scankit/p/A;.a:(Lcom/huawei/hms/scankit/aiscan/common/m;)Lcom/huawei/hms/scankit/p/v;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26786c.  v0:= new `com.huawei.hms.scankit.p.A`;
  #L267870.  call `<init>`(v0, v2) @signature `Lcom/huawei/hms/scankit/p/A;.<init>:(Lcom/huawei/hms/scankit/aiscan/common/m;)V` @kind direct;
  #L267876.  return v0 @kind object;
}
procedure `com.huawei.hms.scankit.p.x` `a`(`com.huawei.hms.scankit.p.A` v10 @kind this, `int` v11 , `com.huawei.hms.scankit.p.x` v12 @kind object) @signature `Lcom/huawei/hms/scankit/p/A;.a:(ILcom/huawei/hms/scankit/p/x;)Lcom/huawei/hms/scankit/p/x;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L267888.  call temp:= `c`(v10) @signature `Lcom/huawei/hms/scankit/p/v;.c:()Lcom/huawei/hms/scankit/aiscan/common/m;` @kind virtual;
  #L26788e.  v0:= temp @kind object;
  #L267890.  call temp:= `c`(v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.c:()I` @kind virtual;
  #L267896.  v1:= temp;
  #L267898.  if v12 == 0 then goto L2678b2;
  #L26789c.  call temp:= `d`(v12) @signature `Lcom/huawei/hms/scankit/p/x;.d:()I` @kind virtual;
  #L2678a2.  v2:= temp;
  #L2678a4.  if v2 >= v1 then goto L2678aa;
  #L2678a8.  goto L2678b2;
  #L2678aa.  call `a`(v12) @signature `Lcom/huawei/hms/scankit/p/x;.a:()V` @kind virtual;
  #L2678b0.  goto L2678bc;
  #L2678b2.  v12:= new `com.huawei.hms.scankit.p.x`;
  #L2678b6.  call `<init>`(v12, v1) @signature `Lcom/huawei/hms/scankit/p/x;.<init>:(I)V` @kind direct;
  #L2678bc.  call `a`(v10, v1) @signature `Lcom/huawei/hms/scankit/p/A;.a:(I)V` @kind direct;
  #L2678c2.  v2:= v10.`com.huawei.hms.scankit.p.A.d` @type ^`byte`[] @kind object;
  #L2678c6.  call temp:= `a`(v0, v11, v2) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.a:(I[B)[B` @kind virtual;
  #L2678cc.  v11:= temp @kind object;
  #L2678ce.  v0:= v10.`com.huawei.hms.scankit.p.A.e` @type ^`int`[] @kind object;
  #L2678d2.  v2:= 0I;
  #L2678d4.  v3:= 0I;
  #L2678d6.  v4:= 3I;
  #L2678d8.  v5:= 1I;
  #L2678da.  if v3 >= v1 then goto L2678fa;
  #L2678de.  v6:= v11[v3] @kind byte;
  #L2678e2.  v6:= v6 ^& 255;
  #L2678e6.  v4:= v6 ^> 3;
  #L2678ea.  v6:= v0[v4];
  #L2678ee.  v6:= v6 + v5 @kind int;
  #L2678f0.  v0[v4]:= v6;
  #L2678f4.  v3:= v3 + 1;
  #L2678f8.  goto L2678d6;
  #L2678fa.  call temp:= `a`(v0, v2) @signature `Lcom/huawei/hms/scankit/p/A;.a:([IZ)I` @kind static;
  #L267900.  v0:= temp;
  #L267902.  if v1 >= v4 then goto L267922;
  #L267906.  if v2 >= v1 then goto L26796c;
  #L26790a.  v3:= v11[v2] @kind byte;
  #L26790e.  v3:= v3 ^& 255;
  #L267912.  if v3 >= v0 then goto L26791c;
  #L267916.  call `d`(v12, v2) @signature `Lcom/huawei/hms/scankit/p/x;.d:(I)V` @kind virtual;
  #L26791c.  v2:= v2 + 1;
  #L267920.  goto L267906;
  #L267922.  v2:= v11[v2] @kind byte;
  #L267926.  v2:= v2 ^& 255;
  #L26792a.  v3:= v11[v5] @kind byte;
  #L26792e.  v3:= v3 ^& 255;
  #L267932.  v4:= 1I;
  #L267934.  v9:= v3;
  #L267936.  v3:= v2;
  #L267938.  v2:= v9;
  #L26793a.  v6:= v1 + -1;
  #L26793e.  if v4 >= v6 then goto L26796c;
  #L267942.  v6:= v4 + 1;
  #L267946.  v7:= v11[v6] @kind byte;
  #L26794a.  v7:= v7 ^& 255;
  #L26794e.  v8:= v2 * 4;
  #L267952.  v8:= v8 - v3 @kind int;
  #L267954.  v8:= v8 - v7 @kind int;
  #L267956.  v8:= v8 / 2;
  #L26795a.  if v8 >= v0 then goto L267964;
  #L26795e.  call `d`(v12, v4) @signature `Lcom/huawei/hms/scankit/p/x;.d:(I)V` @kind virtual;
  #L267964.  v3:= v2;
  #L267966.  v4:= v6;
  #L267968.  v2:= v7;
  #L26796a.  goto L26793a;
  #L26796c.  return v12 @kind object;
}
procedure `com.huawei.hms.scankit.p.y` `a`(`com.huawei.hms.scankit.p.A` v14 @kind this) @signature `Lcom/huawei/hms/scankit/p/A;.a:()Lcom/huawei/hms/scankit/p/y;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L267980.  call temp:= `c`(v14) @signature `Lcom/huawei/hms/scankit/p/v;.c:()Lcom/huawei/hms/scankit/aiscan/common/m;` @kind virtual;
  #L267986.  v0:= temp @kind object;
  #L267988.  call temp:= `c`(v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.c:()I` @kind virtual;
  #L26798e.  v1:= temp;
  #L267990.  call temp:= `a`(v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.a:()I` @kind virtual;
  #L267996.  v2:= temp;
  #L267998.  call `a`(v14, v1) @signature `Lcom/huawei/hms/scankit/p/A;.a:(I)V` @kind direct;
  #L26799e.  v3:= v14.`com.huawei.hms.scankit.p.A.e` @type ^`int`[] @kind object;
  #L2679a2.  v4:= 1I;
  #L2679a4.  v5:= 1I;
  #L2679a6.  v6:= 5I;
  #L2679a8.  if v5 >= v6 then goto L2679ee;
  #L2679ac.  v7:= v2 * v5 @kind int;
  #L2679b0.  v7:= v7 / v6 @kind int;
  #L2679b2.  v8:= v14.`com.huawei.hms.scankit.p.A.d` @type ^`byte`[] @kind object;
  #L2679b6.  call temp:= `a`(v0, v7, v8) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.a:(I[B)[B` @kind virtual;
  #L2679bc.  v7:= temp @kind object;
  #L2679be.  v8:= v1 * 4;
  #L2679c2.  v8:= v8 / v6 @kind int;
  #L2679c4.  v6:= v1 / 5;
  #L2679c8.  if v6 >= v8 then goto L2679e8;
  #L2679cc.  v9:= v7[v6] @kind byte;
  #L2679d0.  v9:= v9 ^& 255;
  #L2679d4.  v9:= v9 ^> 3;
  #L2679d8.  v10:= v3[v9];
  #L2679dc.  v10:= v10 + v4 @kind int;
  #L2679de.  v3[v9]:= v10;
  #L2679e2.  v6:= v6 + 1;
  #L2679e6.  goto L2679c8;
  #L2679e8.  v5:= v5 + 1;
  #L2679ec.  goto L2679a6;
  #L2679ee.  call temp:= `a`(v3, v4) @signature `Lcom/huawei/hms/scankit/p/A;.a:([IZ)I` @kind static;
  #L2679f4.  v3:= temp;
  #L2679f6.  call temp:= `b`(v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.b:()[B` @kind virtual;
  #L2679fc.  v0:= temp @kind object;
  #L2679fe.  v5:= v1 + 31;
  #L267a02.  v5:= v5 / 32;
  #L267a06.  v6:= v5 * v2 @kind int;
  #L267a0a.  v6:= new `int`[v6];
  #L267a0e.  v7:= 0I;
  #L267a10.  v8:= 0I;
  #L267a12.  if v8 >= v2 then goto L267a58;
  #L267a16.  v9:= v8 * v1 @kind int;
  #L267a1a.  v10:= 0I;
  #L267a1c.  if v10 >= v1 then goto L267a52;
  #L267a20.  v11:= v9 + v10 @kind int;
  #L267a24.  v11:= v0[v11] @kind byte;
  #L267a28.  v11:= v11 ^& 255;
  #L267a2c.  if v11 >= v3 then goto L267a4c;
  #L267a30.  v11:= v8 * v5 @kind int;
  #L267a34.  v12:= v10 ^> 5;
  #L267a38.  v11:= v11 + v12 @kind int;
  #L267a3a.  v12:= v6[v11];
  #L267a3e.  v13:= v10 ^& 31;
  #L267a42.  v13:= v4 ^< v13 @kind int;
  #L267a46.  v12:= v12 ^| v13 @kind int;
  #L267a48.  v6[v11]:= v12;
  #L267a4c.  v10:= v10 + 1;
  #L267a50.  goto L267a1c;
  #L267a52.  v8:= v8 + 1;
  #L267a56.  goto L267a12;
  #L267a58.  v0:= new `com.huawei.hms.scankit.p.y`;
  #L267a5c.  call `<init>`(v0, v1, v2, v5, v6) @signature `Lcom/huawei/hms/scankit/p/y;.<init>:(III[I)V` @kind direct;
  #L267a62.  return v0 @kind object;
}
