record `com.huawei.hms.scankit.p.zc` @kind class @AccessFlag FINAL {
  `byte`[] `com.huawei.hms.scankit.p.zc.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.zc.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.zc` v0 @kind this, `int` v1 ) @signature `Lcom/huawei/hms/scankit/p/zc;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2a19f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a19fe.  v1:= new `byte`[v1];
  #L2a1a02.  v0.`com.huawei.hms.scankit.p.zc.a` @type ^`byte`[] := v1 @kind object;
  #L2a1a06.  v1:= 0I;
  #L2a1a08.  v0.`com.huawei.hms.scankit.p.zc.b` @type ^`int` := v1;
  #L2a1a0c.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.zc` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Lcom/huawei/hms/scankit/p/zc;.a:(IZ)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a1a50.  v0:= v1.`com.huawei.hms.scankit.p.zc.a` @type ^`byte`[] @kind object;
  #L2a1a54.  call temp:= `a`(v0, v2) @signature `Lcom/huawei/hms/scankit/util/b;.a:([BI)Z` @kind static;
  #L2a1a5a.  v0:= temp;
  #L2a1a5c.  if v0 == 0 then goto L2a1a6c;
  #L2a1a60.  v0:= v1.`com.huawei.hms.scankit.p.zc.a` @type ^`byte`[] @kind object;
  #L2a1a64.  v3:= (`byte`) v3 @kind i2b;
  #L2a1a66.  v0[v2]:= v3 @kind byte;
  #L2a1a6a.  return @kind void;
  #L2a1a6c.  v2:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L2a1a70.  call `<init>`(v2) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L2a1a76.  throw v2;
  #L2a1a78.  v2:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L2a1a7a.  throw v2;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L2a1a50..L2a1a78] goto L2a1a78;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.zc` v3 @kind this, `boolean` v4 , `int` v5 ) @signature `Lcom/huawei/hms/scankit/p/zc;.a:(ZI)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2a1a20.  v0:= 0I;
  #L2a1a22.  if v0 >= v5 then goto L2a1a3e;
  #L2a1a26.  v1:= v3.`com.huawei.hms.scankit.p.zc.b` @type ^`int`;
  #L2a1a2a.  v2:= v1 + 1;
  #L2a1a2e.  v3.`com.huawei.hms.scankit.p.zc.b` @type ^`int` := v2;
  #L2a1a32.  call `a`(v3, v1, v4) @signature `Lcom/huawei/hms/scankit/p/zc;.a:(IZ)V` @kind direct;
  #L2a1a38.  v0:= v0 + 1;
  #L2a1a3c.  goto L2a1a22;
  #L2a1a3e.  return @kind void;
}
procedure `byte`[] `a`(`com.huawei.hms.scankit.p.zc` v5 @kind this, `int` v6 ) @signature `Lcom/huawei/hms/scankit/p/zc;.a:(I)[B` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a19bc.  v0:= v5.`com.huawei.hms.scankit.p.zc.a` @type ^`byte`[] @kind object;
  #L2a19c0.  v0:= length @variable v0;
  #L2a19c2.  v0:= v0 * v6 @kind int;
  #L2a19c6.  v1:= new `byte`[v0];
  #L2a19ca.  v2:= 0I;
  #L2a19cc.  if v2 >= v0 then goto L2a19e6;
  #L2a19d0.  v3:= v5.`com.huawei.hms.scankit.p.zc.a` @type ^`byte`[] @kind object;
  #L2a19d4.  v4:= v2 / v6 @kind int;
  #L2a19d8.  v3:= v3[v4] @kind byte;
  #L2a19dc.  v1[v2]:= v3 @kind byte;
  #L2a19e0.  v2:= v2 + 1;
  #L2a19e4.  goto L2a19cc;
  #L2a19e6.  return v1 @kind object;
}
