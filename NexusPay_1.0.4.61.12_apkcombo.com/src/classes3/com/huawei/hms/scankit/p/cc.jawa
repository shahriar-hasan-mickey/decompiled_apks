record `com.huawei.hms.scankit.p.cc` @kind class @AccessFlag PUBLIC {
  `java.lang.CharSequence` `com.huawei.hms.scankit.p.cc.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.cc.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.cc.c` @AccessFlag PRIVATE_FINAL;
  `byte`[] `com.huawei.hms.scankit.p.cc.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.cc` v0 @kind this, `java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/huawei/hms/scankit/p/cc;.<init>:(Ljava/lang/CharSequence;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L289264.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28926a.  v0.`com.huawei.hms.scankit.p.cc.a` @type ^`java.lang.CharSequence` := v1 @kind object;
  #L28926e.  v0.`com.huawei.hms.scankit.p.cc.c` @type ^`int` := v2;
  #L289272.  v0.`com.huawei.hms.scankit.p.cc.b` @type ^`int` := v3;
  #L289276.  v2:= v2 * v3 @kind int;
  #L28927a.  v1:= new `byte`[v2];
  #L28927e.  v0.`com.huawei.hms.scankit.p.cc.d` @type ^`byte`[] := v1 @kind object;
  #L289282.  v2:= -1I;
  #L289284.  call `fill`(v1, v2) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L28928a.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.cc` v6 @kind this, `int` v7 ) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L289408.  v0:= v6.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L28940c.  v1:= 1I;
  #L28940e.  v0:= v0 - v1 @kind int;
  #L289410.  v2:= 0I;
  #L289412.  call `a`(v6, v0, v2, v7, v1) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L289418.  v0:= v6.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L28941c.  v0:= v0 - v1 @kind int;
  #L28941e.  v3:= 2I;
  #L289420.  call `a`(v6, v0, v1, v7, v3) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L289426.  v0:= v6.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L28942a.  v0:= v0 - v1 @kind int;
  #L28942c.  v4:= 3I;
  #L28942e.  call `a`(v6, v0, v3, v7, v4) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L289434.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L289438.  v0:= v0 - v3 @kind int;
  #L28943a.  v5:= 4I;
  #L28943c.  call `a`(v6, v2, v0, v7, v5) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L289442.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L289446.  v0:= v0 - v1 @kind int;
  #L289448.  v5:= 5I;
  #L28944a.  call `a`(v6, v2, v0, v7, v5) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L289450.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L289454.  v0:= v0 - v1 @kind int;
  #L289456.  v2:= 6I;
  #L289458.  call `a`(v6, v1, v0, v7, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L28945e.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L289462.  v0:= v0 - v1 @kind int;
  #L289464.  v2:= 7I;
  #L289466.  call `a`(v6, v3, v0, v7, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L28946c.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L289470.  v0:= v0 - v1 @kind int;
  #L289472.  v1:= 8I;
  #L289476.  call `a`(v6, v4, v0, v7, v1) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L28947c.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.cc` v4 @kind this, `int` v5 , `int` v6 , `int` v7 ) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(III)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2894b8.  v0:= v5 + -2;
  #L2894bc.  v1:= v6 + -2;
  #L2894c0.  v2:= 1I;
  #L2894c2.  call `a`(v4, v0, v1, v7, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2894c8.  v2:= v6 + -1;
  #L2894cc.  v3:= 2I;
  #L2894ce.  call `a`(v4, v0, v2, v7, v3) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2894d4.  v0:= v5 + -1;
  #L2894d8.  v3:= 3I;
  #L2894da.  call `a`(v4, v0, v1, v7, v3) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2894e0.  v3:= 4I;
  #L2894e2.  call `a`(v4, v0, v2, v7, v3) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2894e8.  v3:= 5I;
  #L2894ea.  call `a`(v4, v0, v6, v7, v3) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2894f0.  v0:= 6I;
  #L2894f2.  call `a`(v4, v5, v1, v7, v0) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2894f8.  v0:= 7I;
  #L2894fa.  call `a`(v4, v5, v2, v7, v0) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L289500.  v0:= 8I;
  #L289504.  call `a`(v4, v5, v6, v7, v0) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L28950a.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.cc` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L28951c.  if v2 >= 0 then goto L289534;
  #L289520.  v0:= v1.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L289524.  v2:= v2 + v0 @kind int;
  #L289526.  v0:= v0 + 4;
  #L28952a.  v0:= v0 %% 8;
  #L28952e.  v0:= v0 - 4;
  #L289532.  v3:= v3 + v0 @kind int;
  #L289534.  if v3 >= 0 then goto L28954c;
  #L289538.  v0:= v1.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L28953c.  v3:= v3 + v0 @kind int;
  #L28953e.  v0:= v0 + 4;
  #L289542.  v0:= v0 %% 8;
  #L289546.  v0:= v0 - 4;
  #L28954a.  v2:= v2 + v0 @kind int;
  #L28954c.  v0:= v1.`com.huawei.hms.scankit.p.cc.a` @type ^`java.lang.CharSequence` @kind object;
  #L289550.  call temp:= `charAt`(v0, v4) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L289556.  v4:= temp;
  #L289558.  v5:= v5 - 8;
  #L28955c.  v0:= 1I;
  #L28955e.  v5:= v0 ^< v5 @kind int;
  #L289562.  v4:= v4 ^& v5 @kind int;
  #L289564.  if v4 == 0 then goto L28956a;
  #L289568.  goto L28956c;
  #L28956a.  v0:= 0I;
  #L28956c.  call `a`(v1, v3, v2, v0) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIZ)V` @kind direct;
  #L289572.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.cc` v2 @kind this, `int` v3 , `int` v4 , `boolean` v5 ) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L289490.  v0:= v2.`com.huawei.hms.scankit.p.cc.d` @type ^`byte`[] @kind object;
  #L289494.  v1:= v2.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L289498.  v4:= v4 * v1 @kind int;
  #L28949c.  v4:= v4 + v3 @kind int;
  #L28949e.  v3:= (`byte`) v5 @kind i2b;
  #L2894a0.  v0[v4]:= v3 @kind byte;
  #L2894a4.  return @kind void;
}
procedure `void` `b`(`com.huawei.hms.scankit.p.cc` v6 @kind this, `int` v7 ) @signature `Lcom/huawei/hms/scankit/p/cc;.b:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L289584.  v0:= v6.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L289588.  v1:= 3I;
  #L28958a.  v0:= v0 - v1 @kind int;
  #L28958c.  v2:= 0I;
  #L28958e.  v3:= 1I;
  #L289590.  call `a`(v6, v0, v2, v7, v3) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L289596.  v0:= v6.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L28959a.  v4:= 2I;
  #L28959c.  v0:= v0 - v4 @kind int;
  #L28959e.  call `a`(v6, v0, v2, v7, v4) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2895a4.  v0:= v6.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L2895a8.  v0:= v0 - v3 @kind int;
  #L2895aa.  call `a`(v6, v0, v2, v7, v1) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2895b0.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2895b4.  v5:= 4I;
  #L2895b6.  v0:= v0 - v5 @kind int;
  #L2895b8.  call `a`(v6, v2, v0, v7, v5) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2895be.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2895c2.  v0:= v0 - v1 @kind int;
  #L2895c4.  v1:= 5I;
  #L2895c6.  call `a`(v6, v2, v0, v7, v1) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2895cc.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2895d0.  v0:= v0 - v4 @kind int;
  #L2895d2.  v1:= 6I;
  #L2895d4.  call `a`(v6, v2, v0, v7, v1) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2895da.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2895de.  v0:= v0 - v3 @kind int;
  #L2895e0.  v1:= 7I;
  #L2895e2.  call `a`(v6, v2, v0, v7, v1) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2895e8.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2895ec.  v0:= v0 - v3 @kind int;
  #L2895ee.  v1:= 8I;
  #L2895f2.  call `a`(v6, v3, v0, v7, v1) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2895f8.  return @kind void;
}
procedure `boolean` `b`(`com.huawei.hms.scankit.p.cc` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/huawei/hms/scankit/p/cc;.b:(II)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L289234.  v0:= v2.`com.huawei.hms.scankit.p.cc.d` @type ^`byte`[] @kind object;
  #L289238.  v1:= v2.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L28923c.  v4:= v4 * v1 @kind int;
  #L289240.  v4:= v4 + v3 @kind int;
  #L289242.  v3:= v0[v4] @kind byte;
  #L289246.  if v3 < 0 then goto L28924e;
  #L28924a.  v3:= 1I;
  #L28924c.  goto L289250;
  #L28924e.  v3:= 0I;
  #L289250.  return v3;
}
procedure `void` `c`(`com.huawei.hms.scankit.p.cc` v6 @kind this, `int` v7 ) @signature `Lcom/huawei/hms/scankit/p/cc;.c:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28960c.  v0:= v6.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L289610.  v1:= 3I;
  #L289612.  v0:= v0 - v1 @kind int;
  #L289614.  v2:= 0I;
  #L289616.  v3:= 1I;
  #L289618.  call `a`(v6, v0, v2, v7, v3) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L28961e.  v0:= v6.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L289622.  v4:= 2I;
  #L289624.  v0:= v0 - v4 @kind int;
  #L289626.  call `a`(v6, v0, v2, v7, v4) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L28962c.  v0:= v6.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L289630.  v0:= v0 - v3 @kind int;
  #L289632.  call `a`(v6, v0, v2, v7, v1) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L289638.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L28963c.  v0:= v0 - v4 @kind int;
  #L28963e.  v5:= 4I;
  #L289640.  call `a`(v6, v2, v0, v7, v5) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L289646.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L28964a.  v0:= v0 - v3 @kind int;
  #L28964c.  v5:= 5I;
  #L28964e.  call `a`(v6, v2, v0, v7, v5) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L289654.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L289658.  v0:= v0 - v3 @kind int;
  #L28965a.  v2:= 6I;
  #L28965c.  call `a`(v6, v3, v0, v7, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L289662.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L289666.  v0:= v0 - v3 @kind int;
  #L289668.  v2:= 7I;
  #L28966a.  call `a`(v6, v4, v0, v7, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L289670.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L289674.  v0:= v0 - v3 @kind int;
  #L289676.  v2:= 8I;
  #L28967a.  call `a`(v6, v1, v0, v7, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L289680.  return @kind void;
}
procedure `void` `d`(`com.huawei.hms.scankit.p.cc` v6 @kind this, `int` v7 ) @signature `Lcom/huawei/hms/scankit/p/cc;.d:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L289694.  v0:= v6.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L289698.  v1:= 1I;
  #L28969a.  v0:= v0 - v1 @kind int;
  #L28969c.  v2:= 0I;
  #L28969e.  call `a`(v6, v0, v2, v7, v1) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2896a4.  v0:= v6.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L2896a8.  v0:= v0 - v1 @kind int;
  #L2896aa.  v3:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2896ae.  v3:= v3 - v1 @kind int;
  #L2896b0.  v4:= 2I;
  #L2896b2.  call `a`(v6, v0, v3, v7, v4) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2896b8.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2896bc.  v3:= 3I;
  #L2896be.  v0:= v0 - v3 @kind int;
  #L2896c0.  call `a`(v6, v2, v0, v7, v3) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2896c6.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2896ca.  v0:= v0 - v4 @kind int;
  #L2896cc.  v5:= 4I;
  #L2896ce.  call `a`(v6, v2, v0, v7, v5) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2896d4.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2896d8.  v0:= v0 - v1 @kind int;
  #L2896da.  v5:= 5I;
  #L2896dc.  call `a`(v6, v2, v0, v7, v5) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2896e2.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2896e6.  v0:= v0 - v3 @kind int;
  #L2896e8.  v2:= 6I;
  #L2896ea.  call `a`(v6, v1, v0, v7, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2896f0.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2896f4.  v0:= v0 - v4 @kind int;
  #L2896f6.  v2:= 7I;
  #L2896f8.  call `a`(v6, v1, v0, v7, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L2896fe.  v0:= v6.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L289702.  v0:= v0 - v1 @kind int;
  #L289704.  v2:= 8I;
  #L289708.  call `a`(v6, v1, v0, v7, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIII)V` @kind direct;
  #L28970e.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.cc` v7 @kind this) @signature `Lcom/huawei/hms/scankit/p/cc;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L28929c.  v0:= 0I;
  #L28929e.  v1:= 4I;
  #L2892a0.  v2:= 0I;
  #L2892a2.  v3:= 4I;
  #L2892a4.  v4:= v7.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L2892a8.  if v3 != v4 then goto L2892bc;
  #L2892ac.  if v0 != 0 then goto L2892bc;
  #L2892b0.  v4:= v2 + 1;
  #L2892b4.  call `a`(v7, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(I)V` @kind direct;
  #L2892ba.  v2:= v4;
  #L2892bc.  v4:= v7.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L2892c0.  v5:= 2I;
  #L2892c2.  v4:= v4 - v5 @kind int;
  #L2892c4.  if v3 != v4 then goto L2892e2;
  #L2892c8.  if v0 != 0 then goto L2892e2;
  #L2892cc.  v4:= v7.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2892d0.  v4:= v4 %% v1 @kind int;
  #L2892d2.  if v4 == 0 then goto L2892e2;
  #L2892d6.  v4:= v2 + 1;
  #L2892da.  call `b`(v7, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.b:(I)V` @kind direct;
  #L2892e0.  v2:= v4;
  #L2892e2.  v4:= v7.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L2892e6.  v4:= v4 - v5 @kind int;
  #L2892e8.  if v3 != v4 then goto L289308;
  #L2892ec.  if v0 != 0 then goto L289308;
  #L2892f0.  v4:= v7.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2892f4.  v4:= v4 %% 8;
  #L2892f8.  if v4 != v1 then goto L289308;
  #L2892fc.  v4:= v2 + 1;
  #L289300.  call `c`(v7, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.c:(I)V` @kind direct;
  #L289306.  v2:= v4;
  #L289308.  v4:= v7.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L28930c.  v4:= v4 + v1 @kind int;
  #L28930e.  if v3 != v4 then goto L28932e;
  #L289312.  if v0 != v5 then goto L28932e;
  #L289316.  v4:= v7.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L28931a.  v4:= v4 %% 8;
  #L28931e.  if v4 != 0 then goto L28932e;
  #L289322.  v4:= v2 + 1;
  #L289326.  call `d`(v7, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.d:(I)V` @kind direct;
  #L28932c.  v2:= v4;
  #L28932e.  v4:= v7.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L289332.  if v3 >= v4 then goto L289352;
  #L289336.  if v0 < 0 then goto L289352;
  #L28933a.  call temp:= `b`(v7, v0, v3) @signature `Lcom/huawei/hms/scankit/p/cc;.b:(II)Z` @kind direct;
  #L289340.  v4:= temp;
  #L289342.  if v4 != 0 then goto L289352;
  #L289346.  v4:= v2 + 1;
  #L28934a.  call `a`(v7, v3, v0, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(III)V` @kind direct;
  #L289350.  v2:= v4;
  #L289352.  v3:= v3 + -2;
  #L289356.  v0:= v0 + 2;
  #L28935a.  if v3 < 0 then goto L289366;
  #L28935e.  v4:= v7.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L289362.  if v0 < v4 then goto L28932e;
  #L289366.  v3:= v3 + 1;
  #L28936a.  v0:= v0 + 3;
  #L28936e.  if v3 < 0 then goto L289392;
  #L289372.  v4:= v7.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L289376.  if v0 >= v4 then goto L289392;
  #L28937a.  call temp:= `b`(v7, v0, v3) @signature `Lcom/huawei/hms/scankit/p/cc;.b:(II)Z` @kind direct;
  #L289380.  v4:= temp;
  #L289382.  if v4 != 0 then goto L289392;
  #L289386.  v4:= v2 + 1;
  #L28938a.  call `a`(v7, v3, v0, v2) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(III)V` @kind direct;
  #L289390.  v2:= v4;
  #L289392.  v3:= v3 + 2;
  #L289396.  v0:= v0 + -2;
  #L28939a.  v4:= v7.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L28939e.  if v3 >= v4 then goto L2893a6;
  #L2893a2.  if v0 >= 0 then goto L28936e;
  #L2893a6.  v3:= v3 + 3;
  #L2893aa.  v0:= v0 + 1;
  #L2893ae.  v4:= v7.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L2893b2.  if v3 < v4 then goto L2892a4;
  #L2893b6.  v6:= v7.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2893ba.  if v0 < v6 then goto L2892a4;
  #L2893be.  v0:= 1I;
  #L2893c0.  v6:= v6 - v0 @kind int;
  #L2893c2.  v4:= v4 - v0 @kind int;
  #L2893c4.  call temp:= `b`(v7, v6, v4) @signature `Lcom/huawei/hms/scankit/p/cc;.b:(II)Z` @kind direct;
  #L2893ca.  v1:= temp;
  #L2893cc.  if v1 != 0 then goto L2893f4;
  #L2893d0.  v1:= v7.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2893d4.  v1:= v1 - v0 @kind int;
  #L2893d6.  v2:= v7.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L2893da.  v2:= v2 - v0 @kind int;
  #L2893dc.  call `a`(v7, v1, v2, v0) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIZ)V` @kind direct;
  #L2893e2.  v1:= v7.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L2893e6.  v1:= v1 - v5 @kind int;
  #L2893e8.  v2:= v7.`com.huawei.hms.scankit.p.cc.b` @type ^`int`;
  #L2893ec.  v2:= v2 - v5 @kind int;
  #L2893ee.  call `a`(v7, v1, v2, v0) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(IIZ)V` @kind direct;
  #L2893f4.  return @kind void;
}
procedure `boolean` `a`(`com.huawei.hms.scankit.p.cc` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/huawei/hms/scankit/p/cc;.a:(II)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L289204.  v0:= v2.`com.huawei.hms.scankit.p.cc.d` @type ^`byte`[] @kind object;
  #L289208.  v1:= v2.`com.huawei.hms.scankit.p.cc.c` @type ^`int`;
  #L28920c.  v4:= v4 * v1 @kind int;
  #L289210.  v4:= v4 + v3 @kind int;
  #L289212.  v3:= v0[v4] @kind byte;
  #L289216.  v4:= 1I;
  #L289218.  if v3 != v4 then goto L28921e;
  #L28921c.  goto L289220;
  #L28921e.  v4:= 0I;
  #L289220.  return v4;
}
