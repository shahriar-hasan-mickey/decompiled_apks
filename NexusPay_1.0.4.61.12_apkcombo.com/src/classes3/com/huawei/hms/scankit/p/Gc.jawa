record `com.huawei.hms.scankit.p.Gc` @kind class @AccessFlag PUBLIC_FINAL extends `com.huawei.hms.scankit.p.Pb` @kind interface {
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.Gc` v0 @kind this) @signature `Lcom/huawei/hms/scankit/p/Gc;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L26f2ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26f2f2.  return @kind void;
}
procedure `com.huawei.hms.scankit.p.y` `a`(`com.huawei.hms.scankit.p.Oc` v8 @kind object, `int` v9 , `int` v10 , `int` v11 , `boolean` v12 ) @signature `Lcom/huawei/hms/scankit/p/Gc;.a:(Lcom/huawei/hms/scankit/p/Oc;IIIZ)Lcom/huawei/hms/scankit/p/y;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L26edc4.  call temp:= `a`(v8) @signature `Lcom/huawei/hms/scankit/p/Oc;.a:()Lcom/huawei/hms/scankit/p/Ic;` @kind virtual;
  #L26edca.  v8:= temp @kind object;
  #L26edcc.  if v8 == 0 then goto L26ee90;
  #L26edd0.  call temp:= `c`(v8) @signature `Lcom/huawei/hms/scankit/p/Ic;.c:()I` @kind virtual;
  #L26edd6.  v0:= temp;
  #L26edd8.  call temp:= `b`(v8) @signature `Lcom/huawei/hms/scankit/p/Ic;.b:()I` @kind virtual;
  #L26edde.  v1:= temp;
  #L26ede0.  if v12 == 0 then goto L26ee0e;
  #L26ede4.  call temp:= `max`(v9, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L26edea.  v9:= temp;
  #L26edec.  call temp:= `max`(v10, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L26edf2.  v10:= temp;
  #L26edf4.  v11:= v11 * 2;
  #L26edf8.  v12:= v9 - v11 @kind int;
  #L26edfc.  v12:= v12 / v0 @kind int;
  #L26edfe.  v11:= v10 - v11 @kind int;
  #L26ee02.  v11:= v11 / v1 @kind int;
  #L26ee04.  call temp:= `min`(v12, v11) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L26ee0a.  v11:= temp;
  #L26ee0c.  goto L26ee38;
  #L26ee0e.  v11:= v11 * 2;
  #L26ee12.  v12:= v0 + v11 @kind int;
  #L26ee16.  v11:= v11 + v1 @kind int;
  #L26ee18.  call temp:= `max`(v9, v12) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L26ee1e.  v9:= temp;
  #L26ee20.  call temp:= `max`(v10, v11) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L26ee26.  v10:= temp;
  #L26ee28.  v12:= v9 / v12 @kind int;
  #L26ee2c.  v11:= v10 / v11 @kind int;
  #L26ee30.  call temp:= `min`(v12, v11) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L26ee36.  v11:= temp;
  #L26ee38.  v12:= v0 * v11 @kind int;
  #L26ee3c.  v12:= v9 - v12 @kind int;
  #L26ee40.  v12:= v12 / 2;
  #L26ee44.  v2:= v1 * v11 @kind int;
  #L26ee48.  v2:= v10 - v2 @kind int;
  #L26ee4c.  v2:= v2 / 2;
  #L26ee50.  v3:= new `com.huawei.hms.scankit.p.y`;
  #L26ee54.  call `<init>`(v3, v9, v10) @signature `Lcom/huawei/hms/scankit/p/y;.<init>:(II)V` @kind direct;
  #L26ee5a.  v9:= 0I;
  #L26ee5c.  v10:= 0I;
  #L26ee5e.  if v10 >= v1 then goto L26ee8e;
  #L26ee62.  v5:= v12;
  #L26ee64.  v4:= 0I;
  #L26ee66.  if v4 >= v0 then goto L26ee86;
  #L26ee6a.  call temp:= `a`(v8, v4, v10) @signature `Lcom/huawei/hms/scankit/p/Ic;.a:(II)B` @kind virtual;
  #L26ee70.  v6:= temp;
  #L26ee72.  v7:= 1I;
  #L26ee74.  if v6 != v7 then goto L26ee7e;
  #L26ee78.  call `a`(v3, v5, v2, v11, v11) @signature `Lcom/huawei/hms/scankit/p/y;.a:(IIII)V` @kind virtual;
  #L26ee7e.  v4:= v4 + 1;
  #L26ee82.  v5:= v5 + v11 @kind int;
  #L26ee84.  goto L26ee66;
  #L26ee86.  v10:= v10 + 1;
  #L26ee8a.  v2:= v2 + v11 @kind int;
  #L26ee8c.  goto L26ee5e;
  #L26ee8e.  return v3 @kind object;
  #L26ee90.  v8:= new `java.lang.IllegalStateException`;
  #L26ee94.  call `<init>`(v8) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L26ee9a.  throw v8;
}
procedure `com.huawei.hms.scankit.p.y` `a`(`com.huawei.hms.scankit.p.Gc` v3 @kind this, `java.lang.String` v4 @kind object, `com.huawei.hms.scankit.aiscan.common.BarcodeFormat` v5 @kind object, `int` v6 , `int` v7 , `java.util.Map` v8 @kind object) @signature `Lcom/huawei/hms/scankit/p/Gc;.a:(Ljava/lang/String;Lcom/huawei/hms/scankit/aiscan/common/BarcodeFormat;IILjava/util/Map;)Lcom/huawei/hms/scankit/p/y;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L26eeac.  call temp:= `isEmpty`(v4) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L26eeb2.  v0:= temp;
  #L26eeb4.  if v0 != 0 then goto L26efe0;
  #L26eeb8.  v0:= `@@com.huawei.hms.scankit.aiscan.common.BarcodeFormat.k` @type ^`com.huawei.hms.scankit.aiscan.common.BarcodeFormat` @kind object;
  #L26eebc.  if v5 != v0 then goto L26efb2;
  #L26eec0.  if v6 < 0 then goto L26ef74;
  #L26eec4.  if v7 < 0 then goto L26ef74;
  #L26eec8.  v5:= `@@com.huawei.hms.scankit.p.Pa.a` @type ^`com.huawei.hms.scankit.p.Pa` @kind object;
  #L26eecc.  v0:= 4I;
  #L26eece.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L26eed2.  if v8 == 0 then goto L26ef5a;
  #L26eed6.  v2:= `@@com.huawei.hms.scankit.p.Jc.a` @type ^`com.huawei.hms.scankit.p.Jc` @kind object;
  #L26eeda.  call temp:= `containsKey`(v8, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L26eee0.  v2:= temp;
  #L26eee2.  if v2 == 0 then goto L26ef02;
  #L26eee6.  v5:= `@@com.huawei.hms.scankit.p.Jc.a` @type ^`com.huawei.hms.scankit.p.Jc` @kind object;
  #L26eeea.  call temp:= `get`(v8, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L26eef0.  v5:= temp @kind object;
  #L26eef2.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L26eef8.  v5:= temp @kind object;
  #L26eefa.  call temp:= `valueOf`(v5) @signature `Lcom/huawei/hms/scankit/p/Pa;.valueOf:(Ljava/lang/String;)Lcom/huawei/hms/scankit/p/Pa;` @kind static;
  #L26ef00.  v5:= temp @kind object;
  #L26ef02.  v2:= `@@com.huawei.hms.scankit.p.Jc.f` @type ^`com.huawei.hms.scankit.p.Jc` @kind object;
  #L26ef06.  call temp:= `containsKey`(v8, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L26ef0c.  v2:= temp;
  #L26ef0e.  if v2 == 0 then goto L26ef34;
  #L26ef12.  v0:= `@@com.huawei.hms.scankit.p.Jc.f` @type ^`com.huawei.hms.scankit.p.Jc` @kind object;
  #L26ef16.  call temp:= `get`(v8, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L26ef1c.  v0:= temp @kind object;
  #L26ef1e.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L26ef24.  v0:= temp @kind object;
  #L26ef26.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L26ef2c.  v0:= temp;
  #L26ef2e.  goto L26ef34;
  #L26ef30.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L26ef32.  throw v4;
  #L26ef34.  v2:= `@@com.huawei.hms.scankit.p.Jc.m` @type ^`com.huawei.hms.scankit.p.Jc` @kind object;
  #L26ef38.  call temp:= `containsKey`(v8, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L26ef3e.  v2:= temp;
  #L26ef40.  if v2 == 0 then goto L26ef5a;
  #L26ef44.  v1:= `@@com.huawei.hms.scankit.p.Jc.m` @type ^`com.huawei.hms.scankit.p.Jc` @kind object;
  #L26ef48.  call temp:= `get`(v8, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L26ef4e.  v1:= temp @kind object;
  #L26ef50.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L26ef54.  goto L26ef5a;
  #L26ef56.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L26ef58.  throw v4;
  #L26ef5a.  call temp:= `a`(v4, v5, v8) @signature `Lcom/huawei/hms/scankit/p/Lc;.a:(Ljava/lang/String;Lcom/huawei/hms/scankit/p/Pa;Ljava/util/Map;)Lcom/huawei/hms/scankit/p/Oc;` @kind static;
  #L26ef60.  v4:= temp @kind object;
  #L26ef62.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L26ef68.  v5:= temp;
  #L26ef6a.  call temp:= `a`(v4, v6, v7, v0, v5) @signature `Lcom/huawei/hms/scankit/p/Gc;.a:(Lcom/huawei/hms/scankit/p/Oc;IIIZ)Lcom/huawei/hms/scankit/p/y;` @kind static;
  #L26ef70.  v4:= temp @kind object;
  #L26ef72.  return v4 @kind object;
  #L26ef74.  v4:= new `java.lang.IllegalArgumentException`;
  #L26ef78.  v5:= new `java.lang.StringBuilder`;
  #L26ef7c.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L26ef82.  v8:= "Requested dimensions are too small: " @kind object;
  #L26ef86.  call temp:= `append`(v5, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26ef8c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L26ef92.  v6:= 120I;
  #L26ef96.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L26ef9c.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L26efa2.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L26efa8.  v5:= temp @kind object;
  #L26efaa.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26efb0.  throw v4;
  #L26efb2.  v4:= new `java.lang.IllegalArgumentException`;
  #L26efb6.  v6:= new `java.lang.StringBuilder`;
  #L26efba.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L26efc0.  v7:= "Can only encode QR_CODE, but got " @kind object;
  #L26efc4.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26efca.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26efd0.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L26efd6.  v5:= temp @kind object;
  #L26efd8.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26efde.  throw v4;
  #L26efe0.  v4:= new `java.lang.IllegalArgumentException`;
  #L26efe4.  v5:= "Found empty contents" @kind object;
  #L26efe8.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26efee.  throw v4;
  catch `java.lang.Exception` @[L26ef12..L26ef2e] goto L26ef30;
  catch `java.lang.Exception` @[L26ef44..L26ef54] goto L26ef56;
}
