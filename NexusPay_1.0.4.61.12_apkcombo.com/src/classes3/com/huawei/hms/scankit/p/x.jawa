record `com.huawei.hms.scankit.p.x` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Cloneable` @kind interface {
  `int`[] `com.huawei.hms.scankit.p.x.a` @AccessFlag PRIVATE;
  `int`[] `com.huawei.hms.scankit.p.x.b` @AccessFlag PRIVATE;
  `int` `com.huawei.hms.scankit.p.x.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.x` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/x;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a0364.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a036a.  v0:= 0I;
  #L2a036c.  v1.`com.huawei.hms.scankit.p.x.c` @type ^`int` := v0;
  #L2a0370.  v0:= 1I;
  #L2a0372.  v0:= new `int`[v0];
  #L2a0376.  v1.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] := v0 @kind object;
  #L2a037a.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.x` v0 @kind this, `int` v1 ) @signature `Lcom/huawei/hms/scankit/p/x;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a038c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a0392.  v0.`com.huawei.hms.scankit.p.x.c` @type ^`int` := v1;
  #L2a0396.  call temp:= `h`(v1) @signature `Lcom/huawei/hms/scankit/p/x;.h:(I)[I` @kind static;
  #L2a039c.  v1:= temp @kind object;
  #L2a039e.  v0.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] := v1 @kind object;
  #L2a03a2.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.x` v0 @kind this, `int`[] v1 @kind object, `int` v2 ) @signature `Lcom/huawei/hms/scankit/p/x;.<init>:([II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2a03b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a03ba.  v0.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] := v1 @kind object;
  #L2a03be.  v0.`com.huawei.hms.scankit.p.x.c` @type ^`int` := v2;
  #L2a03c2.  return @kind void;
}
procedure `void` `f`(`com.huawei.hms.scankit.p.x` v3 @kind this, `int` v4 ) @signature `Lcom/huawei/hms/scankit/p/x;.f:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2a071c.  v0:= v3.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a0720.  v0:= length @variable v0;
  #L2a0722.  v0:= v0 * 32;
  #L2a0726.  if v4 <= v0 then goto L2a0744;
  #L2a072a.  call temp:= `h`(v4) @signature `Lcom/huawei/hms/scankit/p/x;.h:(I)[I` @kind static;
  #L2a0730.  v4:= temp @kind object;
  #L2a0732.  v0:= v3.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a0736.  v1:= length @variable v0;
  #L2a0738.  v2:= 0I;
  #L2a073a.  call `arraycopy`(v0, v2, v4, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2a0740.  v3.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] := v4 @kind object;
  #L2a0744.  return @kind void;
}
procedure `int` `g`(`com.huawei.hms.scankit.p.x` v2 @kind this, `int` v3 ) @signature `Lcom/huawei/hms/scankit/p/x;.g:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2a0254.  v0:= 0I;
  #L2a0256.  if v3 <= 0 then goto L2a0266;
  #L2a025a.  v1:= v3 + -1;
  #L2a025e.  v3:= v3 ^& v1 @kind int;
  #L2a0260.  v0:= v0 + 1;
  #L2a0264.  goto L2a0256;
  #L2a0266.  return v0;
}
procedure `int`[] `h`(`int` v0 ) @signature `Lcom/huawei/hms/scankit/p/x;.h:(I)[I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L2a02b8.  v0:= v0 + 31;
  #L2a02bc.  v0:= v0 / 32;
  #L2a02c0.  v0:= new `int`[v0];
  #L2a02c4.  return v0 @kind object;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.x` v4 @kind this) @signature `Lcom/huawei/hms/scankit/p/x;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a03d4.  v0:= v4.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a03d8.  v0:= length @variable v0;
  #L2a03da.  v1:= 0I;
  #L2a03dc.  v2:= 0I;
  #L2a03de.  if v2 >= v0 then goto L2a03f0;
  #L2a03e2.  v3:= v4.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a03e6.  v3[v2]:= v1;
  #L2a03ea.  v2:= v2 + 1;
  #L2a03ee.  goto L2a03de;
  #L2a03f0.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.x` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/huawei/hms/scankit/p/x;.a:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a04e4.  if v4 < 0 then goto L2a0522;
  #L2a04e8.  v0:= 32I;
  #L2a04ec.  if v4 > v0 then goto L2a0522;
  #L2a04f0.  v0:= v2.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a04f4.  v0:= v0 + v4 @kind int;
  #L2a04f6.  call `f`(v2, v0) @signature `Lcom/huawei/hms/scankit/p/x;.f:(I)V` @kind direct;
  #L2a04fc.  if v4 <= 0 then goto L2a0520;
  #L2a0500.  v0:= v4 + -1;
  #L2a0504.  v0:= v3 ^> v0 @kind int;
  #L2a0508.  v1:= 1I;
  #L2a050a.  v0:= v0 ^& v1 @kind int;
  #L2a050c.  if v0 != v1 then goto L2a0512;
  #L2a0510.  goto L2a0514;
  #L2a0512.  v1:= 0I;
  #L2a0514.  call `a`(v2, v1) @signature `Lcom/huawei/hms/scankit/p/x;.a:(Z)V` @kind virtual;
  #L2a051a.  v4:= v4 + -1;
  #L2a051e.  goto L2a04fc;
  #L2a0520.  return @kind void;
  #L2a0522.  v3:= new `java.lang.IllegalArgumentException`;
  #L2a0526.  v4:= "Num bits must be between 0 and 32" @kind object;
  #L2a052a.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a0530.  throw v3;
  #L2a0532.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L2a0534.  throw v3;
  catch `java.lang.Exception` @[L2a0522..L2a0526] goto L2a0532;
  catch `java.lang.Exception` @[L2a052a..L2a0532] goto L2a0532;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.x` v6 @kind this, `int` v7 , `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I[BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2a048c.  v0:= 0I;
  #L2a048e.  v1:= 0I;
  #L2a0490.  if v1 >= v10 then goto L2a04d2;
  #L2a0494.  v2:= 0I;
  #L2a0496.  v3:= 0I;
  #L2a0498.  v4:= 8I;
  #L2a049c.  if v2 >= v4 then goto L2a04c2;
  #L2a04a0.  call temp:= `a`(v6, v7) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @kind virtual;
  #L2a04a6.  v4:= temp;
  #L2a04a8.  if v4 == 0 then goto L2a04b8;
  #L2a04ac.  v4:= v2 - 7;
  #L2a04b0.  v5:= 1I;
  #L2a04b2.  v4:= v5 ^< v4 @kind int;
  #L2a04b6.  v3:= v3 ^| v4 @kind int;
  #L2a04b8.  v7:= v7 + 1;
  #L2a04bc.  v2:= v2 + 1;
  #L2a04c0.  goto L2a0498;
  #L2a04c2.  v2:= v9 + v1 @kind int;
  #L2a04c6.  v3:= (`byte`) v3 @kind i2b;
  #L2a04c8.  v8[v2]:= v3 @kind byte;
  #L2a04cc.  v1:= v1 + 1;
  #L2a04d0.  goto L2a0490;
  #L2a04d2.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.x` v3 @kind this, `com.huawei.hms.scankit.p.x` v4 @kind object) @signature `Lcom/huawei/hms/scankit/p/x;.a:(Lcom/huawei/hms/scankit/p/x;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a0450.  v0:= v4.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a0454.  v1:= v3.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a0458.  v1:= v1 + v0 @kind int;
  #L2a045a.  call `f`(v3, v1) @signature `Lcom/huawei/hms/scankit/p/x;.f:(I)V` @kind direct;
  #L2a0460.  v1:= 0I;
  #L2a0462.  if v1 >= v0 then goto L2a047a;
  #L2a0466.  call temp:= `a`(v4, v1) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @kind virtual;
  #L2a046c.  v2:= temp;
  #L2a046e.  call `a`(v3, v2) @signature `Lcom/huawei/hms/scankit/p/x;.a:(Z)V` @kind virtual;
  #L2a0474.  v1:= v1 + 1;
  #L2a0478.  goto L2a0462;
  #L2a047a.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.x` v4 @kind this, `boolean` v5 ) @signature `Lcom/huawei/hms/scankit/p/x;.a:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a0404.  v0:= v4.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a0408.  v1:= 1I;
  #L2a040a.  v0:= v0 + v1 @kind int;
  #L2a040c.  call `f`(v4, v0) @signature `Lcom/huawei/hms/scankit/p/x;.f:(I)V` @kind direct;
  #L2a0412.  if v5 == 0 then goto L2a0434;
  #L2a0416.  v5:= v4.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a041a.  v0:= v4.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a041e.  v2:= v0 / 32;
  #L2a0422.  v3:= v5[v2];
  #L2a0426.  v0:= v0 ^& 31;
  #L2a042a.  v0:= v1 ^< v0 @kind int;
  #L2a042e.  v0:= v0 ^| v3 @kind int;
  #L2a0430.  v5[v2]:= v0;
  #L2a0434.  v5:= v4.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a0438.  v5:= v5 + v1 @kind int;
  #L2a043a.  v4.`com.huawei.hms.scankit.p.x.c` @type ^`int` := v5;
  #L2a043e.  return @kind void;
}
procedure `boolean` `a`(`com.huawei.hms.scankit.p.x` v2 @kind this, `int` v3 ) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29fc64.  v0:= v2.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L29fc68.  v1:= v3 / 32;
  #L29fc6c.  v0:= v0[v1];
  #L29fc70.  v3:= v3 ^& 31;
  #L29fc74.  v1:= 1I;
  #L29fc76.  v3:= v1 ^< v3 @kind int;
  #L29fc7a.  v3:= v3 ^& v0 @kind int;
  #L29fc7c.  if v3 == 0 then goto L29fc82;
  #L29fc80.  goto L29fc84;
  #L29fc82.  v1:= 0I;
  #L29fc84.  return v1;
}
procedure `boolean` `a`(`com.huawei.hms.scankit.p.x` v9 @kind this, `int` v10 , `int` v11 , `boolean` v12 , `boolean` v13 ) @signature `Lcom/huawei/hms/scankit/p/x;.a:(IIZZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L29fc98.  if v11 < v10 then goto L29fd36;
  #L29fc9c.  if v10 < 0 then goto L29fd36;
  #L29fca0.  v0:= v9.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L29fca4.  if v11 > v0 then goto L29fd36;
  #L29fca8.  v0:= 1I;
  #L29fcaa.  if v11 != v10 then goto L29fcb0;
  #L29fcae.  return v0;
  #L29fcb0.  v11:= v11 + -1;
  #L29fcb4.  v1:= v10 / 32;
  #L29fcb8.  v2:= v11 / 32;
  #L29fcbc.  v3:= 0I;
  #L29fcbe.  v4:= v1;
  #L29fcc0.  v5:= 0I;
  #L29fcc2.  if v4 > v2 then goto L29fd34;
  #L29fcc6.  if v4 <= v1 then goto L29fcce;
  #L29fcca.  v6:= 0I;
  #L29fccc.  goto L29fcd2;
  #L29fcce.  v6:= v10 ^& 31;
  #L29fcd2.  if v4 >= v2 then goto L29fcdc;
  #L29fcd6.  v7:= 31I;
  #L29fcda.  goto L29fce0;
  #L29fcdc.  v7:= v11 ^& 31;
  #L29fce0.  v8:= 2I;
  #L29fce2.  v7:= v8 ^< v7 @kind int;
  #L29fce6.  v6:= v0 ^< v6 @kind int;
  #L29fcea.  v7:= v7 - v6 @kind int;
  #L29fcec.  if v13 != 0 then goto L29fd12;
  #L29fcf0.  v6:= v9.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L29fcf4.  v6:= v6[v4];
  #L29fcf8.  v6:= v6 ^& v7 @kind int;
  #L29fcfa.  call temp:= `g`(v9, v6) @signature `Lcom/huawei/hms/scankit/p/x;.g:(I)I` @kind direct;
  #L29fd00.  v6:= temp;
  #L29fd02.  v5:= v5 + v6 @kind int;
  #L29fd04.  v6:= v11 - v10 @kind int;
  #L29fd08.  v6:= v6 / 10;
  #L29fd0c.  if v5 <= v6 then goto L29fd12;
  #L29fd10.  return v3;
  #L29fd12.  if v13 == 0 then goto L29fd2e;
  #L29fd16.  v6:= v9.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L29fd1a.  v6:= v6[v4];
  #L29fd1e.  v6:= v6 ^& v7 @kind int;
  #L29fd20.  if v12 == 0 then goto L29fd26;
  #L29fd24.  goto L29fd28;
  #L29fd26.  v7:= 0I;
  #L29fd28.  if v6 == v7 then goto L29fd2e;
  #L29fd2c.  return v3;
  #L29fd2e.  v4:= v4 + 1;
  #L29fd32.  goto L29fcc2;
  #L29fd34.  return v0;
  #L29fd36.  v10:= new `java.lang.IllegalArgumentException`;
  #L29fd3a.  call `<init>`(v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L29fd40.  throw v10;
  #L29fd42.  v10:= Exception @type ^`java.lang.Exception` @kind object;
  #L29fd44.  throw v10;
  catch `java.lang.Exception` @[L29fd36..L29fd42] goto L29fd42;
}
procedure `int` `b`(`com.huawei.hms.scankit.p.x` v3 @kind this, `int` v4 ) @signature `Lcom/huawei/hms/scankit/p/x;.b:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a00f8.  v0:= v3.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a00fc.  if v4 < v0 then goto L2a0102;
  #L2a0100.  return v0;
  #L2a0102.  v0:= v4 / 32;
  #L2a0106.  v1:= v3.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a010a.  call temp:= `a`(v1, v0) @signature `Lcom/huawei/hms/scankit/util/b;.a:([II)Z` @kind static;
  #L2a0110.  v1:= temp;
  #L2a0112.  if v1 == 0 then goto L2a0174;
  #L2a0116.  v1:= v3.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a011a.  v1:= v1[v0];
  #L2a011e.  v4:= v4 ^& 31;
  #L2a0122.  v2:= 1I;
  #L2a0124.  v4:= v2 ^< v4 @kind int;
  #L2a0128.  v4:= -v4 @kind int;
  #L2a012a.  v4:= v4 ^& v1 @kind int;
  #L2a012c.  if v4 != 0 then goto L2a015a;
  #L2a0130.  v0:= v0 + 1;
  #L2a0134.  v1:= v3.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a0138.  v2:= length @variable v1;
  #L2a013a.  if v0 != v2 then goto L2a0144;
  #L2a013e.  v4:= v3.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a0142.  return v4;
  #L2a0144.  call temp:= `a`(v1, v0) @signature `Lcom/huawei/hms/scankit/util/b;.a:([II)Z` @kind static;
  #L2a014a.  v1:= temp;
  #L2a014c.  if v1 == 0 then goto L2a012c;
  #L2a0150.  v4:= v3.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a0154.  v4:= v4[v0];
  #L2a0158.  goto L2a012c;
  #L2a015a.  v0:= v0 * 32;
  #L2a015e.  call temp:= `numberOfTrailingZeros`(v4) @signature `Ljava/lang/Integer;.numberOfTrailingZeros:(I)I` @kind static;
  #L2a0164.  v4:= temp;
  #L2a0166.  v0:= v0 + v4 @kind int;
  #L2a0168.  v4:= v3.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a016c.  if v0 <= v4 then goto L2a0172;
  #L2a0170.  v0:= v4;
  #L2a0172.  return v0;
  #L2a0174.  v4:= -1I;
  #L2a0176.  return v4;
}
procedure `void` `b`(`com.huawei.hms.scankit.p.x` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/x;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a0560.  v0:= v1.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a0564.  v1.`com.huawei.hms.scankit.p.x.b` @type ^`int`[] := v0 @kind object;
  #L2a0568.  return @kind void;
}
procedure `void` `b`(`com.huawei.hms.scankit.p.x` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/huawei/hms/scankit/p/x;.b:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a05ec.  v0:= v1.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a05f0.  v2:= v2 / 32;
  #L2a05f4.  v0[v2]:= v3;
  #L2a05f8.  return @kind void;
}
procedure `void` `b`(`com.huawei.hms.scankit.p.x` v4 @kind this, `com.huawei.hms.scankit.p.x` v5 @kind object) @signature `Lcom/huawei/hms/scankit/p/x;.b:(Lcom/huawei/hms/scankit/p/x;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a057c.  v0:= v4.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a0580.  v1:= v5.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a0584.  if v0 != v1 then goto L2a05ae;
  #L2a0588.  v0:= 0I;
  #L2a058a.  v1:= v4.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a058e.  v2:= length @variable v1;
  #L2a0590.  if v0 >= v2 then goto L2a05ac;
  #L2a0594.  v2:= v1[v0];
  #L2a0598.  v3:= v5.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a059c.  v3:= v3[v0];
  #L2a05a0.  v2:= v2 ^~ v3 @kind int;
  #L2a05a2.  v1[v0]:= v2;
  #L2a05a6.  v0:= v0 + 1;
  #L2a05aa.  goto L2a058a;
  #L2a05ac.  return @kind void;
  #L2a05ae.  v5:= new `java.lang.IllegalArgumentException`;
  #L2a05b2.  v0:= "Sizes don't match" @kind object;
  #L2a05b6.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a05bc.  throw v5;
  #L2a05be.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L2a05c0.  throw v5;
  catch `java.lang.Exception` @[L2a05ae..L2a05b2] goto L2a05be;
  catch `java.lang.Exception` @[L2a05b6..L2a05be] goto L2a05be;
}
procedure `int` `c`(`com.huawei.hms.scankit.p.x` v3 @kind this, `int` v4 ) @signature `Lcom/huawei/hms/scankit/p/x;.c:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a0188.  v0:= v3.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a018c.  if v4 < v0 then goto L2a0192;
  #L2a0190.  return v0;
  #L2a0192.  v0:= v4 / 32;
  #L2a0196.  v1:= v3.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a019a.  call temp:= `a`(v1, v0) @signature `Lcom/huawei/hms/scankit/util/b;.a:([II)Z` @kind static;
  #L2a01a0.  v1:= temp;
  #L2a01a2.  if v1 == 0 then goto L2a0208;
  #L2a01a6.  v1:= v3.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a01aa.  v1:= v1[v0];
  #L2a01ae.  v1:= ~v1 @kind int;
  #L2a01b0.  v4:= v4 ^& 31;
  #L2a01b4.  v2:= 1I;
  #L2a01b6.  v4:= v2 ^< v4 @kind int;
  #L2a01ba.  v4:= -v4 @kind int;
  #L2a01bc.  v4:= v4 ^& v1 @kind int;
  #L2a01be.  if v4 != 0 then goto L2a01ee;
  #L2a01c2.  v0:= v0 + 1;
  #L2a01c6.  v1:= v3.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a01ca.  v2:= length @variable v1;
  #L2a01cc.  if v0 != v2 then goto L2a01d6;
  #L2a01d0.  v4:= v3.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a01d4.  return v4;
  #L2a01d6.  call temp:= `a`(v1, v0) @signature `Lcom/huawei/hms/scankit/util/b;.a:([II)Z` @kind static;
  #L2a01dc.  v1:= temp;
  #L2a01de.  if v1 == 0 then goto L2a01be;
  #L2a01e2.  v4:= v3.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a01e6.  v4:= v4[v0];
  #L2a01ea.  v4:= ~v4 @kind int;
  #L2a01ec.  goto L2a01be;
  #L2a01ee.  v0:= v0 * 32;
  #L2a01f2.  call temp:= `numberOfTrailingZeros`(v4) @signature `Ljava/lang/Integer;.numberOfTrailingZeros:(I)I` @kind static;
  #L2a01f8.  v4:= temp;
  #L2a01fa.  v0:= v0 + v4 @kind int;
  #L2a01fc.  v4:= v3.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a0200.  if v0 <= v4 then goto L2a0206;
  #L2a0204.  v0:= v4;
  #L2a0206.  return v0;
  #L2a0208.  v4:= -1I;
  #L2a020a.  return v4;
}
procedure `void` `c`(`com.huawei.hms.scankit.p.x` v6 @kind this, `int` v7 , `int` v8 ) @signature `Lcom/huawei/hms/scankit/p/x;.c:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2a060c.  if v8 < v7 then goto L2a0670;
  #L2a0610.  if v7 < 0 then goto L2a0670;
  #L2a0614.  v0:= v6.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a0618.  if v8 > v0 then goto L2a0670;
  #L2a061c.  if v8 != v7 then goto L2a0622;
  #L2a0620.  return @kind void;
  #L2a0622.  v8:= v8 + -1;
  #L2a0626.  v0:= v7 / 32;
  #L2a062a.  v1:= v8 / 32;
  #L2a062e.  v2:= v0;
  #L2a0630.  if v2 > v1 then goto L2a066e;
  #L2a0634.  v3:= 31I;
  #L2a0638.  if v2 <= v0 then goto L2a0640;
  #L2a063c.  v4:= 0I;
  #L2a063e.  goto L2a0644;
  #L2a0640.  v4:= v7 ^& 31;
  #L2a0644.  if v2 >= v1 then goto L2a064a;
  #L2a0648.  goto L2a064c;
  #L2a064a.  v3:= v3 ^& v8 @kind int;
  #L2a064c.  v5:= 2I;
  #L2a064e.  v3:= v5 ^< v3 @kind int;
  #L2a0652.  v5:= 1I;
  #L2a0654.  v4:= v5 ^< v4 @kind int;
  #L2a0658.  v3:= v3 - v4 @kind int;
  #L2a065a.  v4:= v6.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a065e.  v5:= v4[v2];
  #L2a0662.  v3:= v3 ^| v5 @kind int;
  #L2a0664.  v4[v2]:= v3;
  #L2a0668.  v2:= v2 + 1;
  #L2a066c.  goto L2a0630;
  #L2a066e.  return @kind void;
  #L2a0670.  v7:= new `java.lang.IllegalArgumentException`;
  #L2a0674.  call `<init>`(v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2a067a.  throw v7;
  #L2a067c.  v7:= Exception @type ^`java.lang.Exception` @kind object;
  #L2a067e.  throw v7;
  catch `java.lang.Exception` @[L2a0670..L2a067c] goto L2a067c;
}
procedure `int`[] `c`(`com.huawei.hms.scankit.p.x` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/x;.c:()[I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a02a0.  v0:= v1.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a02a4.  return v0 @kind object;
}
procedure `com.huawei.hms.scankit.p.x` `clone`(`com.huawei.hms.scankit.p.x` v3 @kind this) @signature `Lcom/huawei/hms/scankit/p/x;.clone:()Lcom/huawei/hms/scankit/p/x;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a00b0.  v0:= new `com.huawei.hms.scankit.p.x`;
  #L2a00b4.  v1:= v3.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a00b8.  call temp:= `clone`(v1) @signature `[I.clone:()Ljava/lang/Object;` @kind virtual;
  #L2a00be.  v1:= temp @kind object;
  #L2a00c0.  v1:= (`int`[]) v1 @kind object;
  #L2a00c4.  v2:= v3.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a00c8.  call `<init>`(v0, v1, v2) @signature `Lcom/huawei/hms/scankit/p/x;.<init>:([II)V` @kind direct;
  #L2a00ce.  return v0 @kind object;
}
procedure `java.lang.Object` `clone`(`com.huawei.hms.scankit.p.x` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/x;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2a02d8.  call temp:= `clone`(v1) @signature `Lcom/huawei/hms/scankit/p/x;.clone:()Lcom/huawei/hms/scankit/p/x;` @kind virtual;
  #L2a02de.  v0:= temp @kind object;
  #L2a02e0.  return v0 @kind object;
}
procedure `int` `d`(`com.huawei.hms.scankit.p.x` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/x;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a021c.  v0:= v1.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a0220.  return v0;
}
procedure `void` `d`(`com.huawei.hms.scankit.p.x` v4 @kind this, `int` v5 ) @signature `Lcom/huawei/hms/scankit/p/x;.d:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a06a0.  v0:= v4.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a06a4.  v1:= v5 / 32;
  #L2a06a8.  v2:= v0[v1];
  #L2a06ac.  v5:= v5 ^& 31;
  #L2a06b0.  v3:= 1I;
  #L2a06b2.  v5:= v3 ^< v5 @kind int;
  #L2a06b6.  v5:= v5 ^| v2 @kind int;
  #L2a06b8.  v0[v1]:= v5;
  #L2a06bc.  return @kind void;
}
procedure `int` `e`(`com.huawei.hms.scankit.p.x` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/x;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a0234.  v0:= v1.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a0238.  v0:= v0 + 7;
  #L2a023c.  v0:= v0 / 8;
  #L2a0240.  return v0;
}
procedure `void` `e`(`com.huawei.hms.scankit.p.x` v4 @kind this, `int` v5 ) @signature `Lcom/huawei/hms/scankit/p/x;.e:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a06d0.  v0:= v4.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a06d4.  v1:= v5 / 32;
  #L2a06d8.  v2:= v0[v1];
  #L2a06dc.  v5:= v5 ^& 31;
  #L2a06e0.  v3:= 1I;
  #L2a06e2.  v5:= v3 ^< v5 @kind int;
  #L2a06e6.  v2:= v2 - v5 @kind int;
  #L2a06e8.  v0[v1]:= v2;
  #L2a06ec.  return @kind void;
}
procedure `boolean` `equals`(`com.huawei.hms.scankit.p.x` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/huawei/hms/scankit/p/x;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L29fd68.  v0:= instanceof @variable v4 @type ^`com.huawei.hms.scankit.p.x` @kind boolean;
  #L29fd6c.  v1:= 0I;
  #L29fd6e.  if v0 != 0 then goto L29fd74;
  #L29fd72.  return v1;
  #L29fd74.  v4:= (`com.huawei.hms.scankit.p.x`) v4 @kind object;
  #L29fd78.  v0:= v3.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L29fd7c.  v2:= v4.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L29fd80.  if v0 != v2 then goto L29fd9a;
  #L29fd84.  v0:= v3.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L29fd88.  v4:= v4.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L29fd8c.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Arrays;.equals:([I[I)Z` @kind static;
  #L29fd92.  v4:= temp;
  #L29fd94.  if v4 == 0 then goto L29fd9a;
  #L29fd98.  v1:= 1I;
  #L29fd9a.  return v1;
}
procedure `void` `f`(`com.huawei.hms.scankit.p.x` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/x;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a0700.  v0:= v1.`com.huawei.hms.scankit.p.x.b` @type ^`int`[] @kind object;
  #L2a0704.  v1.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] := v0 @kind object;
  #L2a0708.  return @kind void;
}
procedure `void` `g`(`com.huawei.hms.scankit.p.x` v13 @kind this) @signature `Lcom/huawei/hms/scankit/p/x;.g:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L2a0758.  v0:= v13.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a075c.  v0:= length @variable v0;
  #L2a075e.  v0:= new `int`[v0];
  #L2a0762.  v1:= v13.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a0766.  v2:= 1I;
  #L2a0768.  v1:= v1 - v2 @kind int;
  #L2a076a.  v1:= v1 / 32;
  #L2a076e.  v3:= v1 + 1;
  #L2a0772.  v4:= 0I;
  #L2a0774.  v5:= 0I;
  #L2a0776.  if v5 >= v3 then goto L2a07fa;
  #L2a077a.  v6:= v13.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a077e.  v6:= v6[v5];
  #L2a0782.  v6:= (`long`) v6 @kind i2l;
  #L2a0784.  v8:= v6 ^> v2 @kind long;
  #L2a0788.  v10:= 1431655765L;
  #L2a078e.  v8:= v8 ^& v10 @kind long;
  #L2a0790.  v6:= v6 ^& v10 @kind long;
  #L2a0792.  v6:= v6 ^< v2 @kind long;
  #L2a0794.  v6:= v6 ^| v8 @kind long;
  #L2a0796.  v8:= 2I;
  #L2a0798.  v9:= v6 ^> v8 @kind long;
  #L2a079c.  v11:= 858993459L;
  #L2a07a2.  v9:= v9 ^& v11 @kind long;
  #L2a07a4.  v6:= v6 ^& v11 @kind long;
  #L2a07a6.  v6:= v6 ^< v8 @kind long;
  #L2a07a8.  v6:= v6 ^| v9 @kind long;
  #L2a07aa.  v8:= 4I;
  #L2a07ac.  v9:= v6 ^> v8 @kind long;
  #L2a07b0.  v11:= 252645135L;
  #L2a07b6.  v9:= v9 ^& v11 @kind long;
  #L2a07b8.  v6:= v6 ^& v11 @kind long;
  #L2a07ba.  v6:= v6 ^< v8 @kind long;
  #L2a07bc.  v6:= v6 ^| v9 @kind long;
  #L2a07be.  v8:= 8I;
  #L2a07c2.  v9:= v6 ^> v8 @kind long;
  #L2a07c6.  v11:= 16711935L;
  #L2a07cc.  v9:= v9 ^& v11 @kind long;
  #L2a07ce.  v6:= v6 ^& v11 @kind long;
  #L2a07d0.  v6:= v6 ^< v8 @kind long;
  #L2a07d2.  v6:= v6 ^| v9 @kind long;
  #L2a07d4.  v8:= 16I;
  #L2a07d8.  v9:= v6 ^> v8 @kind long;
  #L2a07dc.  v11:= 65535L;
  #L2a07e2.  v9:= v9 ^& v11 @kind long;
  #L2a07e4.  v6:= v6 ^& v11 @kind long;
  #L2a07e6.  v6:= v6 ^< v8 @kind long;
  #L2a07e8.  v6:= v6 ^| v9 @kind long;
  #L2a07ea.  v8:= v1 - v5 @kind int;
  #L2a07ee.  v7:= (`int`) v6 @kind l2i;
  #L2a07f0.  v0[v8]:= v7;
  #L2a07f4.  v5:= v5 + 1;
  #L2a07f8.  goto L2a0776;
  #L2a07fa.  v1:= v13.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a07fe.  v5:= v3 * 32;
  #L2a0802.  if v1 == v5 then goto L2a083a;
  #L2a0806.  v5:= v5 - v1 @kind int;
  #L2a0808.  v1:= v0[v4];
  #L2a080c.  v1:= v1 ^>> v5 @kind int;
  #L2a080e.  v4:= 1I;
  #L2a0810.  if v4 >= v3 then goto L2a0834;
  #L2a0814.  v6:= v0[v4];
  #L2a0818.  v7:= v5 - 32;
  #L2a081c.  v7:= v6 ^< v7 @kind int;
  #L2a0820.  v1:= v1 ^| v7 @kind int;
  #L2a0822.  v7:= v4 + -1;
  #L2a0826.  v0[v7]:= v1;
  #L2a082a.  v1:= v6 ^>> v5 @kind int;
  #L2a082e.  v4:= v4 + 1;
  #L2a0832.  goto L2a0810;
  #L2a0834.  v3:= v3 - v2 @kind int;
  #L2a0836.  v0[v3]:= v1;
  #L2a083a.  v13.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] := v0 @kind object;
  #L2a083e.  return @kind void;
}
procedure `void` `h`(`com.huawei.hms.scankit.p.x` v2 @kind this) @signature `Lcom/huawei/hms/scankit/p/x;.h:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a0850.  v0:= 0I;
  #L2a0852.  v1:= v2.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a0856.  v1:= v1 + -1;
  #L2a085a.  if v0 >= v1 then goto L2a0886;
  #L2a085e.  call temp:= `a`(v2, v0) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @kind virtual;
  #L2a0864.  v1:= temp;
  #L2a0866.  if v1 != 0 then goto L2a0880;
  #L2a086a.  v1:= v0 + 1;
  #L2a086e.  call temp:= `a`(v2, v1) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @kind virtual;
  #L2a0874.  v1:= temp;
  #L2a0876.  if v1 == 0 then goto L2a0880;
  #L2a087a.  call `d`(v2, v0) @signature `Lcom/huawei/hms/scankit/p/x;.d:(I)V` @kind virtual;
  #L2a0880.  v0:= v0 + 1;
  #L2a0884.  goto L2a0852;
  #L2a0886.  return @kind void;
}
procedure `int` `hashCode`(`com.huawei.hms.scankit.p.x` v2 @kind this) @signature `Lcom/huawei/hms/scankit/p/x;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a0278.  v0:= v2.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a027c.  v0:= v0 * 31;
  #L2a0280.  v1:= v2.`com.huawei.hms.scankit.p.x.a` @type ^`int`[] @kind object;
  #L2a0284.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([I)I` @kind static;
  #L2a028a.  v1:= temp;
  #L2a028c.  v0:= v0 + v1 @kind int;
  #L2a028e.  return v0;
}
procedure `void` `i`(`com.huawei.hms.scankit.p.x` v2 @kind this) @signature `Lcom/huawei/hms/scankit/p/x;.i:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a0898.  v0:= 0I;
  #L2a089a.  v1:= v2.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a089e.  v1:= v1 + -1;
  #L2a08a2.  if v0 >= v1 then goto L2a08ce;
  #L2a08a6.  call temp:= `a`(v2, v0) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @kind virtual;
  #L2a08ac.  v1:= temp;
  #L2a08ae.  if v1 == 0 then goto L2a08c8;
  #L2a08b2.  v1:= v0 + 1;
  #L2a08b6.  call temp:= `a`(v2, v1) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @kind virtual;
  #L2a08bc.  v1:= temp;
  #L2a08be.  if v1 != 0 then goto L2a08c8;
  #L2a08c2.  call `e`(v2, v0) @signature `Lcom/huawei/hms/scankit/p/x;.e:(I)V` @kind virtual;
  #L2a08c8.  v0:= v0 + 1;
  #L2a08cc.  goto L2a089a;
  #L2a08ce.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.huawei.hms.scankit.p.x` v3 @kind this) @signature `Lcom/huawei/hms/scankit/p/x;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a02f4.  v0:= new `java.lang.StringBuilder`;
  #L2a02f8.  v1:= v3.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a02fc.  v2:= v1 / 8;
  #L2a0300.  v1:= v1 + v2 @kind int;
  #L2a0302.  v1:= v1 + 1;
  #L2a0306.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2a030c.  v1:= 0I;
  #L2a030e.  v2:= v3.`com.huawei.hms.scankit.p.x.c` @type ^`int`;
  #L2a0312.  if v1 >= v2 then goto L2a034a;
  #L2a0316.  v2:= v1 ^& 7;
  #L2a031a.  if v2 != 0 then goto L2a0328;
  #L2a031e.  v2:= 32I;
  #L2a0322.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a0328.  call temp:= `a`(v3, v1) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @kind virtual;
  #L2a032e.  v2:= temp;
  #L2a0330.  if v2 == 0 then goto L2a033a;
  #L2a0334.  v2:= 88I;
  #L2a0338.  goto L2a033e;
  #L2a033a.  v2:= 46I;
  #L2a033e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a0344.  v1:= v1 + 1;
  #L2a0348.  goto L2a030e;
  #L2a034a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a0350.  v0:= temp @kind object;
  #L2a0352.  return v0 @kind object;
}
