record `com.huawei.hms.scankit.p.Mc` @kind class @AccessFlag FINAL {
}
procedure `int` `a`(`com.huawei.hms.scankit.p.Ic` v2 @kind object) @signature `Lcom/huawei/hms/scankit/p/Mc;.a:(Lcom/huawei/hms/scankit/p/Ic;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L274820.  v0:= 1I;
  #L274822.  call temp:= `a`(v2, v0) @signature `Lcom/huawei/hms/scankit/p/Mc;.a:(Lcom/huawei/hms/scankit/p/Ic;Z)I` @kind static;
  #L274828.  v0:= temp;
  #L27482a.  v1:= 0I;
  #L27482c.  call temp:= `a`(v2, v1) @signature `Lcom/huawei/hms/scankit/p/Mc;.a:(Lcom/huawei/hms/scankit/p/Ic;Z)I` @kind static;
  #L274832.  v2:= temp;
  #L274834.  v0:= v0 + v2 @kind int;
  #L274836.  return v0;
}
procedure `int` `a`(`com.huawei.hms.scankit.p.Ic` v10 @kind object, `boolean` v11 ) @signature `Lcom/huawei/hms/scankit/p/Mc;.a:(Lcom/huawei/hms/scankit/p/Ic;Z)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L274848.  if v11 == 0 then goto L274856;
  #L27484c.  call temp:= `b`(v10) @signature `Lcom/huawei/hms/scankit/p/Ic;.b:()I` @kind virtual;
  #L274852.  v0:= temp;
  #L274854.  goto L27485e;
  #L274856.  call temp:= `c`(v10) @signature `Lcom/huawei/hms/scankit/p/Ic;.c:()I` @kind virtual;
  #L27485c.  v0:= temp;
  #L27485e.  if v11 == 0 then goto L27486c;
  #L274862.  call temp:= `c`(v10) @signature `Lcom/huawei/hms/scankit/p/Ic;.c:()I` @kind virtual;
  #L274868.  v1:= temp;
  #L27486a.  goto L274874;
  #L27486c.  call temp:= `b`(v10) @signature `Lcom/huawei/hms/scankit/p/Ic;.b:()I` @kind virtual;
  #L274872.  v1:= temp;
  #L274874.  call temp:= `a`(v10) @signature `Lcom/huawei/hms/scankit/p/Ic;.a:()[[B` @kind virtual;
  #L27487a.  v10:= temp @kind object;
  #L27487c.  v2:= 0I;
  #L27487e.  v3:= 0I;
  #L274880.  v4:= 0I;
  #L274882.  if v3 >= v0 then goto L2748e0;
  #L274886.  v5:= -1I;
  #L274888.  v6:= 0I;
  #L27488a.  v7:= 0I;
  #L27488c.  v8:= 5I;
  #L27488e.  if v6 >= v1 then goto L2748cc;
  #L274892.  if v11 == 0 then goto L2748a0;
  #L274896.  v9:= v10[v3] @kind object;
  #L27489a.  v9:= v9[v6] @kind byte;
  #L27489e.  goto L2748a8;
  #L2748a0.  v9:= v10[v6] @kind object;
  #L2748a4.  v9:= v9[v3] @kind byte;
  #L2748a8.  if v9 != v5 then goto L2748b2;
  #L2748ac.  v7:= v7 + 1;
  #L2748b0.  goto L2748c6;
  #L2748b2.  if v7 < v8 then goto L2748c0;
  #L2748b6.  v7:= v7 + -5;
  #L2748ba.  v7:= v7 + 3;
  #L2748be.  v4:= v4 + v7 @kind int;
  #L2748c0.  v5:= 1I;
  #L2748c2.  v5:= v9;
  #L2748c4.  v7:= 1I;
  #L2748c6.  v6:= v6 + 1;
  #L2748ca.  goto L27488c;
  #L2748cc.  if v7 < v8 then goto L2748da;
  #L2748d0.  v7:= v7 + -5;
  #L2748d4.  v7:= v7 + 3;
  #L2748d8.  v4:= v4 + v7 @kind int;
  #L2748da.  v3:= v3 + 1;
  #L2748de.  goto L274882;
  #L2748e0.  return v4;
}
procedure `boolean` `a`(`int` v1 , `int` v2 , `int` v3 ) @signature `Lcom/huawei/hms/scankit/p/Mc;.a:(III)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L274730.  v0:= 1I;
  #L274732.  goto L2747c8;
  #L274738.  v2:= new `java.lang.IllegalArgumentException`;
  #L27473c.  goto L27479a;
  #L27473e.  v1:= v3 * v2 @kind int;
  #L274742.  v1:= v1 %% 3;
  #L274746.  v3:= v3 + v2 @kind int;
  #L274748.  v2:= v3 ^& 1;
  #L27474c.  v1:= v1 + v2 @kind int;
  #L27474e.  goto L27475e;
  #L274750.  v3:= v3 * v2 @kind int;
  #L274754.  v1:= v3 ^& 1;
  #L274758.  v3:= v3 %% 3;
  #L27475c.  v1:= v1 + v3 @kind int;
  #L27475e.  v1:= v1 ^& v0 @kind int;
  #L274760.  goto L274790;
  #L274762.  v3:= v3 * v2 @kind int;
  #L274766.  v1:= v3 ^& 1;
  #L27476a.  v3:= v3 %% 3;
  #L27476e.  v1:= v1 + v3 @kind int;
  #L274770.  goto L274790;
  #L274772.  v3:= v3 / 2;
  #L274776.  v2:= v2 / 3;
  #L27477a.  goto L27478a;
  #L27477c.  v3:= v3 + v2 @kind int;
  #L27477e.  v1:= v3 %% 3;
  #L274782.  goto L274790;
  #L274784.  v1:= v2 %% 3;
  #L274788.  goto L274790;
  #L27478a.  v3:= v3 + v2 @kind int;
  #L27478c.  v1:= v3 ^& 1;
  #L274790.  if v1 != 0 then goto L274796;
  #L274794.  goto L274798;
  #L274796.  v0:= 0I;
  #L274798.  return v0;
  #L27479a.  v3:= new `java.lang.StringBuilder`;
  #L27479e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2747a4.  v0:= "Invalid mask pattern: " @kind object;
  #L2747a8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2747ae.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2747b4.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2747ba.  v1:= temp @kind object;
  #L2747bc.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2747c2.  throw v2;
  #L2747c4.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L2747c6.  throw v1;
  #L2747c8.  switch v1
                  | 0 => goto L27478a
                  | 1 => goto L27478c
                  | 2 => goto L274784
                  | 3 => goto L27477c
                  | 4 => goto L274772
                  | 5 => goto L274762
                  | 6 => goto L274750
                  | 7 => goto L27473e
                  | else => goto L274738;
  catch `java.lang.Exception` @[L274738..L27473c] goto L2747c4;
  catch `java.lang.Exception` @[L27479a..L2747a4] goto L2747c4;
  catch `java.lang.Exception` @[L2747a8..L2747c4] goto L2747c4;
}
procedure `boolean` `a`(`byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/huawei/hms/scankit/p/Mc;.a:([BII)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2746a4.  v0:= 0I;
  #L2746a6.  call temp:= `max`(v4, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2746ac.  v4:= temp;
  #L2746ae.  v1:= length @variable v3;
  #L2746b0.  call temp:= `min`(v5, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2746b6.  v5:= temp;
  #L2746b8.  v1:= 1I;
  #L2746ba.  if v4 >= v5 then goto L2746ce;
  #L2746be.  v2:= v3[v4] @kind byte;
  #L2746c2.  if v2 != v1 then goto L2746c8;
  #L2746c6.  return v0;
  #L2746c8.  v4:= v4 + 1;
  #L2746cc.  goto L2746b8;
  #L2746ce.  return v1;
}
procedure `boolean` `a`(`byte`[][] v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/huawei/hms/scankit/p/Mc;.a:([[BIII)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2746e0.  v0:= 0I;
  #L2746e2.  call temp:= `max`(v5, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2746e8.  v5:= temp;
  #L2746ea.  v1:= length @variable v3;
  #L2746ec.  call temp:= `min`(v6, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2746f2.  v6:= temp;
  #L2746f4.  v1:= 1I;
  #L2746f6.  if v5 >= v6 then goto L27471e;
  #L2746fa.  v2:= length @variable v3;
  #L2746fc.  if v5 >= v2 then goto L274718;
  #L274700.  v2:= v3[v0] @kind object;
  #L274704.  v2:= length @variable v2;
  #L274706.  if v4 >= v2 then goto L274718;
  #L27470a.  v2:= v3[v5] @kind object;
  #L27470e.  v2:= v2[v4] @kind byte;
  #L274712.  if v2 != v1 then goto L274718;
  #L274716.  return v0;
  #L274718.  v5:= v5 + 1;
  #L27471c.  goto L2746f4;
  #L27471e.  return v1;
}
procedure `int` `b`(`com.huawei.hms.scankit.p.Ic` v11 @kind object) @signature `Lcom/huawei/hms/scankit/p/Mc;.b:(Lcom/huawei/hms/scankit/p/Ic;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2748f4.  call temp:= `a`(v11) @signature `Lcom/huawei/hms/scankit/p/Ic;.a:()[[B` @kind virtual;
  #L2748fa.  v0:= temp @kind object;
  #L2748fc.  call temp:= `c`(v11) @signature `Lcom/huawei/hms/scankit/p/Ic;.c:()I` @kind virtual;
  #L274902.  v1:= temp;
  #L274904.  call temp:= `b`(v11) @signature `Lcom/huawei/hms/scankit/p/Ic;.b:()I` @kind virtual;
  #L27490a.  v11:= temp;
  #L27490c.  v2:= 0I;
  #L27490e.  v3:= 0I;
  #L274910.  v4:= 0I;
  #L274912.  v5:= v11 + -1;
  #L274916.  if v3 >= v5 then goto L274962;
  #L27491a.  v5:= v0[v3] @kind object;
  #L27491e.  v6:= 0I;
  #L274920.  v7:= v1 + -1;
  #L274924.  if v6 >= v7 then goto L27495c;
  #L274928.  v7:= v5[v6] @kind byte;
  #L27492c.  v8:= v6 + 1;
  #L274930.  v9:= v5[v8] @kind byte;
  #L274934.  if v7 != v9 then goto L274958;
  #L274938.  v9:= v3 + 1;
  #L27493c.  v10:= v0[v9] @kind object;
  #L274940.  v6:= v10[v6] @kind byte;
  #L274944.  if v7 != v6 then goto L274958;
  #L274948.  v6:= v0[v9] @kind object;
  #L27494c.  v6:= v6[v8] @kind byte;
  #L274950.  if v7 != v6 then goto L274958;
  #L274954.  v4:= v4 + 1;
  #L274958.  v6:= v8;
  #L27495a.  goto L274920;
  #L27495c.  v3:= v3 + 1;
  #L274960.  goto L274912;
  #L274962.  v4:= v4 * 3;
  #L274966.  return v4;
}
procedure `int` `c`(`com.huawei.hms.scankit.p.Ic` v10 @kind object) @signature `Lcom/huawei/hms/scankit/p/Mc;.c:(Lcom/huawei/hms/scankit/p/Ic;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L274978.  call temp:= `a`(v10) @signature `Lcom/huawei/hms/scankit/p/Ic;.a:()[[B` @kind virtual;
  #L27497e.  v0:= temp @kind object;
  #L274980.  call temp:= `c`(v10) @signature `Lcom/huawei/hms/scankit/p/Ic;.c:()I` @kind virtual;
  #L274986.  v1:= temp;
  #L274988.  call temp:= `b`(v10) @signature `Lcom/huawei/hms/scankit/p/Ic;.b:()I` @kind virtual;
  #L27498e.  v10:= temp;
  #L274990.  v2:= 0I;
  #L274992.  v3:= 0I;
  #L274994.  v4:= 0I;
  #L274996.  if v3 >= v10 then goto L274aca;
  #L27499a.  v5:= 0I;
  #L27499c.  if v5 >= v1 then goto L274ac2;
  #L2749a0.  v6:= v0[v3] @kind object;
  #L2749a4.  v7:= v5 + 6;
  #L2749a8.  v8:= 1I;
  #L2749aa.  if v7 >= v1 then goto L274a22;
  #L2749ae.  v9:= v6[v5] @kind byte;
  #L2749b2.  if v9 != v8 then goto L274a22;
  #L2749b6.  v9:= v5 + 1;
  #L2749ba.  v9:= v6[v9] @kind byte;
  #L2749be.  if v9 != 0 then goto L274a22;
  #L2749c2.  v9:= v5 + 2;
  #L2749c6.  v9:= v6[v9] @kind byte;
  #L2749ca.  if v9 != v8 then goto L274a22;
  #L2749ce.  v9:= v5 + 3;
  #L2749d2.  v9:= v6[v9] @kind byte;
  #L2749d6.  if v9 != v8 then goto L274a22;
  #L2749da.  v9:= v5 + 4;
  #L2749de.  v9:= v6[v9] @kind byte;
  #L2749e2.  if v9 != v8 then goto L274a22;
  #L2749e6.  v9:= v5 + 5;
  #L2749ea.  v9:= v6[v9] @kind byte;
  #L2749ee.  if v9 != 0 then goto L274a22;
  #L2749f2.  v7:= v6[v7] @kind byte;
  #L2749f6.  if v7 != v8 then goto L274a22;
  #L2749fa.  v7:= v5 + -4;
  #L2749fe.  call temp:= `a`(v6, v7, v5) @signature `Lcom/huawei/hms/scankit/p/Mc;.a:([BII)Z` @kind static;
  #L274a04.  v7:= temp;
  #L274a06.  if v7 != 0 then goto L274a1e;
  #L274a0a.  v7:= v5 + 7;
  #L274a0e.  v9:= v5 + 11;
  #L274a12.  call temp:= `a`(v6, v7, v9) @signature `Lcom/huawei/hms/scankit/p/Mc;.a:([BII)Z` @kind static;
  #L274a18.  v6:= temp;
  #L274a1a.  if v6 == 0 then goto L274a22;
  #L274a1e.  v4:= v4 + 1;
  #L274a22.  v6:= v3 + 6;
  #L274a26.  if v6 >= v10 then goto L274aba;
  #L274a2a.  v7:= v0[v3] @kind object;
  #L274a2e.  v7:= v7[v5] @kind byte;
  #L274a32.  if v7 != v8 then goto L274aba;
  #L274a36.  v7:= v3 + 1;
  #L274a3a.  v7:= v0[v7] @kind object;
  #L274a3e.  v7:= v7[v5] @kind byte;
  #L274a42.  if v7 != 0 then goto L274aba;
  #L274a46.  v7:= v3 + 2;
  #L274a4a.  v7:= v0[v7] @kind object;
  #L274a4e.  v7:= v7[v5] @kind byte;
  #L274a52.  if v7 != v8 then goto L274aba;
  #L274a56.  v7:= v3 + 3;
  #L274a5a.  v7:= v0[v7] @kind object;
  #L274a5e.  v7:= v7[v5] @kind byte;
  #L274a62.  if v7 != v8 then goto L274aba;
  #L274a66.  v7:= v3 + 4;
  #L274a6a.  v7:= v0[v7] @kind object;
  #L274a6e.  v7:= v7[v5] @kind byte;
  #L274a72.  if v7 != v8 then goto L274aba;
  #L274a76.  v7:= v3 + 5;
  #L274a7a.  v7:= v0[v7] @kind object;
  #L274a7e.  v7:= v7[v5] @kind byte;
  #L274a82.  if v7 != 0 then goto L274aba;
  #L274a86.  v6:= v0[v6] @kind object;
  #L274a8a.  v6:= v6[v5] @kind byte;
  #L274a8e.  if v6 != v8 then goto L274aba;
  #L274a92.  v6:= v3 + -4;
  #L274a96.  call temp:= `a`(v0, v5, v6, v3) @signature `Lcom/huawei/hms/scankit/p/Mc;.a:([[BIII)Z` @kind static;
  #L274a9c.  v6:= temp;
  #L274a9e.  if v6 != 0 then goto L274ab6;
  #L274aa2.  v6:= v3 + 7;
  #L274aa6.  v7:= v3 + 11;
  #L274aaa.  call temp:= `a`(v0, v5, v6, v7) @signature `Lcom/huawei/hms/scankit/p/Mc;.a:([[BIII)Z` @kind static;
  #L274ab0.  v6:= temp;
  #L274ab2.  if v6 == 0 then goto L274aba;
  #L274ab6.  v4:= v4 + 1;
  #L274aba.  v5:= v5 + 1;
  #L274abe.  goto L27499c;
  #L274ac2.  v3:= v3 + 1;
  #L274ac6.  goto L274996;
  #L274aca.  v4:= v4 * 40;
  #L274ace.  return v4;
}
procedure `int` `d`(`com.huawei.hms.scankit.p.Ic` v10 @kind object) @signature `Lcom/huawei/hms/scankit/p/Mc;.d:(Lcom/huawei/hms/scankit/p/Ic;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L274ae0.  call temp:= `a`(v10) @signature `Lcom/huawei/hms/scankit/p/Ic;.a:()[[B` @kind virtual;
  #L274ae6.  v0:= temp @kind object;
  #L274ae8.  call temp:= `c`(v10) @signature `Lcom/huawei/hms/scankit/p/Ic;.c:()I` @kind virtual;
  #L274aee.  v1:= temp;
  #L274af0.  call temp:= `b`(v10) @signature `Lcom/huawei/hms/scankit/p/Ic;.b:()I` @kind virtual;
  #L274af6.  v2:= temp;
  #L274af8.  v3:= 0I;
  #L274afa.  v4:= 0I;
  #L274afc.  v5:= 0I;
  #L274afe.  if v4 >= v2 then goto L274b26;
  #L274b02.  v6:= v0[v4] @kind object;
  #L274b06.  v7:= 0I;
  #L274b08.  if v7 >= v1 then goto L274b20;
  #L274b0c.  v8:= v6[v7] @kind byte;
  #L274b10.  v9:= 1I;
  #L274b12.  if v8 != v9 then goto L274b1a;
  #L274b16.  v5:= v5 + 1;
  #L274b1a.  v7:= v7 + 1;
  #L274b1e.  goto L274b08;
  #L274b20.  v4:= v4 + 1;
  #L274b24.  goto L274afe;
  #L274b26.  call temp:= `b`(v10) @signature `Lcom/huawei/hms/scankit/p/Ic;.b:()I` @kind virtual;
  #L274b2c.  v0:= temp;
  #L274b2e.  call temp:= `c`(v10) @signature `Lcom/huawei/hms/scankit/p/Ic;.c:()I` @kind virtual;
  #L274b34.  v10:= temp;
  #L274b36.  v0:= v0 * v10 @kind int;
  #L274b3a.  v5:= v5 * 2;
  #L274b3e.  v5:= v5 - v0 @kind int;
  #L274b40.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L274b46.  v10:= temp;
  #L274b48.  v10:= v10 * 10;
  #L274b4c.  v10:= v10 / v0 @kind int;
  #L274b4e.  v10:= v10 * 10;
  #L274b52.  return v10;
}
