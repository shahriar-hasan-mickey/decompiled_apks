record `com.huawei.hms.scankit.p.Qa` @kind class @AccessFlag PUBLIC_FINAL extends `com.huawei.hms.scankit.aiscan.common.z` @kind class {
  `float` `com.huawei.hms.scankit.p.Qa.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.Qa.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.huawei.hms.scankit.p.Qa.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.Qa` v6 @kind this, `float` v7 , `float` v8 , `float` v9 , `boolean` v10 ) @signature `Lcom/huawei/hms/scankit/p/Qa;.<init>:(FFFZ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L27b05c.  v5:= 1I;
  #L27b05e.  v0:= v6 @kind object;
  #L27b060.  v1:= v7;
  #L27b062.  v2:= v8;
  #L27b064.  v3:= v9;
  #L27b066.  v4:= v10;
  #L27b068.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/huawei/hms/scankit/p/Qa;.<init>:(FFFZI)V` @kind direct;
  #L27b06e.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.Qa` v0 @kind this, `float` v1 , `float` v2 , `float` v3 , `boolean` v4 , `int` v5 ) @signature `Lcom/huawei/hms/scankit/p/Qa;.<init>:(FFFZI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27b080.  call `<init>`(v0, v1, v2, v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FFI)V` @kind direct;
  #L27b086.  v0.`com.huawei.hms.scankit.p.Qa.e` @type ^`float` := v3;
  #L27b08a.  v0.`com.huawei.hms.scankit.p.Qa.f` @type ^`int` := v5;
  #L27b08e.  v0.`com.huawei.hms.scankit.p.Qa.g` @type ^`boolean` := v4 @kind boolean;
  #L27b092.  return @kind void;
}
procedure `com.huawei.hms.scankit.p.Qa` `a`(`com.huawei.hms.scankit.p.Qa` v7 @kind this, `float` v8 , `float` v9 , `float` v10 , `boolean` v11 ) @signature `Lcom/huawei/hms/scankit/p/Qa;.a:(FFFZ)Lcom/huawei/hms/scankit/p/Qa;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L27afcc.  v0:= v7.`com.huawei.hms.scankit.p.Qa.f` @type ^`int`;
  #L27afd0.  v6:= v0 + 1;
  #L27afd4.  v0:= (`float`) v0 @kind i2f;
  #L27afd6.  call temp:= `b`(v7) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.b:()F` @kind virtual;
  #L27afdc.  v1:= temp;
  #L27afde.  v0:= v0 * v1 @kind float;
  #L27afe2.  v0:= v0 + v9 @kind float;
  #L27afe4.  v9:= (`float`) v6 @kind i2f;
  #L27afe6.  v2:= v0 / v9 @kind float;
  #L27afea.  v0:= v7.`com.huawei.hms.scankit.p.Qa.f` @type ^`int`;
  #L27afee.  v0:= (`float`) v0 @kind i2f;
  #L27aff0.  call temp:= `c`(v7) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.c:()F` @kind virtual;
  #L27aff6.  v1:= temp;
  #L27aff8.  v0:= v0 * v1 @kind float;
  #L27affc.  v0:= v0 + v8 @kind float;
  #L27affe.  v3:= v0 / v9 @kind float;
  #L27b002.  v8:= v7.`com.huawei.hms.scankit.p.Qa.f` @type ^`int`;
  #L27b006.  v8:= (`float`) v8 @kind i2f;
  #L27b008.  v0:= v7.`com.huawei.hms.scankit.p.Qa.e` @type ^`float`;
  #L27b00c.  v8:= v8 * v0 @kind float;
  #L27b010.  v8:= v8 + v10 @kind float;
  #L27b012.  v4:= v8 / v9 @kind float;
  #L27b016.  v8:= v7.`com.huawei.hms.scankit.p.Qa.g` @type ^`boolean` @kind boolean;
  #L27b01a.  if v8 == 0 then goto L27b022;
  #L27b01e.  v5:= v11;
  #L27b020.  goto L27b024;
  #L27b022.  v5:= v8;
  #L27b024.  v8:= new `com.huawei.hms.scankit.p.Qa`;
  #L27b028.  v1:= v8 @kind object;
  #L27b02a.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lcom/huawei/hms/scankit/p/Qa;.<init>:(FFFZI)V` @kind direct;
  #L27b030.  return v8 @kind object;
}
procedure `boolean` `a`(`com.huawei.hms.scankit.p.Qa` v1 @kind this, `float` v2 , `float` v3 , `float` v4 ) @signature `Lcom/huawei/hms/scankit/p/Qa;.a:(FFF)Z` @AccessFlag  {
    temp;
    v0;

  #L27af44.  call temp:= `c`(v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.c:()F` @kind virtual;
  #L27af4a.  v0:= temp;
  #L27af4c.  v3:= v3 - v0 @kind float;
  #L27af4e.  call temp:= `abs`(v3) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L27af54.  v3:= temp;
  #L27af56.  v0:= 0I;
  #L27af58.  v3:= fcmpg(v3, v2);
  #L27af5c.  if v3 > 0 then goto L27afa2;
  #L27af60.  call temp:= `b`(v1) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.b:()F` @kind virtual;
  #L27af66.  v3:= temp;
  #L27af68.  v4:= v4 - v3 @kind float;
  #L27af6a.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L27af70.  v3:= temp;
  #L27af72.  v3:= fcmpg(v3, v2);
  #L27af76.  if v3 > 0 then goto L27afa2;
  #L27af7a.  v3:= v1.`com.huawei.hms.scankit.p.Qa.e` @type ^`float`;
  #L27af7e.  v2:= v2 - v3 @kind float;
  #L27af80.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L27af86.  v2:= temp;
  #L27af88.  v3:= 1.0F;
  #L27af8c.  v3:= fcmpg(v2, v3);
  #L27af90.  if v3 <= 0 then goto L27afa0;
  #L27af94.  v3:= v1.`com.huawei.hms.scankit.p.Qa.e` @type ^`float`;
  #L27af98.  v2:= fcmpg(v2, v3);
  #L27af9c.  if v2 > 0 then goto L27afa2;
  #L27afa0.  v0:= 1I;
  #L27afa2.  return v0;
}
procedure `boolean` `d`(`com.huawei.hms.scankit.p.Qa` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/Qa;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27afb4.  v0:= v1.`com.huawei.hms.scankit.p.Qa.g` @type ^`boolean` @kind boolean;
  #L27afb8.  return v0;
}
procedure `float` `e`(`com.huawei.hms.scankit.p.Qa` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/Qa;.e:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27b044.  v0:= v1.`com.huawei.hms.scankit.p.Qa.e` @type ^`float`;
  #L27b048.  return v0;
}
