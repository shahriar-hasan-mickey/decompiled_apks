record `com.huawei.hms.scankit.p.C` @kind class @AccessFlag FINAL {
  `com.huawei.hms.scankit.p.y` `com.huawei.hms.scankit.p.C.a` @AccessFlag PRIVATE_FINAL;
  `com.huawei.hms.scankit.p.y` `com.huawei.hms.scankit.p.C.b` @AccessFlag PRIVATE_FINAL;
  `com.huawei.hms.scankit.p.K` `com.huawei.hms.scankit.p.C.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.C` v2 @kind this, `com.huawei.hms.scankit.p.y` v3 @kind object) @signature `Lcom/huawei/hms/scankit/p/C;.<init>:(Lcom/huawei/hms/scankit/p/y;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L26be6c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26be72.  call temp:= `b`(v3) @signature `Lcom/huawei/hms/scankit/p/y;.b:()I` @kind virtual;
  #L26be78.  v0:= temp;
  #L26be7a.  v1:= 8I;
  #L26be7e.  if v0 < v1 then goto L26bece;
  #L26be82.  v1:= 144I;
  #L26be86.  if v0 > v1 then goto L26bece;
  #L26be8a.  v0:= v0 ^& 1;
  #L26be8e.  if v0 != 0 then goto L26bece;
  #L26be92.  call temp:= `b`(v3) @signature `Lcom/huawei/hms/scankit/p/C;.b:(Lcom/huawei/hms/scankit/p/y;)Lcom/huawei/hms/scankit/p/K;` @kind static;
  #L26be98.  v0:= temp @kind object;
  #L26be9a.  v2.`com.huawei.hms.scankit.p.C.c` @type ^`com.huawei.hms.scankit.p.K` := v0 @kind object;
  #L26be9e.  call temp:= `a`(v2, v3) @signature `Lcom/huawei/hms/scankit/p/C;.a:(Lcom/huawei/hms/scankit/p/y;)Lcom/huawei/hms/scankit/p/y;` @kind direct;
  #L26bea4.  v3:= temp @kind object;
  #L26bea6.  v2.`com.huawei.hms.scankit.p.C.a` @type ^`com.huawei.hms.scankit.p.y` := v3 @kind object;
  #L26beaa.  v0:= new `com.huawei.hms.scankit.p.y`;
  #L26beae.  call temp:= `d`(v3) @signature `Lcom/huawei/hms/scankit/p/y;.d:()I` @kind virtual;
  #L26beb4.  v3:= temp;
  #L26beb6.  v1:= v2.`com.huawei.hms.scankit.p.C.a` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L26beba.  call temp:= `b`(v1) @signature `Lcom/huawei/hms/scankit/p/y;.b:()I` @kind virtual;
  #L26bec0.  v1:= temp;
  #L26bec2.  call `<init>`(v0, v3, v1) @signature `Lcom/huawei/hms/scankit/p/y;.<init>:(II)V` @kind direct;
  #L26bec8.  v2.`com.huawei.hms.scankit.p.C.b` @type ^`com.huawei.hms.scankit.p.y` := v0 @kind object;
  #L26becc.  return @kind void;
  #L26bece.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L26bed4.  v3:= temp @kind object;
  #L26bed6.  throw v3;
}
procedure `int` `a`(`com.huawei.hms.scankit.p.C` v5 @kind this, `int` v6 , `int` v7 ) @signature `Lcom/huawei/hms/scankit/p/C;.a:(II)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L26ba3c.  v0:= v6 + -1;
  #L26ba40.  v1:= 0I;
  #L26ba42.  call temp:= `a`(v5, v0, v1, v6, v7) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26ba48.  v2:= temp;
  #L26ba4a.  v3:= 1I;
  #L26ba4c.  v2:= v2 ^< v3 @kind int;
  #L26ba4e.  call temp:= `a`(v5, v0, v3, v6, v7) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26ba54.  v4:= temp;
  #L26ba56.  if v4 == 0 then goto L26ba5e;
  #L26ba5a.  v2:= v2 ^| 1;
  #L26ba5e.  v2:= v2 ^< v3 @kind int;
  #L26ba60.  v4:= 2I;
  #L26ba62.  call temp:= `a`(v5, v0, v4, v6, v7) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26ba68.  v0:= temp;
  #L26ba6a.  if v0 == 0 then goto L26ba72;
  #L26ba6e.  v2:= v2 ^| 1;
  #L26ba72.  v0:= v2 ^< 1;
  #L26ba76.  v2:= v7 + -2;
  #L26ba7a.  call temp:= `a`(v5, v1, v2, v6, v7) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26ba80.  v2:= temp;
  #L26ba82.  if v2 == 0 then goto L26ba8a;
  #L26ba86.  v0:= v0 ^| 1;
  #L26ba8a.  v0:= v0 ^< v3 @kind int;
  #L26ba8c.  v2:= v7 + -1;
  #L26ba90.  call temp:= `a`(v5, v1, v2, v6, v7) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26ba96.  v1:= temp;
  #L26ba98.  if v1 == 0 then goto L26baa0;
  #L26ba9c.  v0:= v0 ^| 1;
  #L26baa0.  v0:= v0 ^< v3 @kind int;
  #L26baa2.  call temp:= `a`(v5, v3, v2, v6, v7) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26baa8.  v1:= temp;
  #L26baaa.  if v1 == 0 then goto L26bab2;
  #L26baae.  v0:= v0 ^| 1;
  #L26bab2.  v0:= v0 ^< v3 @kind int;
  #L26bab4.  call temp:= `a`(v5, v4, v2, v6, v7) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26baba.  v1:= temp;
  #L26babc.  if v1 == 0 then goto L26bac4;
  #L26bac0.  v0:= v0 ^| 1;
  #L26bac4.  v0:= v0 ^< v3 @kind int;
  #L26bac6.  v1:= 3I;
  #L26bac8.  call temp:= `a`(v5, v1, v2, v6, v7) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bace.  v6:= temp;
  #L26bad0.  if v6 == 0 then goto L26bad8;
  #L26bad4.  v0:= v0 ^| 1;
  #L26bad8.  return v0;
}
procedure `com.huawei.hms.scankit.p.y` `a`(`com.huawei.hms.scankit.p.C` v16 @kind this, `com.huawei.hms.scankit.p.y` v17 @kind object) @signature `Lcom/huawei/hms/scankit/p/C;.a:(Lcom/huawei/hms/scankit/p/y;)Lcom/huawei/hms/scankit/p/y;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L2689d0.  v0:= v16 @kind object;
  #L2689d4.  v1:= v0.`com.huawei.hms.scankit.p.C.c` @type ^`com.huawei.hms.scankit.p.K` @kind object;
  #L2689d8.  call temp:= `e`(v1) @signature `Lcom/huawei/hms/scankit/p/K;.e:()I` @kind virtual;
  #L2689de.  v1:= temp;
  #L2689e0.  v2:= v0.`com.huawei.hms.scankit.p.C.c` @type ^`com.huawei.hms.scankit.p.K` @kind object;
  #L2689e4.  call temp:= `d`(v2) @signature `Lcom/huawei/hms/scankit/p/K;.d:()I` @kind virtual;
  #L2689ea.  v2:= temp;
  #L2689ec.  call temp:= `b`(v17) @signature `Lcom/huawei/hms/scankit/p/y;.b:()I` @kind virtual;
  #L2689f2.  v3:= temp;
  #L2689f4.  if v3 != v1 then goto L268aa6;
  #L2689f8.  v3:= v0.`com.huawei.hms.scankit.p.C.c` @type ^`com.huawei.hms.scankit.p.K` @kind object;
  #L2689fc.  call temp:= `b`(v3) @signature `Lcom/huawei/hms/scankit/p/K;.b:()I` @kind virtual;
  #L268a02.  v3:= temp;
  #L268a04.  v4:= v0.`com.huawei.hms.scankit.p.C.c` @type ^`com.huawei.hms.scankit.p.K` @kind object;
  #L268a08.  call temp:= `a`(v4) @signature `Lcom/huawei/hms/scankit/p/K;.a:()I` @kind virtual;
  #L268a0e.  v4:= temp;
  #L268a10.  v1:= v1 / v3 @kind int;
  #L268a12.  v2:= v2 / v4 @kind int;
  #L268a14.  v5:= v1 * v3 @kind int;
  #L268a18.  v6:= v2 * v4 @kind int;
  #L268a1c.  v7:= new `com.huawei.hms.scankit.p.y`;
  #L268a20.  call `<init>`(v7, v6, v5) @signature `Lcom/huawei/hms/scankit/p/y;.<init>:(II)V` @kind direct;
  #L268a26.  v6:= 0I;
  #L268a28.  if v6 >= v1 then goto L268aa4;
  #L268a2c.  v8:= v6 * v3 @kind int;
  #L268a30.  v9:= 0I;
  #L268a32.  if v9 >= v2 then goto L268a9a;
  #L268a36.  v10:= v9 * v4 @kind int;
  #L268a3a.  v11:= 0I;
  #L268a3c.  if v11 >= v3 then goto L268a90;
  #L268a40.  v12:= v3 + 2;
  #L268a44.  v12:= v12 * v6 @kind int;
  #L268a48.  v12:= v12 + 1;
  #L268a4c.  v12:= v12 + v11 @kind int;
  #L268a4e.  v13:= v8 + v11 @kind int;
  #L268a52.  v14:= 0I;
  #L268a54.  if v14 >= v4 then goto L268a86;
  #L268a58.  v15:= v4 + 2;
  #L268a5c.  v15:= v15 * v9 @kind int;
  #L268a60.  v15:= v15 + 1;
  #L268a64.  v15:= v15 + v14 @kind int;
  #L268a66.  v5:= v17 @kind object;
  #L268a6a.  call temp:= `b`(v5, v15, v12) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @kind virtual;
  #L268a70.  v15:= temp;
  #L268a72.  if v15 == 0 then goto L268a80;
  #L268a76.  v15:= v10 + v14 @kind int;
  #L268a7a.  call `c`(v7, v15, v13) @signature `Lcom/huawei/hms/scankit/p/y;.c:(II)V` @kind virtual;
  #L268a80.  v14:= v14 + 1;
  #L268a84.  goto L268a54;
  #L268a86.  v5:= v17 @kind object;
  #L268a8a.  v11:= v11 + 1;
  #L268a8e.  goto L268a3c;
  #L268a90.  v5:= v17 @kind object;
  #L268a94.  v9:= v9 + 1;
  #L268a98.  goto L268a32;
  #L268a9a.  v5:= v17 @kind object;
  #L268a9e.  v6:= v6 + 1;
  #L268aa2.  goto L268a28;
  #L268aa4.  return v7 @kind object;
  #L268aa6.  v1:= new `java.lang.IllegalArgumentException`;
  #L268aaa.  v2:= "Dimension of bitMatrix must match the version size" @kind object;
  #L268aae.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L268ab4.  throw v1;
}
procedure `boolean` `a`(`com.huawei.hms.scankit.p.C` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @AccessFlag PRIVATE {
    temp;

  #L268638.  if v1 >= 0 then goto L26864c;
  #L26863c.  v1:= v1 + v3 @kind int;
  #L26863e.  v3:= v3 + 4;
  #L268642.  v3:= v3 ^& 7;
  #L268646.  v3:= v3 - 4;
  #L26864a.  v2:= v2 + v3 @kind int;
  #L26864c.  if v2 >= 0 then goto L268660;
  #L268650.  v2:= v2 + v4 @kind int;
  #L268652.  v4:= v4 + 4;
  #L268656.  v3:= v4 ^& 7;
  #L26865a.  v3:= v3 - 4;
  #L26865e.  v1:= v1 + v3 @kind int;
  #L268660.  v3:= v0.`com.huawei.hms.scankit.p.C.b` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L268664.  call `c`(v3, v2, v1) @signature `Lcom/huawei/hms/scankit/p/y;.c:(II)V` @kind virtual;
  #L26866a.  v3:= v0.`com.huawei.hms.scankit.p.C.a` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L26866e.  call temp:= `b`(v3, v2, v1) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @kind virtual;
  #L268674.  v1:= temp;
  #L268676.  return v1;
}
procedure `int`[] `a`(`com.huawei.hms.scankit.p.C` v4 @kind this, `int` v5 , `int` v6 , `int` v7 , `int` v8 , `byte`[] v9 @kind object, `int` v10 ) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII[BI)[I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26bdc0.  if v5 >= v6 then goto L26bdec;
  #L26bdc4.  if v7 < 0 then goto L26bdec;
  #L26bdc8.  v0:= v4.`com.huawei.hms.scankit.p.C.b` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L26bdcc.  call temp:= `b`(v0, v7, v5) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @kind virtual;
  #L26bdd2.  v0:= temp;
  #L26bdd4.  if v0 != 0 then goto L26bdec;
  #L26bdd8.  v0:= v10 + 1;
  #L26bddc.  call temp:= `b`(v4, v5, v7, v6, v8) @signature `Lcom/huawei/hms/scankit/p/C;.b:(IIII)I` @kind direct;
  #L26bde2.  v1:= temp;
  #L26bde4.  v1:= (`byte`) v1 @kind i2b;
  #L26bde6.  v9[v10]:= v1 @kind byte;
  #L26bdea.  v10:= v0;
  #L26bdec.  v5:= v5 + -2;
  #L26bdf0.  v7:= v7 + 2;
  #L26bdf4.  if v5 < 0 then goto L26bdfc;
  #L26bdf8.  if v7 < v8 then goto L26bdc0;
  #L26bdfc.  v0:= 1I;
  #L26bdfe.  v5:= v5 + v0 @kind int;
  #L26be00.  v1:= 3I;
  #L26be02.  v7:= v7 + v1 @kind int;
  #L26be04.  if v5 < 0 then goto L26be30;
  #L26be08.  if v7 >= v8 then goto L26be30;
  #L26be0c.  v2:= v4.`com.huawei.hms.scankit.p.C.b` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L26be10.  call temp:= `b`(v2, v7, v5) @signature `Lcom/huawei/hms/scankit/p/y;.b:(II)Z` @kind virtual;
  #L26be16.  v2:= temp;
  #L26be18.  if v2 != 0 then goto L26be30;
  #L26be1c.  v2:= v10 + 1;
  #L26be20.  call temp:= `b`(v4, v5, v7, v6, v8) @signature `Lcom/huawei/hms/scankit/p/C;.b:(IIII)I` @kind direct;
  #L26be26.  v3:= temp;
  #L26be28.  v3:= (`byte`) v3 @kind i2b;
  #L26be2a.  v9[v10]:= v3 @kind byte;
  #L26be2e.  v10:= v2;
  #L26be30.  v5:= v5 + 2;
  #L26be34.  v7:= v7 + -2;
  #L26be38.  if v5 >= v6 then goto L26be40;
  #L26be3c.  if v7 >= 0 then goto L26be04;
  #L26be40.  v5:= v5 + v1 @kind int;
  #L26be42.  v7:= v7 + v0 @kind int;
  #L26be44.  v6:= new `int`[v1];
  #L26be48.  v8:= 0I;
  #L26be4a.  v6[v8]:= v5;
  #L26be4e.  v6[v0]:= v7;
  #L26be52.  v5:= 2I;
  #L26be54.  v6[v5]:= v10;
  #L26be58.  return v6 @kind object;
}
procedure `int` `b`(`com.huawei.hms.scankit.p.C` v4 @kind this, `int` v5 , `int` v6 ) @signature `Lcom/huawei/hms/scankit/p/C;.b:(II)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26baec.  v0:= v5 + -3;
  #L26baf0.  v1:= 0I;
  #L26baf2.  call temp:= `a`(v4, v0, v1, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26baf8.  v0:= temp;
  #L26bafa.  v2:= 1I;
  #L26bafc.  v0:= v0 ^< v2 @kind int;
  #L26bafe.  v3:= v5 + -2;
  #L26bb02.  call temp:= `a`(v4, v3, v1, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bb08.  v3:= temp;
  #L26bb0a.  if v3 == 0 then goto L26bb12;
  #L26bb0e.  v0:= v0 ^| 1;
  #L26bb12.  v0:= v0 ^< v2 @kind int;
  #L26bb14.  v3:= v5 + -1;
  #L26bb18.  call temp:= `a`(v4, v3, v1, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bb1e.  v3:= temp;
  #L26bb20.  if v3 == 0 then goto L26bb28;
  #L26bb24.  v0:= v0 ^| 1;
  #L26bb28.  v0:= v0 ^< v2 @kind int;
  #L26bb2a.  v3:= v6 + -4;
  #L26bb2e.  call temp:= `a`(v4, v1, v3, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bb34.  v3:= temp;
  #L26bb36.  if v3 == 0 then goto L26bb3e;
  #L26bb3a.  v0:= v0 ^| 1;
  #L26bb3e.  v0:= v0 ^< v2 @kind int;
  #L26bb40.  v3:= v6 + -3;
  #L26bb44.  call temp:= `a`(v4, v1, v3, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bb4a.  v3:= temp;
  #L26bb4c.  if v3 == 0 then goto L26bb54;
  #L26bb50.  v0:= v0 ^| 1;
  #L26bb54.  v0:= v0 ^< v2 @kind int;
  #L26bb56.  v3:= v6 + -2;
  #L26bb5a.  call temp:= `a`(v4, v1, v3, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bb60.  v3:= temp;
  #L26bb62.  if v3 == 0 then goto L26bb6a;
  #L26bb66.  v0:= v0 ^| 1;
  #L26bb6a.  v0:= v0 ^< v2 @kind int;
  #L26bb6c.  v3:= v6 + -1;
  #L26bb70.  call temp:= `a`(v4, v1, v3, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bb76.  v1:= temp;
  #L26bb78.  if v1 == 0 then goto L26bb80;
  #L26bb7c.  v0:= v0 ^| 1;
  #L26bb80.  v0:= v0 ^< v2 @kind int;
  #L26bb82.  call temp:= `a`(v4, v2, v3, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bb88.  v5:= temp;
  #L26bb8a.  if v5 == 0 then goto L26bb92;
  #L26bb8e.  v0:= v0 ^| 1;
  #L26bb92.  return v0;
}
procedure `int` `b`(`com.huawei.hms.scankit.p.C` v5 @kind this, `int` v6 , `int` v7 , `int` v8 , `int` v9 ) @signature `Lcom/huawei/hms/scankit/p/C;.b:(IIII)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L26bba4.  v0:= v6 + -2;
  #L26bba8.  v1:= v7 + -2;
  #L26bbac.  call temp:= `a`(v5, v0, v1, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bbb2.  v2:= temp;
  #L26bbb4.  v2:= v2 ^< 1;
  #L26bbb8.  v3:= v7 + -1;
  #L26bbbc.  call temp:= `a`(v5, v0, v3, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bbc2.  v0:= temp;
  #L26bbc4.  if v0 == 0 then goto L26bbcc;
  #L26bbc8.  v2:= v2 ^| 1;
  #L26bbcc.  v0:= v2 ^< 1;
  #L26bbd0.  v2:= v6 + -1;
  #L26bbd4.  call temp:= `a`(v5, v2, v1, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bbda.  v4:= temp;
  #L26bbdc.  if v4 == 0 then goto L26bbe4;
  #L26bbe0.  v0:= v0 ^| 1;
  #L26bbe4.  v0:= v0 ^< 1;
  #L26bbe8.  call temp:= `a`(v5, v2, v3, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bbee.  v4:= temp;
  #L26bbf0.  if v4 == 0 then goto L26bbf8;
  #L26bbf4.  v0:= v0 ^| 1;
  #L26bbf8.  v0:= v0 ^< 1;
  #L26bbfc.  call temp:= `a`(v5, v2, v7, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bc02.  v2:= temp;
  #L26bc04.  if v2 == 0 then goto L26bc0c;
  #L26bc08.  v0:= v0 ^| 1;
  #L26bc0c.  v0:= v0 ^< 1;
  #L26bc10.  call temp:= `a`(v5, v6, v1, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bc16.  v1:= temp;
  #L26bc18.  if v1 == 0 then goto L26bc20;
  #L26bc1c.  v0:= v0 ^| 1;
  #L26bc20.  v0:= v0 ^< 1;
  #L26bc24.  call temp:= `a`(v5, v6, v3, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bc2a.  v1:= temp;
  #L26bc2c.  if v1 == 0 then goto L26bc34;
  #L26bc30.  v0:= v0 ^| 1;
  #L26bc34.  v0:= v0 ^< 1;
  #L26bc38.  call temp:= `a`(v5, v6, v7, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bc3e.  v6:= temp;
  #L26bc40.  if v6 == 0 then goto L26bc48;
  #L26bc44.  v0:= v0 ^| 1;
  #L26bc48.  return v0;
}
procedure `com.huawei.hms.scankit.p.K` `b`(`com.huawei.hms.scankit.p.y` v1 @kind object) @signature `Lcom/huawei/hms/scankit/p/C;.b:(Lcom/huawei/hms/scankit/p/y;)Lcom/huawei/hms/scankit/p/K;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2689a4.  call temp:= `b`(v1) @signature `Lcom/huawei/hms/scankit/p/y;.b:()I` @kind virtual;
  #L2689aa.  v0:= temp;
  #L2689ac.  call temp:= `d`(v1) @signature `Lcom/huawei/hms/scankit/p/y;.d:()I` @kind virtual;
  #L2689b2.  v1:= temp;
  #L2689b4.  call temp:= `a`(v0, v1) @signature `Lcom/huawei/hms/scankit/p/K;.a:(II)Lcom/huawei/hms/scankit/p/K;` @kind static;
  #L2689ba.  v1:= temp @kind object;
  #L2689bc.  return v1 @kind object;
}
procedure `int` `c`(`com.huawei.hms.scankit.p.C` v7 @kind this, `int` v8 , `int` v9 ) @signature `Lcom/huawei/hms/scankit/p/C;.c:(II)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L26bc5c.  v0:= v8 + -1;
  #L26bc60.  v1:= 0I;
  #L26bc62.  call temp:= `a`(v7, v0, v1, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bc68.  v2:= temp;
  #L26bc6a.  v3:= 1I;
  #L26bc6c.  v2:= v2 ^< v3 @kind int;
  #L26bc6e.  v4:= v9 + -1;
  #L26bc72.  call temp:= `a`(v7, v0, v4, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bc78.  v0:= temp;
  #L26bc7a.  if v0 == 0 then goto L26bc82;
  #L26bc7e.  v2:= v2 ^| 1;
  #L26bc82.  v0:= v2 ^< 1;
  #L26bc86.  v2:= v9 + -3;
  #L26bc8a.  call temp:= `a`(v7, v1, v2, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bc90.  v5:= temp;
  #L26bc92.  if v5 == 0 then goto L26bc9a;
  #L26bc96.  v0:= v0 ^| 1;
  #L26bc9a.  v0:= v0 ^< v3 @kind int;
  #L26bc9c.  v5:= v9 + -2;
  #L26bca0.  call temp:= `a`(v7, v1, v5, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bca6.  v6:= temp;
  #L26bca8.  if v6 == 0 then goto L26bcb0;
  #L26bcac.  v0:= v0 ^| 1;
  #L26bcb0.  v0:= v0 ^< v3 @kind int;
  #L26bcb2.  call temp:= `a`(v7, v1, v4, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bcb8.  v1:= temp;
  #L26bcba.  if v1 == 0 then goto L26bcc2;
  #L26bcbe.  v0:= v0 ^| 1;
  #L26bcc2.  v0:= v0 ^< v3 @kind int;
  #L26bcc4.  call temp:= `a`(v7, v3, v2, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bcca.  v1:= temp;
  #L26bccc.  if v1 == 0 then goto L26bcd4;
  #L26bcd0.  v0:= v0 ^| 1;
  #L26bcd4.  v0:= v0 ^< v3 @kind int;
  #L26bcd6.  call temp:= `a`(v7, v3, v5, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bcdc.  v1:= temp;
  #L26bcde.  if v1 == 0 then goto L26bce6;
  #L26bce2.  v0:= v0 ^| 1;
  #L26bce6.  v0:= v0 ^< v3 @kind int;
  #L26bce8.  call temp:= `a`(v7, v3, v4, v8, v9) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bcee.  v8:= temp;
  #L26bcf0.  if v8 == 0 then goto L26bcf8;
  #L26bcf4.  v0:= v0 ^| 1;
  #L26bcf8.  return v0;
}
procedure `int` `d`(`com.huawei.hms.scankit.p.C` v4 @kind this, `int` v5 , `int` v6 ) @signature `Lcom/huawei/hms/scankit/p/C;.d:(II)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26bd0c.  v0:= v5 + -3;
  #L26bd10.  v1:= 0I;
  #L26bd12.  call temp:= `a`(v4, v0, v1, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bd18.  v0:= temp;
  #L26bd1a.  v2:= 1I;
  #L26bd1c.  v0:= v0 ^< v2 @kind int;
  #L26bd1e.  v3:= v5 + -2;
  #L26bd22.  call temp:= `a`(v4, v3, v1, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bd28.  v3:= temp;
  #L26bd2a.  if v3 == 0 then goto L26bd32;
  #L26bd2e.  v0:= v0 ^| 1;
  #L26bd32.  v0:= v0 ^< v2 @kind int;
  #L26bd34.  v3:= v5 + -1;
  #L26bd38.  call temp:= `a`(v4, v3, v1, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bd3e.  v3:= temp;
  #L26bd40.  if v3 == 0 then goto L26bd48;
  #L26bd44.  v0:= v0 ^| 1;
  #L26bd48.  v0:= v0 ^< v2 @kind int;
  #L26bd4a.  v3:= v6 + -2;
  #L26bd4e.  call temp:= `a`(v4, v1, v3, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bd54.  v3:= temp;
  #L26bd56.  if v3 == 0 then goto L26bd5e;
  #L26bd5a.  v0:= v0 ^| 1;
  #L26bd5e.  v0:= v0 ^< v2 @kind int;
  #L26bd60.  v3:= v6 + -1;
  #L26bd64.  call temp:= `a`(v4, v1, v3, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bd6a.  v1:= temp;
  #L26bd6c.  if v1 == 0 then goto L26bd74;
  #L26bd70.  v0:= v0 ^| 1;
  #L26bd74.  v0:= v0 ^< v2 @kind int;
  #L26bd76.  call temp:= `a`(v4, v2, v3, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bd7c.  v1:= temp;
  #L26bd7e.  if v1 == 0 then goto L26bd86;
  #L26bd82.  v0:= v0 ^| 1;
  #L26bd86.  v0:= v0 ^< v2 @kind int;
  #L26bd88.  v1:= 2I;
  #L26bd8a.  call temp:= `a`(v4, v1, v3, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bd90.  v1:= temp;
  #L26bd92.  if v1 == 0 then goto L26bd9a;
  #L26bd96.  v0:= v0 ^| 1;
  #L26bd9a.  v0:= v0 ^< v2 @kind int;
  #L26bd9c.  v1:= 3I;
  #L26bd9e.  call temp:= `a`(v4, v1, v3, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII)Z` @kind direct;
  #L26bda4.  v5:= temp;
  #L26bda6.  if v5 == 0 then goto L26bdae;
  #L26bdaa.  v0:= v0 ^| 1;
  #L26bdae.  return v0;
}
procedure `com.huawei.hms.scankit.p.K` `a`(`com.huawei.hms.scankit.p.C` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/C;.a:()Lcom/huawei/hms/scankit/p/K;` @AccessFlag  {
    temp;
    v0;

  #L26898c.  v0:= v1.`com.huawei.hms.scankit.p.C.c` @type ^`com.huawei.hms.scankit.p.K` @kind object;
  #L268990.  return v0 @kind object;
}
procedure `byte`[] `b`(`com.huawei.hms.scankit.p.C` v19 @kind this) @signature `Lcom/huawei/hms/scankit/p/C;.b:()[B` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L2686c4.  v7:= v19 @kind object;
  #L2686c8.  v0:= v7.`com.huawei.hms.scankit.p.C.c` @type ^`com.huawei.hms.scankit.p.K` @kind object;
  #L2686cc.  call temp:= `f`(v0) @signature `Lcom/huawei/hms/scankit/p/K;.f:()I` @kind virtual;
  #L2686d2.  v0:= temp;
  #L2686d4.  v8:= new `byte`[v0];
  #L2686d8.  v0:= v7.`com.huawei.hms.scankit.p.C.a` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L2686dc.  call temp:= `b`(v0) @signature `Lcom/huawei/hms/scankit/p/y;.b:()I` @kind virtual;
  #L2686e2.  v9:= temp;
  #L2686e4.  v0:= v7.`com.huawei.hms.scankit.p.C.a` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L2686e8.  call temp:= `d`(v0) @signature `Lcom/huawei/hms/scankit/p/y;.d:()I` @kind virtual;
  #L2686ee.  v10:= temp;
  #L2686f0.  v11:= 4I;
  #L2686f2.  v12:= 0I;
  #L2686f4.  v1:= 4I;
  #L2686f6.  v3:= 0I;
  #L2686f8.  v6:= 0I;
  #L2686fa.  v13:= 0I;
  #L2686fc.  v14:= 0I;
  #L2686fe.  v15:= 0I;
  #L268700.  v16:= 0I;
  #L268704.  v17:= 1I;
  #L268708.  if v1 != v9 then goto L268736;
  #L26870c.  if v3 != 0 then goto L268736;
  #L268710.  if v13 != 0 then goto L268736;
  #L268714.  v0:= v6 + 1;
  #L268718.  call temp:= `a`(v7, v9, v10) @signature `Lcom/huawei/hms/scankit/p/C;.a:(II)I` @kind direct;
  #L26871e.  v2:= temp;
  #L268720.  v2:= (`byte`) v2 @kind i2b;
  #L268722.  v8[v6]:= v2 @kind byte;
  #L268726.  v1:= v1 + -2;
  #L26872a.  v3:= v3 + 2;
  #L26872e.  v6:= v0;
  #L268730.  v13:= 1I;
  #L268732.  goto L268804;
  #L268736.  v0:= v9 + -2;
  #L26873a.  if v1 != v0 then goto L26876e;
  #L26873e.  if v3 != 0 then goto L26876e;
  #L268742.  v2:= v10 ^& 3;
  #L268746.  if v2 == 0 then goto L26876e;
  #L26874a.  if v14 != 0 then goto L26876e;
  #L26874e.  v0:= v6 + 1;
  #L268752.  call temp:= `b`(v7, v9, v10) @signature `Lcom/huawei/hms/scankit/p/C;.b:(II)I` @kind direct;
  #L268758.  v2:= temp;
  #L26875a.  v2:= (`byte`) v2 @kind i2b;
  #L26875c.  v8[v6]:= v2 @kind byte;
  #L268760.  v1:= v1 + -2;
  #L268764.  v3:= v3 + 2;
  #L268768.  v6:= v0;
  #L26876a.  v14:= 1I;
  #L26876c.  goto L268804;
  #L26876e.  v2:= v9 + 4;
  #L268772.  v5:= 2I;
  #L268774.  if v1 != v2 then goto L2687a8;
  #L268778.  if v3 != v5 then goto L2687a8;
  #L26877c.  v2:= v10 ^& 7;
  #L268780.  if v2 != 0 then goto L2687a8;
  #L268784.  if v15 != 0 then goto L2687a8;
  #L268788.  v0:= v6 + 1;
  #L26878c.  call temp:= `c`(v7, v9, v10) @signature `Lcom/huawei/hms/scankit/p/C;.c:(II)I` @kind direct;
  #L268792.  v2:= temp;
  #L268794.  v2:= (`byte`) v2 @kind i2b;
  #L268796.  v8[v6]:= v2 @kind byte;
  #L26879a.  v1:= v1 + -2;
  #L26879e.  v3:= v3 + 2;
  #L2687a2.  v6:= v0;
  #L2687a4.  v15:= 1I;
  #L2687a6.  goto L268804;
  #L2687a8.  if v1 != v0 then goto L2687de;
  #L2687ac.  if v3 != 0 then goto L2687de;
  #L2687b0.  v0:= v10 ^& 7;
  #L2687b4.  if v0 != v11 then goto L2687de;
  #L2687b8.  if v16 != 0 then goto L2687de;
  #L2687bc.  v0:= v6 + 1;
  #L2687c0.  call temp:= `d`(v7, v9, v10) @signature `Lcom/huawei/hms/scankit/p/C;.d:(II)I` @kind direct;
  #L2687c6.  v2:= temp;
  #L2687c8.  v2:= (`byte`) v2 @kind i2b;
  #L2687ca.  v8[v6]:= v2 @kind byte;
  #L2687ce.  v1:= v1 + -2;
  #L2687d2.  v3:= v3 + 2;
  #L2687d6.  v6:= v0;
  #L2687d8.  v16:= 1I;
  #L2687dc.  goto L268804;
  #L2687de.  v0:= v19 @kind object;
  #L2687e2.  v2:= v9;
  #L2687e4.  v4:= v10;
  #L2687e6.  v18:= 2I;
  #L2687ea.  v5:= v8 @kind object;
  #L2687ec.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/huawei/hms/scankit/p/C;.a:(IIII[BI)[I` @kind direct;
  #L2687f2.  v0:= temp @kind object;
  #L2687f4.  v1:= v0[v12];
  #L2687f8.  v2:= v0[v17];
  #L2687fc.  v0:= v0[v18];
  #L268800.  v6:= v0;
  #L268802.  v3:= v2;
  #L268804.  if v1 < v9 then goto L268704;
  #L268808.  if v3 < v10 then goto L268704;
  #L26880c.  v0:= v7.`com.huawei.hms.scankit.p.C.c` @type ^`com.huawei.hms.scankit.p.K` @kind object;
  #L268810.  call temp:= `f`(v0) @signature `Lcom/huawei/hms/scankit/p/K;.f:()I` @kind virtual;
  #L268816.  v0:= temp;
  #L268818.  if v6 != v0 then goto L26881e;
  #L26881c.  return v8 @kind object;
  #L26881e.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L268824.  v0:= temp @kind object;
  #L268826.  throw v0;
}
