record `com.huawei.hms.scankit.p.Ic` @kind class @AccessFlag PUBLIC_FINAL {
  `byte`[][] `com.huawei.hms.scankit.p.Ic.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.Ic.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.scankit.p.Ic.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.Ic` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/huawei/hms/scankit/p/Ic;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2706c8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2706ce.  v0:= 2I;
  #L2706d0.  v0:= new `int`[v0];
  #L2706d4.  v1:= 1I;
  #L2706d6.  v0[v1]:= v3;
  #L2706da.  v1:= 0I;
  #L2706dc.  v0[v1]:= v4;
  #L2706e0.  v1:= constclass @type ^`byte` @kind object;
  #L2706e4.  call temp:= `newInstance`(v1, v0) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;[I)Ljava/lang/Object;` @kind static;
  #L2706ea.  v0:= temp @kind object;
  #L2706ec.  v0:= (`byte`[][]) v0 @kind object;
  #L2706f0.  v2.`com.huawei.hms.scankit.p.Ic.a` @type ^`byte`[][] := v0 @kind object;
  #L2706f4.  v2.`com.huawei.hms.scankit.p.Ic.b` @type ^`int` := v3;
  #L2706f8.  v2.`com.huawei.hms.scankit.p.Ic.c` @type ^`int` := v4;
  #L2706fc.  return @kind void;
}
procedure `byte` `a`(`com.huawei.hms.scankit.p.Ic` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/huawei/hms/scankit/p/Ic;.a:(II)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26ff7c.  v0:= v1.`com.huawei.hms.scankit.p.Ic.a` @type ^`byte`[][] @kind object;
  #L26ff80.  call temp:= `a`(v0, v3) @signature `Lcom/huawei/hms/scankit/util/b;.a:([[BI)Z` @kind static;
  #L26ff86.  v0:= temp;
  #L26ff88.  if v0 == 0 then goto L26ffae;
  #L26ff8c.  v0:= v1.`com.huawei.hms.scankit.p.Ic.a` @type ^`byte`[][] @kind object;
  #L26ff90.  v0:= v0[v3] @kind object;
  #L26ff94.  call temp:= `a`(v0, v2) @signature `Lcom/huawei/hms/scankit/util/b;.a:([BI)Z` @kind static;
  #L26ff9a.  v0:= temp;
  #L26ff9c.  if v0 == 0 then goto L26ffae;
  #L26ffa0.  v0:= v1.`com.huawei.hms.scankit.p.Ic.a` @type ^`byte`[][] @kind object;
  #L26ffa4.  v3:= v0[v3] @kind object;
  #L26ffa8.  v2:= v3[v2] @kind byte;
  #L26ffac.  return v2;
  #L26ffae.  v2:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L26ffb2.  call `<init>`(v2) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L26ffb8.  throw v2;
  #L26ffba.  v2:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L26ffbc.  throw v2;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L26ff7c..L26ffba] goto L26ffba;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.Ic` v4 @kind this, `byte` v5 ) @signature `Lcom/huawei/hms/scankit/p/Ic;.a:(B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L270710.  v0:= v4.`com.huawei.hms.scankit.p.Ic.a` @type ^`byte`[][] @kind object;
  #L270714.  v1:= length @variable v0;
  #L270716.  v2:= 0I;
  #L270718.  if v2 >= v1 then goto L27072c;
  #L27071c.  v3:= v0[v2] @kind object;
  #L270720.  call `fill`(v3, v5) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L270726.  v2:= v2 + 1;
  #L27072a.  goto L270718;
  #L27072c.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.Ic` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/huawei/hms/scankit/p/Ic;.a:(III)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2707a4.  v0:= v1.`com.huawei.hms.scankit.p.Ic.a` @type ^`byte`[][] @kind object;
  #L2707a8.  call temp:= `a`(v0, v3) @signature `Lcom/huawei/hms/scankit/util/b;.a:([[BI)Z` @kind static;
  #L2707ae.  v0:= temp;
  #L2707b0.  if v0 == 0 then goto L2707d8;
  #L2707b4.  v0:= v1.`com.huawei.hms.scankit.p.Ic.a` @type ^`byte`[][] @kind object;
  #L2707b8.  v0:= v0[v3] @kind object;
  #L2707bc.  call temp:= `a`(v0, v2) @signature `Lcom/huawei/hms/scankit/util/b;.a:([BI)Z` @kind static;
  #L2707c2.  v0:= temp;
  #L2707c4.  if v0 == 0 then goto L2707d8;
  #L2707c8.  v0:= v1.`com.huawei.hms.scankit.p.Ic.a` @type ^`byte`[][] @kind object;
  #L2707cc.  v3:= v0[v3] @kind object;
  #L2707d0.  v4:= (`byte`) v4 @kind i2b;
  #L2707d2.  v3[v2]:= v4 @kind byte;
  #L2707d6.  return @kind void;
  #L2707d8.  v2:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L2707dc.  call `<init>`(v2) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L2707e2.  throw v2;
  #L2707e4.  v2:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L2707e6.  throw v2;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L2707a4..L2707e4] goto L2707e4;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.Ic` v1 @kind this, `int` v2 , `int` v3 , `boolean` v4 ) @signature `Lcom/huawei/hms/scankit/p/Ic;.a:(IIZ)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L270740.  v0:= v1.`com.huawei.hms.scankit.p.Ic.a` @type ^`byte`[][] @kind object;
  #L270744.  call temp:= `a`(v0, v3) @signature `Lcom/huawei/hms/scankit/util/b;.a:([[BI)Z` @kind static;
  #L27074a.  v0:= temp;
  #L27074c.  if v0 == 0 then goto L270774;
  #L270750.  v0:= v1.`com.huawei.hms.scankit.p.Ic.a` @type ^`byte`[][] @kind object;
  #L270754.  v0:= v0[v3] @kind object;
  #L270758.  call temp:= `a`(v0, v2) @signature `Lcom/huawei/hms/scankit/util/b;.a:([BI)Z` @kind static;
  #L27075e.  v0:= temp;
  #L270760.  if v0 == 0 then goto L270774;
  #L270764.  v0:= v1.`com.huawei.hms.scankit.p.Ic.a` @type ^`byte`[][] @kind object;
  #L270768.  v3:= v0[v3] @kind object;
  #L27076c.  v4:= (`byte`) v4 @kind i2b;
  #L27076e.  v3[v2]:= v4 @kind byte;
  #L270772.  return @kind void;
  #L270774.  v2:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L270778.  call `<init>`(v2) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L27077e.  throw v2;
  #L270780.  v2:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L270782.  throw v2;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L270740..L270780] goto L270780;
}
procedure `byte`[][] `a`(`com.huawei.hms.scankit.p.Ic` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/Ic;.a:()[[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26ffe0.  v0:= v1.`com.huawei.hms.scankit.p.Ic.a` @type ^`byte`[][] @kind object;
  #L26ffe4.  return v0 @kind object;
}
procedure `int` `b`(`com.huawei.hms.scankit.p.Ic` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/Ic;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26fff8.  v0:= v1.`com.huawei.hms.scankit.p.Ic.c` @type ^`int`;
  #L26fffc.  return v0;
}
procedure `int` `c`(`com.huawei.hms.scankit.p.Ic` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/Ic;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L270010.  v0:= v1.`com.huawei.hms.scankit.p.Ic.b` @type ^`int`;
  #L270014.  return v0;
}
procedure `java.lang.String` `toString`(`com.huawei.hms.scankit.p.Ic` v7 @kind this) @signature `Lcom/huawei/hms/scankit/p/Ic;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L270028.  v0:= new `java.lang.StringBuilder`;
  #L27002c.  v1:= v7.`com.huawei.hms.scankit.p.Ic.b` @type ^`int`;
  #L270030.  v1:= v1 * 2;
  #L270034.  v2:= v7.`com.huawei.hms.scankit.p.Ic.c` @type ^`int`;
  #L270038.  v1:= v1 * v2 @kind int;
  #L27003c.  v1:= v1 + 2;
  #L270040.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L270046.  v1:= 0I;
  #L270048.  v2:= 0I;
  #L27004a.  v3:= v7.`com.huawei.hms.scankit.p.Ic.c` @type ^`int`;
  #L27004e.  if v2 >= v3 then goto L2700aa;
  #L270052.  v3:= v7.`com.huawei.hms.scankit.p.Ic.a` @type ^`byte`[][] @kind object;
  #L270056.  v3:= v3[v2] @kind object;
  #L27005a.  v4:= 0I;
  #L27005c.  v5:= v7.`com.huawei.hms.scankit.p.Ic.b` @type ^`int`;
  #L270060.  if v4 >= v5 then goto L27009a;
  #L270064.  v5:= v3[v4] @kind byte;
  #L270068.  if v5 == 0 then goto L27008a;
  #L27006c.  v6:= 1I;
  #L27006e.  if v5 == v6 then goto L27007e;
  #L270072.  v5:= "  " @kind object;
  #L270076.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27007c.  goto L270094;
  #L27007e.  v5:= " 1" @kind object;
  #L270082.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L270088.  goto L270094;
  #L27008a.  v5:= " 0" @kind object;
  #L27008e.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L270094.  v4:= v4 + 1;
  #L270098.  goto L27005c;
  #L27009a.  v3:= 10I;
  #L27009e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2700a4.  v2:= v2 + 1;
  #L2700a8.  goto L27004a;
  #L2700aa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2700b0.  v0:= temp @kind object;
  #L2700b2.  return v0 @kind object;
}
