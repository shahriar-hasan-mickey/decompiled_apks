record `com.huawei.hms.scankit.p.w` @kind class @AccessFlag PUBLIC_FINAL {
  `com.huawei.hms.scankit.p.v` `com.huawei.hms.scankit.p.w.a` @AccessFlag PRIVATE_FINAL;
  `com.huawei.hms.scankit.p.y` `com.huawei.hms.scankit.p.w.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.w` v1 @kind this, `com.huawei.hms.scankit.p.v` v2 @kind object) @signature `Lcom/huawei/hms/scankit/p/w;.<init>:(Lcom/huawei/hms/scankit/p/v;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L29ebc0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29ebc6.  if v2 == 0 then goto L29ebd0;
  #L29ebca.  v1.`com.huawei.hms.scankit.p.w.a` @type ^`com.huawei.hms.scankit.p.v` := v2 @kind object;
  #L29ebce.  return @kind void;
  #L29ebd0.  v2:= new `java.lang.IllegalArgumentException`;
  #L29ebd4.  v0:= "Binarizer must be non-null." @kind object;
  #L29ebd8.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29ebde.  throw v2;
  #L29ebe0.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L29ebe2.  throw v2;
  catch `java.lang.Exception` @[L29ebd0..L29ebd4] goto L29ebe0;
  catch `java.lang.Exception` @[L29ebd8..L29ebe0] goto L29ebe0;
}
procedure `com.huawei.hms.scankit.p.x` `a`(`com.huawei.hms.scankit.p.w` v15 @kind this, `int` v16 , `int` v17 , `int`[] v18 @kind object, `int`[] v19 @kind object, `byte`[] v20 @kind object, `int` v21 ) @signature `Lcom/huawei/hms/scankit/p/w;.a:(II[I[I[BI)Lcom/huawei/hms/scankit/p/x;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L29ea34.  v0:= v16;
  #L29ea38.  v1:= v17;
  #L29ea3c.  v2:= new `com.huawei.hms.scankit.p.x`;
  #L29ea40.  call `<init>`(v2, v1) @signature `Lcom/huawei/hms/scankit/p/x;.<init>:(I)V` @kind direct;
  #L29ea46.  v3:= 1I;
  #L29ea48.  v4:= 1I;
  #L29ea4a.  if v4 >= v1 then goto L29ea76;
  #L29ea4e.  v5:= v4 + -1;
  #L29ea52.  v5:= v19[v5];
  #L29ea56.  v6:= v20[v4] @kind byte;
  #L29ea5a.  v6:= v6 ^& 255;
  #L29ea5e.  v7:= v20[v4] @kind byte;
  #L29ea62.  v7:= v7 ^& 255;
  #L29ea66.  v6:= v6 * v7 @kind int;
  #L29ea6a.  v5:= v5 + v6 @kind int;
  #L29ea6c.  v19[v4]:= v5;
  #L29ea70.  v4:= v4 + 1;
  #L29ea74.  goto L29ea4a;
  #L29ea76.  v4:= v21 + 1;
  #L29ea7a.  v5:= v4;
  #L29ea7c.  v6:= v1 - v21 @kind int;
  #L29ea80.  if v5 >= v6 then goto L29eafc;
  #L29ea84.  v6:= v5 + v21 @kind int;
  #L29ea88.  v7:= v18[v6];
  #L29ea8c.  v8:= v5 - v21 @kind int;
  #L29ea90.  v8:= v8 - v3 @kind int;
  #L29ea92.  v9:= v18[v8];
  #L29ea96.  v7:= v7 - v9 @kind int;
  #L29ea98.  v9:= (`double`) v7 @kind i2d;
  #L29ea9a.  v6:= v19[v6];
  #L29ea9e.  v7:= v19[v8];
  #L29eaa2.  v6:= v6 - v7 @kind int;
  #L29eaa4.  v6:= (`double`) v6 @kind i2d;
  #L29eaa6.  v11:= v9 * v9 @kind double;
  #L29eaaa.  v13:= (`double`) v0 @kind i2d;
  #L29eaac.  v11:= v11 / v13 @kind double;
  #L29eaae.  v6:= v6 - v11 @kind double;
  #L29eab0.  v8:= v0 + -1;
  #L29eab4.  v11:= (`double`) v8 @kind i2d;
  #L29eab6.  v6:= v6 / v11 @kind double;
  #L29eab8.  call temp:= `sqrt`(v6) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L29eabe.  v6:= temp @kind wide;
  #L29eac0.  v9:= v9 / v13 @kind double;
  #L29eac2.  v8:= 0.5F;
  #L29eac6.  v11:= (`double`) v8 @kind f2d;
  #L29eac8.  v8:= 127I;
  #L29eacc.  v13:= (`double`) v8 @kind i2d;
  #L29eace.  v6:= v6 / v13 @kind double;
  #L29ead0.  v11:= v11 * v6 @kind double;
  #L29ead4.  v6:= 1.0D;
  #L29ead8.  v11:= v11 + v6 @kind double;
  #L29eada.  v9:= v9 * v11 @kind double;
  #L29eade.  v6:= v20[v5] @kind byte;
  #L29eae2.  v6:= v6 ^& 255;
  #L29eae6.  v6:= (`double`) v6 @kind i2d;
  #L29eae8.  v8:= dcmpg(v6, v9);
  #L29eaec.  if v8 > 0 then goto L29eaf6;
  #L29eaf0.  call `d`(v2, v5) @signature `Lcom/huawei/hms/scankit/p/x;.d:(I)V` @kind virtual;
  #L29eaf6.  v5:= v5 + 1;
  #L29eafa.  goto L29ea7c;
  #L29eafc.  call temp:= `a`(v2, v4) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @kind virtual;
  #L29eb02.  v0:= temp;
  #L29eb04.  if v0 == 0 then goto L29eb10;
  #L29eb08.  v0:= 0I;
  #L29eb0a.  call `c`(v2, v0, v4) @signature `Lcom/huawei/hms/scankit/p/x;.c:(II)V` @kind virtual;
  #L29eb10.  v0:= v6 + -1;
  #L29eb14.  call temp:= `a`(v2, v0) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @kind virtual;
  #L29eb1a.  v0:= temp;
  #L29eb1c.  if v0 == 0 then goto L29eb26;
  #L29eb20.  call `c`(v2, v6, v1) @signature `Lcom/huawei/hms/scankit/p/x;.c:(II)V` @kind virtual;
  #L29eb26.  return v2 @kind object;
}
procedure `com.huawei.hms.scankit.p.v` `a`(`com.huawei.hms.scankit.p.w` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/w;.a:()Lcom/huawei/hms/scankit/p/v;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29e8a4.  v0:= v1.`com.huawei.hms.scankit.p.w.a` @type ^`com.huawei.hms.scankit.p.v` @kind object;
  #L29e8a8.  return v0 @kind object;
}
procedure `com.huawei.hms.scankit.p.w` `a`(`com.huawei.hms.scankit.p.w` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/huawei/hms/scankit/p/w;.a:(IIII)Lcom/huawei/hms/scankit/p/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29e8bc.  v0:= v1.`com.huawei.hms.scankit.p.w.a` @type ^`com.huawei.hms.scankit.p.v` @kind object;
  #L29e8c0.  call temp:= `c`(v0) @signature `Lcom/huawei/hms/scankit/p/v;.c:()Lcom/huawei/hms/scankit/aiscan/common/m;` @kind virtual;
  #L29e8c6.  v0:= temp @kind object;
  #L29e8c8.  call temp:= `a`(v0, v2, v3, v4, v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.a:(IIII)Lcom/huawei/hms/scankit/aiscan/common/m;` @kind virtual;
  #L29e8ce.  v2:= temp @kind object;
  #L29e8d0.  v3:= new `com.huawei.hms.scankit.p.w`;
  #L29e8d4.  v4:= v1.`com.huawei.hms.scankit.p.w.a` @type ^`com.huawei.hms.scankit.p.v` @kind object;
  #L29e8d8.  call temp:= `a`(v4, v2) @signature `Lcom/huawei/hms/scankit/p/v;.a:(Lcom/huawei/hms/scankit/aiscan/common/m;)Lcom/huawei/hms/scankit/p/v;` @kind virtual;
  #L29e8de.  v2:= temp @kind object;
  #L29e8e0.  call `<init>`(v3, v2) @signature `Lcom/huawei/hms/scankit/p/w;.<init>:(Lcom/huawei/hms/scankit/p/v;)V` @kind direct;
  #L29e8e6.  return v3 @kind object;
}
procedure `com.huawei.hms.scankit.p.x` `a`(`com.huawei.hms.scankit.p.w` v10 @kind this, `int` v11 , `int` v12 ) @signature `Lcom/huawei/hms/scankit/p/w;.a:(II)Lcom/huawei/hms/scankit/p/x;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L29e918.  call temp:= `e`(v10) @signature `Lcom/huawei/hms/scankit/p/w;.e:()I` @kind virtual;
  #L29e91e.  v2:= temp;
  #L29e920.  v0:= 45I;
  #L29e924.  if v2 < v0 then goto L29ea1a;
  #L29e928.  v1:= new `com.huawei.hms.scankit.p.x`;
  #L29e92c.  call `<init>`(v1, v2) @signature `Lcom/huawei/hms/scankit/p/x;.<init>:(I)V` @kind direct;
  #L29e932.  v5:= new `byte`[v2];
  #L29e936.  call temp:= `a`(v10) @signature `Lcom/huawei/hms/scankit/p/w;.a:()Lcom/huawei/hms/scankit/p/v;` @kind virtual;
  #L29e93c.  v3:= temp @kind object;
  #L29e93e.  call temp:= `c`(v3) @signature `Lcom/huawei/hms/scankit/p/v;.c:()Lcom/huawei/hms/scankit/aiscan/common/m;` @kind virtual;
  #L29e944.  v3:= temp @kind object;
  #L29e946.  call temp:= `a`(v3, v11, v5) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.a:(I[B)[B` @kind virtual;
  #L29e94c.  v3:= new `int`[v2];
  #L29e950.  v4:= new `int`[v2];
  #L29e954.  v11:= 0I;
  #L29e956.  v6:= v5[v11] @kind byte;
  #L29e95a.  v6:= v6 ^& 255;
  #L29e95e.  v3[v11]:= v6;
  #L29e962.  v6:= v3[v11];
  #L29e966.  v7:= v3[v11];
  #L29e96a.  v6:= v6 * v7 @kind int;
  #L29e96e.  v4[v11]:= v6;
  #L29e972.  v6:= 1I;
  #L29e974.  v7:= 1I;
  #L29e976.  if v7 >= v2 then goto L29e996;
  #L29e97a.  v8:= v7 + -1;
  #L29e97e.  v8:= v3[v8];
  #L29e982.  v9:= v5[v7] @kind byte;
  #L29e986.  v9:= v9 ^& 255;
  #L29e98a.  v8:= v8 + v9 @kind int;
  #L29e98c.  v3[v7]:= v8;
  #L29e990.  v7:= v7 + 1;
  #L29e994.  goto L29e976;
  #L29e996.  if v12 != 0 then goto L29ea06;
  #L29e99a.  v12:= 23I;
  #L29e99e.  v4:= 23I;
  #L29e9a2.  v7:= v2 + -22;
  #L29e9a6.  if v4 >= v7 then goto L29e9dc;
  #L29e9aa.  v7:= v5[v4] @kind byte;
  #L29e9ae.  v7:= v7 ^& 255;
  #L29e9b2.  v7:= v7 + 5;
  #L29e9b6.  v8:= v4 + 22;
  #L29e9ba.  v8:= v3[v8];
  #L29e9be.  v9:= v4 + -22;
  #L29e9c2.  v9:= v9 - v6 @kind int;
  #L29e9c4.  v9:= v3[v9];
  #L29e9c8.  v8:= v8 - v9 @kind int;
  #L29e9ca.  v8:= v8 / v0 @kind int;
  #L29e9cc.  if v7 >= v8 then goto L29e9d6;
  #L29e9d0.  call `d`(v1, v4) @signature `Lcom/huawei/hms/scankit/p/x;.d:(I)V` @kind virtual;
  #L29e9d6.  v4:= v4 + 1;
  #L29e9da.  goto L29e9a2;
  #L29e9dc.  call temp:= `a`(v1, v12) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @kind virtual;
  #L29e9e2.  v0:= temp;
  #L29e9e4.  if v0 == 0 then goto L29e9ee;
  #L29e9e8.  call `c`(v1, v11, v12) @signature `Lcom/huawei/hms/scankit/p/x;.c:(II)V` @kind virtual;
  #L29e9ee.  v11:= v7 + -1;
  #L29e9f2.  call temp:= `a`(v1, v11) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @kind virtual;
  #L29e9f8.  v11:= temp;
  #L29e9fa.  if v11 == 0 then goto L29ea04;
  #L29e9fe.  call `c`(v1, v7, v2) @signature `Lcom/huawei/hms/scankit/p/x;.c:(II)V` @kind virtual;
  #L29ea04.  return v1 @kind object;
  #L29ea06.  v1:= 45I;
  #L29ea0a.  v6:= 22I;
  #L29ea0e.  v0:= v10 @kind object;
  #L29ea10.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/huawei/hms/scankit/p/w;.a:(II[I[I[BI)Lcom/huawei/hms/scankit/p/x;` @kind direct;
  #L29ea16.  v11:= temp @kind object;
  #L29ea18.  return v11 @kind object;
  #L29ea1a.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L29ea20.  v11:= temp @kind object;
  #L29ea22.  throw v11;
}
procedure `com.huawei.hms.scankit.p.x` `a`(`com.huawei.hms.scankit.p.w` v1 @kind this, `int` v2 , `com.huawei.hms.scankit.p.x` v3 @kind object) @signature `Lcom/huawei/hms/scankit/p/w;.a:(ILcom/huawei/hms/scankit/p/x;)Lcom/huawei/hms/scankit/p/x;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29e8f8.  v0:= v1.`com.huawei.hms.scankit.p.w.a` @type ^`com.huawei.hms.scankit.p.v` @kind object;
  #L29e8fc.  call temp:= `a`(v0, v2, v3) @signature `Lcom/huawei/hms/scankit/p/v;.a:(ILcom/huawei/hms/scankit/p/x;)Lcom/huawei/hms/scankit/p/x;` @kind virtual;
  #L29e902.  v2:= temp @kind object;
  #L29e904.  return v2 @kind object;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.w` v0 @kind this, `com.huawei.hms.scankit.p.y` v1 @kind object) @signature `Lcom/huawei/hms/scankit/p/w;.a:(Lcom/huawei/hms/scankit/p/y;)V` @AccessFlag PUBLIC {
    temp;

  #L29ec0c.  v0.`com.huawei.hms.scankit.p.w.b` @type ^`com.huawei.hms.scankit.p.y` := v1 @kind object;
  #L29ec10.  return @kind void;
}
procedure `com.huawei.hms.scankit.p.y` `b`(`com.huawei.hms.scankit.p.w` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/w;.b:()Lcom/huawei/hms/scankit/p/y;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29eb38.  v0:= v1.`com.huawei.hms.scankit.p.w.b` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L29eb3c.  if v0 != 0 then goto L29eb50;
  #L29eb40.  v0:= v1.`com.huawei.hms.scankit.p.w.a` @type ^`com.huawei.hms.scankit.p.v` @kind object;
  #L29eb44.  call temp:= `a`(v0) @signature `Lcom/huawei/hms/scankit/p/v;.a:()Lcom/huawei/hms/scankit/p/y;` @kind virtual;
  #L29eb4a.  v0:= temp @kind object;
  #L29eb4c.  v1.`com.huawei.hms.scankit.p.w.b` @type ^`com.huawei.hms.scankit.p.y` := v0 @kind object;
  #L29eb50.  v0:= v1.`com.huawei.hms.scankit.p.w.b` @type ^`com.huawei.hms.scankit.p.y` @kind object;
  #L29eb54.  return v0 @kind object;
}
procedure `int` `c`(`com.huawei.hms.scankit.p.w` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/w;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29eb80.  v0:= v1.`com.huawei.hms.scankit.p.w.a` @type ^`com.huawei.hms.scankit.p.v` @kind object;
  #L29eb84.  call temp:= `b`(v0) @signature `Lcom/huawei/hms/scankit/p/v;.b:()I` @kind virtual;
  #L29eb8a.  v0:= temp;
  #L29eb8c.  return v0;
}
procedure `byte`[] `d`(`com.huawei.hms.scankit.p.w` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/w;.d:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29e698.  v0:= v1.`com.huawei.hms.scankit.p.w.a` @type ^`com.huawei.hms.scankit.p.v` @kind object;
  #L29e69c.  call temp:= `c`(v0) @signature `Lcom/huawei/hms/scankit/p/v;.c:()Lcom/huawei/hms/scankit/aiscan/common/m;` @kind virtual;
  #L29e6a2.  v0:= temp @kind object;
  #L29e6a4.  call temp:= `b`(v0) @signature `Lcom/huawei/hms/scankit/aiscan/common/m;.b:()[B` @kind virtual;
  #L29e6aa.  v0:= temp @kind object;
  #L29e6ac.  return v0 @kind object;
}
procedure `int` `e`(`com.huawei.hms.scankit.p.w` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/w;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29eba0.  v0:= v1.`com.huawei.hms.scankit.p.w.a` @type ^`com.huawei.hms.scankit.p.v` @kind object;
  #L29eba4.  call temp:= `d`(v0) @signature `Lcom/huawei/hms/scankit/p/v;.d:()I` @kind virtual;
  #L29ebaa.  v0:= temp;
  #L29ebac.  return v0;
}
