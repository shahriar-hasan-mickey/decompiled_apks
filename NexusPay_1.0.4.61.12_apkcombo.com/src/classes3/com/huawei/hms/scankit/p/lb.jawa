record `com.huawei.hms.scankit.p.lb` @kind class @AccessFlag  extends `java.util.concurrent.atomic.AtomicInteger` @kind class {
  `com.huawei.hms.scankit.p.ib$b$b` `com.huawei.hms.scankit.p.lb.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.lb` v0 @kind this, `com.huawei.hms.scankit.p.ib$b$b` v1 @kind object) @signature `Lcom/huawei/hms/scankit/p/lb;.<init>:(Lcom/huawei/hms/scankit/p/ib$b$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L29177c.  v0.`com.huawei.hms.scankit.p.lb.a` @type ^`com.huawei.hms.scankit.p.ib$b$b` := v1 @kind object;
  #L291780.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L291786.  v1:= 1I;
  #L291788.  call temp:= `addAndGet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L29178e.  return @kind void;
}
