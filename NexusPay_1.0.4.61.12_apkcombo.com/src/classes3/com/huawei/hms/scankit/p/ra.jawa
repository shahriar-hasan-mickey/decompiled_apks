record `com.huawei.hms.scankit.p.ra` @kind class @AccessFlag FINAL {
  `com.huawei.hms.scankit.p.qa` `com.huawei.hms.scankit.p.ra.a` @AccessFlag PRIVATE_FINAL;
  `int`[] `com.huawei.hms.scankit.p.ra.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.ra` v4 @kind this, `com.huawei.hms.scankit.p.qa` v5 @kind object, `int`[] v6 @kind object) @signature `Lcom/huawei/hms/scankit/p/ra;.<init>:(Lcom/huawei/hms/scankit/p/qa;[I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2950e0.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2950e6.  v0:= length @variable v6;
  #L2950e8.  if v0 == 0 then goto L295142;
  #L2950ec.  v4.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` := v5 @kind object;
  #L2950f0.  v5:= length @variable v6;
  #L2950f2.  v0:= 1I;
  #L2950f4.  if v5 <= v0 then goto L29513c;
  #L2950f8.  v1:= 0I;
  #L2950fa.  v2:= v6[v1];
  #L2950fe.  if v2 != 0 then goto L29513c;
  #L295102.  v2:= 1I;
  #L295104.  if v2 >= v5 then goto L295116;
  #L295108.  v3:= v6[v2];
  #L29510c.  if v3 != 0 then goto L295116;
  #L295110.  v2:= v2 + 1;
  #L295114.  goto L295104;
  #L295116.  if v2 != v5 then goto L295128;
  #L29511a.  v5:= new `int`[v0];
  #L29511e.  v5[v1]:= v1;
  #L295122.  v4.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] := v5 @kind object;
  #L295126.  goto L295140;
  #L295128.  v5:= v5 - v2 @kind int;
  #L29512a.  v5:= new `int`[v5];
  #L29512e.  v4.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] := v5 @kind object;
  #L295132.  v0:= length @variable v5;
  #L295134.  call `arraycopy`(v6, v2, v5, v1, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L29513a.  goto L295140;
  #L29513c.  v4.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] := v6 @kind object;
  #L295140.  return @kind void;
  #L295142.  v5:= new `java.lang.IllegalArgumentException`;
  #L295146.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L29514c.  throw v5;
}
procedure `int` `a`(`com.huawei.hms.scankit.p.ra` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/ra;.a:()I` @AccessFlag  {
    temp;
    v0;

  #L294f78.  v0:= v1.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294f7c.  v0:= length @variable v0;
  #L294f7e.  v0:= v0 + -1;
  #L294f82.  return v0;
}
procedure `int` `a`(`com.huawei.hms.scankit.p.ra` v5 @kind this, `int` v6 ) @signature `Lcom/huawei/hms/scankit/p/ra;.a:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L294f94.  v0:= 0I;
  #L294f96.  if v6 != 0 then goto L294fa4;
  #L294f9a.  call temp:= `b`(v5, v0) @signature `Lcom/huawei/hms/scankit/p/ra;.b:(I)I` @kind virtual;
  #L294fa0.  v6:= temp;
  #L294fa2.  return v6;
  #L294fa4.  v1:= 1I;
  #L294fa6.  if v6 != v1 then goto L294fce;
  #L294faa.  v6:= v5.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294fae.  v1:= length @variable v6;
  #L294fb0.  v2:= 0I;
  #L294fb2.  if v0 >= v1 then goto L294fcc;
  #L294fb6.  v3:= v6[v0];
  #L294fba.  v4:= v5.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294fbe.  call temp:= `a`(v4, v2, v3) @signature `Lcom/huawei/hms/scankit/p/qa;.a:(II)I` @kind virtual;
  #L294fc4.  v2:= temp;
  #L294fc6.  v0:= v0 + 1;
  #L294fca.  goto L294fb2;
  #L294fcc.  return v2;
  #L294fce.  v2:= v5.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294fd2.  v0:= v2[v0];
  #L294fd6.  v2:= length @variable v2;
  #L294fd8.  if v1 >= v2 then goto L294ffe;
  #L294fdc.  v3:= v5.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294fe0.  call temp:= `c`(v3, v6, v0) @signature `Lcom/huawei/hms/scankit/p/qa;.c:(II)I` @kind virtual;
  #L294fe6.  v0:= temp;
  #L294fe8.  v4:= v5.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294fec.  v4:= v4[v1];
  #L294ff0.  call temp:= `a`(v3, v0, v4) @signature `Lcom/huawei/hms/scankit/p/qa;.a:(II)I` @kind virtual;
  #L294ff6.  v0:= temp;
  #L294ff8.  v1:= v1 + 1;
  #L294ffc.  goto L294fd8;
  #L294ffe.  return v0;
}
procedure `com.huawei.hms.scankit.p.ra` `a`(`com.huawei.hms.scankit.p.ra` v4 @kind this, `int` v5 , `int` v6 ) @signature `Lcom/huawei/hms/scankit/p/ra;.a:(II)Lcom/huawei/hms/scankit/p/ra;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L294d30.  if v5 < 0 then goto L294d86;
  #L294d34.  if v6 != 0 then goto L294d46;
  #L294d38.  v5:= v4.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294d3c.  call temp:= `c`(v5) @signature `Lcom/huawei/hms/scankit/p/qa;.c:()Lcom/huawei/hms/scankit/p/ra;` @kind virtual;
  #L294d42.  v5:= temp @kind object;
  #L294d44.  return v5 @kind object;
  #L294d46.  v0:= v4.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294d4a.  v0:= length @variable v0;
  #L294d4c.  v5:= v5 + v0 @kind int;
  #L294d4e.  v5:= new `int`[v5];
  #L294d52.  v1:= 0I;
  #L294d54.  if v1 >= v0 then goto L294d76;
  #L294d58.  v2:= v4.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294d5c.  v3:= v4.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294d60.  v3:= v3[v1];
  #L294d64.  call temp:= `c`(v2, v3, v6) @signature `Lcom/huawei/hms/scankit/p/qa;.c:(II)I` @kind virtual;
  #L294d6a.  v2:= temp;
  #L294d6c.  v5[v1]:= v2;
  #L294d70.  v1:= v1 + 1;
  #L294d74.  goto L294d54;
  #L294d76.  v6:= new `com.huawei.hms.scankit.p.ra`;
  #L294d7a.  v0:= v4.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294d7e.  call `<init>`(v6, v0, v5) @signature `Lcom/huawei/hms/scankit/p/ra;.<init>:(Lcom/huawei/hms/scankit/p/qa;[I)V` @kind direct;
  #L294d84.  return v6 @kind object;
  #L294d86.  v5:= new `java.lang.IllegalArgumentException`;
  #L294d8a.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L294d90.  throw v5;
}
procedure `com.huawei.hms.scankit.p.ra` `a`(`com.huawei.hms.scankit.p.ra` v8 @kind this, `com.huawei.hms.scankit.p.ra` v9 @kind object) @signature `Lcom/huawei/hms/scankit/p/ra;.a:(Lcom/huawei/hms/scankit/p/ra;)Lcom/huawei/hms/scankit/p/ra;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L294c78.  v0:= v8.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294c7c.  v1:= v9.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294c80.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L294c86.  v0:= temp;
  #L294c88.  if v0 == 0 then goto L294d0e;
  #L294c8c.  call temp:= `b`(v8) @signature `Lcom/huawei/hms/scankit/p/ra;.b:()Z` @kind virtual;
  #L294c92.  v0:= temp;
  #L294c94.  if v0 == 0 then goto L294c9a;
  #L294c98.  return v9 @kind object;
  #L294c9a.  call temp:= `b`(v9) @signature `Lcom/huawei/hms/scankit/p/ra;.b:()Z` @kind virtual;
  #L294ca0.  v0:= temp;
  #L294ca2.  if v0 == 0 then goto L294ca8;
  #L294ca6.  return v8 @kind object;
  #L294ca8.  v0:= v8.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294cac.  v9:= v9.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294cb0.  v1:= length @variable v0;
  #L294cb2.  v2:= length @variable v9;
  #L294cb4.  if v1 <= v2 then goto L294cba;
  #L294cb8.  goto L294cc0;
  #L294cba.  v7:= v0 @kind object;
  #L294cbc.  v0:= v9 @kind object;
  #L294cbe.  v9:= v7 @kind object;
  #L294cc0.  v1:= length @variable v0;
  #L294cc2.  v1:= new `int`[v1];
  #L294cc6.  v2:= length @variable v0;
  #L294cc8.  v3:= length @variable v9;
  #L294cca.  v2:= v2 - v3 @kind int;
  #L294ccc.  v3:= 0I;
  #L294cce.  call `arraycopy`(v0, v3, v1, v3, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L294cd4.  v3:= v2;
  #L294cd6.  v4:= length @variable v0;
  #L294cd8.  if v3 >= v4 then goto L294cfe;
  #L294cdc.  v4:= v8.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294ce0.  v5:= v3 - v2 @kind int;
  #L294ce4.  v5:= v9[v5];
  #L294ce8.  v6:= v0[v3];
  #L294cec.  call temp:= `a`(v4, v5, v6) @signature `Lcom/huawei/hms/scankit/p/qa;.a:(II)I` @kind virtual;
  #L294cf2.  v4:= temp;
  #L294cf4.  v1[v3]:= v4;
  #L294cf8.  v3:= v3 + 1;
  #L294cfc.  goto L294cd6;
  #L294cfe.  v9:= new `com.huawei.hms.scankit.p.ra`;
  #L294d02.  v0:= v8.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294d06.  call `<init>`(v9, v0, v1) @signature `Lcom/huawei/hms/scankit/p/ra;.<init>:(Lcom/huawei/hms/scankit/p/qa;[I)V` @kind direct;
  #L294d0c.  return v9 @kind object;
  #L294d0e.  v9:= new `java.lang.IllegalArgumentException`;
  #L294d12.  v0:= "ModulusPolys do not have same ModulusGF field" @kind object;
  #L294d16.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L294d1c.  throw v9;
}
procedure `int` `b`(`com.huawei.hms.scankit.p.ra` v2 @kind this, `int` v3 ) @signature `Lcom/huawei/hms/scankit/p/ra;.b:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L295010.  v0:= v2.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L295014.  v1:= length @variable v0;
  #L295016.  v1:= v1 + -1;
  #L29501a.  v1:= v1 - v3 @kind int;
  #L29501c.  v3:= v0[v1];
  #L295020.  return v3;
}
procedure `com.huawei.hms.scankit.p.ra` `b`(`com.huawei.hms.scankit.p.ra` v12 @kind this, `com.huawei.hms.scankit.p.ra` v13 @kind object) @signature `Lcom/huawei/hms/scankit/p/ra;.b:(Lcom/huawei/hms/scankit/p/ra;)Lcom/huawei/hms/scankit/p/ra;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L294da4.  v0:= v12.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294da8.  v1:= v13.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294dac.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L294db2.  v0:= temp;
  #L294db4.  if v0 == 0 then goto L294e4a;
  #L294db8.  call temp:= `b`(v12) @signature `Lcom/huawei/hms/scankit/p/ra;.b:()Z` @kind virtual;
  #L294dbe.  v0:= temp;
  #L294dc0.  if v0 != 0 then goto L294e3c;
  #L294dc4.  call temp:= `b`(v13) @signature `Lcom/huawei/hms/scankit/p/ra;.b:()Z` @kind virtual;
  #L294dca.  v0:= temp;
  #L294dcc.  if v0 == 0 then goto L294dd2;
  #L294dd0.  goto L294e3c;
  #L294dd2.  v0:= v12.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294dd6.  v1:= length @variable v0;
  #L294dd8.  v13:= v13.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294ddc.  v2:= length @variable v13;
  #L294dde.  v3:= v1 + v2 @kind int;
  #L294de2.  v3:= v3 + -1;
  #L294de6.  v3:= new `int`[v3];
  #L294dea.  v4:= 0I;
  #L294dec.  v5:= 0I;
  #L294dee.  if v5 >= v1 then goto L294e2c;
  #L294df2.  v6:= v0[v5];
  #L294df6.  v7:= 0I;
  #L294df8.  if v7 >= v2 then goto L294e26;
  #L294dfc.  v8:= v5 + v7 @kind int;
  #L294e00.  v9:= v12.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294e04.  v10:= v3[v8];
  #L294e08.  v11:= v13[v7];
  #L294e0c.  call temp:= `c`(v9, v6, v11) @signature `Lcom/huawei/hms/scankit/p/qa;.c:(II)I` @kind virtual;
  #L294e12.  v11:= temp;
  #L294e14.  call temp:= `a`(v9, v10, v11) @signature `Lcom/huawei/hms/scankit/p/qa;.a:(II)I` @kind virtual;
  #L294e1a.  v9:= temp;
  #L294e1c.  v3[v8]:= v9;
  #L294e20.  v7:= v7 + 1;
  #L294e24.  goto L294df8;
  #L294e26.  v5:= v5 + 1;
  #L294e2a.  goto L294dee;
  #L294e2c.  v13:= new `com.huawei.hms.scankit.p.ra`;
  #L294e30.  v0:= v12.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294e34.  call `<init>`(v13, v0, v3) @signature `Lcom/huawei/hms/scankit/p/ra;.<init>:(Lcom/huawei/hms/scankit/p/qa;[I)V` @kind direct;
  #L294e3a.  return v13 @kind object;
  #L294e3c.  v13:= v12.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294e40.  call temp:= `c`(v13) @signature `Lcom/huawei/hms/scankit/p/qa;.c:()Lcom/huawei/hms/scankit/p/ra;` @kind virtual;
  #L294e46.  v13:= temp @kind object;
  #L294e48.  return v13 @kind object;
  #L294e4a.  v13:= new `java.lang.IllegalArgumentException`;
  #L294e4e.  v0:= "ModulusPolys do not have same ModulusGF field" @kind object;
  #L294e52.  call `<init>`(v13, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L294e58.  throw v13;
}
procedure `boolean` `b`(`com.huawei.hms.scankit.p.ra` v2 @kind this) @signature `Lcom/huawei/hms/scankit/p/ra;.b:()Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L294c54.  v0:= v2.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294c58.  v1:= 0I;
  #L294c5a.  v0:= v0[v1];
  #L294c5e.  if v0 != 0 then goto L294c64;
  #L294c62.  v1:= 1I;
  #L294c64.  return v1;
}
procedure `com.huawei.hms.scankit.p.ra` `c`(`com.huawei.hms.scankit.p.ra` v6 @kind this) @signature `Lcom/huawei/hms/scankit/p/ra;.c:()Lcom/huawei/hms/scankit/p/ra;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L294e6c.  v0:= v6.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294e70.  v0:= length @variable v0;
  #L294e72.  v1:= new `int`[v0];
  #L294e76.  v2:= 0I;
  #L294e78.  v3:= 0I;
  #L294e7a.  if v3 >= v0 then goto L294e9c;
  #L294e7e.  v4:= v6.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294e82.  v5:= v6.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294e86.  v5:= v5[v3];
  #L294e8a.  call temp:= `d`(v4, v2, v5) @signature `Lcom/huawei/hms/scankit/p/qa;.d:(II)I` @kind virtual;
  #L294e90.  v4:= temp;
  #L294e92.  v1[v3]:= v4;
  #L294e96.  v3:= v3 + 1;
  #L294e9a.  goto L294e7a;
  #L294e9c.  v0:= new `com.huawei.hms.scankit.p.ra`;
  #L294ea0.  v2:= v6.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294ea4.  call `<init>`(v0, v2, v1) @signature `Lcom/huawei/hms/scankit/p/ra;.<init>:(Lcom/huawei/hms/scankit/p/qa;[I)V` @kind direct;
  #L294eaa.  return v0 @kind object;
}
procedure `com.huawei.hms.scankit.p.ra` `c`(`com.huawei.hms.scankit.p.ra` v5 @kind this, `int` v6 ) @signature `Lcom/huawei/hms/scankit/p/ra;.c:(I)Lcom/huawei/hms/scankit/p/ra;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L294f10.  if v6 != 0 then goto L294f22;
  #L294f14.  v6:= v5.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294f18.  call temp:= `c`(v6) @signature `Lcom/huawei/hms/scankit/p/qa;.c:()Lcom/huawei/hms/scankit/p/ra;` @kind virtual;
  #L294f1e.  v6:= temp @kind object;
  #L294f20.  return v6 @kind object;
  #L294f22.  v0:= 1I;
  #L294f24.  if v6 != v0 then goto L294f2a;
  #L294f28.  return v5 @kind object;
  #L294f2a.  v0:= v5.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294f2e.  v0:= length @variable v0;
  #L294f30.  v1:= new `int`[v0];
  #L294f34.  v2:= 0I;
  #L294f36.  if v2 >= v0 then goto L294f58;
  #L294f3a.  v3:= v5.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294f3e.  v4:= v5.`com.huawei.hms.scankit.p.ra.b` @type ^`int`[] @kind object;
  #L294f42.  v4:= v4[v2];
  #L294f46.  call temp:= `c`(v3, v4, v6) @signature `Lcom/huawei/hms/scankit/p/qa;.c:(II)I` @kind virtual;
  #L294f4c.  v3:= temp;
  #L294f4e.  v1[v2]:= v3;
  #L294f52.  v2:= v2 + 1;
  #L294f56.  goto L294f36;
  #L294f58.  v6:= new `com.huawei.hms.scankit.p.ra`;
  #L294f5c.  v0:= v5.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294f60.  call `<init>`(v6, v0, v1) @signature `Lcom/huawei/hms/scankit/p/ra;.<init>:(Lcom/huawei/hms/scankit/p/qa;[I)V` @kind direct;
  #L294f66.  return v6 @kind object;
}
procedure `com.huawei.hms.scankit.p.ra` `c`(`com.huawei.hms.scankit.p.ra` v2 @kind this, `com.huawei.hms.scankit.p.ra` v3 @kind object) @signature `Lcom/huawei/hms/scankit/p/ra;.c:(Lcom/huawei/hms/scankit/p/ra;)Lcom/huawei/hms/scankit/p/ra;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L294ebc.  v0:= v2.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294ec0.  v1:= v3.`com.huawei.hms.scankit.p.ra.a` @type ^`com.huawei.hms.scankit.p.qa` @kind object;
  #L294ec4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L294eca.  v0:= temp;
  #L294ecc.  if v0 == 0 then goto L294ef0;
  #L294ed0.  call temp:= `b`(v3) @signature `Lcom/huawei/hms/scankit/p/ra;.b:()Z` @kind virtual;
  #L294ed6.  v0:= temp;
  #L294ed8.  if v0 == 0 then goto L294ede;
  #L294edc.  return v2 @kind object;
  #L294ede.  call temp:= `c`(v3) @signature `Lcom/huawei/hms/scankit/p/ra;.c:()Lcom/huawei/hms/scankit/p/ra;` @kind virtual;
  #L294ee4.  v3:= temp @kind object;
  #L294ee6.  call temp:= `a`(v2, v3) @signature `Lcom/huawei/hms/scankit/p/ra;.a:(Lcom/huawei/hms/scankit/p/ra;)Lcom/huawei/hms/scankit/p/ra;` @kind virtual;
  #L294eec.  v3:= temp @kind object;
  #L294eee.  return v3 @kind object;
  #L294ef0.  v3:= new `java.lang.IllegalArgumentException`;
  #L294ef4.  v0:= "ModulusPolys do not have same ModulusGF field" @kind object;
  #L294ef8.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L294efe.  throw v3;
}
procedure `java.lang.String` `toString`(`com.huawei.hms.scankit.p.ra` v4 @kind this) @signature `Lcom/huawei/hms/scankit/p/ra;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L295034.  v0:= new `java.lang.StringBuilder`;
  #L295038.  call temp:= `a`(v4) @signature `Lcom/huawei/hms/scankit/p/ra;.a:()I` @kind virtual;
  #L29503e.  v1:= temp;
  #L295040.  v1:= v1 * 8;
  #L295044.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L29504a.  call temp:= `a`(v4) @signature `Lcom/huawei/hms/scankit/p/ra;.a:()I` @kind virtual;
  #L295050.  v1:= temp;
  #L295052.  if v1 < 0 then goto L2950c4;
  #L295056.  call temp:= `b`(v4, v1) @signature `Lcom/huawei/hms/scankit/p/ra;.b:(I)I` @kind virtual;
  #L29505c.  v2:= temp;
  #L29505e.  if v2 == 0 then goto L2950be;
  #L295062.  if v2 >= 0 then goto L295074;
  #L295066.  v3:= " - " @kind object;
  #L29506a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295070.  v2:= -v2 @kind int;
  #L295072.  goto L29508a;
  #L295074.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L29507a.  v3:= temp;
  #L29507c.  if v3 <= 0 then goto L29508a;
  #L295080.  v3:= " + " @kind object;
  #L295084.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29508a.  v3:= 1I;
  #L29508c.  if v1 == 0 then goto L295094;
  #L295090.  if v2 == v3 then goto L29509a;
  #L295094.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29509a.  if v1 == 0 then goto L2950be;
  #L29509e.  if v1 != v3 then goto L2950ae;
  #L2950a2.  v2:= 120I;
  #L2950a6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2950ac.  goto L2950be;
  #L2950ae.  v2:= "x^" @kind object;
  #L2950b2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2950b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2950be.  v1:= v1 + -1;
  #L2950c2.  goto L295052;
  #L2950c4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2950ca.  v0:= temp @kind object;
  #L2950cc.  return v0 @kind object;
}
