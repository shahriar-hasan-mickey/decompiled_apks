record `com.huawei.hms.scankit.p.V` @kind class @AccessFlag PUBLIC_FINAL extends `com.huawei.hms.scankit.p.Y` @kind class {
  `int` `com.huawei.hms.scankit.p.V.e` @AccessFlag PRIVATE;
  `int` `com.huawei.hms.scankit.p.V.f` @AccessFlag PRIVATE;
}
global `int`[] `@@com.huawei.hms.scankit.p.V.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@com.huawei.hms.scankit.p.V.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[][] `@@com.huawei.hms.scankit.p.V.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[][] `@@com.huawei.hms.scankit.p.V.d` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/scankit/p/V;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L281fcc.  v0:= 5I;
  #L281fce.  v1:= new `int`[v0];
  #L281fd2.  goto L282174;
  #L281fd8.  `@@com.huawei.hms.scankit.p.V.a` @type ^`int`[] := v1 @kind object;
  #L281fdc.  v1:= 4I;
  #L281fde.  v2:= new `int`[v1];
  #L281fe2.  goto L282190;
  #L281fe8.  `@@com.huawei.hms.scankit.p.V.b` @type ^`int`[] := v2 @kind object;
  #L281fec.  v2:= 2I;
  #L281fee.  v3:= new `int`[][v2];
  #L281ff2.  v4:= 3I;
  #L281ff4.  v5:= new `int`[v4];
  #L281ff8.  goto L2821a8;
  #L281ffe.  v6:= 0I;
  #L282000.  v3[v6]:= v5 @kind object;
  #L282004.  v5:= new `int`[v4];
  #L282008.  goto L2821bc;
  #L28200e.  v7:= 1I;
  #L282010.  v3[v7]:= v5 @kind object;
  #L282014.  `@@com.huawei.hms.scankit.p.V.c` @type ^`int`[][] := v3 @kind object;
  #L282018.  v3:= 20I;
  #L28201c.  v3:= new `int`[][v3];
  #L282020.  v5:= new `int`[v0];
  #L282024.  goto L2821d0;
  #L28202a.  v3[v6]:= v5 @kind object;
  #L28202e.  v5:= new `int`[v0];
  #L282032.  goto L2821ec;
  #L282038.  v3[v7]:= v5 @kind object;
  #L28203c.  v5:= new `int`[v0];
  #L282040.  goto L282208;
  #L282046.  v3[v2]:= v5 @kind object;
  #L28204a.  v2:= new `int`[v0];
  #L28204e.  goto L282224;
  #L282054.  v3[v4]:= v2 @kind object;
  #L282058.  v2:= new `int`[v0];
  #L28205c.  goto L282240;
  #L282062.  v3[v1]:= v2 @kind object;
  #L282066.  v1:= new `int`[v0];
  #L28206a.  goto L28225c;
  #L282070.  v3[v0]:= v1 @kind object;
  #L282074.  v1:= new `int`[v0];
  #L282078.  goto L282278;
  #L28207e.  v2:= 6I;
  #L282080.  v3[v2]:= v1 @kind object;
  #L282084.  v1:= new `int`[v0];
  #L282088.  goto L282294;
  #L28208e.  v2:= 7I;
  #L282090.  v3[v2]:= v1 @kind object;
  #L282094.  v1:= new `int`[v0];
  #L282098.  goto L2822b0;
  #L28209e.  v2:= 8I;
  #L2820a2.  v3[v2]:= v1 @kind object;
  #L2820a6.  v1:= new `int`[v0];
  #L2820aa.  goto L2822cc;
  #L2820b0.  v2:= 9I;
  #L2820b4.  v3[v2]:= v1 @kind object;
  #L2820b8.  v1:= new `int`[v0];
  #L2820bc.  goto L2822e8;
  #L2820c2.  v2:= 10I;
  #L2820c6.  v3[v2]:= v1 @kind object;
  #L2820ca.  v1:= new `int`[v0];
  #L2820ce.  goto L282304;
  #L2820d4.  v2:= 11I;
  #L2820d8.  v3[v2]:= v1 @kind object;
  #L2820dc.  v1:= new `int`[v0];
  #L2820e0.  goto L282320;
  #L2820e6.  v2:= 12I;
  #L2820ea.  v3[v2]:= v1 @kind object;
  #L2820ee.  v1:= new `int`[v0];
  #L2820f2.  goto L28233c;
  #L2820f8.  v2:= 13I;
  #L2820fc.  v3[v2]:= v1 @kind object;
  #L282100.  v1:= new `int`[v0];
  #L282104.  goto L282358;
  #L28210a.  v2:= 14I;
  #L28210e.  v3[v2]:= v1 @kind object;
  #L282112.  v1:= new `int`[v0];
  #L282116.  goto L282374;
  #L28211c.  v2:= 15I;
  #L282120.  v3[v2]:= v1 @kind object;
  #L282124.  v1:= new `int`[v0];
  #L282128.  goto L282390;
  #L28212e.  v2:= 16I;
  #L282132.  v3[v2]:= v1 @kind object;
  #L282136.  v1:= new `int`[v0];
  #L28213a.  goto L2823ac;
  #L282140.  v2:= 17I;
  #L282144.  v3[v2]:= v1 @kind object;
  #L282148.  v1:= new `int`[v0];
  #L28214c.  goto L2823c8;
  #L282152.  v2:= 18I;
  #L282156.  v3[v2]:= v1 @kind object;
  #L28215a.  v0:= new `int`[v0];
  #L28215e.  goto L2823e4;
  #L282164.  v1:= 19I;
  #L282168.  v3[v1]:= v0 @kind object;
  #L28216c.  `@@com.huawei.hms.scankit.p.V.d` @type ^`int`[][] := v3 @kind object;
  #L282170.  return @kind void;
  #L282172.  
  #L282174.  v1:= (6I, 8I, 10I, 12I, 14I) @kind object;
  #L28218f.  goto L281fd8;
  #L282190.  v2:= (1I, 1I, 1I, 1I) @kind object;
  #L2821a7.  goto L281fe8;
  #L2821a8.  v5:= (1I, 1I, 2I) @kind object;
  #L2821bb.  goto L281ffe;
  #L2821bc.  v5:= (1I, 1I, 3I) @kind object;
  #L2821cf.  goto L28200e;
  #L2821d0.  v5:= (1I, 1I, 2I, 2I, 1I) @kind object;
  #L2821eb.  goto L28202a;
  #L2821ec.  v5:= (2I, 1I, 1I, 1I, 2I) @kind object;
  #L282207.  goto L282038;
  #L282208.  v5:= (1I, 2I, 1I, 1I, 2I) @kind object;
  #L282223.  goto L282046;
  #L282224.  v2:= (2I, 2I, 1I, 1I, 1I) @kind object;
  #L28223f.  goto L282054;
  #L282240.  v2:= (1I, 1I, 2I, 1I, 2I) @kind object;
  #L28225b.  goto L282062;
  #L28225c.  v1:= (2I, 1I, 2I, 1I, 1I) @kind object;
  #L282277.  goto L282070;
  #L282278.  v1:= (1I, 2I, 2I, 1I, 1I) @kind object;
  #L282293.  goto L28207e;
  #L282294.  v1:= (1I, 1I, 1I, 2I, 2I) @kind object;
  #L2822af.  goto L28208e;
  #L2822b0.  v1:= (2I, 1I, 1I, 2I, 1I) @kind object;
  #L2822cb.  goto L28209e;
  #L2822cc.  v1:= (1I, 2I, 1I, 2I, 1I) @kind object;
  #L2822e7.  goto L2820b0;
  #L2822e8.  v1:= (1I, 1I, 3I, 3I, 1I) @kind object;
  #L282303.  goto L2820c2;
  #L282304.  v1:= (3I, 1I, 1I, 1I, 3I) @kind object;
  #L28231f.  goto L2820d4;
  #L282320.  v1:= (1I, 3I, 1I, 1I, 3I) @kind object;
  #L28233b.  goto L2820e6;
  #L28233c.  v1:= (3I, 3I, 1I, 1I, 1I) @kind object;
  #L282357.  goto L2820f8;
  #L282358.  v1:= (1I, 1I, 3I, 1I, 3I) @kind object;
  #L282373.  goto L28210a;
  #L282374.  v1:= (3I, 1I, 3I, 1I, 1I) @kind object;
  #L28238f.  goto L28211c;
  #L282390.  v1:= (1I, 3I, 3I, 1I, 1I) @kind object;
  #L2823ab.  goto L28212e;
  #L2823ac.  v1:= (1I, 1I, 1I, 3I, 3I) @kind object;
  #L2823c7.  goto L282140;
  #L2823c8.  v1:= (3I, 1I, 1I, 3I, 1I) @kind object;
  #L2823e3.  goto L282152;
  #L2823e4.  v0:= (1I, 3I, 1I, 3I, 1I) @kind object;
  #L2823ff.  goto L282164;
}
procedure `void` `<init>`(`com.huawei.hms.scankit.p.V` v1 @kind this) @signature `Lcom/huawei/hms/scankit/p/V;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L282410.  call `<init>`(v1) @signature `Lcom/huawei/hms/scankit/p/Y;.<init>:()V` @kind direct;
  #L282416.  v0:= -1I;
  #L282418.  v1.`com.huawei.hms.scankit.p.V.e` @type ^`int` := v0;
  #L28241c.  v1.`com.huawei.hms.scankit.p.V.f` @type ^`int` := v0;
  #L282420.  return @kind void;
}
procedure `void` `a`(`com.huawei.hms.scankit.p.x` v10 @kind object, `int` v11 , `int` v12 , `java.lang.StringBuilder` v13 @kind object) @signature `Lcom/huawei/hms/scankit/p/V;.a:(Lcom/huawei/hms/scankit/p/x;IILjava/lang/StringBuilder;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L282434.  v0:= 10I;
  #L282438.  v1:= new `int`[v0];
  #L28243c.  v2:= 5I;
  #L28243e.  v3:= new `int`[v2];
  #L282442.  v4:= new `int`[v2];
  #L282446.  if v11 >= v12 then goto L2824f0;
  #L28244a.  call `a`(v10, v11, v1) @signature `Lcom/huawei/hms/scankit/p/Y;.a:(Lcom/huawei/hms/scankit/p/x;I[I)V` @kind static;
  #L282450.  v5:= -1I;
  #L282452.  v6:= 10000I;
  #L282456.  v7:= 0I;
  #L282458.  v8:= 0I;
  #L28245a.  if v8 >= v0 then goto L282480;
  #L28245e.  v9:= v1[v8];
  #L282462.  if v5 <= v9 then goto L282468;
  #L282466.  goto L28246c;
  #L282468.  v5:= v1[v8];
  #L28246c.  v9:= v1[v8];
  #L282470.  if v6 >= v9 then goto L282476;
  #L282474.  goto L28247a;
  #L282476.  v6:= v1[v8];
  #L28247a.  v8:= v8 + 1;
  #L28247e.  goto L28245a;
  #L282480.  v5:= v5 / v6 @kind int;
  #L282482.  v6:= 8I;
  #L282486.  if v5 > v6 then goto L2824e6;
  #L28248a.  v5:= 0I;
  #L28248c.  if v5 >= v2 then goto L2824ae;
  #L282490.  v6:= v5 * 2;
  #L282494.  v8:= v1[v6];
  #L282498.  v3[v5]:= v8;
  #L28249c.  v6:= v6 + 1;
  #L2824a0.  v6:= v1[v6];
  #L2824a4.  v4[v5]:= v6;
  #L2824a8.  v5:= v5 + 1;
  #L2824ac.  goto L28248c;
  #L2824ae.  call temp:= `b`(v3) @signature `Lcom/huawei/hms/scankit/p/V;.b:([I)I` @kind static;
  #L2824b4.  v5:= temp;
  #L2824b6.  v5:= v5 + 48;
  #L2824ba.  v5:= (`char`) v5 @kind i2c;
  #L2824bc.  call temp:= `append`(v13, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2824c2.  call temp:= `b`(v4) @signature `Lcom/huawei/hms/scankit/p/V;.b:([I)I` @kind static;
  #L2824c8.  v5:= temp;
  #L2824ca.  v5:= v5 + 48;
  #L2824ce.  v5:= (`char`) v5 @kind i2c;
  #L2824d0.  call temp:= `append`(v13, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2824d6.  if v7 >= v0 then goto L282446;
  #L2824da.  v5:= v1[v7];
  #L2824de.  v11:= v11 + v5 @kind int;
  #L2824e0.  v7:= v7 + 1;
  #L2824e4.  goto L2824d6;
  #L2824e6.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L2824ec.  v10:= temp @kind object;
  #L2824ee.  throw v10;
  #L2824f0.  if v11 != v12 then goto L2824f6;
  #L2824f4.  return @kind void;
  #L2824f6.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L2824fc.  v10:= temp @kind object;
  #L2824fe.  throw v10;
}
procedure `boolean` `a`(`com.huawei.hms.scankit.p.V` v5 @kind this, `com.huawei.hms.scankit.p.x` v6 @kind object, `int` v7 ) @signature `Lcom/huawei/hms/scankit/p/V;.a:(Lcom/huawei/hms/scankit/p/x;I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2819ac.  v0:= v5.`com.huawei.hms.scankit.p.V.e` @type ^`int`;
  #L2819b0.  v0:= v0 * 10;
  #L2819b4.  v1:= v5.`com.huawei.hms.scankit.p.V.f` @type ^`int`;
  #L2819b8.  v1:= (`double`) v1 @kind i2d;
  #L2819ba.  v3:= 1.5D;
  #L2819be.  v1:= v1 * v3 @kind double;
  #L2819c2.  v1:= (`int`) v1 @kind d2i;
  #L2819c4.  if v0 >= v1 then goto L2819ca;
  #L2819c8.  v0:= v1;
  #L2819ca.  v1:= 1I;
  #L2819cc.  v7:= v7 - v1 @kind int;
  #L2819ce.  if v0 <= 0 then goto L2819ee;
  #L2819d2.  if v7 < 0 then goto L2819ee;
  #L2819d6.  call temp:= `a`(v6, v7) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @kind virtual;
  #L2819dc.  v2:= temp;
  #L2819de.  if v2 == 0 then goto L2819e4;
  #L2819e2.  goto L2819ee;
  #L2819e4.  v0:= v0 + -1;
  #L2819e8.  v7:= v7 + -1;
  #L2819ec.  goto L2819ce;
  #L2819ee.  if v0 == 0 then goto L2819f6;
  #L2819f2.  v6:= 0I;
  #L2819f4.  return v6;
  #L2819f6.  return v1;
}
procedure `int`[] `a`(`com.huawei.hms.scankit.p.V` v6 @kind this, `com.huawei.hms.scankit.p.x` v7 @kind object) @signature `Lcom/huawei/hms/scankit/p/V;.a:(Lcom/huawei/hms/scankit/p/x;)[I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L281bd8.  call `g`(v7) @signature `Lcom/huawei/hms/scankit/p/x;.g:()V` @kind virtual;
  #L281bde.  call temp:= `c`(v7) @signature `Lcom/huawei/hms/scankit/p/V;.c:(Lcom/huawei/hms/scankit/p/x;)I` @kind static;
  #L281be4.  v0:= temp;
  #L281be6.  v1:= `@@com.huawei.hms.scankit.p.V.c` @type ^`int`[][] @kind object;
  #L281bea.  v2:= 0I;
  #L281bec.  v1:= v1[v2] @kind object;
  #L281bf0.  call temp:= `b`(v6, v7, v0, v1) @signature `Lcom/huawei/hms/scankit/p/V;.b:(Lcom/huawei/hms/scankit/p/x;I[I)[I` @kind direct;
  #L281bf6.  v0:= temp @kind object;
  #L281bf8.  v1:= v0[v2];
  #L281bfc.  call temp:= `a`(v6, v7, v1) @signature `Lcom/huawei/hms/scankit/p/V;.a:(Lcom/huawei/hms/scankit/p/x;I)Z` @kind direct;
  #L281c02.  v1:= temp;
  #L281c04.  if v1 == 0 then goto L281c36;
  #L281c08.  v1:= v0[v2];
  #L281c0c.  call temp:= `d`(v7) @signature `Lcom/huawei/hms/scankit/p/x;.d:()I` @kind virtual;
  #L281c12.  v3:= temp;
  #L281c14.  v4:= 1I;
  #L281c16.  v5:= v0[v4];
  #L281c1a.  v3:= v3 - v5 @kind int;
  #L281c1c.  v0[v2]:= v3;
  #L281c20.  call temp:= `d`(v7) @signature `Lcom/huawei/hms/scankit/p/x;.d:()I` @kind virtual;
  #L281c26.  v2:= temp;
  #L281c28.  v2:= v2 - v1 @kind int;
  #L281c2a.  v0[v4]:= v2;
  #L281c2e.  call `g`(v7) @signature `Lcom/huawei/hms/scankit/p/x;.g:()V` @kind virtual;
  #L281c34.  return v0 @kind object;
  #L281c36.  v1:= 2I;
  #L281c38.  v0:= v0[v1];
  #L281c3c.  goto L281be6;
  #L281c3e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L281c40.  call `g`(v7) @signature `Lcom/huawei/hms/scankit/p/x;.g:()V` @kind virtual;
  #L281c46.  throw v0;
  catch `java.lang.Throwable` @[L281bd8..L281c2e] goto L281c3e;
  catch `java.lang.Throwable` @[L281c38..L281c3c] goto L281c3e;
}
procedure `int` `b`(`int`[] v10 @kind object) @signature `Lcom/huawei/hms/scankit/p/V;.b:([I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L281b20.  v0:= `@@com.huawei.hms.scankit.p.V.d` @type ^`int`[][] @kind object;
  #L281b24.  v0:= length @variable v0;
  #L281b26.  v1:= -1I;
  #L281b28.  v2:= 1050253722I;
  #L281b2e.  v3:= 0I;
  #L281b30.  v4:= -1I;
  #L281b32.  if v3 >= v0 then goto L281b7e;
  #L281b36.  v5:= `@@com.huawei.hms.scankit.p.V.d` @type ^`int`[][] @kind object;
  #L281b3a.  v5:= v5[v3] @kind object;
  #L281b3e.  v6:= 0.75F;
  #L281b42.  call temp:= `a`(v10, v5, v6) @signature `Lcom/huawei/hms/scankit/p/Y;.a:([I[IF)F` @kind static;
  #L281b48.  v5:= temp;
  #L281b4a.  v6:= fcmpg(v5, v2);
  #L281b4e.  if v6 >= 0 then goto L281b58;
  #L281b52.  v4:= v3;
  #L281b54.  v2:= v5;
  #L281b56.  goto L281b78;
  #L281b58.  v5:= v5 - v2 @kind float;
  #L281b5a.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L281b60.  v5:= temp;
  #L281b62.  v5:= (`double`) v5 @kind f2d;
  #L281b64.  v7:= 1.0E-7D;
  #L281b6e.  v9:= dcmpg(v5, v7);
  #L281b72.  if v9 >= 0 then goto L281b78;
  #L281b76.  v4:= -1I;
  #L281b78.  v3:= v3 + 1;
  #L281b7c.  goto L281b32;
  #L281b7e.  if v4 < 0 then goto L281b88;
  #L281b82.  v4:= v4 %% 10;
  #L281b86.  return v4;
  #L281b88.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L281b8e.  v10:= temp @kind object;
  #L281b90.  throw v10;
}
procedure `int`[] `b`(`com.huawei.hms.scankit.p.V` v4 @kind this, `com.huawei.hms.scankit.p.x` v5 @kind object) @signature `Lcom/huawei/hms/scankit/p/V;.b:(Lcom/huawei/hms/scankit/p/x;)[I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L281c6c.  call temp:= `c`(v5) @signature `Lcom/huawei/hms/scankit/p/V;.c:(Lcom/huawei/hms/scankit/p/x;)I` @kind static;
  #L281c72.  v0:= temp;
  #L281c74.  v1:= `@@com.huawei.hms.scankit.p.V.b` @type ^`int`[] @kind object;
  #L281c78.  call temp:= `c`(v4, v5, v0, v1) @signature `Lcom/huawei/hms/scankit/p/V;.c:(Lcom/huawei/hms/scankit/p/x;I[I)[I` @kind direct;
  #L281c7e.  v0:= temp @kind object;
  #L281c80.  v1:= 1I;
  #L281c82.  v1:= v0[v1];
  #L281c86.  v2:= 0I;
  #L281c88.  v3:= v0[v2];
  #L281c8c.  v1:= v1 - v3 @kind int;
  #L281c8e.  v1:= v1 / 4;
  #L281c92.  v4.`com.huawei.hms.scankit.p.V.e` @type ^`int` := v1;
  #L281c96.  v1:= v0[v2];
  #L281c9a.  call temp:= `a`(v4, v5, v1) @signature `Lcom/huawei/hms/scankit/p/V;.a:(Lcom/huawei/hms/scankit/p/x;I)Z` @kind direct;
  #L281ca0.  v1:= temp;
  #L281ca2.  if v1 == 0 then goto L281ca8;
  #L281ca6.  return v0 @kind object;
  #L281ca8.  v1:= 2I;
  #L281caa.  v0:= v0[v1];
  #L281cae.  goto L281c74;
}
procedure `int`[] `b`(`com.huawei.hms.scankit.p.V` v17 @kind this, `com.huawei.hms.scankit.p.x` v18 @kind object, `int` v19 , `int`[] v20 @kind object) @signature `Lcom/huawei/hms/scankit/p/V;.b:(Lcom/huawei/hms/scankit/p/x;I[I)[I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L281cc0.  v0:= v20 @kind object;
  #L281cc4.  v0:= length @variable v0;
  #L281cc6.  v1:= new `int`[v0];
  #L281cca.  call temp:= `d`(v18) @signature `Lcom/huawei/hms/scankit/p/x;.d:()I` @kind virtual;
  #L281cd0.  v2:= temp;
  #L281cd2.  v3:= 0I;
  #L281cd4.  v4:= v19;
  #L281cd8.  v5:= v4;
  #L281cda.  v6:= 0I;
  #L281cdc.  v7:= 0I;
  #L281cde.  if v4 >= v2 then goto L281e1a;
  #L281ce2.  v8:= v18 @kind object;
  #L281ce6.  call temp:= `a`(v8, v4) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @kind virtual;
  #L281cec.  v9:= temp;
  #L281cee.  v10:= 1I;
  #L281cf0.  if v9 == v6 then goto L281d14;
  #L281cf4.  if v7 < 0 then goto L281d0a;
  #L281cf8.  if v7 >= v0 then goto L281d0a;
  #L281cfc.  v9:= v1[v7];
  #L281d00.  v9:= v9 + v10 @kind int;
  #L281d02.  v1[v7]:= v9;
  #L281d06.  goto L281e12;
  #L281d0a.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L281d10.  v0:= temp @kind object;
  #L281d12.  throw v0;
  #L281d14.  v9:= v0 + -1;
  #L281d18.  if v7 != v9 then goto L281e06;
  #L281d1c.  v9:= v1[v3];
  #L281d20.  v11:= v1[v10];
  #L281d24.  call temp:= `min`(v9, v11) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L281d2a.  v9:= temp;
  #L281d2c.  if v9 == 0 then goto L281dfc;
  #L281d30.  v9:= v1[v3];
  #L281d34.  v11:= v1[v10];
  #L281d38.  call temp:= `max`(v9, v11) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L281d3e.  v9:= temp;
  #L281d40.  if v9 == 0 then goto L281dfc;
  #L281d44.  v9:= v1[v3];
  #L281d48.  v11:= v1[v10];
  #L281d4c.  call temp:= `max`(v9, v11) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L281d52.  v9:= temp;
  #L281d54.  v9:= (`float`) v9 @kind i2f;
  #L281d56.  v11:= v1[v3];
  #L281d5a.  v12:= v1[v10];
  #L281d5e.  call temp:= `min`(v11, v12) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L281d64.  v11:= temp;
  #L281d66.  v11:= (`float`) v11 @kind i2f;
  #L281d68.  v9:= v9 / v11 @kind float;
  #L281d6a.  v11:= 2I;
  #L281d6c.  v12:= v1[v11];
  #L281d70.  v12:= (`float`) v12 @kind i2f;
  #L281d72.  v13:= 2.0F;
  #L281d76.  v12:= v12 * v13 @kind float;
  #L281d7a.  v13:= v1[v3];
  #L281d7e.  v14:= v1[v10];
  #L281d82.  v13:= v13 + v14 @kind int;
  #L281d84.  v13:= (`float`) v13 @kind i2f;
  #L281d86.  v12:= v12 / v13 @kind float;
  #L281d88.  v13:= 3.0F;
  #L281d8c.  v9:= fcmpg(v9, v13);
  #L281d90.  if v9 > 0 then goto L281db2;
  #L281d94.  v13:= (`double`) v12 @kind f2d;
  #L281d96.  v15:= 1.5D;
  #L281d9a.  v9:= dcmpl(v13, v15);
  #L281d9e.  if v9 <= 0 then goto L281db2;
  #L281da2.  v9:= 4.0F;
  #L281da6.  v9:= fcmpg(v12, v9);
  #L281daa.  if v9 >= 0 then goto L281db2;
  #L281dae.  v9:= 1I;
  #L281db0.  goto L281db4;
  #L281db2.  v9:= 0I;
  #L281db4.  if v9 == 0 then goto L281dd8;
  #L281db8.  v0:= 3I;
  #L281dba.  v0:= new `int`[v0];
  #L281dbe.  v0[v3]:= v5;
  #L281dc2.  v0[v10]:= v4;
  #L281dc6.  v2:= v1[v3];
  #L281dca.  v5:= v5 + v2 @kind int;
  #L281dcc.  v1:= v1[v10];
  #L281dd0.  v5:= v5 + v1 @kind int;
  #L281dd2.  v0[v11]:= v5;
  #L281dd6.  return v0 @kind object;
  #L281dd8.  v9:= v1[v3];
  #L281ddc.  v12:= v1[v10];
  #L281de0.  v9:= v9 + v12 @kind int;
  #L281de2.  v5:= v5 + v9 @kind int;
  #L281de4.  v9:= v7 + -1;
  #L281de8.  call `arraycopy`(v1, v11, v1, v3, v9) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L281dee.  v1[v9]:= v3;
  #L281df2.  v1[v7]:= v3;
  #L281df6.  v7:= v7 + -1;
  #L281dfa.  goto L281e0a;
  #L281dfc.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L281e02.  v0:= temp @kind object;
  #L281e04.  throw v0;
  #L281e06.  v7:= v7 + 1;
  #L281e0a.  v1[v7]:= v10;
  #L281e0e.  v6:= v6 ^~ 1;
  #L281e12.  v4:= v4 + 1;
  #L281e16.  goto L281cde;
  #L281e1a.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L281e20.  v0:= temp @kind object;
  #L281e22.  throw v0;
}
procedure `int` `c`(`com.huawei.hms.scankit.p.x` v2 @kind object) @signature `Lcom/huawei/hms/scankit/p/V;.c:(Lcom/huawei/hms/scankit/p/x;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L281ba4.  call temp:= `d`(v2) @signature `Lcom/huawei/hms/scankit/p/x;.d:()I` @kind virtual;
  #L281baa.  v0:= temp;
  #L281bac.  v1:= 0I;
  #L281bae.  call temp:= `b`(v2, v1) @signature `Lcom/huawei/hms/scankit/p/x;.b:(I)I` @kind virtual;
  #L281bb4.  v2:= temp;
  #L281bb6.  if v2 == v0 then goto L281bbc;
  #L281bba.  return v2;
  #L281bbc.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L281bc2.  v2:= temp @kind object;
  #L281bc4.  throw v2;
}
procedure `int`[] `c`(`com.huawei.hms.scankit.p.V` v18 @kind this, `com.huawei.hms.scankit.p.x` v19 @kind object, `int` v20 , `int`[] v21 @kind object) @signature `Lcom/huawei/hms/scankit/p/V;.c:(Lcom/huawei/hms/scankit/p/x;I[I)[I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L281e34.  v0:= v18 @kind object;
  #L281e38.  v1:= v19 @kind object;
  #L281e3c.  v2:= v21 @kind object;
  #L281e40.  v2:= length @variable v2;
  #L281e42.  v3:= new `int`[v2];
  #L281e46.  call temp:= `d`(v19) @signature `Lcom/huawei/hms/scankit/p/x;.d:()I` @kind virtual;
  #L281e4c.  v4:= temp;
  #L281e4e.  v5:= 0I;
  #L281e50.  v6:= v20;
  #L281e54.  v7:= v6;
  #L281e56.  v8:= 0I;
  #L281e58.  v9:= 0I;
  #L281e5a.  if v6 >= v4 then goto L281fb0;
  #L281e5e.  call temp:= `a`(v1, v6) @signature `Lcom/huawei/hms/scankit/p/x;.a:(I)Z` @kind virtual;
  #L281e64.  v10:= temp;
  #L281e66.  v11:= 1I;
  #L281e68.  if v10 == v8 then goto L281e92;
  #L281e6c.  if v9 < 0 then goto L281e88;
  #L281e70.  if v9 >= v2 then goto L281e88;
  #L281e74.  v10:= v3[v9];
  #L281e78.  v10:= v10 + v11 @kind int;
  #L281e7a.  v3[v9]:= v10;
  #L281e7e.  v16:= v4;
  #L281e82.  v4:= 0I;
  #L281e84.  goto L281fa2;
  #L281e88.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L281e8e.  v1:= temp @kind object;
  #L281e90.  throw v1;
  #L281e92.  v10:= v2 + -1;
  #L281e96.  if v9 != v10 then goto L281f8e;
  #L281e9a.  call temp:= `clone`(v3) @signature `[I.clone:()Ljava/lang/Object;` @kind virtual;
  #L281ea0.  v10:= temp @kind object;
  #L281ea2.  v10:= (`int`[]) v10 @kind object;
  #L281ea6.  call `sort`(v10) @signature `Ljava/util/Arrays;.sort:([I)V` @kind static;
  #L281eac.  v12:= v10[v5];
  #L281eb0.  v13:= v10[v11];
  #L281eb4.  v12:= v12 + v13 @kind int;
  #L281eb6.  v12:= (`double`) v12 @kind i2d;
  #L281eb8.  v14:= 0.5D;
  #L281ebc.  v12:= v12 * v14 @kind double;
  #L281ec0.  v11:= 2I;
  #L281ec2.  v16:= v10[v11];
  #L281ec6.  v11:= 3I;
  #L281ec8.  v17:= v10[v11];
  #L281ecc.  v5:= v16 + v17 @kind int;
  #L281ed0.  v16:= v4;
  #L281ed4.  v4:= (`double`) v5 @kind i2d;
  #L281ed6.  v4:= v4 * v14 @kind double;
  #L281eda.  v4:= v4 / v12 @kind double;
  #L281edc.  v12:= 4.0D;
  #L281ee0.  v14:= dcmpg(v4, v12);
  #L281ee4.  if v14 >= 0 then goto L281f64;
  #L281ee8.  v4:= v10[v11];
  #L281eec.  v4:= (`double`) v4 @kind i2d;
  #L281eee.  v12:= 1.0D;
  #L281ef2.  v4:= v4 * v12 @kind double;
  #L281ef6.  v12:= 0I;
  #L281ef8.  v10:= v10[v12];
  #L281efc.  v12:= (`double`) v10 @kind i2d;
  #L281efe.  v4:= v4 / v12 @kind double;
  #L281f00.  v12:= 3.0D;
  #L281f04.  v10:= dcmpg(v4, v12);
  #L281f08.  if v10 > 0 then goto L281f64;
  #L281f0c.  v2:= 10I;
  #L281f10.  v4:= new `int`[v2];
  #L281f14.  call `a`(v1, v6, v4) @signature `Lcom/huawei/hms/scankit/p/Y;.a:(Lcom/huawei/hms/scankit/p/x;I[I)V` @kind static;
  #L281f1a.  v1:= -1I;
  #L281f1c.  v0.`com.huawei.hms.scankit.p.V.f` @type ^`int` := v1;
  #L281f20.  v12:= 0I;
  #L281f22.  if v12 >= v2 then goto L281f40;
  #L281f26.  v1:= v4[v12];
  #L281f2a.  v5:= v0.`com.huawei.hms.scankit.p.V.f` @type ^`int`;
  #L281f2e.  if v1 <= v5 then goto L281f3a;
  #L281f32.  v1:= v4[v12];
  #L281f36.  v0.`com.huawei.hms.scankit.p.V.f` @type ^`int` := v1;
  #L281f3a.  v12:= v12 + 1;
  #L281f3e.  goto L281f22;
  #L281f40.  v1:= new `int`[v11];
  #L281f44.  v4:= 0I;
  #L281f46.  v1[v4]:= v7;
  #L281f4a.  v5:= 1I;
  #L281f4c.  v1[v5]:= v6;
  #L281f50.  v2:= v3[v4];
  #L281f54.  v7:= v7 + v2 @kind int;
  #L281f56.  v2:= v3[v5];
  #L281f5a.  v7:= v7 + v2 @kind int;
  #L281f5c.  v10:= 2I;
  #L281f5e.  v1[v10]:= v7;
  #L281f62.  return v1 @kind object;
  #L281f64.  v4:= 0I;
  #L281f66.  v5:= 1I;
  #L281f68.  v10:= 2I;
  #L281f6a.  v11:= v3[v4];
  #L281f6e.  v12:= v3[v5];
  #L281f72.  v11:= v11 + v12 @kind int;
  #L281f74.  v7:= v7 + v11 @kind int;
  #L281f76.  v5:= v9 + -1;
  #L281f7a.  call `arraycopy`(v3, v10, v3, v4, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L281f80.  v3[v5]:= v4;
  #L281f84.  v3[v9]:= v4;
  #L281f88.  v9:= v9 + -1;
  #L281f8c.  goto L281f98;
  #L281f8e.  v16:= v4;
  #L281f92.  v4:= 0I;
  #L281f94.  v9:= v9 + 1;
  #L281f98.  v5:= 1I;
  #L281f9a.  v3[v9]:= v5;
  #L281f9e.  v8:= v8 ^~ 1;
  #L281fa2.  v6:= v6 + 1;
  #L281fa6.  v4:= v16;
  #L281faa.  v5:= 0I;
  #L281fac.  goto L281e5a;
  #L281fb0.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L281fb6.  v1:= temp @kind object;
  #L281fb8.  throw v1;
}
procedure `com.huawei.hms.scankit.aiscan.common.x` `a`(`com.huawei.hms.scankit.p.V` v9 @kind this, `int` v10 , `com.huawei.hms.scankit.p.x` v11 @kind object, `java.util.Map` v12 @kind object) @signature `Lcom/huawei/hms/scankit/p/V;.a:(ILcom/huawei/hms/scankit/p/x;Ljava/util/Map;)Lcom/huawei/hms/scankit/aiscan/common/x;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L281a4c.  call temp:= `b`(v9, v11) @signature `Lcom/huawei/hms/scankit/p/V;.b:(Lcom/huawei/hms/scankit/p/x;)[I` @kind direct;
  #L281a52.  v12:= temp @kind object;
  #L281a54.  call temp:= `a`(v9, v11) @signature `Lcom/huawei/hms/scankit/p/V;.a:(Lcom/huawei/hms/scankit/p/x;)[I` @kind direct;
  #L281a5a.  v0:= temp @kind object;
  #L281a5c.  v1:= new `java.lang.StringBuilder`;
  #L281a60.  v2:= 20I;
  #L281a64.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L281a6a.  v2:= 1I;
  #L281a6c.  v3:= v12[v2];
  #L281a70.  v4:= 0I;
  #L281a72.  v5:= v0[v4];
  #L281a76.  call `a`(v11, v3, v5, v1) @signature `Lcom/huawei/hms/scankit/p/V;.a:(Lcom/huawei/hms/scankit/p/x;IILjava/lang/StringBuilder;)V` @kind static;
  #L281a7c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L281a82.  v11:= temp @kind object;
  #L281a84.  v1:= `@@com.huawei.hms.scankit.p.V.a` @type ^`int`[] @kind object;
  #L281a88.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L281a8e.  v3:= temp;
  #L281a90.  v5:= length @variable v1;
  #L281a92.  v6:= 0I;
  #L281a94.  v7:= 0I;
  #L281a96.  if v6 >= v5 then goto L281ab2;
  #L281a9a.  v8:= v1[v6];
  #L281a9e.  if v3 != v8 then goto L281aa6;
  #L281aa2.  v1:= 1I;
  #L281aa4.  goto L281ab4;
  #L281aa6.  if v8 <= v7 then goto L281aac;
  #L281aaa.  v7:= v8;
  #L281aac.  v6:= v6 + 1;
  #L281ab0.  goto L281a96;
  #L281ab2.  v1:= 0I;
  #L281ab4.  if v1 != 0 then goto L281abe;
  #L281ab8.  if v3 <= v7 then goto L281abe;
  #L281abc.  v1:= 1I;
  #L281abe.  if v1 == 0 then goto L281b04;
  #L281ac2.  v1:= new `com.huawei.hms.scankit.aiscan.common.x`;
  #L281ac6.  v3:= 2I;
  #L281ac8.  v3:= new `com.huawei.hms.scankit.aiscan.common.z`[v3];
  #L281acc.  v5:= new `com.huawei.hms.scankit.aiscan.common.z`;
  #L281ad0.  v12:= v12[v4];
  #L281ad4.  v12:= (`float`) v12 @kind i2f;
  #L281ad6.  v10:= (`float`) v10 @kind i2f;
  #L281ad8.  call `<init>`(v5, v12, v10) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FF)V` @kind direct;
  #L281ade.  v3[v4]:= v5 @kind object;
  #L281ae2.  v12:= new `com.huawei.hms.scankit.aiscan.common.z`;
  #L281ae6.  v0:= v0[v2];
  #L281aea.  v0:= (`float`) v0 @kind i2f;
  #L281aec.  call `<init>`(v12, v0, v10) @signature `Lcom/huawei/hms/scankit/aiscan/common/z;.<init>:(FF)V` @kind direct;
  #L281af2.  v3[v2]:= v12 @kind object;
  #L281af6.  v10:= `@@com.huawei.hms.scankit.aiscan.common.BarcodeFormat.i` @type ^`com.huawei.hms.scankit.aiscan.common.BarcodeFormat` @kind object;
  #L281afa.  v12:= 0I;
  #L281afc.  call `<init>`(v1, v11, v12, v3, v10) @signature `Lcom/huawei/hms/scankit/aiscan/common/x;.<init>:(Ljava/lang/String;[B[Lcom/huawei/hms/scankit/aiscan/common/z;Lcom/huawei/hms/scankit/aiscan/common/BarcodeFormat;)V` @kind direct;
  #L281b02.  return v1 @kind object;
  #L281b04.  call temp:= `a`() @signature `Lcom/huawei/hms/scankit/aiscan/common/a;.a:()Lcom/huawei/hms/scankit/aiscan/common/a;` @kind static;
  #L281b0a.  v10:= temp @kind object;
  #L281b0c.  throw v10;
}
