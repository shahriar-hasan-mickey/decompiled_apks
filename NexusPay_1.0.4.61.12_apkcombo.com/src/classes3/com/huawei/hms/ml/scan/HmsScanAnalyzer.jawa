record `com.huawei.hms.ml.scan.HmsScanAnalyzer` @kind class @AccessFlag PUBLIC extends `com.huawei.hms.mlsdk.common.MLAnalyzer` @kind class {
  `android.content.Context` `com.huawei.hms.ml.scan.HmsScanAnalyzer.mContext` @AccessFlag PRIVATE;
  `com.huawei.hms.ml.scan.HmsScanAnalyzerOptions` `com.huawei.hms.ml.scan.HmsScanAnalyzer.mlVisionScanDetectorOptions` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.huawei.hms.ml.scan.HmsScanAnalyzer.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.huawei.hms.ml.scan.HmsScanAnalyzer` v2 @kind this) @signature `Lcom/huawei/hms/ml/scan/HmsScanAnalyzer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L232ef8.  call `<init>`(v2) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.<init>:()V` @kind direct;
  #L232efe.  call temp:= `getInstance`() @signature `Lcom/huawei/agconnect/AGConnectInstance;.getInstance:()Lcom/huawei/agconnect/AGConnectInstance;` @kind static;
  #L232f04.  v0:= temp @kind object;
  #L232f06.  if v0 == 0 then goto L232f20;
  #L232f0a.  call temp:= `getInstance`() @signature `Lcom/huawei/agconnect/AGConnectInstance;.getInstance:()Lcom/huawei/agconnect/AGConnectInstance;` @kind static;
  #L232f10.  v0:= temp @kind object;
  #L232f12.  call temp:= `getContext`(v0) @signature `Lcom/huawei/agconnect/AGConnectInstance;.getContext:()Landroid/content/Context;` @kind virtual;
  #L232f18.  v0:= temp @kind object;
  #L232f1a.  v2.`com.huawei.hms.ml.scan.HmsScanAnalyzer.mContext` @type ^`android.content.Context` := v0 @kind object;
  #L232f1e.  goto L232f2e;
  #L232f20.  v0:= "HmsScanAnalyzer" @kind object;
  #L232f24.  v1:= "AGConnectInstanceImpl contect is null" @kind object;
  #L232f28.  call `d`(v0, v1) @signature `Lcom/huawei/hms/scankit/util/a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L232f2e.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.ml.scan.HmsScanAnalyzer` v0 @kind this, `android.content.Context` v1 @kind object, `com.huawei.hms.ml.scan.HmsScanAnalyzerOptions` v2 @kind object) @signature `Lcom/huawei/hms/ml/scan/HmsScanAnalyzer;.<init>:(Landroid/content/Context;Lcom/huawei/hms/ml/scan/HmsScanAnalyzerOptions;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L232f40.  call `<init>`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.<init>:()V` @kind direct;
  #L232f46.  v0.`com.huawei.hms.ml.scan.HmsScanAnalyzer.mContext` @type ^`android.content.Context` := v1 @kind object;
  #L232f4a.  v0.`com.huawei.hms.ml.scan.HmsScanAnalyzer.mlVisionScanDetectorOptions` @type ^`com.huawei.hms.ml.scan.HmsScanAnalyzerOptions` := v2 @kind object;
  #L232f4e.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.ml.scan.HmsScanAnalyzer` v0 @kind this, `android.content.Context` v1 @kind object, `com.huawei.hms.ml.scan.HmsScanAnalyzerOptions` v2 @kind object, `com.huawei.hms.ml.scan.HmsScanAnalyzer$1` v3 @kind object) @signature `Lcom/huawei/hms/ml/scan/HmsScanAnalyzer;.<init>:(Landroid/content/Context;Lcom/huawei/hms/ml/scan/HmsScanAnalyzerOptions;Lcom/huawei/hms/ml/scan/HmsScanAnalyzer$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L232f60.  call `<init>`(v0, v1, v2) @signature `Lcom/huawei/hms/ml/scan/HmsScanAnalyzer;.<init>:(Landroid/content/Context;Lcom/huawei/hms/ml/scan/HmsScanAnalyzerOptions;)V` @kind direct;
  #L232f66.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.ml.scan.HmsScanAnalyzer` v1 @kind this, `com.huawei.hms.ml.scan.HmsScanAnalyzerOptions` v2 @kind object) @signature `Lcom/huawei/hms/ml/scan/HmsScanAnalyzer;.<init>:(Lcom/huawei/hms/ml/scan/HmsScanAnalyzerOptions;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L232f78.  call `<init>`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.<init>:()V` @kind direct;
  #L232f7e.  call temp:= `getInstance`() @signature `Lcom/huawei/agconnect/AGConnectInstance;.getInstance:()Lcom/huawei/agconnect/AGConnectInstance;` @kind static;
  #L232f84.  v0:= temp @kind object;
  #L232f86.  call temp:= `getContext`(v0) @signature `Lcom/huawei/agconnect/AGConnectInstance;.getContext:()Landroid/content/Context;` @kind virtual;
  #L232f8c.  v0:= temp @kind object;
  #L232f8e.  v1.`com.huawei.hms.ml.scan.HmsScanAnalyzer.mContext` @type ^`android.content.Context` := v0 @kind object;
  #L232f92.  v1.`com.huawei.hms.ml.scan.HmsScanAnalyzer.mlVisionScanDetectorOptions` @type ^`com.huawei.hms.ml.scan.HmsScanAnalyzerOptions` := v2 @kind object;
  #L232f96.  return @kind void;
}
procedure `android.content.Context` `access$000`(`com.huawei.hms.ml.scan.HmsScanAnalyzer` v0 @kind object) @signature `Lcom/huawei/hms/ml/scan/HmsScanAnalyzer;.access$000:(Lcom/huawei/hms/ml/scan/HmsScanAnalyzer;)Landroid/content/Context;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L232e10.  v0:= v0.`com.huawei.hms.ml.scan.HmsScanAnalyzer.mContext` @type ^`android.content.Context` @kind object;
  #L232e14.  return v0 @kind object;
}
procedure `com.huawei.hms.ml.scan.HmsScanAnalyzerOptions` `access$100`(`com.huawei.hms.ml.scan.HmsScanAnalyzer` v0 @kind object) @signature `Lcom/huawei/hms/ml/scan/HmsScanAnalyzer;.access$100:(Lcom/huawei/hms/ml/scan/HmsScanAnalyzer;)Lcom/huawei/hms/ml/scan/HmsScanAnalyzerOptions;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L232ee0.  v0:= v0.`com.huawei.hms.ml.scan.HmsScanAnalyzer.mlVisionScanDetectorOptions` @type ^`com.huawei.hms.ml.scan.HmsScanAnalyzerOptions` @kind object;
  #L232ee4.  return v0 @kind object;
}
procedure `android.util.SparseArray` `analyseFrame`(`com.huawei.hms.ml.scan.HmsScanAnalyzer` v4 @kind this, `com.huawei.hms.mlsdk.common.MLFrame` v5 @kind object) @signature `Lcom/huawei/hms/ml/scan/HmsScanAnalyzer;.analyseFrame:(Lcom/huawei/hms/mlsdk/common/MLFrame;)Landroid/util/SparseArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L232e28.  if v5 != 0 then goto L232e38;
  #L232e2c.  v5:= new `android.util.SparseArray`;
  #L232e30.  call `<init>`(v5) @signature `Landroid/util/SparseArray;.<init>:()V` @kind direct;
  #L232e36.  return v5 @kind object;
  #L232e38.  v0:= v4.`com.huawei.hms.ml.scan.HmsScanAnalyzer.mContext` @type ^`android.content.Context` @kind object;
  #L232e3c.  v1:= v4.`com.huawei.hms.ml.scan.HmsScanAnalyzer.mlVisionScanDetectorOptions` @type ^`com.huawei.hms.ml.scan.HmsScanAnalyzerOptions` @kind object;
  #L232e40.  call temp:= `detectForHmsDector`(v0, v5, v1) @signature `Lcom/huawei/hms/hmsscankit/ScanUtil;.detectForHmsDector:(Landroid/content/Context;Lcom/huawei/hms/mlsdk/common/MLFrame;Lcom/huawei/hms/ml/scan/HmsScanAnalyzerOptions;)[Lcom/huawei/hms/ml/scan/HmsScan;` @kind static;
  #L232e46.  v5:= temp @kind object;
  #L232e48.  v0:= new `android.util.SparseArray`;
  #L232e4c.  call `<init>`(v0) @signature `Landroid/util/SparseArray;.<init>:()V` @kind direct;
  #L232e52.  v1:= 0I;
  #L232e54.  v2:= length @variable v5;
  #L232e56.  if v1 >= v2 then goto L232e8a;
  #L232e5a.  v2:= v5[v1] @kind object;
  #L232e5e.  if v2 == 0 then goto L232e84;
  #L232e62.  v3:= v2.`com.huawei.hms.ml.scan.HmsScanBase.originalValue` @type ^`java.lang.String` @kind object;
  #L232e66.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L232e6c.  v3:= temp;
  #L232e6e.  if v3 != 0 then goto L232e84;
  #L232e72.  v3:= v2.`com.huawei.hms.ml.scan.HmsScanBase.originalValue` @type ^`java.lang.String` @kind object;
  #L232e76.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L232e7c.  v3:= temp;
  #L232e7e.  call `append`(v0, v3, v2) @signature `Landroid/util/SparseArray;.append:(ILjava/lang/Object;)V` @kind virtual;
  #L232e84.  v1:= v1 + 1;
  #L232e88.  goto L232e54;
  #L232e8a.  return v0 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `analyzInAsyn`(`com.huawei.hms.ml.scan.HmsScanAnalyzer` v1 @kind this, `com.huawei.hms.mlsdk.common.MLFrame` v2 @kind object) @signature `Lcom/huawei/hms/ml/scan/HmsScanAnalyzer;.analyzInAsyn:(Lcom/huawei/hms/mlsdk/common/MLFrame;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L232ebc.  v0:= new `com.huawei.hms.ml.scan.HmsScanAnalyzer$1`;
  #L232ec0.  call `<init>`(v0, v1, v2) @signature `Lcom/huawei/hms/ml/scan/HmsScanAnalyzer$1;.<init>:(Lcom/huawei/hms/ml/scan/HmsScanAnalyzer;Lcom/huawei/hms/mlsdk/common/MLFrame;)V` @kind direct;
  #L232ec6.  call temp:= `callInBackground`(v0) @signature `Lcom/huawei/hmf/tasks/Tasks;.callInBackground:(Ljava/util/concurrent/Callable;)Lcom/huawei/hmf/tasks/Task;` @kind static;
  #L232ecc.  v2:= temp @kind object;
  #L232ece.  return v2 @kind object;
}
procedure `void` `destory`(`com.huawei.hms.ml.scan.HmsScanAnalyzer` v0 @kind this) @signature `Lcom/huawei/hms/ml/scan/HmsScanAnalyzer;.destory:()V` @AccessFlag PUBLIC {
    temp;

  #L232fa8.  call `destroy`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.destroy:()V` @kind super;
  #L232fae.  return @kind void;
}
procedure `boolean` `isAvailable`(`com.huawei.hms.ml.scan.HmsScanAnalyzer` v1 @kind this) @signature `Lcom/huawei/hms/ml/scan/HmsScanAnalyzer;.isAvailable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L232e9c.  v0:= v1.`com.huawei.hms.ml.scan.HmsScanAnalyzer.mContext` @type ^`android.content.Context` @kind object;
  #L232ea0.  call temp:= `isScanAvailable`(v0) @signature `Lcom/huawei/hms/hmsscankit/ScanUtil;.isScanAvailable:(Landroid/content/Context;)Z` @kind static;
  #L232ea6.  v0:= temp;
  #L232ea8.  return v0;
}
