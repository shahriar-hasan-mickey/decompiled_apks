record `com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1` @kind class @AccessFlag PUBLIC {
  `android.content.Context` `com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.applicationContext` @AccessFlag PRIVATE;
  `int` `com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.height` @AccessFlag PRIVATE;
  `android.renderscript.Allocation` `com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.in` @AccessFlag PRIVATE;
  `int` `com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.length` @AccessFlag PRIVATE;
  `android.renderscript.Allocation` `com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.out` @AccessFlag PRIVATE;
  `android.renderscript.RenderScript` `com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.renderScript` @AccessFlag PRIVATE;
  `android.renderscript.Type$Builder` `com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.rgbaType` @AccessFlag PRIVATE;
  `int` `com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.width` @AccessFlag PRIVATE;
  `android.renderscript.ScriptIntrinsicYuvToRGB` `com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.yuvToRgbIntrinsic` @AccessFlag PRIVATE;
  `android.renderscript.Type$Builder` `com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.yuvType` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/huawei/hms/ml/common/utils/NV21ToBitmapConverter1;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L22ef34.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22ef3a.  v0:= -1I;
  #L22ef3c.  v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.width` @type ^`int` := v0;
  #L22ef40.  v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.height` @type ^`int` := v0;
  #L22ef44.  v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.length` @type ^`int` := v0;
  #L22ef48.  if v2 == 0 then goto L22ef8c;
  #L22ef4c.  call temp:= `getApplicationContext`(v2) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L22ef52.  v0:= temp @kind object;
  #L22ef54.  if v0 != 0 then goto L22ef5e;
  #L22ef58.  v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.applicationContext` @type ^`android.content.Context` := v2 @kind object;
  #L22ef5c.  goto L22ef62;
  #L22ef5e.  v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.applicationContext` @type ^`android.content.Context` := v0 @kind object;
  #L22ef62.  v2:= v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.applicationContext` @type ^`android.content.Context` @kind object;
  #L22ef66.  call temp:= `create`(v2) @signature `Landroid/renderscript/RenderScript;.create:(Landroid/content/Context;)Landroid/renderscript/RenderScript;` @kind static;
  #L22ef6c.  v2:= temp @kind object;
  #L22ef6e.  v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.renderScript` @type ^`android.renderscript.RenderScript` := v2 @kind object;
  #L22ef72.  if v2 == 0 then goto L22ef8a;
  #L22ef76.  call temp:= `U8_4`(v2) @signature `Landroid/renderscript/Element;.U8_4:(Landroid/renderscript/RenderScript;)Landroid/renderscript/Element;` @kind static;
  #L22ef7c.  v0:= temp @kind object;
  #L22ef7e.  call temp:= `create`(v2, v0) @signature `Landroid/renderscript/ScriptIntrinsicYuvToRGB;.create:(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;)Landroid/renderscript/ScriptIntrinsicYuvToRGB;` @kind static;
  #L22ef84.  v2:= temp @kind object;
  #L22ef86.  v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.yuvToRgbIntrinsic` @type ^`android.renderscript.ScriptIntrinsicYuvToRGB` := v2 @kind object;
  #L22ef8a.  return @kind void;
  #L22ef8c.  v2:= new `java.lang.IllegalArgumentException`;
  #L22ef90.  v0:= "context can't be null" @kind object;
  #L22ef94.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22ef9a.  throw v2;
}
procedure `void` `recreateIfNeed`(`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/huawei/hms/ml/common/utils/NV21ToBitmapConverter1;.recreateIfNeed:([BIII)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L22efac.  v5:= v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.width` @type ^`int`;
  #L22efb0.  if v5 != v3 then goto L22efc8;
  #L22efb4.  v5:= v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.height` @type ^`int`;
  #L22efb8.  if v5 != v4 then goto L22efc8;
  #L22efbc.  v5:= v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.length` @type ^`int`;
  #L22efc0.  v0:= length @variable v2;
  #L22efc2.  if v5 != v0 then goto L22efc8;
  #L22efc6.  return @kind void;
  #L22efc8.  v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.width` @type ^`int` := v3;
  #L22efcc.  v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.height` @type ^`int` := v4;
  #L22efd0.  v2:= length @variable v2;
  #L22efd2.  v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.length` @type ^`int` := v2;
  #L22efd6.  v2:= 0I;
  #L22efd8.  v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.yuvType` @type ^`android.renderscript.Type$Builder` := v2 @kind object;
  #L22efdc.  v1.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.rgbaType` @type ^`android.renderscript.Type$Builder` := v2 @kind object;
  #L22efe0.  return @kind void;
}
procedure `android.graphics.Bitmap` `convert`(`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1` v10 @kind this, `byte`[] v11 @kind object, `int` v12 , `int` v13 , `int` v14 , `int` v15 , `int` v16 ) @signature `Lcom/huawei/hms/ml/common/utils/NV21ToBitmapConverter1;.convert:([BIIIII)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L22eca0.  v7:= 0I;
  #L22eca2.  v8:= 0I;
  #L22eca4.  v9:= 0I;
  #L22eca6.  v0:= v10 @kind object;
  #L22eca8.  v1:= v11 @kind object;
  #L22ecaa.  v2:= v12;
  #L22ecac.  v3:= v13;
  #L22ecae.  v4:= v14;
  #L22ecb0.  v5:= v15;
  #L22ecb2.  v6:= v16;
  #L22ecb6.  call temp:= `convert`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/huawei/hms/ml/common/utils/NV21ToBitmapConverter1;.convert:([BIIIIIZZZ)Landroid/graphics/Bitmap;` @kind virtual;
  #L22ecbc.  v0:= temp @kind object;
  #L22ecbe.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `convert`(`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1` v13 @kind this, `byte`[] v14 @kind object, `int` v15 , `int` v16 , `int` v17 , `int` v18 , `int` v19 , `boolean` v20 , `boolean` v21 , `boolean` v22 ) @signature `Lcom/huawei/hms/ml/common/utils/NV21ToBitmapConverter1;.convert:([BIIIIIZZZ)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L22ecd0.  v9:= v13 @kind object;
  #L22ecd2.  v0:= v14 @kind object;
  #L22ecd4.  v1:= v15;
  #L22ecd6.  v2:= v16;
  #L22ecda.  v5:= v19;
  #L22ecde.  call `recreateIfNeed`(v13, v14, v15, v2, v5) @signature `Lcom/huawei/hms/ml/common/utils/NV21ToBitmapConverter1;.recreateIfNeed:([BIII)V` @kind direct;
  #L22ece4.  v3:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L22ece8.  v4:= v17;
  #L22ecec.  v6:= v18;
  #L22ecf0.  call temp:= `createBitmap`(v4, v6, v3) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L22ecf6.  v10:= temp @kind object;
  #L22ecf8.  v11:= new `android.graphics.Canvas`;
  #L22ecfc.  call `<init>`(v11, v10) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L22ed02.  call temp:= `convertYUVtoRGB`(v13, v14, v15, v16) @signature `Lcom/huawei/hms/ml/common/utils/NV21ToBitmapConverter1;.convertYUVtoRGB:([BII)Landroid/graphics/Bitmap;` @kind virtual;
  #L22ed08.  v12:= temp @kind object;
  #L22ed0a.  v0:= v13 @kind object;
  #L22ed0c.  v3:= v17;
  #L22ed10.  v4:= v18;
  #L22ed14.  v6:= v20;
  #L22ed18.  v7:= v21;
  #L22ed1c.  v8:= v22;
  #L22ed20.  call temp:= `getTransformationMatrix`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/huawei/hms/ml/common/utils/NV21ToBitmapConverter1;.getTransformationMatrix:(IIIIIZZZ)Landroid/graphics/Matrix;` @kind virtual;
  #L22ed26.  v0:= temp @kind object;
  #L22ed28.  v1:= 0I;
  #L22ed2a.  call `drawBitmap`(v11, v12, v0, v1) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;Landroid/graphics/Matrix;Landroid/graphics/Paint;)V` @kind virtual;
  #L22ed30.  return v10 @kind object;
}
procedure `android.graphics.Bitmap` `convertYUVtoRGB`(`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lcom/huawei/hms/ml/common/utils/NV21ToBitmapConverter1;.convertYUVtoRGB:([BII)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22ed44.  v0:= v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.yuvType` @type ^`android.renderscript.Type$Builder` @kind object;
  #L22ed48.  if v0 != 0 then goto L22edcc;
  #L22ed4c.  v0:= new `android.renderscript.Type$Builder`;
  #L22ed50.  v1:= v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.renderScript` @type ^`android.renderscript.RenderScript` @kind object;
  #L22ed54.  call temp:= `U8`(v1) @signature `Landroid/renderscript/Element;.U8:(Landroid/renderscript/RenderScript;)Landroid/renderscript/Element;` @kind static;
  #L22ed5a.  v2:= temp @kind object;
  #L22ed5c.  call `<init>`(v0, v1, v2) @signature `Landroid/renderscript/Type$Builder;.<init>:(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;)V` @kind direct;
  #L22ed62.  v1:= length @variable v5;
  #L22ed64.  call temp:= `setX`(v0, v1) @signature `Landroid/renderscript/Type$Builder;.setX:(I)Landroid/renderscript/Type$Builder;` @kind virtual;
  #L22ed6a.  v0:= temp @kind object;
  #L22ed6c.  v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.yuvType` @type ^`android.renderscript.Type$Builder` := v0 @kind object;
  #L22ed70.  v1:= v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.renderScript` @type ^`android.renderscript.RenderScript` @kind object;
  #L22ed74.  call temp:= `create`(v0) @signature `Landroid/renderscript/Type$Builder;.create:()Landroid/renderscript/Type;` @kind virtual;
  #L22ed7a.  v0:= temp @kind object;
  #L22ed7c.  v2:= 1I;
  #L22ed7e.  call temp:= `createTyped`(v1, v0, v2) @signature `Landroid/renderscript/Allocation;.createTyped:(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;I)Landroid/renderscript/Allocation;` @kind static;
  #L22ed84.  v0:= temp @kind object;
  #L22ed86.  v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.in` @type ^`android.renderscript.Allocation` := v0 @kind object;
  #L22ed8a.  v0:= new `android.renderscript.Type$Builder`;
  #L22ed8e.  v1:= v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.renderScript` @type ^`android.renderscript.RenderScript` @kind object;
  #L22ed92.  call temp:= `RGBA_8888`(v1) @signature `Landroid/renderscript/Element;.RGBA_8888:(Landroid/renderscript/RenderScript;)Landroid/renderscript/Element;` @kind static;
  #L22ed98.  v3:= temp @kind object;
  #L22ed9a.  call `<init>`(v0, v1, v3) @signature `Landroid/renderscript/Type$Builder;.<init>:(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;)V` @kind direct;
  #L22eda0.  call temp:= `setX`(v0, v6) @signature `Landroid/renderscript/Type$Builder;.setX:(I)Landroid/renderscript/Type$Builder;` @kind virtual;
  #L22eda6.  v0:= temp @kind object;
  #L22eda8.  call temp:= `setY`(v0, v7) @signature `Landroid/renderscript/Type$Builder;.setY:(I)Landroid/renderscript/Type$Builder;` @kind virtual;
  #L22edae.  v0:= temp @kind object;
  #L22edb0.  v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.rgbaType` @type ^`android.renderscript.Type$Builder` := v0 @kind object;
  #L22edb4.  v1:= v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.renderScript` @type ^`android.renderscript.RenderScript` @kind object;
  #L22edb8.  call temp:= `create`(v0) @signature `Landroid/renderscript/Type$Builder;.create:()Landroid/renderscript/Type;` @kind virtual;
  #L22edbe.  v0:= temp @kind object;
  #L22edc0.  call temp:= `createTyped`(v1, v0, v2) @signature `Landroid/renderscript/Allocation;.createTyped:(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;I)Landroid/renderscript/Allocation;` @kind static;
  #L22edc6.  v0:= temp @kind object;
  #L22edc8.  v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.out` @type ^`android.renderscript.Allocation` := v0 @kind object;
  #L22edcc.  v0:= v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.in` @type ^`android.renderscript.Allocation` @kind object;
  #L22edd0.  call `copyFrom`(v0, v5) @signature `Landroid/renderscript/Allocation;.copyFrom:([B)V` @kind virtual;
  #L22edd6.  v5:= v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.yuvToRgbIntrinsic` @type ^`android.renderscript.ScriptIntrinsicYuvToRGB` @kind object;
  #L22edda.  if v5 == 0 then goto L22edf6;
  #L22edde.  v0:= v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.in` @type ^`android.renderscript.Allocation` @kind object;
  #L22ede2.  call `setInput`(v5, v0) @signature `Landroid/renderscript/ScriptIntrinsicYuvToRGB;.setInput:(Landroid/renderscript/Allocation;)V` @kind virtual;
  #L22ede8.  v5:= v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.yuvToRgbIntrinsic` @type ^`android.renderscript.ScriptIntrinsicYuvToRGB` @kind object;
  #L22edec.  v0:= v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.out` @type ^`android.renderscript.Allocation` @kind object;
  #L22edf0.  call `forEach`(v5, v0) @signature `Landroid/renderscript/ScriptIntrinsicYuvToRGB;.forEach:(Landroid/renderscript/Allocation;)V` @kind virtual;
  #L22edf6.  v5:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L22edfa.  call temp:= `createBitmap`(v6, v7, v5) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L22ee00.  v5:= temp @kind object;
  #L22ee02.  v6:= v4.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.out` @type ^`android.renderscript.Allocation` @kind object;
  #L22ee06.  call `copyTo`(v6, v5) @signature `Landroid/renderscript/Allocation;.copyTo:(Landroid/graphics/Bitmap;)V` @kind virtual;
  #L22ee0c.  return v5 @kind object;
}
procedure `android.content.Context` `getApplicationContext`(`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1` v2 @kind this) @signature `Lcom/huawei/hms/ml/common/utils/NV21ToBitmapConverter1;.getApplicationContext:()Landroid/content/Context;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22ec74.  v0:= v2.`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1.applicationContext` @type ^`android.content.Context` @kind object;
  #L22ec78.  if v0 == 0 then goto L22ec7e;
  #L22ec7c.  return v0 @kind object;
  #L22ec7e.  v0:= new `java.lang.IllegalStateException`;
  #L22ec82.  v1:= "initial must be called first" @kind object;
  #L22ec86.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22ec8c.  throw v0;
}
procedure `android.graphics.Matrix` `getTransformationMatrix`(`com.huawei.hms.ml.common.utils.NV21ToBitmapConverter1` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `int` v10 , `int` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lcom/huawei/hms/ml/common/utils/NV21ToBitmapConverter1;.getTransformationMatrix:(IIIIIZZZ)Landroid/graphics/Matrix;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22ee20.  v0:= new `android.graphics.Matrix`;
  #L22ee24.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L22ee2a.  v1:= 0I;
  #L22ee2c.  v2:= 2.0F;
  #L22ee30.  v3:= 1I;
  #L22ee32.  if v11 == 0 then goto L22ee86;
  #L22ee36.  v4:= v11 %% 90;
  #L22ee3a.  if v4 != 0 then goto L22ee5a;
  #L22ee3e.  v4:= -v7 @kind int;
  #L22ee40.  v4:= (`float`) v4 @kind i2f;
  #L22ee42.  v4:= v4 / v2 @kind float;
  #L22ee44.  v5:= -v8 @kind int;
  #L22ee46.  v5:= (`float`) v5 @kind i2f;
  #L22ee48.  v5:= v5 / v2 @kind float;
  #L22ee4a.  call temp:= `postTranslate`(v0, v4, v5) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L22ee50.  v4:= (`float`) v11 @kind i2f;
  #L22ee52.  call temp:= `postRotate`(v0, v4) @signature `Landroid/graphics/Matrix;.postRotate:(F)Z` @kind virtual;
  #L22ee58.  goto L22ee86;
  #L22ee5a.  v7:= new `java.lang.IllegalArgumentException`;
  #L22ee5e.  v8:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L22ee62.  v9:= new `java.lang.Object`[v3];
  #L22ee66.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22ee6c.  v10:= temp @kind object;
  #L22ee6e.  v9[v1]:= v10 @kind object;
  #L22ee72.  v10:= "Rotation of %d" @kind object;
  #L22ee76.  call temp:= `format`(v8, v10, v9) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22ee7c.  v8:= temp @kind object;
  #L22ee7e.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22ee84.  throw v7;
  #L22ee86.  call temp:= `abs`(v11) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L22ee8c.  v4:= temp;
  #L22ee8e.  v4:= v4 + 90;
  #L22ee92.  v4:= v4 %% 180;
  #L22ee96.  if v4 != 0 then goto L22ee9c;
  #L22ee9a.  v1:= 1I;
  #L22ee9c.  if v1 == 0 then goto L22eea4;
  #L22eea0.  v4:= v8;
  #L22eea2.  goto L22eea6;
  #L22eea4.  v4:= v7;
  #L22eea6.  if v1 == 0 then goto L22eeac;
  #L22eeaa.  goto L22eeae;
  #L22eeac.  v7:= v8;
  #L22eeae.  v8:= -1I;
  #L22eeb0.  if v12 == 0 then goto L22eeb8;
  #L22eeb4.  v12:= -1I;
  #L22eeb6.  goto L22eeba;
  #L22eeb8.  v12:= 1I;
  #L22eeba.  if v13 == 0 then goto L22eec0;
  #L22eebe.  v3:= -1I;
  #L22eec0.  if v4 != v9 then goto L22eec8;
  #L22eec4.  if v7 == v10 then goto L22ef06;
  #L22eec8.  v8:= v12 * v9 @kind int;
  #L22eecc.  v8:= (`float`) v8 @kind i2f;
  #L22eece.  v13:= (`float`) v4 @kind i2f;
  #L22eed0.  v8:= v8 / v13 @kind float;
  #L22eed2.  v13:= v3 * v10 @kind int;
  #L22eed6.  v13:= (`float`) v13 @kind i2f;
  #L22eed8.  v7:= (`float`) v7 @kind i2f;
  #L22eeda.  v13:= v13 / v7 @kind float;
  #L22eedc.  if v14 == 0 then goto L22ef00;
  #L22eee0.  call temp:= `abs`(v8) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L22eee6.  v7:= temp;
  #L22eee8.  call temp:= `abs`(v13) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L22eeee.  v8:= temp;
  #L22eef0.  call temp:= `max`(v7, v8) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L22eef6.  v7:= temp;
  #L22eef8.  call temp:= `postScale`(v0, v7, v7) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L22eefe.  goto L22ef06;
  #L22ef00.  call temp:= `postScale`(v0, v8, v13) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L22ef06.  if v11 == 0 then goto L22ef22;
  #L22ef0a.  v7:= (`float`) v9 @kind i2f;
  #L22ef0c.  v7:= v7 / v2 @kind float;
  #L22ef0e.  v8:= (`float`) v10 @kind i2f;
  #L22ef10.  v8:= v8 / v2 @kind float;
  #L22ef12.  call temp:= `postTranslate`(v0, v7, v8) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L22ef18.  v9:= (`float`) v12 @kind i2f;
  #L22ef1a.  v10:= (`float`) v3 @kind i2f;
  #L22ef1c.  call temp:= `postScale`(v0, v9, v10, v7, v8) @signature `Landroid/graphics/Matrix;.postScale:(FFFF)Z` @kind virtual;
  #L22ef22.  return v0 @kind object;
}
