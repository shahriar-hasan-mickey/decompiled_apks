record `com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper` @kind class @AccessFlag  extends `java.lang.Throwable` @kind class {
  `java.lang.String` `com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper.message` @AccessFlag PRIVATE;
  `java.lang.Throwable` `com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper.ownerThrowable` @AccessFlag PRIVATE;
  `java.lang.Throwable` `com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper.thisCause` @AccessFlag PRIVATE;
}
global `long` `@@com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lcom/huawei/hms/ml/common/base/SmartLog$ThrowableWrapper;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L227d00.  call `<init>`(v0) @signature `Ljava/lang/Throwable;.<init>:()V` @kind direct;
  #L227d06.  v0.`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper.ownerThrowable` @type ^`java.lang.Throwable` := v1 @kind object;
  #L227d0a.  return @kind void;
}
procedure `java.lang.Throwable` `getCause`(`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper` v1 @kind this) @signature `Lcom/huawei/hms/ml/common/base/SmartLog$ThrowableWrapper;.getCause:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L227ce4.  v0:= v1.`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper.thisCause` @type ^`java.lang.Throwable` @kind object;
  #L227ce8.  if v0 != v1 then goto L227cee;
  #L227cec.  v0:= 0I;
  #L227cee.  return v0 @kind object;
}
procedure `java.lang.String` `getMessage`(`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper` v1 @kind this) @signature `Lcom/huawei/hms/ml/common/base/SmartLog$ThrowableWrapper;.getMessage:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L227c38.  v0:= v1.`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper.message` @type ^`java.lang.String` @kind object;
  #L227c3c.  return v0 @kind object;
}
procedure `void` `setCause`(`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lcom/huawei/hms/ml/common/base/SmartLog$ThrowableWrapper;.setCause:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L227d1c.  v0.`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper.thisCause` @type ^`java.lang.Throwable` := v1 @kind object;
  #L227d20.  return @kind void;
}
procedure `void` `setMessage`(`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/huawei/hms/ml/common/base/SmartLog$ThrowableWrapper;.setMessage:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L227d34.  v0.`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper.message` @type ^`java.lang.String` := v1 @kind object;
  #L227d38.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper` v2 @kind this) @signature `Lcom/huawei/hms/ml/common/base/SmartLog$ThrowableWrapper;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L227c50.  v0:= v2.`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper.ownerThrowable` @type ^`java.lang.Throwable` @kind object;
  #L227c54.  if v0 != 0 then goto L227c5e;
  #L227c58.  v0:= "" @kind object;
  #L227c5c.  return v0 @kind object;
  #L227c5e.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L227c64.  v0:= temp @kind object;
  #L227c66.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L227c6c.  v0:= temp @kind object;
  #L227c6e.  v1:= v2.`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper.message` @type ^`java.lang.String` @kind object;
  #L227c72.  if v1 == 0 then goto L227cd0;
  #L227c76.  v1:= new `java.lang.StringBuilder`;
  #L227c7a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L227c80.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L227c86.  v0:= ": " @kind object;
  #L227c8a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L227c90.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L227c96.  v0:= temp @kind object;
  #L227c98.  v1:= v2.`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper.message` @type ^`java.lang.String` @kind object;
  #L227c9c.  call temp:= `startsWith`(v1, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L227ca2.  v1:= temp;
  #L227ca4.  if v1 == 0 then goto L227cae;
  #L227ca8.  v0:= v2.`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper.message` @type ^`java.lang.String` @kind object;
  #L227cac.  goto L227cd0;
  #L227cae.  v1:= new `java.lang.StringBuilder`;
  #L227cb2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L227cb8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L227cbe.  v0:= v2.`com.huawei.hms.ml.common.base.SmartLog$ThrowableWrapper.message` @type ^`java.lang.String` @kind object;
  #L227cc2.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L227cc8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L227cce.  v0:= temp @kind object;
  #L227cd0.  return v0 @kind object;
}
