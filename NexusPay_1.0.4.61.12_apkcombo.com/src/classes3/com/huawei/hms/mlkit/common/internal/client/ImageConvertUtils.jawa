record `com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils.INDEX_PLANE_U` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils.INDEX_PLANE_V` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils.INDEX_PLANE_Y` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils` `@@com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils.INSTANCE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils.YUV_FORMAT_I420` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils.YUV_FORMAT_NV21` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L235ec4.  v0:= new `com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils`;
  #L235ec8.  call `<init>`(v0) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.<init>:()V` @kind direct;
  #L235ece.  `@@com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils.INSTANCE` @type ^`com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils` := v0 @kind object;
  #L235ed2.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils` v0 @kind this) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L235ee4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L235eea.  return @kind void;
}
procedure `byte`[] `argbToNv21`(`int`[] v17 @kind object, `int` v18 , `int` v19 ) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.argbToNv21:([III)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L2358c0.  v0:= v18;
  #L2358c4.  v1:= v19;
  #L2358c8.  v2:= v0 * v1 @kind int;
  #L2358cc.  v3:= v2 * 3;
  #L2358d0.  v3:= v3 / 2;
  #L2358d4.  v4:= new `byte`[v3];
  #L2358d8.  v5:= 0I;
  #L2358da.  v6:= 0I;
  #L2358dc.  v7:= 0I;
  #L2358de.  v8:= 0I;
  #L2358e0.  if v6 >= v1 then goto L2359e4;
  #L2358e4.  v9:= 0I;
  #L2358e6.  if v9 >= v0 then goto L2359dc;
  #L2358ea.  v10:= v17[v8];
  #L2358ee.  v11:= 16711680I;
  #L2358f2.  v10:= v10 ^& v11 @kind int;
  #L2358f4.  v10:= v10 ^> 16;
  #L2358f8.  v11:= v17[v8];
  #L2358fc.  v12:= 65280I;
  #L235902.  v11:= v11 ^& v12 @kind int;
  #L235904.  v11:= v11 ^> 8;
  #L235908.  v12:= v17[v8];
  #L23590c.  v13:= 255I;
  #L235910.  v12:= v12 ^& v13 @kind int;
  #L235912.  v14:= v10 * 66;
  #L235916.  v15:= v11 * 129;
  #L23591a.  v14:= v14 + v15 @kind int;
  #L23591c.  v15:= v12 * 25;
  #L235920.  v14:= v14 + v15 @kind int;
  #L235922.  v14:= v14 + 128;
  #L235926.  v14:= v14 ^> 8;
  #L23592a.  v14:= v14 + 16;
  #L23592e.  v15:= v10 * -38;
  #L235932.  v16:= v11 * 74;
  #L235936.  v15:= v15 - v16 @kind int;
  #L23593a.  v16:= v12 * 112;
  #L23593e.  v15:= v15 + v16 @kind int;
  #L235942.  v15:= v15 + 128;
  #L235946.  v15:= v15 ^> 8;
  #L23594a.  v15:= v15 + 128;
  #L23594e.  v10:= v10 * 112;
  #L235952.  v11:= v11 * 94;
  #L235956.  v10:= v10 - v11 @kind int;
  #L235958.  v12:= v12 * 18;
  #L23595c.  v10:= v10 - v12 @kind int;
  #L23595e.  v10:= v10 + 128;
  #L235962.  v10:= v10 ^> 8;
  #L235966.  v10:= v10 + 128;
  #L23596a.  v11:= v7 + 1;
  #L23596e.  if v14 >= 0 then goto L235976;
  #L235972.  v14:= 0I;
  #L235974.  goto L23597e;
  #L235976.  if v14 <= v13 then goto L23597e;
  #L23597a.  v14:= 255I;
  #L23597e.  v12:= (`byte`) v14 @kind i2b;
  #L235980.  v4[v7]:= v12 @kind byte;
  #L235984.  v7:= v6 %% 2;
  #L235988.  if v7 != 0 then goto L2359d0;
  #L23598c.  v7:= v8 %% 2;
  #L235990.  if v7 != 0 then goto L2359d0;
  #L235994.  v7:= v3 + -2;
  #L235998.  if v2 >= v7 then goto L2359d0;
  #L23599c.  v7:= v2 + 1;
  #L2359a0.  if v10 >= 0 then goto L2359a8;
  #L2359a4.  v10:= 0I;
  #L2359a6.  goto L2359b0;
  #L2359a8.  if v10 <= v13 then goto L2359b0;
  #L2359ac.  v10:= 255I;
  #L2359b0.  v10:= (`byte`) v10 @kind i2b;
  #L2359b2.  v4[v2]:= v10 @kind byte;
  #L2359b6.  v2:= v7 + 1;
  #L2359ba.  if v15 >= 0 then goto L2359c2;
  #L2359be.  v13:= 0I;
  #L2359c0.  goto L2359ca;
  #L2359c2.  if v15 <= v13 then goto L2359c8;
  #L2359c6.  goto L2359ca;
  #L2359c8.  v13:= v15;
  #L2359ca.  v10:= (`byte`) v13 @kind i2b;
  #L2359cc.  v4[v7]:= v10 @kind byte;
  #L2359d0.  v8:= v8 + 1;
  #L2359d4.  v9:= v9 + 1;
  #L2359d8.  v7:= v11;
  #L2359da.  goto L2358e6;
  #L2359dc.  v6:= v6 + 1;
  #L2359e0.  goto L2358e0;
  #L2359e4.  return v4 @kind object;
}
procedure `byte`[] `bitmap2Jpeg`(`android.graphics.Bitmap` v2 @kind object, `int` v3 ) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.bitmap2Jpeg:(Landroid/graphics/Bitmap;I)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2359f8.  v0:= new `java.io.ByteArrayOutputStream`;
  #L2359fc.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L235a02.  v1:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L235a06.  call temp:= `compress`(v2, v1, v3, v0) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L235a0c.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L235a12.  v2:= temp @kind object;
  #L235a14.  call `close`(v0) @signature `Ljava/io/ByteArrayOutputStream;.close:()V` @kind virtual;
  #L235a1a.  return v2 @kind object;
  #L235a1c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L235a1e.  throw v2;
  #L235a20.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L235a22.  call `close`(v0) @signature `Ljava/io/ByteArrayOutputStream;.close:()V` @kind virtual;
  #L235a28.  goto L235a32;
  #L235a2a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L235a2c.  call `addSuppressed`(v2, v0) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L235a32.  throw v3;
  #L235a34.  v2:= 0I;
  #L235a36.  v2:= new `byte`[v2];
  #L235a3a.  return v2 @kind object;
  catch `java.io.IOException` @[L2359f8..L235a02] goto L235a34;
  catch `java.lang.Throwable` @[L235a02..L235a14] goto L235a1c;
  catch `java.io.IOException` @[L235a14..L235a1a] goto L235a34;
  catch `java.lang.Throwable` @[L235a1e..L235a20] goto L235a20;
  catch `java.lang.Throwable` @[L235a22..L235a28] goto L235a2a;
  catch `java.io.IOException` @[L235a2c..L235a34] goto L235a34;
}
procedure `byte`[] `bitmapToNv21`(`android.graphics.Bitmap` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.bitmapToNv21:(Landroid/graphics/Bitmap;II)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L235a88.  if v9 == 0 then goto L235acc;
  #L235a8c.  call temp:= `getWidth`(v9) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L235a92.  v0:= temp;
  #L235a94.  if v0 < v10 then goto L235acc;
  #L235a98.  call temp:= `getHeight`(v9) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L235a9e.  v0:= temp;
  #L235aa0.  if v0 < v11 then goto L235acc;
  #L235aa4.  v0:= v10 * v11 @kind int;
  #L235aa8.  v0:= new `int`[v0];
  #L235aac.  v3:= 0I;
  #L235aae.  v5:= 0I;
  #L235ab0.  v6:= 0I;
  #L235ab2.  v1:= v9 @kind object;
  #L235ab4.  v2:= v0 @kind object;
  #L235ab6.  v4:= v10;
  #L235ab8.  v7:= v10;
  #L235aba.  v8:= v11;
  #L235abc.  call `getPixels`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Bitmap;.getPixels:([IIIIIII)V` @kind virtual;
  #L235ac2.  call temp:= `argbToNv21`(v0, v10, v11) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.argbToNv21:([III)[B` @kind static;
  #L235ac8.  v9:= temp @kind object;
  #L235aca.  return v9 @kind object;
  #L235acc.  v9:= 0I;
  #L235ace.  v9:= new `byte`[v9];
  #L235ad2.  return v9 @kind object;
}
procedure `byte`[] `buffer2Byte`(`java.nio.ByteBuffer` v3 @kind object) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.buffer2Byte:(Ljava/nio/ByteBuffer;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L235ae4.  call temp:= `rewind`(v3) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L235aea.  call temp:= `limit`(v3) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L235af0.  v0:= temp;
  #L235af2.  v1:= new `byte`[v0];
  #L235af6.  v2:= 0I;
  #L235af8.  call temp:= `get`(v3, v1, v2, v0) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L235afe.  return v1 @kind object;
}
procedure `byte`[] `byteToNv21`(`byte`[] v8 @kind object) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.byteToNv21:([B)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L235b10.  v0:= length @variable v8;
  #L235b12.  v1:= v0 * 2;
  #L235b16.  v1:= v1 / 3;
  #L235b1a.  v2:= v0 - v1 @kind int;
  #L235b1e.  v3:= v0 / 6;
  #L235b22.  v0:= new `byte`[v0];
  #L235b26.  v4:= 0I;
  #L235b28.  call `arraycopy`(v8, v4, v0, v4, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L235b2e.  if v4 >= v2 then goto L235b6a;
  #L235b32.  v5:= v4 %% 2;
  #L235b36.  if v5 != 0 then goto L235b4e;
  #L235b3a.  v5:= v1 + v4 @kind int;
  #L235b3e.  v6:= v4 / 2;
  #L235b42.  v6:= v6 + v1 @kind int;
  #L235b44.  v6:= v8[v6] @kind byte;
  #L235b48.  v0[v5]:= v6 @kind byte;
  #L235b4c.  goto L235b64;
  #L235b4e.  v5:= v1 + v4 @kind int;
  #L235b52.  v6:= v1 + v3 @kind int;
  #L235b56.  v7:= v4 / 2;
  #L235b5a.  v6:= v6 + v7 @kind int;
  #L235b5c.  v6:= v8[v6] @kind byte;
  #L235b60.  v0[v5]:= v6 @kind byte;
  #L235b64.  v4:= v4 + 1;
  #L235b68.  goto L235b2e;
  #L235b6a.  return v0 @kind object;
}
procedure `void` `checkFormat`(`android.media.Image` v2 @kind object, `int` v3 ) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.checkFormat:(Landroid/media/Image;I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L235efc.  v0:= 1I;
  #L235efe.  if v3 == v0 then goto L235f1a;
  #L235f02.  v0:= 2I;
  #L235f04.  if v3 != v0 then goto L235f0a;
  #L235f08.  goto L235f1a;
  #L235f0a.  v2:= new `java.lang.IllegalArgumentException`;
  #L235f0e.  v3:= "only support YUV_FORMAT_I420 and YUV_FORMAT_NV21" @kind object;
  #L235f12.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L235f18.  throw v2;
  #L235f1a.  call temp:= `isImageFormatSupported`(v2) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.isImageFormatSupported:(Landroid/media/Image;)Z` @kind static;
  #L235f20.  v3:= temp;
  #L235f22.  if v3 == 0 then goto L235f28;
  #L235f26.  return @kind void;
  #L235f28.  v3:= new `java.lang.RuntimeException`;
  #L235f2c.  v0:= new `java.lang.StringBuilder`;
  #L235f30.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L235f36.  v1:= "can't convert Image to byte array, format " @kind object;
  #L235f3a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L235f40.  call temp:= `getFormat`(v2) @signature `Landroid/media/Image;.getFormat:()I` @kind virtual;
  #L235f46.  v2:= temp;
  #L235f48.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L235f4e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L235f54.  v2:= temp @kind object;
  #L235f56.  call `<init>`(v3, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L235f5c.  throw v3;
}
procedure `int` `getChannelOffset`(`int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.getChannelOffset:(III)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L235e64.  if v2 == 0 then goto L235e8c;
  #L235e68.  v0:= 1I;
  #L235e6a.  if v2 == v0 then goto L235e80;
  #L235e6e.  if v3 != v0 then goto L235e8e;
  #L235e72.  v2:= (`double`) v4 @kind i2d;
  #L235e74.  v0:= 1.25D;
  #L235e78.  v2:= v2 * v0 @kind double;
  #L235e7c.  v4:= (`int`) v2 @kind d2i;
  #L235e7e.  goto L235e8e;
  #L235e80.  if v3 != v0 then goto L235e86;
  #L235e84.  goto L235e8e;
  #L235e86.  v4:= v4 + 1;
  #L235e8a.  goto L235e8e;
  #L235e8c.  v4:= 0I;
  #L235e8e.  return v4;
}
procedure `byte`[] `getDataFromImage`(`android.media.Image` v20 @kind object, `int` v21 ) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.getDataFromImage:(Landroid/media/Image;I)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L235b7c.  v0:= v21;
  #L235b80.  call `checkFormat`(v20, v21) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.checkFormat:(Landroid/media/Image;I)V` @kind static;
  #L235b86.  call temp:= `getCropRect`(v20) @signature `Landroid/media/Image;.getCropRect:()Landroid/graphics/Rect;` @kind virtual;
  #L235b8c.  v1:= temp @kind object;
  #L235b8e.  call temp:= `getFormat`(v20) @signature `Landroid/media/Image;.getFormat:()I` @kind virtual;
  #L235b94.  v2:= temp;
  #L235b96.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L235b9c.  v3:= temp;
  #L235b9e.  call temp:= `height`(v1) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L235ba4.  v4:= temp;
  #L235ba6.  call temp:= `getPlanes`(v20) @signature `Landroid/media/Image;.getPlanes:()[Landroid/media/Image$Plane;` @kind virtual;
  #L235bac.  v5:= temp @kind object;
  #L235bae.  v6:= v3 * v4 @kind int;
  #L235bb2.  call temp:= `getBitsPerPixel`(v2) @signature `Landroid/graphics/ImageFormat;.getBitsPerPixel:(I)I` @kind static;
  #L235bb8.  v2:= temp;
  #L235bba.  v2:= v2 * v6 @kind int;
  #L235bbe.  v2:= v2 / 8;
  #L235bc2.  v2:= new `byte`[v2];
  #L235bc6.  v7:= 0I;
  #L235bc8.  v8:= v5[v7] @kind object;
  #L235bcc.  call temp:= `getRowStride`(v8) @signature `Landroid/media/Image$Plane;.getRowStride:()I` @kind virtual;
  #L235bd2.  v8:= temp;
  #L235bd4.  v8:= new `byte`[v8];
  #L235bd8.  v9:= 0I;
  #L235bda.  v10:= length @variable v5;
  #L235bdc.  if v9 >= v10 then goto L235cd8;
  #L235be0.  v10:= v5[v9] @kind object;
  #L235be4.  call temp:= `getBuffer`(v10) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L235bea.  v10:= temp @kind object;
  #L235bec.  v11:= v5[v9] @kind object;
  #L235bf0.  call temp:= `getRowStride`(v11) @signature `Landroid/media/Image$Plane;.getRowStride:()I` @kind virtual;
  #L235bf6.  v11:= temp;
  #L235bf8.  v12:= v5[v9] @kind object;
  #L235bfc.  call temp:= `getPixelStride`(v12) @signature `Landroid/media/Image$Plane;.getPixelStride:()I` @kind virtual;
  #L235c02.  v12:= temp;
  #L235c04.  call temp:= `getChannelOffset`(v9, v0, v6) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.getChannelOffset:(III)I` @kind static;
  #L235c0a.  v13:= temp;
  #L235c0c.  call temp:= `getOutputStride`(v9, v0) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.getOutputStride:(II)I` @kind static;
  #L235c12.  v14:= temp;
  #L235c14.  if v9 != 0 then goto L235c1e;
  #L235c18.  v16:= 0I;
  #L235c1c.  goto L235c22;
  #L235c1e.  v16:= 1I;
  #L235c22.  v7:= v3 ^> v16 @kind int;
  #L235c26.  v15:= v4 ^> v16 @kind int;
  #L235c2a.  v0:= v1.`android.graphics.Rect.top` @type ^`int`;
  #L235c2e.  v0:= v0 ^> v16 @kind int;
  #L235c32.  v0:= v0 * v11 @kind int;
  #L235c36.  v18:= v3;
  #L235c3a.  v3:= v1.`android.graphics.Rect.left` @type ^`int`;
  #L235c3e.  v3:= v3 ^> v16 @kind int;
  #L235c42.  v3:= v3 * v12 @kind int;
  #L235c46.  v0:= v0 + v3 @kind int;
  #L235c48.  call temp:= `position`(v10, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L235c4e.  v0:= 0I;
  #L235c50.  if v0 >= v15 then goto L235cc4;
  #L235c54.  v3:= 1I;
  #L235c56.  if v12 != v3 then goto L235c70;
  #L235c5a.  if v14 == v3 then goto L235c60;
  #L235c5e.  goto L235c70;
  #L235c60.  call temp:= `get`(v10, v2, v13, v7) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L235c66.  v13:= v13 + v7 @kind int;
  #L235c68.  v17:= v1 @kind object;
  #L235c6c.  v1:= v7;
  #L235c6e.  goto L235ca0;
  #L235c70.  v16:= v7 + -1;
  #L235c74.  v16:= v16 * v12 @kind int;
  #L235c78.  v17:= v1 @kind object;
  #L235c7c.  v1:= v16 + 1;
  #L235c80.  v3:= 0I;
  #L235c82.  call temp:= `get`(v10, v8, v3, v1) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L235c88.  if v3 >= v7 then goto L235ca0;
  #L235c8c.  v19:= v3 * v12 @kind int;
  #L235c90.  v19:= v8[v19] @kind byte;
  #L235c94.  v2[v13]:= v19 @kind byte;
  #L235c98.  v13:= v13 + v14 @kind int;
  #L235c9a.  v3:= v3 + 1;
  #L235c9e.  goto L235c88;
  #L235ca0.  v3:= v15 + -1;
  #L235ca4.  if v0 >= v3 then goto L235cba;
  #L235ca8.  call temp:= `position`(v10) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L235cae.  v3:= temp;
  #L235cb0.  v3:= v3 + v11 @kind int;
  #L235cb2.  v3:= v3 - v1 @kind int;
  #L235cb4.  call temp:= `position`(v10, v3) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L235cba.  v0:= v0 + 1;
  #L235cbe.  v1:= v17 @kind object;
  #L235cc2.  goto L235c50;
  #L235cc4.  v17:= v1 @kind object;
  #L235cc8.  v9:= v9 + 1;
  #L235ccc.  v0:= v21;
  #L235cd0.  v3:= v18;
  #L235cd4.  v7:= 0I;
  #L235cd6.  goto L235bda;
  #L235cd8.  return v2 @kind object;
}
procedure `com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils` `getInstance`() @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.getInstance:()Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L235e4c.  v0:= `@@com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils.INSTANCE` @type ^`com.huawei.hms.mlkit.common.internal.client.ImageConvertUtils` @kind object;
  #L235e50.  return v0 @kind object;
}
procedure `int` `getOutputStride`(`int` v1 , `int` v2 ) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.getOutputStride:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L235ea0.  v0:= 1I;
  #L235ea2.  if v1 != 0 then goto L235ea8;
  #L235ea6.  goto L235eb2;
  #L235ea8.  if v2 != v0 then goto L235eae;
  #L235eac.  goto L235eb2;
  #L235eae.  v1:= 2I;
  #L235eb0.  v0:= 2I;
  #L235eb2.  return v0;
}
procedure `boolean` `isImageFormatSupported`(`android.media.Image` v1 @kind object) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.isImageFormatSupported:(Landroid/media/Image;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L235884.  call temp:= `getFormat`(v1) @signature `Landroid/media/Image;.getFormat:()I` @kind virtual;
  #L23588a.  v1:= temp;
  #L23588c.  v0:= 35I;
  #L235890.  if v1 == v0 then goto L2358ac;
  #L235894.  v0:= 17I;
  #L235898.  if v1 == v0 then goto L2358ac;
  #L23589c.  v0:= 842094169I;
  #L2358a2.  if v1 != v0 then goto L2358a8;
  #L2358a6.  goto L2358ac;
  #L2358a8.  v1:= 0I;
  #L2358aa.  goto L2358ae;
  #L2358ac.  v1:= 1I;
  #L2358ae.  return v1;
}
procedure `byte`[] `nv21ToGray`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.nv21ToGray:([BII)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L235cec.  v3:= v3 * v4 @kind int;
  #L235cf0.  v4:= v3 / 2;
  #L235cf4.  v0:= new `byte`[v4];
  #L235cf8.  v1:= -128I;
  #L235cfc.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L235d02.  v1:= 0I;
  #L235d04.  call `arraycopy`(v0, v1, v2, v3, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L235d0a.  return v2 @kind object;
}
procedure `byte`[] `nv21ToJpeg`(`byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.nv21ToJpeg:([BII)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L235d1c.  v0:= 0I;
  #L235d1e.  v1:= new `java.io.ByteArrayOutputStream`;
  #L235d22.  call `<init>`(v1) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L235d28.  v8:= new `android.graphics.YuvImage`;
  #L235d2c.  v4:= 17I;
  #L235d30.  v7:= 0I;
  #L235d32.  v2:= v8 @kind object;
  #L235d34.  v3:= v9 @kind object;
  #L235d36.  v5:= v10;
  #L235d38.  v6:= v11;
  #L235d3a.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/YuvImage;.<init>:([BIII[I)V` @kind direct;
  #L235d40.  v9:= new `android.graphics.Rect`;
  #L235d44.  call `<init>`(v9, v0, v0, v10, v11) @signature `Landroid/graphics/Rect;.<init>:(IIII)V` @kind direct;
  #L235d4a.  v10:= 100I;
  #L235d4e.  call temp:= `compressToJpeg`(v8, v9, v10, v1) @signature `Landroid/graphics/YuvImage;.compressToJpeg:(Landroid/graphics/Rect;ILjava/io/OutputStream;)Z` @kind virtual;
  #L235d54.  call temp:= `toByteArray`(v1) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L235d5a.  v9:= temp @kind object;
  #L235d5c.  call `close`(v1) @signature `Ljava/io/ByteArrayOutputStream;.close:()V` @kind virtual;
  #L235d62.  return v9 @kind object;
  #L235d64.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L235d66.  throw v9;
  #L235d68.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L235d6a.  call `close`(v1) @signature `Ljava/io/ByteArrayOutputStream;.close:()V` @kind virtual;
  #L235d70.  goto L235d7a;
  #L235d72.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L235d74.  call `addSuppressed`(v9, v11) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L235d7a.  throw v10;
  #L235d7c.  v9:= new `byte`[v0];
  #L235d80.  return v9 @kind object;
  catch `java.io.IOException` @[L235d1e..L235d28] goto L235d7c;
  catch `java.lang.Throwable` @[L235d28..L235d5c] goto L235d64;
  catch `java.io.IOException` @[L235d5c..L235d62] goto L235d7c;
  catch `java.lang.Throwable` @[L235d66..L235d68] goto L235d68;
  catch `java.lang.Throwable` @[L235d6a..L235d70] goto L235d72;
  catch `java.io.IOException` @[L235d74..L235d7c] goto L235d7c;
}
procedure `byte`[] `yuv2Buffer`(`android.media.Image` v8 @kind object) @signature `Lcom/huawei/hms/mlkit/common/internal/client/ImageConvertUtils;.yuv2Buffer:(Landroid/media/Image;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L235dd0.  call temp:= `getPlanes`(v8) @signature `Landroid/media/Image;.getPlanes:()[Landroid/media/Image$Plane;` @kind virtual;
  #L235dd6.  v8:= temp @kind object;
  #L235dd8.  v0:= 0I;
  #L235dda.  v1:= v8[v0] @kind object;
  #L235dde.  call temp:= `getBuffer`(v1) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L235de4.  v1:= temp @kind object;
  #L235de6.  v2:= 1I;
  #L235de8.  v2:= v8[v2] @kind object;
  #L235dec.  call temp:= `getBuffer`(v2) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L235df2.  v2:= temp @kind object;
  #L235df4.  v3:= 2I;
  #L235df6.  v8:= v8[v3] @kind object;
  #L235dfa.  call temp:= `getBuffer`(v8) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L235e00.  v8:= temp @kind object;
  #L235e02.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L235e08.  v3:= temp;
  #L235e0a.  call temp:= `remaining`(v2) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L235e10.  v4:= temp;
  #L235e12.  call temp:= `remaining`(v8) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L235e18.  v5:= temp;
  #L235e1a.  v6:= v3 + v4 @kind int;
  #L235e1e.  v6:= v6 + v5 @kind int;
  #L235e20.  v7:= new `byte`[v6];
  #L235e24.  call temp:= `get`(v1, v7, v0, v3) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L235e2a.  call temp:= `get`(v8, v7, v3, v5) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L235e30.  v6:= v6 - v4 @kind int;
  #L235e32.  call temp:= `get`(v2, v7, v6, v4) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L235e38.  return v7 @kind object;
}
