record `com.huawei.hms.utils.HEX` @kind class @AccessFlag PUBLIC_FINAL {
}
global `char`[] `@@com.huawei.hms.utils.HEX.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `char`[] `@@com.huawei.hms.utils.HEX.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/utils/HEX;.<clinit>:()V` @AccessFlag PUBLIC_STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2cb530.  v0:= 16I;
  #L2cb534.  v1:= new `char`[v0];
  #L2cb538.  goto L2cb554;
  #L2cb53e.  `@@com.huawei.hms.utils.HEX.a` @type ^`char`[] := v1 @kind object;
  #L2cb542.  v0:= new `char`[v0];
  #L2cb546.  goto L2cb57c;
  #L2cb54c.  `@@com.huawei.hms.utils.HEX.b` @type ^`char`[] := v0 @kind object;
  #L2cb550.  return @kind void;
  #L2cb552.  
  #L2cb554.  v1:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 97I, 98I, 99I, 100I, 101I, 102I) @kind object;
  #L2cb57b.  goto L2cb53e;
  #L2cb57c.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L2cb5a3.  goto L2cb54c;
}
procedure `void` `<init>`(`com.huawei.hms.utils.HEX` v0 @kind this) @signature `Lcom/huawei/hms/utils/HEX;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cb5b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cb5ba.  return @kind void;
}
procedure `char`[] `a`(`byte`[] v6 @kind object, `char`[] v7 @kind object) @signature `Lcom/huawei/hms/utils/HEX;.a:([B[C)[C` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2cb470.  v0:= length @variable v6;
  #L2cb472.  v1:= v0 ^< 1;
  #L2cb476.  v1:= new `char`[v1];
  #L2cb47a.  v2:= 0I;
  #L2cb47c.  v3:= 0I;
  #L2cb47e.  if v2 >= v0 then goto L2cb4b4;
  #L2cb482.  v4:= v3 + 1;
  #L2cb486.  v5:= v6[v2] @kind byte;
  #L2cb48a.  v5:= v5 ^& 240;
  #L2cb48e.  v5:= v5 ^>> 4;
  #L2cb492.  v5:= v7[v5] @kind char;
  #L2cb496.  v1[v3]:= v5 @kind char;
  #L2cb49a.  v3:= v4 + 1;
  #L2cb49e.  v5:= v6[v2] @kind byte;
  #L2cb4a2.  v5:= v5 ^& 15;
  #L2cb4a6.  v5:= v7[v5] @kind char;
  #L2cb4aa.  v1[v4]:= v5 @kind char;
  #L2cb4ae.  v2:= v2 + 1;
  #L2cb4b2.  goto L2cb47e;
  #L2cb4b4.  return v1 @kind object;
}
procedure `char`[] `encodeHex`(`byte`[] v1 @kind object) @signature `Lcom/huawei/hms/utils/HEX;.encodeHex:([B)[C` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2cb4c8.  v0:= 0I;
  #L2cb4ca.  call temp:= `encodeHex`(v1, v0) @signature `Lcom/huawei/hms/utils/HEX;.encodeHex:([BZ)[C` @kind static;
  #L2cb4d0.  v1:= temp @kind object;
  #L2cb4d2.  return v1 @kind object;
}
procedure `char`[] `encodeHex`(`byte`[] v0 @kind object, `boolean` v1 ) @signature `Lcom/huawei/hms/utils/HEX;.encodeHex:([BZ)[C` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2cb4e4.  if v1 == 0 then goto L2cb4ee;
  #L2cb4e8.  v1:= `@@com.huawei.hms.utils.HEX.b` @type ^`char`[] @kind object;
  #L2cb4ec.  goto L2cb4f2;
  #L2cb4ee.  v1:= `@@com.huawei.hms.utils.HEX.a` @type ^`char`[] @kind object;
  #L2cb4f2.  call temp:= `a`(v0, v1) @signature `Lcom/huawei/hms/utils/HEX;.a:([B[C)[C` @kind static;
  #L2cb4f8.  v0:= temp @kind object;
  #L2cb4fa.  return v0 @kind object;
}
procedure `java.lang.String` `encodeHexString`(`byte`[] v1 @kind object, `boolean` v2 ) @signature `Lcom/huawei/hms/utils/HEX;.encodeHexString:([BZ)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2cb50c.  v0:= new `java.lang.String`;
  #L2cb510.  call temp:= `encodeHex`(v1, v2) @signature `Lcom/huawei/hms/utils/HEX;.encodeHex:([BZ)[C` @kind static;
  #L2cb516.  v1:= temp @kind object;
  #L2cb518.  call `<init>`(v0, v1) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L2cb51e.  return v0 @kind object;
}
