record `com.huawei.hms.feature.dynamic.ObjectWrapper` @kind class @AccessFlag PUBLIC extends `com.huawei.hms.feature.dynamic.IObjectWrapper$Stub` @kind class {
  `java.lang.Object` `com.huawei.hms.feature.dynamic.ObjectWrapper.b` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.feature.dynamic.ObjectWrapper` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/huawei/hms/feature/dynamic/ObjectWrapper;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L205cf8.  call `<init>`(v0) @signature `Lcom/huawei/hms/feature/dynamic/IObjectWrapper$Stub;.<init>:()V` @kind direct;
  #L205cfe.  v0.`com.huawei.hms.feature.dynamic.ObjectWrapper.b` @type ^`java.lang.Object` := v1 @kind object;
  #L205d02.  return @kind void;
}
procedure `java.lang.Object` `unwrap`(`com.huawei.hms.feature.dynamic.IObjectWrapper` v6 @kind object) @signature `Lcom/huawei/hms/feature/dynamic/ObjectWrapper;.unwrap:(Lcom/huawei/hms/feature/dynamic/IObjectWrapper;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L205c00.  v0:= instanceof @variable v6 @type ^`com.huawei.hms.feature.dynamic.ObjectWrapper` @kind boolean;
  #L205c04.  if v0 == 0 then goto L205c12;
  #L205c08.  v6:= (`com.huawei.hms.feature.dynamic.ObjectWrapper`) v6 @kind object;
  #L205c0c.  v6:= v6.`com.huawei.hms.feature.dynamic.ObjectWrapper.b` @type ^`java.lang.Object` @kind object;
  #L205c10.  return v6 @kind object;
  #L205c12.  call temp:= `asBinder`(v6) @signature `Landroid/os/IInterface;.asBinder:()Landroid/os/IBinder;` @kind interface;
  #L205c18.  v6:= temp @kind object;
  #L205c1a.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L205c20.  v0:= temp @kind object;
  #L205c22.  call temp:= `getDeclaredFields`(v0) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L205c28.  v0:= temp @kind object;
  #L205c2a.  v1:= length @variable v0;
  #L205c2c.  v2:= 0I;
  #L205c2e.  v3:= 0I;
  #L205c30.  v4:= 0I;
  #L205c32.  if v3 >= v1 then goto L205c50;
  #L205c36.  v5:= v0[v3] @kind object;
  #L205c3a.  call temp:= `isSynthetic`(v5) @signature `Ljava/lang/reflect/Field;.isSynthetic:()Z` @kind virtual;
  #L205c40.  v5:= temp;
  #L205c42.  if v5 != 0 then goto L205c4a;
  #L205c46.  v4:= v4 + 1;
  #L205c4a.  v3:= v3 + 1;
  #L205c4e.  goto L205c32;
  #L205c50.  v1:= 1I;
  #L205c52.  if v4 != v1 then goto L205c9e;
  #L205c56.  v3:= v0[v2] @kind object;
  #L205c5a.  call temp:= `isAccessible`(v3) @signature `Ljava/lang/reflect/Field;.isAccessible:()Z` @kind virtual;
  #L205c60.  v3:= temp;
  #L205c62.  if v3 != 0 then goto L205c8e;
  #L205c66.  v3:= v0[v2] @kind object;
  #L205c6a.  call `setAccessible`(v3, v1) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L205c70.  v0:= v0[v2] @kind object;
  #L205c74.  call temp:= `get`(v0, v6) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L205c7a.  v6:= temp @kind object;
  #L205c7c.  return v6 @kind object;
  #L205c7e.  v6:= new `java.lang.IllegalArgumentException`;
  #L205c82.  v0:= "Get binder failed: null or not permitted." @kind object;
  #L205c86.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L205c8c.  throw v6;
  #L205c8e.  v6:= new `java.lang.IllegalArgumentException`;
  #L205c92.  v0:= "The field is accessible." @kind object;
  #L205c96.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L205c9c.  throw v6;
  #L205c9e.  v6:= new `java.lang.IllegalArgumentException`;
  #L205ca2.  v1:= new `java.lang.StringBuilder`;
  #L205ca6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L205cac.  v2:= "Got " @kind object;
  #L205cb0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L205cb6.  v0:= length @variable v0;
  #L205cb8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L205cbe.  v0:= " fields, The number of field number should be 1." @kind object;
  #L205cc2.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L205cc8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L205cce.  v0:= temp @kind object;
  #L205cd0.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L205cd6.  throw v6;
  catch `java.lang.Exception` @[L205c70..L205c7c] goto L205c7e;
}
procedure `com.huawei.hms.feature.dynamic.IObjectWrapper` `wrap`(`java.lang.Object` v1 @kind object) @signature `Lcom/huawei/hms/feature/dynamic/ObjectWrapper;.wrap:(Ljava/lang/Object;)Lcom/huawei/hms/feature/dynamic/IObjectWrapper;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L205be4.  v0:= new `com.huawei.hms.feature.dynamic.ObjectWrapper`;
  #L205be8.  call `<init>`(v0, v1) @signature `Lcom/huawei/hms/feature/dynamic/ObjectWrapper;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L205bee.  return v0 @kind object;
}
