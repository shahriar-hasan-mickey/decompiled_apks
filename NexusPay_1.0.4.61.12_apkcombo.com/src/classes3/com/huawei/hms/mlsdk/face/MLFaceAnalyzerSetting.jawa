record `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` @kind class @AccessFlag PUBLIC {
  `int` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.featureType` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isMaxSizeFaceOnly` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isPoseDisabled` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isTracingAllowed` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.keyPointType` @AccessFlag PRIVATE_FINAL;
  `float` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.minFaceProportion` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.performanceType` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.shapeType` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.tracingMode` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.MODE_TRACING_FAST` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.MODE_TRACING_ROBUST` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_FEATURES` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_FEATURE_AGE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_FEATURE_BEARD` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_FEATURE_EMOTION` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_FEATURE_EYEGLASS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_FEATURE_GENDAR` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_FEATURE_HAT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_FEATURE_OPENCLOSEEYE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_KEYPOINTS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_PRECISION` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_SHAPES` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_SPEED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_UNSUPPORT_FEATURES` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_UNSUPPORT_KEYPOINTS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.TYPE_UNSUPPORT_SHAPES` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` v10 @kind this, `int` v11 , `int` v12 , `int` v13 , `int` v14 , `boolean` v15 , `boolean` v16 , `float` v17 ) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.<init>:(IIIIZZF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L24108c.  v5:= 0I;
  #L24108e.  v7:= 2I;
  #L241090.  v0:= v10 @kind object;
  #L241092.  v1:= v11;
  #L241094.  v2:= v12;
  #L241096.  v3:= v13;
  #L241098.  v4:= v14;
  #L24109a.  v6:= v15;
  #L24109c.  v8:= v16;
  #L2410a0.  v9:= v17;
  #L2410a4.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.<init>:(IIIIZZIZF)V` @kind direct;
  #L2410aa.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `boolean` v5 , `boolean` v6 , `int` v7 , `boolean` v8 , `float` v9 ) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.<init>:(IIIIZZIZF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2410bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2410c2.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.keyPointType` @type ^`int` := v1;
  #L2410c6.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.shapeType` @type ^`int` := v2;
  #L2410ca.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.featureType` @type ^`int` := v3;
  #L2410ce.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.performanceType` @type ^`int` := v4;
  #L2410d2.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isPoseDisabled` @type ^`boolean` := v5 @kind boolean;
  #L2410d6.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isTracingAllowed` @type ^`boolean` := v6 @kind boolean;
  #L2410da.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.tracingMode` @type ^`int` := v7;
  #L2410de.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isMaxSizeFaceOnly` @type ^`boolean` := v8 @kind boolean;
  #L2410e2.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.minFaceProportion` @type ^`float` := v9;
  #L2410e6.  return @kind void;
}
procedure `boolean` `equals`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L240d3c.  v0:= 1I;
  #L240d3e.  if v5 != v4 then goto L240d44;
  #L240d42.  return v0;
  #L240d44.  v1:= instanceof @variable v5 @type ^`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` @kind boolean;
  #L240d48.  v2:= 0I;
  #L240d4a.  if v1 != 0 then goto L240d50;
  #L240d4e.  return v2;
  #L240d50.  v5:= (`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting`) v5 @kind object;
  #L240d54.  v1:= v4.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.minFaceProportion` @type ^`float`;
  #L240d58.  call temp:= `floatToIntBits`(v1) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L240d5e.  v1:= temp;
  #L240d60.  v3:= v5.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.minFaceProportion` @type ^`float`;
  #L240d64.  call temp:= `floatToIntBits`(v3) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L240d6a.  v3:= temp;
  #L240d6c.  if v1 != v3 then goto L240dd2;
  #L240d70.  v1:= v4.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.keyPointType` @type ^`int`;
  #L240d74.  v3:= v5.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.keyPointType` @type ^`int`;
  #L240d78.  if v1 != v3 then goto L240dd2;
  #L240d7c.  v1:= v4.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.shapeType` @type ^`int`;
  #L240d80.  v3:= v5.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.shapeType` @type ^`int`;
  #L240d84.  if v1 != v3 then goto L240dd2;
  #L240d88.  v1:= v4.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.featureType` @type ^`int`;
  #L240d8c.  v3:= v5.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.featureType` @type ^`int`;
  #L240d90.  if v1 != v3 then goto L240dd2;
  #L240d94.  v1:= v4.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isPoseDisabled` @type ^`boolean` @kind boolean;
  #L240d98.  v3:= v5.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isPoseDisabled` @type ^`boolean` @kind boolean;
  #L240d9c.  if v1 != v3 then goto L240dd2;
  #L240da0.  v1:= v4.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isTracingAllowed` @type ^`boolean` @kind boolean;
  #L240da4.  v3:= v5.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isTracingAllowed` @type ^`boolean` @kind boolean;
  #L240da8.  if v1 != v3 then goto L240dd2;
  #L240dac.  v1:= v4.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.tracingMode` @type ^`int`;
  #L240db0.  v3:= v5.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.tracingMode` @type ^`int`;
  #L240db4.  if v1 != v3 then goto L240dd2;
  #L240db8.  v1:= v4.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.performanceType` @type ^`int`;
  #L240dbc.  v3:= v5.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.performanceType` @type ^`int`;
  #L240dc0.  if v1 != v3 then goto L240dd2;
  #L240dc4.  v1:= v4.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isMaxSizeFaceOnly` @type ^`boolean` @kind boolean;
  #L240dc8.  v5:= v5.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isMaxSizeFaceOnly` @type ^`boolean` @kind boolean;
  #L240dcc.  if v1 != v5 then goto L240dd2;
  #L240dd0.  goto L240dd4;
  #L240dd2.  v0:= 0I;
  #L240dd4.  return v0;
}
procedure `int` `getFeatureType`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.getFeatureType:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L240e48.  v0:= v1.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.featureType` @type ^`int`;
  #L240e4c.  return v0;
}
procedure `int` `getKeyPointType`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.getKeyPointType:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L240e60.  v0:= v1.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.keyPointType` @type ^`int`;
  #L240e64.  return v0;
}
procedure `float` `getMinFaceProportion`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.getMinFaceProportion:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L240e30.  v0:= v1.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.minFaceProportion` @type ^`float`;
  #L240e34.  return v0;
}
procedure `int` `getPerformanceType`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.getPerformanceType:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L240e78.  v0:= v1.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.performanceType` @type ^`int`;
  #L240e7c.  return v0;
}
procedure `int` `getShapeType`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.getShapeType:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L240e90.  v0:= v1.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.shapeType` @type ^`int`;
  #L240e94.  return v0;
}
procedure `int` `getTracingMode`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.getTracingMode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L240ea8.  v0:= v1.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.tracingMode` @type ^`int`;
  #L240eac.  return v0;
}
procedure `int` `hashCode`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` v3 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L240ec0.  v0:= 9I;
  #L240ec4.  v0:= new `java.lang.Object`[v0];
  #L240ec8.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.minFaceProportion` @type ^`float`;
  #L240ecc.  call temp:= `floatToIntBits`(v1) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L240ed2.  v1:= temp;
  #L240ed4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L240eda.  v1:= temp @kind object;
  #L240edc.  v2:= 0I;
  #L240ede.  v0[v2]:= v1 @kind object;
  #L240ee2.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.keyPointType` @type ^`int`;
  #L240ee6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L240eec.  v1:= temp @kind object;
  #L240eee.  v2:= 1I;
  #L240ef0.  v0[v2]:= v1 @kind object;
  #L240ef4.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.shapeType` @type ^`int`;
  #L240ef8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L240efe.  v1:= temp @kind object;
  #L240f00.  v2:= 2I;
  #L240f02.  v0[v2]:= v1 @kind object;
  #L240f06.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.featureType` @type ^`int`;
  #L240f0a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L240f10.  v1:= temp @kind object;
  #L240f12.  v2:= 3I;
  #L240f14.  v0[v2]:= v1 @kind object;
  #L240f18.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isPoseDisabled` @type ^`boolean` @kind boolean;
  #L240f1c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L240f22.  v1:= temp @kind object;
  #L240f24.  v2:= 4I;
  #L240f26.  v0[v2]:= v1 @kind object;
  #L240f2a.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isTracingAllowed` @type ^`boolean` @kind boolean;
  #L240f2e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L240f34.  v1:= temp @kind object;
  #L240f36.  v2:= 5I;
  #L240f38.  v0[v2]:= v1 @kind object;
  #L240f3c.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.tracingMode` @type ^`int`;
  #L240f40.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L240f46.  v1:= temp @kind object;
  #L240f48.  v2:= 6I;
  #L240f4a.  v0[v2]:= v1 @kind object;
  #L240f4e.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isMaxSizeFaceOnly` @type ^`boolean` @kind boolean;
  #L240f52.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L240f58.  v1:= temp @kind object;
  #L240f5a.  v2:= 7I;
  #L240f5c.  v0[v2]:= v1 @kind object;
  #L240f60.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.performanceType` @type ^`int`;
  #L240f64.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L240f6a.  v1:= temp @kind object;
  #L240f6c.  v2:= 8I;
  #L240f70.  v0[v2]:= v1 @kind object;
  #L240f74.  call temp:= `hashCode`(v0) @signature `Ljava/util/Objects;.hashCode:(Ljava/lang/Object;)I` @kind static;
  #L240f7a.  v0:= temp;
  #L240f7c.  return v0;
}
procedure `boolean` `isMaxSizeFaceOnly`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.isMaxSizeFaceOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L240de8.  v0:= v1.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isMaxSizeFaceOnly` @type ^`boolean` @kind boolean;
  #L240dec.  return v0;
}
procedure `boolean` `isPoseDisabled`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.isPoseDisabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L240e00.  v0:= v1.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isPoseDisabled` @type ^`boolean` @kind boolean;
  #L240e04.  return v0;
}
procedure `boolean` `isTracingAllowed`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.isTracingAllowed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L240e18.  v0:= v1.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isTracingAllowed` @type ^`boolean` @kind boolean;
  #L240e1c.  return v0;
}
procedure `java.lang.String` `toString`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` v3 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L240f90.  call temp:= `toStringHelper`(v3) @signature `Lcom/huawei/hms/mlsdk/internal/client/Objects;.toStringHelper:(Ljava/lang/Object;)Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;` @kind static;
  #L240f96.  v0:= temp @kind object;
  #L240f98.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.keyPointType` @type ^`int`;
  #L240f9c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L240fa2.  v1:= temp @kind object;
  #L240fa4.  v2:= "keyPointType" @kind object;
  #L240fa8.  call temp:= `attribute`(v0, v2, v1) @signature `Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;.attribute:(Ljava/lang/String;Ljava/lang/Object;)Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;` @kind virtual;
  #L240fae.  v0:= temp @kind object;
  #L240fb0.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.shapeType` @type ^`int`;
  #L240fb4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L240fba.  v1:= temp @kind object;
  #L240fbc.  v2:= "shapeMode" @kind object;
  #L240fc0.  call temp:= `attribute`(v0, v2, v1) @signature `Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;.attribute:(Ljava/lang/String;Ljava/lang/Object;)Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;` @kind virtual;
  #L240fc6.  v0:= temp @kind object;
  #L240fc8.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.featureType` @type ^`int`;
  #L240fcc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L240fd2.  v1:= temp @kind object;
  #L240fd4.  v2:= "featureType" @kind object;
  #L240fd8.  call temp:= `attribute`(v0, v2, v1) @signature `Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;.attribute:(Ljava/lang/String;Ljava/lang/Object;)Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;` @kind virtual;
  #L240fde.  v0:= temp @kind object;
  #L240fe0.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.performanceType` @type ^`int`;
  #L240fe4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L240fea.  v1:= temp @kind object;
  #L240fec.  v2:= "performanceType" @kind object;
  #L240ff0.  call temp:= `attribute`(v0, v2, v1) @signature `Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;.attribute:(Ljava/lang/String;Ljava/lang/Object;)Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;` @kind virtual;
  #L240ff6.  v0:= temp @kind object;
  #L240ff8.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isPoseDisabled` @type ^`boolean` @kind boolean;
  #L240ffc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L241002.  v1:= temp @kind object;
  #L241004.  v2:= "isPoseDisabled" @kind object;
  #L241008.  call temp:= `attribute`(v0, v2, v1) @signature `Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;.attribute:(Ljava/lang/String;Ljava/lang/Object;)Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;` @kind virtual;
  #L24100e.  v0:= temp @kind object;
  #L241010.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isTracingAllowed` @type ^`boolean` @kind boolean;
  #L241014.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L24101a.  v1:= temp @kind object;
  #L24101c.  v2:= "isTracingAllowed" @kind object;
  #L241020.  call temp:= `attribute`(v0, v2, v1) @signature `Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;.attribute:(Ljava/lang/String;Ljava/lang/Object;)Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;` @kind virtual;
  #L241026.  v0:= temp @kind object;
  #L241028.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.tracingMode` @type ^`int`;
  #L24102c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L241032.  v1:= temp @kind object;
  #L241034.  v2:= "tracingMode" @kind object;
  #L241038.  call temp:= `attribute`(v0, v2, v1) @signature `Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;.attribute:(Ljava/lang/String;Ljava/lang/Object;)Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;` @kind virtual;
  #L24103e.  v0:= temp @kind object;
  #L241040.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.minFaceProportion` @type ^`float`;
  #L241044.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L24104a.  v1:= temp @kind object;
  #L24104c.  v2:= "minFaceProportion" @kind object;
  #L241050.  call temp:= `attribute`(v0, v2, v1) @signature `Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;.attribute:(Ljava/lang/String;Ljava/lang/Object;)Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;` @kind virtual;
  #L241056.  v0:= temp @kind object;
  #L241058.  v1:= v3.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting.isMaxSizeFaceOnly` @type ^`boolean` @kind boolean;
  #L24105c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L241062.  v1:= temp @kind object;
  #L241064.  v2:= "isMaxSizeFaceOnly" @kind object;
  #L241068.  call temp:= `attribute`(v0, v2, v1) @signature `Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;.attribute:(Ljava/lang/String;Ljava/lang/Object;)Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;` @kind virtual;
  #L24106e.  v0:= temp @kind object;
  #L241070.  call temp:= `toString`(v0) @signature `Lcom/huawei/hms/mlsdk/internal/client/Objects$ToStringHelper;.toString:()Ljava/lang/String;` @kind virtual;
  #L241076.  v0:= temp @kind object;
  #L241078.  return v0 @kind object;
}
