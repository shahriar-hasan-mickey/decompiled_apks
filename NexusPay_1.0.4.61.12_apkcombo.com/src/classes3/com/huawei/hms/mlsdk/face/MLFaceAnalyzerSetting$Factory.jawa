record `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` @kind class @AccessFlag PUBLIC {
  `int` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.featureType` @AccessFlag PRIVATE;
  `boolean` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.isMaxSizeFaceOnly` @AccessFlag PRIVATE;
  `boolean` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.isPoseDisabled` @AccessFlag PRIVATE;
  `boolean` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.isTracingAllowed` @AccessFlag PRIVATE;
  `int` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.keyPointType` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.minFaceProportion` @AccessFlag PRIVATE;
  `int` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.performanceType` @AccessFlag PRIVATE;
  `int` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.shapeType` @AccessFlag PRIVATE;
  `int` `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.tracingMode` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` v2 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L240cf4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L240cfa.  v0:= 1I;
  #L240cfc.  v2.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.keyPointType` @type ^`int` := v0;
  #L240d00.  v1:= 2I;
  #L240d02.  v2.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.shapeType` @type ^`int` := v1;
  #L240d06.  v2.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.featureType` @type ^`int` := v0;
  #L240d0a.  v2.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.performanceType` @type ^`int` := v0;
  #L240d0e.  v0:= 0I;
  #L240d10.  v2.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.isPoseDisabled` @type ^`boolean` := v0 @kind boolean;
  #L240d14.  v2.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.isTracingAllowed` @type ^`boolean` := v0 @kind boolean;
  #L240d18.  v2.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.tracingMode` @type ^`int` := v1;
  #L240d1c.  v1:= 1036831949I;
  #L240d22.  v2.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.minFaceProportion` @type ^`float` := v1;
  #L240d26.  v2.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.isMaxSizeFaceOnly` @type ^`boolean` := v0 @kind boolean;
  #L240d2a.  return @kind void;
}
procedure `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` `allowTracing`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.allowTracing:()Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L240bd8.  v0:= 2I;
  #L240bda.  call temp:= `allowTracing`(v1, v0) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.allowTracing:(I)Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;` @kind virtual;
  #L240be0.  v0:= temp @kind object;
  #L240be2.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` `allowTracing`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` v1 @kind this, `int` v2 ) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.allowTracing:(I)Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L240bf4.  v0:= 1I;
  #L240bf6.  v1.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.isTracingAllowed` @type ^`boolean` := v0 @kind boolean;
  #L240bfa.  v1.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.tracingMode` @type ^`int` := v2;
  #L240bfe.  return v1 @kind object;
}
procedure `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting` `create`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` v11 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.create:()Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L240b94.  v10:= new `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting`;
  #L240b98.  v1:= v11.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.keyPointType` @type ^`int`;
  #L240b9c.  v2:= v11.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.shapeType` @type ^`int`;
  #L240ba0.  v3:= v11.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.featureType` @type ^`int`;
  #L240ba4.  v4:= v11.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.performanceType` @type ^`int`;
  #L240ba8.  v5:= v11.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.isPoseDisabled` @type ^`boolean` @kind boolean;
  #L240bac.  v6:= v11.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.isTracingAllowed` @type ^`boolean` @kind boolean;
  #L240bb0.  v7:= v11.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.tracingMode` @type ^`int`;
  #L240bb4.  v8:= v11.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.isMaxSizeFaceOnly` @type ^`boolean` @kind boolean;
  #L240bb8.  v9:= v11.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.minFaceProportion` @type ^`float`;
  #L240bbc.  v0:= v10 @kind object;
  #L240bbe.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;.<init>:(IIIIZZIZF)V` @kind direct;
  #L240bc4.  return v10 @kind object;
}
procedure `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` `setFeatureType`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` v0 @kind this, `int` v1 ) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.setFeatureType:(I)Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;` @AccessFlag PUBLIC {
    temp;

  #L240c10.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.featureType` @type ^`int` := v1;
  #L240c14.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` `setKeyPointType`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` v0 @kind this, `int` v1 ) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.setKeyPointType:(I)Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;` @AccessFlag PUBLIC {
    temp;

  #L240c28.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.keyPointType` @type ^`int` := v1;
  #L240c2c.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` `setMaxSizeFaceOnly`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` v0 @kind this, `boolean` v1 ) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.setMaxSizeFaceOnly:(Z)Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;` @AccessFlag PUBLIC {
    temp;

  #L240c40.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.isMaxSizeFaceOnly` @type ^`boolean` := v1 @kind boolean;
  #L240c44.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` `setMinFaceProportion`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` v0 @kind this, `float` v1 ) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.setMinFaceProportion:(F)Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;` @AccessFlag PUBLIC {
    temp;

  #L240c58.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.minFaceProportion` @type ^`float` := v1;
  #L240c5c.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` `setPerformanceType`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` v0 @kind this, `int` v1 ) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.setPerformanceType:(I)Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;` @AccessFlag PUBLIC {
    temp;

  #L240c70.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.performanceType` @type ^`int` := v1;
  #L240c74.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` `setPoseDisabled`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` v0 @kind this, `boolean` v1 ) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.setPoseDisabled:(Z)Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;` @AccessFlag PUBLIC {
    temp;

  #L240c88.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.isPoseDisabled` @type ^`boolean` := v1 @kind boolean;
  #L240c8c.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` `setShapeType`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` v0 @kind this, `int` v1 ) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.setShapeType:(I)Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;` @AccessFlag PUBLIC {
    temp;

  #L240ca0.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.shapeType` @type ^`int` := v1;
  #L240ca4.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` `setTracingAllowed`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` v1 @kind this, `boolean` v2 ) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.setTracingAllowed:(Z)Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L240cb8.  v0:= 2I;
  #L240cba.  call temp:= `setTracingAllowed`(v1, v2, v0) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.setTracingAllowed:(ZI)Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;` @kind virtual;
  #L240cc0.  v2:= temp @kind object;
  #L240cc2.  return v2 @kind object;
}
procedure `com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` `setTracingAllowed`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory` v0 @kind this, `boolean` v1 , `int` v2 ) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;.setTracingAllowed:(ZI)Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting$Factory;` @AccessFlag PUBLIC {
    temp;

  #L240cd4.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.isTracingAllowed` @type ^`boolean` := v1 @kind boolean;
  #L240cd8.  if v1 == 0 then goto L240ce0;
  #L240cdc.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzerSetting$Factory.tracingMode` @type ^`int` := v2;
  #L240ce0.  return v0 @kind object;
}
