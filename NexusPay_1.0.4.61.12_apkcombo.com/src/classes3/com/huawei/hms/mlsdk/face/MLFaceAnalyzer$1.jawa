record `com.huawei.hms.mlsdk.face.MLFaceAnalyzer$1` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `com.huawei.hms.mlsdk.face.MLFaceAnalyzer` `com.huawei.hms.mlsdk.face.MLFaceAnalyzer$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `com.huawei.hms.mlsdk.common.MLFrame` `com.huawei.hms.mlsdk.face.MLFaceAnalyzer$1.val$mlframe` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzer$1` v0 @kind this, `com.huawei.hms.mlsdk.face.MLFaceAnalyzer` v1 @kind object, `com.huawei.hms.mlsdk.common.MLFrame` v2 @kind object) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzer$1;.<init>:(Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzer;Lcom/huawei/hms/mlsdk/common/MLFrame;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L240920.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzer$1.this$0` @type ^`com.huawei.hms.mlsdk.face.MLFaceAnalyzer` := v1 @kind object;
  #L240924.  v0.`com.huawei.hms.mlsdk.face.MLFaceAnalyzer$1.val$mlframe` @type ^`com.huawei.hms.mlsdk.common.MLFrame` := v2 @kind object;
  #L240928.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24092e.  return @kind void;
}
procedure `java.lang.Object` `call`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzer$1` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzer$1;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L24088c.  call temp:= `call`(v1) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzer$1;.call:()Ljava/util/List;` @kind virtual;
  #L240892.  v0:= temp @kind object;
  #L240894.  return v0 @kind object;
}
procedure `java.util.List` `call`(`com.huawei.hms.mlsdk.face.MLFaceAnalyzer$1` v4 @kind this) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzer$1;.call:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2408a8.  v0:= v4.`com.huawei.hms.mlsdk.face.MLFaceAnalyzer$1.this$0` @type ^`com.huawei.hms.mlsdk.face.MLFaceAnalyzer` @kind object;
  #L2408ac.  call temp:= `isAvailable`(v0) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzer;.isAvailable:()Z` @kind virtual;
  #L2408b2.  v0:= temp;
  #L2408b4.  if v0 == 0 then goto L2408e6;
  #L2408b8.  call temp:= `getInstance`() @signature `Lcom/huawei/hms/mlsdk/face/internal/client/RemoteFaceDetector;.getInstance:()Lcom/huawei/hms/mlsdk/face/internal/client/RemoteFaceDetector;` @kind static;
  #L2408be.  v0:= temp @kind object;
  #L2408c0.  v1:= v4.`com.huawei.hms.mlsdk.face.MLFaceAnalyzer$1.val$mlframe` @type ^`com.huawei.hms.mlsdk.common.MLFrame` @kind object;
  #L2408c4.  v2:= v4.`com.huawei.hms.mlsdk.face.MLFaceAnalyzer$1.this$0` @type ^`com.huawei.hms.mlsdk.face.MLFaceAnalyzer` @kind object;
  #L2408c8.  call temp:= `access$000`(v2) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzer;.access$000:(Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzer;)Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;` @kind static;
  #L2408ce.  v2:= temp @kind object;
  #L2408d0.  v3:= v4.`com.huawei.hms.mlsdk.face.MLFaceAnalyzer$1.this$0` @type ^`com.huawei.hms.mlsdk.face.MLFaceAnalyzer` @kind object;
  #L2408d4.  call temp:= `access$100`(v3) @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzer;.access$100:(Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzer;)Lcom/huawei/hms/mlsdk/common/MLApplication;` @kind static;
  #L2408da.  v3:= temp @kind object;
  #L2408dc.  call temp:= `detectFromRemote`(v0, v1, v2, v3) @signature `Lcom/huawei/hms/mlsdk/face/internal/client/RemoteFaceDetector;.detectFromRemote:(Lcom/huawei/hms/mlsdk/common/MLFrame;Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzerSetting;Lcom/huawei/hms/mlsdk/common/MLApplication;)Ljava/util/List;` @kind virtual;
  #L2408e2.  v0:= temp @kind object;
  #L2408e4.  goto L2408f0;
  #L2408e6.  v0:= new `java.util.ArrayList`;
  #L2408ea.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2408f0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2408f6.  v1:= temp;
  #L2408f8.  if v1 == 0 then goto L24090e;
  #L2408fc.  call temp:= `access$200`() @signature `Lcom/huawei/hms/mlsdk/face/MLFaceAnalyzer;.access$200:()Ljava/lang/String;` @kind static;
  #L240902.  v1:= temp @kind object;
  #L240904.  v2:= "asyncAnalyseFrame faceParcelList is empty!" @kind object;
  #L240908.  call `e`(v1, v2) @signature `Lcom/huawei/hms/ml/common/base/SmartLog;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L24090e.  return v0 @kind object;
}
