record `com.huawei.hms.mlsdk.face.MLMaxSizeFaceTransactor` @kind class @AccessFlag PUBLIC extends `com.huawei.hms.mlsdk.common.MLProminentTransactor` @kind class {
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.face.MLMaxSizeFaceTransactor` v0 @kind this, `com.huawei.hms.mlsdk.common.MLAnalyzer` v1 @kind object, `com.huawei.hms.mlsdk.common.MLResultTrailer` v2 @kind object) @signature `Lcom/huawei/hms/mlsdk/face/MLMaxSizeFaceTransactor;.<init>:(Lcom/huawei/hms/mlsdk/common/MLAnalyzer;Lcom/huawei/hms/mlsdk/common/MLResultTrailer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L242120.  call `<init>`(v0, v1, v2) @signature `Lcom/huawei/hms/mlsdk/common/MLProminentTransactor;.<init>:(Lcom/huawei/hms/mlsdk/common/MLAnalyzer;Lcom/huawei/hms/mlsdk/common/MLResultTrailer;)V` @kind direct;
  #L242126.  return @kind void;
}
procedure `boolean` `compare`(`com.huawei.hms.mlsdk.face.MLMaxSizeFaceTransactor` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/huawei/hms/mlsdk/face/MLMaxSizeFaceTransactor;.compare:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L24205c.  v1:= (`com.huawei.hms.mlsdk.face.MLFace`) v1 @kind object;
  #L242060.  call temp:= `getTracingIdentity`(v1) @signature `Lcom/huawei/hms/mlsdk/face/MLFace;.getTracingIdentity:()I` @kind virtual;
  #L242066.  v1:= temp;
  #L242068.  v2:= (`com.huawei.hms.mlsdk.face.MLFace`) v2 @kind object;
  #L24206c.  call temp:= `getTracingIdentity`(v2) @signature `Lcom/huawei/hms/mlsdk/face/MLFace;.getTracingIdentity:()I` @kind virtual;
  #L242072.  v2:= temp;
  #L242074.  if v1 != v2 then goto L24207c;
  #L242078.  v1:= 1I;
  #L24207a.  goto L24207e;
  #L24207c.  v1:= 0I;
  #L24207e.  return v1;
}
procedure `int` `getSpecificTarget`(`com.huawei.hms.mlsdk.face.MLMaxSizeFaceTransactor` v6 @kind this, `com.huawei.hms.mlsdk.common.MLAnalyzer$Result` v7 @kind object) @signature `Lcom/huawei/hms/mlsdk/face/MLMaxSizeFaceTransactor;.getSpecificTarget:(Lcom/huawei/hms/mlsdk/common/MLAnalyzer$Result;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L242090.  call temp:= `getAnalyseList`(v7) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer$Result;.getAnalyseList:()Landroid/util/SparseArray;` @kind virtual;
  #L242096.  v7:= temp @kind object;
  #L242098.  call temp:= `size`(v7) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L24209e.  v0:= temp;
  #L2420a0.  if v0 == 0 then goto L242100;
  #L2420a4.  v0:= 0I;
  #L2420a6.  call temp:= `keyAt`(v7, v0) @signature `Landroid/util/SparseArray;.keyAt:(I)I` @kind virtual;
  #L2420ac.  v1:= temp;
  #L2420ae.  call temp:= `valueAt`(v7, v0) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L2420b4.  v0:= temp @kind object;
  #L2420b6.  v0:= (`com.huawei.hms.mlsdk.face.MLFace`) v0 @kind object;
  #L2420ba.  call temp:= `getWidth`(v0) @signature `Lcom/huawei/hms/mlsdk/face/MLFace;.getWidth:()F` @kind virtual;
  #L2420c0.  v0:= temp;
  #L2420c2.  v2:= 1I;
  #L2420c4.  call temp:= `size`(v7) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L2420ca.  v3:= temp;
  #L2420cc.  if v2 >= v3 then goto L2420fe;
  #L2420d0.  call temp:= `keyAt`(v7, v2) @signature `Landroid/util/SparseArray;.keyAt:(I)I` @kind virtual;
  #L2420d6.  v3:= temp;
  #L2420d8.  call temp:= `valueAt`(v7, v2) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L2420de.  v4:= temp @kind object;
  #L2420e0.  v4:= (`com.huawei.hms.mlsdk.face.MLFace`) v4 @kind object;
  #L2420e4.  call temp:= `getWidth`(v4) @signature `Lcom/huawei/hms/mlsdk/face/MLFace;.getWidth:()F` @kind virtual;
  #L2420ea.  v4:= temp;
  #L2420ec.  v5:= fcmpl(v4, v0);
  #L2420f0.  if v5 <= 0 then goto L2420f8;
  #L2420f4.  v1:= v3;
  #L2420f6.  v0:= v4;
  #L2420f8.  v2:= v2 + 1;
  #L2420fc.  goto L2420c4;
  #L2420fe.  return v1;
  #L242100.  v7:= new `java.lang.IllegalArgumentException`;
  #L242104.  v0:= "No faces for selectFocus." @kind object;
  #L242108.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24210e.  throw v7;
}
