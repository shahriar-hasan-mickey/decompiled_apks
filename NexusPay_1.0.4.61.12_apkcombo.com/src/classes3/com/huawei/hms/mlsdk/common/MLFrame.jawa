record `com.huawei.hms.mlsdk.common.MLFrame` @kind class @AccessFlag PUBLIC {
  `android.graphics.Bitmap` `com.huawei.hms.mlsdk.common.MLFrame.bitmap` @AccessFlag PRIVATE;
  `java.nio.ByteBuffer` `com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @AccessFlag PRIVATE;
  `byte`[] `com.huawei.hms.mlsdk.common.MLFrame.bytes` @AccessFlag PRIVATE;
  `java.lang.Boolean` `com.huawei.hms.mlsdk.common.MLFrame.frameInit` @AccessFlag PRIVATE_VOLATILE;
  `com.huawei.hms.mlsdk.common.MLFrame$Property` `com.huawei.hms.mlsdk.common.MLFrame.property` @AccessFlag PRIVATE;
  `int` `com.huawei.hms.mlsdk.common.MLFrame.recMode` @AccessFlag PRIVATE;
}
global `int` `@@com.huawei.hms.mlsdk.common.MLFrame.SCREEN_FIRST_QUADRANT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.common.MLFrame.SCREEN_FOURTH_QUADRANT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.common.MLFrame.SCREEN_SECOND_QUADRANT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.common.MLFrame.SCREEN_THIRD_QUADRANT` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.huawei.hms.mlsdk.common.MLFrame` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L23cd58.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23cd5e.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L23cd62.  v1.`com.huawei.hms.mlsdk.common.MLFrame.frameInit` @type ^`java.lang.Boolean` := v0 @kind object;
  #L23cd66.  v0:= new `com.huawei.hms.mlsdk.common.MLFrame$Property`;
  #L23cd6a.  call `<init>`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.<init>:()V` @kind direct;
  #L23cd70.  v1.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` := v0 @kind object;
  #L23cd74.  v0:= 0I;
  #L23cd76.  v1.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L23cd7a.  v1.`com.huawei.hms.mlsdk.common.MLFrame.bitmap` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L23cd7e.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.common.MLFrame` v1 @kind this, `android.graphics.Bitmap` v2 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:(Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L23cd90.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23cd96.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L23cd9a.  v1.`com.huawei.hms.mlsdk.common.MLFrame.frameInit` @type ^`java.lang.Boolean` := v0 @kind object;
  #L23cd9e.  v1.`com.huawei.hms.mlsdk.common.MLFrame.bitmap` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L23cda2.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.common.MLFrame` v1 @kind this, `android.graphics.Bitmap` v2 @kind object, `com.huawei.hms.mlsdk.common.MLFrame$Property` v3 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:(Landroid/graphics/Bitmap;Lcom/huawei/hms/mlsdk/common/MLFrame$Property;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L23cdb4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23cdba.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L23cdbe.  v1.`com.huawei.hms.mlsdk.common.MLFrame.frameInit` @type ^`java.lang.Boolean` := v0 @kind object;
  #L23cdc2.  v1.`com.huawei.hms.mlsdk.common.MLFrame.bitmap` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L23cdc6.  if v3 == 0 then goto L23cdcc;
  #L23cdca.  goto L23cdd6;
  #L23cdcc.  v3:= new `com.huawei.hms.mlsdk.common.MLFrame$Property`;
  #L23cdd0.  call `<init>`(v3) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.<init>:()V` @kind direct;
  #L23cdd6.  v1.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` := v3 @kind object;
  #L23cdda.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.common.MLFrame` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object, `com.huawei.hms.mlsdk.common.MLFrame$Property` v3 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:(Ljava/nio/ByteBuffer;Lcom/huawei/hms/mlsdk/common/MLFrame$Property;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L23ce30.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23ce36.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L23ce3a.  v1.`com.huawei.hms.mlsdk.common.MLFrame.frameInit` @type ^`java.lang.Boolean` := v0 @kind object;
  #L23ce3e.  v1.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L23ce42.  if v3 == 0 then goto L23ce48;
  #L23ce46.  goto L23ce52;
  #L23ce48.  v3:= new `com.huawei.hms.mlsdk.common.MLFrame$Property`;
  #L23ce4c.  call `<init>`(v3) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.<init>:()V` @kind direct;
  #L23ce52.  v1.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` := v3 @kind object;
  #L23ce56.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.common.MLFrame` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:([B)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L23cdec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23cdf2.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L23cdf6.  v1.`com.huawei.hms.mlsdk.common.MLFrame.frameInit` @type ^`java.lang.Boolean` := v0 @kind object;
  #L23cdfa.  v1.`com.huawei.hms.mlsdk.common.MLFrame.bytes` @type ^`byte`[] := v2 @kind object;
  #L23cdfe.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.common.MLFrame` v0 @kind this, `byte`[] v1 @kind object, `com.huawei.hms.mlsdk.common.MLFrame$Property` v2 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:([BLcom/huawei/hms/mlsdk/common/MLFrame$Property;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L23ce10.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L23ce16.  v1:= temp @kind object;
  #L23ce18.  call `<init>`(v0, v1, v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:(Ljava/nio/ByteBuffer;Lcom/huawei/hms/mlsdk/common/MLFrame$Property;)V` @kind direct;
  #L23ce1e.  return @kind void;
}
procedure `android.graphics.Bitmap` `access$400`(`com.huawei.hms.mlsdk.common.MLFrame` v0 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.access$400:(Lcom/huawei/hms/mlsdk/common/MLFrame;)Landroid/graphics/Bitmap;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L23c4ec.  v0:= v0.`com.huawei.hms.mlsdk.common.MLFrame.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L23c4f0.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `access$402`(`com.huawei.hms.mlsdk.common.MLFrame` v0 @kind object, `android.graphics.Bitmap` v1 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.access$402:(Lcom/huawei/hms/mlsdk/common/MLFrame;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L23c504.  v0.`com.huawei.hms.mlsdk.common.MLFrame.bitmap` @type ^`android.graphics.Bitmap` := v1 @kind object;
  #L23c508.  return v1 @kind object;
}
procedure `java.nio.ByteBuffer` `access$500`(`com.huawei.hms.mlsdk.common.MLFrame` v0 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.access$500:(Lcom/huawei/hms/mlsdk/common/MLFrame;)Ljava/nio/ByteBuffer;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L23ccc4.  v0:= v0.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` @kind object;
  #L23ccc8.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `access$502`(`com.huawei.hms.mlsdk.common.MLFrame` v0 @kind object, `java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.access$502:(Lcom/huawei/hms/mlsdk/common/MLFrame;Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L23ccdc.  v0.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` := v1 @kind object;
  #L23cce0.  return v1 @kind object;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame` `fromBitmap`(`android.graphics.Bitmap` v1 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.fromBitmap:(Landroid/graphics/Bitmap;)Lcom/huawei/hms/mlsdk/common/MLFrame;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23c92c.  v0:= new `com.huawei.hms.mlsdk.common.MLFrame`;
  #L23c930.  call `<init>`(v0, v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L23c936.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame` `fromByteArray`(`byte`[] v1 @kind object, `com.huawei.hms.mlsdk.common.MLFrame$Property` v2 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.fromByteArray:([BLcom/huawei/hms/mlsdk/common/MLFrame$Property;)Lcom/huawei/hms/mlsdk/common/MLFrame;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23c948.  v0:= new `com.huawei.hms.mlsdk.common.MLFrame`;
  #L23c94c.  call `<init>`(v0, v1, v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:([BLcom/huawei/hms/mlsdk/common/MLFrame$Property;)V` @kind direct;
  #L23c952.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame` `fromByteBuffer`(`java.nio.ByteBuffer` v1 @kind object, `com.huawei.hms.mlsdk.common.MLFrame$Property` v2 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.fromByteBuffer:(Ljava/nio/ByteBuffer;Lcom/huawei/hms/mlsdk/common/MLFrame$Property;)Lcom/huawei/hms/mlsdk/common/MLFrame;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23c964.  v0:= new `com.huawei.hms.mlsdk.common.MLFrame`;
  #L23c968.  call `<init>`(v0, v1, v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:(Ljava/nio/ByteBuffer;Lcom/huawei/hms/mlsdk/common/MLFrame$Property;)V` @kind direct;
  #L23c96e.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame` `fromFilePath`(`android.content.Context` v0 @kind object, `android.net.Uri` v1 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.fromFilePath:(Landroid/content/Context;Landroid/net/Uri;)Lcom/huawei/hms/mlsdk/common/MLFrame;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L23c980.  if v0 == 0 then goto L23c9c8;
  #L23c984.  if v1 == 0 then goto L23c9b8;
  #L23c988.  call temp:= `getContentResolver`(v0) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L23c98e.  v0:= temp @kind object;
  #L23c990.  call temp:= `getBitmap`(v0, v1) @signature `Landroid/provider/MediaStore$Images$Media;.getBitmap:(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/graphics/Bitmap;` @kind static;
  #L23c996.  v0:= temp @kind object;
  #L23c998.  if v0 == 0 then goto L23c9a8;
  #L23c99c.  v1:= new `com.huawei.hms.mlsdk.common.MLFrame`;
  #L23c9a0.  call `<init>`(v1, v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L23c9a6.  return v1 @kind object;
  #L23c9a8.  v0:= new `java.lang.RuntimeException`;
  #L23c9ac.  v1:= "Failed to load bitmap from uri" @kind object;
  #L23c9b0.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23c9b6.  throw v0;
  #L23c9b8.  v0:= new `java.lang.IllegalArgumentException`;
  #L23c9bc.  v1:= "Parameter uri is mandatory" @kind object;
  #L23c9c0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23c9c6.  throw v0;
  #L23c9c8.  v0:= new `java.lang.IllegalArgumentException`;
  #L23c9cc.  v1:= "Parameter context is mandatory" @kind object;
  #L23c9d0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23c9d6.  throw v0;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame` `fromMediaImage`(`android.media.Image` v3 @kind object, `int` v4 ) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.fromMediaImage:(Landroid/media/Image;I)Lcom/huawei/hms/mlsdk/common/MLFrame;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L23c9e8.  call temp:= `getFormat`(v3) @signature `Landroid/media/Image;.getFormat:()I` @kind virtual;
  #L23c9ee.  v0:= temp;
  #L23c9f0.  v1:= 256I;
  #L23c9f4.  if v0 == v1 then goto L23ca42;
  #L23c9f8.  v2:= 35I;
  #L23c9fc.  if v0 != v2 then goto L23ca02;
  #L23ca00.  goto L23ca42;
  #L23ca02.  v4:= new `java.lang.IllegalArgumentException`;
  #L23ca06.  v0:= new `java.lang.StringBuilder`;
  #L23ca0a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23ca10.  v1:= "Unsupported format: " @kind object;
  #L23ca14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ca1a.  call temp:= `getFormat`(v3) @signature `Landroid/media/Image;.getFormat:()I` @kind virtual;
  #L23ca20.  v3:= temp;
  #L23ca22.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ca28.  v3:= ", Only JPEG and YUV_420_888 are supported" @kind object;
  #L23ca2c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ca32.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23ca38.  v3:= temp @kind object;
  #L23ca3a.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23ca40.  throw v4;
  #L23ca42.  v2:= 0I;
  #L23ca44.  if v0 != v1 then goto L23cac2;
  #L23ca48.  call temp:= `getPlanes`(v3) @signature `Landroid/media/Image;.getPlanes:()[Landroid/media/Image$Plane;` @kind virtual;
  #L23ca4e.  v3:= temp @kind object;
  #L23ca50.  if v3 == 0 then goto L23cb1a;
  #L23ca54.  v0:= length @variable v3;
  #L23ca56.  v1:= 1I;
  #L23ca58.  if v0 != v1 then goto L23cb1a;
  #L23ca5c.  v0:= 0I;
  #L23ca5e.  v1:= v3[v0] @kind object;
  #L23ca62.  if v1 == 0 then goto L23cb1a;
  #L23ca66.  v1:= v3[v0] @kind object;
  #L23ca6a.  call temp:= `getBuffer`(v1) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L23ca70.  v1:= temp @kind object;
  #L23ca72.  if v1 == 0 then goto L23cb1a;
  #L23ca76.  v3:= v3[v0] @kind object;
  #L23ca7a.  call temp:= `getBuffer`(v3) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L23ca80.  v3:= temp @kind object;
  #L23ca82.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L23ca88.  v1:= temp;
  #L23ca8a.  v2:= new `byte`[v1];
  #L23ca8e.  call temp:= `get`(v3, v2) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L23ca94.  if v4 == 0 then goto L23cab4;
  #L23ca98.  call temp:= `decodeByteArray`(v2, v0, v1) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BII)Landroid/graphics/Bitmap;` @kind static;
  #L23ca9e.  v3:= temp @kind object;
  #L23caa0.  call temp:= `rotate`(v3, v4) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.rotate:(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @kind static;
  #L23caa6.  v3:= temp @kind object;
  #L23caa8.  v2:= new `com.huawei.hms.mlsdk.common.MLFrame`;
  #L23caac.  call `<init>`(v2, v3) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L23cab2.  goto L23cb1a;
  #L23cab4.  v3:= new `com.huawei.hms.mlsdk.common.MLFrame`;
  #L23cab8.  call `<init>`(v3, v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:([B)V` @kind direct;
  #L23cabe.  v2:= v3 @kind object;
  #L23cac0.  goto L23cb1a;
  #L23cac2.  v0:= new `com.huawei.hms.mlsdk.common.MLFrame$Property$Creator`;
  #L23cac6.  call `<init>`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;.<init>:()V` @kind direct;
  #L23cacc.  v1:= 17I;
  #L23cad0.  call temp:= `setFormatType`(v0, v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;.setFormatType:(I)Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;` @kind virtual;
  #L23cad6.  v1:= temp @kind object;
  #L23cad8.  call temp:= `getWidth`(v3) @signature `Landroid/media/Image;.getWidth:()I` @kind virtual;
  #L23cade.  v2:= temp;
  #L23cae0.  call temp:= `setWidth`(v1, v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;.setWidth:(I)Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;` @kind virtual;
  #L23cae6.  v1:= temp @kind object;
  #L23cae8.  call temp:= `getHeight`(v3) @signature `Landroid/media/Image;.getHeight:()I` @kind virtual;
  #L23caee.  v2:= temp;
  #L23caf0.  call temp:= `setHeight`(v1, v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;.setHeight:(I)Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;` @kind virtual;
  #L23caf6.  v1:= temp @kind object;
  #L23caf8.  call temp:= `setQuadrant`(v1, v4) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;.setQuadrant:(I)Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;` @kind virtual;
  #L23cafe.  call temp:= `create`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;.create:()Lcom/huawei/hms/mlsdk/common/MLFrame$Property;` @kind virtual;
  #L23cb04.  v4:= temp @kind object;
  #L23cb06.  v2:= new `com.huawei.hms.mlsdk.common.MLFrame`;
  #L23cb0a.  v0:= 2I;
  #L23cb0c.  call temp:= `getDataFromImage`(v3, v0) @signature `Lcom/huawei/hms/ml/common/utils/ImageConvertUtils;.getDataFromImage:(Landroid/media/Image;I)[B` @kind static;
  #L23cb12.  v3:= temp @kind object;
  #L23cb14.  call `<init>`(v2, v3, v4) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:([BLcom/huawei/hms/mlsdk/common/MLFrame$Property;)V` @kind direct;
  #L23cb1a.  if v2 == 0 then goto L23cb20;
  #L23cb1e.  return v2 @kind object;
  #L23cb20.  v3:= new `java.lang.IllegalStateException`;
  #L23cb24.  v4:= "Failed to create frame from media image." @kind object;
  #L23cb28.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23cb2e.  throw v3;
}
procedure `android.util.Pair` `getPreviewSize`(`com.huawei.hms.mlsdk.common.MLFrame` v3 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.getPreviewSize:()Landroid/util/Pair;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L23c74c.  v0:= v3.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23c750.  if v0 == 0 then goto L23c816;
  #L23c754.  call temp:= `getItemIdentity`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getItemIdentity:()I` @kind virtual;
  #L23c75a.  v0:= temp;
  #L23c75c.  v1:= -1I;
  #L23c75e.  if v0 == v1 then goto L23c7dc;
  #L23c762.  v0:= v3.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23c766.  call temp:= `getQuadrant`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getQuadrant:()I` @kind virtual;
  #L23c76c.  v0:= temp;
  #L23c76e.  v1:= 1I;
  #L23c770.  if v0 == v1 then goto L23c78a;
  #L23c774.  v0:= v3.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23c778.  call temp:= `getQuadrant`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getQuadrant:()I` @kind virtual;
  #L23c77e.  v0:= temp;
  #L23c780.  v2:= 3I;
  #L23c782.  if v0 != v2 then goto L23c788;
  #L23c786.  goto L23c78a;
  #L23c788.  v1:= 0I;
  #L23c78a.  v0:= v3.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23c78e.  if v1 == 0 then goto L23c79c;
  #L23c792.  call temp:= `getHeight`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getHeight:()I` @kind virtual;
  #L23c798.  v0:= temp;
  #L23c79a.  goto L23c7a4;
  #L23c79c.  call temp:= `getWidth`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getWidth:()I` @kind virtual;
  #L23c7a2.  v0:= temp;
  #L23c7a4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L23c7aa.  v0:= temp @kind object;
  #L23c7ac.  if v1 == 0 then goto L23c7be;
  #L23c7b0.  v1:= v3.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23c7b4.  call temp:= `getWidth`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getWidth:()I` @kind virtual;
  #L23c7ba.  v1:= temp;
  #L23c7bc.  goto L23c7ca;
  #L23c7be.  v1:= v3.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23c7c2.  call temp:= `getHeight`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getHeight:()I` @kind virtual;
  #L23c7c8.  v1:= temp;
  #L23c7ca.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L23c7d0.  v1:= temp @kind object;
  #L23c7d2.  call temp:= `create`(v0, v1) @signature `Landroid/util/Pair;.create:(Ljava/lang/Object;Ljava/lang/Object;)Landroid/util/Pair;` @kind static;
  #L23c7d8.  v0:= temp @kind object;
  #L23c7da.  return v0 @kind object;
  #L23c7dc.  call temp:= `wrapBitmap`(v3) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.wrapBitmap:()Landroid/graphics/Bitmap;` @kind direct;
  #L23c7e2.  v0:= temp @kind object;
  #L23c7e4.  call temp:= `getWidth`(v0) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L23c7ea.  v0:= temp;
  #L23c7ec.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L23c7f2.  v0:= temp @kind object;
  #L23c7f4.  call temp:= `wrapBitmap`(v3) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.wrapBitmap:()Landroid/graphics/Bitmap;` @kind direct;
  #L23c7fa.  v1:= temp @kind object;
  #L23c7fc.  call temp:= `getHeight`(v1) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L23c802.  v1:= temp;
  #L23c804.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L23c80a.  v1:= temp @kind object;
  #L23c80c.  call temp:= `create`(v0, v1) @signature `Landroid/util/Pair;.create:(Ljava/lang/Object;Ljava/lang/Object;)Landroid/util/Pair;` @kind static;
  #L23c812.  v0:= temp @kind object;
  #L23c814.  return v0 @kind object;
  #L23c816.  v0:= 0I;
  #L23c818.  return v0 @kind object;
}
procedure `boolean` `isSupportedYuvFormat`(`com.huawei.hms.mlsdk.common.MLFrame` v1 @kind this, `int` v2 ) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.isSupportedYuvFormat:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L23c82c.  v0:= 842094169I;
  #L23c832.  if v2 == v0 then goto L23c844;
  #L23c836.  v0:= 17I;
  #L23c83a.  if v2 != v0 then goto L23c840;
  #L23c83e.  goto L23c844;
  #L23c840.  v2:= 0I;
  #L23c842.  goto L23c846;
  #L23c844.  v2:= 1I;
  #L23c846.  return v2;
}
procedure `android.graphics.Bitmap` `rotate`(`android.graphics.Bitmap` v8 @kind object, `int` v9 ) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.rotate:(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L23c578.  if v9 < 0 then goto L23c5c0;
  #L23c57c.  v0:= 3I;
  #L23c57e.  if v9 > v0 then goto L23c5c0;
  #L23c582.  if v9 != 0 then goto L23c588;
  #L23c586.  return v8 @kind object;
  #L23c588.  v6:= new `android.graphics.Matrix`;
  #L23c58c.  call `<init>`(v6) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L23c592.  v9:= v9 * 90;
  #L23c596.  v9:= (`float`) v9 @kind i2f;
  #L23c598.  call temp:= `postRotate`(v6, v9) @signature `Landroid/graphics/Matrix;.postRotate:(F)Z` @kind virtual;
  #L23c59e.  v2:= 0I;
  #L23c5a0.  v3:= 0I;
  #L23c5a2.  call temp:= `getWidth`(v8) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L23c5a8.  v4:= temp;
  #L23c5aa.  call temp:= `getHeight`(v8) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L23c5b0.  v5:= temp;
  #L23c5b2.  v7:= 1I;
  #L23c5b4.  v1:= v8 @kind object;
  #L23c5b6.  call temp:= `createBitmap`(v1, v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L23c5bc.  v8:= temp @kind object;
  #L23c5be.  return v8 @kind object;
  #L23c5c0.  v8:= new `java.lang.IllegalArgumentException`;
  #L23c5c4.  v0:= new `java.lang.StringBuilder`;
  #L23c5c8.  v1:= 29I;
  #L23c5cc.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L23c5d2.  v1:= "Invalid quadrant: " @kind object;
  #L23c5d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23c5dc.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L23c5e2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23c5e8.  v9:= temp @kind object;
  #L23c5ea.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23c5f0.  throw v8;
}
procedure `android.graphics.Bitmap` `wrapBitmap`(`com.huawei.hms.mlsdk.common.MLFrame` v4 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.wrapBitmap:()Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23c604.  v0:= v4.`com.huawei.hms.mlsdk.common.MLFrame.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L23c608.  if v0 == 0 then goto L23c60e;
  #L23c60c.  return v0 @kind object;
  #L23c60e.  v0:= v4.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23c612.  if v0 == 0 then goto L23c65a;
  #L23c616.  v0:= 0I;
  #L23c618.  v1:= 0I;
  #L23c61a.  call temp:= `wrapJpeg`(v4, v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.wrapJpeg:(Z)[B` @kind virtual;
  #L23c620.  v2:= temp @kind object;
  #L23c622.  v3:= length @variable v2;
  #L23c624.  call temp:= `decodeByteArray`(v2, v0, v3) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BII)Landroid/graphics/Bitmap;` @kind static;
  #L23c62a.  v0:= temp @kind object;
  #L23c62c.  v1:= v4.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23c630.  call temp:= `getQuadrant`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getQuadrant:()I` @kind virtual;
  #L23c636.  v1:= temp;
  #L23c638.  if v1 != 0 then goto L23c63e;
  #L23c63c.  goto L23c652;
  #L23c63e.  v1:= v4.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23c642.  call temp:= `getQuadrant`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getQuadrant:()I` @kind virtual;
  #L23c648.  v1:= temp;
  #L23c64a.  call temp:= `rotate`(v0, v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.rotate:(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @kind static;
  #L23c650.  v0:= temp @kind object;
  #L23c652.  v4.`com.huawei.hms.mlsdk.common.MLFrame.bitmap` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L23c656.  goto L23c65a;
  #L23c658.  return v1 @kind object;
  #L23c65a.  v0:= v4.`com.huawei.hms.mlsdk.common.MLFrame.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L23c65e.  return v0 @kind object;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L23c61a..L23c62c] goto L23c658;
  catch `java.lang.IllegalArgumentException` @[L23c61a..L23c62c] goto L23c658;
  catch `java.lang.Exception` @[L23c61a..L23c62c] goto L23c658;
}
procedure `java.nio.ByteBuffer` `acquireGrayByteBuffer`(`com.huawei.hms.mlsdk.common.MLFrame` v3 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.acquireGrayByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L23ccf4.  v0:= v3.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` @kind object;
  #L23ccf8.  if v0 == 0 then goto L23cd2a;
  #L23ccfc.  v1:= v3.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23cd00.  if v1 == 0 then goto L23cd2a;
  #L23cd04.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L23cd0a.  v0:= temp @kind object;
  #L23cd0c.  v1:= v3.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23cd10.  call temp:= `access$000`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.access$000:(Lcom/huawei/hms/mlsdk/common/MLFrame$Property;)I` @kind static;
  #L23cd16.  v1:= temp;
  #L23cd18.  v2:= v3.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23cd1c.  call temp:= `access$100`(v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.access$100:(Lcom/huawei/hms/mlsdk/common/MLFrame$Property;)I` @kind static;
  #L23cd22.  v2:= temp;
  #L23cd24.  call temp:= `nv21ToGray`(v0, v1, v2) @signature `Lcom/huawei/hms/ml/common/utils/ImageConvertUtils;.nv21ToGray:([BII)[B` @kind static;
  #L23cd2a.  v0:= v3.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` @kind object;
  #L23cd2e.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame$Property` `acquireProperty`(`com.huawei.hms.mlsdk.common.MLFrame` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.acquireProperty:()Lcom/huawei/hms/mlsdk/common/MLFrame$Property;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23cc94.  v0:= v1.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23cc98.  return v0 @kind object;
}
procedure `android.util.Pair` `create`(`com.huawei.hms.mlsdk.common.MLFrame` v9 @kind this, `int` v10 , `int` v11 ) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.create:(II)Landroid/util/Pair;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L23c684.  call temp:= `getPreviewSize`(v9) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.getPreviewSize:()Landroid/util/Pair;` @kind direct;
  #L23c68a.  v0:= temp @kind object;
  #L23c68c.  if v0 != 0 then goto L23c694;
  #L23c690.  v10:= 0I;
  #L23c692.  return v10 @kind object;
  #L23c694.  call temp:= `getPreviewSize`(v9) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.getPreviewSize:()Landroid/util/Pair;` @kind direct;
  #L23c69a.  v0:= temp @kind object;
  #L23c69c.  v0:= v0.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L23c6a0.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L23c6a4.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L23c6aa.  v4:= temp;
  #L23c6ac.  call temp:= `getPreviewSize`(v9) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.getPreviewSize:()Landroid/util/Pair;` @kind direct;
  #L23c6b2.  v0:= temp @kind object;
  #L23c6b4.  v0:= v0.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L23c6b8.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L23c6bc.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L23c6c2.  v5:= temp;
  #L23c6c4.  v10:= (`float`) v10 @kind i2f;
  #L23c6c6.  v0:= (`float`) v4 @kind i2f;
  #L23c6c8.  v10:= v10 / v0 @kind float;
  #L23c6ca.  v11:= (`float`) v11 @kind i2f;
  #L23c6cc.  v0:= (`float`) v5 @kind i2f;
  #L23c6ce.  v11:= v11 / v0 @kind float;
  #L23c6d0.  call temp:= `min`(v10, v11) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L23c6d6.  v10:= temp;
  #L23c6d8.  v11:= 1.0F;
  #L23c6dc.  v0:= fcmpl(v10, v11);
  #L23c6e0.  if v0 < 0 then goto L23c6f0;
  #L23c6e4.  v10:= 1I;
  #L23c6e6.  call temp:= `wrapJpeg`(v9, v10) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.wrapJpeg:(Z)[B` @kind virtual;
  #L23c6ec.  v10:= temp @kind object;
  #L23c6ee.  goto L23c728;
  #L23c6f0.  v6:= new `android.graphics.Matrix`;
  #L23c6f4.  call `<init>`(v6) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L23c6fa.  call temp:= `postScale`(v6, v10, v10) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L23c700.  call temp:= `wrapBitmap`(v9) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.wrapBitmap:()Landroid/graphics/Bitmap;` @kind direct;
  #L23c706.  v1:= temp @kind object;
  #L23c708.  v2:= 0I;
  #L23c70a.  v3:= 0I;
  #L23c70c.  v7:= 1I;
  #L23c70e.  call temp:= `createBitmap`(v1, v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L23c714.  v11:= temp @kind object;
  #L23c716.  v0:= 100I;
  #L23c71a.  call temp:= `bitmap2Jpeg`(v11, v0) @signature `Lcom/huawei/hms/ml/common/utils/ImageConvertUtils;.bitmap2Jpeg:(Landroid/graphics/Bitmap;I)[B` @kind static;
  #L23c720.  v11:= temp @kind object;
  #L23c722.  v8:= v11 @kind object;
  #L23c724.  v11:= v10;
  #L23c726.  v10:= v8 @kind object;
  #L23c728.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L23c72e.  v11:= temp @kind object;
  #L23c730.  call temp:= `create`(v10, v11) @signature `Landroid/util/Pair;.create:(Ljava/lang/Object;Ljava/lang/Object;)Landroid/util/Pair;` @kind static;
  #L23c736.  v10:= temp @kind object;
  #L23c738.  return v10 @kind object;
}
procedure `java.nio.ByteBuffer` `getByteBuffer`(`com.huawei.hms.mlsdk.common.MLFrame` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.getByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23cd40.  v0:= v1.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` @kind object;
  #L23cd44.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame` `getFrame`(`com.huawei.hms.mlsdk.common.MLFrame` v1 @kind this, `boolean` v2 , `boolean` v3 ) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.getFrame:(ZZ)Lcom/huawei/hms/mlsdk/common/MLFrame;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L23cb40.  @monitorenter v1
  #L23cb42.  v0:= v1.`com.huawei.hms.mlsdk.common.MLFrame.frameInit` @type ^`java.lang.Boolean` @kind object;
  #L23cb46.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L23cb4c.  v0:= temp;
  #L23cb4e.  if v0 == 0 then goto L23cb56;
  #L23cb52.  @monitorexit v1
  #L23cb54.  return v1 @kind object;
  #L23cb56.  if v2 != 0 then goto L23cc18;
  #L23cb5a.  v2:= v1.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` @kind object;
  #L23cb5e.  if v2 != 0 then goto L23cb64;
  #L23cb62.  goto L23cc18;
  #L23cb64.  v2:= v1.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23cb68.  call temp:= `getFormatType`(v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getFormatType:()I` @kind virtual;
  #L23cb6e.  v2:= temp;
  #L23cb70.  if v3 == 0 then goto L23cc0c;
  #L23cb74.  v3:= 17I;
  #L23cb78.  if v2 != v3 then goto L23cb7e;
  #L23cb7c.  goto L23cc0c;
  #L23cb7e.  v0:= 842094169I;
  #L23cb84.  if v2 != v0 then goto L23cba8;
  #L23cb88.  v2:= v1.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` @kind object;
  #L23cb8c.  call temp:= `buffer2Byte`(v2) @signature `Lcom/huawei/hms/ml/common/utils/ImageConvertUtils;.buffer2Byte:(Ljava/nio/ByteBuffer;)[B` @kind static;
  #L23cb92.  v2:= temp @kind object;
  #L23cb94.  call temp:= `byteToNv21`(v2) @signature `Lcom/huawei/hms/ml/common/utils/ImageConvertUtils;.byteToNv21:([B)[B` @kind static;
  #L23cb9a.  v2:= temp @kind object;
  #L23cb9c.  call temp:= `wrap`(v2) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L23cba2.  v2:= temp @kind object;
  #L23cba4.  v1.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L23cba8.  v2:= new `com.huawei.hms.mlsdk.common.MLFrame$Property$Creator`;
  #L23cbac.  call `<init>`(v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;.<init>:()V` @kind direct;
  #L23cbb2.  call temp:= `setFormatType`(v2, v3) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;.setFormatType:(I)Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;` @kind virtual;
  #L23cbb8.  v3:= temp @kind object;
  #L23cbba.  v0:= v1.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23cbbe.  call temp:= `getWidth`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getWidth:()I` @kind virtual;
  #L23cbc4.  v0:= temp;
  #L23cbc6.  call temp:= `setWidth`(v3, v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;.setWidth:(I)Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;` @kind virtual;
  #L23cbcc.  v3:= temp @kind object;
  #L23cbce.  v0:= v1.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23cbd2.  call temp:= `getHeight`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getHeight:()I` @kind virtual;
  #L23cbd8.  v0:= temp;
  #L23cbda.  call temp:= `setHeight`(v3, v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;.setHeight:(I)Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;` @kind virtual;
  #L23cbe0.  v3:= temp @kind object;
  #L23cbe2.  v0:= v1.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23cbe6.  call temp:= `getQuadrant`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getQuadrant:()I` @kind virtual;
  #L23cbec.  v0:= temp;
  #L23cbee.  call temp:= `setQuadrant`(v3, v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;.setQuadrant:(I)Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;` @kind virtual;
  #L23cbf4.  call temp:= `create`(v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Creator;.create:()Lcom/huawei/hms/mlsdk/common/MLFrame$Property;` @kind virtual;
  #L23cbfa.  v2:= temp @kind object;
  #L23cbfc.  v1.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` := v2 @kind object;
  #L23cc00.  v2:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L23cc04.  v1.`com.huawei.hms.mlsdk.common.MLFrame.frameInit` @type ^`java.lang.Boolean` := v2 @kind object;
  #L23cc08.  @monitorexit v1
  #L23cc0a.  return v1 @kind object;
  #L23cc0c.  v2:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L23cc10.  v1.`com.huawei.hms.mlsdk.common.MLFrame.frameInit` @type ^`java.lang.Boolean` := v2 @kind object;
  #L23cc14.  @monitorexit v1
  #L23cc16.  return v1 @kind object;
  #L23cc18.  call temp:= `getPreviewBitmap`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.getPreviewBitmap:()Landroid/graphics/Bitmap;` @kind virtual;
  #L23cc1e.  v2:= temp @kind object;
  #L23cc20.  v1.`com.huawei.hms.mlsdk.common.MLFrame.bitmap` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L23cc24.  v2:= new `com.huawei.hms.mlsdk.common.MLFrame$Creator`;
  #L23cc28.  call `<init>`(v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;.<init>:()V` @kind direct;
  #L23cc2e.  call temp:= `readBitmap`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.readBitmap:()Landroid/graphics/Bitmap;` @kind virtual;
  #L23cc34.  v3:= temp @kind object;
  #L23cc36.  call temp:= `setBitmap`(v2, v3) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;.setBitmap:(Landroid/graphics/Bitmap;)Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;` @kind virtual;
  #L23cc3c.  v2:= temp @kind object;
  #L23cc3e.  call temp:= `create`(v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;.create:()Lcom/huawei/hms/mlsdk/common/MLFrame;` @kind virtual;
  #L23cc44.  v2:= temp @kind object;
  #L23cc46.  v2:= v2.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23cc4a.  v1.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` := v2 @kind object;
  #L23cc4e.  v2:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L23cc52.  v1.`com.huawei.hms.mlsdk.common.MLFrame.frameInit` @type ^`java.lang.Boolean` := v2 @kind object;
  #L23cc56.  @monitorexit v1
  #L23cc58.  return v1 @kind object;
  #L23cc5a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23cc5c.  @monitorexit v1
  #L23cc5e.  throw v2;
  catch `java.lang.Throwable` @[L23cb42..L23cb4e] goto L23cc5a;
  catch `java.lang.Throwable` @[L23cb5a..L23cc08] goto L23cc5a;
  catch `java.lang.Throwable` @[L23cc0c..L23cc14] goto L23cc5a;
  catch `java.lang.Throwable` @[L23cc18..L23cc56] goto L23cc5a;
}
procedure `android.graphics.Bitmap` `getPreviewBitmap`(`com.huawei.hms.mlsdk.common.MLFrame` v2 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.getPreviewBitmap:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23c51c.  v0:= v2.`com.huawei.hms.mlsdk.common.MLFrame.bytes` @type ^`byte`[] @kind object;
  #L23c520.  if v0 != 0 then goto L23c546;
  #L23c524.  v0:= v2.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` @kind object;
  #L23c528.  if v0 != 0 then goto L23c546;
  #L23c52c.  v0:= v2.`com.huawei.hms.mlsdk.common.MLFrame.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L23c530.  if v0 == 0 then goto L23c536;
  #L23c534.  goto L23c546;
  #L23c536.  v0:= new `java.lang.IllegalStateException`;
  #L23c53a.  v1:= "At least one of bytes, byteBuffer or bitmap should be not null" @kind object;
  #L23c53e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23c544.  throw v0;
  #L23c546.  call temp:= `wrapBitmap`(v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.wrapBitmap:()Landroid/graphics/Bitmap;` @kind direct;
  #L23c54c.  v0:= temp @kind object;
  #L23c54e.  return v0 @kind object;
}
procedure `int` `getRecMode`(`com.huawei.hms.mlsdk.common.MLFrame` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.getRecMode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23ccac.  v0:= v1.`com.huawei.hms.mlsdk.common.MLFrame.recMode` @type ^`int`;
  #L23ccb0.  return v0;
}
procedure `void` `initialize`(`com.huawei.hms.mlsdk.common.MLFrame` v2 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.initialize:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L23ce68.  v0:= v2.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` @kind object;
  #L23ce6c.  if v0 == 0 then goto L23ce9c;
  #L23ce70.  call temp:= `capacity`(v0) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L23ce76.  v1:= temp;
  #L23ce78.  call temp:= `allocate`(v1) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L23ce7e.  v1:= temp @kind object;
  #L23ce80.  call temp:= `rewind`(v0) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L23ce86.  call temp:= `put`(v1, v0) @signature `Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L23ce8c.  call temp:= `rewind`(v0) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L23ce92.  call temp:= `flip`(v1) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L23ce98.  v2.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` := v1 @kind object;
  #L23ce9c.  return @kind void;
}
procedure `android.graphics.Bitmap` `readBitmap`(`com.huawei.hms.mlsdk.common.MLFrame` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.readBitmap:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23c560.  v0:= v1.`com.huawei.hms.mlsdk.common.MLFrame.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L23c564.  return v0 @kind object;
}
procedure `void` `setRecMode`(`com.huawei.hms.mlsdk.common.MLFrame` v0 @kind this, `int` v1 ) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.setRecMode:(I)V` @AccessFlag PUBLIC {
    temp;

  #L23ceb0.  v0.`com.huawei.hms.mlsdk.common.MLFrame.recMode` @type ^`int` := v1;
  #L23ceb4.  return @kind void;
}
procedure `byte`[] `wrapJpeg`(`com.huawei.hms.mlsdk.common.MLFrame` v3 @kind this, `boolean` v4 ) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.wrapJpeg:(Z)[B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L23c858.  v0:= v3.`com.huawei.hms.mlsdk.common.MLFrame.bytes` @type ^`byte`[] @kind object;
  #L23c85c.  if v0 == 0 then goto L23c862;
  #L23c860.  return v0 @kind object;
  #L23c862.  v0:= 0I;
  #L23c864.  v1:= v3.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` @kind object;
  #L23c868.  if v1 == 0 then goto L23c8fc;
  #L23c86c.  v1:= v3.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23c870.  call temp:= `getFormatType`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getFormatType:()I` @kind virtual;
  #L23c876.  v1:= temp;
  #L23c878.  call temp:= `isSupportedYuvFormat`(v3, v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.isSupportedYuvFormat:(I)Z` @kind direct;
  #L23c87e.  v2:= temp;
  #L23c880.  if v2 == 0 then goto L23c8ec;
  #L23c884.  if v4 == 0 then goto L23c898;
  #L23c888.  v4:= v3.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23c88c.  call temp:= `getQuadrant`(v4) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getQuadrant:()I` @kind virtual;
  #L23c892.  v4:= temp;
  #L23c894.  if v4 != 0 then goto L23c8fc;
  #L23c898.  v4:= v3.`com.huawei.hms.mlsdk.common.MLFrame.byteBuffer` @type ^`java.nio.ByteBuffer` @kind object;
  #L23c89c.  call temp:= `buffer2Byte`(v4) @signature `Lcom/huawei/hms/ml/common/utils/ImageConvertUtils;.buffer2Byte:(Ljava/nio/ByteBuffer;)[B` @kind static;
  #L23c8a2.  v4:= temp @kind object;
  #L23c8a4.  v0:= 842094169I;
  #L23c8aa.  if v0 != v1 then goto L23c8b6;
  #L23c8ae.  call temp:= `byteToNv21`(v4) @signature `Lcom/huawei/hms/ml/common/utils/ImageConvertUtils;.byteToNv21:([B)[B` @kind static;
  #L23c8b4.  v4:= temp @kind object;
  #L23c8b6.  v0:= v3.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23c8ba.  call temp:= `getWidth`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getWidth:()I` @kind virtual;
  #L23c8c0.  v0:= temp;
  #L23c8c2.  v1:= v3.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23c8c6.  call temp:= `getHeight`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getHeight:()I` @kind virtual;
  #L23c8cc.  v1:= temp;
  #L23c8ce.  call temp:= `nv21ToJpeg`(v4, v0, v1) @signature `Lcom/huawei/hms/ml/common/utils/ImageConvertUtils;.nv21ToJpeg:([BII)[B` @kind static;
  #L23c8d4.  v0:= temp @kind object;
  #L23c8d6.  v4:= v3.`com.huawei.hms.mlsdk.common.MLFrame.property` @type ^`com.huawei.hms.mlsdk.common.MLFrame$Property` @kind object;
  #L23c8da.  call temp:= `getQuadrant`(v4) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getQuadrant:()I` @kind virtual;
  #L23c8e0.  v4:= temp;
  #L23c8e2.  if v4 != 0 then goto L23c8fc;
  #L23c8e6.  v3.`com.huawei.hms.mlsdk.common.MLFrame.bytes` @type ^`byte`[] := v0 @kind object;
  #L23c8ea.  goto L23c8fc;
  #L23c8ec.  v4:= new `java.lang.IllegalStateException`;
  #L23c8f0.  v0:= "Only support NV21 or YV12" @kind object;
  #L23c8f4.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23c8fa.  throw v4;
  #L23c8fc.  if v0 != 0 then goto L23c918;
  #L23c900.  call temp:= `wrapBitmap`(v3) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.wrapBitmap:()Landroid/graphics/Bitmap;` @kind direct;
  #L23c906.  v4:= temp @kind object;
  #L23c908.  v0:= 100I;
  #L23c90c.  call temp:= `bitmap2Jpeg`(v4, v0) @signature `Lcom/huawei/hms/ml/common/utils/ImageConvertUtils;.bitmap2Jpeg:(Landroid/graphics/Bitmap;I)[B` @kind static;
  #L23c912.  v0:= temp @kind object;
  #L23c914.  v3.`com.huawei.hms.mlsdk.common.MLFrame.bytes` @type ^`byte`[] := v0 @kind object;
  #L23c918.  return v0 @kind object;
}
