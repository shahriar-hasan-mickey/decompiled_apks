record `com.huawei.hms.mlsdk.common.MLFrame$Creator` @kind class @AccessFlag PUBLIC {
  `com.huawei.hms.mlsdk.common.MLFrame` `com.huawei.hms.mlsdk.common.MLFrame$Creator.frame` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.common.MLFrame$Creator` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L23bf9c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23bfa2.  v0:= new `com.huawei.hms.mlsdk.common.MLFrame`;
  #L23bfa6.  call `<init>`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.<init>:()V` @kind direct;
  #L23bfac.  v1.`com.huawei.hms.mlsdk.common.MLFrame$Creator.frame` @type ^`com.huawei.hms.mlsdk.common.MLFrame` := v0 @kind object;
  #L23bfb0.  return @kind void;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame` `create`(`com.huawei.hms.mlsdk.common.MLFrame$Creator` v2 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;.create:()Lcom/huawei/hms/mlsdk/common/MLFrame;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23bdb8.  v0:= v2.`com.huawei.hms.mlsdk.common.MLFrame$Creator.frame` @type ^`com.huawei.hms.mlsdk.common.MLFrame` @kind object;
  #L23bdbc.  call temp:= `access$500`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.access$500:(Lcom/huawei/hms/mlsdk/common/MLFrame;)Ljava/nio/ByteBuffer;` @kind static;
  #L23bdc2.  v0:= temp @kind object;
  #L23bdc4.  if v0 != 0 then goto L23bdea;
  #L23bdc8.  v0:= v2.`com.huawei.hms.mlsdk.common.MLFrame$Creator.frame` @type ^`com.huawei.hms.mlsdk.common.MLFrame` @kind object;
  #L23bdcc.  call temp:= `access$400`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.access$400:(Lcom/huawei/hms/mlsdk/common/MLFrame;)Landroid/graphics/Bitmap;` @kind static;
  #L23bdd2.  v0:= temp @kind object;
  #L23bdd4.  if v0 == 0 then goto L23bdda;
  #L23bdd8.  goto L23bdea;
  #L23bdda.  v0:= new `java.lang.IllegalStateException`;
  #L23bdde.  v1:= "Failed to create image instance, both bitmap and byteBuffer data are not specified." @kind object;
  #L23bde2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23bde8.  throw v0;
  #L23bdea.  v0:= v2.`com.huawei.hms.mlsdk.common.MLFrame$Creator.frame` @type ^`com.huawei.hms.mlsdk.common.MLFrame` @kind object;
  #L23bdee.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame$Creator` `setBitmap`(`com.huawei.hms.mlsdk.common.MLFrame$Creator` v3 @kind this, `android.graphics.Bitmap` v4 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;.setBitmap:(Landroid/graphics/Bitmap;)Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L23be00.  call temp:= `getWidth`(v4) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L23be06.  v0:= temp;
  #L23be08.  call temp:= `getHeight`(v4) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L23be0e.  v1:= temp;
  #L23be10.  v2:= v3.`com.huawei.hms.mlsdk.common.MLFrame$Creator.frame` @type ^`com.huawei.hms.mlsdk.common.MLFrame` @kind object;
  #L23be14.  call temp:= `access$402`(v2, v4) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.access$402:(Lcom/huawei/hms/mlsdk/common/MLFrame;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @kind static;
  #L23be1a.  v4:= v3.`com.huawei.hms.mlsdk.common.MLFrame$Creator.frame` @type ^`com.huawei.hms.mlsdk.common.MLFrame` @kind object;
  #L23be1e.  call temp:= `acquireProperty`(v4) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.acquireProperty:()Lcom/huawei/hms/mlsdk/common/MLFrame$Property;` @kind virtual;
  #L23be24.  v4:= temp @kind object;
  #L23be26.  call temp:= `access$002`(v4, v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.access$002:(Lcom/huawei/hms/mlsdk/common/MLFrame$Property;I)I` @kind static;
  #L23be2c.  call temp:= `access$102`(v4, v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.access$102:(Lcom/huawei/hms/mlsdk/common/MLFrame$Property;I)I` @kind static;
  #L23be32.  return v3 @kind object;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame$Creator` `setFramePropertyExt`(`com.huawei.hms.mlsdk.common.MLFrame$Creator` v1 @kind this, `com.huawei.hms.mlsdk.common.MLFrame$Property$Ext` v2 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;.setFramePropertyExt:(Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Ext;)Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23be44.  v0:= v1.`com.huawei.hms.mlsdk.common.MLFrame$Creator.frame` @type ^`com.huawei.hms.mlsdk.common.MLFrame` @kind object;
  #L23be48.  call temp:= `acquireProperty`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.acquireProperty:()Lcom/huawei/hms/mlsdk/common/MLFrame$Property;` @kind virtual;
  #L23be4e.  v0:= temp @kind object;
  #L23be50.  call temp:= `access$1002`(v0, v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.access$1002:(Lcom/huawei/hms/mlsdk/common/MLFrame$Property;Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Ext;)Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Ext;` @kind static;
  #L23be56.  return v1 @kind object;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame$Creator` `setItemIdentity`(`com.huawei.hms.mlsdk.common.MLFrame$Creator` v1 @kind this, `int` v2 ) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;.setItemIdentity:(I)Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23be68.  v0:= v1.`com.huawei.hms.mlsdk.common.MLFrame$Creator.frame` @type ^`com.huawei.hms.mlsdk.common.MLFrame` @kind object;
  #L23be6c.  call temp:= `acquireProperty`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.acquireProperty:()Lcom/huawei/hms/mlsdk/common/MLFrame$Property;` @kind virtual;
  #L23be72.  v0:= temp @kind object;
  #L23be74.  call temp:= `access$702`(v0, v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.access$702:(Lcom/huawei/hms/mlsdk/common/MLFrame$Property;I)I` @kind static;
  #L23be7a.  return v1 @kind object;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame$Creator` `setQuadrant`(`com.huawei.hms.mlsdk.common.MLFrame$Creator` v1 @kind this, `int` v2 ) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;.setQuadrant:(I)Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23be8c.  v0:= v1.`com.huawei.hms.mlsdk.common.MLFrame$Creator.frame` @type ^`com.huawei.hms.mlsdk.common.MLFrame` @kind object;
  #L23be90.  call temp:= `acquireProperty`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.acquireProperty:()Lcom/huawei/hms/mlsdk/common/MLFrame$Property;` @kind virtual;
  #L23be96.  v0:= temp @kind object;
  #L23be98.  call temp:= `access$902`(v0, v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.access$902:(Lcom/huawei/hms/mlsdk/common/MLFrame$Property;I)I` @kind static;
  #L23be9e.  return v1 @kind object;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame$Creator` `setTimestamp`(`com.huawei.hms.mlsdk.common.MLFrame$Creator` v1 @kind this, `long` v2 ) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;.setTimestamp:(J)Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23beb0.  v0:= v1.`com.huawei.hms.mlsdk.common.MLFrame$Creator.frame` @type ^`com.huawei.hms.mlsdk.common.MLFrame` @kind object;
  #L23beb4.  call temp:= `acquireProperty`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.acquireProperty:()Lcom/huawei/hms/mlsdk/common/MLFrame$Property;` @kind virtual;
  #L23beba.  v0:= temp @kind object;
  #L23bebc.  call temp:= `access$802`(v0, v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.access$802:(Lcom/huawei/hms/mlsdk/common/MLFrame$Property;J)J` @kind static;
  #L23bec2.  return v1 @kind object;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame$Creator` `writeByteBufferData`(`com.huawei.hms.mlsdk.common.MLFrame$Creator` v2 @kind this, `java.nio.ByteBuffer` v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;.writeByteBufferData:(Ljava/nio/ByteBuffer;III)Lcom/huawei/hms/mlsdk/common/MLFrame$Creator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23bed4.  if v3 == 0 then goto L23bf7a;
  #L23bed8.  call temp:= `capacity`(v3) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L23bede.  v0:= temp;
  #L23bee0.  v1:= v4 * v5 @kind int;
  #L23bee4.  if v0 < v1 then goto L23bf6a;
  #L23bee8.  v0:= 17I;
  #L23beec.  if v6 == v0 then goto L23bf3c;
  #L23bef0.  v0:= 16I;
  #L23bef4.  if v6 == v0 then goto L23bf3c;
  #L23bef8.  v0:= 842094169I;
  #L23befe.  if v6 != v0 then goto L23bf04;
  #L23bf02.  goto L23bf3c;
  #L23bf04.  v3:= new `java.lang.IllegalArgumentException`;
  #L23bf08.  v4:= new `java.lang.StringBuilder`;
  #L23bf0c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23bf12.  v5:= "Parameter formatType:" @kind object;
  #L23bf16.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bf1c.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bf22.  v5:= " is not supported" @kind object;
  #L23bf26.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bf2c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23bf32.  v4:= temp @kind object;
  #L23bf34.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23bf3a.  throw v3;
  #L23bf3c.  v0:= v2.`com.huawei.hms.mlsdk.common.MLFrame$Creator.frame` @type ^`com.huawei.hms.mlsdk.common.MLFrame` @kind object;
  #L23bf40.  call temp:= `access$502`(v0, v3) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.access$502:(Lcom/huawei/hms/mlsdk/common/MLFrame;Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind static;
  #L23bf46.  v3:= v2.`com.huawei.hms.mlsdk.common.MLFrame$Creator.frame` @type ^`com.huawei.hms.mlsdk.common.MLFrame` @kind object;
  #L23bf4a.  call temp:= `acquireProperty`(v3) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.acquireProperty:()Lcom/huawei/hms/mlsdk/common/MLFrame$Property;` @kind virtual;
  #L23bf50.  v3:= temp @kind object;
  #L23bf52.  if v3 == 0 then goto L23bf68;
  #L23bf56.  call temp:= `access$602`(v3, v6) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.access$602:(Lcom/huawei/hms/mlsdk/common/MLFrame$Property;I)I` @kind static;
  #L23bf5c.  call temp:= `access$002`(v3, v4) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.access$002:(Lcom/huawei/hms/mlsdk/common/MLFrame$Property;I)I` @kind static;
  #L23bf62.  call temp:= `access$102`(v3, v5) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.access$102:(Lcom/huawei/hms/mlsdk/common/MLFrame$Property;I)I` @kind static;
  #L23bf68.  return v2 @kind object;
  #L23bf6a.  v3:= new `java.lang.IllegalArgumentException`;
  #L23bf6e.  v4:= "Not enough capacity for image data size." @kind object;
  #L23bf72.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23bf78.  throw v3;
  #L23bf7a.  v3:= new `java.lang.IllegalArgumentException`;
  #L23bf7e.  v4:= "Parameter： data is not specified" @kind object;
  #L23bf82.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23bf88.  throw v3;
}
