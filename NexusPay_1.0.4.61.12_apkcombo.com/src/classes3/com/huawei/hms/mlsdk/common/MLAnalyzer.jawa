record `com.huawei.hms.mlsdk.common.MLAnalyzer` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `java.util.List` `com.huawei.hms.mlsdk.common.MLAnalyzer.monitors` @AccessFlag PRIVATE;
  `java.lang.Object` `com.huawei.hms.mlsdk.common.MLAnalyzer.syncAnalyzer` @AccessFlag PRIVATE_FINAL;
  `com.huawei.hms.mlsdk.common.MLAnalyzer$MLTransactor` `com.huawei.hms.mlsdk.common.MLAnalyzer.transactor` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.common.MLAnalyzer` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L23a53c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23a542.  v0:= new `java.util.ArrayList`;
  #L23a546.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L23a54c.  v1.`com.huawei.hms.mlsdk.common.MLAnalyzer.monitors` @type ^`java.util.List` := v0 @kind object;
  #L23a550.  v0:= new `java.lang.Object`;
  #L23a554.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23a55a.  v1.`com.huawei.hms.mlsdk.common.MLAnalyzer.syncAnalyzer` @type ^`java.lang.Object` := v0 @kind object;
  #L23a55e.  return @kind void;
}
procedure `android.util.SparseArray` `analyseFrame`(`com.huawei.hms.mlsdk.common.MLFrame` v0 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.analyseFrame:(Lcom/huawei/hms/mlsdk/common/MLFrame;)Landroid/util/SparseArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `destroy`(`com.huawei.hms.mlsdk.common.MLAnalyzer` v2 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.destroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23a570.  v0:= v2.`com.huawei.hms.mlsdk.common.MLAnalyzer.syncAnalyzer` @type ^`java.lang.Object` @kind object;
  #L23a574.  @monitorenter v0
  #L23a576.  v1:= v2.`com.huawei.hms.mlsdk.common.MLAnalyzer.transactor` @type ^`com.huawei.hms.mlsdk.common.MLAnalyzer$MLTransactor` @kind object;
  #L23a57a.  if v1 == 0 then goto L23a58e;
  #L23a57e.  v1:= v2.`com.huawei.hms.mlsdk.common.MLAnalyzer.transactor` @type ^`com.huawei.hms.mlsdk.common.MLAnalyzer$MLTransactor` @kind object;
  #L23a582.  call `destroy`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer$MLTransactor;.destroy:()V` @kind interface;
  #L23a588.  v1:= 0I;
  #L23a58a.  v2.`com.huawei.hms.mlsdk.common.MLAnalyzer.transactor` @type ^`com.huawei.hms.mlsdk.common.MLAnalyzer$MLTransactor` := v1 @kind object;
  #L23a58e.  @monitorexit v0
  #L23a590.  return @kind void;
  #L23a592.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23a594.  @monitorexit v0
  #L23a596.  throw v1;
  catch `java.lang.Throwable` @[L23a576..L23a596] goto L23a592;
}
procedure `com.huawei.hms.mlsdk.common.MLFrame$Property$Ext` `getFramePropertyExt`(`com.huawei.hms.mlsdk.common.MLAnalyzer` v1 @kind this, `com.huawei.hms.mlsdk.common.MLFrame` v2 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.getFramePropertyExt:(Lcom/huawei/hms/mlsdk/common/MLFrame;)Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Ext;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L23a504.  if v2 == 0 then goto L23a528;
  #L23a508.  call temp:= `acquireProperty`(v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.acquireProperty:()Lcom/huawei/hms/mlsdk/common/MLFrame$Property;` @kind virtual;
  #L23a50e.  v0:= temp @kind object;
  #L23a510.  if v0 != 0 then goto L23a516;
  #L23a514.  goto L23a528;
  #L23a516.  call temp:= `acquireProperty`(v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.acquireProperty:()Lcom/huawei/hms/mlsdk/common/MLFrame$Property;` @kind virtual;
  #L23a51c.  v2:= temp @kind object;
  #L23a51e.  call temp:= `getExt`(v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getExt:()Lcom/huawei/hms/mlsdk/common/MLFrame$Property$Ext;` @kind virtual;
  #L23a524.  v2:= temp @kind object;
  #L23a526.  return v2 @kind object;
  #L23a528.  v2:= 0I;
  #L23a52a.  return v2 @kind object;
}
procedure `boolean` `hasMonitorRegistered`(`com.huawei.hms.mlsdk.common.MLAnalyzer` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.hasMonitorRegistered:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23a4b8.  v0:= v1.`com.huawei.hms.mlsdk.common.MLAnalyzer.monitors` @type ^`java.util.List` @kind object;
  #L23a4bc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L23a4c2.  v0:= temp;
  #L23a4c4.  v0:= v0 ^~ 1;
  #L23a4c8.  return v0;
}
procedure `boolean` `isAvailable`(`com.huawei.hms.mlsdk.common.MLAnalyzer` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.isAvailable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23a4dc.  v0:= 1I;
  #L23a4de.  return v0;
}
procedure `void` `obtainPicture`(`com.huawei.hms.mlsdk.common.MLAnalyzer` v4 @kind this, `com.huawei.hms.mlsdk.common.MLFrame` v5 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.obtainPicture:(Lcom/huawei/hms/mlsdk/common/MLFrame;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23a5b4.  v0:= v4.`com.huawei.hms.mlsdk.common.MLAnalyzer.syncAnalyzer` @type ^`java.lang.Object` @kind object;
  #L23a5b8.  @monitorenter v0
  #L23a5ba.  v1:= v4.`com.huawei.hms.mlsdk.common.MLAnalyzer.transactor` @type ^`com.huawei.hms.mlsdk.common.MLAnalyzer$MLTransactor` @kind object;
  #L23a5be.  if v1 == 0 then goto L23a602;
  #L23a5c2.  v1:= new `com.huawei.hms.mlsdk.common.MLFrame$Property`;
  #L23a5c6.  call temp:= `acquireProperty`(v5) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.acquireProperty:()Lcom/huawei/hms/mlsdk/common/MLFrame$Property;` @kind virtual;
  #L23a5cc.  v2:= temp @kind object;
  #L23a5ce.  call `<init>`(v1, v2) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.<init>:(Lcom/huawei/hms/mlsdk/common/MLFrame$Property;)V` @kind direct;
  #L23a5d4.  call `resetWidthAndHeight`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.resetWidthAndHeight:()V` @kind virtual;
  #L23a5da.  v2:= new `com.huawei.hms.mlsdk.common.MLAnalyzer$Result`;
  #L23a5de.  call temp:= `analyseFrame`(v4, v5) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.analyseFrame:(Lcom/huawei/hms/mlsdk/common/MLFrame;)Landroid/util/SparseArray;` @kind virtual;
  #L23a5e4.  v5:= temp @kind object;
  #L23a5e6.  call temp:= `isAvailable`(v4) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.isAvailable:()Z` @kind virtual;
  #L23a5ec.  v3:= temp;
  #L23a5ee.  call `<init>`(v2, v5, v1, v3) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer$Result;.<init>:(Landroid/util/SparseArray;Lcom/huawei/hms/mlsdk/common/MLFrame$Property;Z)V` @kind direct;
  #L23a5f4.  v5:= v4.`com.huawei.hms.mlsdk.common.MLAnalyzer.transactor` @type ^`com.huawei.hms.mlsdk.common.MLAnalyzer$MLTransactor` @kind object;
  #L23a5f8.  call `transactResult`(v5, v2) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer$MLTransactor;.transactResult:(Lcom/huawei/hms/mlsdk/common/MLAnalyzer$Result;)V` @kind interface;
  #L23a5fe.  @monitorexit v0
  #L23a600.  return @kind void;
  #L23a602.  v5:= new `java.lang.IllegalStateException`;
  #L23a606.  v1:= "Transactor must be specified first to receive detection results." @kind object;
  #L23a60a.  call `<init>`(v5, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23a610.  throw v5;
  #L23a612.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23a614.  @monitorexit v0
  #L23a616.  throw v5;
  catch `java.lang.Throwable` @[L23a5ba..L23a616] goto L23a612;
}
procedure `void` `postMonitorEvent`(`com.huawei.hms.mlsdk.common.MLAnalyzer` v2 @kind this, `com.huawei.hms.mlsdk.common.internal.client.event.MonitorEvent` v3 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.postMonitorEvent:(Lcom/huawei/hms/mlsdk/common/internal/client/event/MonitorEvent;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23a634.  v0:= v2.`com.huawei.hms.mlsdk.common.MLAnalyzer.monitors` @type ^`java.util.List` @kind object;
  #L23a638.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L23a63e.  v0:= temp @kind object;
  #L23a640.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23a646.  v1:= temp;
  #L23a648.  if v1 == 0 then goto L23a666;
  #L23a64c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23a652.  v1:= temp @kind object;
  #L23a654.  v1:= (`com.huawei.hms.mlsdk.common.AnalyzerMonitor`) v1 @kind object;
  #L23a658.  if v1 != 0 then goto L23a65e;
  #L23a65c.  goto L23a640;
  #L23a65e.  call temp:= `receive`(v1, v3) @signature `Lcom/huawei/hms/mlsdk/common/AnalyzerMonitor;.receive:(Lcom/huawei/hms/mlsdk/common/internal/client/event/MonitorEvent;)Lcom/huawei/hms/mlsdk/common/internal/client/event/MonitorResult;` @kind interface;
  #L23a664.  goto L23a640;
  #L23a666.  return @kind void;
}
procedure `void` `registerMonitor`(`com.huawei.hms.mlsdk.common.MLAnalyzer` v1 @kind this, `com.huawei.hms.mlsdk.common.AnalyzerMonitor` v2 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.registerMonitor:(Lcom/huawei/hms/mlsdk/common/AnalyzerMonitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23a678.  v0:= v1.`com.huawei.hms.mlsdk.common.MLAnalyzer.monitors` @type ^`java.util.List` @kind object;
  #L23a67c.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L23a682.  return @kind void;
}
procedure `void` `setTransactor`(`com.huawei.hms.mlsdk.common.MLAnalyzer` v1 @kind this, `com.huawei.hms.mlsdk.common.MLAnalyzer$MLTransactor` v2 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.setTransactor:(Lcom/huawei/hms/mlsdk/common/MLAnalyzer$MLTransactor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23a694.  v0:= v1.`com.huawei.hms.mlsdk.common.MLAnalyzer.syncAnalyzer` @type ^`java.lang.Object` @kind object;
  #L23a698.  @monitorenter v0
  #L23a69a.  v1.`com.huawei.hms.mlsdk.common.MLAnalyzer.transactor` @type ^`com.huawei.hms.mlsdk.common.MLAnalyzer$MLTransactor` := v2 @kind object;
  #L23a69e.  @monitorexit v0
  #L23a6a0.  return @kind void;
  #L23a6a2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23a6a4.  @monitorexit v0
  #L23a6a6.  throw v2;
  catch `java.lang.Throwable` @[L23a69a..L23a6a6] goto L23a6a2;
}
procedure `boolean` `traceItem`(`com.huawei.hms.mlsdk.common.MLAnalyzer` v0 @kind this, `int` v1 ) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.traceItem:(I)Z` @AccessFlag PUBLIC {
    temp;

  #L23a4f0.  v1:= 1I;
  #L23a4f2.  return v1;
}
procedure `void` `unregisterMonitor`(`com.huawei.hms.mlsdk.common.MLAnalyzer` v1 @kind this, `com.huawei.hms.mlsdk.common.AnalyzerMonitor` v2 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.unregisterMonitor:(Lcom/huawei/hms/mlsdk/common/AnalyzerMonitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23a6c4.  v0:= v1.`com.huawei.hms.mlsdk.common.MLAnalyzer.monitors` @type ^`java.util.List` @kind object;
  #L23a6c8.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L23a6ce.  return @kind void;
}
