record `com.huawei.hms.mlsdk.common.MLCompositeAnalyzer` @kind class @AccessFlag PUBLIC extends `com.huawei.hms.mlsdk.common.MLAnalyzer` @kind class {
  `java.util.List` `com.huawei.hms.mlsdk.common.MLCompositeAnalyzer.a` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.common.MLCompositeAnalyzer` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLCompositeAnalyzer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L23b918.  call `<init>`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.<init>:()V` @kind direct;
  #L23b91e.  v0:= new `java.util.ArrayList`;
  #L23b922.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L23b928.  v1.`com.huawei.hms.mlsdk.common.MLCompositeAnalyzer.a` @type ^`java.util.List` := v0 @kind object;
  #L23b92c.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.common.MLCompositeAnalyzer` v0 @kind this, `com.huawei.hms.mlsdk.common.MLCompositeAnalyzer$1` v1 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLCompositeAnalyzer;.<init>:(Lcom/huawei/hms/mlsdk/common/MLCompositeAnalyzer$1;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L23b940.  call `<init>`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.<init>:()V` @kind direct;
  #L23b946.  v1:= new `java.util.ArrayList`;
  #L23b94a.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L23b950.  v0.`com.huawei.hms.mlsdk.common.MLCompositeAnalyzer.a` @type ^`java.util.List` := v1 @kind object;
  #L23b954.  return @kind void;
}
procedure `android.util.SparseArray` `analyseFrame`(`com.huawei.hms.mlsdk.common.MLCompositeAnalyzer` v6 @kind this, `com.huawei.hms.mlsdk.common.MLFrame` v7 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLCompositeAnalyzer;.analyseFrame:(Lcom/huawei/hms/mlsdk/common/MLFrame;)Landroid/util/SparseArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L23b814.  v0:= new `android.util.SparseArray`;
  #L23b818.  call `<init>`(v0) @signature `Landroid/util/SparseArray;.<init>:()V` @kind direct;
  #L23b81e.  v1:= v6.`com.huawei.hms.mlsdk.common.MLCompositeAnalyzer.a` @type ^`java.util.List` @kind object;
  #L23b822.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L23b828.  v1:= temp @kind object;
  #L23b82a.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23b830.  v2:= temp;
  #L23b832.  if v2 == 0 then goto L23b8bc;
  #L23b836.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23b83c.  v2:= temp @kind object;
  #L23b83e.  v2:= (`com.huawei.hms.mlsdk.common.MLAnalyzer`) v2 @kind object;
  #L23b842.  call temp:= `analyseFrame`(v2, v7) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.analyseFrame:(Lcom/huawei/hms/mlsdk/common/MLFrame;)Landroid/util/SparseArray;` @kind virtual;
  #L23b848.  v2:= temp @kind object;
  #L23b84a.  v3:= 0I;
  #L23b84c.  call temp:= `size`(v2) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L23b852.  v4:= temp;
  #L23b854.  if v3 >= v4 then goto L23b82a;
  #L23b858.  call temp:= `keyAt`(v2, v3) @signature `Landroid/util/SparseArray;.keyAt:(I)I` @kind virtual;
  #L23b85e.  v4:= temp;
  #L23b860.  call temp:= `get`(v0, v4) @signature `Landroid/util/SparseArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L23b866.  v5:= temp @kind object;
  #L23b868.  if v5 != 0 then goto L23b880;
  #L23b86c.  call temp:= `valueAt`(v2, v3) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L23b872.  v5:= temp @kind object;
  #L23b874.  call `append`(v0, v4, v5) @signature `Landroid/util/SparseArray;.append:(ILjava/lang/Object;)V` @kind virtual;
  #L23b87a.  v3:= v3 + 1;
  #L23b87e.  goto L23b84c;
  #L23b880.  v7:= new `java.lang.IllegalStateException`;
  #L23b884.  v0:= new `java.lang.StringBuilder`;
  #L23b888.  v1:= 105I;
  #L23b88c.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L23b892.  v1:= "The analyse result of item id:" @kind object;
  #L23b896.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23b89c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L23b8a2.  v1:= " already exists" @kind object;
  #L23b8a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23b8ac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23b8b2.  v0:= temp @kind object;
  #L23b8b4.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23b8ba.  throw v7;
  #L23b8bc.  return v0 @kind object;
}
procedure `void` `destroy`(`com.huawei.hms.mlsdk.common.MLCompositeAnalyzer` v2 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLCompositeAnalyzer;.destroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23b968.  v0:= v2.`com.huawei.hms.mlsdk.common.MLCompositeAnalyzer.a` @type ^`java.util.List` @kind object;
  #L23b96c.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L23b972.  v0:= temp @kind object;
  #L23b974.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23b97a.  v1:= temp;
  #L23b97c.  if v1 == 0 then goto L23b994;
  #L23b980.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23b986.  v1:= temp @kind object;
  #L23b988.  v1:= (`com.huawei.hms.mlsdk.common.MLAnalyzer`) v1 @kind object;
  #L23b98c.  call `destroy`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.destroy:()V` @kind virtual;
  #L23b992.  goto L23b974;
  #L23b994.  v0:= v2.`com.huawei.hms.mlsdk.common.MLCompositeAnalyzer.a` @type ^`java.util.List` @kind object;
  #L23b998.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L23b99e.  call `destroy`(v2) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.destroy:()V` @kind super;
  #L23b9a4.  return @kind void;
}
procedure `boolean` `isAvailable`(`com.huawei.hms.mlsdk.common.MLCompositeAnalyzer` v2 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/MLCompositeAnalyzer;.isAvailable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23b8d0.  v0:= v2.`com.huawei.hms.mlsdk.common.MLCompositeAnalyzer.a` @type ^`java.util.List` @kind object;
  #L23b8d4.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L23b8da.  v0:= temp @kind object;
  #L23b8dc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23b8e2.  v1:= temp;
  #L23b8e4.  if v1 != 0 then goto L23b8ec;
  #L23b8e8.  v0:= 1I;
  #L23b8ea.  return v0;
  #L23b8ec.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23b8f2.  v1:= temp @kind object;
  #L23b8f4.  v1:= (`com.huawei.hms.mlsdk.common.MLAnalyzer`) v1 @kind object;
  #L23b8f8.  call temp:= `isAvailable`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.isAvailable:()Z` @kind virtual;
  #L23b8fe.  v1:= temp;
  #L23b900.  if v1 != 0 then goto L23b8dc;
  #L23b904.  v0:= 0I;
  #L23b906.  return v0;
}
procedure `void` `obtainPicture`(`com.huawei.hms.mlsdk.common.MLCompositeAnalyzer` v2 @kind this, `com.huawei.hms.mlsdk.common.MLFrame` v3 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLCompositeAnalyzer;.obtainPicture:(Lcom/huawei/hms/mlsdk/common/MLFrame;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23b9b8.  v0:= v2.`com.huawei.hms.mlsdk.common.MLCompositeAnalyzer.a` @type ^`java.util.List` @kind object;
  #L23b9bc.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L23b9c2.  v0:= temp @kind object;
  #L23b9c4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23b9ca.  v1:= temp;
  #L23b9cc.  if v1 == 0 then goto L23b9e4;
  #L23b9d0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23b9d6.  v1:= temp @kind object;
  #L23b9d8.  v1:= (`com.huawei.hms.mlsdk.common.MLAnalyzer`) v1 @kind object;
  #L23b9dc.  call `obtainPicture`(v1, v3) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.obtainPicture:(Lcom/huawei/hms/mlsdk/common/MLFrame;)V` @kind virtual;
  #L23b9e2.  goto L23b9c4;
  #L23b9e4.  return @kind void;
}
procedure `void` `setTransactor`(`com.huawei.hms.mlsdk.common.MLCompositeAnalyzer` v1 @kind this, `com.huawei.hms.mlsdk.common.MLAnalyzer$MLTransactor` v2 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/MLCompositeAnalyzer;.setTransactor:(Lcom/huawei/hms/mlsdk/common/MLAnalyzer$MLTransactor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23b9f8.  v2:= new `java.lang.UnsupportedOperationException`;
  #L23b9fc.  v0:= "MultiDetector.setProcessor is not supported.  You should set a processor instance on each underlying detector instead." @kind object;
  #L23ba00.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23ba06.  throw v2;
}
