record `com.huawei.hms.mlsdk.common.LensEngine` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `com.huawei.hms.mlsdk.common.LensEngine.a` @AccessFlag PUBLIC;
  `android.content.Context` `com.huawei.hms.mlsdk.common.LensEngine.b` @AccessFlag PUBLIC;
  `com.huawei.hms.mlsdk.common.lens.LensRequest` `com.huawei.hms.mlsdk.common.LensEngine.c` @AccessFlag PUBLIC;
  `com.huawei.hms.mlsdk.common.lens.MLLensSelector` `com.huawei.hms.mlsdk.common.LensEngine.d` @AccessFlag PUBLIC;
  `com.huawei.hms.mlsdk.common.lens.LensResponse` `com.huawei.hms.mlsdk.common.LensEngine.e` @AccessFlag PUBLIC;
  `java.util.Map` `com.huawei.hms.mlsdk.common.LensEngine.f` @AccessFlag PUBLIC;
  `java.lang.Thread` `com.huawei.hms.mlsdk.common.LensEngine.g` @AccessFlag PUBLIC;
  `com.huawei.hms.mlsdk.common.LensEngine$LensAnalyzerRunable` `com.huawei.hms.mlsdk.common.LensEngine.h` @AccessFlag PUBLIC;
}
global `int` `@@com.huawei.hms.mlsdk.common.LensEngine.BACK_LENS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.huawei.hms.mlsdk.common.LensEngine.FRONT_LENS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.huawei.hms.mlsdk.common.LensEngine.LENS_ENGINE_KEY` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.huawei.hms.mlsdk.common.LensEngine` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L23a238.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23a23e.  v0:= new `java.util.IdentityHashMap`;
  #L23a242.  call `<init>`(v0) @signature `Ljava/util/IdentityHashMap;.<init>:()V` @kind direct;
  #L23a248.  v1.`com.huawei.hms.mlsdk.common.LensEngine.a` @type ^`java.util.Map` := v0 @kind object;
  #L23a24c.  v0:= new `java.util.IdentityHashMap`;
  #L23a250.  call `<init>`(v0) @signature `Ljava/util/IdentityHashMap;.<init>:()V` @kind direct;
  #L23a256.  v1.`com.huawei.hms.mlsdk.common.LensEngine.f` @type ^`java.util.Map` := v0 @kind object;
  #L23a25a.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.common.LensEngine` v0 @kind this, `com.huawei.hms.mlsdk.common.LensEngine$1` v1 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.<init>:(Lcom/huawei/hms/mlsdk/common/LensEngine$1;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L23a26c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23a272.  v1:= new `java.util.IdentityHashMap`;
  #L23a276.  call `<init>`(v1) @signature `Ljava/util/IdentityHashMap;.<init>:()V` @kind direct;
  #L23a27c.  v0.`com.huawei.hms.mlsdk.common.LensEngine.a` @type ^`java.util.Map` := v1 @kind object;
  #L23a280.  v1:= new `java.util.IdentityHashMap`;
  #L23a284.  call `<init>`(v1) @signature `Ljava/util/IdentityHashMap;.<init>:()V` @kind direct;
  #L23a28a.  v0.`com.huawei.hms.mlsdk.common.LensEngine.f` @type ^`java.util.Map` := v1 @kind object;
  #L23a28e.  return @kind void;
}
procedure `com.huawei.hms.mlsdk.common.LensEngine` `a`(`com.huawei.hms.mlsdk.common.LensEngine` v11 @kind this, `com.huawei.hms.mlsdk.common.LensEngine$SurfaceWrapper` v12 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.a:(Lcom/huawei/hms/mlsdk/common/LensEngine$SurfaceWrapper;)Lcom/huawei/hms/mlsdk/common/LensEngine;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L239e58.  v0:= v11.`com.huawei.hms.mlsdk.common.LensEngine.e` @type ^`com.huawei.hms.mlsdk.common.lens.LensResponse` @kind object;
  #L239e5c.  if v0 == 0 then goto L239e6e;
  #L239e60.  call temp:= `getLens`(v0) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensResponse;.getLens:()Landroid/hardware/Camera;` @kind virtual;
  #L239e66.  v0:= temp @kind object;
  #L239e68.  if v0 == 0 then goto L239e6e;
  #L239e6c.  return v11 @kind object;
  #L239e6e.  v0:= v11.`com.huawei.hms.mlsdk.common.LensEngine.d` @type ^`com.huawei.hms.mlsdk.common.lens.MLLensSelector` @kind object;
  #L239e72.  v1:= v11.`com.huawei.hms.mlsdk.common.LensEngine.b` @type ^`android.content.Context` @kind object;
  #L239e76.  v2:= v11.`com.huawei.hms.mlsdk.common.LensEngine.c` @type ^`com.huawei.hms.mlsdk.common.lens.LensRequest` @kind object;
  #L239e7a.  call temp:= `selectLens`(v0, v1, v2) @signature `Lcom/huawei/hms/mlsdk/common/lens/MLLensSelector;.selectLens:(Landroid/content/Context;Lcom/huawei/hms/mlsdk/common/lens/LensRequest;)Lcom/huawei/hms/mlsdk/common/lens/LensResponse;` @kind virtual;
  #L239e80.  v0:= temp @kind object;
  #L239e82.  v11.`com.huawei.hms.mlsdk.common.LensEngine.e` @type ^`com.huawei.hms.mlsdk.common.lens.LensResponse` := v0 @kind object;
  #L239e86.  if v0 == 0 then goto L23a026;
  #L239e8a.  call temp:= `getLens`(v0) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensResponse;.getLens:()Landroid/hardware/Camera;` @kind virtual;
  #L239e90.  v0:= temp @kind object;
  #L239e92.  if v0 == 0 then goto L23a026;
  #L239e96.  v0:= v11.`com.huawei.hms.mlsdk.common.LensEngine.e` @type ^`com.huawei.hms.mlsdk.common.lens.LensResponse` @kind object;
  #L239e9a.  call temp:= `getLens`(v0) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensResponse;.getLens:()Landroid/hardware/Camera;` @kind virtual;
  #L239ea0.  v0:= temp @kind object;
  #L239ea2.  v1:= new `com.huawei.hms.mlsdk.common.LensEngine$LensPreviewer`;
  #L239ea6.  v2:= 0I;
  #L239ea8.  call `<init>`(v1, v11, v2) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine$LensPreviewer;.<init>:(Lcom/huawei/hms/mlsdk/common/LensEngine;Lcom/huawei/hms/mlsdk/common/LensEngine$1;)V` @kind direct;
  #L239eae.  call `setPreviewCallbackWithBuffer`(v0, v1) @signature `Landroid/hardware/Camera;.setPreviewCallbackWithBuffer:(Landroid/hardware/Camera$PreviewCallback;)V` @kind virtual;
  #L239eb4.  v0:= v11.`com.huawei.hms.mlsdk.common.LensEngine.e` @type ^`com.huawei.hms.mlsdk.common.lens.LensResponse` @kind object;
  #L239eb8.  call temp:= `getLens`(v0) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensResponse;.getLens:()Landroid/hardware/Camera;` @kind virtual;
  #L239ebe.  v0:= temp @kind object;
  #L239ec0.  call temp:= `getParameters`(v0) @signature `Landroid/hardware/Camera;.getParameters:()Landroid/hardware/Camera$Parameters;` @kind virtual;
  #L239ec6.  v1:= temp @kind object;
  #L239ec8.  v3:= 0I;
  #L239eca.  v4:= 4I;
  #L239ecc.  v5:= 1I;
  #L239ece.  if v3 >= v4 then goto L239fce;
  #L239ed2.  v4:= new `com.huawei.hms.common.size.Size`;
  #L239ed6.  call temp:= `getPreviewSize`(v1) @signature `Landroid/hardware/Camera$Parameters;.getPreviewSize:()Landroid/hardware/Camera$Size;` @kind virtual;
  #L239edc.  v6:= temp @kind object;
  #L239ede.  v6:= v6.`android.hardware.Camera$Size.width` @type ^`int`;
  #L239ee2.  call temp:= `getPreviewSize`(v1) @signature `Landroid/hardware/Camera$Parameters;.getPreviewSize:()Landroid/hardware/Camera$Size;` @kind virtual;
  #L239ee8.  v7:= temp @kind object;
  #L239eea.  v7:= v7.`android.hardware.Camera$Size.height` @type ^`int`;
  #L239eee.  call `<init>`(v4, v6, v7) @signature `Lcom/huawei/hms/common/size/Size;.<init>:(II)V` @kind direct;
  #L239ef4.  v6:= 17I;
  #L239ef8.  call temp:= `getBitsPerPixel`(v6) @signature `Landroid/graphics/ImageFormat;.getBitsPerPixel:(I)I` @kind static;
  #L239efe.  v6:= temp;
  #L239f00.  call temp:= `getHeight`(v4) @signature `Lcom/huawei/hms/common/size/Size;.getHeight:()I` @kind virtual;
  #L239f06.  v7:= temp;
  #L239f08.  call temp:= `getWidth`(v4) @signature `Lcom/huawei/hms/common/size/Size;.getWidth:()I` @kind virtual;
  #L239f0e.  v4:= temp;
  #L239f10.  v4:= v4 * v7 @kind int;
  #L239f14.  v7:= (`long`) v4 @kind i2l;
  #L239f16.  v9:= (`long`) v6 @kind i2l;
  #L239f18.  v7:= v7 * v9 @kind long;
  #L239f1c.  v6:= (`double`) v7 @kind l2d;
  #L239f1e.  v8:= 8.0D;
  #L239f22.  v6:= v6 / v8 @kind double;
  #L239f24.  call temp:= `ceil`(v6) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L239f2a.  v6:= temp @kind wide;
  #L239f2c.  v4:= (`int`) v6 @kind d2i;
  #L239f2e.  v4:= v4 + v5 @kind int;
  #L239f30.  v4:= new `byte`[v4];
  #L239f34.  call temp:= `wrap`(v4) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L239f3a.  v5:= temp @kind object;
  #L239f3c.  call temp:= `hasArray`(v5) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L239f42.  v6:= temp;
  #L239f44.  if v6 == 0 then goto L239fbe;
  #L239f48.  call temp:= `array`(v5) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L239f4e.  v6:= temp @kind object;
  #L239f50.  if v6 != v4 then goto L239fbe;
  #L239f54.  v6:= v11.`com.huawei.hms.mlsdk.common.LensEngine.f` @type ^`java.util.Map` @kind object;
  #L239f58.  call temp:= `put`(v6, v4, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L239f5e.  v5:= new `com.huawei.hms.mlsdk.common.LensEngine$FrameMetadataHolder`;
  #L239f62.  call `<init>`(v5, v2) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine$FrameMetadataHolder;.<init>:(Lcom/huawei/hms/mlsdk/common/LensEngine$1;)V` @kind direct;
  #L239f68.  call temp:= `getPreviewSize`(v1) @signature `Landroid/hardware/Camera$Parameters;.getPreviewSize:()Landroid/hardware/Camera$Size;` @kind virtual;
  #L239f6e.  v6:= temp @kind object;
  #L239f70.  v6:= v6.`android.hardware.Camera$Size.width` @type ^`int`;
  #L239f74.  v5.`com.huawei.hms.mlsdk.common.LensEngine$FrameMetadataHolder.width` @type ^`int` := v6;
  #L239f78.  call temp:= `getPreviewSize`(v1) @signature `Landroid/hardware/Camera$Parameters;.getPreviewSize:()Landroid/hardware/Camera$Size;` @kind virtual;
  #L239f7e.  v6:= temp @kind object;
  #L239f80.  v6:= v6.`android.hardware.Camera$Size.height` @type ^`int`;
  #L239f84.  v5.`com.huawei.hms.mlsdk.common.LensEngine$FrameMetadataHolder.height` @type ^`int` := v6;
  #L239f88.  v6:= v11.`com.huawei.hms.mlsdk.common.LensEngine.e` @type ^`com.huawei.hms.mlsdk.common.lens.LensResponse` @kind object;
  #L239f8c.  call temp:= `getQuadrant`(v6) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensResponse;.getQuadrant:()I` @kind virtual;
  #L239f92.  v6:= temp;
  #L239f94.  v5.`com.huawei.hms.mlsdk.common.LensEngine$FrameMetadataHolder.quadrant` @type ^`int` := v6;
  #L239f98.  v6:= v11.`com.huawei.hms.mlsdk.common.LensEngine.c` @type ^`com.huawei.hms.mlsdk.common.lens.LensRequest` @kind object;
  #L239f9c.  call temp:= `getLensType`(v6) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensRequest;.getLensType:()I` @kind virtual;
  #L239fa2.  v6:= temp;
  #L239fa4.  v5.`com.huawei.hms.mlsdk.common.LensEngine$FrameMetadataHolder.facing` @type ^`int` := v6;
  #L239fa8.  v6:= v11.`com.huawei.hms.mlsdk.common.LensEngine.a` @type ^`java.util.Map` @kind object;
  #L239fac.  call temp:= `put`(v6, v4, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L239fb2.  call `addCallbackBuffer`(v0, v4) @signature `Landroid/hardware/Camera;.addCallbackBuffer:([B)V` @kind virtual;
  #L239fb8.  v3:= v3 + 1;
  #L239fbc.  goto L239eca;
  #L239fbe.  v12:= new `java.lang.IllegalStateException`;
  #L239fc2.  v0:= "Failed to create frame buffer with specified size." @kind object;
  #L239fc6.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L239fcc.  throw v12;
  #L239fce.  call temp:= `getSurfaceType`(v12) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine$SurfaceWrapper;.getSurfaceType:()I` @kind virtual;
  #L239fd4.  v1:= temp;
  #L239fd6.  if v1 != v5 then goto L239fea;
  #L239fda.  call temp:= `getSurfaceHolder`(v12) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine$SurfaceWrapper;.getSurfaceHolder:()Landroid/view/SurfaceHolder;` @kind virtual;
  #L239fe0.  v12:= temp @kind object;
  #L239fe2.  call `setPreviewDisplay`(v0, v12) @signature `Landroid/hardware/Camera;.setPreviewDisplay:(Landroid/view/SurfaceHolder;)V` @kind virtual;
  #L239fe8.  goto L239ff8;
  #L239fea.  call temp:= `getSurfaceTexture`(v12) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine$SurfaceWrapper;.getSurfaceTexture:()Landroid/graphics/SurfaceTexture;` @kind virtual;
  #L239ff0.  v12:= temp @kind object;
  #L239ff2.  call `setPreviewTexture`(v0, v12) @signature `Landroid/hardware/Camera;.setPreviewTexture:(Landroid/graphics/SurfaceTexture;)V` @kind virtual;
  #L239ff8.  call `startPreview`(v0) @signature `Landroid/hardware/Camera;.startPreview:()V` @kind virtual;
  #L239ffe.  v12:= new `java.lang.Thread`;
  #L23a002.  v0:= v11.`com.huawei.hms.mlsdk.common.LensEngine.h` @type ^`com.huawei.hms.mlsdk.common.LensEngine$LensAnalyzerRunable` @kind object;
  #L23a006.  call `<init>`(v12, v0) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L23a00c.  v11.`com.huawei.hms.mlsdk.common.LensEngine.g` @type ^`java.lang.Thread` := v12 @kind object;
  #L23a010.  v12:= v11.`com.huawei.hms.mlsdk.common.LensEngine.h` @type ^`com.huawei.hms.mlsdk.common.LensEngine$LensAnalyzerRunable` @kind object;
  #L23a014.  call `setActive`(v12, v5) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine$LensAnalyzerRunable;.setActive:(Z)V` @kind virtual;
  #L23a01a.  v12:= v11.`com.huawei.hms.mlsdk.common.LensEngine.g` @type ^`java.lang.Thread` @kind object;
  #L23a01e.  call `start`(v12) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L23a024.  return v11 @kind object;
  #L23a026.  v12:= new `java.io.IOException`;
  #L23a02a.  v0:= "Failed to select a suitable lens" @kind object;
  #L23a02e.  call `<init>`(v12, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23a034.  throw v12;
}
procedure `void` `close`(`com.huawei.hms.mlsdk.common.LensEngine` v4 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23a2a0.  @monitorenter v4
  #L23a2a2.  v0:= v4.`com.huawei.hms.mlsdk.common.LensEngine.h` @type ^`com.huawei.hms.mlsdk.common.LensEngine$LensAnalyzerRunable` @kind object;
  #L23a2a6.  v1:= v0.`com.huawei.hms.mlsdk.common.LensEngine$LensAnalyzerRunable.e` @type ^`boolean` @kind boolean;
  #L23a2aa.  if v1 != 0 then goto L23a2b2;
  #L23a2ae.  @monitorexit v4
  #L23a2b0.  return @kind void;
  #L23a2b2.  v1:= 0I;
  #L23a2b4.  call `setActive`(v0, v1) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine$LensAnalyzerRunable;.setActive:(Z)V` @kind virtual;
  #L23a2ba.  v0:= v4.`com.huawei.hms.mlsdk.common.LensEngine.g` @type ^`java.lang.Thread` @kind object;
  #L23a2be.  v1:= 0I;
  #L23a2c0.  if v0 == 0 then goto L23a2de;
  #L23a2c4.  call `join`(v0) @signature `Ljava/lang/Thread;.join:()V` @kind virtual;
  #L23a2ca.  goto L23a2da;
  #L23a2cc.  v0:= "LensEngine" @kind object;
  #L23a2d0.  v2:= "Analyse thread interrupted." @kind object;
  #L23a2d4.  call `e`(v0, v2) @signature `Lcom/huawei/hms/ml/common/utils/SmartLog;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L23a2da.  v4.`com.huawei.hms.mlsdk.common.LensEngine.g` @type ^`java.lang.Thread` := v1 @kind object;
  #L23a2de.  v0:= v4.`com.huawei.hms.mlsdk.common.LensEngine.e` @type ^`com.huawei.hms.mlsdk.common.lens.LensResponse` @kind object;
  #L23a2e2.  if v0 != 0 then goto L23a2ea;
  #L23a2e6.  @monitorexit v4
  #L23a2e8.  return @kind void;
  #L23a2ea.  call temp:= `getLens`(v0) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensResponse;.getLens:()Landroid/hardware/Camera;` @kind virtual;
  #L23a2f0.  v0:= temp @kind object;
  #L23a2f2.  if v0 == 0 then goto L23a33c;
  #L23a2f6.  call `stopPreview`(v0) @signature `Landroid/hardware/Camera;.stopPreview:()V` @kind virtual;
  #L23a2fc.  call `setPreviewCallbackWithBuffer`(v0, v1) @signature `Landroid/hardware/Camera;.setPreviewCallbackWithBuffer:(Landroid/hardware/Camera$PreviewCallback;)V` @kind virtual;
  #L23a302.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L23a306.  v3:= 11I;
  #L23a30a.  if v2 < v3 then goto L23a316;
  #L23a30e.  call `setPreviewTexture`(v0, v1) @signature `Landroid/hardware/Camera;.setPreviewTexture:(Landroid/graphics/SurfaceTexture;)V` @kind virtual;
  #L23a314.  goto L23a32c;
  #L23a316.  call `setPreviewDisplay`(v0, v1) @signature `Landroid/hardware/Camera;.setPreviewDisplay:(Landroid/view/SurfaceHolder;)V` @kind virtual;
  #L23a31c.  goto L23a32c;
  #L23a31e.  v2:= "LensEngine" @kind object;
  #L23a322.  v3:= "Failed to stop lens" @kind object;
  #L23a326.  call `e`(v2, v3) @signature `Lcom/huawei/hms/ml/common/utils/SmartLog;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L23a32c.  call `release`(v0) @signature `Landroid/hardware/Camera;.release:()V` @kind virtual;
  #L23a332.  v0:= v4.`com.huawei.hms.mlsdk.common.LensEngine.e` @type ^`com.huawei.hms.mlsdk.common.lens.LensResponse` @kind object;
  #L23a336.  call `setLens`(v0, v1) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensResponse;.setLens:(Landroid/hardware/Camera;)V` @kind virtual;
  #L23a33c.  v0:= v4.`com.huawei.hms.mlsdk.common.LensEngine.f` @type ^`java.util.Map` @kind object;
  #L23a340.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L23a346.  @monitorexit v4
  #L23a348.  return @kind void;
  #L23a34a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23a34c.  @monitorexit v4
  #L23a34e.  throw v0;
  catch `java.lang.Throwable` @[L23a2a2..L23a2aa] goto L23a34a;
  catch `java.lang.Throwable` @[L23a2b4..L23a2be] goto L23a34a;
  catch `java.lang.InterruptedException` @[L23a2c4..L23a2ca] goto L23a2cc;
  catch `java.lang.Throwable` @[L23a2c4..L23a2ca] goto L23a34a;
  catch `java.lang.Throwable` @[L23a2cc..L23a2e2] goto L23a34a;
  catch `java.lang.Throwable` @[L23a2ea..L23a302] goto L23a34a;
  catch `java.io.IOException` @[L23a302..L23a31c] goto L23a31e;
  catch `java.lang.Throwable` @[L23a302..L23a31c] goto L23a34a;
  catch `java.lang.Throwable` @[L23a31e..L23a346] goto L23a34a;
}
procedure `int` `doZoom`(`com.huawei.hms.mlsdk.common.LensEngine` v5 @kind this, `float` v6 ) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.doZoom:(F)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L23a13c.  @monitorenter v5
  #L23a13e.  v0:= v5.`com.huawei.hms.mlsdk.common.LensEngine.e` @type ^`com.huawei.hms.mlsdk.common.lens.LensResponse` @kind object;
  #L23a142.  call temp:= `getLens`(v0) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensResponse;.getLens:()Landroid/hardware/Camera;` @kind virtual;
  #L23a148.  v0:= temp @kind object;
  #L23a14a.  v1:= 0I;
  #L23a14c.  if v0 != 0 then goto L23a154;
  #L23a150.  @monitorexit v5
  #L23a152.  return v1;
  #L23a154.  v0:= v5.`com.huawei.hms.mlsdk.common.LensEngine.e` @type ^`com.huawei.hms.mlsdk.common.lens.LensResponse` @kind object;
  #L23a158.  call temp:= `getLens`(v0) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensResponse;.getLens:()Landroid/hardware/Camera;` @kind virtual;
  #L23a15e.  v0:= temp @kind object;
  #L23a160.  call temp:= `getParameters`(v0) @signature `Landroid/hardware/Camera;.getParameters:()Landroid/hardware/Camera$Parameters;` @kind virtual;
  #L23a166.  v0:= temp @kind object;
  #L23a168.  call temp:= `isZoomSupported`(v0) @signature `Landroid/hardware/Camera$Parameters;.isZoomSupported:()Z` @kind virtual;
  #L23a16e.  v2:= temp;
  #L23a170.  if v2 != 0 then goto L23a178;
  #L23a174.  @monitorexit v5
  #L23a176.  return v1;
  #L23a178.  call temp:= `getMaxZoom`(v0) @signature `Landroid/hardware/Camera$Parameters;.getMaxZoom:()I` @kind virtual;
  #L23a17e.  v2:= temp;
  #L23a180.  call temp:= `getZoom`(v0) @signature `Landroid/hardware/Camera$Parameters;.getZoom:()I` @kind virtual;
  #L23a186.  v3:= temp;
  #L23a188.  v3:= v3 + 1;
  #L23a18c.  v4:= 1.0F;
  #L23a190.  v4:= fcmpl(v6, v4);
  #L23a194.  v3:= (`float`) v3 @kind i2f;
  #L23a196.  if v4 <= 0 then goto L23a1aa;
  #L23a19a.  v4:= (`float`) v2 @kind i2f;
  #L23a19c.  v6:= v6 * v4 @kind float;
  #L23a1a0.  v4:= 10.0F;
  #L23a1a4.  v6:= v6 / v4 @kind float;
  #L23a1a6.  v6:= v6 + v3 @kind float;
  #L23a1a8.  goto L23a1ae;
  #L23a1aa.  v6:= v6 * v3 @kind float;
  #L23a1ae.  call temp:= `round`(v6) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L23a1b4.  v6:= temp;
  #L23a1b6.  v6:= v6 + -1;
  #L23a1ba.  if v6 >= 0 then goto L23a1c0;
  #L23a1be.  goto L23a1ca;
  #L23a1c0.  if v6 <= v2 then goto L23a1c8;
  #L23a1c4.  v1:= v2;
  #L23a1c6.  goto L23a1ca;
  #L23a1c8.  v1:= v6;
  #L23a1ca.  call `setZoom`(v0, v1) @signature `Landroid/hardware/Camera$Parameters;.setZoom:(I)V` @kind virtual;
  #L23a1d0.  v6:= v5.`com.huawei.hms.mlsdk.common.LensEngine.e` @type ^`com.huawei.hms.mlsdk.common.lens.LensResponse` @kind object;
  #L23a1d4.  call temp:= `getLens`(v6) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensResponse;.getLens:()Landroid/hardware/Camera;` @kind virtual;
  #L23a1da.  v6:= temp @kind object;
  #L23a1dc.  call `setParameters`(v6, v0) @signature `Landroid/hardware/Camera;.setParameters:(Landroid/hardware/Camera$Parameters;)V` @kind virtual;
  #L23a1e2.  @monitorexit v5
  #L23a1e4.  return v1;
  #L23a1e6.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23a1e8.  @monitorexit v5
  #L23a1ea.  throw v6;
  catch `java.lang.Throwable` @[L23a13e..L23a14a] goto L23a1e6;
  catch `java.lang.Throwable` @[L23a154..L23a170] goto L23a1e6;
  catch `java.lang.Throwable` @[L23a178..L23a1e2] goto L23a1e6;
}
procedure `com.huawei.hms.common.size.Size` `getDisplayDimension`(`com.huawei.hms.mlsdk.common.LensEngine` v3 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.getDisplayDimension:()Lcom/huawei/hms/common/size/Size;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L239e04.  call temp:= `getLens`(v3) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.getLens:()Landroid/hardware/Camera;` @kind virtual;
  #L239e0a.  v0:= temp @kind object;
  #L239e0c.  if v0 == 0 then goto L239e34;
  #L239e10.  call temp:= `getParameters`(v0) @signature `Landroid/hardware/Camera;.getParameters:()Landroid/hardware/Camera$Parameters;` @kind virtual;
  #L239e16.  v0:= temp @kind object;
  #L239e18.  call temp:= `getPreviewSize`(v0) @signature `Landroid/hardware/Camera$Parameters;.getPreviewSize:()Landroid/hardware/Camera$Size;` @kind virtual;
  #L239e1e.  v0:= temp @kind object;
  #L239e20.  v1:= new `com.huawei.hms.common.size.Size`;
  #L239e24.  v2:= v0.`android.hardware.Camera$Size.width` @type ^`int`;
  #L239e28.  v0:= v0.`android.hardware.Camera$Size.height` @type ^`int`;
  #L239e2c.  call `<init>`(v1, v2, v0) @signature `Lcom/huawei/hms/common/size/Size;.<init>:(II)V` @kind direct;
  #L239e32.  return v1 @kind object;
  #L239e34.  v0:= new `com.huawei.hms.common.size.Size`;
  #L239e38.  v1:= 640I;
  #L239e3c.  v2:= 480I;
  #L239e40.  call `<init>`(v0, v1, v2) @signature `Lcom/huawei/hms/common/size/Size;.<init>:(II)V` @kind direct;
  #L239e46.  return v0 @kind object;
}
procedure `android.hardware.Camera` `getLens`(`com.huawei.hms.mlsdk.common.LensEngine` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.getLens:()Landroid/hardware/Camera;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L239ddc.  v0:= v1.`com.huawei.hms.mlsdk.common.LensEngine.e` @type ^`com.huawei.hms.mlsdk.common.lens.LensResponse` @kind object;
  #L239de0.  if v0 == 0 then goto L239dee;
  #L239de4.  call temp:= `getLens`(v0) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensResponse;.getLens:()Landroid/hardware/Camera;` @kind virtual;
  #L239dea.  v0:= temp @kind object;
  #L239dec.  return v0 @kind object;
  #L239dee.  v0:= 0I;
  #L239df0.  return v0 @kind object;
}
procedure `int` `getLensType`(`com.huawei.hms.mlsdk.common.LensEngine` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.getLensType:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23a218.  v0:= v1.`com.huawei.hms.mlsdk.common.LensEngine.c` @type ^`com.huawei.hms.mlsdk.common.lens.LensRequest` @kind object;
  #L23a21c.  call temp:= `getLensType`(v0) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensRequest;.getLensType:()I` @kind virtual;
  #L23a222.  v0:= temp;
  #L23a224.  return v0;
}
procedure `void` `photograph`(`com.huawei.hms.mlsdk.common.LensEngine` v3 @kind this, `com.huawei.hms.mlsdk.common.LensEngine$ShutterListener` v4 @kind object, `com.huawei.hms.mlsdk.common.LensEngine$PhotographListener` v5 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.photograph:(Lcom/huawei/hms/mlsdk/common/LensEngine$ShutterListener;Lcom/huawei/hms/mlsdk/common/LensEngine$PhotographListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L23a3a8.  v0:= v3.`com.huawei.hms.mlsdk.common.LensEngine.e` @type ^`com.huawei.hms.mlsdk.common.lens.LensResponse` @kind object;
  #L23a3ac.  if v0 == 0 then goto L23a3e4;
  #L23a3b0.  call temp:= `getLens`(v0) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensResponse;.getLens:()Landroid/hardware/Camera;` @kind virtual;
  #L23a3b6.  v0:= temp @kind object;
  #L23a3b8.  if v0 == 0 then goto L23a3e4;
  #L23a3bc.  v0:= v3.`com.huawei.hms.mlsdk.common.LensEngine.e` @type ^`com.huawei.hms.mlsdk.common.lens.LensResponse` @kind object;
  #L23a3c0.  call temp:= `getLens`(v0) @signature `Lcom/huawei/hms/mlsdk/common/lens/LensResponse;.getLens:()Landroid/hardware/Camera;` @kind virtual;
  #L23a3c6.  v0:= temp @kind object;
  #L23a3c8.  v1:= new `com.huawei.hms.mlsdk.common.LensEngine$LensShutter`;
  #L23a3cc.  v2:= 0I;
  #L23a3ce.  call `<init>`(v1, v4, v2) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine$LensShutter;.<init>:(Lcom/huawei/hms/mlsdk/common/LensEngine$ShutterListener;Lcom/huawei/hms/mlsdk/common/LensEngine$1;)V` @kind direct;
  #L23a3d4.  v4:= new `com.huawei.hms.mlsdk.common.LensEngine$LensPhotograph`;
  #L23a3d8.  call `<init>`(v4, v3, v5, v2) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine$LensPhotograph;.<init>:(Lcom/huawei/hms/mlsdk/common/LensEngine;Lcom/huawei/hms/mlsdk/common/LensEngine$PhotographListener;Lcom/huawei/hms/mlsdk/common/LensEngine$1;)V` @kind direct;
  #L23a3de.  call `takePicture`(v0, v1, v2, v2, v4) @signature `Landroid/hardware/Camera;.takePicture:(Landroid/hardware/Camera$ShutterCallback;Landroid/hardware/Camera$PictureCallback;Landroid/hardware/Camera$PictureCallback;Landroid/hardware/Camera$PictureCallback;)V` @kind virtual;
  #L23a3e4.  return @kind void;
}
procedure `void` `release`(`com.huawei.hms.mlsdk.common.LensEngine` v2 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.release:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23a3f8.  @monitorenter v2
  #L23a3fa.  v0:= v2.`com.huawei.hms.mlsdk.common.LensEngine.g` @type ^`java.lang.Thread` @kind object;
  #L23a3fe.  if v0 == 0 then goto L23a412;
  #L23a402.  call `close`(v2) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.close:()V` @kind virtual;
  #L23a408.  v0:= v2.`com.huawei.hms.mlsdk.common.LensEngine.h` @type ^`com.huawei.hms.mlsdk.common.LensEngine$LensAnalyzerRunable` @kind object;
  #L23a40c.  call `release`(v0) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine$LensAnalyzerRunable;.release:()V` @kind virtual;
  #L23a412.  call temp:= `getInstance`() @signature `Lcom/huawei/hms/mlkit/common/ha/HianalyticsLogProvider;.getInstance:()Lcom/huawei/hms/mlkit/common/ha/HianalyticsLogProvider;` @kind static;
  #L23a418.  v0:= temp @kind object;
  #L23a41a.  v1:= "MLKitLensEngine" @kind object;
  #L23a41e.  call `reportAndCancelTimer`(v0, v1) @signature `Lcom/huawei/hms/mlkit/common/ha/HianalyticsLogProvider;.reportAndCancelTimer:(Ljava/lang/String;)V` @kind virtual;
  #L23a424.  @monitorexit v2
  #L23a426.  return @kind void;
  #L23a428.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23a42a.  @monitorexit v2
  #L23a42c.  throw v0;
  catch `java.lang.Throwable` @[L23a3fa..L23a424] goto L23a428;
}
procedure `com.huawei.hms.mlsdk.common.LensEngine` `run`(`com.huawei.hms.mlsdk.common.LensEngine` v2 @kind this) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.run:()Lcom/huawei/hms/mlsdk/common/LensEngine;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23a048.  @monitorenter v2
  #L23a04a.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L23a04e.  v1:= 11I;
  #L23a052.  if v0 < v1 then goto L23a06e;
  #L23a056.  v0:= new `android.graphics.SurfaceTexture`;
  #L23a05a.  v1:= 100I;
  #L23a05e.  call `<init>`(v0, v1) @signature `Landroid/graphics/SurfaceTexture;.<init>:(I)V` @kind direct;
  #L23a064.  call temp:= `run`(v2, v0) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.run:(Landroid/graphics/SurfaceTexture;)Lcom/huawei/hms/mlsdk/common/LensEngine;` @kind virtual;
  #L23a06a.  v0:= temp @kind object;
  #L23a06c.  goto L23a08c;
  #L23a06e.  v0:= new `android.view.SurfaceView`;
  #L23a072.  v1:= v2.`com.huawei.hms.mlsdk.common.LensEngine.b` @type ^`android.content.Context` @kind object;
  #L23a076.  call `<init>`(v0, v1) @signature `Landroid/view/SurfaceView;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L23a07c.  call temp:= `getHolder`(v0) @signature `Landroid/view/SurfaceView;.getHolder:()Landroid/view/SurfaceHolder;` @kind virtual;
  #L23a082.  v0:= temp @kind object;
  #L23a084.  call temp:= `run`(v2, v0) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.run:(Landroid/view/SurfaceHolder;)Lcom/huawei/hms/mlsdk/common/LensEngine;` @kind virtual;
  #L23a08a.  v0:= temp @kind object;
  #L23a08c.  @monitorexit v2
  #L23a08e.  return v0 @kind object;
  #L23a090.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23a092.  @monitorexit v2
  #L23a094.  throw v0;
  catch `java.lang.Throwable` @[L23a04a..L23a08c] goto L23a090;
}
procedure `com.huawei.hms.mlsdk.common.LensEngine` `run`(`com.huawei.hms.mlsdk.common.LensEngine` v2 @kind this, `android.graphics.SurfaceTexture` v3 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.run:(Landroid/graphics/SurfaceTexture;)Lcom/huawei/hms/mlsdk/common/LensEngine;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23a0b4.  @monitorenter v2
  #L23a0b6.  v0:= new `com.huawei.hms.mlsdk.common.LensEngine$SurfaceWrapper`;
  #L23a0ba.  v1:= 0I;
  #L23a0bc.  call `<init>`(v0, v1) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine$SurfaceWrapper;.<init>:(Lcom/huawei/hms/mlsdk/common/LensEngine$1;)V` @kind direct;
  #L23a0c2.  call `setSurfaceTexture`(v0, v3) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine$SurfaceWrapper;.setSurfaceTexture:(Landroid/graphics/SurfaceTexture;)V` @kind virtual;
  #L23a0c8.  call temp:= `a`(v2, v0) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.a:(Lcom/huawei/hms/mlsdk/common/LensEngine$SurfaceWrapper;)Lcom/huawei/hms/mlsdk/common/LensEngine;` @kind virtual;
  #L23a0ce.  v3:= temp @kind object;
  #L23a0d0.  @monitorexit v2
  #L23a0d2.  return v3 @kind object;
  #L23a0d4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23a0d6.  @monitorexit v2
  #L23a0d8.  throw v3;
  catch `java.lang.Throwable` @[L23a0b6..L23a0d0] goto L23a0d4;
}
procedure `com.huawei.hms.mlsdk.common.LensEngine` `run`(`com.huawei.hms.mlsdk.common.LensEngine` v2 @kind this, `android.view.SurfaceHolder` v3 @kind object) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.run:(Landroid/view/SurfaceHolder;)Lcom/huawei/hms/mlsdk/common/LensEngine;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23a0f8.  @monitorenter v2
  #L23a0fa.  v0:= new `com.huawei.hms.mlsdk.common.LensEngine$SurfaceWrapper`;
  #L23a0fe.  v1:= 0I;
  #L23a100.  call `<init>`(v0, v1) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine$SurfaceWrapper;.<init>:(Lcom/huawei/hms/mlsdk/common/LensEngine$1;)V` @kind direct;
  #L23a106.  call `setSurfaceHolder`(v0, v3) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine$SurfaceWrapper;.setSurfaceHolder:(Landroid/view/SurfaceHolder;)V` @kind virtual;
  #L23a10c.  call temp:= `a`(v2, v0) @signature `Lcom/huawei/hms/mlsdk/common/LensEngine;.a:(Lcom/huawei/hms/mlsdk/common/LensEngine$SurfaceWrapper;)Lcom/huawei/hms/mlsdk/common/LensEngine;` @kind virtual;
  #L23a112.  v3:= temp @kind object;
  #L23a114.  @monitorexit v2
  #L23a116.  return v3 @kind object;
  #L23a118.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23a11a.  @monitorexit v2
  #L23a11c.  throw v3;
  catch `java.lang.Throwable` @[L23a0fa..L23a114] goto L23a118;
}
