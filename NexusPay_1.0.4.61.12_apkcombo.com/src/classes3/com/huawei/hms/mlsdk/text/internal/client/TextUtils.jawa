record `com.huawei.hms.mlsdk.text.internal.client.TextUtils` @kind class @AccessFlag FINAL {
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.text.internal.client.TextUtils` v0 @kind this) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24c490.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24c496.  return @kind void;
}
procedure `android.graphics.Point`[] `compare`(`int` v10 , `int` v11 , `int` v12 , `int` v13 , `com.huawei.hms.mlsdk.text.MLText$TextLine` v14 @kind object) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.compare:(IIIILcom/huawei/hms/mlsdk/text/MLText$TextLine;)[Landroid/graphics/Point;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L24be00.  call temp:= `getVertexes`(v14) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getVertexes:()[Landroid/graphics/Point;` @kind virtual;
  #L24be06.  v0:= temp @kind object;
  #L24be08.  v1:= 0I;
  #L24be0a.  v0:= v0[v1] @kind object;
  #L24be0e.  v0:= v0.`android.graphics.Point.x` @type ^`int`;
  #L24be12.  call temp:= `getVertexes`(v14) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getVertexes:()[Landroid/graphics/Point;` @kind virtual;
  #L24be18.  v2:= temp @kind object;
  #L24be1a.  v2:= v2[v1] @kind object;
  #L24be1e.  v2:= v2.`android.graphics.Point.y` @type ^`int`;
  #L24be22.  call temp:= `getRotatingDegree`(v14) @signature `Lcom/huawei/hms/mlsdk/text/MLText$TextLine;.getRotatingDegree:()F` @kind virtual;
  #L24be28.  v3:= temp;
  #L24be2a.  v3:= (`double`) v3 @kind f2d;
  #L24be2c.  call temp:= `toRadians`(v3) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L24be32.  v3:= temp @kind wide;
  #L24be34.  call temp:= `sin`(v3) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L24be3a.  v3:= temp @kind wide;
  #L24be3c.  call temp:= `getRotatingDegree`(v14) @signature `Lcom/huawei/hms/mlsdk/text/MLText$TextLine;.getRotatingDegree:()F` @kind virtual;
  #L24be42.  v14:= temp;
  #L24be44.  v5:= (`double`) v14 @kind f2d;
  #L24be46.  call temp:= `toRadians`(v5) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L24be4c.  v5:= temp @kind wide;
  #L24be4e.  call temp:= `cos`(v5) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L24be54.  v5:= temp @kind wide;
  #L24be56.  v14:= 4I;
  #L24be58.  v7:= new `android.graphics.Point`[v14];
  #L24be5c.  v8:= new `android.graphics.Point`;
  #L24be60.  call `<init>`(v8, v10, v11) @signature `Landroid/graphics/Point;.<init>:(II)V` @kind direct;
  #L24be66.  v7[v1]:= v8 @kind object;
  #L24be6a.  v8:= new `android.graphics.Point`;
  #L24be6e.  call `<init>`(v8, v12, v11) @signature `Landroid/graphics/Point;.<init>:(II)V` @kind direct;
  #L24be74.  v11:= 1I;
  #L24be76.  v7[v11]:= v8 @kind object;
  #L24be7a.  v11:= new `android.graphics.Point`;
  #L24be7e.  call `<init>`(v11, v12, v13) @signature `Landroid/graphics/Point;.<init>:(II)V` @kind direct;
  #L24be84.  v12:= 2I;
  #L24be86.  v7[v12]:= v11 @kind object;
  #L24be8a.  v11:= new `android.graphics.Point`;
  #L24be8e.  call `<init>`(v11, v10, v13) @signature `Landroid/graphics/Point;.<init>:(II)V` @kind direct;
  #L24be94.  v10:= 3I;
  #L24be96.  v7[v10]:= v11 @kind object;
  #L24be9a.  if v1 >= v14 then goto L24befe;
  #L24be9e.  v10:= v7[v1] @kind object;
  #L24bea2.  v10:= v10.`android.graphics.Point.x` @type ^`int`;
  #L24bea6.  v10:= (`double`) v10 @kind i2d;
  #L24bea8.  v10:= v10 * v5 @kind double;
  #L24beac.  v12:= v7[v1] @kind object;
  #L24beb0.  v12:= v12.`android.graphics.Point.y` @type ^`int`;
  #L24beb4.  v12:= (`double`) v12 @kind i2d;
  #L24beb6.  v12:= v12 * v3 @kind double;
  #L24beba.  v10:= v10 - v12 @kind double;
  #L24bebc.  v10:= (`int`) v10 @kind d2i;
  #L24bebe.  v11:= v7[v1] @kind object;
  #L24bec2.  v11:= v11.`android.graphics.Point.x` @type ^`int`;
  #L24bec6.  v11:= (`double`) v11 @kind i2d;
  #L24bec8.  v11:= v11 * v3 @kind double;
  #L24becc.  v13:= v7[v1] @kind object;
  #L24bed0.  v13:= v13.`android.graphics.Point.y` @type ^`int`;
  #L24bed4.  v8:= (`double`) v13 @kind i2d;
  #L24bed6.  v8:= v8 * v5 @kind double;
  #L24beda.  v8:= v8 + v11 @kind double;
  #L24bedc.  v11:= (`int`) v8 @kind d2i;
  #L24bede.  v12:= v7[v1] @kind object;
  #L24bee2.  v12.`android.graphics.Point.x` @type ^`int` := v10;
  #L24bee6.  v10:= v7[v1] @kind object;
  #L24beea.  v10.`android.graphics.Point.y` @type ^`int` := v11;
  #L24beee.  v10:= v7[v1] @kind object;
  #L24bef2.  call `offset`(v10, v0, v2) @signature `Landroid/graphics/Point;.offset:(II)V` @kind virtual;
  #L24bef8.  v1:= v1 + 1;
  #L24befc.  goto L24be9a;
  #L24befe.  return v7 @kind object;
}
procedure `android.graphics.Point`[] `compare`(`com.huawei.hms.mlsdk.text.MLText$TextLine` v12 @kind object, `com.huawei.hms.mlsdk.text.MLText$TextLine` v13 @kind object) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.compare:(Lcom/huawei/hms/mlsdk/text/MLText$TextLine;Lcom/huawei/hms/mlsdk/text/MLText$TextLine;)[Landroid/graphics/Point;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L24bd00.  call temp:= `getVertexes`(v13) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getVertexes:()[Landroid/graphics/Point;` @kind virtual;
  #L24bd06.  v0:= temp @kind object;
  #L24bd08.  v1:= 0I;
  #L24bd0a.  v0:= v0[v1] @kind object;
  #L24bd0e.  v0:= v0.`android.graphics.Point.x` @type ^`int`;
  #L24bd12.  v0:= -v0 @kind int;
  #L24bd14.  call temp:= `getVertexes`(v13) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getVertexes:()[Landroid/graphics/Point;` @kind virtual;
  #L24bd1a.  v2:= temp @kind object;
  #L24bd1c.  v2:= v2[v1] @kind object;
  #L24bd20.  v2:= v2.`android.graphics.Point.y` @type ^`int`;
  #L24bd24.  v2:= -v2 @kind int;
  #L24bd26.  call temp:= `getRotatingDegree`(v13) @signature `Lcom/huawei/hms/mlsdk/text/MLText$TextLine;.getRotatingDegree:()F` @kind virtual;
  #L24bd2c.  v3:= temp;
  #L24bd2e.  v3:= (`double`) v3 @kind f2d;
  #L24bd30.  call temp:= `toRadians`(v3) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L24bd36.  v3:= temp @kind wide;
  #L24bd38.  call temp:= `sin`(v3) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L24bd3e.  v3:= temp @kind wide;
  #L24bd40.  call temp:= `getRotatingDegree`(v13) @signature `Lcom/huawei/hms/mlsdk/text/MLText$TextLine;.getRotatingDegree:()F` @kind virtual;
  #L24bd46.  v13:= temp;
  #L24bd48.  v5:= (`double`) v13 @kind f2d;
  #L24bd4a.  call temp:= `toRadians`(v5) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L24bd50.  v5:= temp @kind wide;
  #L24bd52.  call temp:= `cos`(v5) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L24bd58.  v5:= temp @kind wide;
  #L24bd5a.  call temp:= `getVertexes`(v12) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getVertexes:()[Landroid/graphics/Point;` @kind virtual;
  #L24bd60.  v12:= temp @kind object;
  #L24bd62.  v13:= length @variable v12;
  #L24bd64.  v13:= new `android.graphics.Point`[v13];
  #L24bd68.  v7:= length @variable v12;
  #L24bd6a.  if v1 >= v7 then goto L24bdee;
  #L24bd6e.  v7:= new `android.graphics.Point`;
  #L24bd72.  v8:= v12[v1] @kind object;
  #L24bd76.  v8:= v8.`android.graphics.Point.x` @type ^`int`;
  #L24bd7a.  v9:= v12[v1] @kind object;
  #L24bd7e.  v9:= v9.`android.graphics.Point.y` @type ^`int`;
  #L24bd82.  call `<init>`(v7, v8, v9) @signature `Landroid/graphics/Point;.<init>:(II)V` @kind direct;
  #L24bd88.  v13[v1]:= v7 @kind object;
  #L24bd8c.  v7:= v13[v1] @kind object;
  #L24bd90.  call `offset`(v7, v0, v2) @signature `Landroid/graphics/Point;.offset:(II)V` @kind virtual;
  #L24bd96.  v7:= v13[v1] @kind object;
  #L24bd9a.  v7:= v7.`android.graphics.Point.x` @type ^`int`;
  #L24bd9e.  v7:= (`double`) v7 @kind i2d;
  #L24bda0.  v7:= v7 * v5 @kind double;
  #L24bda4.  v9:= v13[v1] @kind object;
  #L24bda8.  v9:= v9.`android.graphics.Point.y` @type ^`int`;
  #L24bdac.  v9:= (`double`) v9 @kind i2d;
  #L24bdae.  v9:= v9 * v3 @kind double;
  #L24bdb2.  v9:= v9 + v7 @kind double;
  #L24bdb4.  v7:= (`int`) v9 @kind d2i;
  #L24bdb6.  v8:= v13[v1] @kind object;
  #L24bdba.  v8:= v8.`android.graphics.Point.x` @type ^`int`;
  #L24bdbe.  v8:= -v8 @kind int;
  #L24bdc0.  v8:= (`double`) v8 @kind i2d;
  #L24bdc2.  v8:= v8 * v3 @kind double;
  #L24bdc6.  v10:= v13[v1] @kind object;
  #L24bdca.  v10:= v10.`android.graphics.Point.y` @type ^`int`;
  #L24bdce.  v10:= (`double`) v10 @kind i2d;
  #L24bdd0.  v10:= v10 * v5 @kind double;
  #L24bdd4.  v10:= v10 + v8 @kind double;
  #L24bdd6.  v8:= (`int`) v10 @kind d2i;
  #L24bdd8.  v9:= v13[v1] @kind object;
  #L24bddc.  v9.`android.graphics.Point.x` @type ^`int` := v7;
  #L24bde0.  v7:= v13[v1] @kind object;
  #L24bde4.  v7.`android.graphics.Point.y` @type ^`int` := v8;
  #L24bde8.  v1:= v1 + 1;
  #L24bdec.  goto L24bd68;
  #L24bdee.  return v13 @kind object;
}
procedure `com.huawei.hms.ml.common.ocr.TextDetectorFrameParcel` `convert`(`com.huawei.hms.mlsdk.common.MLFrame` v3 @kind object) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.convert:(Lcom/huawei/hms/mlsdk/common/MLFrame;)Lcom/huawei/hms/ml/common/ocr/TextDetectorFrameParcel;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L24c21c.  v0:= new `com.huawei.hms.ml.common.ocr.TextDetectorFrameParcel`;
  #L24c220.  call `<init>`(v0) @signature `Lcom/huawei/hms/ml/common/ocr/TextDetectorFrameParcel;.<init>:()V` @kind direct;
  #L24c226.  call temp:= `acquireProperty`(v3) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.acquireProperty:()Lcom/huawei/hms/mlsdk/common/MLFrame$Property;` @kind virtual;
  #L24c22c.  v1:= temp @kind object;
  #L24c22e.  call temp:= `getWidth`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getWidth:()I` @kind virtual;
  #L24c234.  v2:= temp;
  #L24c236.  v0.`com.huawei.hms.ml.common.ocr.TextDetectorFrameParcel.width` @type ^`int` := v2;
  #L24c23a.  call temp:= `getHeight`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getHeight:()I` @kind virtual;
  #L24c240.  v2:= temp;
  #L24c242.  v0.`com.huawei.hms.ml.common.ocr.TextDetectorFrameParcel.height` @type ^`int` := v2;
  #L24c246.  call temp:= `getFormatType`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getFormatType:()I` @kind virtual;
  #L24c24c.  v2:= temp;
  #L24c24e.  v0.`com.huawei.hms.ml.common.ocr.TextDetectorFrameParcel.format` @type ^`int` := v2;
  #L24c252.  call temp:= `getQuadrant`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame$Property;.getQuadrant:()I` @kind virtual;
  #L24c258.  v1:= temp;
  #L24c25a.  v0.`com.huawei.hms.ml.common.ocr.TextDetectorFrameParcel.rotation` @type ^`int` := v1;
  #L24c25e.  call temp:= `getByteBuffer`(v3) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.getByteBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L24c264.  v1:= temp @kind object;
  #L24c266.  if v1 == 0 then goto L24c276;
  #L24c26a.  call temp:= `array`(v1) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L24c270.  v1:= temp @kind object;
  #L24c272.  v0.`com.huawei.hms.ml.common.ocr.TextDetectorFrameParcel.bytes` @type ^`byte`[] := v1 @kind object;
  #L24c276.  call temp:= `readBitmap`(v3) @signature `Lcom/huawei/hms/mlsdk/common/MLFrame;.readBitmap:()Landroid/graphics/Bitmap;` @kind virtual;
  #L24c27c.  v3:= temp @kind object;
  #L24c27e.  v0.`com.huawei.hms.ml.common.ocr.TextDetectorFrameParcel.bitmap` @type ^`android.graphics.Bitmap` := v3 @kind object;
  #L24c282.  return v0 @kind object;
}
procedure `com.huawei.hms.mlsdk.text.MLText$Word` `elementParcelToElement`(`com.huawei.hms.ml.common.ocr.ElementParcel` v7 @kind object) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.elementParcelToElement:(Lcom/huawei/hms/ml/common/ocr/ElementParcel;)Lcom/huawei/hms/mlsdk/text/MLText$Word;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L24c428.  v3:= new `java.util.ArrayList`;
  #L24c42c.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24c432.  v0:= new `com.huawei.hms.mlsdk.text.TextLanguage`;
  #L24c436.  call temp:= `getLanguage`(v7) @signature `Lcom/huawei/hms/ml/common/ocr/ElementParcel;.getLanguage:()Ljava/lang/String;` @kind virtual;
  #L24c43c.  v1:= temp @kind object;
  #L24c43e.  call `<init>`(v0, v1) @signature `Lcom/huawei/hms/mlsdk/text/TextLanguage;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24c444.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24c44a.  call temp:= `getCornerPoints`(v7) @signature `Lcom/huawei/hms/ml/common/ocr/ElementParcel;.getCornerPoints:()Ljava/util/List;` @kind virtual;
  #L24c450.  v0:= temp @kind object;
  #L24c452.  call temp:= `pointsToArray`(v0) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.pointsToArray:(Ljava/util/List;)[Landroid/graphics/Point;` @kind static;
  #L24c458.  v4:= temp @kind object;
  #L24c45a.  v6:= new `com.huawei.hms.mlsdk.text.MLText$Word`;
  #L24c45e.  call temp:= `getText`(v7) @signature `Lcom/huawei/hms/ml/common/ocr/ElementParcel;.getText:()Ljava/lang/String;` @kind virtual;
  #L24c464.  v1:= temp @kind object;
  #L24c466.  call temp:= `getElementRect`(v7) @signature `Lcom/huawei/hms/ml/common/ocr/ElementParcel;.getElementRect:()Landroid/graphics/Rect;` @kind virtual;
  #L24c46c.  v2:= temp @kind object;
  #L24c46e.  call temp:= `getConfidence`(v7) @signature `Lcom/huawei/hms/ml/common/ocr/ElementParcel;.getConfidence:()F` @kind virtual;
  #L24c474.  v5:= temp;
  #L24c476.  v0:= v6 @kind object;
  #L24c478.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Word;.<init>:(Ljava/lang/String;Landroid/graphics/Rect;Ljava/util/List;[Landroid/graphics/Point;F)V` @kind direct;
  #L24c47e.  return v6 @kind object;
}
procedure `android.graphics.Point`[] `getCornerPoints`(`java.util.List` v10 @kind object) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.getCornerPoints:(Ljava/util/List;)[Landroid/graphics/Point;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L24bf10.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24bf16.  v0:= temp;
  #L24bf18.  v1:= 0I;
  #L24bf1a.  if v0 != 0 then goto L24bf24;
  #L24bf1e.  v10:= new `android.graphics.Point`[v1];
  #L24bf22.  goto L24bfc8;
  #L24bf24.  v0:= -2147483648I;
  #L24bf28.  v2:= 2147483647I;
  #L24bf2e.  v2:= -2147483648I;
  #L24bf32.  v3:= 2147483647I;
  #L24bf38.  v4:= 2147483647I;
  #L24bf3e.  v5:= 0I;
  #L24bf40.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24bf46.  v6:= temp;
  #L24bf48.  if v5 >= v6 then goto L24bfb4;
  #L24bf4c.  call temp:= `get`(v10, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24bf52.  v6:= temp @kind object;
  #L24bf54.  v6:= (`com.huawei.hms.mlsdk.text.MLText$TextLine`) v6 @kind object;
  #L24bf58.  call temp:= `get`(v10, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24bf5e.  v7:= temp @kind object;
  #L24bf60.  v7:= (`com.huawei.hms.mlsdk.text.MLText$TextLine`) v7 @kind object;
  #L24bf64.  call temp:= `compare`(v6, v7) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.compare:(Lcom/huawei/hms/mlsdk/text/MLText$TextLine;Lcom/huawei/hms/mlsdk/text/MLText$TextLine;)[Landroid/graphics/Point;` @kind static;
  #L24bf6a.  v6:= temp @kind object;
  #L24bf6c.  v7:= 0I;
  #L24bf6e.  v8:= length @variable v6;
  #L24bf70.  if v7 >= v8 then goto L24bfae;
  #L24bf74.  v8:= v6[v7] @kind object;
  #L24bf78.  v9:= v8.`android.graphics.Point.x` @type ^`int`;
  #L24bf7c.  call temp:= `min`(v3, v9) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L24bf82.  v3:= temp;
  #L24bf84.  v9:= v8.`android.graphics.Point.x` @type ^`int`;
  #L24bf88.  call temp:= `max`(v0, v9) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L24bf8e.  v0:= temp;
  #L24bf90.  v9:= v8.`android.graphics.Point.y` @type ^`int`;
  #L24bf94.  call temp:= `min`(v4, v9) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L24bf9a.  v4:= temp;
  #L24bf9c.  v8:= v8.`android.graphics.Point.y` @type ^`int`;
  #L24bfa0.  call temp:= `max`(v2, v8) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L24bfa6.  v2:= temp;
  #L24bfa8.  v7:= v7 + 1;
  #L24bfac.  goto L24bf6e;
  #L24bfae.  v5:= v5 + 1;
  #L24bfb2.  goto L24bf40;
  #L24bfb4.  call temp:= `get`(v10, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24bfba.  v10:= temp @kind object;
  #L24bfbc.  v10:= (`com.huawei.hms.mlsdk.text.MLText$TextLine`) v10 @kind object;
  #L24bfc0.  call temp:= `compare`(v3, v4, v0, v2, v10) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.compare:(IIIILcom/huawei/hms/mlsdk/text/MLText$TextLine;)[Landroid/graphics/Point;` @kind static;
  #L24bfc6.  v10:= temp @kind object;
  #L24bfc8.  return v10 @kind object;
}
procedure `com.huawei.hms.mlsdk.text.MLText$TextLine` `lineParcelToLine`(`com.huawei.hms.ml.common.ocr.LineParcel` v8 @kind object) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.lineParcelToLine:(Lcom/huawei/hms/ml/common/ocr/LineParcel;)Lcom/huawei/hms/mlsdk/text/MLText$TextLine;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L24c37c.  v3:= new `java.util.ArrayList`;
  #L24c380.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24c386.  v0:= new `com.huawei.hms.mlsdk.text.TextLanguage`;
  #L24c38a.  call temp:= `getLanguage`(v8) @signature `Lcom/huawei/hms/ml/common/ocr/LineParcel;.getLanguage:()Ljava/lang/String;` @kind virtual;
  #L24c390.  v1:= temp @kind object;
  #L24c392.  call `<init>`(v0, v1) @signature `Lcom/huawei/hms/mlsdk/text/TextLanguage;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24c398.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24c39e.  v4:= new `java.util.ArrayList`;
  #L24c3a2.  call `<init>`(v4) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24c3a8.  call temp:= `getElements`(v8) @signature `Lcom/huawei/hms/ml/common/ocr/LineParcel;.getElements:()Ljava/util/List;` @kind virtual;
  #L24c3ae.  v0:= temp @kind object;
  #L24c3b0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L24c3b6.  v0:= temp @kind object;
  #L24c3b8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24c3be.  v1:= temp;
  #L24c3c0.  if v1 == 0 then goto L24c3e0;
  #L24c3c4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24c3ca.  v1:= temp @kind object;
  #L24c3cc.  v1:= (`com.huawei.hms.ml.common.ocr.ElementParcel`) v1 @kind object;
  #L24c3d0.  call temp:= `elementParcelToElement`(v1) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.elementParcelToElement:(Lcom/huawei/hms/ml/common/ocr/ElementParcel;)Lcom/huawei/hms/mlsdk/text/MLText$Word;` @kind static;
  #L24c3d6.  v1:= temp @kind object;
  #L24c3d8.  call temp:= `add`(v4, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24c3de.  goto L24c3b8;
  #L24c3e0.  call temp:= `getCornerPoints`(v8) @signature `Lcom/huawei/hms/ml/common/ocr/LineParcel;.getCornerPoints:()Ljava/util/List;` @kind virtual;
  #L24c3e6.  v0:= temp @kind object;
  #L24c3e8.  call temp:= `pointsToArray`(v0) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.pointsToArray:(Ljava/util/List;)[Landroid/graphics/Point;` @kind static;
  #L24c3ee.  v5:= temp @kind object;
  #L24c3f0.  v7:= new `com.huawei.hms.mlsdk.text.MLText$TextLine`;
  #L24c3f4.  call temp:= `getText`(v8) @signature `Lcom/huawei/hms/ml/common/ocr/LineParcel;.getText:()Ljava/lang/String;` @kind virtual;
  #L24c3fa.  v1:= temp @kind object;
  #L24c3fc.  call temp:= `getLineRect`(v8) @signature `Lcom/huawei/hms/ml/common/ocr/LineParcel;.getLineRect:()Landroid/graphics/Rect;` @kind virtual;
  #L24c402.  v2:= temp @kind object;
  #L24c404.  call temp:= `getConfidence`(v8) @signature `Lcom/huawei/hms/ml/common/ocr/LineParcel;.getConfidence:()F` @kind virtual;
  #L24c40a.  v6:= temp;
  #L24c40c.  v0:= v7 @kind object;
  #L24c40e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/huawei/hms/mlsdk/text/MLText$TextLine;.<init>:(Ljava/lang/String;Landroid/graphics/Rect;Ljava/util/List;Ljava/util/List;[Landroid/graphics/Point;F)V` @kind direct;
  #L24c414.  return v7 @kind object;
}
procedure `com.huawei.hms.mlsdk.text.MLText$Block` `lineSparseArrayToBlock`(`android.util.SparseArray` v9 @kind object) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.lineSparseArrayToBlock:(Landroid/util/SparseArray;)Lcom/huawei/hms/mlsdk/text/MLText$Block;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L24c294.  if v9 == 0 then goto L24c366;
  #L24c298.  call temp:= `size`(v9) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L24c29e.  v0:= temp;
  #L24c2a0.  if v0 != 0 then goto L24c2a6;
  #L24c2a4.  goto L24c366;
  #L24c2a6.  v0:= new `java.lang.StringBuilder`;
  #L24c2aa.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24c2b0.  v4:= new `java.util.ArrayList`;
  #L24c2b4.  call `<init>`(v4) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24c2ba.  v5:= new `java.util.ArrayList`;
  #L24c2be.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24c2c4.  v1:= 0I;
  #L24c2c6.  call temp:= `size`(v9) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L24c2cc.  v2:= temp;
  #L24c2ce.  v3:= 0I;
  #L24c2d0.  if v3 >= v2 then goto L24c33a;
  #L24c2d4.  call temp:= `valueAt`(v9, v3) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L24c2da.  v6:= temp @kind object;
  #L24c2dc.  v6:= (`com.huawei.hms.ml.common.ocr.LineParcel`) v6 @kind object;
  #L24c2e0.  call temp:= `lineParcelToLine`(v6) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.lineParcelToLine:(Lcom/huawei/hms/ml/common/ocr/LineParcel;)Lcom/huawei/hms/mlsdk/text/MLText$TextLine;` @kind static;
  #L24c2e6.  v7:= temp @kind object;
  #L24c2e8.  call temp:= `add`(v5, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24c2ee.  call temp:= `getConfidence`(v6) @signature `Lcom/huawei/hms/ml/common/ocr/LineParcel;.getConfidence:()F` @kind virtual;
  #L24c2f4.  v8:= temp;
  #L24c2f6.  v1:= v1 + v8 @kind float;
  #L24c2f8.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L24c2fe.  v8:= temp;
  #L24c300.  if v8 <= 0 then goto L24c30e;
  #L24c304.  v8:= "\n" @kind object;
  #L24c308.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24c30e.  call temp:= `getStringValue`(v7) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getStringValue:()Ljava/lang/String;` @kind virtual;
  #L24c314.  v7:= temp @kind object;
  #L24c316.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24c31c.  v7:= new `com.huawei.hms.mlsdk.text.TextLanguage`;
  #L24c320.  call temp:= `getLanguage`(v6) @signature `Lcom/huawei/hms/ml/common/ocr/LineParcel;.getLanguage:()Ljava/lang/String;` @kind virtual;
  #L24c326.  v6:= temp @kind object;
  #L24c328.  call `<init>`(v7, v6) @signature `Lcom/huawei/hms/mlsdk/text/TextLanguage;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24c32e.  call temp:= `add`(v4, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24c334.  v3:= v3 + 1;
  #L24c338.  goto L24c2d0;
  #L24c33a.  v9:= (`float`) v2 @kind i2f;
  #L24c33c.  v7:= v1 / v9 @kind float;
  #L24c340.  call temp:= `getCornerPoints`(v5) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.getCornerPoints:(Ljava/util/List;)[Landroid/graphics/Point;` @kind static;
  #L24c346.  v6:= temp @kind object;
  #L24c348.  call temp:= `pointsToRect`(v5) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.pointsToRect:(Ljava/util/List;)Landroid/graphics/Rect;` @kind static;
  #L24c34e.  v3:= temp @kind object;
  #L24c350.  v9:= new `com.huawei.hms.mlsdk.text.MLText$Block`;
  #L24c354.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24c35a.  v2:= temp @kind object;
  #L24c35c.  v1:= v9 @kind object;
  #L24c35e.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Block;.<init>:(Ljava/lang/String;Landroid/graphics/Rect;Ljava/util/List;Ljava/util/List;[Landroid/graphics/Point;F)V` @kind direct;
  #L24c364.  return v9 @kind object;
  #L24c366.  v9:= 0I;
  #L24c368.  return v9 @kind object;
}
procedure `android.graphics.Point`[] `pointsToArray`(`java.util.List` v3 @kind object) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.pointsToArray:(Ljava/util/List;)[Landroid/graphics/Point;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L24bfdc.  v0:= 0I;
  #L24bfde.  if v3 == 0 then goto L24c01e;
  #L24bfe2.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24bfe8.  v1:= temp;
  #L24bfea.  if v1 <= 0 then goto L24c01e;
  #L24bfee.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24bff4.  v1:= temp;
  #L24bff6.  v1:= new `android.graphics.Point`[v1];
  #L24bffa.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24c000.  v2:= temp;
  #L24c002.  if v0 >= v2 then goto L24c01c;
  #L24c006.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24c00c.  v2:= temp @kind object;
  #L24c00e.  v2:= (`android.graphics.Point`) v2 @kind object;
  #L24c012.  v1[v0]:= v2 @kind object;
  #L24c016.  v0:= v0 + 1;
  #L24c01a.  goto L24bffa;
  #L24c01c.  return v1 @kind object;
  #L24c01e.  v3:= new `android.graphics.Point`[v0];
  #L24c022.  return v3 @kind object;
}
procedure `android.graphics.Rect` `pointsToRect`(`java.util.List` v9 @kind object) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.pointsToRect:(Ljava/util/List;)Landroid/graphics/Rect;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L24c034.  call temp:= `iterator`(v9) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L24c03a.  v9:= temp @kind object;
  #L24c03c.  v0:= -2147483648I;
  #L24c040.  v1:= 2147483647I;
  #L24c046.  v1:= -2147483648I;
  #L24c04a.  v2:= 2147483647I;
  #L24c050.  v3:= 2147483647I;
  #L24c056.  call temp:= `hasNext`(v9) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24c05c.  v4:= temp;
  #L24c05e.  if v4 == 0 then goto L24c0b8;
  #L24c062.  call temp:= `next`(v9) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24c068.  v4:= temp @kind object;
  #L24c06a.  v4:= (`com.huawei.hms.mlsdk.text.MLText$TextLine`) v4 @kind object;
  #L24c06e.  call temp:= `getVertexes`(v4) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getVertexes:()[Landroid/graphics/Point;` @kind virtual;
  #L24c074.  v4:= temp @kind object;
  #L24c076.  v5:= length @variable v4;
  #L24c078.  v6:= 0I;
  #L24c07a.  if v6 >= v5 then goto L24c056;
  #L24c07e.  v7:= v4[v6] @kind object;
  #L24c082.  v8:= v7.`android.graphics.Point.x` @type ^`int`;
  #L24c086.  call temp:= `min`(v2, v8) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L24c08c.  v2:= temp;
  #L24c08e.  v8:= v7.`android.graphics.Point.x` @type ^`int`;
  #L24c092.  call temp:= `max`(v0, v8) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L24c098.  v0:= temp;
  #L24c09a.  v8:= v7.`android.graphics.Point.y` @type ^`int`;
  #L24c09e.  call temp:= `min`(v3, v8) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L24c0a4.  v3:= temp;
  #L24c0a6.  v7:= v7.`android.graphics.Point.y` @type ^`int`;
  #L24c0aa.  call temp:= `max`(v1, v7) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L24c0b0.  v1:= temp;
  #L24c0b2.  v6:= v6 + 1;
  #L24c0b6.  goto L24c07a;
  #L24c0b8.  v9:= new `android.graphics.Rect`;
  #L24c0bc.  call `<init>`(v9, v2, v3, v0, v1) @signature `Landroid/graphics/Rect;.<init>:(IIII)V` @kind direct;
  #L24c0c2.  return v9 @kind object;
}
procedure `android.util.SparseArray` `textParcelToBlock`(`com.huawei.hms.ml.common.ocr.TextParcel` v7 @kind object) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.textParcelToBlock:(Lcom/huawei/hms/ml/common/ocr/TextParcel;)Landroid/util/SparseArray;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L24c0d4.  if v7 == 0 then goto L24c200;
  #L24c0d8.  call temp:= `getBlocks`(v7) @signature `Lcom/huawei/hms/ml/common/ocr/TextParcel;.getBlocks:()Ljava/util/List;` @kind virtual;
  #L24c0de.  v0:= temp @kind object;
  #L24c0e0.  if v0 == 0 then goto L24c200;
  #L24c0e4.  call temp:= `getBlocks`(v7) @signature `Lcom/huawei/hms/ml/common/ocr/TextParcel;.getBlocks:()Ljava/util/List;` @kind virtual;
  #L24c0ea.  v0:= temp @kind object;
  #L24c0ec.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24c0f2.  v0:= temp;
  #L24c0f4.  if v0 != 0 then goto L24c0fc;
  #L24c0f8.  goto L24c200;
  #L24c0fc.  v0:= new `android.util.SparseArray`;
  #L24c100.  call `<init>`(v0) @signature `Landroid/util/SparseArray;.<init>:()V` @kind direct;
  #L24c106.  call temp:= `getBlocks`(v7) @signature `Lcom/huawei/hms/ml/common/ocr/TextParcel;.getBlocks:()Ljava/util/List;` @kind virtual;
  #L24c10c.  v7:= temp @kind object;
  #L24c10e.  v1:= new `java.util.ArrayList`;
  #L24c112.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24c118.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L24c11e.  v7:= temp @kind object;
  #L24c120.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24c126.  v2:= temp;
  #L24c128.  if v2 == 0 then goto L24c158;
  #L24c12c.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24c132.  v2:= temp @kind object;
  #L24c134.  v2:= (`com.huawei.hms.ml.common.ocr.TextBlockParcel`) v2 @kind object;
  #L24c138.  call temp:= `getLines`(v2) @signature `Lcom/huawei/hms/ml/common/ocr/TextBlockParcel;.getLines:()Ljava/util/List;` @kind virtual;
  #L24c13e.  v2:= temp @kind object;
  #L24c140.  if v2 == 0 then goto L24c120;
  #L24c144.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24c14a.  v3:= temp;
  #L24c14c.  if v3 == 0 then goto L24c120;
  #L24c150.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L24c156.  goto L24c120;
  #L24c158.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24c15e.  v7:= temp;
  #L24c160.  v2:= 0I;
  #L24c162.  v3:= 0I;
  #L24c164.  if v3 >= v7 then goto L24c1b8;
  #L24c168.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24c16e.  v4:= temp @kind object;
  #L24c170.  v4:= (`com.huawei.hms.ml.common.ocr.LineParcel`) v4 @kind object;
  #L24c174.  call temp:= `getBlockId`(v4) @signature `Lcom/huawei/hms/ml/common/ocr/LineParcel;.getBlockId:()I` @kind virtual;
  #L24c17a.  v5:= temp;
  #L24c17c.  call temp:= `get`(v0, v5) @signature `Landroid/util/SparseArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24c182.  v5:= temp @kind object;
  #L24c184.  v5:= (`android.util.SparseArray`) v5 @kind object;
  #L24c188.  if v5 != 0 then goto L24c1a4;
  #L24c18c.  v5:= new `android.util.SparseArray`;
  #L24c190.  call `<init>`(v5) @signature `Landroid/util/SparseArray;.<init>:()V` @kind direct;
  #L24c196.  call temp:= `getBlockId`(v4) @signature `Lcom/huawei/hms/ml/common/ocr/LineParcel;.getBlockId:()I` @kind virtual;
  #L24c19c.  v6:= temp;
  #L24c19e.  call `append`(v0, v6, v5) @signature `Landroid/util/SparseArray;.append:(ILjava/lang/Object;)V` @kind virtual;
  #L24c1a4.  call temp:= `getLineNum`(v4) @signature `Lcom/huawei/hms/ml/common/ocr/LineParcel;.getLineNum:()I` @kind virtual;
  #L24c1aa.  v6:= temp;
  #L24c1ac.  call `append`(v5, v6, v4) @signature `Landroid/util/SparseArray;.append:(ILjava/lang/Object;)V` @kind virtual;
  #L24c1b2.  v3:= v3 + 1;
  #L24c1b6.  goto L24c164;
  #L24c1b8.  v7:= new `android.util.SparseArray`;
  #L24c1bc.  call temp:= `size`(v0) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L24c1c2.  v1:= temp;
  #L24c1c4.  call `<init>`(v7, v1) @signature `Landroid/util/SparseArray;.<init>:(I)V` @kind direct;
  #L24c1ca.  call temp:= `size`(v0) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L24c1d0.  v1:= temp;
  #L24c1d2.  if v2 >= v1 then goto L24c1fe;
  #L24c1d6.  call temp:= `keyAt`(v0, v2) @signature `Landroid/util/SparseArray;.keyAt:(I)I` @kind virtual;
  #L24c1dc.  v1:= temp;
  #L24c1de.  call temp:= `valueAt`(v0, v2) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L24c1e4.  v3:= temp @kind object;
  #L24c1e6.  v3:= (`android.util.SparseArray`) v3 @kind object;
  #L24c1ea.  call temp:= `lineSparseArrayToBlock`(v3) @signature `Lcom/huawei/hms/mlsdk/text/internal/client/TextUtils;.lineSparseArrayToBlock:(Landroid/util/SparseArray;)Lcom/huawei/hms/mlsdk/text/MLText$Block;` @kind static;
  #L24c1f0.  v3:= temp @kind object;
  #L24c1f2.  call `append`(v7, v1, v3) @signature `Landroid/util/SparseArray;.append:(ILjava/lang/Object;)V` @kind virtual;
  #L24c1f8.  v2:= v2 + 1;
  #L24c1fc.  goto L24c1ca;
  #L24c1fe.  return v7 @kind object;
  #L24c200.  v7:= new `android.util.SparseArray`;
  #L24c204.  call `<init>`(v7) @signature `Landroid/util/SparseArray;.<init>:()V` @kind direct;
  #L24c20a.  return v7 @kind object;
}
