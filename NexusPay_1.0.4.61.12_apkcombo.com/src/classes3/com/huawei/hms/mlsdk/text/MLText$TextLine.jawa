record `com.huawei.hms.mlsdk.text.MLText$TextLine` @kind class @AccessFlag PUBLIC extends `com.huawei.hms.mlsdk.text.MLText$Base` @kind class {
  `java.util.List` `com.huawei.hms.mlsdk.text.MLText$TextLine.words` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.text.MLText$TextLine` v7 @kind this, `java.lang.String` v8 @kind object, `android.graphics.Rect` v9 @kind object, `java.util.List` v10 @kind object, `java.util.List` v11 @kind object, `android.graphics.Point`[] v12 @kind object, `float` v13 ) @signature `Lcom/huawei/hms/mlsdk/text/MLText$TextLine;.<init>:(Ljava/lang/String;Landroid/graphics/Rect;Ljava/util/List;Ljava/util/List;[Landroid/graphics/Point;F)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L249bfc.  v6:= 0I;
  #L249bfe.  v0:= v7 @kind object;
  #L249c00.  v1:= v8 @kind object;
  #L249c02.  v2:= v9 @kind object;
  #L249c04.  v3:= v10 @kind object;
  #L249c06.  v4:= v12 @kind object;
  #L249c08.  v5:= v13;
  #L249c0a.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.<init>:(Ljava/lang/String;Landroid/graphics/Rect;Ljava/util/List;[Landroid/graphics/Point;FLcom/huawei/hms/mlsdk/text/MLText$1;)V` @kind direct;
  #L249c10.  v7.`com.huawei.hms.mlsdk.text.MLText$TextLine.words` @type ^`java.util.List` := v11 @kind object;
  #L249c14.  return @kind void;
}
procedure `java.util.List` `getContents`(`com.huawei.hms.mlsdk.text.MLText$TextLine` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/text/MLText$TextLine;.getContents:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249bd0.  @monitorenter v1
  #L249bd2.  v0:= v1.`com.huawei.hms.mlsdk.text.MLText$TextLine.words` @type ^`java.util.List` @kind object;
  #L249bd6.  @monitorexit v1
  #L249bd8.  return v0 @kind object;
  #L249bda.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L249bdc.  @monitorexit v1
  #L249bde.  throw v0;
  catch `java.lang.Throwable` @[L249bd2..L249bd6] goto L249bda;
}
procedure `float` `getRotatingDegree`(`com.huawei.hms.mlsdk.text.MLText$TextLine` v6 @kind this) @signature `Lcom/huawei/hms/mlsdk/text/MLText$TextLine;.getRotatingDegree:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L249b44.  call temp:= `getVertexes`(v6) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getVertexes:()[Landroid/graphics/Point;` @kind virtual;
  #L249b4a.  v0:= temp @kind object;
  #L249b4c.  if v0 == 0 then goto L249baa;
  #L249b50.  v1:= length @variable v0;
  #L249b52.  v2:= 2I;
  #L249b54.  if v1 < v2 then goto L249baa;
  #L249b58.  v1:= 1I;
  #L249b5a.  v2:= v0[v1] @kind object;
  #L249b5e.  v2:= v2.`android.graphics.Point.y` @type ^`int`;
  #L249b62.  v3:= 0I;
  #L249b64.  v4:= v0[v3] @kind object;
  #L249b68.  v4:= v4.`android.graphics.Point.y` @type ^`int`;
  #L249b6c.  v2:= v2 - v4 @kind int;
  #L249b6e.  v4:= (`double`) v2 @kind i2d;
  #L249b70.  v1:= v0[v1] @kind object;
  #L249b74.  v1:= v1.`android.graphics.Point.x` @type ^`int`;
  #L249b78.  v0:= v0[v3] @kind object;
  #L249b7c.  v0:= v0.`android.graphics.Point.x` @type ^`int`;
  #L249b80.  v1:= v1 - v0 @kind int;
  #L249b82.  v0:= (`double`) v1 @kind i2d;
  #L249b84.  call temp:= `atan2`(v4, v0) @signature `Ljava/lang/Math;.atan2:(DD)D` @kind static;
  #L249b8a.  v0:= temp @kind wide;
  #L249b8c.  v2:= 180.0D;
  #L249b96.  v0:= v0 * v2 @kind double;
  #L249b9a.  v2:= 3.141592653589793D;
  #L249ba4.  v0:= v0 / v2 @kind double;
  #L249ba6.  v0:= (`float`) v0 @kind d2f;
  #L249ba8.  goto L249bac;
  #L249baa.  v0:= 0I;
  #L249bac.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(F)Ljava/lang/String;` @kind static;
  #L249bb2.  v1:= temp @kind object;
  #L249bb4.  v2:= "MLText-Angle:" @kind object;
  #L249bb8.  call `d`(v2, v1) @signature `Lcom/huawei/hms/ml/common/base/SmartLog;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L249bbe.  return v0;
}
procedure `boolean` `isVertical`(`com.huawei.hms.mlsdk.text.MLText$TextLine` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/text/MLText$TextLine;.isVertical:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249b30.  v0:= 0I;
  #L249b32.  return v0;
}
