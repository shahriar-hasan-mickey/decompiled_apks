record `com.huawei.hms.mlsdk.text.MLText$Base` @kind class @AccessFlag PUBLIC extends `com.huawei.hms.mlsdk.text.MLText$Text` @kind interface {
  `java.util.List` `com.huawei.hms.mlsdk.text.MLText$Base.languageList` @AccessFlag PRIVATE;
  `float` `com.huawei.hms.mlsdk.text.MLText$Base.possibility` @AccessFlag PRIVATE;
  `android.graphics.Rect` `com.huawei.hms.mlsdk.text.MLText$Base.rect` @AccessFlag PRIVATE;
  `java.lang.String` `com.huawei.hms.mlsdk.text.MLText$Base.text` @AccessFlag PRIVATE;
  `android.graphics.Point`[] `com.huawei.hms.mlsdk.text.MLText$Base.vertexes` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.text.MLText$Base` v0 @kind this, `java.lang.String` v1 @kind object, `android.graphics.Rect` v2 @kind object, `java.util.List` v3 @kind object, `android.graphics.Point`[] v4 @kind object, `float` v5 ) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.<init>:(Ljava/lang/String;Landroid/graphics/Rect;Ljava/util/List;[Landroid/graphics/Point;F)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L249aa8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L249aae.  v0.`com.huawei.hms.mlsdk.text.MLText$Base.possibility` @type ^`float` := v5;
  #L249ab2.  v0.`com.huawei.hms.mlsdk.text.MLText$Base.vertexes` @type ^`android.graphics.Point`[] := v4 @kind object;
  #L249ab6.  v0.`com.huawei.hms.mlsdk.text.MLText$Base.text` @type ^`java.lang.String` := v1 @kind object;
  #L249aba.  v0.`com.huawei.hms.mlsdk.text.MLText$Base.rect` @type ^`android.graphics.Rect` := v2 @kind object;
  #L249abe.  v0.`com.huawei.hms.mlsdk.text.MLText$Base.languageList` @type ^`java.util.List` := v3 @kind object;
  #L249ac2.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.text.MLText$Base` v0 @kind this, `java.lang.String` v1 @kind object, `android.graphics.Rect` v2 @kind object, `java.util.List` v3 @kind object, `android.graphics.Point`[] v4 @kind object, `float` v5 , `com.huawei.hms.mlsdk.text.MLText$1` v6 @kind object) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.<init>:(Ljava/lang/String;Landroid/graphics/Rect;Ljava/util/List;[Landroid/graphics/Point;FLcom/huawei/hms/mlsdk/text/MLText$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L249ad4.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.<init>:(Ljava/lang/String;Landroid/graphics/Rect;Ljava/util/List;[Landroid/graphics/Point;F)V` @kind direct;
  #L249ada.  return @kind void;
}
procedure `android.graphics.Rect` `getBorder`(`com.huawei.hms.mlsdk.text.MLText$Base` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getBorder:()Landroid/graphics/Rect;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249904.  v0:= v1.`com.huawei.hms.mlsdk.text.MLText$Base.rect` @type ^`android.graphics.Rect` @kind object;
  #L249908.  return v0 @kind object;
}
procedure `java.util.List` `getContents`(`com.huawei.hms.mlsdk.text.MLText$Base` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getContents:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249a7c.  v0:= 0I;
  #L249a7e.  return v0 @kind object;
}
procedure `java.lang.String` `getLanguage`(`com.huawei.hms.mlsdk.text.MLText$Base` v6 @kind this) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getLanguage:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L249948.  v0:= v6.`com.huawei.hms.mlsdk.text.MLText$Base.languageList` @type ^`java.util.List` @kind object;
  #L24994c.  v1:= "und" @kind object;
  #L249950.  if v0 == 0 then goto L249a4a;
  #L249954.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L24995a.  v0:= temp;
  #L24995c.  if v0 == 0 then goto L249964;
  #L249960.  goto L249a4a;
  #L249964.  v0:= new `java.util.HashMap`;
  #L249968.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L24996e.  v2:= v6.`com.huawei.hms.mlsdk.text.MLText$Base.languageList` @type ^`java.util.List` @kind object;
  #L249972.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L249978.  v2:= temp @kind object;
  #L24997a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L249980.  v3:= temp;
  #L249982.  v4:= 0I;
  #L249984.  if v3 == 0 then goto L2499d0;
  #L249988.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24998e.  v3:= temp @kind object;
  #L249990.  v3:= (`com.huawei.hms.mlsdk.text.TextLanguage`) v3 @kind object;
  #L249994.  call temp:= `getLanguage`(v3) @signature `Lcom/huawei/hms/mlsdk/text/TextLanguage;.getLanguage:()Ljava/lang/String;` @kind virtual;
  #L24999a.  v3:= temp @kind object;
  #L24999c.  call temp:= `containsKey`(v0, v3) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L2499a2.  v5:= temp;
  #L2499a4.  if v5 == 0 then goto L2499bc;
  #L2499a8.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2499ae.  v4:= temp @kind object;
  #L2499b0.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L2499b4.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2499ba.  v4:= temp;
  #L2499bc.  v4:= v4 + 1;
  #L2499c0.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2499c6.  v4:= temp @kind object;
  #L2499c8.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2499ce.  goto L24997a;
  #L2499d0.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2499d6.  v0:= temp @kind object;
  #L2499d8.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2499de.  v0:= temp @kind object;
  #L2499e0.  v2:= "" @kind object;
  #L2499e4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2499ea.  v3:= temp;
  #L2499ec.  if v3 == 0 then goto L249a36;
  #L2499f0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2499f6.  v3:= temp @kind object;
  #L2499f8.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L2499fc.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L249a02.  v5:= temp @kind object;
  #L249a04.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L249a08.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L249a0e.  v5:= temp;
  #L249a10.  if v4 >= v5 then goto L2499e4;
  #L249a14.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L249a1a.  v2:= temp @kind object;
  #L249a1c.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L249a20.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L249a26.  v4:= temp;
  #L249a28.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L249a2e.  v2:= temp @kind object;
  #L249a30.  v2:= (`java.lang.String`) v2 @kind object;
  #L249a34.  goto L2499e4;
  #L249a36.  if v2 == 0 then goto L249a4a;
  #L249a3a.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L249a40.  v0:= temp;
  #L249a42.  if v0 == 0 then goto L249a48;
  #L249a46.  goto L249a4a;
  #L249a48.  v1:= v2 @kind object;
  #L249a4a.  return v1 @kind object;
}
procedure `java.util.List` `getLanguageList`(`com.huawei.hms.mlsdk.text.MLText$Base` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getLanguageList:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249a90.  v0:= v1.`com.huawei.hms.mlsdk.text.MLText$Base.languageList` @type ^`java.util.List` @kind object;
  #L249a94.  return v0 @kind object;
}
procedure `java.lang.Float` `getPossibility`(`com.huawei.hms.mlsdk.text.MLText$Base` v2 @kind this) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getPossibility:()Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24991c.  v0:= v2.`com.huawei.hms.mlsdk.text.MLText$Base.possibility` @type ^`float`;
  #L249920.  v1:= 0I;
  #L249922.  v1:= fcmpl(v0, v1);
  #L249926.  if v1 != 0 then goto L24992e;
  #L24992a.  v0:= 0I;
  #L24992c.  return v0 @kind object;
  #L24992e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L249934.  v0:= temp @kind object;
  #L249936.  return v0 @kind object;
}
procedure `java.lang.String` `getStringValue`(`com.huawei.hms.mlsdk.text.MLText$Base` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getStringValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249a5c.  v0:= v1.`com.huawei.hms.mlsdk.text.MLText$Base.text` @type ^`java.lang.String` @kind object;
  #L249a60.  if v0 != 0 then goto L249a68;
  #L249a64.  v0:= "" @kind object;
  #L249a68.  return v0 @kind object;
}
procedure `android.graphics.Point`[] `getVertexes`(`com.huawei.hms.mlsdk.text.MLText$Base` v2 @kind this) @signature `Lcom/huawei/hms/mlsdk/text/MLText$Base;.getVertexes:()[Landroid/graphics/Point;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2498d4.  v0:= v2.`com.huawei.hms.mlsdk.text.MLText$Base.vertexes` @type ^`android.graphics.Point`[] @kind object;
  #L2498d8.  if v0 == 0 then goto L2498ec;
  #L2498dc.  v1:= length @variable v0;
  #L2498de.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2498e4.  v0:= temp @kind object;
  #L2498e6.  v0:= (`android.graphics.Point`[]) v0 @kind object;
  #L2498ea.  goto L2498f2;
  #L2498ec.  v0:= 0I;
  #L2498ee.  v0:= new `android.graphics.Point`[v0];
  #L2498f2.  return v0 @kind object;
}
