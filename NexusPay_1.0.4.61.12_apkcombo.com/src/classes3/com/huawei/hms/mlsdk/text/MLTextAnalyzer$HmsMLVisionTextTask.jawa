record `com.huawei.hms.mlsdk.text.MLTextAnalyzer$HmsMLVisionTextTask` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
}
procedure `void` `<init>`(`com.huawei.hms.mlsdk.text.MLTextAnalyzer$HmsMLVisionTextTask` v0 @kind this) @signature `Lcom/huawei/hms/mlsdk/text/MLTextAnalyzer$HmsMLVisionTextTask;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L249d38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L249d3e.  return @kind void;
}
procedure `com.huawei.hms.mlsdk.text.MLText` `call`(`com.huawei.hms.mlsdk.text.MLTextAnalyzer$HmsMLVisionTextTask` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/text/MLTextAnalyzer$HmsMLVisionTextTask;.call:()Lcom/huawei/hms/mlsdk/text/MLText;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249d00.  v0:= new `com.huawei.hms.mlsdk.text.MLText`;
  #L249d04.  call `<init>`(v0) @signature `Lcom/huawei/hms/mlsdk/text/MLText;.<init>:()V` @kind direct;
  #L249d0a.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`com.huawei.hms.mlsdk.text.MLTextAnalyzer$HmsMLVisionTextTask` v1 @kind this) @signature `Lcom/huawei/hms/mlsdk/text/MLTextAnalyzer$HmsMLVisionTextTask;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L249d1c.  call temp:= `call`(v1) @signature `Lcom/huawei/hms/mlsdk/text/MLTextAnalyzer$HmsMLVisionTextTask;.call:()Lcom/huawei/hms/mlsdk/text/MLText;` @kind virtual;
  #L249d22.  v0:= temp @kind object;
  #L249d24.  return v0 @kind object;
}
