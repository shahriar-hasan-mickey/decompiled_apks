record `com.huawei.hms.framework.common.RunnableEnhance` @kind class @AccessFlag PUBLIC extends `java.lang.Runnable` @kind interface {
  `java.lang.String` `com.huawei.hms.framework.common.RunnableEnhance.parentName` @AccessFlag PRIVATE;
  `java.lang.Runnable` `com.huawei.hms.framework.common.RunnableEnhance.proxy` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.huawei.hms.framework.common.RunnableEnhance.TRANCELOGO` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`com.huawei.hms.framework.common.RunnableEnhance` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lcom/huawei/hms/framework/common/RunnableEnhance;.<init>:(Ljava/lang/Runnable;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L20b5dc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20b5e2.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L20b5e8.  v0:= temp @kind object;
  #L20b5ea.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L20b5f0.  v0:= temp @kind object;
  #L20b5f2.  v1.`com.huawei.hms.framework.common.RunnableEnhance.parentName` @type ^`java.lang.String` := v0 @kind object;
  #L20b5f6.  v1.`com.huawei.hms.framework.common.RunnableEnhance.proxy` @type ^`java.lang.Runnable` := v2 @kind object;
  #L20b5fa.  return @kind void;
}
procedure `java.lang.String` `getParentName`(`com.huawei.hms.framework.common.RunnableEnhance` v1 @kind this) @signature `Lcom/huawei/hms/framework/common/RunnableEnhance;.getParentName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20b5c4.  v0:= v1.`com.huawei.hms.framework.common.RunnableEnhance.parentName` @type ^`java.lang.String` @kind object;
  #L20b5c8.  return v0 @kind object;
}
procedure `void` `run`(`com.huawei.hms.framework.common.RunnableEnhance` v1 @kind this) @signature `Lcom/huawei/hms/framework/common/RunnableEnhance;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20b60c.  v0:= v1.`com.huawei.hms.framework.common.RunnableEnhance.proxy` @type ^`java.lang.Runnable` @kind object;
  #L20b610.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L20b616.  return @kind void;
}
