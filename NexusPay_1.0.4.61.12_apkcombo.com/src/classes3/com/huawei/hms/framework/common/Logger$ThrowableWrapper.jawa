record `com.huawei.hms.framework.common.Logger$ThrowableWrapper` @kind class @AccessFlag  extends `java.lang.Throwable` @kind class {
  `java.lang.String` `com.huawei.hms.framework.common.Logger$ThrowableWrapper.message` @AccessFlag PRIVATE;
  `java.lang.Throwable` `com.huawei.hms.framework.common.Logger$ThrowableWrapper.ownerThrowable` @AccessFlag PRIVATE;
  `java.lang.Throwable` `com.huawei.hms.framework.common.Logger$ThrowableWrapper.thisCause` @AccessFlag PRIVATE;
}
global `long` `@@com.huawei.hms.framework.common.Logger$ThrowableWrapper.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.huawei.hms.framework.common.Logger$ThrowableWrapper` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lcom/huawei/hms/framework/common/Logger$ThrowableWrapper;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L20809c.  call `<init>`(v3) @signature `Ljava/lang/Throwable;.<init>:()V` @kind direct;
  #L2080a2.  v3.`com.huawei.hms.framework.common.Logger$ThrowableWrapper.ownerThrowable` @type ^`java.lang.Throwable` := v4 @kind object;
  #L2080a6.  call temp:= `getStackTrace`(v4) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L2080ac.  v0:= temp @kind object;
  #L2080ae.  v1:= instanceof @variable v4 @type ^`java.io.IOException` @kind boolean;
  #L2080b2.  if v1 != 0 then goto L2080c6;
  #L2080b6.  v1:= instanceof @variable v4 @type ^`org.json.JSONException` @kind boolean;
  #L2080ba.  if v1 == 0 then goto L2080c0;
  #L2080be.  goto L2080c6;
  #L2080c0.  v1:= 20I;
  #L2080c4.  goto L2080ca;
  #L2080c6.  v1:= 8I;
  #L2080ca.  v2:= length @variable v0;
  #L2080cc.  if v2 <= v1 then goto L2080e4;
  #L2080d0.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2080d6.  v0:= temp @kind object;
  #L2080d8.  v0:= (`java.lang.StackTraceElement`[]) v0 @kind object;
  #L2080dc.  call `setStackTrace`(v3, v0) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L2080e2.  goto L2080ea;
  #L2080e4.  call `setStackTrace`(v3, v0) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L2080ea.  call temp:= `getMessage`(v4) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2080f0.  v4:= temp @kind object;
  #L2080f2.  call temp:= `anonymizeMessage`(v4) @signature `Lcom/huawei/hms/framework/common/StringUtils;.anonymizeMessage:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2080f8.  v4:= temp @kind object;
  #L2080fa.  call `setMessage`(v3, v4) @signature `Lcom/huawei/hms/framework/common/Logger$ThrowableWrapper;.setMessage:(Ljava/lang/String;)V` @kind virtual;
  #L208100.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.framework.common.Logger$ThrowableWrapper` v0 @kind this, `java.lang.Throwable` v1 @kind object, `com.huawei.hms.framework.common.Logger$1` v2 @kind object) @signature `Lcom/huawei/hms/framework/common/Logger$ThrowableWrapper;.<init>:(Ljava/lang/Throwable;Lcom/huawei/hms/framework/common/Logger$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L208114.  call `<init>`(v0, v1) @signature `Lcom/huawei/hms/framework/common/Logger$ThrowableWrapper;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L20811a.  return @kind void;
}
procedure `void` `access$100`(`com.huawei.hms.framework.common.Logger$ThrowableWrapper` v0 @kind object, `java.lang.Throwable` v1 @kind object) @signature `Lcom/huawei/hms/framework/common/Logger$ThrowableWrapper;.access$100:(Lcom/huawei/hms/framework/common/Logger$ThrowableWrapper;Ljava/lang/Throwable;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20812c.  call `setCause`(v0, v1) @signature `Lcom/huawei/hms/framework/common/Logger$ThrowableWrapper;.setCause:(Ljava/lang/Throwable;)V` @kind direct;
  #L208132.  return @kind void;
}
procedure `void` `setCause`(`com.huawei.hms.framework.common.Logger$ThrowableWrapper` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lcom/huawei/hms/framework/common/Logger$ThrowableWrapper;.setCause:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE {
    temp;

  #L208144.  v0.`com.huawei.hms.framework.common.Logger$ThrowableWrapper.thisCause` @type ^`java.lang.Throwable` := v1 @kind object;
  #L208148.  return @kind void;
}
procedure `java.lang.Throwable` `getCause`(`com.huawei.hms.framework.common.Logger$ThrowableWrapper` v1 @kind this) @signature `Lcom/huawei/hms/framework/common/Logger$ThrowableWrapper;.getCause:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L208080.  v0:= v1.`com.huawei.hms.framework.common.Logger$ThrowableWrapper.thisCause` @type ^`java.lang.Throwable` @kind object;
  #L208084.  if v0 != v1 then goto L20808a;
  #L208088.  v0:= 0I;
  #L20808a.  return v0 @kind object;
}
procedure `java.lang.String` `getMessage`(`com.huawei.hms.framework.common.Logger$ThrowableWrapper` v1 @kind this) @signature `Lcom/huawei/hms/framework/common/Logger$ThrowableWrapper;.getMessage:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L207fd4.  v0:= v1.`com.huawei.hms.framework.common.Logger$ThrowableWrapper.message` @type ^`java.lang.String` @kind object;
  #L207fd8.  return v0 @kind object;
}
procedure `void` `setMessage`(`com.huawei.hms.framework.common.Logger$ThrowableWrapper` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/huawei/hms/framework/common/Logger$ThrowableWrapper;.setMessage:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L20815c.  v0.`com.huawei.hms.framework.common.Logger$ThrowableWrapper.message` @type ^`java.lang.String` := v1 @kind object;
  #L208160.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.huawei.hms.framework.common.Logger$ThrowableWrapper` v2 @kind this) @signature `Lcom/huawei/hms/framework/common/Logger$ThrowableWrapper;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L207fec.  v0:= v2.`com.huawei.hms.framework.common.Logger$ThrowableWrapper.ownerThrowable` @type ^`java.lang.Throwable` @kind object;
  #L207ff0.  if v0 != 0 then goto L207ffa;
  #L207ff4.  v0:= "" @kind object;
  #L207ff8.  return v0 @kind object;
  #L207ffa.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L208000.  v0:= temp @kind object;
  #L208002.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L208008.  v0:= temp @kind object;
  #L20800a.  v1:= v2.`com.huawei.hms.framework.common.Logger$ThrowableWrapper.message` @type ^`java.lang.String` @kind object;
  #L20800e.  if v1 == 0 then goto L20806c;
  #L208012.  v1:= new `java.lang.StringBuilder`;
  #L208016.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20801c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L208022.  v0:= ": " @kind object;
  #L208026.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20802c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L208032.  v0:= temp @kind object;
  #L208034.  v1:= v2.`com.huawei.hms.framework.common.Logger$ThrowableWrapper.message` @type ^`java.lang.String` @kind object;
  #L208038.  call temp:= `startsWith`(v1, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L20803e.  v1:= temp;
  #L208040.  if v1 == 0 then goto L20804a;
  #L208044.  v0:= v2.`com.huawei.hms.framework.common.Logger$ThrowableWrapper.message` @type ^`java.lang.String` @kind object;
  #L208048.  return v0 @kind object;
  #L20804a.  v1:= new `java.lang.StringBuilder`;
  #L20804e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L208054.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20805a.  v0:= v2.`com.huawei.hms.framework.common.Logger$ThrowableWrapper.message` @type ^`java.lang.String` @kind object;
  #L20805e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L208064.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20806a.  v0:= temp @kind object;
  #L20806c.  return v0 @kind object;
}
