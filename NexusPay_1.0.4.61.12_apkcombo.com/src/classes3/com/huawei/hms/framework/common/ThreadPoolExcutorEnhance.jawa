record `com.huawei.hms.framework.common.ThreadPoolExcutorEnhance` @kind class @AccessFlag PUBLIC extends `java.util.concurrent.ThreadPoolExecutor` @kind class {
}
procedure `void` `<init>`(`com.huawei.hms.framework.common.ThreadPoolExcutorEnhance` v0 @kind this, `int` v1 , `int` v2 , `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `java.util.concurrent.BlockingQueue` v6 @kind object, `java.util.concurrent.ThreadFactory` v7 @kind object) @signature `Lcom/huawei/hms/framework/common/ThreadPoolExcutorEnhance;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L20c1f8.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L20c1fe.  return @kind void;
}
procedure `void` `beforeExecute`(`com.huawei.hms.framework.common.ThreadPoolExcutorEnhance` v5 @kind this, `java.lang.Thread` v6 @kind object, `java.lang.Runnable` v7 @kind object) @signature `Lcom/huawei/hms/framework/common/ThreadPoolExcutorEnhance;.beforeExecute:(Ljava/lang/Thread;Ljava/lang/Runnable;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20c210.  v0:= instanceof @variable v7 @type ^`com.huawei.hms.framework.common.RunnableEnhance` @kind boolean;
  #L20c214.  if v0 == 0 then goto L20c28e;
  #L20c218.  v0:= v7 @kind object;
  #L20c21a.  v0:= (`com.huawei.hms.framework.common.RunnableEnhance`) v0 @kind object;
  #L20c21e.  call temp:= `getParentName`(v0) @signature `Lcom/huawei/hms/framework/common/RunnableEnhance;.getParentName:()Ljava/lang/String;` @kind virtual;
  #L20c224.  v0:= temp @kind object;
  #L20c226.  v1:= " -->" @kind object;
  #L20c22a.  call temp:= `lastIndexOf`(v0, v1) @signature `Ljava/lang/String;.lastIndexOf:(Ljava/lang/String;)I` @kind virtual;
  #L20c230.  v2:= temp;
  #L20c232.  v3:= -1I;
  #L20c234.  if v2 == v3 then goto L20c244;
  #L20c238.  v2:= v2 + 4;
  #L20c23c.  call temp:= `substring`(v0, v2) @signature `Lcom/huawei/hms/framework/common/StringUtils;.substring:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L20c242.  v0:= temp @kind object;
  #L20c244.  call temp:= `getName`(v6) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L20c24a.  v2:= temp @kind object;
  #L20c24c.  call temp:= `lastIndexOf`(v2, v1) @signature `Ljava/lang/String;.lastIndexOf:(Ljava/lang/String;)I` @kind virtual;
  #L20c252.  v4:= temp;
  #L20c254.  if v4 == v3 then goto L20c264;
  #L20c258.  v4:= v4 + 4;
  #L20c25c.  call temp:= `substring`(v2, v4) @signature `Lcom/huawei/hms/framework/common/StringUtils;.substring:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L20c262.  v2:= temp @kind object;
  #L20c264.  v3:= new `java.lang.StringBuilder`;
  #L20c268.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20c26e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c274.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c27a.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c280.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20c286.  v0:= temp @kind object;
  #L20c288.  call `setName`(v6, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L20c28e.  call `beforeExecute`(v5, v6, v7) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.beforeExecute:(Ljava/lang/Thread;Ljava/lang/Runnable;)V` @kind super;
  #L20c294.  return @kind void;
}
procedure `void` `execute`(`com.huawei.hms.framework.common.ThreadPoolExcutorEnhance` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lcom/huawei/hms/framework/common/ThreadPoolExcutorEnhance;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20c2a8.  v0:= new `com.huawei.hms.framework.common.RunnableEnhance`;
  #L20c2ac.  call `<init>`(v0, v2) @signature `Lcom/huawei/hms/framework/common/RunnableEnhance;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L20c2b2.  call `execute`(v1, v0) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.execute:(Ljava/lang/Runnable;)V` @kind super;
  #L20c2b8.  return @kind void;
}
