record `com.huawei.hms.framework.common.ContainerUtils` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@com.huawei.hms.framework.common.ContainerUtils.FIELD_DELIMITER` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.huawei.hms.framework.common.ContainerUtils.KEY_VALUE_DELIMITER` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.huawei.hms.framework.common.ContainerUtils` v0 @kind this) @signature `Lcom/huawei/hms/framework/common/ContainerUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L206c80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L206c86.  return @kind void;
}
procedure `boolean` `equals`(`java.util.Map` v4 @kind object, `java.util.Map` v5 @kind object) @signature `Lcom/huawei/hms/framework/common/ContainerUtils;.equals:(Ljava/util/Map;Ljava/util/Map;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L206a54.  v0:= 1I;
  #L206a56.  if v4 != v5 then goto L206a5c;
  #L206a5a.  return v0;
  #L206a5c.  v1:= 0I;
  #L206a5e.  if v4 == 0 then goto L206ac6;
  #L206a62.  if v5 == 0 then goto L206ac6;
  #L206a66.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L206a6c.  v2:= temp;
  #L206a6e.  call temp:= `size`(v5) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L206a74.  v3:= temp;
  #L206a76.  if v2 != v3 then goto L206ac6;
  #L206a7a.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L206a80.  v4:= temp @kind object;
  #L206a82.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L206a88.  v4:= temp @kind object;
  #L206a8a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L206a90.  v2:= temp;
  #L206a92.  if v2 == 0 then goto L206ac0;
  #L206a96.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L206a9c.  v2:= temp @kind object;
  #L206a9e.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L206aa2.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L206aa8.  v3:= temp @kind object;
  #L206aaa.  call temp:= `get`(v5, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L206ab0.  v3:= temp @kind object;
  #L206ab2.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L206ab8.  v2:= temp @kind object;
  #L206aba.  if v3 == v2 then goto L206a8a;
  #L206abe.  v1:= 1I;
  #L206ac0.  v4:= v1 ^~ 1;
  #L206ac4.  return v4;
  #L206ac6.  return v1;
}
procedure `int` `hashCode`(`java.util.Map` v0 @kind object) @signature `Lcom/huawei/hms/framework/common/ContainerUtils;.hashCode:(Ljava/util/Map;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L206ad8.  call temp:= `toString`(v0) @signature `Lcom/huawei/hms/framework/common/ContainerUtils;.toString:(Ljava/util/Map;)Ljava/lang/String;` @kind static;
  #L206ade.  v0:= temp @kind object;
  #L206ae0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L206ae6.  v0:= temp;
  #L206ae8.  return v0;
}
procedure `java.lang.String` `toString`(`java.util.List` v4 @kind object) @signature `Lcom/huawei/hms/framework/common/ContainerUtils;.toString:(Ljava/util/List;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L206afc.  if v4 != 0 then goto L206b06;
  #L206b00.  v4:= "" @kind object;
  #L206b04.  return v4 @kind object;
  #L206b06.  v0:= new `java.lang.StringBuilder`;
  #L206b0a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L206b10.  v1:= 0I;
  #L206b12.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L206b18.  v4:= temp @kind object;
  #L206b1a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L206b20.  v2:= temp;
  #L206b22.  if v2 == 0 then goto L206b52;
  #L206b26.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L206b2c.  v2:= temp @kind object;
  #L206b2e.  v3:= v1 + 1;
  #L206b32.  if v1 <= 0 then goto L206b40;
  #L206b36.  v1:= "&" @kind object;
  #L206b3a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L206b40.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L206b46.  v1:= temp @kind object;
  #L206b48.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L206b4e.  v1:= v3;
  #L206b50.  goto L206b1a;
  #L206b52.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L206b58.  v4:= temp @kind object;
  #L206b5a.  return v4 @kind object;
}
procedure `java.lang.String` `toString`(`java.util.Map` v4 @kind object) @signature `Lcom/huawei/hms/framework/common/ContainerUtils;.toString:(Ljava/util/Map;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L206b6c.  if v4 != 0 then goto L206b76;
  #L206b70.  v4:= "" @kind object;
  #L206b74.  return v4 @kind object;
  #L206b76.  v0:= new `java.lang.StringBuilder`;
  #L206b7a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L206b80.  v1:= 0I;
  #L206b82.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L206b88.  v4:= temp @kind object;
  #L206b8a.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L206b90.  v4:= temp @kind object;
  #L206b92.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L206b98.  v2:= temp;
  #L206b9a.  if v2 == 0 then goto L206bf6;
  #L206b9e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L206ba4.  v2:= temp @kind object;
  #L206ba6.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L206baa.  v3:= v1 + 1;
  #L206bae.  if v1 <= 0 then goto L206bbc;
  #L206bb2.  v1:= "&" @kind object;
  #L206bb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L206bbc.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L206bc2.  v1:= temp @kind object;
  #L206bc4.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L206bca.  v1:= temp @kind object;
  #L206bcc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L206bd2.  v1:= "=" @kind object;
  #L206bd6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L206bdc.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L206be2.  v1:= temp @kind object;
  #L206be4.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L206bea.  v1:= temp @kind object;
  #L206bec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L206bf2.  v1:= v3;
  #L206bf4.  goto L206b92;
  #L206bf6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L206bfc.  v4:= temp @kind object;
  #L206bfe.  return v4 @kind object;
}
procedure `java.lang.String` `toString`(`java.util.Set` v4 @kind object) @signature `Lcom/huawei/hms/framework/common/ContainerUtils;.toString:(Ljava/util/Set;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L206c10.  if v4 != 0 then goto L206c1a;
  #L206c14.  v4:= "" @kind object;
  #L206c18.  return v4 @kind object;
  #L206c1a.  v0:= new `java.lang.StringBuilder`;
  #L206c1e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L206c24.  v1:= 0I;
  #L206c26.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L206c2c.  v4:= temp @kind object;
  #L206c2e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L206c34.  v2:= temp;
  #L206c36.  if v2 == 0 then goto L206c66;
  #L206c3a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L206c40.  v2:= temp @kind object;
  #L206c42.  v3:= v1 + 1;
  #L206c46.  if v1 <= 0 then goto L206c54;
  #L206c4a.  v1:= "&" @kind object;
  #L206c4e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L206c54.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L206c5a.  v1:= temp @kind object;
  #L206c5c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L206c62.  v1:= v3;
  #L206c64.  goto L206c2e;
  #L206c66.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L206c6c.  v4:= temp @kind object;
  #L206c6e.  return v4 @kind object;
}
