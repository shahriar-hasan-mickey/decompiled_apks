record `com.huawei.hms.framework.common.ExecutorsUtils$1` @kind class @AccessFlag FINAL extends `java.util.concurrent.ThreadFactory` @kind interface {
  `java.util.concurrent.atomic.AtomicInteger` `com.huawei.hms.framework.common.ExecutorsUtils$1.threadNumbers` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.huawei.hms.framework.common.ExecutorsUtils$1.val$threadName` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.huawei.hms.framework.common.ExecutorsUtils$1` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/huawei/hms/framework/common/ExecutorsUtils$1;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L207a88.  v1.`com.huawei.hms.framework.common.ExecutorsUtils$1.val$threadName` @type ^`java.lang.String` := v2 @kind object;
  #L207a8c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L207a92.  v2:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L207a96.  v0:= 0I;
  #L207a98.  call `<init>`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L207a9e.  v1.`com.huawei.hms.framework.common.ExecutorsUtils$1.threadNumbers` @type ^`java.util.concurrent.atomic.AtomicInteger` := v2 @kind object;
  #L207aa2.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`com.huawei.hms.framework.common.ExecutorsUtils$1` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lcom/huawei/hms/framework/common/ExecutorsUtils$1;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L207a28.  v0:= new `java.lang.Thread`;
  #L207a2c.  v1:= new `java.lang.StringBuilder`;
  #L207a30.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L207a36.  v2:= "NetworkKit_" @kind object;
  #L207a3a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L207a40.  v2:= v3.`com.huawei.hms.framework.common.ExecutorsUtils$1.val$threadName` @type ^`java.lang.String` @kind object;
  #L207a44.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L207a4a.  v2:= "_" @kind object;
  #L207a4e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L207a54.  v2:= v3.`com.huawei.hms.framework.common.ExecutorsUtils$1.threadNumbers` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L207a58.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L207a5e.  v2:= temp;
  #L207a60.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L207a66.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L207a6c.  v1:= temp @kind object;
  #L207a6e.  call `<init>`(v0, v4, v1) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L207a74.  return v0 @kind object;
}
