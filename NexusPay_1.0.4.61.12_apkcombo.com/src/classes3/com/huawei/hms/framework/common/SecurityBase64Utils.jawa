record `com.huawei.hms.framework.common.SecurityBase64Utils` @kind class @AccessFlag PUBLIC {
}
global `boolean` `@@com.huawei.hms.framework.common.SecurityBase64Utils.IS_AEGIS_BASE64_LIBRARY_LOADED` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `java.lang.String` `@@com.huawei.hms.framework.common.SecurityBase64Utils.SAFE_BASE64_PATH` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hms/framework/common/SecurityBase64Utils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L20ba08.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hms.framework.common.SecurityBase64Utils` v0 @kind this) @signature `Lcom/huawei/hms/framework/common/SecurityBase64Utils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L20ba1c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20ba22.  return @kind void;
}
procedure `boolean` `checkCompatible`(`java.lang.String` v3 @kind object) @signature `Lcom/huawei/hms/framework/common/SecurityBase64Utils;.checkCompatible:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L20b8fc.  v0:= constclass @type ^`com.huawei.hms.framework.common.SecurityBase64Utils` @kind object;
  #L20b900.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L20b906.  v1:= temp @kind object;
  #L20b908.  v2:= 0I;
  #L20b90a.  if v1 != 0 then goto L20b910;
  #L20b90e.  return v2;
  #L20b910.  call temp:= `loadClass`(v1, v3) @signature `Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;` @kind virtual;
  #L20b916.  @monitorenter v0
  #L20b918.  v3:= 1I;
  #L20b91a.  `@@com.huawei.hms.framework.common.SecurityBase64Utils.IS_AEGIS_BASE64_LIBRARY_LOADED` @type ^`boolean` := v3 @kind boolean;
  #L20b91e.  @monitorexit v0
  #L20b920.  return v3;
  #L20b922.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20b924.  @monitorexit v0
  #L20b926.  throw v3;
  #L20b928.  return v2;
  catch `java.lang.ClassNotFoundException` @[L20b910..L20b918] goto L20b928;
  catch `java.lang.Throwable` @[L20b91a..L20b926] goto L20b922;
  catch `java.lang.ClassNotFoundException` @[L20b926..L20b928] goto L20b928;
}
procedure `byte`[] `decode`(`java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/huawei/hms/framework/common/SecurityBase64Utils;.decode:(Ljava/lang/String;I)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20b95c.  v0:= `@@com.huawei.hms.framework.common.SecurityBase64Utils.IS_AEGIS_BASE64_LIBRARY_LOADED` @type ^`boolean` @kind boolean;
  #L20b960.  if v0 != 0 then goto L20b988;
  #L20b964.  v0:= "com.huawei.secure.android.common.util.SafeBase64" @kind object;
  #L20b968.  call temp:= `checkCompatible`(v0) @signature `Lcom/huawei/hms/framework/common/SecurityBase64Utils;.checkCompatible:(Ljava/lang/String;)Z` @kind static;
  #L20b96e.  v0:= temp;
  #L20b970.  if v0 == 0 then goto L20b976;
  #L20b974.  goto L20b988;
  #L20b976.  call temp:= `decode`(v1, v2) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L20b97c.  v1:= temp @kind object;
  #L20b97e.  return v1 @kind object;
  #L20b980.  v1:= 0I;
  #L20b982.  v1:= new `byte`[v1];
  #L20b986.  return v1 @kind object;
  #L20b988.  call temp:= `decode`(v1, v2) @signature `Lcom/huawei/secure/android/common/util/SafeBase64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L20b98e.  v1:= temp @kind object;
  #L20b990.  return v1 @kind object;
  catch `java.lang.Exception` @[L20b976..L20b97e] goto L20b980;
}
procedure `java.lang.String` `encodeToString`(`byte`[] v1 @kind object, `int` v2 ) @signature `Lcom/huawei/hms/framework/common/SecurityBase64Utils;.encodeToString:([BI)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20b9b4.  v0:= `@@com.huawei.hms.framework.common.SecurityBase64Utils.IS_AEGIS_BASE64_LIBRARY_LOADED` @type ^`boolean` @kind boolean;
  #L20b9b8.  if v0 != 0 then goto L20b9dc;
  #L20b9bc.  v0:= "com.huawei.secure.android.common.util.SafeBase64" @kind object;
  #L20b9c0.  call temp:= `checkCompatible`(v0) @signature `Lcom/huawei/hms/framework/common/SecurityBase64Utils;.checkCompatible:(Ljava/lang/String;)Z` @kind static;
  #L20b9c6.  v0:= temp;
  #L20b9c8.  if v0 == 0 then goto L20b9ce;
  #L20b9cc.  goto L20b9dc;
  #L20b9ce.  call temp:= `encodeToString`(v1, v2) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L20b9d4.  v1:= temp @kind object;
  #L20b9d6.  return v1 @kind object;
  #L20b9d8.  v1:= 0I;
  #L20b9da.  return v1 @kind object;
  #L20b9dc.  call temp:= `encodeToString`(v1, v2) @signature `Lcom/huawei/secure/android/common/util/SafeBase64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L20b9e2.  v1:= temp @kind object;
  #L20b9e4.  return v1 @kind object;
  catch `java.lang.Exception` @[L20b9ce..L20b9d6] goto L20b9d8;
}
