record `com.huawei.secure.android.common.encrypt.utils.EncryptUtil` @kind class @AccessFlag PUBLIC {
}
global `boolean` `@@com.huawei.secure.android.common.encrypt.utils.EncryptUtil.a` @AccessFlag PRIVATE_STATIC;
global `boolean` `@@com.huawei.secure.android.common.encrypt.utils.EncryptUtil.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L2d8244.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.secure.android.common.encrypt.utils.EncryptUtil` v0 @kind this) @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d8258.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d825e.  return @kind void;
}
procedure `java.security.SecureRandom` `a`() @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.a:()Ljava/security/SecureRandom;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2d8000.  v0:= "EncryptUtil" @kind object;
  #L2d8004.  v1:= "generateSecureRandomNew " @kind object;
  #L2d8008.  call `a`(v0, v1) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.a:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d800e.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2d8012.  v2:= 26I;
  #L2d8016.  if v1 < v2 then goto L2d802e;
  #L2d801a.  call temp:= `getInstanceStrong`() @signature `Ljava/security/SecureRandom;.getInstanceStrong:()Ljava/security/SecureRandom;` @kind static;
  #L2d8020.  v1:= temp @kind object;
  #L2d8022.  goto L2d8030;
  #L2d8024.  v1:= "getSecureRandomBytes: NoSuchAlgorithmException" @kind object;
  #L2d8028.  call `b`(v0, v1) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d802e.  v1:= 0I;
  #L2d8030.  v2:= 0I;
  #L2d8032.  if v1 != 0 then goto L2d8048;
  #L2d8036.  v3:= "SHA1PRNG" @kind object;
  #L2d803a.  call temp:= `getInstance`(v3) @signature `Ljava/security/SecureRandom;.getInstance:(Ljava/lang/String;)Ljava/security/SecureRandom;` @kind static;
  #L2d8040.  v1:= temp @kind object;
  #L2d8042.  goto L2d8048;
  #L2d8044.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d8046.  goto L2d8086;
  #L2d8048.  v3:= 1I;
  #L2d804a.  v4:= new `org.bouncycastle.crypto.engines.AESEngine`;
  #L2d804e.  call `<init>`(v4) @signature `Lorg/bouncycastle/crypto/engines/AESEngine;.<init>:()V` @kind direct;
  #L2d8054.  v5:= 256I;
  #L2d8058.  v6:= 384I;
  #L2d805c.  v7:= 32I;
  #L2d8060.  v7:= new `byte`[v7];
  #L2d8064.  call `nextBytes`(v1, v7) @signature `Ljava/security/SecureRandom;.nextBytes:([B)V` @kind virtual;
  #L2d806a.  v8:= new `org.bouncycastle.crypto.prng.SP800SecureRandomBuilder`;
  #L2d806e.  call `<init>`(v8, v1, v3) @signature `Lorg/bouncycastle/crypto/prng/SP800SecureRandomBuilder;.<init>:(Ljava/security/SecureRandom;Z)V` @kind direct;
  #L2d8074.  call temp:= `setEntropyBitsRequired`(v8, v6) @signature `Lorg/bouncycastle/crypto/prng/SP800SecureRandomBuilder;.setEntropyBitsRequired:(I)Lorg/bouncycastle/crypto/prng/SP800SecureRandomBuilder;` @kind virtual;
  #L2d807a.  v3:= temp @kind object;
  #L2d807c.  call temp:= `buildCTR`(v3, v4, v5, v7, v2) @signature `Lorg/bouncycastle/crypto/prng/SP800SecureRandomBuilder;.buildCTR:(Lorg/bouncycastle/crypto/BlockCipher;I[BZ)Lorg/bouncycastle/crypto/prng/SP800SecureRandom;` @kind virtual;
  #L2d8082.  v0:= temp @kind object;
  #L2d8084.  return v0 @kind object;
  #L2d8086.  v4:= `@@com.huawei.secure.android.common.encrypt.utils.EncryptUtil.b` @type ^`boolean` @kind boolean;
  #L2d808a.  if v4 == 0 then goto L2d80d8;
  #L2d808e.  v4:= new `java.lang.StringBuilder`;
  #L2d8092.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d8098.  v5:= "exception : " @kind object;
  #L2d809c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d80a2.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2d80a8.  v3:= temp @kind object;
  #L2d80aa.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d80b0.  v3:= " , you should implementation bcprov-jdk15on library" @kind object;
  #L2d80b4.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d80ba.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d80c0.  v3:= temp @kind object;
  #L2d80c2.  call `b`(v0, v3) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d80c8.  `@@com.huawei.secure.android.common.encrypt.utils.EncryptUtil.b` @type ^`boolean` := v2 @kind boolean;
  #L2d80cc.  goto L2d80d8;
  #L2d80ce.  v2:= "NoSuchAlgorithmException" @kind object;
  #L2d80d2.  call `b`(v0, v2) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d80d8.  return v1 @kind object;
  catch `java.security.NoSuchAlgorithmException` @[L2d800e..L2d8022] goto L2d8024;
  catch `java.security.NoSuchAlgorithmException` @[L2d8036..L2d8084] goto L2d80ce;
  catch `java.lang.Throwable` @[L2d8036..L2d8084] goto L2d8044;
}
procedure `byte`[] `b`(`int` v1 ) @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.b:(I)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2d7e14.  call temp:= `a`() @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.a:()Ljava/security/SecureRandom;` @kind static;
  #L2d7e1a.  v0:= temp @kind object;
  #L2d7e1c.  if v0 != 0 then goto L2d7e28;
  #L2d7e20.  v1:= 0I;
  #L2d7e22.  v1:= new `byte`[v1];
  #L2d7e26.  return v1 @kind object;
  #L2d7e28.  v1:= new `byte`[v1];
  #L2d7e2c.  call `nextBytes`(v0, v1) @signature `Ljava/security/SecureRandom;.nextBytes:([B)V` @kind virtual;
  #L2d7e32.  return v1 @kind object;
}
procedure `java.security.SecureRandom` `genSecureRandom`() @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.genSecureRandom:()Ljava/security/SecureRandom;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2d8108.  v0:= `@@com.huawei.secure.android.common.encrypt.utils.EncryptUtil.a` @type ^`boolean` @kind boolean;
  #L2d810c.  if v0 != 0 then goto L2d8146;
  #L2d8110.  v0:= 0I;
  #L2d8112.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2d8116.  v2:= 26I;
  #L2d811a.  if v1 < v2 then goto L2d8128;
  #L2d811e.  call temp:= `getInstanceStrong`() @signature `Ljava/security/SecureRandom;.getInstanceStrong:()Ljava/security/SecureRandom;` @kind static;
  #L2d8124.  v0:= temp @kind object;
  #L2d8126.  goto L2d8144;
  #L2d8128.  v1:= "SHA1PRNG" @kind object;
  #L2d812c.  call temp:= `getInstance`(v1) @signature `Ljava/security/SecureRandom;.getInstance:(Ljava/lang/String;)Ljava/security/SecureRandom;` @kind static;
  #L2d8132.  v0:= temp @kind object;
  #L2d8134.  goto L2d8144;
  #L2d8136.  v1:= "EncryptUtil" @kind object;
  #L2d813a.  v2:= "genSecureRandom: NoSuchAlgorithmException" @kind object;
  #L2d813e.  call `b`(v1, v2) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d8144.  return v0 @kind object;
  #L2d8146.  call temp:= `a`() @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.a:()Ljava/security/SecureRandom;` @kind static;
  #L2d814c.  v0:= temp @kind object;
  #L2d814e.  return v0 @kind object;
  catch `java.security.NoSuchAlgorithmException` @[L2d8112..L2d8134] goto L2d8136;
}
procedure `byte`[] `generateSecureRandom`(`int` v4 ) @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.generateSecureRandom:(I)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d7e44.  v0:= "EncryptUtil" @kind object;
  #L2d7e48.  v1:= `@@com.huawei.secure.android.common.encrypt.utils.EncryptUtil.a` @type ^`boolean` @kind boolean;
  #L2d7e4c.  if v1 != 0 then goto L2d7ed4;
  #L2d7e50.  v4:= new `byte`[v4];
  #L2d7e54.  v1:= 0I;
  #L2d7e56.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2d7e5a.  v3:= 26I;
  #L2d7e5e.  if v2 < v3 then goto L2d7e76;
  #L2d7e62.  call temp:= `getInstanceStrong`() @signature `Ljava/security/SecureRandom;.getInstanceStrong:()Ljava/security/SecureRandom;` @kind static;
  #L2d7e68.  v1:= temp @kind object;
  #L2d7e6a.  goto L2d7e76;
  #L2d7e6c.  v2:= "getSecureRandomBytes: NoSuchAlgorithmException" @kind object;
  #L2d7e70.  call `b`(v0, v2) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d7e76.  if v1 != 0 then goto L2d7e86;
  #L2d7e7a.  v1:= "SHA1PRNG" @kind object;
  #L2d7e7e.  call temp:= `getInstance`(v1) @signature `Ljava/security/SecureRandom;.getInstance:(Ljava/lang/String;)Ljava/security/SecureRandom;` @kind static;
  #L2d7e84.  v1:= temp @kind object;
  #L2d7e86.  call `nextBytes`(v1, v4) @signature `Ljava/security/SecureRandom;.nextBytes:([B)V` @kind virtual;
  #L2d7e8c.  return v4 @kind object;
  #L2d7e8e.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L2d7e90.  v1:= new `java.lang.StringBuilder`;
  #L2d7e94.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d7e9a.  v2:= "getSecureRandomBytes getInstance: exception : " @kind object;
  #L2d7e9e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d7ea4.  call temp:= `getMessage`(v4) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2d7eaa.  v4:= temp @kind object;
  #L2d7eac.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d7eb2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d7eb8.  v4:= temp @kind object;
  #L2d7eba.  call `b`(v0, v4) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d7ec0.  goto L2d7ecc;
  #L2d7ec2.  v4:= "getSecureRandomBytes getInstance: NoSuchAlgorithmException" @kind object;
  #L2d7ec6.  call `b`(v0, v4) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d7ecc.  v4:= 0I;
  #L2d7ece.  v4:= new `byte`[v4];
  #L2d7ed2.  return v4 @kind object;
  #L2d7ed4.  call temp:= `b`(v4) @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.b:(I)[B` @kind static;
  #L2d7eda.  v4:= temp @kind object;
  #L2d7edc.  return v4 @kind object;
  catch `java.security.NoSuchAlgorithmException` @[L2d7e56..L2d7e6a] goto L2d7e6c;
  catch `java.security.NoSuchAlgorithmException` @[L2d7e7a..L2d7e8c] goto L2d7ec2;
  catch `java.lang.Exception` @[L2d7e7a..L2d7e8c] goto L2d7e8e;
}
procedure `java.lang.String` `generateSecureRandomStr`(`int` v0 ) @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.generateSecureRandomStr:(I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2d7f0c.  call temp:= `generateSecureRandom`(v0) @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.generateSecureRandom:(I)[B` @kind static;
  #L2d7f12.  v0:= temp @kind object;
  #L2d7f14.  call temp:= `byteArray2HexStr`(v0) @signature `Lcom/huawei/secure/android/common/encrypt/utils/HexUtil;.byteArray2HexStr:([B)Ljava/lang/String;` @kind static;
  #L2d7f1a.  v0:= temp @kind object;
  #L2d7f1c.  return v0 @kind object;
}
procedure `java.security.PrivateKey` `getPrivateKey`(`java.lang.String` v4 @kind object) @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.getPrivateKey:(Ljava/lang/String;)Ljava/security/PrivateKey;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d7f30.  v0:= "EncryptUtil" @kind object;
  #L2d7f34.  v1:= 0I;
  #L2d7f36.  v2:= 0I;
  #L2d7f38.  call temp:= `decode`(v4, v1) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L2d7f3e.  v4:= temp @kind object;
  #L2d7f40.  v1:= new `java.security.spec.PKCS8EncodedKeySpec`;
  #L2d7f44.  call `<init>`(v1, v4) @signature `Ljava/security/spec/PKCS8EncodedKeySpec;.<init>:([B)V` @kind direct;
  #L2d7f4a.  v4:= "RSA" @kind object;
  #L2d7f4e.  call temp:= `getInstance`(v4) @signature `Ljava/security/KeyFactory;.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;` @kind static;
  #L2d7f54.  v4:= temp @kind object;
  #L2d7f56.  call temp:= `generatePrivate`(v4, v1) @signature `Ljava/security/KeyFactory;.generatePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;` @kind virtual;
  #L2d7f5c.  v4:= temp @kind object;
  #L2d7f5e.  return v4 @kind object;
  #L2d7f60.  v4:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L2d7f62.  v1:= new `java.lang.StringBuilder`;
  #L2d7f66.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d7f6c.  v3:= "load Key Exception:" @kind object;
  #L2d7f70.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d7f76.  call temp:= `getMessage`(v4) @signature `Ljava/security/GeneralSecurityException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2d7f7c.  v4:= temp @kind object;
  #L2d7f7e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d7f84.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d7f8a.  v4:= temp @kind object;
  #L2d7f8c.  call `b`(v0, v4) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d7f92.  return v2 @kind object;
  #L2d7f94.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L2d7f96.  v1:= new `java.lang.StringBuilder`;
  #L2d7f9a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d7fa0.  v3:= "base64 decode Exception" @kind object;
  #L2d7fa4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d7faa.  call temp:= `getMessage`(v4) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2d7fb0.  v4:= temp @kind object;
  #L2d7fb2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d7fb8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d7fbe.  v4:= temp @kind object;
  #L2d7fc0.  call `b`(v0, v4) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d7fc6.  return v2 @kind object;
  #L2d7fc8.  v4:= "base64 decode IllegalArgumentException" @kind object;
  #L2d7fcc.  call `b`(v0, v4) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d7fd2.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L2d7f38..L2d7f40] goto L2d7fc8;
  catch `java.lang.Exception` @[L2d7f38..L2d7f40] goto L2d7f94;
  catch `java.security.GeneralSecurityException` @[L2d7f40..L2d7f5e] goto L2d7f60;
}
procedure `java.security.interfaces.RSAPublicKey` `getPublicKey`(`java.lang.String` v4 @kind object) @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.getPublicKey:(Ljava/lang/String;)Ljava/security/interfaces/RSAPublicKey;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d8170.  v0:= "EncryptUtil" @kind object;
  #L2d8174.  v1:= 0I;
  #L2d8176.  v2:= 0I;
  #L2d8178.  call temp:= `decode`(v4, v1) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L2d817e.  v4:= temp @kind object;
  #L2d8180.  v1:= "RSA" @kind object;
  #L2d8184.  call temp:= `getInstance`(v1) @signature `Ljava/security/KeyFactory;.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;` @kind static;
  #L2d818a.  v1:= temp @kind object;
  #L2d818c.  v3:= new `java.security.spec.X509EncodedKeySpec`;
  #L2d8190.  call `<init>`(v3, v4) @signature `Ljava/security/spec/X509EncodedKeySpec;.<init>:([B)V` @kind direct;
  #L2d8196.  call temp:= `generatePublic`(v1, v3) @signature `Ljava/security/KeyFactory;.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;` @kind virtual;
  #L2d819c.  v4:= temp @kind object;
  #L2d819e.  v4:= (`java.security.interfaces.RSAPublicKey`) v4 @kind object;
  #L2d81a2.  return v4 @kind object;
  #L2d81a4.  v4:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L2d81a6.  v1:= new `java.lang.StringBuilder`;
  #L2d81aa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d81b0.  v3:= "load Key Exception:" @kind object;
  #L2d81b4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d81ba.  call temp:= `getMessage`(v4) @signature `Ljava/security/GeneralSecurityException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2d81c0.  v4:= temp @kind object;
  #L2d81c2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d81c8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d81ce.  v4:= temp @kind object;
  #L2d81d0.  call `b`(v0, v4) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d81d6.  return v2 @kind object;
  #L2d81d8.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L2d81da.  v1:= new `java.lang.StringBuilder`;
  #L2d81de.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d81e4.  v3:= "base64 decode Exception" @kind object;
  #L2d81e8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d81ee.  call temp:= `getMessage`(v4) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2d81f4.  v4:= temp @kind object;
  #L2d81f6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d81fc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d8202.  v4:= temp @kind object;
  #L2d8204.  call `b`(v0, v4) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d820a.  return v2 @kind object;
  #L2d820c.  v4:= "base64 decode IllegalArgumentException" @kind object;
  #L2d8210.  call `b`(v0, v4) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d8216.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L2d8178..L2d8180] goto L2d820c;
  catch `java.lang.Exception` @[L2d8178..L2d8180] goto L2d81d8;
  catch `java.security.GeneralSecurityException` @[L2d8180..L2d81a2] goto L2d81a4;
}
procedure `boolean` `isBouncycastleFlag`() @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.isBouncycastleFlag:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d7dfc.  v0:= `@@com.huawei.secure.android.common.encrypt.utils.EncryptUtil.a` @type ^`boolean` @kind boolean;
  #L2d7e00.  return v0;
}
procedure `void` `setBouncycastleFlag`(`boolean` v2 ) @signature `Lcom/huawei/secure/android/common/encrypt/utils/EncryptUtil;.setBouncycastleFlag:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2d8270.  v0:= new `java.lang.StringBuilder`;
  #L2d8274.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d827a.  v1:= "setBouncycastleFlag: " @kind object;
  #L2d827e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d8284.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d828a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d8290.  v0:= temp @kind object;
  #L2d8292.  v1:= "EncryptUtil" @kind object;
  #L2d8296.  call `c`(v1, v0) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d829c.  `@@com.huawei.secure.android.common.encrypt.utils.EncryptUtil.a` @type ^`boolean` := v2 @kind boolean;
  #L2d82a0.  return @kind void;
}
