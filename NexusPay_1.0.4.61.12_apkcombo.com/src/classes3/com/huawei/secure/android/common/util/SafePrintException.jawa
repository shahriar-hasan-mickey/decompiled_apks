record `com.huawei.secure.android.common.util.SafePrintException` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`com.huawei.secure.android.common.util.SafePrintException` v0 @kind this) @signature `Lcom/huawei/secure/android/common/util/SafePrintException;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e1cb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e1cbe.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v10 @kind object) @signature `Lcom/huawei/secure/android/common/util/SafePrintException;.a:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2e1b84.  v0:= "java.io.FileNotFoundException" @kind object;
  #L2e1b88.  v1:= "java.util.jar.JarException" @kind object;
  #L2e1b8c.  v2:= "java.util.MissingResourceException" @kind object;
  #L2e1b90.  v3:= "java.security.acl.NotOwnerException" @kind object;
  #L2e1b94.  v4:= "java.util.ConcurrentModificationException" @kind object;
  #L2e1b98.  v5:= "javax.naming.InsufficientResourcesException" @kind object;
  #L2e1b9c.  v6:= "java.net.BindException" @kind object;
  #L2e1ba0.  v7:= "java.lang.OutOfMemoryError" @kind object;
  #L2e1ba4.  v8:= "java.lang.StackOverflowError" @kind object;
  #L2e1ba8.  v9:= "java.sql.SQLException" @kind object;
  #L2e1bac.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5, v6, v7, v8, v9];
  #L2e1bb2.  v0:= temp @kind object;
  #L2e1bb4.  v1:= 0I;
  #L2e1bb6.  v2:= 0I;
  #L2e1bb8.  v3:= 10I;
  #L2e1bbc.  if v2 >= v3 then goto L2e1bda;
  #L2e1bc0.  v3:= v0[v2] @kind object;
  #L2e1bc4.  call temp:= `contains`(v10, v3) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L2e1bca.  v3:= temp;
  #L2e1bcc.  if v3 == 0 then goto L2e1bd4;
  #L2e1bd0.  v10:= 1I;
  #L2e1bd2.  return v10;
  #L2e1bd4.  v2:= v2 + 1;
  #L2e1bd8.  goto L2e1bb8;
  #L2e1bda.  return v1;
}
procedure `java.lang.String` `getStackTrace`(`java.lang.String` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lcom/huawei/secure/android/common/util/SafePrintException;.getStackTrace:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e1bec.  v0:= new `java.lang.StringBuilder`;
  #L2e1bf0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e1bf6.  call temp:= `isEmpty`(v4) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2e1bfc.  v1:= temp;
  #L2e1bfe.  if v1 != 0 then goto L2e1c12;
  #L2e1c02.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e1c08.  v4:= " " @kind object;
  #L2e1c0c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e1c12.  v4:= "Exception: " @kind object;
  #L2e1c16.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e1c1c.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2e1c22.  v4:= temp @kind object;
  #L2e1c24.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2e1c2a.  v4:= temp @kind object;
  #L2e1c2c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e1c32.  v4:= 10I;
  #L2e1c36.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e1c3c.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2e1c42.  v1:= temp @kind object;
  #L2e1c44.  call temp:= `getCanonicalName`(v1) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2e1c4a.  v1:= temp @kind object;
  #L2e1c4c.  call temp:= `a`(v1) @signature `Lcom/huawei/secure/android/common/util/SafePrintException;.a:(Ljava/lang/String;)Z` @kind static;
  #L2e1c52.  v1:= temp;
  #L2e1c54.  if v1 != 0 then goto L2e1c9c;
  #L2e1c58.  call temp:= `getStackTrace`(v5) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L2e1c5e.  v5:= temp @kind object;
  #L2e1c60.  if v5 != 0 then goto L2e1c76;
  #L2e1c64.  v5:= "Stack trace is NULL!" @kind object;
  #L2e1c68.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e1c6e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e1c74.  goto L2e1c9c;
  #L2e1c76.  v1:= length @variable v5;
  #L2e1c78.  v2:= 0I;
  #L2e1c7a.  if v2 >= v1 then goto L2e1c9c;
  #L2e1c7e.  v3:= v5[v2] @kind object;
  #L2e1c82.  call temp:= `toString`(v3) @signature `Ljava/lang/StackTraceElement;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e1c88.  v3:= temp @kind object;
  #L2e1c8a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e1c90.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e1c96.  v2:= v2 + 1;
  #L2e1c9a.  goto L2e1c7a;
  #L2e1c9c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e1ca2.  v4:= temp @kind object;
  #L2e1ca4.  return v4 @kind object;
}
procedure `void` `print`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lcom/huawei/secure/android/common/util/SafePrintException;.print:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2e1cd0.  if v2 != 0 then goto L2e1cd6;
  #L2e1cd4.  return @kind void;
  #L2e1cd6.  call temp:= `getStackTrace`(v1, v2) @signature `Lcom/huawei/secure/android/common/util/SafePrintException;.getStackTrace:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L2e1cdc.  v1:= temp @kind object;
  #L2e1cde.  call temp:= `w`(v0, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2e1ce4.  return @kind void;
}
