record `com.huawei.secure.android.common.ssl.SSLUtil` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `java.lang.String`[] `@@com.huawei.secure.android.common.ssl.SSLUtil.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@com.huawei.secure.android.common.ssl.SSLUtil.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@com.huawei.secure.android.common.ssl.SSLUtil.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L2da1ec.  v0:= "TLS_DHE_DSS_WITH_AES_128_CBC_SHA" @kind object;
  #L2da1f0.  v1:= "TLS_DHE_RSA_WITH_AES_128_CBC_SHA" @kind object;
  #L2da1f4.  v2:= "TLS_DHE_DSS_WITH_AES_256_CBC_SHA" @kind object;
  #L2da1f8.  v3:= "TLS_DHE_RSA_WITH_AES_256_CBC_SHA" @kind object;
  #L2da1fc.  v4:= "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA" @kind object;
  #L2da200.  v5:= "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA" @kind object;
  #L2da204.  v6:= "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA" @kind object;
  #L2da208.  v7:= "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA" @kind object;
  #L2da20c.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5, v6, v7];
  #L2da212.  v0:= temp @kind object;
  #L2da214.  `@@com.huawei.secure.android.common.ssl.SSLUtil.a` @type ^`java.lang.String`[] := v0 @kind object;
  #L2da218.  v1:= "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256" @kind object;
  #L2da21c.  v2:= "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384" @kind object;
  #L2da220.  v3:= "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256" @kind object;
  #L2da224.  v4:= "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384" @kind object;
  #L2da228.  v5:= "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256" @kind object;
  #L2da22c.  v6:= "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384" @kind object;
  #L2da230.  v7:= "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256" @kind object;
  #L2da234.  v8:= "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384" @kind object;
  #L2da238.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8];
  #L2da23e.  v0:= temp @kind object;
  #L2da240.  `@@com.huawei.secure.android.common.ssl.SSLUtil.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L2da244.  v1:= "TLS_RSA" @kind object;
  #L2da248.  v2:= "CBC" @kind object;
  #L2da24c.  v3:= "TEA" @kind object;
  #L2da250.  v4:= "SHA0" @kind object;
  #L2da254.  v5:= "MD2" @kind object;
  #L2da258.  v6:= "MD4" @kind object;
  #L2da25c.  v7:= "RIPEMD" @kind object;
  #L2da260.  v8:= "NULL" @kind object;
  #L2da264.  v9:= "RC4" @kind object;
  #L2da268.  v10:= "DES" @kind object;
  #L2da26c.  v11:= "DESX" @kind object;
  #L2da270.  v12:= "DES40" @kind object;
  #L2da274.  v13:= "RC2" @kind object;
  #L2da278.  v14:= "MD5" @kind object;
  #L2da27c.  v15:= "ANON" @kind object;
  #L2da280.  v16:= "TLS_EMPTY_RENEGOTIATION_INFO_SCSV" @kind object;
  #L2da284.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16];
  #L2da28a.  v0:= temp @kind object;
  #L2da28c.  `@@com.huawei.secure.android.common.ssl.SSLUtil.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L2da290.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.secure.android.common.ssl.SSLUtil` v0 @kind this) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2da2a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2da2aa.  return @kind void;
}
procedure `java.lang.String`[] `getEnabledCipherSuites`(`javax.net.ssl.SSLSocket` v0 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.getEnabledCipherSuites:(Ljavax/net/ssl/SSLSocket;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2da164.  call temp:= `getEnabledCipherSuites`(v0) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L2da16a.  v0:= temp @kind object;
  #L2da16c.  return v0 @kind object;
}
procedure `java.lang.String`[] `getEnabledProtocols`(`javax.net.ssl.SSLSocket` v0 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.getEnabledProtocols:(Ljavax/net/ssl/SSLSocket;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2da180.  call temp:= `getEnabledProtocols`(v0) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L2da186.  v0:= temp @kind object;
  #L2da188.  return v0 @kind object;
}
procedure `void` `printTLSAndCipher`(`javax.net.ssl.SSLSocket` v8 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.printTLSAndCipher:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2da2bc.  call temp:= `getEnabledProtocols`(v8) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L2da2c2.  v0:= temp @kind object;
  #L2da2c4.  v1:= length @variable v0;
  #L2da2c6.  v2:= 0I;
  #L2da2c8.  v3:= 0I;
  #L2da2ca.  v4:= "SSLUtil" @kind object;
  #L2da2ce.  if v3 >= v1 then goto L2da304;
  #L2da2d2.  v5:= v0[v3] @kind object;
  #L2da2d6.  v6:= new `java.lang.StringBuilder`;
  #L2da2da.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2da2e0.  v7:= "new enable protocols is : " @kind object;
  #L2da2e4.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2da2ea.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2da2f0.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2da2f6.  v5:= temp @kind object;
  #L2da2f8.  call `c`(v4, v5) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2da2fe.  v3:= v3 + 1;
  #L2da302.  goto L2da2ca;
  #L2da304.  call temp:= `getEnabledCipherSuites`(v8) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L2da30a.  v8:= temp @kind object;
  #L2da30c.  v0:= length @variable v8;
  #L2da30e.  if v2 >= v0 then goto L2da344;
  #L2da312.  v1:= v8[v2] @kind object;
  #L2da316.  v3:= new `java.lang.StringBuilder`;
  #L2da31a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2da320.  v5:= "new cipher suites is : " @kind object;
  #L2da324.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2da32a.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2da330.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2da336.  v1:= temp @kind object;
  #L2da338.  call `c`(v4, v1) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2da33e.  v2:= v2 + 1;
  #L2da342.  goto L2da30e;
  #L2da344.  return @kind void;
}
procedure `boolean` `setBlackListCipherSuites`(`javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setBlackListCipherSuites:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d9f48.  if v1 != 0 then goto L2d9f50;
  #L2d9f4c.  v1:= 0I;
  #L2d9f4e.  return v1;
  #L2d9f50.  v0:= `@@com.huawei.secure.android.common.ssl.SSLUtil.c` @type ^`java.lang.String`[] @kind object;
  #L2d9f54.  call temp:= `setBlackListCipherSuites`(v1, v0) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setBlackListCipherSuites:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @kind static;
  #L2d9f5a.  v1:= temp;
  #L2d9f5c.  return v1;
}
procedure `boolean` `setBlackListCipherSuites`(`javax.net.ssl.SSLSocket` v12 @kind object, `java.lang.String`[] v13 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setBlackListCipherSuites:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2d9f70.  v0:= 0I;
  #L2d9f72.  if v12 != 0 then goto L2d9f78;
  #L2d9f76.  return v0;
  #L2d9f78.  call temp:= `getEnabledCipherSuites`(v12) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L2d9f7e.  v1:= temp @kind object;
  #L2d9f80.  v2:= new `java.util.ArrayList`;
  #L2d9f84.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2d9f8a.  v3:= length @variable v1;
  #L2d9f8c.  v4:= 0I;
  #L2d9f8e.  v5:= 1I;
  #L2d9f90.  if v4 >= v3 then goto L2d9fe2;
  #L2d9f94.  v6:= v1[v4] @kind object;
  #L2d9f98.  v7:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L2d9f9c.  call temp:= `toUpperCase`(v6, v7) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L2d9fa2.  v7:= temp @kind object;
  #L2d9fa4.  v8:= length @variable v13;
  #L2d9fa6.  v9:= 0I;
  #L2d9fa8.  if v9 >= v8 then goto L2d9fd0;
  #L2d9fac.  v10:= v13[v9] @kind object;
  #L2d9fb0.  v11:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L2d9fb4.  call temp:= `toUpperCase`(v10, v11) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L2d9fba.  v10:= temp @kind object;
  #L2d9fbc.  call temp:= `contains`(v7, v10) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L2d9fc2.  v10:= temp;
  #L2d9fc4.  if v10 == 0 then goto L2d9fca;
  #L2d9fc8.  goto L2d9fd2;
  #L2d9fca.  v9:= v9 + 1;
  #L2d9fce.  goto L2d9fa8;
  #L2d9fd0.  v5:= 0I;
  #L2d9fd2.  if v5 != 0 then goto L2d9fdc;
  #L2d9fd6.  call temp:= `add`(v2, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2d9fdc.  v4:= v4 + 1;
  #L2d9fe0.  goto L2d9f8e;
  #L2d9fe2.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2d9fe8.  v13:= temp;
  #L2d9fea.  if v13 != 0 then goto L2da00e;
  #L2d9fee.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2d9ff4.  v13:= temp;
  #L2d9ff6.  v13:= new `java.lang.String`[v13];
  #L2d9ffa.  call temp:= `toArray`(v2, v13) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L2da000.  v13:= temp @kind object;
  #L2da002.  v13:= (`java.lang.String`[]) v13 @kind object;
  #L2da006.  call `setEnabledCipherSuites`(v12, v13) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledCipherSuites:([Ljava/lang/String;)V` @kind virtual;
  #L2da00c.  return v5;
  #L2da00e.  return v0;
}
procedure `void` `setEnableSafeCipherSuites`(`javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setEnableSafeCipherSuites:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2da358.  if v1 != 0 then goto L2da35e;
  #L2da35c.  return @kind void;
  #L2da35e.  call temp:= `setWhiteListCipherSuites`(v1) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setWhiteListCipherSuites:(Ljavax/net/ssl/SSLSocket;)Z` @kind static;
  #L2da364.  v0:= temp;
  #L2da366.  if v0 != 0 then goto L2da370;
  #L2da36a.  call temp:= `setBlackListCipherSuites`(v1) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setBlackListCipherSuites:(Ljavax/net/ssl/SSLSocket;)Z` @kind static;
  #L2da370.  return @kind void;
}
procedure `void` `setEnabledProtocols`(`javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setEnabledProtocols:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2da384.  if v4 != 0 then goto L2da38a;
  #L2da388.  return @kind void;
  #L2da38a.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2da38e.  v1:= "TLSv1.2" @kind object;
  #L2da392.  v2:= 29I;
  #L2da396.  if v0 < v2 then goto L2da3ac;
  #L2da39a.  v0:= "TLSv1.3" @kind object;
  #L2da39e.  temp:= new `java.lang.String`[v0, v1];
  #L2da3a4.  v0:= temp @kind object;
  #L2da3a6.  call `setEnabledProtocols`(v4, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L2da3ac.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2da3b0.  v3:= 16I;
  #L2da3b4.  if v0 < v3 then goto L2da3cc;
  #L2da3b8.  if v0 >= v2 then goto L2da3cc;
  #L2da3bc.  temp:= new `java.lang.String`[v1];
  #L2da3c2.  v0:= temp @kind object;
  #L2da3c4.  call `setEnabledProtocols`(v4, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L2da3ca.  goto L2da3e6;
  #L2da3cc.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2da3d0.  if v0 >= v3 then goto L2da3e6;
  #L2da3d4.  v0:= "TLSv1" @kind object;
  #L2da3d8.  temp:= new `java.lang.String`[v0];
  #L2da3de.  v0:= temp @kind object;
  #L2da3e0.  call `setEnabledProtocols`(v4, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L2da3e6.  return @kind void;
}
procedure `boolean` `setEnabledProtocols`(`javax.net.ssl.SSLSocket` v2 @kind object, `java.lang.String`[] v3 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setEnabledProtocols:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2da020.  v0:= 0I;
  #L2da022.  if v2 == 0 then goto L2da06c;
  #L2da026.  if v3 != 0 then goto L2da02c;
  #L2da02a.  goto L2da06c;
  #L2da02c.  call `setEnabledProtocols`(v2, v3) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L2da032.  v2:= 1I;
  #L2da034.  return v2;
  #L2da036.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L2da038.  v3:= new `java.lang.StringBuilder`;
  #L2da03c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2da042.  v1:= "setEnabledProtocols: exception : " @kind object;
  #L2da046.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2da04c.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2da052.  v2:= temp @kind object;
  #L2da054.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2da05a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2da060.  v2:= temp @kind object;
  #L2da062.  v3:= "SSLUtil" @kind object;
  #L2da066.  call `b`(v3, v2) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2da06c.  return v0;
  catch `java.lang.Exception` @[L2da02c..L2da032] goto L2da036;
}
procedure `javax.net.ssl.SSLContext` `setSSLContext`() @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2da19c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2da1a0.  v1:= 29I;
  #L2da1a4.  if v0 < v1 then goto L2da1b6;
  #L2da1a8.  v0:= "TLSv1.3" @kind object;
  #L2da1ac.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L2da1b2.  v0:= temp @kind object;
  #L2da1b4.  goto L2da1d8;
  #L2da1b6.  v1:= 16I;
  #L2da1ba.  if v0 < v1 then goto L2da1cc;
  #L2da1be.  v0:= "TLSv1.2" @kind object;
  #L2da1c2.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L2da1c8.  v0:= temp @kind object;
  #L2da1ca.  goto L2da1d8;
  #L2da1cc.  v0:= "TLS" @kind object;
  #L2da1d0.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L2da1d6.  v0:= temp @kind object;
  #L2da1d8.  return v0 @kind object;
}
procedure `void` `setSSLSocketOptions`(`javax.net.ssl.SSLSocket` v0 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setSSLSocketOptions:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2da3f8.  if v0 != 0 then goto L2da3fe;
  #L2da3fc.  return @kind void;
  #L2da3fe.  call `setEnabledProtocols`(v0) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setEnabledProtocols:(Ljavax/net/ssl/SSLSocket;)V` @kind static;
  #L2da404.  call `setEnableSafeCipherSuites`(v0) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setEnableSafeCipherSuites:(Ljavax/net/ssl/SSLSocket;)V` @kind static;
  #L2da40a.  return @kind void;
}
procedure `boolean` `setWhiteListCipherSuites`(`javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setWhiteListCipherSuites:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2da090.  if v2 != 0 then goto L2da098;
  #L2da094.  v2:= 0I;
  #L2da096.  return v2;
  #L2da098.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2da09c.  v1:= 19I;
  #L2da0a0.  if v0 <= v1 then goto L2da0b2;
  #L2da0a4.  v0:= `@@com.huawei.secure.android.common.ssl.SSLUtil.b` @type ^`java.lang.String`[] @kind object;
  #L2da0a8.  call temp:= `setWhiteListCipherSuites`(v2, v0) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setWhiteListCipherSuites:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @kind static;
  #L2da0ae.  v2:= temp;
  #L2da0b0.  return v2;
  #L2da0b2.  v0:= `@@com.huawei.secure.android.common.ssl.SSLUtil.a` @type ^`java.lang.String`[] @kind object;
  #L2da0b6.  call temp:= `setWhiteListCipherSuites`(v2, v0) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setWhiteListCipherSuites:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @kind static;
  #L2da0bc.  v2:= temp;
  #L2da0be.  return v2;
}
procedure `boolean` `setWhiteListCipherSuites`(`javax.net.ssl.SSLSocket` v7 @kind object, `java.lang.String`[] v8 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setWhiteListCipherSuites:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2da0d0.  v0:= 0I;
  #L2da0d2.  if v7 != 0 then goto L2da0d8;
  #L2da0d6.  return v0;
  #L2da0d8.  call temp:= `getEnabledCipherSuites`(v7) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L2da0de.  v1:= temp @kind object;
  #L2da0e0.  v2:= new `java.util.ArrayList`;
  #L2da0e4.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2da0ea.  call temp:= `asList`(v8) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2da0f0.  v8:= temp @kind object;
  #L2da0f2.  v3:= length @variable v1;
  #L2da0f4.  v4:= 0I;
  #L2da0f6.  if v4 >= v3 then goto L2da122;
  #L2da0fa.  v5:= v1[v4] @kind object;
  #L2da0fe.  v6:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L2da102.  call temp:= `toUpperCase`(v5, v6) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L2da108.  v6:= temp @kind object;
  #L2da10a.  call temp:= `contains`(v8, v6) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2da110.  v6:= temp;
  #L2da112.  if v6 == 0 then goto L2da11c;
  #L2da116.  call temp:= `add`(v2, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2da11c.  v4:= v4 + 1;
  #L2da120.  goto L2da0f6;
  #L2da122.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2da128.  v8:= temp;
  #L2da12a.  if v8 != 0 then goto L2da150;
  #L2da12e.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2da134.  v8:= temp;
  #L2da136.  v8:= new `java.lang.String`[v8];
  #L2da13a.  call temp:= `toArray`(v2, v8) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L2da140.  v8:= temp @kind object;
  #L2da142.  v8:= (`java.lang.String`[]) v8 @kind object;
  #L2da146.  call `setEnabledCipherSuites`(v7, v8) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledCipherSuites:([Ljava/lang/String;)V` @kind virtual;
  #L2da14c.  v7:= 1I;
  #L2da14e.  return v7;
  #L2da150.  return v0;
}
