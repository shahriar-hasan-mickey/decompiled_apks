record `com.huawei.secure.android.common.encrypt.hash.SHA` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@com.huawei.secure.android.common.encrypt.hash.SHA.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@com.huawei.secure.android.common.encrypt.hash.SHA.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/secure/android/common/encrypt/hash/SHA;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2d401c.  v0:= "SHA-256" @kind object;
  #L2d4020.  v1:= "SHA-384" @kind object;
  #L2d4024.  v2:= "SHA-512" @kind object;
  #L2d4028.  temp:= new `java.lang.String`[v0, v1, v2];
  #L2d402e.  v0:= temp @kind object;
  #L2d4030.  `@@com.huawei.secure.android.common.encrypt.hash.SHA.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L2d4034.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.secure.android.common.encrypt.hash.SHA` v0 @kind this) @signature `Lcom/huawei/secure/android/common/encrypt/hash/SHA;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2d4048.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d404e.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v5 @kind object) @signature `Lcom/huawei/secure/android/common/encrypt/hash/SHA;.a:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2d3e00.  v0:= `@@com.huawei.secure.android.common.encrypt.hash.SHA.b` @type ^`java.lang.String`[] @kind object;
  #L2d3e04.  v1:= length @variable v0;
  #L2d3e06.  v2:= 0I;
  #L2d3e08.  v3:= 0I;
  #L2d3e0a.  if v3 >= v1 then goto L2d3e28;
  #L2d3e0e.  v4:= v0[v3] @kind object;
  #L2d3e12.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d3e18.  v4:= temp;
  #L2d3e1a.  if v4 == 0 then goto L2d3e22;
  #L2d3e1e.  v5:= 1I;
  #L2d3e20.  return v5;
  #L2d3e22.  v3:= v3 + 1;
  #L2d3e26.  goto L2d3e0a;
  #L2d3e28.  return v2;
}
procedure `java.lang.String` `sha256Encrypt`(`java.lang.String` v1 @kind object) @signature `Lcom/huawei/secure/android/common/encrypt/hash/SHA;.sha256Encrypt:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d3f5c.  v0:= "SHA-256" @kind object;
  #L2d3f60.  call temp:= `shaEncrypt`(v1, v0) @signature `Lcom/huawei/secure/android/common/encrypt/hash/SHA;.shaEncrypt:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2d3f66.  v1:= temp @kind object;
  #L2d3f68.  return v1 @kind object;
}
procedure `java.lang.String` `shaEncrypt`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/huawei/secure/android/common/encrypt/hash/SHA;.shaEncrypt:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2d3f7c.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2d3f82.  v0:= temp;
  #L2d3f84.  v1:= "" @kind object;
  #L2d3f88.  if v0 != 0 then goto L2d3fea;
  #L2d3f8c.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2d3f92.  v0:= temp;
  #L2d3f94.  if v0 == 0 then goto L2d3f9a;
  #L2d3f98.  goto L2d3fea;
  #L2d3f9a.  call temp:= `a`(v3) @signature `Lcom/huawei/secure/android/common/encrypt/hash/SHA;.a:(Ljava/lang/String;)Z` @kind static;
  #L2d3fa0.  v0:= temp;
  #L2d3fa2.  if v0 != 0 then goto L2d3fb6;
  #L2d3fa6.  v2:= `@@com.huawei.secure.android.common.encrypt.hash.SHA.a` @type ^`java.lang.String` @kind object;
  #L2d3faa.  v3:= "algorithm is not safe or legal" @kind object;
  #L2d3fae.  call `b`(v2, v3) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d3fb4.  return v1 @kind object;
  #L2d3fb6.  v0:= "UTF-8" @kind object;
  #L2d3fba.  call temp:= `getBytes`(v2, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L2d3fc0.  v2:= temp @kind object;
  #L2d3fc2.  goto L2d3fd8;
  #L2d3fc4.  v2:= 0I;
  #L2d3fc6.  v2:= new `byte`[v2];
  #L2d3fca.  v0:= `@@com.huawei.secure.android.common.encrypt.hash.SHA.a` @type ^`java.lang.String` @kind object;
  #L2d3fce.  v1:= "Error in generate SHA UnsupportedEncodingException" @kind object;
  #L2d3fd2.  call `b`(v0, v1) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d3fd8.  call temp:= `shaEncryptByte`(v2, v3) @signature `Lcom/huawei/secure/android/common/encrypt/hash/SHA;.shaEncryptByte:([BLjava/lang/String;)[B` @kind static;
  #L2d3fde.  v2:= temp @kind object;
  #L2d3fe0.  call temp:= `byteArray2HexStr`(v2) @signature `Lcom/huawei/secure/android/common/encrypt/utils/HexUtil;.byteArray2HexStr:([B)Ljava/lang/String;` @kind static;
  #L2d3fe6.  v2:= temp @kind object;
  #L2d3fe8.  return v2 @kind object;
  #L2d3fea.  v2:= `@@com.huawei.secure.android.common.encrypt.hash.SHA.a` @type ^`java.lang.String` @kind object;
  #L2d3fee.  v3:= "content or algorithm is null." @kind object;
  #L2d3ff2.  call `b`(v2, v3) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d3ff8.  return v1 @kind object;
  catch `java.io.UnsupportedEncodingException` @[L2d3fb6..L2d3fc2] goto L2d3fc4;
}
procedure `byte`[] `shaEncryptByte`(`byte`[] v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/huawei/secure/android/common/encrypt/hash/SHA;.shaEncryptByte:([BLjava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2d3ec8.  v0:= 0I;
  #L2d3eca.  if v2 == 0 then goto L2d3f28;
  #L2d3ece.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2d3ed4.  v1:= temp;
  #L2d3ed6.  if v1 == 0 then goto L2d3edc;
  #L2d3eda.  goto L2d3f28;
  #L2d3edc.  call temp:= `a`(v3) @signature `Lcom/huawei/secure/android/common/encrypt/hash/SHA;.a:(Ljava/lang/String;)Z` @kind static;
  #L2d3ee2.  v1:= temp;
  #L2d3ee4.  if v1 != 0 then goto L2d3efc;
  #L2d3ee8.  v2:= `@@com.huawei.secure.android.common.encrypt.hash.SHA.a` @type ^`java.lang.String` @kind object;
  #L2d3eec.  v3:= "algorithm is not safe or legal" @kind object;
  #L2d3ef0.  call `b`(v2, v3) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d3ef6.  v2:= new `byte`[v0];
  #L2d3efa.  return v2 @kind object;
  #L2d3efc.  call temp:= `getInstance`(v3) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L2d3f02.  v3:= temp @kind object;
  #L2d3f04.  call `update`(v3, v2) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L2d3f0a.  call temp:= `digest`(v3) @signature `Ljava/security/MessageDigest;.digest:()[B` @kind virtual;
  #L2d3f10.  v2:= temp @kind object;
  #L2d3f12.  return v2 @kind object;
  #L2d3f14.  v2:= `@@com.huawei.secure.android.common.encrypt.hash.SHA.a` @type ^`java.lang.String` @kind object;
  #L2d3f18.  v3:= "Error in generate SHA NoSuchAlgorithmException" @kind object;
  #L2d3f1c.  call `b`(v2, v3) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d3f22.  v2:= new `byte`[v0];
  #L2d3f26.  return v2 @kind object;
  #L2d3f28.  v2:= `@@com.huawei.secure.android.common.encrypt.hash.SHA.a` @type ^`java.lang.String` @kind object;
  #L2d3f2c.  v3:= "content or algorithm is null." @kind object;
  #L2d3f30.  call `b`(v2, v3) @signature `Lcom/huawei/secure/android/common/encrypt/utils/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d3f36.  v2:= new `byte`[v0];
  #L2d3f3a.  return v2 @kind object;
  catch `java.security.NoSuchAlgorithmException` @[L2d3efc..L2d3f12] goto L2d3f14;
}
procedure `boolean` `validateSHA`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/huawei/secure/android/common/encrypt/hash/SHA;.validateSHA:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d3e3c.  call temp:= `isEmpty`(v1) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2d3e42.  v0:= temp;
  #L2d3e44.  if v0 != 0 then goto L2d3e74;
  #L2d3e48.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2d3e4e.  v0:= temp;
  #L2d3e50.  if v0 != 0 then goto L2d3e74;
  #L2d3e54.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2d3e5a.  v0:= temp;
  #L2d3e5c.  if v0 == 0 then goto L2d3e62;
  #L2d3e60.  goto L2d3e74;
  #L2d3e62.  call temp:= `shaEncrypt`(v1, v3) @signature `Lcom/huawei/secure/android/common/encrypt/hash/SHA;.shaEncrypt:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2d3e68.  v1:= temp @kind object;
  #L2d3e6a.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d3e70.  v1:= temp;
  #L2d3e72.  return v1;
  #L2d3e74.  v1:= 0I;
  #L2d3e76.  return v1;
}
procedure `boolean` `validateSHA256`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/huawei/secure/android/common/encrypt/hash/SHA;.validateSHA256:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d3e88.  call temp:= `isEmpty`(v1) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2d3e8e.  v0:= temp;
  #L2d3e90.  if v0 != 0 then goto L2d3eb4;
  #L2d3e94.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2d3e9a.  v0:= temp;
  #L2d3e9c.  if v0 == 0 then goto L2d3ea2;
  #L2d3ea0.  goto L2d3eb4;
  #L2d3ea2.  call temp:= `sha256Encrypt`(v1) @signature `Lcom/huawei/secure/android/common/encrypt/hash/SHA;.sha256Encrypt:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2d3ea8.  v1:= temp @kind object;
  #L2d3eaa.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d3eb0.  v1:= temp;
  #L2d3eb2.  return v1;
  #L2d3eb4.  v1:= 0I;
  #L2d3eb6.  return v1;
}
