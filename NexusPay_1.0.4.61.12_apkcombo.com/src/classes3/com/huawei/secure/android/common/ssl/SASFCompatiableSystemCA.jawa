record `com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` @kind class @AccessFlag PUBLIC extends `org.apache.http.conn.ssl.SSLSocketFactory` @kind class {
  `javax.net.ssl.SSLContext` `com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.a` @AccessFlag PRIVATE;
  `javax.net.ssl.SSLSocket` `com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.b` @AccessFlag PRIVATE;
  `android.content.Context` `com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.c` @AccessFlag PRIVATE;
  `java.lang.String`[] `com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.d` @AccessFlag PRIVATE;
  `javax.net.ssl.X509TrustManager` `com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.e` @AccessFlag PRIVATE;
  `java.lang.String`[] `com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.f` @AccessFlag PRIVATE;
  `java.lang.String`[] `com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.g` @AccessFlag PRIVATE;
  `java.lang.String`[] `com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.h` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.j` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2d9474.  v0:= constclass @type ^`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` @kind object;
  #L2d9478.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L2d947e.  v0:= temp @kind object;
  #L2d9480.  `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @type ^`java.lang.String` := v0 @kind object;
  #L2d9484.  v0:= 0I;
  #L2d9486.  `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.j` @type ^`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` := v0 @kind object;
  #L2d948a.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v3 @kind this, `java.security.KeyStore` v4 @kind object, `android.content.Context` v5 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.<init>:(Ljava/security/KeyStore;Landroid/content/Context;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2d949c.  call `<init>`(v3, v4) @signature `Lorg/apache/http/conn/ssl/SSLSocketFactory;.<init>:(Ljava/security/KeyStore;)V` @kind direct;
  #L2d94a2.  v4:= 0I;
  #L2d94a4.  v3.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.b` @type ^`javax.net.ssl.SSLSocket` := v4 @kind object;
  #L2d94a8.  if v5 != 0 then goto L2d94bc;
  #L2d94ac.  v4:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @type ^`java.lang.String` @kind object;
  #L2d94b0.  v5:= "SecureSSLSocketFactory: context is null" @kind object;
  #L2d94b4.  call `b`(v4, v5) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d94ba.  return @kind void;
  #L2d94bc.  call `setContext`(v3, v5) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.setContext:(Landroid/content/Context;)V` @kind virtual;
  #L2d94c2.  call temp:= `setSSLContext`() @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setSSLContext:()Ljavax/net/ssl/SSLContext;` @kind static;
  #L2d94c8.  v0:= temp @kind object;
  #L2d94ca.  call `setSslContext`(v3, v0) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.setSslContext:(Ljavax/net/ssl/SSLContext;)V` @kind virtual;
  #L2d94d0.  call temp:= `getInstance`(v5) @signature `Lcom/huawei/secure/android/common/ssl/SSFSecureX509SingleInstance;.getInstance:(Landroid/content/Context;)Lcom/huawei/secure/android/common/ssl/SecureX509TrustManager;` @kind static;
  #L2d94d6.  v5:= temp @kind object;
  #L2d94d8.  v3.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.e` @type ^`javax.net.ssl.X509TrustManager` := v5 @kind object;
  #L2d94dc.  v0:= v3.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.a` @type ^`javax.net.ssl.SSLContext` @kind object;
  #L2d94e0.  v1:= 1I;
  #L2d94e2.  v1:= new `javax.net.ssl.X509TrustManager`[v1];
  #L2d94e6.  v2:= 0I;
  #L2d94e8.  v1[v2]:= v5 @kind object;
  #L2d94ec.  call `init`(v0, v4, v1, v4) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L2d94f2.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v3 @kind this, `java.security.KeyStore` v4 @kind object, `javax.net.ssl.X509TrustManager` v5 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.<init>:(Ljava/security/KeyStore;Ljavax/net/ssl/X509TrustManager;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2d9504.  call `<init>`(v3, v4) @signature `Lorg/apache/http/conn/ssl/SSLSocketFactory;.<init>:(Ljava/security/KeyStore;)V` @kind direct;
  #L2d950a.  v4:= 0I;
  #L2d950c.  v3.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.b` @type ^`javax.net.ssl.SSLSocket` := v4 @kind object;
  #L2d9510.  call temp:= `setSSLContext`() @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setSSLContext:()Ljavax/net/ssl/SSLContext;` @kind static;
  #L2d9516.  v0:= temp @kind object;
  #L2d9518.  v3.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.a` @type ^`javax.net.ssl.SSLContext` := v0 @kind object;
  #L2d951c.  call `setX509TrustManager`(v3, v5) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.setX509TrustManager:(Ljavax/net/ssl/X509TrustManager;)V` @kind virtual;
  #L2d9522.  v0:= v3.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.a` @type ^`javax.net.ssl.SSLContext` @kind object;
  #L2d9526.  v1:= 1I;
  #L2d9528.  v1:= new `javax.net.ssl.X509TrustManager`[v1];
  #L2d952c.  v2:= 0I;
  #L2d952e.  v1[v2]:= v5 @kind object;
  #L2d9532.  call `init`(v0, v4, v1, v4) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L2d9538.  return @kind void;
}
procedure `void` `a`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v4 @kind this, `java.net.Socket` v5 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.a:(Ljava/net/Socket;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d954c.  v0:= v4.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.h` @type ^`java.lang.String`[] @kind object;
  #L2d9550.  call temp:= `a`(v0) @signature `Lcom/huawei/secure/android/common/ssl/util/a;.a:([Ljava/lang/String;)Z` @kind static;
  #L2d9556.  v0:= temp;
  #L2d9558.  v1:= 1I;
  #L2d955a.  v2:= 0I;
  #L2d955c.  if v0 != 0 then goto L2d9582;
  #L2d9560.  v0:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @type ^`java.lang.String` @kind object;
  #L2d9564.  v3:= "set protocols" @kind object;
  #L2d9568.  call `c`(v0, v3) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d956e.  v0:= v5 @kind object;
  #L2d9570.  v0:= (`javax.net.ssl.SSLSocket`) v0 @kind object;
  #L2d9574.  v3:= v4.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.h` @type ^`java.lang.String`[] @kind object;
  #L2d9578.  call temp:= `setEnabledProtocols`(v0, v3) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setEnabledProtocols:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @kind static;
  #L2d957e.  v0:= 1I;
  #L2d9580.  goto L2d9584;
  #L2d9582.  v0:= 0I;
  #L2d9584.  v3:= v4.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.g` @type ^`java.lang.String`[] @kind object;
  #L2d9588.  call temp:= `a`(v3) @signature `Lcom/huawei/secure/android/common/ssl/util/a;.a:([Ljava/lang/String;)Z` @kind static;
  #L2d958e.  v3:= temp;
  #L2d9590.  if v3 == 0 then goto L2d95aa;
  #L2d9594.  v3:= v4.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.f` @type ^`java.lang.String`[] @kind object;
  #L2d9598.  call temp:= `a`(v3) @signature `Lcom/huawei/secure/android/common/ssl/util/a;.a:([Ljava/lang/String;)Z` @kind static;
  #L2d959e.  v3:= temp;
  #L2d95a0.  if v3 != 0 then goto L2d95a6;
  #L2d95a4.  goto L2d95aa;
  #L2d95a6.  v1:= 0I;
  #L2d95a8.  goto L2d95ea;
  #L2d95aa.  v2:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @type ^`java.lang.String` @kind object;
  #L2d95ae.  v3:= "set white cipher or black cipher" @kind object;
  #L2d95b2.  call `c`(v2, v3) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d95b8.  v2:= v5 @kind object;
  #L2d95ba.  v2:= (`javax.net.ssl.SSLSocket`) v2 @kind object;
  #L2d95be.  call `setEnabledProtocols`(v2) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setEnabledProtocols:(Ljavax/net/ssl/SSLSocket;)V` @kind static;
  #L2d95c4.  v3:= v4.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.g` @type ^`java.lang.String`[] @kind object;
  #L2d95c8.  call temp:= `a`(v3) @signature `Lcom/huawei/secure/android/common/ssl/util/a;.a:([Ljava/lang/String;)Z` @kind static;
  #L2d95ce.  v3:= temp;
  #L2d95d0.  if v3 != 0 then goto L2d95e0;
  #L2d95d4.  v3:= v4.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.g` @type ^`java.lang.String`[] @kind object;
  #L2d95d8.  call temp:= `setWhiteListCipherSuites`(v2, v3) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setWhiteListCipherSuites:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @kind static;
  #L2d95de.  goto L2d95ea;
  #L2d95e0.  v3:= v4.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.f` @type ^`java.lang.String`[] @kind object;
  #L2d95e4.  call temp:= `setBlackListCipherSuites`(v2, v3) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setBlackListCipherSuites:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)Z` @kind static;
  #L2d95ea.  if v0 != 0 then goto L2d9608;
  #L2d95ee.  v0:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @type ^`java.lang.String` @kind object;
  #L2d95f2.  v2:= "set default protocols" @kind object;
  #L2d95f6.  call `c`(v0, v2) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d95fc.  v0:= v5 @kind object;
  #L2d95fe.  v0:= (`javax.net.ssl.SSLSocket`) v0 @kind object;
  #L2d9602.  call `setEnabledProtocols`(v0) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setEnabledProtocols:(Ljavax/net/ssl/SSLSocket;)V` @kind static;
  #L2d9608.  if v1 != 0 then goto L2d9624;
  #L2d960c.  v0:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @type ^`java.lang.String` @kind object;
  #L2d9610.  v1:= "set default cipher suites" @kind object;
  #L2d9614.  call `c`(v0, v1) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d961a.  v5:= (`javax.net.ssl.SSLSocket`) v5 @kind object;
  #L2d961e.  call `setEnableSafeCipherSuites`(v5) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setEnableSafeCipherSuites:(Ljavax/net/ssl/SSLSocket;)V` @kind static;
  #L2d9624.  return @kind void;
}
procedure `void` `b`(`javax.net.ssl.X509TrustManager` v5 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.b:(Ljavax/net/ssl/X509TrustManager;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2d9638.  v0:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @type ^`java.lang.String` @kind object;
  #L2d963c.  v1:= "sasfc update socket factory trust manager" @kind object;
  #L2d9640.  call `c`(v0, v1) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d9646.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L2d964c.  v0:= temp @kind wide;
  #L2d964e.  v2:= new `com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA`;
  #L2d9652.  v3:= 0I;
  #L2d9654.  call `<init>`(v2, v3, v5) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.<init>:(Ljava/security/KeyStore;Ljavax/net/ssl/X509TrustManager;)V` @kind direct;
  #L2d965a.  `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.j` @type ^`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` := v2 @kind object;
  #L2d965e.  goto L2d969e;
  #L2d9660.  v5:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @type ^`java.lang.String` @kind object;
  #L2d9664.  v2:= "KeyStoreException" @kind object;
  #L2d9668.  call `b`(v5, v2) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d966e.  goto L2d969e;
  #L2d9670.  v5:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @type ^`java.lang.String` @kind object;
  #L2d9674.  v2:= "UnrecoverableKeyException" @kind object;
  #L2d9678.  call `b`(v5, v2) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d967e.  goto L2d969e;
  #L2d9680.  v5:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @type ^`java.lang.String` @kind object;
  #L2d9684.  v2:= "KeyManagementException" @kind object;
  #L2d9688.  call `b`(v5, v2) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d968e.  goto L2d969e;
  #L2d9690.  v5:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @type ^`java.lang.String` @kind object;
  #L2d9694.  v2:= "NoSuchAlgorithmException" @kind object;
  #L2d9698.  call `b`(v5, v2) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d969e.  v5:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @type ^`java.lang.String` @kind object;
  #L2d96a2.  v2:= new `java.lang.StringBuilder`;
  #L2d96a6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d96ac.  v3:= "sasf system ca update: cost : " @kind object;
  #L2d96b0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d96b6.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L2d96bc.  v3:= temp @kind wide;
  #L2d96be.  v3:= v3 - v0 @kind long;
  #L2d96c0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d96c6.  v0:= " ms" @kind object;
  #L2d96ca.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d96d0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d96d6.  v0:= temp @kind object;
  #L2d96d8.  call `a`(v5, v0) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.a:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d96de.  return @kind void;
  catch `java.security.NoSuchAlgorithmException` @[L2d964e..L2d965e] goto L2d9690;
  catch `java.security.KeyManagementException` @[L2d964e..L2d965e] goto L2d9680;
  catch `java.security.UnrecoverableKeyException` @[L2d964e..L2d965e] goto L2d9670;
  catch `java.security.KeyStoreException` @[L2d964e..L2d965e] goto L2d9660;
}
procedure `com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` `getInstance`(`java.security.KeyStore` v2 @kind object, `android.content.Context` v3 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.getInstance:(Ljava/security/KeyStore;Landroid/content/Context;)Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2d926c.  call `a`(v3) @signature `Lcom/huawei/secure/android/common/ssl/util/c;.a:(Landroid/content/Context;)V` @kind static;
  #L2d9272.  v0:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.j` @type ^`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` @kind object;
  #L2d9276.  if v0 != 0 then goto L2d92a0;
  #L2d927a.  v0:= constclass @type ^`com.huawei.secure.android.common.ssl.SecureApacheSSLSocketFactory` @kind object;
  #L2d927e.  @monitorenter v0
  #L2d9280.  v1:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.j` @type ^`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` @kind object;
  #L2d9284.  if v1 != 0 then goto L2d9296;
  #L2d9288.  v1:= new `com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA`;
  #L2d928c.  call `<init>`(v1, v2, v3) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.<init>:(Ljava/security/KeyStore;Landroid/content/Context;)V` @kind direct;
  #L2d9292.  `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.j` @type ^`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` := v1 @kind object;
  #L2d9296.  @monitorexit v0
  #L2d9298.  goto L2d92a0;
  #L2d929a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d929c.  @monitorexit v0
  #L2d929e.  throw v2;
  #L2d92a0.  v2:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.j` @type ^`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` @kind object;
  #L2d92a4.  return v2 @kind object;
  catch `java.lang.Throwable` @[L2d9280..L2d929e] goto L2d929a;
}
procedure `java.net.Socket` `createSocket`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v2 @kind this) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.createSocket:()Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d9330.  v0:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @type ^`java.lang.String` @kind object;
  #L2d9334.  v1:= "createSocket: " @kind object;
  #L2d9338.  call `c`(v0, v1) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d933e.  v0:= v2.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.a` @type ^`javax.net.ssl.SSLContext` @kind object;
  #L2d9342.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L2d9348.  v0:= temp @kind object;
  #L2d934a.  call temp:= `createSocket`(v0) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:()Ljava/net/Socket;` @kind virtual;
  #L2d9350.  v0:= temp @kind object;
  #L2d9352.  v1:= instanceof @variable v0 @type ^`javax.net.ssl.SSLSocket` @kind boolean;
  #L2d9356.  if v1 == 0 then goto L2d9382;
  #L2d935a.  call `a`(v2, v0) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.a:(Ljava/net/Socket;)V` @kind direct;
  #L2d9360.  v1:= v0 @kind object;
  #L2d9362.  v1:= (`javax.net.ssl.SSLSocket`) v1 @kind object;
  #L2d9366.  v2.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.b` @type ^`javax.net.ssl.SSLSocket` := v1 @kind object;
  #L2d936a.  call temp:= `getEnabledCipherSuites`(v1) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L2d9370.  v1:= temp @kind object;
  #L2d9372.  call temp:= `clone`(v1) @signature `[Ljava/lang/String;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2d9378.  v1:= temp @kind object;
  #L2d937a.  v1:= (`java.lang.String`[]) v1 @kind object;
  #L2d937e.  v2.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.d` @type ^`java.lang.String`[] := v1 @kind object;
  #L2d9382.  return v0 @kind object;
}
procedure `java.net.Socket` `createSocket`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v2 @kind this, `java.net.Socket` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `boolean` v6 ) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d9394.  v0:= `@@com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.i` @type ^`java.lang.String` @kind object;
  #L2d9398.  v1:= "createSocket: socket host port autoClose" @kind object;
  #L2d939c.  call `c`(v0, v1) @signature `Lcom/huawei/secure/android/common/ssl/util/g;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2d93a2.  v0:= v2.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.a` @type ^`javax.net.ssl.SSLContext` @kind object;
  #L2d93a6.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L2d93ac.  v0:= temp @kind object;
  #L2d93ae.  call temp:= `createSocket`(v0, v3, v4, v5, v6) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L2d93b4.  v3:= temp @kind object;
  #L2d93b6.  v4:= instanceof @variable v3 @type ^`javax.net.ssl.SSLSocket` @kind boolean;
  #L2d93ba.  if v4 == 0 then goto L2d93e6;
  #L2d93be.  call `a`(v2, v3) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.a:(Ljava/net/Socket;)V` @kind direct;
  #L2d93c4.  v4:= v3 @kind object;
  #L2d93c6.  v4:= (`javax.net.ssl.SSLSocket`) v4 @kind object;
  #L2d93ca.  v2.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.b` @type ^`javax.net.ssl.SSLSocket` := v4 @kind object;
  #L2d93ce.  call temp:= `getEnabledCipherSuites`(v4) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L2d93d4.  v4:= temp @kind object;
  #L2d93d6.  call temp:= `clone`(v4) @signature `[Ljava/lang/String;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2d93dc.  v4:= temp @kind object;
  #L2d93de.  v4:= (`java.lang.String`[]) v4 @kind object;
  #L2d93e2.  v2.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.d` @type ^`java.lang.String`[] := v4 @kind object;
  #L2d93e6.  return v3 @kind object;
}
procedure `java.lang.String`[] `getBlackCiphers`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v1 @kind this) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.getBlackCiphers:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d92c4.  v0:= v1.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.f` @type ^`java.lang.String`[] @kind object;
  #L2d92c8.  return v0 @kind object;
}
procedure `java.security.cert.X509Certificate`[] `getChain`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v2 @kind this) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.getChain:()[Ljava/security/cert/X509Certificate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d93f8.  v0:= v2.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.e` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L2d93fc.  v1:= instanceof @variable v0 @type ^`com.huawei.secure.android.common.ssl.SecureX509TrustManager` @kind boolean;
  #L2d9400.  if v1 == 0 then goto L2d9412;
  #L2d9404.  v0:= (`com.huawei.secure.android.common.ssl.SecureX509TrustManager`) v0 @kind object;
  #L2d9408.  call temp:= `getChain`(v0) @signature `Lcom/huawei/secure/android/common/ssl/SecureX509TrustManager;.getChain:()[Ljava/security/cert/X509Certificate;` @kind virtual;
  #L2d940e.  v0:= temp @kind object;
  #L2d9410.  return v0 @kind object;
  #L2d9412.  v0:= 0I;
  #L2d9414.  v0:= new `java.security.cert.X509Certificate`[v0];
  #L2d9418.  return v0 @kind object;
}
procedure `android.content.Context` `getContext`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v1 @kind this) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.getContext:()Landroid/content/Context;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d9254.  v0:= v1.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.c` @type ^`android.content.Context` @kind object;
  #L2d9258.  return v0 @kind object;
}
procedure `java.lang.String`[] `getProtocols`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v1 @kind this) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.getProtocols:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d92dc.  v0:= v1.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.h` @type ^`java.lang.String`[] @kind object;
  #L2d92e0.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLContext` `getSslContext`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v1 @kind this) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.getSslContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d942c.  v0:= v1.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.a` @type ^`javax.net.ssl.SSLContext` @kind object;
  #L2d9430.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocket` `getSslSocket`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v1 @kind this) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.getSslSocket:()Ljavax/net/ssl/SSLSocket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d9444.  v0:= v1.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.b` @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L2d9448.  return v0 @kind object;
}
procedure `java.lang.String`[] `getSupportedCipherSuites`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v1 @kind this) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.getSupportedCipherSuites:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d92f4.  v0:= v1.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.d` @type ^`java.lang.String`[] @kind object;
  #L2d92f8.  if v0 == 0 then goto L2d92fe;
  #L2d92fc.  return v0 @kind object;
  #L2d92fe.  v0:= 0I;
  #L2d9300.  v0:= new `java.lang.String`[v0];
  #L2d9304.  return v0 @kind object;
}
procedure `java.lang.String`[] `getWhiteCiphers`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v1 @kind this) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.getWhiteCiphers:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d9318.  v0:= v1.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.g` @type ^`java.lang.String`[] @kind object;
  #L2d931c.  return v0 @kind object;
}
procedure `javax.net.ssl.X509TrustManager` `getX509TrustManager`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v1 @kind this) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.getX509TrustManager:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d945c.  v0:= v1.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.e` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L2d9460.  return v0 @kind object;
}
procedure `void` `setBlackCiphers`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v0 @kind this, `java.lang.String`[] v1 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.setBlackCiphers:([Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L2d9708.  v0.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.f` @type ^`java.lang.String`[] := v1 @kind object;
  #L2d970c.  return @kind void;
}
procedure `void` `setContext`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v0 @kind this, `android.content.Context` v1 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.setContext:(Landroid/content/Context;)V` @AccessFlag PUBLIC {
    temp;

  #L2d9720.  call temp:= `getApplicationContext`(v1) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L2d9726.  v1:= temp @kind object;
  #L2d9728.  v0.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.c` @type ^`android.content.Context` := v1 @kind object;
  #L2d972c.  return @kind void;
}
procedure `void` `setProtocols`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v0 @kind this, `java.lang.String`[] v1 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.setProtocols:([Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L2d9740.  v0.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.h` @type ^`java.lang.String`[] := v1 @kind object;
  #L2d9744.  return @kind void;
}
procedure `void` `setSslContext`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v0 @kind this, `javax.net.ssl.SSLContext` v1 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.setSslContext:(Ljavax/net/ssl/SSLContext;)V` @AccessFlag PUBLIC {
    temp;

  #L2d9758.  v0.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.a` @type ^`javax.net.ssl.SSLContext` := v1 @kind object;
  #L2d975c.  return @kind void;
}
procedure `void` `setSslSocket`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.setSslSocket:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;

  #L2d9770.  v0.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.b` @type ^`javax.net.ssl.SSLSocket` := v1 @kind object;
  #L2d9774.  return @kind void;
}
procedure `void` `setWhiteCiphers`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v0 @kind this, `java.lang.String`[] v1 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.setWhiteCiphers:([Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L2d9788.  v0.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.g` @type ^`java.lang.String`[] := v1 @kind object;
  #L2d978c.  return @kind void;
}
procedure `void` `setX509TrustManager`(`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA` v0 @kind this, `javax.net.ssl.X509TrustManager` v1 @kind object) @signature `Lcom/huawei/secure/android/common/ssl/SASFCompatiableSystemCA;.setX509TrustManager:(Ljavax/net/ssl/X509TrustManager;)V` @AccessFlag PUBLIC {
    temp;

  #L2d97a0.  v0.`com.huawei.secure.android.common.ssl.SASFCompatiableSystemCA.e` @type ^`javax.net.ssl.X509TrustManager` := v1 @kind object;
  #L2d97a4.  return @kind void;
}
