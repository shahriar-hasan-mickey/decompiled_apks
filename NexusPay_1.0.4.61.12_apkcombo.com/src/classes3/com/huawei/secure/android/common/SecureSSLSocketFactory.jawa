record `com.huawei.secure.android.common.SecureSSLSocketFactory` @kind class @AccessFlag PUBLIC extends `javax.net.ssl.SSLSocketFactory` @kind class {
  `javax.net.ssl.SSLContext` `com.huawei.secure.android.common.SecureSSLSocketFactory.a` @AccessFlag PRIVATE;
  `android.content.Context` `com.huawei.secure.android.common.SecureSSLSocketFactory.b` @AccessFlag PRIVATE;
}
global `org.apache.http.conn.ssl.X509HostnameVerifier` `@@com.huawei.secure.android.common.SecureSSLSocketFactory.BROWSER_COMPATIBLE_HOSTNAME_VERIFIER` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.apache.http.conn.ssl.X509HostnameVerifier` `@@com.huawei.secure.android.common.SecureSSLSocketFactory.STRICT_HOSTNAME_VERIFIER` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.huawei.secure.android.common.SecureSSLSocketFactory` `@@com.huawei.secure.android.common.SecureSSLSocketFactory.c` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2d03f4.  v0:= new `org.apache.http.conn.ssl.BrowserCompatHostnameVerifier`;
  #L2d03f8.  call `<init>`(v0) @signature `Lorg/apache/http/conn/ssl/BrowserCompatHostnameVerifier;.<init>:()V` @kind direct;
  #L2d03fe.  `@@com.huawei.secure.android.common.SecureSSLSocketFactory.BROWSER_COMPATIBLE_HOSTNAME_VERIFIER` @type ^`org.apache.http.conn.ssl.X509HostnameVerifier` := v0 @kind object;
  #L2d0402.  v0:= new `org.apache.http.conn.ssl.StrictHostnameVerifier`;
  #L2d0406.  call `<init>`(v0) @signature `Lorg/apache/http/conn/ssl/StrictHostnameVerifier;.<init>:()V` @kind direct;
  #L2d040c.  `@@com.huawei.secure.android.common.SecureSSLSocketFactory.STRICT_HOSTNAME_VERIFIER` @type ^`org.apache.http.conn.ssl.X509HostnameVerifier` := v0 @kind object;
  #L2d0410.  v0:= 0I;
  #L2d0412.  `@@com.huawei.secure.android.common.SecureSSLSocketFactory.c` @type ^`com.huawei.secure.android.common.SecureSSLSocketFactory` := v0 @kind object;
  #L2d0416.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.secure.android.common.SecureSSLSocketFactory` v4 @kind this, `android.content.Context` v5 @kind object) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.<init>:(Landroid/content/Context;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d0428.  call `<init>`(v4) @signature `Ljavax/net/ssl/SSLSocketFactory;.<init>:()V` @kind direct;
  #L2d042e.  v0:= 0I;
  #L2d0430.  v4.`com.huawei.secure.android.common.SecureSSLSocketFactory.a` @type ^`javax.net.ssl.SSLContext` := v0 @kind object;
  #L2d0434.  v4.`com.huawei.secure.android.common.SecureSSLSocketFactory.b` @type ^`android.content.Context` := v5 @kind object;
  #L2d0438.  call temp:= `setSSLContext`() @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setSSLContext:()Ljavax/net/ssl/SSLContext;` @kind static;
  #L2d043e.  v5:= temp @kind object;
  #L2d0440.  v4.`com.huawei.secure.android.common.SecureSSLSocketFactory.a` @type ^`javax.net.ssl.SSLContext` := v5 @kind object;
  #L2d0444.  v5:= new `com.huawei.secure.android.common.SecureX509TrustManager`;
  #L2d0448.  v1:= v4.`com.huawei.secure.android.common.SecureSSLSocketFactory.b` @type ^`android.content.Context` @kind object;
  #L2d044c.  call `<init>`(v5, v1) @signature `Lcom/huawei/secure/android/common/SecureX509TrustManager;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L2d0452.  v1:= v4.`com.huawei.secure.android.common.SecureSSLSocketFactory.a` @type ^`javax.net.ssl.SSLContext` @kind object;
  #L2d0456.  v2:= 1I;
  #L2d0458.  v2:= new `javax.net.ssl.X509TrustManager`[v2];
  #L2d045c.  v3:= 0I;
  #L2d045e.  v2[v3]:= v5 @kind object;
  #L2d0462.  call `init`(v1, v0, v2, v0) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L2d0468.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.secure.android.common.SecureSSLSocketFactory` v3 @kind this, `java.io.InputStream` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.<init>:(Ljava/io/InputStream;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2d047c.  call `<init>`(v3) @signature `Ljavax/net/ssl/SSLSocketFactory;.<init>:()V` @kind direct;
  #L2d0482.  v0:= 0I;
  #L2d0484.  v3.`com.huawei.secure.android.common.SecureSSLSocketFactory.a` @type ^`javax.net.ssl.SSLContext` := v0 @kind object;
  #L2d0488.  call temp:= `setSSLContext`() @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setSSLContext:()Ljavax/net/ssl/SSLContext;` @kind static;
  #L2d048e.  v1:= temp @kind object;
  #L2d0490.  v3.`com.huawei.secure.android.common.SecureSSLSocketFactory.a` @type ^`javax.net.ssl.SSLContext` := v1 @kind object;
  #L2d0494.  v1:= new `com.huawei.secure.android.common.HiCloudX509TrustManager`;
  #L2d0498.  call `<init>`(v1, v4, v5) @signature `Lcom/huawei/secure/android/common/HiCloudX509TrustManager;.<init>:(Ljava/io/InputStream;Ljava/lang/String;)V` @kind direct;
  #L2d049e.  v4:= v3.`com.huawei.secure.android.common.SecureSSLSocketFactory.a` @type ^`javax.net.ssl.SSLContext` @kind object;
  #L2d04a2.  v5:= 1I;
  #L2d04a4.  v5:= new `javax.net.ssl.X509TrustManager`[v5];
  #L2d04a8.  v2:= 0I;
  #L2d04aa.  v5[v2]:= v1 @kind object;
  #L2d04ae.  call `init`(v4, v0, v5, v0) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L2d04b4.  return @kind void;
}
procedure `void` `a`(`com.huawei.secure.android.common.SecureSSLSocketFactory` v0 @kind this, `java.net.Socket` v1 @kind object) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.a:(Ljava/net/Socket;)V` @AccessFlag PRIVATE {
    temp;

  #L2d04c8.  v1:= (`javax.net.ssl.SSLSocket`) v1 @kind object;
  #L2d04cc.  call `setEnabledProtocols`(v1) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setEnabledProtocols:(Ljavax/net/ssl/SSLSocket;)V` @kind static;
  #L2d04d2.  call `setEnableSafeCipherSuites`(v1) @signature `Lcom/huawei/secure/android/common/ssl/SSLUtil;.setEnableSafeCipherSuites:(Ljavax/net/ssl/SSLSocket;)V` @kind static;
  #L2d04d8.  return @kind void;
}
procedure `com.huawei.secure.android.common.SecureSSLSocketFactory` `getInstance`(`android.content.Context` v2 @kind object) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.getInstance:(Landroid/content/Context;)Lcom/huawei/secure/android/common/SecureSSLSocketFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2d02a8.  v0:= `@@com.huawei.secure.android.common.SecureSSLSocketFactory.c` @type ^`com.huawei.secure.android.common.SecureSSLSocketFactory` @kind object;
  #L2d02ac.  if v0 != 0 then goto L2d02d6;
  #L2d02b0.  v0:= constclass @type ^`com.huawei.secure.android.common.SecureSSLSocketFactory` @kind object;
  #L2d02b4.  @monitorenter v0
  #L2d02b6.  v1:= `@@com.huawei.secure.android.common.SecureSSLSocketFactory.c` @type ^`com.huawei.secure.android.common.SecureSSLSocketFactory` @kind object;
  #L2d02ba.  if v1 != 0 then goto L2d02cc;
  #L2d02be.  v1:= new `com.huawei.secure.android.common.SecureSSLSocketFactory`;
  #L2d02c2.  call `<init>`(v1, v2) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L2d02c8.  `@@com.huawei.secure.android.common.SecureSSLSocketFactory.c` @type ^`com.huawei.secure.android.common.SecureSSLSocketFactory` := v1 @kind object;
  #L2d02cc.  @monitorexit v0
  #L2d02ce.  goto L2d02d6;
  #L2d02d0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d02d2.  @monitorexit v0
  #L2d02d4.  throw v2;
  #L2d02d6.  v2:= `@@com.huawei.secure.android.common.SecureSSLSocketFactory.c` @type ^`com.huawei.secure.android.common.SecureSSLSocketFactory` @kind object;
  #L2d02da.  return v2 @kind object;
  catch `java.lang.Throwable` @[L2d02b6..L2d02d4] goto L2d02d0;
}
procedure `java.net.Socket` `createSocket`(`com.huawei.secure.android.common.SecureSSLSocketFactory` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d0328.  v0:= v1.`com.huawei.secure.android.common.SecureSSLSocketFactory.a` @type ^`javax.net.ssl.SSLContext` @kind object;
  #L2d032c.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L2d0332.  v0:= temp @kind object;
  #L2d0334.  call temp:= `createSocket`(v0, v2, v3) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;` @kind virtual;
  #L2d033a.  v2:= temp @kind object;
  #L2d033c.  v3:= instanceof @variable v2 @type ^`javax.net.ssl.SSLSocket` @kind boolean;
  #L2d0340.  if v3 == 0 then goto L2d034a;
  #L2d0344.  call `a`(v1, v2) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.a:(Ljava/net/Socket;)V` @kind direct;
  #L2d034a.  return v2 @kind object;
}
procedure `java.net.Socket` `createSocket`(`com.huawei.secure.android.common.SecureSSLSocketFactory` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.net.InetAddress` v3 @kind object, `int` v4 ) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.createSocket:(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;

  #L2d035c.  call temp:= `createSocket`(v0, v1, v2) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;` @kind virtual;
  #L2d0362.  v1:= temp @kind object;
  #L2d0364.  return v1 @kind object;
}
procedure `java.net.Socket` `createSocket`(`com.huawei.secure.android.common.SecureSSLSocketFactory` v0 @kind this, `java.net.InetAddress` v1 @kind object, `int` v2 ) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.createSocket:(Ljava/net/InetAddress;I)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;

  #L2d0378.  call temp:= `getHostAddress`(v1) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L2d037e.  v1:= temp @kind object;
  #L2d0380.  call temp:= `createSocket`(v0, v1, v2) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;` @kind virtual;
  #L2d0386.  v1:= temp @kind object;
  #L2d0388.  return v1 @kind object;
}
procedure `java.net.Socket` `createSocket`(`com.huawei.secure.android.common.SecureSSLSocketFactory` v0 @kind this, `java.net.InetAddress` v1 @kind object, `int` v2 , `java.net.InetAddress` v3 @kind object, `int` v4 ) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.createSocket:(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;

  #L2d039c.  call temp:= `getHostAddress`(v1) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L2d03a2.  v1:= temp @kind object;
  #L2d03a4.  call temp:= `createSocket`(v0, v1, v2) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;` @kind virtual;
  #L2d03aa.  v1:= temp @kind object;
  #L2d03ac.  return v1 @kind object;
}
procedure `java.net.Socket` `createSocket`(`com.huawei.secure.android.common.SecureSSLSocketFactory` v1 @kind this, `java.net.Socket` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d03c0.  v0:= v1.`com.huawei.secure.android.common.SecureSSLSocketFactory.a` @type ^`javax.net.ssl.SSLContext` @kind object;
  #L2d03c4.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L2d03ca.  v0:= temp @kind object;
  #L2d03cc.  call temp:= `createSocket`(v0, v2, v3, v4, v5) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L2d03d2.  v2:= temp @kind object;
  #L2d03d4.  v3:= instanceof @variable v2 @type ^`javax.net.ssl.SSLSocket` @kind boolean;
  #L2d03d8.  if v3 == 0 then goto L2d03e2;
  #L2d03dc.  call `a`(v1, v2) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.a:(Ljava/net/Socket;)V` @kind direct;
  #L2d03e2.  return v2 @kind object;
}
procedure `java.lang.String`[] `getDefaultCipherSuites`(`com.huawei.secure.android.common.SecureSSLSocketFactory` v1 @kind this) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.getDefaultCipherSuites:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d02f8.  v0:= 0I;
  #L2d02fa.  v0:= new `java.lang.String`[v0];
  #L2d02fe.  return v0 @kind object;
}
procedure `java.lang.String`[] `getSupportedCipherSuites`(`com.huawei.secure.android.common.SecureSSLSocketFactory` v1 @kind this) @signature `Lcom/huawei/secure/android/common/SecureSSLSocketFactory;.getSupportedCipherSuites:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d0310.  v0:= 0I;
  #L2d0312.  v0:= new `java.lang.String`[v0];
  #L2d0316.  return v0 @kind object;
}
