record `com.huawei.hmf.tasks.a.i` @kind class @AccessFlag PUBLIC_FINAL extends `com.huawei.hmf.tasks.Task` @kind class {
  `java.lang.Object` `com.huawei.hmf.tasks.a.i.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.huawei.hmf.tasks.a.i.b` @AccessFlag PRIVATE;
  `boolean` `com.huawei.hmf.tasks.a.i.c` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `com.huawei.hmf.tasks.a.i.d` @AccessFlag PRIVATE;
  `java.lang.Exception` `com.huawei.hmf.tasks.a.i.e` @AccessFlag PRIVATE;
  `java.util.List` `com.huawei.hmf.tasks.a.i.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hmf.tasks.a.i` v1 @kind this) @signature `Lcom/huawei/hmf/tasks/a/i;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c26a0.  call `<init>`(v1) @signature `Lcom/huawei/hmf/tasks/Task;.<init>:()V` @kind direct;
  #L1c26a6.  v0:= new `java.lang.Object`;
  #L1c26aa.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c26b0.  v1.`com.huawei.hmf.tasks.a.i.a` @type ^`java.lang.Object` := v0 @kind object;
  #L1c26b4.  v0:= new `java.util.ArrayList`;
  #L1c26b8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1c26be.  v1.`com.huawei.hmf.tasks.a.i.f` @type ^`java.util.List` := v0 @kind object;
  #L1c26c2.  return @kind void;
}
procedure `com.huawei.hmf.tasks.Task` `a`(`com.huawei.hmf.tasks.a.i` v3 @kind this, `com.huawei.hmf.tasks.ExecuteResult` v4 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.a:(Lcom/huawei/hmf/tasks/ExecuteResult;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1c2274.  v0:= v3.`com.huawei.hmf.tasks.a.i.a` @type ^`java.lang.Object` @kind object;
  #L1c2278.  @monitorenter v0
  #L1c227a.  call temp:= `isComplete`(v3) @signature `Lcom/huawei/hmf/tasks/a/i;.isComplete:()Z` @kind virtual;
  #L1c2280.  v1:= temp;
  #L1c2282.  if v1 != 0 then goto L1c2290;
  #L1c2286.  v2:= v3.`com.huawei.hmf.tasks.a.i.f` @type ^`java.util.List` @kind object;
  #L1c228a.  call temp:= `add`(v2, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1c2290.  @monitorexit v0
  #L1c2292.  if v1 == 0 then goto L1c229c;
  #L1c2296.  call `onComplete`(v4, v3) @signature `Lcom/huawei/hmf/tasks/ExecuteResult;.onComplete:(Lcom/huawei/hmf/tasks/Task;)V` @kind interface;
  #L1c229c.  return v3 @kind object;
  #L1c229e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c22a0.  @monitorexit v0
  #L1c22a2.  throw v4;
  catch `java.lang.Throwable` @[L1c227a..L1c2292] goto L1c229e;
  catch `java.lang.Throwable` @[L1c22a0..L1c22a2] goto L1c229e;
}
procedure `void` `b`(`com.huawei.hmf.tasks.a.i` v3 @kind this) @signature `Lcom/huawei/hmf/tasks/a/i;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1c277c.  v0:= v3.`com.huawei.hmf.tasks.a.i.a` @type ^`java.lang.Object` @kind object;
  #L1c2780.  @monitorenter v0
  #L1c2782.  v1:= v3.`com.huawei.hmf.tasks.a.i.f` @type ^`java.util.List` @kind object;
  #L1c2786.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c278c.  v1:= temp @kind object;
  #L1c278e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c2794.  v2:= temp;
  #L1c2796.  if v2 == 0 then goto L1c27c0;
  #L1c279a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c27a0.  v2:= temp @kind object;
  #L1c27a2.  v2:= (`com.huawei.hmf.tasks.ExecuteResult`) v2 @kind object;
  #L1c27a6.  call `onComplete`(v2, v3) @signature `Lcom/huawei/hmf/tasks/ExecuteResult;.onComplete:(Lcom/huawei/hmf/tasks/Task;)V` @kind interface;
  #L1c27ac.  goto L1c278e;
  #L1c27ae.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L1c27b0.  v2:= new `java.lang.RuntimeException`;
  #L1c27b4.  call `<init>`(v2, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1c27ba.  throw v2;
  #L1c27bc.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1c27be.  throw v1;
  #L1c27c0.  v1:= 0I;
  #L1c27c2.  v3.`com.huawei.hmf.tasks.a.i.f` @type ^`java.util.List` := v1 @kind object;
  #L1c27c6.  @monitorexit v0
  #L1c27c8.  return @kind void;
  #L1c27ca.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c27cc.  @monitorexit v0
  #L1c27ce.  throw v1;
  catch `java.lang.Throwable` @[L1c2782..L1c27a6] goto L1c27ca;
  catch `java.lang.RuntimeException` @[L1c27a6..L1c27ac] goto L1c27bc;
  catch `java.lang.Exception` @[L1c27a6..L1c27ac] goto L1c27ae;
  catch `java.lang.Throwable` @[L1c27a6..L1c27ac] goto L1c27ca;
  catch `java.lang.Throwable` @[L1c27b0..L1c27ce] goto L1c27ca;
}
procedure `void` `a`(`com.huawei.hmf.tasks.a.i` v2 @kind this, `java.lang.Exception` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.a:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c26d4.  v0:= v2.`com.huawei.hmf.tasks.a.i.a` @type ^`java.lang.Object` @kind object;
  #L1c26d8.  @monitorenter v0
  #L1c26da.  v1:= v2.`com.huawei.hmf.tasks.a.i.b` @type ^`boolean` @kind boolean;
  #L1c26de.  if v1 == 0 then goto L1c26e6;
  #L1c26e2.  @monitorexit v0
  #L1c26e4.  return @kind void;
  #L1c26e6.  v1:= 1I;
  #L1c26e8.  v2.`com.huawei.hmf.tasks.a.i.b` @type ^`boolean` := v1 @kind boolean;
  #L1c26ec.  v2.`com.huawei.hmf.tasks.a.i.e` @type ^`java.lang.Exception` := v3 @kind object;
  #L1c26f0.  v3:= v2.`com.huawei.hmf.tasks.a.i.a` @type ^`java.lang.Object` @kind object;
  #L1c26f4.  call `notifyAll`(v3) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L1c26fa.  call `b`(v2) @signature `Lcom/huawei/hmf/tasks/a/i;.b:()V` @kind direct;
  #L1c2700.  @monitorexit v0
  #L1c2702.  return @kind void;
  #L1c2704.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c2706.  @monitorexit v0
  #L1c2708.  throw v3;
  catch `java.lang.Throwable` @[L1c26da..L1c2708] goto L1c2704;
}
procedure `void` `a`(`com.huawei.hmf.tasks.a.i` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c2728.  v0:= v2.`com.huawei.hmf.tasks.a.i.a` @type ^`java.lang.Object` @kind object;
  #L1c272c.  @monitorenter v0
  #L1c272e.  v1:= v2.`com.huawei.hmf.tasks.a.i.b` @type ^`boolean` @kind boolean;
  #L1c2732.  if v1 == 0 then goto L1c273a;
  #L1c2736.  @monitorexit v0
  #L1c2738.  return @kind void;
  #L1c273a.  v1:= 1I;
  #L1c273c.  v2.`com.huawei.hmf.tasks.a.i.b` @type ^`boolean` := v1 @kind boolean;
  #L1c2740.  v2.`com.huawei.hmf.tasks.a.i.d` @type ^`java.lang.Object` := v3 @kind object;
  #L1c2744.  v3:= v2.`com.huawei.hmf.tasks.a.i.a` @type ^`java.lang.Object` @kind object;
  #L1c2748.  call `notifyAll`(v3) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L1c274e.  call `b`(v2) @signature `Lcom/huawei/hmf/tasks/a/i;.b:()V` @kind direct;
  #L1c2754.  @monitorexit v0
  #L1c2756.  return @kind void;
  #L1c2758.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c275a.  @monitorexit v0
  #L1c275c.  throw v3;
  catch `java.lang.Throwable` @[L1c272e..L1c275c] goto L1c2758;
}
procedure `boolean` `a`(`com.huawei.hmf.tasks.a.i` v3 @kind this) @signature `Lcom/huawei/hmf/tasks/a/i;.a:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1c2188.  v0:= v3.`com.huawei.hmf.tasks.a.i.a` @type ^`java.lang.Object` @kind object;
  #L1c218c.  @monitorenter v0
  #L1c218e.  v1:= v3.`com.huawei.hmf.tasks.a.i.b` @type ^`boolean` @kind boolean;
  #L1c2192.  if v1 == 0 then goto L1c219c;
  #L1c2196.  v1:= 0I;
  #L1c2198.  @monitorexit v0
  #L1c219a.  return v1;
  #L1c219c.  v1:= 1I;
  #L1c219e.  v3.`com.huawei.hmf.tasks.a.i.b` @type ^`boolean` := v1 @kind boolean;
  #L1c21a2.  v3.`com.huawei.hmf.tasks.a.i.c` @type ^`boolean` := v1 @kind boolean;
  #L1c21a6.  v2:= v3.`com.huawei.hmf.tasks.a.i.a` @type ^`java.lang.Object` @kind object;
  #L1c21aa.  call `notifyAll`(v2) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L1c21b0.  call `b`(v3) @signature `Lcom/huawei/hmf/tasks/a/i;.b:()V` @kind direct;
  #L1c21b6.  @monitorexit v0
  #L1c21b8.  return v1;
  #L1c21ba.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c21bc.  @monitorexit v0
  #L1c21be.  throw v1;
  catch `java.lang.Throwable` @[L1c218e..L1c21be] goto L1c21ba;
}
procedure `com.huawei.hmf.tasks.Task` `addOnCanceledListener`(`com.huawei.hmf.tasks.a.i` v2 @kind this, `android.app.Activity` v3 @kind object, `com.huawei.hmf.tasks.OnCanceledListener` v4 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnCanceledListener:(Landroid/app/Activity;Lcom/huawei/hmf/tasks/OnCanceledListener;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c22c8.  v0:= new `com.huawei.hmf.tasks.a.b`;
  #L1c22cc.  call temp:= `uiThread`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.uiThread:()Ljava/util/concurrent/Executor;` @kind static;
  #L1c22d2.  v1:= temp @kind object;
  #L1c22d4.  call `<init>`(v0, v1, v4) @signature `Lcom/huawei/hmf/tasks/a/b;.<init>:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnCanceledListener;)V` @kind direct;
  #L1c22da.  call `a`(v3, v0) @signature `Lcom/huawei/hmf/tasks/a/g;.a:(Landroid/app/Activity;Lcom/huawei/hmf/tasks/ExecuteResult;)V` @kind static;
  #L1c22e0.  call temp:= `a`(v2, v0) @signature `Lcom/huawei/hmf/tasks/a/i;.a:(Lcom/huawei/hmf/tasks/ExecuteResult;)Lcom/huawei/hmf/tasks/Task;` @kind direct;
  #L1c22e6.  return v2 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `addOnCanceledListener`(`com.huawei.hmf.tasks.a.i` v1 @kind this, `com.huawei.hmf.tasks.OnCanceledListener` v2 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnCanceledListener:(Lcom/huawei/hmf/tasks/OnCanceledListener;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c22f8.  call temp:= `uiThread`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.uiThread:()Ljava/util/concurrent/Executor;` @kind static;
  #L1c22fe.  v0:= temp @kind object;
  #L1c2300.  call temp:= `addOnCanceledListener`(v1, v0, v2) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnCanceledListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnCanceledListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c2306.  v2:= temp @kind object;
  #L1c2308.  return v2 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `addOnCanceledListener`(`com.huawei.hmf.tasks.a.i` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `com.huawei.hmf.tasks.OnCanceledListener` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnCanceledListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnCanceledListener;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c231c.  v0:= new `com.huawei.hmf.tasks.a.b`;
  #L1c2320.  call `<init>`(v0, v2, v3) @signature `Lcom/huawei/hmf/tasks/a/b;.<init>:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnCanceledListener;)V` @kind direct;
  #L1c2326.  call temp:= `a`(v1, v0) @signature `Lcom/huawei/hmf/tasks/a/i;.a:(Lcom/huawei/hmf/tasks/ExecuteResult;)Lcom/huawei/hmf/tasks/Task;` @kind direct;
  #L1c232c.  return v1 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `addOnCompleteListener`(`com.huawei.hmf.tasks.a.i` v2 @kind this, `android.app.Activity` v3 @kind object, `com.huawei.hmf.tasks.OnCompleteListener` v4 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnCompleteListener:(Landroid/app/Activity;Lcom/huawei/hmf/tasks/OnCompleteListener;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c2340.  v0:= new `com.huawei.hmf.tasks.a.d`;
  #L1c2344.  call temp:= `uiThread`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.uiThread:()Ljava/util/concurrent/Executor;` @kind static;
  #L1c234a.  v1:= temp @kind object;
  #L1c234c.  call `<init>`(v0, v1, v4) @signature `Lcom/huawei/hmf/tasks/a/d;.<init>:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnCompleteListener;)V` @kind direct;
  #L1c2352.  call `a`(v3, v0) @signature `Lcom/huawei/hmf/tasks/a/g;.a:(Landroid/app/Activity;Lcom/huawei/hmf/tasks/ExecuteResult;)V` @kind static;
  #L1c2358.  call temp:= `a`(v2, v0) @signature `Lcom/huawei/hmf/tasks/a/i;.a:(Lcom/huawei/hmf/tasks/ExecuteResult;)Lcom/huawei/hmf/tasks/Task;` @kind direct;
  #L1c235e.  return v2 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `addOnCompleteListener`(`com.huawei.hmf.tasks.a.i` v1 @kind this, `com.huawei.hmf.tasks.OnCompleteListener` v2 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnCompleteListener:(Lcom/huawei/hmf/tasks/OnCompleteListener;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c2370.  call temp:= `uiThread`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.uiThread:()Ljava/util/concurrent/Executor;` @kind static;
  #L1c2376.  v0:= temp @kind object;
  #L1c2378.  call temp:= `addOnCompleteListener`(v1, v0, v2) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnCompleteListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnCompleteListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c237e.  v2:= temp @kind object;
  #L1c2380.  return v2 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `addOnCompleteListener`(`com.huawei.hmf.tasks.a.i` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `com.huawei.hmf.tasks.OnCompleteListener` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnCompleteListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnCompleteListener;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c2394.  v0:= new `com.huawei.hmf.tasks.a.d`;
  #L1c2398.  call `<init>`(v0, v2, v3) @signature `Lcom/huawei/hmf/tasks/a/d;.<init>:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnCompleteListener;)V` @kind direct;
  #L1c239e.  call temp:= `a`(v1, v0) @signature `Lcom/huawei/hmf/tasks/a/i;.a:(Lcom/huawei/hmf/tasks/ExecuteResult;)Lcom/huawei/hmf/tasks/Task;` @kind direct;
  #L1c23a4.  return v1 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `addOnFailureListener`(`com.huawei.hmf.tasks.a.i` v2 @kind this, `android.app.Activity` v3 @kind object, `com.huawei.hmf.tasks.OnFailureListener` v4 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnFailureListener:(Landroid/app/Activity;Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c23b8.  v0:= new `com.huawei.hmf.tasks.a.f`;
  #L1c23bc.  call temp:= `uiThread`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.uiThread:()Ljava/util/concurrent/Executor;` @kind static;
  #L1c23c2.  v1:= temp @kind object;
  #L1c23c4.  call `<init>`(v0, v1, v4) @signature `Lcom/huawei/hmf/tasks/a/f;.<init>:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnFailureListener;)V` @kind direct;
  #L1c23ca.  call `a`(v3, v0) @signature `Lcom/huawei/hmf/tasks/a/g;.a:(Landroid/app/Activity;Lcom/huawei/hmf/tasks/ExecuteResult;)V` @kind static;
  #L1c23d0.  call temp:= `a`(v2, v0) @signature `Lcom/huawei/hmf/tasks/a/i;.a:(Lcom/huawei/hmf/tasks/ExecuteResult;)Lcom/huawei/hmf/tasks/Task;` @kind direct;
  #L1c23d6.  return v2 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `addOnFailureListener`(`com.huawei.hmf.tasks.a.i` v1 @kind this, `com.huawei.hmf.tasks.OnFailureListener` v2 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnFailureListener:(Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c23e8.  call temp:= `uiThread`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.uiThread:()Ljava/util/concurrent/Executor;` @kind static;
  #L1c23ee.  v0:= temp @kind object;
  #L1c23f0.  call temp:= `addOnFailureListener`(v1, v0, v2) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnFailureListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c23f6.  v2:= temp @kind object;
  #L1c23f8.  return v2 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `addOnFailureListener`(`com.huawei.hmf.tasks.a.i` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `com.huawei.hmf.tasks.OnFailureListener` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnFailureListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c240c.  v0:= new `com.huawei.hmf.tasks.a.f`;
  #L1c2410.  call `<init>`(v0, v2, v3) @signature `Lcom/huawei/hmf/tasks/a/f;.<init>:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnFailureListener;)V` @kind direct;
  #L1c2416.  call temp:= `a`(v1, v0) @signature `Lcom/huawei/hmf/tasks/a/i;.a:(Lcom/huawei/hmf/tasks/ExecuteResult;)Lcom/huawei/hmf/tasks/Task;` @kind direct;
  #L1c241c.  return v1 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `addOnSuccessListener`(`com.huawei.hmf.tasks.a.i` v2 @kind this, `android.app.Activity` v3 @kind object, `com.huawei.hmf.tasks.OnSuccessListener` v4 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnSuccessListener:(Landroid/app/Activity;Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c2430.  v0:= new `com.huawei.hmf.tasks.a.h`;
  #L1c2434.  call temp:= `uiThread`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.uiThread:()Ljava/util/concurrent/Executor;` @kind static;
  #L1c243a.  v1:= temp @kind object;
  #L1c243c.  call `<init>`(v0, v1, v4) @signature `Lcom/huawei/hmf/tasks/a/h;.<init>:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnSuccessListener;)V` @kind direct;
  #L1c2442.  call `a`(v3, v0) @signature `Lcom/huawei/hmf/tasks/a/g;.a:(Landroid/app/Activity;Lcom/huawei/hmf/tasks/ExecuteResult;)V` @kind static;
  #L1c2448.  call temp:= `a`(v2, v0) @signature `Lcom/huawei/hmf/tasks/a/i;.a:(Lcom/huawei/hmf/tasks/ExecuteResult;)Lcom/huawei/hmf/tasks/Task;` @kind direct;
  #L1c244e.  return v2 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `addOnSuccessListener`(`com.huawei.hmf.tasks.a.i` v1 @kind this, `com.huawei.hmf.tasks.OnSuccessListener` v2 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnSuccessListener:(Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c2460.  call temp:= `uiThread`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.uiThread:()Ljava/util/concurrent/Executor;` @kind static;
  #L1c2466.  v0:= temp @kind object;
  #L1c2468.  call temp:= `addOnSuccessListener`(v1, v0, v2) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnSuccessListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c246e.  v2:= temp @kind object;
  #L1c2470.  return v2 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `addOnSuccessListener`(`com.huawei.hmf.tasks.a.i` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `com.huawei.hmf.tasks.OnSuccessListener` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnSuccessListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c2484.  v0:= new `com.huawei.hmf.tasks.a.h`;
  #L1c2488.  call `<init>`(v0, v2, v3) @signature `Lcom/huawei/hmf/tasks/a/h;.<init>:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnSuccessListener;)V` @kind direct;
  #L1c248e.  call temp:= `a`(v1, v0) @signature `Lcom/huawei/hmf/tasks/a/i;.a:(Lcom/huawei/hmf/tasks/ExecuteResult;)Lcom/huawei/hmf/tasks/Task;` @kind direct;
  #L1c2494.  return v1 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `continueWith`(`com.huawei.hmf.tasks.a.i` v1 @kind this, `com.huawei.hmf.tasks.Continuation` v2 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.continueWith:(Lcom/huawei/hmf/tasks/Continuation;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c24a8.  call temp:= `uiThread`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.uiThread:()Ljava/util/concurrent/Executor;` @kind static;
  #L1c24ae.  v0:= temp @kind object;
  #L1c24b0.  call temp:= `continueWith`(v1, v0, v2) @signature `Lcom/huawei/hmf/tasks/a/i;.continueWith:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/Continuation;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c24b6.  v2:= temp @kind object;
  #L1c24b8.  return v2 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `continueWith`(`com.huawei.hmf.tasks.a.i` v2 @kind this, `java.util.concurrent.Executor` v3 @kind object, `com.huawei.hmf.tasks.Continuation` v4 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.continueWith:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/Continuation;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c24cc.  v0:= new `com.huawei.hmf.tasks.a.i`;
  #L1c24d0.  call `<init>`(v0) @signature `Lcom/huawei/hmf/tasks/a/i;.<init>:()V` @kind direct;
  #L1c24d6.  v1:= new `com.huawei.hmf.tasks.a.i$e`;
  #L1c24da.  call `<init>`(v1, v2, v0, v4) @signature `Lcom/huawei/hmf/tasks/a/i$e;.<init>:(Lcom/huawei/hmf/tasks/a/i;Lcom/huawei/hmf/tasks/a/i;Lcom/huawei/hmf/tasks/Continuation;)V` @kind direct;
  #L1c24e0.  call temp:= `addOnCompleteListener`(v2, v3, v1) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnCompleteListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnCompleteListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c24e6.  return v0 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `continueWithTask`(`com.huawei.hmf.tasks.a.i` v1 @kind this, `com.huawei.hmf.tasks.Continuation` v2 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.continueWithTask:(Lcom/huawei/hmf/tasks/Continuation;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c24f8.  call temp:= `uiThread`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.uiThread:()Ljava/util/concurrent/Executor;` @kind static;
  #L1c24fe.  v0:= temp @kind object;
  #L1c2500.  call temp:= `continueWithTask`(v1, v0, v2) @signature `Lcom/huawei/hmf/tasks/a/i;.continueWithTask:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/Continuation;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c2506.  v2:= temp @kind object;
  #L1c2508.  return v2 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `continueWithTask`(`com.huawei.hmf.tasks.a.i` v2 @kind this, `java.util.concurrent.Executor` v3 @kind object, `com.huawei.hmf.tasks.Continuation` v4 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.continueWithTask:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/Continuation;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c251c.  v0:= new `com.huawei.hmf.tasks.a.i`;
  #L1c2520.  call `<init>`(v0) @signature `Lcom/huawei/hmf/tasks/a/i;.<init>:()V` @kind direct;
  #L1c2526.  v1:= new `com.huawei.hmf.tasks.a.i$d`;
  #L1c252a.  call `<init>`(v1, v2, v4, v0) @signature `Lcom/huawei/hmf/tasks/a/i$d;.<init>:(Lcom/huawei/hmf/tasks/a/i;Lcom/huawei/hmf/tasks/Continuation;Lcom/huawei/hmf/tasks/a/i;)V` @kind direct;
  #L1c2530.  call temp:= `addOnCompleteListener`(v2, v3, v1) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnCompleteListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnCompleteListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c2536.  return v0 @kind object;
}
procedure `java.lang.Exception` `getException`(`com.huawei.hmf.tasks.a.i` v2 @kind this) @signature `Lcom/huawei/hmf/tasks/a/i;.getException:()Ljava/lang/Exception;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c25b8.  v0:= v2.`com.huawei.hmf.tasks.a.i.a` @type ^`java.lang.Object` @kind object;
  #L1c25bc.  @monitorenter v0
  #L1c25be.  v1:= v2.`com.huawei.hmf.tasks.a.i.e` @type ^`java.lang.Exception` @kind object;
  #L1c25c2.  @monitorexit v0
  #L1c25c4.  return v1 @kind object;
  #L1c25c6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c25c8.  @monitorexit v0
  #L1c25ca.  throw v1;
  catch `java.lang.Throwable` @[L1c25be..L1c25ca] goto L1c25c6;
}
procedure `java.lang.Object` `getResult`(`com.huawei.hmf.tasks.a.i` v3 @kind this) @signature `Lcom/huawei/hmf/tasks/a/i;.getResult:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1c25e8.  v0:= v3.`com.huawei.hmf.tasks.a.i.a` @type ^`java.lang.Object` @kind object;
  #L1c25ec.  @monitorenter v0
  #L1c25ee.  v1:= v3.`com.huawei.hmf.tasks.a.i.e` @type ^`java.lang.Exception` @kind object;
  #L1c25f2.  if v1 != 0 then goto L1c25fe;
  #L1c25f6.  v1:= v3.`com.huawei.hmf.tasks.a.i.d` @type ^`java.lang.Object` @kind object;
  #L1c25fa.  @monitorexit v0
  #L1c25fc.  return v1 @kind object;
  #L1c25fe.  v1:= new `java.lang.RuntimeException`;
  #L1c2602.  v2:= v3.`com.huawei.hmf.tasks.a.i.e` @type ^`java.lang.Exception` @kind object;
  #L1c2606.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1c260c.  throw v1;
  #L1c260e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c2610.  @monitorexit v0
  #L1c2612.  throw v1;
  catch `java.lang.Throwable` @[L1c25ee..L1c2612] goto L1c260e;
}
procedure `java.lang.Object` `getResultThrowException`(`com.huawei.hmf.tasks.a.i` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.getResultThrowException:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c2630.  v0:= v2.`com.huawei.hmf.tasks.a.i.a` @type ^`java.lang.Object` @kind object;
  #L1c2634.  @monitorenter v0
  #L1c2636.  if v3 == 0 then goto L1c265e;
  #L1c263a.  v1:= v2.`com.huawei.hmf.tasks.a.i.e` @type ^`java.lang.Exception` @kind object;
  #L1c263e.  call temp:= `isInstance`(v3, v1) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c2644.  v1:= temp;
  #L1c2646.  if v1 != 0 then goto L1c264c;
  #L1c264a.  goto L1c265e;
  #L1c264c.  v1:= v2.`com.huawei.hmf.tasks.a.i.e` @type ^`java.lang.Exception` @kind object;
  #L1c2650.  call temp:= `cast`(v3, v1) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c2656.  v3:= temp @kind object;
  #L1c2658.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L1c265c.  throw v3;
  #L1c265e.  v3:= v2.`com.huawei.hmf.tasks.a.i.e` @type ^`java.lang.Exception` @kind object;
  #L1c2662.  if v3 != 0 then goto L1c266e;
  #L1c2666.  v3:= v2.`com.huawei.hmf.tasks.a.i.d` @type ^`java.lang.Object` @kind object;
  #L1c266a.  @monitorexit v0
  #L1c266c.  return v3 @kind object;
  #L1c266e.  v3:= new `java.lang.RuntimeException`;
  #L1c2672.  v1:= v2.`com.huawei.hmf.tasks.a.i.e` @type ^`java.lang.Exception` @kind object;
  #L1c2676.  call `<init>`(v3, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1c267c.  throw v3;
  #L1c267e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c2680.  @monitorexit v0
  #L1c2682.  throw v3;
  catch `java.lang.Throwable` @[L1c263a..L1c2682] goto L1c267e;
}
procedure `boolean` `isCanceled`(`com.huawei.hmf.tasks.a.i` v1 @kind this) @signature `Lcom/huawei/hmf/tasks/a/i;.isCanceled:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c21dc.  v0:= v1.`com.huawei.hmf.tasks.a.i.c` @type ^`boolean` @kind boolean;
  #L1c21e0.  return v0;
}
procedure `boolean` `isComplete`(`com.huawei.hmf.tasks.a.i` v2 @kind this) @signature `Lcom/huawei/hmf/tasks/a/i;.isComplete:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c21f4.  v0:= v2.`com.huawei.hmf.tasks.a.i.a` @type ^`java.lang.Object` @kind object;
  #L1c21f8.  @monitorenter v0
  #L1c21fa.  v1:= v2.`com.huawei.hmf.tasks.a.i.b` @type ^`boolean` @kind boolean;
  #L1c21fe.  @monitorexit v0
  #L1c2200.  return v1;
  #L1c2202.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c2204.  @monitorexit v0
  #L1c2206.  throw v1;
  catch `java.lang.Throwable` @[L1c21fa..L1c2206] goto L1c2202;
}
procedure `boolean` `isSuccessful`(`com.huawei.hmf.tasks.a.i` v2 @kind this) @signature `Lcom/huawei/hmf/tasks/a/i;.isSuccessful:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c2224.  v0:= v2.`com.huawei.hmf.tasks.a.i.a` @type ^`java.lang.Object` @kind object;
  #L1c2228.  @monitorenter v0
  #L1c222a.  v1:= v2.`com.huawei.hmf.tasks.a.i.b` @type ^`boolean` @kind boolean;
  #L1c222e.  if v1 == 0 then goto L1c224a;
  #L1c2232.  call temp:= `isCanceled`(v2) @signature `Lcom/huawei/hmf/tasks/a/i;.isCanceled:()Z` @kind virtual;
  #L1c2238.  v1:= temp;
  #L1c223a.  if v1 != 0 then goto L1c224a;
  #L1c223e.  v1:= v2.`com.huawei.hmf.tasks.a.i.e` @type ^`java.lang.Exception` @kind object;
  #L1c2242.  if v1 != 0 then goto L1c224a;
  #L1c2246.  v1:= 1I;
  #L1c2248.  goto L1c224c;
  #L1c224a.  v1:= 0I;
  #L1c224c.  @monitorexit v0
  #L1c224e.  return v1;
  #L1c2250.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c2252.  @monitorexit v0
  #L1c2254.  throw v1;
  catch `java.lang.Throwable` @[L1c222a..L1c2254] goto L1c2250;
}
procedure `com.huawei.hmf.tasks.Task` `onSuccessTask`(`com.huawei.hmf.tasks.a.i` v1 @kind this, `com.huawei.hmf.tasks.SuccessContinuation` v2 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.onSuccessTask:(Lcom/huawei/hmf/tasks/SuccessContinuation;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c2548.  call temp:= `uiThread`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.uiThread:()Ljava/util/concurrent/Executor;` @kind static;
  #L1c254e.  v0:= temp @kind object;
  #L1c2550.  call temp:= `onSuccessTask`(v1, v0, v2) @signature `Lcom/huawei/hmf/tasks/a/i;.onSuccessTask:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/SuccessContinuation;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c2556.  v2:= temp @kind object;
  #L1c2558.  return v2 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `onSuccessTask`(`com.huawei.hmf.tasks.a.i` v2 @kind this, `java.util.concurrent.Executor` v3 @kind object, `com.huawei.hmf.tasks.SuccessContinuation` v4 @kind object) @signature `Lcom/huawei/hmf/tasks/a/i;.onSuccessTask:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/SuccessContinuation;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c256c.  v0:= new `com.huawei.hmf.tasks.a.i`;
  #L1c2570.  call `<init>`(v0) @signature `Lcom/huawei/hmf/tasks/a/i;.<init>:()V` @kind direct;
  #L1c2576.  v1:= new `com.huawei.hmf.tasks.a.i$a`;
  #L1c257a.  call `<init>`(v1, v2, v4, v0) @signature `Lcom/huawei/hmf/tasks/a/i$a;.<init>:(Lcom/huawei/hmf/tasks/a/i;Lcom/huawei/hmf/tasks/SuccessContinuation;Lcom/huawei/hmf/tasks/a/i;)V` @kind direct;
  #L1c2580.  call temp:= `addOnSuccessListener`(v2, v3, v1) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnSuccessListener:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c2586.  v3:= new `com.huawei.hmf.tasks.a.i$b`;
  #L1c258a.  call `<init>`(v3, v2, v0) @signature `Lcom/huawei/hmf/tasks/a/i$b;.<init>:(Lcom/huawei/hmf/tasks/a/i;Lcom/huawei/hmf/tasks/a/i;)V` @kind direct;
  #L1c2590.  call temp:= `addOnFailureListener`(v2, v3) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnFailureListener:(Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c2596.  v3:= new `com.huawei.hmf.tasks.a.i$c`;
  #L1c259a.  call `<init>`(v3, v2, v0) @signature `Lcom/huawei/hmf/tasks/a/i$c;.<init>:(Lcom/huawei/hmf/tasks/a/i;Lcom/huawei/hmf/tasks/a/i;)V` @kind direct;
  #L1c25a0.  call temp:= `addOnCanceledListener`(v2, v3) @signature `Lcom/huawei/hmf/tasks/a/i;.addOnCanceledListener:(Lcom/huawei/hmf/tasks/OnCanceledListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c25a6.  return v0 @kind object;
}
