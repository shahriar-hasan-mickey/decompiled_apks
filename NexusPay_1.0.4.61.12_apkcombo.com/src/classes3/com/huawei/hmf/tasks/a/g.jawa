record `com.huawei.hmf.tasks.a.g` @kind class @AccessFlag PUBLIC_FINAL extends `android.app.Fragment` @kind class {
  `java.util.List` `com.huawei.hmf.tasks.a.g.a` @AccessFlag PRIVATE_FINAL;
}
global `java.util.WeakHashMap` `@@com.huawei.hmf.tasks.a.g.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hmf/tasks/a/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c1c0c.  v0:= new `java.util.WeakHashMap`;
  #L1c1c10.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L1c1c16.  `@@com.huawei.hmf.tasks.a.g.b` @type ^`java.util.WeakHashMap` := v0 @kind object;
  #L1c1c1a.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hmf.tasks.a.g` v1 @kind this) @signature `Lcom/huawei/hmf/tasks/a/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c1c2c.  call `<init>`(v1) @signature `Landroid/app/Fragment;.<init>:()V` @kind direct;
  #L1c1c32.  v0:= new `java.util.ArrayList`;
  #L1c1c36.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1c1c3c.  v1.`com.huawei.hmf.tasks.a.g.a` @type ^`java.util.List` := v0 @kind object;
  #L1c1c40.  return @kind void;
}
procedure `com.huawei.hmf.tasks.a.g` `a`(`android.app.Activity` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/g;.a:(Landroid/app/Activity;)Lcom/huawei/hmf/tasks/a/g;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1c1a94.  v0:= `@@com.huawei.hmf.tasks.a.g.b` @type ^`java.util.WeakHashMap` @kind object;
  #L1c1a98.  call temp:= `get`(v0, v3) @signature `Ljava/util/WeakHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c1a9e.  v0:= temp @kind object;
  #L1c1aa0.  v0:= (`java.lang.ref.WeakReference`) v0 @kind object;
  #L1c1aa4.  if v0 == 0 then goto L1c1ac2;
  #L1c1aa8.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1c1aae.  v1:= temp @kind object;
  #L1c1ab0.  if v1 == 0 then goto L1c1ac2;
  #L1c1ab4.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1c1aba.  v3:= temp @kind object;
  #L1c1abc.  v3:= (`com.huawei.hmf.tasks.a.g`) v3 @kind object;
  #L1c1ac0.  goto L1c1b40;
  #L1c1ac2.  call temp:= `getFragmentManager`(v3) @signature `Landroid/app/Activity;.getFragmentManager:()Landroid/app/FragmentManager;` @kind virtual;
  #L1c1ac8.  v0:= temp @kind object;
  #L1c1aca.  v1:= 0I;
  #L1c1acc.  v2:= "com.huawei.hmf.tasks.lifecycle_fragment_tag" @kind object;
  #L1c1ad0.  call temp:= `findFragmentByTag`(v0, v2) @signature `Landroid/app/FragmentManager;.findFragmentByTag:(Ljava/lang/String;)Landroid/app/Fragment;` @kind virtual;
  #L1c1ad6.  v2:= temp @kind object;
  #L1c1ad8.  v2:= (`com.huawei.hmf.tasks.a.g`) v2 @kind object;
  #L1c1adc.  if v2 != 0 then goto L1c1af0;
  #L1c1ae0.  call temp:= `b`(v0) @signature `Lcom/huawei/hmf/tasks/a/g;.b:(Landroid/app/FragmentManager;)Lcom/huawei/hmf/tasks/a/g;` @kind static;
  #L1c1ae6.  v0:= temp @kind object;
  #L1c1ae8.  goto L1c1af2;
  #L1c1aea.  v3:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L1c1aec.  v0:= v2 @kind object;
  #L1c1aee.  goto L1c1b10;
  #L1c1af0.  v0:= v2 @kind object;
  #L1c1af2.  v1:= `@@com.huawei.hmf.tasks.a.g.b` @type ^`java.util.WeakHashMap` @kind object;
  #L1c1af6.  v2:= new `java.lang.ref.WeakReference`;
  #L1c1afa.  call `<init>`(v2, v0) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1c1b00.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/WeakHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c1b06.  goto L1c1b3e;
  #L1c1b08.  v3:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L1c1b0a.  goto L1c1b10;
  #L1c1b0c.  v3:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L1c1b0e.  v0:= v1 @kind object;
  #L1c1b10.  v1:= new `java.lang.StringBuilder`;
  #L1c1b14.  v2:= "found LifecycleCallbackFragment but the type do not match. " @kind object;
  #L1c1b18.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c1b1e.  call temp:= `getMessage`(v3) @signature `Ljava/lang/ClassCastException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1c1b24.  v3:= temp @kind object;
  #L1c1b26.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c1b2c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c1b32.  v3:= temp @kind object;
  #L1c1b34.  v1:= "LifecycleCallbackFrg" @kind object;
  #L1c1b38.  call temp:= `e`(v1, v3) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1c1b3e.  v3:= v0 @kind object;
  #L1c1b40.  return v3 @kind object;
  catch `java.lang.ClassCastException` @[L1c1acc..L1c1adc] goto L1c1b0c;
  catch `java.lang.ClassCastException` @[L1c1ae0..L1c1ae8] goto L1c1aea;
  catch `java.lang.ClassCastException` @[L1c1af2..L1c1b06] goto L1c1b08;
}
procedure `void` `a`(`android.app.Activity` v2 @kind object, `com.huawei.hmf.tasks.ExecuteResult` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/g;.a:(Landroid/app/Activity;Lcom/huawei/hmf/tasks/ExecuteResult;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c1c54.  call temp:= `a`(v2) @signature `Lcom/huawei/hmf/tasks/a/g;.a:(Landroid/app/Activity;)Lcom/huawei/hmf/tasks/a/g;` @kind static;
  #L1c1c5a.  v2:= temp @kind object;
  #L1c1c5c.  if v2 == 0 then goto L1c1c84;
  #L1c1c60.  v0:= v2.`com.huawei.hmf.tasks.a.g.a` @type ^`java.util.List` @kind object;
  #L1c1c64.  @monitorenter v0
  #L1c1c66.  v2:= v2.`com.huawei.hmf.tasks.a.g.a` @type ^`java.util.List` @kind object;
  #L1c1c6a.  v1:= new `java.lang.ref.WeakReference`;
  #L1c1c6e.  call `<init>`(v1, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1c1c74.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1c1c7a.  @monitorexit v0
  #L1c1c7c.  return @kind void;
  #L1c1c7e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c1c80.  @monitorexit v0
  #L1c1c82.  throw v2;
  #L1c1c84.  return @kind void;
  catch `java.lang.Throwable` @[L1c1c66..L1c1c82] goto L1c1c7e;
}
procedure `com.huawei.hmf.tasks.a.g` `b`(`android.app.FragmentManager` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/g;.b:(Landroid/app/FragmentManager;)Lcom/huawei/hmf/tasks/a/g;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1c1b7c.  v0:= 0I;
  #L1c1b7e.  v1:= new `com.huawei.hmf.tasks.a.g`;
  #L1c1b82.  call `<init>`(v1) @signature `Lcom/huawei/hmf/tasks/a/g;.<init>:()V` @kind direct;
  #L1c1b88.  call temp:= `beginTransaction`(v3) @signature `Landroid/app/FragmentManager;.beginTransaction:()Landroid/app/FragmentTransaction;` @kind virtual;
  #L1c1b8e.  v3:= temp @kind object;
  #L1c1b90.  v0:= "com.huawei.hmf.tasks.lifecycle_fragment_tag" @kind object;
  #L1c1b94.  call temp:= `add`(v3, v1, v0) @signature `Landroid/app/FragmentTransaction;.add:(Landroid/app/Fragment;Ljava/lang/String;)Landroid/app/FragmentTransaction;` @kind virtual;
  #L1c1b9a.  v3:= temp @kind object;
  #L1c1b9c.  call temp:= `commitAllowingStateLoss`(v3) @signature `Landroid/app/FragmentTransaction;.commitAllowingStateLoss:()I` @kind virtual;
  #L1c1ba2.  goto L1c1bdc;
  #L1c1ba4.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L1c1ba6.  v0:= v1 @kind object;
  #L1c1ba8.  goto L1c1bac;
  #L1c1baa.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L1c1bac.  v1:= new `java.lang.StringBuilder`;
  #L1c1bb0.  v2:= "create fragment failed." @kind object;
  #L1c1bb4.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c1bba.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1c1bc0.  v3:= temp @kind object;
  #L1c1bc2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c1bc8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c1bce.  v3:= temp @kind object;
  #L1c1bd0.  v1:= "LifecycleCallbackFrg" @kind object;
  #L1c1bd4.  call temp:= `e`(v1, v3) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1c1bda.  v1:= v0 @kind object;
  #L1c1bdc.  return v1 @kind object;
  catch `java.lang.Exception` @[L1c1b7e..L1c1b88] goto L1c1baa;
  catch `java.lang.Exception` @[L1c1b88..L1c1ba2] goto L1c1ba4;
}
procedure `void` `onStop`(`com.huawei.hmf.tasks.a.g` v3 @kind this) @signature `Lcom/huawei/hmf/tasks/a/g;.onStop:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1c1ca4.  call `onStop`(v3) @signature `Landroid/app/Fragment;.onStop:()V` @kind super;
  #L1c1caa.  v0:= v3.`com.huawei.hmf.tasks.a.g.a` @type ^`java.util.List` @kind object;
  #L1c1cae.  @monitorenter v0
  #L1c1cb0.  v1:= v3.`com.huawei.hmf.tasks.a.g.a` @type ^`java.util.List` @kind object;
  #L1c1cb4.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c1cba.  v1:= temp @kind object;
  #L1c1cbc.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c1cc2.  v2:= temp;
  #L1c1cc4.  if v2 == 0 then goto L1c1cec;
  #L1c1cc8.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c1cce.  v2:= temp @kind object;
  #L1c1cd0.  v2:= (`java.lang.ref.WeakReference`) v2 @kind object;
  #L1c1cd4.  call temp:= `get`(v2) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1c1cda.  v2:= temp @kind object;
  #L1c1cdc.  v2:= (`com.huawei.hmf.tasks.ExecuteResult`) v2 @kind object;
  #L1c1ce0.  if v2 == 0 then goto L1c1cbc;
  #L1c1ce4.  call `cancel`(v2) @signature `Lcom/huawei/hmf/tasks/ExecuteResult;.cancel:()V` @kind interface;
  #L1c1cea.  goto L1c1cbc;
  #L1c1cec.  v1:= v3.`com.huawei.hmf.tasks.a.g.a` @type ^`java.util.List` @kind object;
  #L1c1cf0.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L1c1cf6.  @monitorexit v0
  #L1c1cf8.  return @kind void;
  #L1c1cfa.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c1cfc.  @monitorexit v0
  #L1c1cfe.  throw v1;
  catch `java.lang.Throwable` @[L1c1cb0..L1c1cfe] goto L1c1cfa;
}
