record `com.huawei.hmf.tasks.a.d` @kind class @AccessFlag PUBLIC_FINAL extends `com.huawei.hmf.tasks.ExecuteResult` @kind interface {
  `com.huawei.hmf.tasks.OnCompleteListener` `com.huawei.hmf.tasks.a.d.a` @AccessFlag PRIVATE;
  `java.util.concurrent.Executor` `com.huawei.hmf.tasks.a.d.b` @AccessFlag ;
  `java.lang.Object` `com.huawei.hmf.tasks.a.d.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hmf.tasks.a.d` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `com.huawei.hmf.tasks.OnCompleteListener` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/d;.<init>:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnCompleteListener;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1c1754.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c175a.  v0:= new `java.lang.Object`;
  #L1c175e.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c1764.  v1.`com.huawei.hmf.tasks.a.d.c` @type ^`java.lang.Object` := v0 @kind object;
  #L1c1768.  v1.`com.huawei.hmf.tasks.a.d.a` @type ^`com.huawei.hmf.tasks.OnCompleteListener` := v3 @kind object;
  #L1c176c.  v1.`com.huawei.hmf.tasks.a.d.b` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L1c1770.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.huawei.hmf.tasks.a.d` v0 @kind object) @signature `Lcom/huawei/hmf/tasks/a/d;.a:(Lcom/huawei/hmf/tasks/a/d;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c173c.  v0:= v0.`com.huawei.hmf.tasks.a.d.c` @type ^`java.lang.Object` @kind object;
  #L1c1740.  return v0 @kind object;
}
procedure `com.huawei.hmf.tasks.OnCompleteListener` `b`(`com.huawei.hmf.tasks.a.d` v0 @kind object) @signature `Lcom/huawei/hmf/tasks/a/d;.b:(Lcom/huawei/hmf/tasks/a/d;)Lcom/huawei/hmf/tasks/OnCompleteListener;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c1724.  v0:= v0.`com.huawei.hmf.tasks.a.d.a` @type ^`com.huawei.hmf.tasks.OnCompleteListener` @kind object;
  #L1c1728.  return v0 @kind object;
}
procedure `void` `cancel`(`com.huawei.hmf.tasks.a.d` v2 @kind this) @signature `Lcom/huawei/hmf/tasks/a/d;.cancel:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c1784.  v0:= v2.`com.huawei.hmf.tasks.a.d.c` @type ^`java.lang.Object` @kind object;
  #L1c1788.  @monitorenter v0
  #L1c178a.  v1:= 0I;
  #L1c178c.  v2.`com.huawei.hmf.tasks.a.d.a` @type ^`com.huawei.hmf.tasks.OnCompleteListener` := v1 @kind object;
  #L1c1790.  @monitorexit v0
  #L1c1792.  return @kind void;
  #L1c1794.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c1796.  @monitorexit v0
  #L1c1798.  throw v1;
  catch `java.lang.Throwable` @[L1c178c..L1c1798] goto L1c1794;
}
procedure `void` `onComplete`(`com.huawei.hmf.tasks.a.d` v2 @kind this, `com.huawei.hmf.tasks.Task` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/d;.onComplete:(Lcom/huawei/hmf/tasks/Task;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c17b8.  v0:= v2.`com.huawei.hmf.tasks.a.d.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L1c17bc.  v1:= new `com.huawei.hmf.tasks.a.d$a`;
  #L1c17c0.  call `<init>`(v1, v2, v3) @signature `Lcom/huawei/hmf/tasks/a/d$a;.<init>:(Lcom/huawei/hmf/tasks/a/d;Lcom/huawei/hmf/tasks/Task;)V` @kind direct;
  #L1c17c6.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L1c17cc.  return @kind void;
}
