record `com.huawei.hmf.tasks.a.h` @kind class @AccessFlag PUBLIC_FINAL extends `com.huawei.hmf.tasks.ExecuteResult` @kind interface {
  `com.huawei.hmf.tasks.OnSuccessListener` `com.huawei.hmf.tasks.a.h.a` @AccessFlag PRIVATE;
  `java.util.concurrent.Executor` `com.huawei.hmf.tasks.a.h.b` @AccessFlag PRIVATE;
  `java.lang.Object` `com.huawei.hmf.tasks.a.h.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.huawei.hmf.tasks.a.h` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `com.huawei.hmf.tasks.OnSuccessListener` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/h;.<init>:(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnSuccessListener;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1c1dd0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c1dd6.  v0:= new `java.lang.Object`;
  #L1c1dda.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c1de0.  v1.`com.huawei.hmf.tasks.a.h.c` @type ^`java.lang.Object` := v0 @kind object;
  #L1c1de4.  v1.`com.huawei.hmf.tasks.a.h.a` @type ^`com.huawei.hmf.tasks.OnSuccessListener` := v3 @kind object;
  #L1c1de8.  v1.`com.huawei.hmf.tasks.a.h.b` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L1c1dec.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.huawei.hmf.tasks.a.h` v0 @kind object) @signature `Lcom/huawei/hmf/tasks/a/h;.a:(Lcom/huawei/hmf/tasks/a/h;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c1db8.  v0:= v0.`com.huawei.hmf.tasks.a.h.c` @type ^`java.lang.Object` @kind object;
  #L1c1dbc.  return v0 @kind object;
}
procedure `com.huawei.hmf.tasks.OnSuccessListener` `b`(`com.huawei.hmf.tasks.a.h` v0 @kind object) @signature `Lcom/huawei/hmf/tasks/a/h;.b:(Lcom/huawei/hmf/tasks/a/h;)Lcom/huawei/hmf/tasks/OnSuccessListener;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c1da0.  v0:= v0.`com.huawei.hmf.tasks.a.h.a` @type ^`com.huawei.hmf.tasks.OnSuccessListener` @kind object;
  #L1c1da4.  return v0 @kind object;
}
procedure `void` `cancel`(`com.huawei.hmf.tasks.a.h` v2 @kind this) @signature `Lcom/huawei/hmf/tasks/a/h;.cancel:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c1e00.  v0:= v2.`com.huawei.hmf.tasks.a.h.c` @type ^`java.lang.Object` @kind object;
  #L1c1e04.  @monitorenter v0
  #L1c1e06.  v1:= 0I;
  #L1c1e08.  v2.`com.huawei.hmf.tasks.a.h.a` @type ^`com.huawei.hmf.tasks.OnSuccessListener` := v1 @kind object;
  #L1c1e0c.  @monitorexit v0
  #L1c1e0e.  return @kind void;
  #L1c1e10.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c1e12.  @monitorexit v0
  #L1c1e14.  throw v1;
  catch `java.lang.Throwable` @[L1c1e08..L1c1e14] goto L1c1e10;
}
procedure `void` `onComplete`(`com.huawei.hmf.tasks.a.h` v2 @kind this, `com.huawei.hmf.tasks.Task` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/h;.onComplete:(Lcom/huawei/hmf/tasks/Task;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c1e34.  call temp:= `isSuccessful`(v3) @signature `Lcom/huawei/hmf/tasks/Task;.isSuccessful:()Z` @kind virtual;
  #L1c1e3a.  v0:= temp;
  #L1c1e3c.  if v0 == 0 then goto L1c1e60;
  #L1c1e40.  call temp:= `isCanceled`(v3) @signature `Lcom/huawei/hmf/tasks/Task;.isCanceled:()Z` @kind virtual;
  #L1c1e46.  v0:= temp;
  #L1c1e48.  if v0 != 0 then goto L1c1e60;
  #L1c1e4c.  v0:= v2.`com.huawei.hmf.tasks.a.h.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L1c1e50.  v1:= new `com.huawei.hmf.tasks.a.h$a`;
  #L1c1e54.  call `<init>`(v1, v2, v3) @signature `Lcom/huawei/hmf/tasks/a/h$a;.<init>:(Lcom/huawei/hmf/tasks/a/h;Lcom/huawei/hmf/tasks/Task;)V` @kind direct;
  #L1c1e5a.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L1c1e60.  return @kind void;
}
