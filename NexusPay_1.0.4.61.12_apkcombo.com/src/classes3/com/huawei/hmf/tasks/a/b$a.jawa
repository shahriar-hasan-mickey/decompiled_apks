record `com.huawei.hmf.tasks.a.b$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `com.huawei.hmf.tasks.a.b` `com.huawei.hmf.tasks.a.b$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.huawei.hmf.tasks.a.b$a` v0 @kind this, `com.huawei.hmf.tasks.a.b` v1 @kind object) @signature `Lcom/huawei/hmf/tasks/a/b$a;.<init>:(Lcom/huawei/hmf/tasks/a/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c14d0.  v0.`com.huawei.hmf.tasks.a.b$a.a` @type ^`com.huawei.hmf.tasks.a.b` := v1 @kind object;
  #L1c14d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c14da.  return @kind void;
}
procedure `void` `run`(`com.huawei.hmf.tasks.a.b$a` v2 @kind this) @signature `Lcom/huawei/hmf/tasks/a/b$a;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c14ec.  v0:= v2.`com.huawei.hmf.tasks.a.b$a.a` @type ^`com.huawei.hmf.tasks.a.b` @kind object;
  #L1c14f0.  call temp:= `a`(v0) @signature `Lcom/huawei/hmf/tasks/a/b;.a:(Lcom/huawei/hmf/tasks/a/b;)Ljava/lang/Object;` @kind static;
  #L1c14f6.  v0:= temp @kind object;
  #L1c14f8.  @monitorenter v0
  #L1c14fa.  v1:= v2.`com.huawei.hmf.tasks.a.b$a.a` @type ^`com.huawei.hmf.tasks.a.b` @kind object;
  #L1c14fe.  call temp:= `b`(v1) @signature `Lcom/huawei/hmf/tasks/a/b;.b:(Lcom/huawei/hmf/tasks/a/b;)Lcom/huawei/hmf/tasks/OnCanceledListener;` @kind static;
  #L1c1504.  v1:= temp @kind object;
  #L1c1506.  if v1 == 0 then goto L1c151c;
  #L1c150a.  v1:= v2.`com.huawei.hmf.tasks.a.b$a.a` @type ^`com.huawei.hmf.tasks.a.b` @kind object;
  #L1c150e.  call temp:= `b`(v1) @signature `Lcom/huawei/hmf/tasks/a/b;.b:(Lcom/huawei/hmf/tasks/a/b;)Lcom/huawei/hmf/tasks/OnCanceledListener;` @kind static;
  #L1c1514.  v1:= temp @kind object;
  #L1c1516.  call `onCanceled`(v1) @signature `Lcom/huawei/hmf/tasks/OnCanceledListener;.onCanceled:()V` @kind interface;
  #L1c151c.  @monitorexit v0
  #L1c151e.  return @kind void;
  #L1c1520.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c1522.  @monitorexit v0
  #L1c1524.  throw v1;
  catch `java.lang.Throwable` @[L1c14fa..L1c1524] goto L1c1520;
}
