record `com.huawei.hmf.tasks.a.a$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.Executor` @kind interface {
}
procedure `void` `<init>`(`com.huawei.hmf.tasks.a.a$a` v0 @kind this) @signature `Lcom/huawei/hmf/tasks/a/a$a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c13a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c13ae.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hmf.tasks.a.a$a` v0 @kind this, `byte` v1 ) @signature `Lcom/huawei/hmf/tasks/a/a$a;.<init>:(B)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1c13c0.  call `<init>`(v0) @signature `Lcom/huawei/hmf/tasks/a/a$a;.<init>:()V` @kind direct;
  #L1c13c6.  return @kind void;
}
procedure `void` `execute`(`com.huawei.hmf.tasks.a.a$a` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/a$a;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c13d8.  v0:= new `android.os.Handler`;
  #L1c13dc.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L1c13e2.  v1:= temp @kind object;
  #L1c13e4.  call `<init>`(v0, v1) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L1c13ea.  call temp:= `post`(v0, v3) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L1c13f0.  return @kind void;
}
