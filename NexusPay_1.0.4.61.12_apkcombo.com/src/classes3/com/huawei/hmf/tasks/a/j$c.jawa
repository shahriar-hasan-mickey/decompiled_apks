record `com.huawei.hmf.tasks.a.j$c` @kind class @AccessFlag FINAL extends `com.huawei.hmf.tasks.Continuation` @kind interface {
  `java.util.Collection` `com.huawei.hmf.tasks.a.j$c.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.huawei.hmf.tasks.a.j$c` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/huawei/hmf/tasks/a/j$c;.<init>:(Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c28a0.  v0.`com.huawei.hmf.tasks.a.j$c.a` @type ^`java.util.Collection` := v1 @kind object;
  #L1c28a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c28aa.  return @kind void;
}
procedure `java.lang.Object` `then`(`com.huawei.hmf.tasks.a.j$c` v1 @kind this, `com.huawei.hmf.tasks.Task` v2 @kind object) @signature `Lcom/huawei/hmf/tasks/a/j$c;.then:(Lcom/huawei/hmf/tasks/Task;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1c286c.  v2:= new `java.util.ArrayList`;
  #L1c2870.  v0:= v1.`com.huawei.hmf.tasks.a.j$c.a` @type ^`java.util.Collection` @kind object;
  #L1c2874.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L1c287a.  v0:= temp;
  #L1c287c.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1c2882.  v0:= v1.`com.huawei.hmf.tasks.a.j$c.a` @type ^`java.util.Collection` @kind object;
  #L1c2886.  call temp:= `addAll`(v2, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L1c288c.  return v2 @kind object;
}
