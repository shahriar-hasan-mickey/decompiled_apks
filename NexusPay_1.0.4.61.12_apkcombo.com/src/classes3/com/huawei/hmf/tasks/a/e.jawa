record `com.huawei.hmf.tasks.a.e` @kind class @AccessFlag FINAL extends `com.huawei.hmf.tasks.OnCanceledListener` @kind interface, `com.huawei.hmf.tasks.OnFailureListener` @kind interface, `com.huawei.hmf.tasks.OnSuccessListener` @kind interface {
  `java.lang.Object` `com.huawei.hmf.tasks.a.e.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hmf.tasks.a.e.b` @AccessFlag PRIVATE_FINAL;
  `com.huawei.hmf.tasks.a.i` `com.huawei.hmf.tasks.a.e.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.huawei.hmf.tasks.a.e.d` @AccessFlag PRIVATE;
  `java.lang.Exception` `com.huawei.hmf.tasks.a.e.e` @AccessFlag PRIVATE;
  `boolean` `com.huawei.hmf.tasks.a.e.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hmf.tasks.a.e` v1 @kind this, `int` v2 , `com.huawei.hmf.tasks.a.i` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/e;.<init>:(ILcom/huawei/hmf/tasks/a/i;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1c17e0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c17e6.  v0:= new `java.lang.Object`;
  #L1c17ea.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c17f0.  v1.`com.huawei.hmf.tasks.a.e.a` @type ^`java.lang.Object` := v0 @kind object;
  #L1c17f4.  v1.`com.huawei.hmf.tasks.a.e.b` @type ^`int` := v2;
  #L1c17f8.  v1.`com.huawei.hmf.tasks.a.e.c` @type ^`com.huawei.hmf.tasks.a.i` := v3 @kind object;
  #L1c17fc.  return @kind void;
}
procedure `void` `a`(`com.huawei.hmf.tasks.a.e` v4 @kind this) @signature `Lcom/huawei/hmf/tasks/a/e;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c1810.  v0:= v4.`com.huawei.hmf.tasks.a.e.d` @type ^`int`;
  #L1c1814.  v1:= v4.`com.huawei.hmf.tasks.a.e.b` @type ^`int`;
  #L1c1818.  if v0 < v1 then goto L1c1862;
  #L1c181c.  v0:= v4.`com.huawei.hmf.tasks.a.e.e` @type ^`java.lang.Exception` @kind object;
  #L1c1820.  if v0 == 0 then goto L1c1842;
  #L1c1824.  v0:= v4.`com.huawei.hmf.tasks.a.e.c` @type ^`com.huawei.hmf.tasks.a.i` @kind object;
  #L1c1828.  v1:= new `java.util.concurrent.ExecutionException`;
  #L1c182c.  v2:= v4.`com.huawei.hmf.tasks.a.e.e` @type ^`java.lang.Exception` @kind object;
  #L1c1830.  v3:= "a task failed" @kind object;
  #L1c1834.  call `<init>`(v1, v3, v2) @signature `Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1c183a.  call `a`(v0, v1) @signature `Lcom/huawei/hmf/tasks/a/i;.a:(Ljava/lang/Exception;)V` @kind virtual;
  #L1c1840.  return @kind void;
  #L1c1842.  v0:= v4.`com.huawei.hmf.tasks.a.e.f` @type ^`boolean` @kind boolean;
  #L1c1846.  if v0 == 0 then goto L1c1856;
  #L1c184a.  v0:= v4.`com.huawei.hmf.tasks.a.e.c` @type ^`com.huawei.hmf.tasks.a.i` @kind object;
  #L1c184e.  call temp:= `a`(v0) @signature `Lcom/huawei/hmf/tasks/a/i;.a:()Z` @kind virtual;
  #L1c1854.  return @kind void;
  #L1c1856.  v0:= v4.`com.huawei.hmf.tasks.a.e.c` @type ^`com.huawei.hmf.tasks.a.i` @kind object;
  #L1c185a.  v1:= 0I;
  #L1c185c.  call `a`(v0, v1) @signature `Lcom/huawei/hmf/tasks/a/i;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L1c1862.  return @kind void;
}
procedure `void` `onCanceled`(`com.huawei.hmf.tasks.a.e` v3 @kind this) @signature `Lcom/huawei/hmf/tasks/a/e;.onCanceled:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1c1874.  v0:= v3.`com.huawei.hmf.tasks.a.e.a` @type ^`java.lang.Object` @kind object;
  #L1c1878.  @monitorenter v0
  #L1c187a.  v1:= v3.`com.huawei.hmf.tasks.a.e.d` @type ^`int`;
  #L1c187e.  v2:= 1I;
  #L1c1880.  v1:= v1 + v2 @kind int;
  #L1c1882.  v3.`com.huawei.hmf.tasks.a.e.d` @type ^`int` := v1;
  #L1c1886.  v3.`com.huawei.hmf.tasks.a.e.f` @type ^`boolean` := v2 @kind boolean;
  #L1c188a.  call `a`(v3) @signature `Lcom/huawei/hmf/tasks/a/e;.a:()V` @kind direct;
  #L1c1890.  @monitorexit v0
  #L1c1892.  return @kind void;
  #L1c1894.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c1896.  @monitorexit v0
  #L1c1898.  throw v1;
  catch `java.lang.Throwable` @[L1c187a..L1c1898] goto L1c1894;
}
procedure `void` `onFailure`(`com.huawei.hmf.tasks.a.e` v2 @kind this, `java.lang.Exception` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/e;.onFailure:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c18b8.  v0:= v2.`com.huawei.hmf.tasks.a.e.a` @type ^`java.lang.Object` @kind object;
  #L1c18bc.  @monitorenter v0
  #L1c18be.  v1:= v2.`com.huawei.hmf.tasks.a.e.d` @type ^`int`;
  #L1c18c2.  v1:= v1 + 1;
  #L1c18c6.  v2.`com.huawei.hmf.tasks.a.e.d` @type ^`int` := v1;
  #L1c18ca.  v2.`com.huawei.hmf.tasks.a.e.e` @type ^`java.lang.Exception` := v3 @kind object;
  #L1c18ce.  call `a`(v2) @signature `Lcom/huawei/hmf/tasks/a/e;.a:()V` @kind direct;
  #L1c18d4.  @monitorexit v0
  #L1c18d6.  return @kind void;
  #L1c18d8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c18da.  @monitorexit v0
  #L1c18dc.  throw v3;
  catch `java.lang.Throwable` @[L1c18be..L1c18dc] goto L1c18d8;
}
procedure `void` `onSuccess`(`com.huawei.hmf.tasks.a.e` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/huawei/hmf/tasks/a/e;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c18fc.  v2:= v1.`com.huawei.hmf.tasks.a.e.a` @type ^`java.lang.Object` @kind object;
  #L1c1900.  @monitorenter v2
  #L1c1902.  v0:= v1.`com.huawei.hmf.tasks.a.e.d` @type ^`int`;
  #L1c1906.  v0:= v0 + 1;
  #L1c190a.  v1.`com.huawei.hmf.tasks.a.e.d` @type ^`int` := v0;
  #L1c190e.  call `a`(v1) @signature `Lcom/huawei/hmf/tasks/a/e;.a:()V` @kind direct;
  #L1c1914.  @monitorexit v2
  #L1c1916.  return @kind void;
  #L1c1918.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c191a.  @monitorexit v2
  #L1c191c.  throw v0;
  catch `java.lang.Throwable` @[L1c1902..L1c191c] goto L1c1918;
}
