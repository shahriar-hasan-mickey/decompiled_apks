record `com.huawei.hmf.tasks.a.c` @kind class @AccessFlag PUBLIC_FINAL extends `com.huawei.hmf.tasks.CancellationToken` @kind class {
  `java.util.List` `com.huawei.hmf.tasks.a.c.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `com.huawei.hmf.tasks.a.c.b` @AccessFlag PUBLIC_FINAL;
  `boolean` `com.huawei.hmf.tasks.a.c.c` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.huawei.hmf.tasks.a.c` v1 @kind this) @signature `Lcom/huawei/hmf/tasks/a/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c166c.  call `<init>`(v1) @signature `Lcom/huawei/hmf/tasks/CancellationToken;.<init>:()V` @kind direct;
  #L1c1672.  v0:= new `java.util.ArrayList`;
  #L1c1676.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1c167c.  v1.`com.huawei.hmf.tasks.a.c.a` @type ^`java.util.List` := v0 @kind object;
  #L1c1680.  v0:= new `java.lang.Object`;
  #L1c1684.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c168a.  v1.`com.huawei.hmf.tasks.a.c.b` @type ^`java.lang.Object` := v0 @kind object;
  #L1c168e.  v0:= 0I;
  #L1c1690.  v1.`com.huawei.hmf.tasks.a.c.c` @type ^`boolean` := v0 @kind boolean;
  #L1c1694.  return @kind void;
}
procedure `boolean` `isCancellationRequested`(`com.huawei.hmf.tasks.a.c` v1 @kind this) @signature `Lcom/huawei/hmf/tasks/a/c;.isCancellationRequested:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c160c.  v0:= v1.`com.huawei.hmf.tasks.a.c.c` @type ^`boolean` @kind boolean;
  #L1c1610.  return v0;
}
procedure `com.huawei.hmf.tasks.CancellationToken` `register`(`com.huawei.hmf.tasks.a.c` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lcom/huawei/hmf/tasks/a/c;.register:(Ljava/lang/Runnable;)Lcom/huawei/hmf/tasks/CancellationToken;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c1624.  v0:= v2.`com.huawei.hmf.tasks.a.c.b` @type ^`java.lang.Object` @kind object;
  #L1c1628.  @monitorenter v0
  #L1c162a.  v1:= v2.`com.huawei.hmf.tasks.a.c.c` @type ^`boolean` @kind boolean;
  #L1c162e.  if v1 == 0 then goto L1c163a;
  #L1c1632.  call `run`(v3) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L1c1638.  goto L1c1644;
  #L1c163a.  v1:= v2.`com.huawei.hmf.tasks.a.c.a` @type ^`java.util.List` @kind object;
  #L1c163e.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1c1644.  @monitorexit v0
  #L1c1646.  return v2 @kind object;
  #L1c1648.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c164a.  @monitorexit v0
  #L1c164c.  throw v3;
  catch `java.lang.Throwable` @[L1c162a..L1c164c] goto L1c1648;
}
