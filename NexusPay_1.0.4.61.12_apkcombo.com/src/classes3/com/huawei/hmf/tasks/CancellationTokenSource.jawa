record `com.huawei.hmf.tasks.CancellationTokenSource` @kind class @AccessFlag PUBLIC {
  `com.huawei.hmf.tasks.a.c` `com.huawei.hmf.tasks.CancellationTokenSource.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.huawei.hmf.tasks.CancellationTokenSource` v1 @kind this) @signature `Lcom/huawei/hmf/tasks/CancellationTokenSource;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c0cdc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c0ce2.  v0:= new `com.huawei.hmf.tasks.a.c`;
  #L1c0ce6.  call `<init>`(v0) @signature `Lcom/huawei/hmf/tasks/a/c;.<init>:()V` @kind direct;
  #L1c0cec.  v1.`com.huawei.hmf.tasks.CancellationTokenSource.a` @type ^`com.huawei.hmf.tasks.a.c` := v0 @kind object;
  #L1c0cf0.  return @kind void;
}
procedure `void` `cancel`(`com.huawei.hmf.tasks.CancellationTokenSource` v3 @kind this) @signature `Lcom/huawei/hmf/tasks/CancellationTokenSource;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c0d04.  v0:= v3.`com.huawei.hmf.tasks.CancellationTokenSource.a` @type ^`com.huawei.hmf.tasks.a.c` @kind object;
  #L1c0d08.  v1:= v0.`com.huawei.hmf.tasks.a.c.c` @type ^`boolean` @kind boolean;
  #L1c0d0c.  if v1 != 0 then goto L1c0d52;
  #L1c0d10.  v1:= v0.`com.huawei.hmf.tasks.a.c.b` @type ^`java.lang.Object` @kind object;
  #L1c0d14.  @monitorenter v1
  #L1c0d16.  v2:= 1I;
  #L1c0d18.  v0.`com.huawei.hmf.tasks.a.c.c` @type ^`boolean` := v2 @kind boolean;
  #L1c0d1c.  v0:= v0.`com.huawei.hmf.tasks.a.c.a` @type ^`java.util.List` @kind object;
  #L1c0d20.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c0d26.  v0:= temp @kind object;
  #L1c0d28.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c0d2e.  v2:= temp;
  #L1c0d30.  if v2 == 0 then goto L1c0d48;
  #L1c0d34.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c0d3a.  v2:= temp @kind object;
  #L1c0d3c.  v2:= (`java.lang.Runnable`) v2 @kind object;
  #L1c0d40.  call `run`(v2) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L1c0d46.  goto L1c0d28;
  #L1c0d48.  @monitorexit v1
  #L1c0d4a.  return @kind void;
  #L1c0d4c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c0d4e.  @monitorexit v1
  #L1c0d50.  throw v0;
  #L1c0d52.  return @kind void;
  catch `java.lang.Throwable` @[L1c0d18..L1c0d50] goto L1c0d4c;
}
procedure `com.huawei.hmf.tasks.CancellationToken` `getToken`(`com.huawei.hmf.tasks.CancellationTokenSource` v1 @kind this) @signature `Lcom/huawei/hmf/tasks/CancellationTokenSource;.getToken:()Lcom/huawei/hmf/tasks/CancellationToken;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c0cc4.  v0:= v1.`com.huawei.hmf.tasks.CancellationTokenSource.a` @type ^`com.huawei.hmf.tasks.a.c` @kind object;
  #L1c0cc8.  return v0 @kind object;
}
