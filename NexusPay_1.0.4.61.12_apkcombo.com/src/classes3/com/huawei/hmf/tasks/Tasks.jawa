record `com.huawei.hmf.tasks.Tasks` @kind class @AccessFlag PUBLIC {
}
global `com.huawei.hmf.tasks.a.j` `@@com.huawei.hmf.tasks.Tasks.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/huawei/hmf/tasks/Tasks;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c1358.  v0:= new `com.huawei.hmf.tasks.a.j`;
  #L1c135c.  call `<init>`(v0) @signature `Lcom/huawei/hmf/tasks/a/j;.<init>:()V` @kind direct;
  #L1c1362.  `@@com.huawei.hmf.tasks.Tasks.a` @type ^`com.huawei.hmf.tasks.a.j` := v0 @kind object;
  #L1c1366.  return @kind void;
}
procedure `void` `<init>`(`com.huawei.hmf.tasks.Tasks` v0 @kind this) @signature `Lcom/huawei/hmf/tasks/Tasks;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1c1378.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c137e.  return @kind void;
}
procedure `com.huawei.hmf.tasks.Task` `allOf`(`java.util.Collection` v0 @kind object) @signature `Lcom/huawei/hmf/tasks/Tasks;.allOf:(Ljava/util/Collection;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1c1118.  call temp:= `a`(v0) @signature `Lcom/huawei/hmf/tasks/a/j;.a:(Ljava/util/Collection;)Lcom/huawei/hmf/tasks/Task;` @kind static;
  #L1c111e.  v0:= temp @kind object;
  #L1c1120.  return v0 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `allOf`(`com.huawei.hmf.tasks.Task`[] v0 @kind object) @signature `Lcom/huawei/hmf/tasks/Tasks;.allOf:([Lcom/huawei/hmf/tasks/Task;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1c10f4.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1c10fa.  v0:= temp @kind object;
  #L1c10fc.  call temp:= `a`(v0) @signature `Lcom/huawei/hmf/tasks/a/j;.a:(Ljava/util/Collection;)Lcom/huawei/hmf/tasks/Task;` @kind static;
  #L1c1102.  v0:= temp @kind object;
  #L1c1104.  return v0 @kind object;
}
procedure `java.lang.Object` `await`(`com.huawei.hmf.tasks.Task` v2 @kind object) @signature `Lcom/huawei/hmf/tasks/Tasks;.await:(Lcom/huawei/hmf/tasks/Task;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c1290.  v0:= "await must not be called on the UI thread" @kind object;
  #L1c1294.  call `a`(v0) @signature `Lcom/huawei/hmf/tasks/a/j;.a:(Ljava/lang/String;)V` @kind static;
  #L1c129a.  call temp:= `isComplete`(v2) @signature `Lcom/huawei/hmf/tasks/Task;.isComplete:()Z` @kind virtual;
  #L1c12a0.  v0:= temp;
  #L1c12a2.  if v0 == 0 then goto L1c12b0;
  #L1c12a6.  call temp:= `a`(v2) @signature `Lcom/huawei/hmf/tasks/a/j;.a:(Lcom/huawei/hmf/tasks/Task;)Ljava/lang/Object;` @kind static;
  #L1c12ac.  v2:= temp @kind object;
  #L1c12ae.  return v2 @kind object;
  #L1c12b0.  v0:= new `com.huawei.hmf.tasks.a.j$a`;
  #L1c12b4.  call `<init>`(v0) @signature `Lcom/huawei/hmf/tasks/a/j$a;.<init>:()V` @kind direct;
  #L1c12ba.  call temp:= `addOnSuccessListener`(v2, v0) @signature `Lcom/huawei/hmf/tasks/Task;.addOnSuccessListener:(Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c12c0.  v1:= temp @kind object;
  #L1c12c2.  call temp:= `addOnFailureListener`(v1, v0) @signature `Lcom/huawei/hmf/tasks/Task;.addOnFailureListener:(Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c12c8.  v0:= v0.`com.huawei.hmf.tasks.a.j$a.a` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L1c12cc.  call `await`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L1c12d2.  call temp:= `a`(v2) @signature `Lcom/huawei/hmf/tasks/a/j;.a:(Lcom/huawei/hmf/tasks/Task;)Ljava/lang/Object;` @kind static;
  #L1c12d8.  v2:= temp @kind object;
  #L1c12da.  return v2 @kind object;
}
procedure `java.lang.Object` `await`(`com.huawei.hmf.tasks.Task` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lcom/huawei/hmf/tasks/Tasks;.await:(Lcom/huawei/hmf/tasks/Task;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c12ec.  v0:= "await must not be called on the UI thread" @kind object;
  #L1c12f0.  call `a`(v0) @signature `Lcom/huawei/hmf/tasks/a/j;.a:(Ljava/lang/String;)V` @kind static;
  #L1c12f6.  call temp:= `isComplete`(v2) @signature `Lcom/huawei/hmf/tasks/Task;.isComplete:()Z` @kind virtual;
  #L1c12fc.  v0:= temp;
  #L1c12fe.  if v0 != 0 then goto L1c133c;
  #L1c1302.  v0:= new `com.huawei.hmf.tasks.a.j$a`;
  #L1c1306.  call `<init>`(v0) @signature `Lcom/huawei/hmf/tasks/a/j$a;.<init>:()V` @kind direct;
  #L1c130c.  call temp:= `addOnSuccessListener`(v2, v0) @signature `Lcom/huawei/hmf/tasks/Task;.addOnSuccessListener:(Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c1312.  v1:= temp @kind object;
  #L1c1314.  call temp:= `addOnFailureListener`(v1, v0) @signature `Lcom/huawei/hmf/tasks/Task;.addOnFailureListener:(Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c131a.  v0:= v0.`com.huawei.hmf.tasks.a.j$a.a` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L1c131e.  call temp:= `await`(v0, v3, v5) @signature `Ljava/util/concurrent/CountDownLatch;.await:(JLjava/util/concurrent/TimeUnit;)Z` @kind virtual;
  #L1c1324.  v3:= temp;
  #L1c1326.  if v3 == 0 then goto L1c132c;
  #L1c132a.  goto L1c133c;
  #L1c132c.  v2:= new `java.util.concurrent.TimeoutException`;
  #L1c1330.  v3:= "Timed out waiting for Task" @kind object;
  #L1c1334.  call `<init>`(v2, v3) @signature `Ljava/util/concurrent/TimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c133a.  throw v2;
  #L1c133c.  call temp:= `a`(v2) @signature `Lcom/huawei/hmf/tasks/a/j;.a:(Lcom/huawei/hmf/tasks/Task;)Ljava/lang/Object;` @kind static;
  #L1c1342.  v2:= temp @kind object;
  #L1c1344.  return v2 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `call`(`java.util.concurrent.Callable` v2 @kind object) @signature `Lcom/huawei/hmf/tasks/Tasks;.call:(Ljava/util/concurrent/Callable;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c1134.  v0:= `@@com.huawei.hmf.tasks.Tasks.a` @type ^`com.huawei.hmf.tasks.a.j` @kind object;
  #L1c1138.  call temp:= `immediate`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.immediate:()Ljava/util/concurrent/Executor;` @kind static;
  #L1c113e.  v1:= temp @kind object;
  #L1c1140.  call temp:= `a`(v0, v1, v2) @signature `Lcom/huawei/hmf/tasks/a/j;.a:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Callable;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c1146.  v2:= temp @kind object;
  #L1c1148.  return v2 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `callInBackground`(`java.util.concurrent.Callable` v2 @kind object) @signature `Lcom/huawei/hmf/tasks/Tasks;.callInBackground:(Ljava/util/concurrent/Callable;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c115c.  v0:= `@@com.huawei.hmf.tasks.Tasks.a` @type ^`com.huawei.hmf.tasks.a.j` @kind object;
  #L1c1160.  call temp:= `a`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.a:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L1c1166.  v1:= temp @kind object;
  #L1c1168.  call temp:= `a`(v0, v1, v2) @signature `Lcom/huawei/hmf/tasks/a/j;.a:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Callable;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c116e.  v2:= temp @kind object;
  #L1c1170.  return v2 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `callInBackground`(`java.util.concurrent.Executor` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object) @signature `Lcom/huawei/hmf/tasks/Tasks;.callInBackground:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Callable;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c1184.  v0:= `@@com.huawei.hmf.tasks.Tasks.a` @type ^`com.huawei.hmf.tasks.a.j` @kind object;
  #L1c1188.  call temp:= `a`(v0, v1, v2) @signature `Lcom/huawei/hmf/tasks/a/j;.a:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Callable;)Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c118e.  v1:= temp @kind object;
  #L1c1190.  return v1 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `fromCanceled`() @signature `Lcom/huawei/hmf/tasks/Tasks;.fromCanceled:()Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c11a4.  v0:= new `com.huawei.hmf.tasks.a.i`;
  #L1c11a8.  call `<init>`(v0) @signature `Lcom/huawei/hmf/tasks/a/i;.<init>:()V` @kind direct;
  #L1c11ae.  call temp:= `a`(v0) @signature `Lcom/huawei/hmf/tasks/a/i;.a:()Z` @kind virtual;
  #L1c11b4.  return v0 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `fromException`(`java.lang.Exception` v1 @kind object) @signature `Lcom/huawei/hmf/tasks/Tasks;.fromException:(Ljava/lang/Exception;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c11c8.  v0:= new `com.huawei.hmf.tasks.TaskCompletionSource`;
  #L1c11cc.  call `<init>`(v0) @signature `Lcom/huawei/hmf/tasks/TaskCompletionSource;.<init>:()V` @kind direct;
  #L1c11d2.  call `setException`(v0, v1) @signature `Lcom/huawei/hmf/tasks/TaskCompletionSource;.setException:(Ljava/lang/Exception;)V` @kind virtual;
  #L1c11d8.  call temp:= `getTask`(v0) @signature `Lcom/huawei/hmf/tasks/TaskCompletionSource;.getTask:()Lcom/huawei/hmf/tasks/Task;` @kind virtual;
  #L1c11de.  v1:= temp @kind object;
  #L1c11e0.  return v1 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `fromResult`(`java.lang.Object` v0 @kind object) @signature `Lcom/huawei/hmf/tasks/Tasks;.fromResult:(Ljava/lang/Object;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1c11f4.  call temp:= `a`(v0) @signature `Lcom/huawei/hmf/tasks/a/j;.a:(Ljava/lang/Object;)Lcom/huawei/hmf/tasks/Task;` @kind static;
  #L1c11fa.  v0:= temp @kind object;
  #L1c11fc.  return v0 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `join`(`java.util.Collection` v0 @kind object) @signature `Lcom/huawei/hmf/tasks/Tasks;.join:(Ljava/util/Collection;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1c1234.  call temp:= `c`(v0) @signature `Lcom/huawei/hmf/tasks/a/j;.c:(Ljava/util/Collection;)Lcom/huawei/hmf/tasks/Task;` @kind static;
  #L1c123a.  v0:= temp @kind object;
  #L1c123c.  return v0 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `join`(`com.huawei.hmf.tasks.Task`[] v0 @kind object) @signature `Lcom/huawei/hmf/tasks/Tasks;.join:([Lcom/huawei/hmf/tasks/Task;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1c1210.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1c1216.  v0:= temp @kind object;
  #L1c1218.  call temp:= `c`(v0) @signature `Lcom/huawei/hmf/tasks/a/j;.c:(Ljava/util/Collection;)Lcom/huawei/hmf/tasks/Task;` @kind static;
  #L1c121e.  v0:= temp @kind object;
  #L1c1220.  return v0 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `successOf`(`java.util.Collection` v0 @kind object) @signature `Lcom/huawei/hmf/tasks/Tasks;.successOf:(Ljava/util/Collection;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1c1274.  call temp:= `b`(v0) @signature `Lcom/huawei/hmf/tasks/a/j;.b:(Ljava/util/Collection;)Lcom/huawei/hmf/tasks/Task;` @kind static;
  #L1c127a.  v0:= temp @kind object;
  #L1c127c.  return v0 @kind object;
}
procedure `com.huawei.hmf.tasks.Task` `successOf`(`com.huawei.hmf.tasks.Task`[] v0 @kind object) @signature `Lcom/huawei/hmf/tasks/Tasks;.successOf:([Lcom/huawei/hmf/tasks/Task;)Lcom/huawei/hmf/tasks/Task;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1c1250.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1c1256.  v0:= temp @kind object;
  #L1c1258.  call temp:= `b`(v0) @signature `Lcom/huawei/hmf/tasks/a/j;.b:(Ljava/util/Collection;)Lcom/huawei/hmf/tasks/Task;` @kind static;
  #L1c125e.  v0:= temp @kind object;
  #L1c1260.  return v0 @kind object;
}
