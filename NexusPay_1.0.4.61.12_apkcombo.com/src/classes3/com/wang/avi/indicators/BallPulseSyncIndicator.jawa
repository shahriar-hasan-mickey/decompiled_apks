record `com.wang.avi.indicators.BallPulseSyncIndicator` @kind class @AccessFlag PUBLIC extends `com.wang.avi.Indicator` @kind class {
  `float`[] `com.wang.avi.indicators.BallPulseSyncIndicator.translateYFloats` @AccessFlag ;
}
procedure `void` `<init>`(`com.wang.avi.indicators.BallPulseSyncIndicator` v1 @kind this) @signature `Lcom/wang/avi/indicators/BallPulseSyncIndicator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f399c.  call `<init>`(v1) @signature `Lcom/wang/avi/Indicator;.<init>:()V` @kind direct;
  #L3f39a2.  v0:= 3I;
  #L3f39a4.  v0:= new `float`[v0];
  #L3f39a8.  v1.`com.wang.avi.indicators.BallPulseSyncIndicator.translateYFloats` @type ^`float`[] := v0 @kind object;
  #L3f39ac.  return @kind void;
}
procedure `void` `draw`(`com.wang.avi.indicators.BallPulseSyncIndicator` v7 @kind this, `android.graphics.Canvas` v8 @kind object, `android.graphics.Paint` v9 @kind object) @signature `Lcom/wang/avi/indicators/BallPulseSyncIndicator;.draw:(Landroid/graphics/Canvas;Landroid/graphics/Paint;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f39c0.  call temp:= `getWidth`(v7) @signature `Lcom/wang/avi/Indicator;.getWidth:()I` @kind virtual;
  #L3f39c6.  v0:= temp;
  #L3f39c8.  v0:= (`float`) v0 @kind i2f;
  #L3f39ca.  v1:= 8.0F;
  #L3f39ce.  v0:= v0 - v1 @kind float;
  #L3f39d0.  v1:= 6.0F;
  #L3f39d4.  v0:= v0 / v1 @kind float;
  #L3f39d6.  call temp:= `getWidth`(v7) @signature `Lcom/wang/avi/Indicator;.getWidth:()I` @kind virtual;
  #L3f39dc.  v1:= temp;
  #L3f39de.  v1:= v1 / 2;
  #L3f39e2.  v1:= (`float`) v1 @kind i2f;
  #L3f39e4.  v2:= 2.0F;
  #L3f39e8.  v2:= v2 * v0 @kind float;
  #L3f39ec.  v3:= 4.0F;
  #L3f39f0.  v4:= v2 + v3 @kind float;
  #L3f39f4.  v1:= v1 - v4 @kind float;
  #L3f39f6.  v4:= 0I;
  #L3f39f8.  v5:= 3I;
  #L3f39fa.  if v4 >= v5 then goto L3f3a34;
  #L3f39fe.  call temp:= `save`(v8) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L3f3a04.  v5:= (`float`) v4 @kind i2f;
  #L3f3a06.  v6:= v2 * v5 @kind float;
  #L3f3a0a.  v6:= v6 + v1 @kind float;
  #L3f3a0c.  v5:= v5 * v3 @kind float;
  #L3f3a10.  v6:= v6 + v5 @kind float;
  #L3f3a12.  v5:= v7.`com.wang.avi.indicators.BallPulseSyncIndicator.translateYFloats` @type ^`float`[] @kind object;
  #L3f3a16.  v5:= v5[v4];
  #L3f3a1a.  call `translate`(v8, v6, v5) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3f3a20.  v5:= 0I;
  #L3f3a22.  call `drawCircle`(v8, v5, v5, v0, v9) @signature `Landroid/graphics/Canvas;.drawCircle:(FFFLandroid/graphics/Paint;)V` @kind virtual;
  #L3f3a28.  call `restore`(v8) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L3f3a2e.  v4:= v4 + 1;
  #L3f3a32.  goto L3f39f8;
  #L3f3a34.  return @kind void;
}
procedure `java.util.ArrayList` `onCreateAnimators`(`com.wang.avi.indicators.BallPulseSyncIndicator` v10 @kind this) @signature `Lcom/wang/avi/indicators/BallPulseSyncIndicator;.onCreateAnimators:()Ljava/util/ArrayList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3f38bc.  v0:= new `java.util.ArrayList`;
  #L3f38c0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3f38c6.  call temp:= `getWidth`(v10) @signature `Lcom/wang/avi/Indicator;.getWidth:()I` @kind virtual;
  #L3f38cc.  v1:= temp;
  #L3f38ce.  v1:= (`float`) v1 @kind i2f;
  #L3f38d0.  v2:= 8.0F;
  #L3f38d4.  v1:= v1 - v2 @kind float;
  #L3f38d6.  v2:= 6.0F;
  #L3f38da.  v1:= v1 / v2 @kind float;
  #L3f38dc.  v2:= 3I;
  #L3f38de.  v3:= new `int`[v2];
  #L3f38e2.  goto L3f3978;
  #L3f38e8.  v4:= 0I;
  #L3f38ea.  v5:= 0I;
  #L3f38ec.  if v5 >= v2 then goto L3f3974;
  #L3f38f0.  v6:= new `float`[v2];
  #L3f38f4.  call temp:= `getHeight`(v10) @signature `Lcom/wang/avi/Indicator;.getHeight:()I` @kind virtual;
  #L3f38fa.  v7:= temp;
  #L3f38fc.  v8:= 2I;
  #L3f38fe.  v7:= v7 / v8 @kind int;
  #L3f3900.  v7:= (`float`) v7 @kind i2f;
  #L3f3902.  v6[v4]:= v7;
  #L3f3906.  call temp:= `getHeight`(v10) @signature `Lcom/wang/avi/Indicator;.getHeight:()I` @kind virtual;
  #L3f390c.  v7:= temp;
  #L3f390e.  v7:= v7 / v8 @kind int;
  #L3f3910.  v7:= (`float`) v7 @kind i2f;
  #L3f3912.  v9:= 2.0F;
  #L3f3916.  v9:= v9 * v1 @kind float;
  #L3f391a.  v7:= v7 - v9 @kind float;
  #L3f391c.  v9:= 1I;
  #L3f391e.  v6[v9]:= v7;
  #L3f3922.  call temp:= `getHeight`(v10) @signature `Lcom/wang/avi/Indicator;.getHeight:()I` @kind virtual;
  #L3f3928.  v7:= temp;
  #L3f392a.  v7:= v7 / v8 @kind int;
  #L3f392c.  v7:= (`float`) v7 @kind i2f;
  #L3f392e.  v6[v8]:= v7;
  #L3f3932.  call temp:= `ofFloat`(v6) @signature `Landroid/animation/ValueAnimator;.ofFloat:([F)Landroid/animation/ValueAnimator;` @kind static;
  #L3f3938.  v6:= temp @kind object;
  #L3f393a.  v7:= 600L;
  #L3f393e.  call temp:= `setDuration`(v6, v7) @signature `Landroid/animation/ValueAnimator;.setDuration:(J)Landroid/animation/ValueAnimator;` @kind virtual;
  #L3f3944.  v7:= -1I;
  #L3f3946.  call `setRepeatCount`(v6, v7) @signature `Landroid/animation/ValueAnimator;.setRepeatCount:(I)V` @kind virtual;
  #L3f394c.  v7:= v3[v5];
  #L3f3950.  v7:= (`long`) v7 @kind i2l;
  #L3f3952.  call `setStartDelay`(v6, v7) @signature `Landroid/animation/ValueAnimator;.setStartDelay:(J)V` @kind virtual;
  #L3f3958.  v7:= new `com.wang.avi.indicators.BallPulseSyncIndicator$1`;
  #L3f395c.  call `<init>`(v7, v10, v5) @signature `Lcom/wang/avi/indicators/BallPulseSyncIndicator$1;.<init>:(Lcom/wang/avi/indicators/BallPulseSyncIndicator;I)V` @kind direct;
  #L3f3962.  call `addUpdateListener`(v10, v6, v7) @signature `Lcom/wang/avi/Indicator;.addUpdateListener:(Landroid/animation/ValueAnimator;Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V` @kind virtual;
  #L3f3968.  call temp:= `add`(v0, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f396e.  v5:= v5 + 1;
  #L3f3972.  goto L3f38ec;
  #L3f3974.  return v0 @kind object;
  #L3f3976.  
  #L3f3978.  v3:= (70I, 140I, 210I) @kind object;
  #L3f398b.  goto L3f38e8;
}
