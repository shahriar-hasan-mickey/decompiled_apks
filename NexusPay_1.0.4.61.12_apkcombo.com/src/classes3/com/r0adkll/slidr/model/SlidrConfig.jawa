record `com.r0adkll.slidr.model.SlidrConfig` @kind class @AccessFlag PUBLIC {
  `int` `com.r0adkll.slidr.model.SlidrConfig.a` @AccessFlag PRIVATE;
  `int` `com.r0adkll.slidr.model.SlidrConfig.b` @AccessFlag PRIVATE;
  `float` `com.r0adkll.slidr.model.SlidrConfig.c` @AccessFlag PRIVATE;
  `float` `com.r0adkll.slidr.model.SlidrConfig.d` @AccessFlag PRIVATE;
  `int` `com.r0adkll.slidr.model.SlidrConfig.e` @AccessFlag PRIVATE;
  `float` `com.r0adkll.slidr.model.SlidrConfig.f` @AccessFlag PRIVATE;
  `float` `com.r0adkll.slidr.model.SlidrConfig.g` @AccessFlag PRIVATE;
  `float` `com.r0adkll.slidr.model.SlidrConfig.h` @AccessFlag PRIVATE;
  `float` `com.r0adkll.slidr.model.SlidrConfig.i` @AccessFlag PRIVATE;
  `boolean` `com.r0adkll.slidr.model.SlidrConfig.j` @AccessFlag PRIVATE;
  `float` `com.r0adkll.slidr.model.SlidrConfig.k` @AccessFlag PRIVATE;
  `com.r0adkll.slidr.model.SlidrPosition` `com.r0adkll.slidr.model.SlidrConfig.l` @AccessFlag PRIVATE;
  `com.r0adkll.slidr.model.SlidrListener` `com.r0adkll.slidr.model.SlidrConfig.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.r0adkll.slidr.model.SlidrConfig` v1 @kind this) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3c5720.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c5726.  v0:= -1I;
  #L3c5728.  v1.`com.r0adkll.slidr.model.SlidrConfig.a` @type ^`int` := v0;
  #L3c572c.  v1.`com.r0adkll.slidr.model.SlidrConfig.b` @type ^`int` := v0;
  #L3c5730.  v0:= -1.0F;
  #L3c5734.  v1.`com.r0adkll.slidr.model.SlidrConfig.c` @type ^`float` := v0;
  #L3c5738.  v0:= 1.0F;
  #L3c573c.  v1.`com.r0adkll.slidr.model.SlidrConfig.d` @type ^`float` := v0;
  #L3c5740.  v0:= -16777216I;
  #L3c5744.  v1.`com.r0adkll.slidr.model.SlidrConfig.e` @type ^`int` := v0;
  #L3c5748.  v0:= 1061997773I;
  #L3c574e.  v1.`com.r0adkll.slidr.model.SlidrConfig.f` @type ^`float` := v0;
  #L3c5752.  v0:= 0I;
  #L3c5754.  v1.`com.r0adkll.slidr.model.SlidrConfig.g` @type ^`float` := v0;
  #L3c5758.  v0:= 5.0F;
  #L3c575c.  v1.`com.r0adkll.slidr.model.SlidrConfig.h` @type ^`float` := v0;
  #L3c5760.  v0:= 0.25F;
  #L3c5764.  v1.`com.r0adkll.slidr.model.SlidrConfig.i` @type ^`float` := v0;
  #L3c5768.  v0:= 0I;
  #L3c576a.  v1.`com.r0adkll.slidr.model.SlidrConfig.j` @type ^`boolean` := v0 @kind boolean;
  #L3c576e.  v0:= 1043878380I;
  #L3c5774.  v1.`com.r0adkll.slidr.model.SlidrConfig.k` @type ^`float` := v0;
  #L3c5778.  v0:= `@@com.r0adkll.slidr.model.SlidrPosition.LEFT` @type ^`com.r0adkll.slidr.model.SlidrPosition` @kind object;
  #L3c577c.  v1.`com.r0adkll.slidr.model.SlidrConfig.l` @type ^`com.r0adkll.slidr.model.SlidrPosition` := v0 @kind object;
  #L3c5780.  return @kind void;
}
procedure `void` `<init>`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind this, `com.r0adkll.slidr.model.SlidrConfig$a` v1 @kind object) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.<init>:(Lcom/r0adkll/slidr/model/SlidrConfig$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3c5794.  call `<init>`(v0) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.<init>:()V` @kind direct;
  #L3c579a.  return @kind void;
}
procedure `float` `a`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind object, `float` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.a:(Lcom/r0adkll/slidr/model/SlidrConfig;F)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c553c.  v0.`com.r0adkll.slidr.model.SlidrConfig.i` @type ^`float` := v1;
  #L3c5540.  return v1;
}
procedure `int` `b`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind object, `int` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.b:(Lcom/r0adkll/slidr/model/SlidrConfig;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c5690.  v0.`com.r0adkll.slidr.model.SlidrConfig.a` @type ^`int` := v1;
  #L3c5694.  return v1;
}
procedure `boolean` `c`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind object, `boolean` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.c:(Lcom/r0adkll/slidr/model/SlidrConfig;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c5480.  v0.`com.r0adkll.slidr.model.SlidrConfig.j` @type ^`boolean` := v1 @kind boolean;
  #L3c5484.  return v1;
}
procedure `float` `d`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind object, `float` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.d:(Lcom/r0adkll/slidr/model/SlidrConfig;F)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c5554.  v0.`com.r0adkll.slidr.model.SlidrConfig.k` @type ^`float` := v1;
  #L3c5558.  return v1;
}
procedure `com.r0adkll.slidr.model.SlidrListener` `e`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind object, `com.r0adkll.slidr.model.SlidrListener` v1 @kind object) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.e:(Lcom/r0adkll/slidr/model/SlidrConfig;Lcom/r0adkll/slidr/model/SlidrListener;)Lcom/r0adkll/slidr/model/SlidrListener;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c54dc.  v0.`com.r0adkll.slidr.model.SlidrConfig.m` @type ^`com.r0adkll.slidr.model.SlidrListener` := v1 @kind object;
  #L3c54e0.  return v1 @kind object;
}
procedure `int` `f`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind object, `int` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.f:(Lcom/r0adkll/slidr/model/SlidrConfig;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c56a8.  v0.`com.r0adkll.slidr.model.SlidrConfig.b` @type ^`int` := v1;
  #L3c56ac.  return v1;
}
procedure `com.r0adkll.slidr.model.SlidrPosition` `g`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind object, `com.r0adkll.slidr.model.SlidrPosition` v1 @kind object) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.g:(Lcom/r0adkll/slidr/model/SlidrConfig;Lcom/r0adkll/slidr/model/SlidrPosition;)Lcom/r0adkll/slidr/model/SlidrPosition;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c550c.  v0.`com.r0adkll.slidr.model.SlidrConfig.l` @type ^`com.r0adkll.slidr.model.SlidrPosition` := v1 @kind object;
  #L3c5510.  return v1 @kind object;
}
procedure `float` `h`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind object, `float` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.h:(Lcom/r0adkll/slidr/model/SlidrConfig;F)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c556c.  v0.`com.r0adkll.slidr.model.SlidrConfig.c` @type ^`float` := v1;
  #L3c5570.  return v1;
}
procedure `float` `i`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind object, `float` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.i:(Lcom/r0adkll/slidr/model/SlidrConfig;F)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c5584.  v0.`com.r0adkll.slidr.model.SlidrConfig.d` @type ^`float` := v1;
  #L3c5588.  return v1;
}
procedure `int` `j`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind object, `int` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.j:(Lcom/r0adkll/slidr/model/SlidrConfig;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c56c0.  v0.`com.r0adkll.slidr.model.SlidrConfig.e` @type ^`int` := v1;
  #L3c56c4.  return v1;
}
procedure `float` `k`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind object, `float` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.k:(Lcom/r0adkll/slidr/model/SlidrConfig;F)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c559c.  v0.`com.r0adkll.slidr.model.SlidrConfig.f` @type ^`float` := v1;
  #L3c55a0.  return v1;
}
procedure `float` `l`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind object, `float` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.l:(Lcom/r0adkll/slidr/model/SlidrConfig;F)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c55b4.  v0.`com.r0adkll.slidr.model.SlidrConfig.g` @type ^`float` := v1;
  #L3c55b8.  return v1;
}
procedure `float` `m`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind object, `float` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.m:(Lcom/r0adkll/slidr/model/SlidrConfig;F)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c55cc.  v0.`com.r0adkll.slidr.model.SlidrConfig.h` @type ^`float` := v1;
  #L3c55d0.  return v1;
}
procedure `boolean` `areStatusBarColorsValid`(`com.r0adkll.slidr.model.SlidrConfig` v2 @kind this) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.areStatusBarColorsValid:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c5498.  v0:= v2.`com.r0adkll.slidr.model.SlidrConfig.a` @type ^`int`;
  #L3c549c.  v1:= -1I;
  #L3c549e.  if v0 == v1 then goto L3c54ae;
  #L3c54a2.  v0:= v2.`com.r0adkll.slidr.model.SlidrConfig.b` @type ^`int`;
  #L3c54a6.  if v0 == v1 then goto L3c54ae;
  #L3c54aa.  v0:= 1I;
  #L3c54ac.  goto L3c54b0;
  #L3c54ae.  v0:= 0I;
  #L3c54b0.  return v0;
}
procedure `float` `getDistanceThreshold`(`com.r0adkll.slidr.model.SlidrConfig` v1 @kind this) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.getDistanceThreshold:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c55e4.  v0:= v1.`com.r0adkll.slidr.model.SlidrConfig.i` @type ^`float`;
  #L3c55e8.  return v0;
}
procedure `float` `getEdgeSize`(`com.r0adkll.slidr.model.SlidrConfig` v1 @kind this, `float` v2 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.getEdgeSize:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c55fc.  v0:= v1.`com.r0adkll.slidr.model.SlidrConfig.k` @type ^`float`;
  #L3c5600.  v0:= v0 * v2 @kind float;
  #L3c5604.  return v0;
}
procedure `com.r0adkll.slidr.model.SlidrListener` `getListener`(`com.r0adkll.slidr.model.SlidrConfig` v1 @kind this) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.getListener:()Lcom/r0adkll/slidr/model/SlidrListener;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c54f4.  v0:= v1.`com.r0adkll.slidr.model.SlidrConfig.m` @type ^`com.r0adkll.slidr.model.SlidrListener` @kind object;
  #L3c54f8.  return v0 @kind object;
}
procedure `com.r0adkll.slidr.model.SlidrPosition` `getPosition`(`com.r0adkll.slidr.model.SlidrConfig` v1 @kind this) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.getPosition:()Lcom/r0adkll/slidr/model/SlidrPosition;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c5524.  v0:= v1.`com.r0adkll.slidr.model.SlidrConfig.l` @type ^`com.r0adkll.slidr.model.SlidrPosition` @kind object;
  #L3c5528.  return v0 @kind object;
}
procedure `int` `getPrimaryColor`(`com.r0adkll.slidr.model.SlidrConfig` v1 @kind this) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.getPrimaryColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c56d8.  v0:= v1.`com.r0adkll.slidr.model.SlidrConfig.a` @type ^`int`;
  #L3c56dc.  return v0;
}
procedure `int` `getScrimColor`(`com.r0adkll.slidr.model.SlidrConfig` v1 @kind this) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.getScrimColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c56f0.  v0:= v1.`com.r0adkll.slidr.model.SlidrConfig.e` @type ^`int`;
  #L3c56f4.  return v0;
}
procedure `float` `getScrimEndAlpha`(`com.r0adkll.slidr.model.SlidrConfig` v1 @kind this) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.getScrimEndAlpha:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c5618.  v0:= v1.`com.r0adkll.slidr.model.SlidrConfig.g` @type ^`float`;
  #L3c561c.  return v0;
}
procedure `float` `getScrimStartAlpha`(`com.r0adkll.slidr.model.SlidrConfig` v1 @kind this) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.getScrimStartAlpha:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c5630.  v0:= v1.`com.r0adkll.slidr.model.SlidrConfig.f` @type ^`float`;
  #L3c5634.  return v0;
}
procedure `int` `getSecondaryColor`(`com.r0adkll.slidr.model.SlidrConfig` v1 @kind this) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.getSecondaryColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c5708.  v0:= v1.`com.r0adkll.slidr.model.SlidrConfig.b` @type ^`int`;
  #L3c570c.  return v0;
}
procedure `float` `getSensitivity`(`com.r0adkll.slidr.model.SlidrConfig` v1 @kind this) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.getSensitivity:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c5648.  v0:= v1.`com.r0adkll.slidr.model.SlidrConfig.d` @type ^`float`;
  #L3c564c.  return v0;
}
procedure `float` `getTouchSize`(`com.r0adkll.slidr.model.SlidrConfig` v1 @kind this) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.getTouchSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c5660.  v0:= v1.`com.r0adkll.slidr.model.SlidrConfig.c` @type ^`float`;
  #L3c5664.  return v0;
}
procedure `float` `getVelocityThreshold`(`com.r0adkll.slidr.model.SlidrConfig` v1 @kind this) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.getVelocityThreshold:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c5678.  v0:= v1.`com.r0adkll.slidr.model.SlidrConfig.h` @type ^`float`;
  #L3c567c.  return v0;
}
procedure `boolean` `isEdgeOnly`(`com.r0adkll.slidr.model.SlidrConfig` v1 @kind this) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.isEdgeOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c54c4.  v0:= v1.`com.r0adkll.slidr.model.SlidrConfig.j` @type ^`boolean` @kind boolean;
  #L3c54c8.  return v0;
}
procedure `void` `setColorPrimary`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind this, `int` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.setColorPrimary:(I)V` @AccessFlag PUBLIC {
    temp;

  #L3c57ac.  v0.`com.r0adkll.slidr.model.SlidrConfig.a` @type ^`int` := v1;
  #L3c57b0.  return @kind void;
}
procedure `void` `setColorSecondary`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind this, `int` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.setColorSecondary:(I)V` @AccessFlag PUBLIC {
    temp;

  #L3c57c4.  v0.`com.r0adkll.slidr.model.SlidrConfig.b` @type ^`int` := v1;
  #L3c57c8.  return @kind void;
}
procedure `void` `setDistanceThreshold`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind this, `float` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.setDistanceThreshold:(F)V` @AccessFlag PUBLIC {
    temp;

  #L3c57dc.  v0.`com.r0adkll.slidr.model.SlidrConfig.i` @type ^`float` := v1;
  #L3c57e0.  return @kind void;
}
procedure `void` `setScrimColor`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind this, `int` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.setScrimColor:(I)V` @AccessFlag PUBLIC {
    temp;

  #L3c57f4.  v0.`com.r0adkll.slidr.model.SlidrConfig.e` @type ^`int` := v1;
  #L3c57f8.  return @kind void;
}
procedure `void` `setScrimEndAlpha`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind this, `float` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.setScrimEndAlpha:(F)V` @AccessFlag PUBLIC {
    temp;

  #L3c580c.  v0.`com.r0adkll.slidr.model.SlidrConfig.g` @type ^`float` := v1;
  #L3c5810.  return @kind void;
}
procedure `void` `setScrimStartAlpha`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind this, `float` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.setScrimStartAlpha:(F)V` @AccessFlag PUBLIC {
    temp;

  #L3c5824.  v0.`com.r0adkll.slidr.model.SlidrConfig.f` @type ^`float` := v1;
  #L3c5828.  return @kind void;
}
procedure `void` `setSensitivity`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind this, `float` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.setSensitivity:(F)V` @AccessFlag PUBLIC {
    temp;

  #L3c583c.  v0.`com.r0adkll.slidr.model.SlidrConfig.d` @type ^`float` := v1;
  #L3c5840.  return @kind void;
}
procedure `void` `setTouchSize`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind this, `float` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.setTouchSize:(F)V` @AccessFlag PUBLIC {
    temp;

  #L3c5854.  v0.`com.r0adkll.slidr.model.SlidrConfig.c` @type ^`float` := v1;
  #L3c5858.  return @kind void;
}
procedure `void` `setVelocityThreshold`(`com.r0adkll.slidr.model.SlidrConfig` v0 @kind this, `float` v1 ) @signature `Lcom/r0adkll/slidr/model/SlidrConfig;.setVelocityThreshold:(F)V` @AccessFlag PUBLIC {
    temp;

  #L3c586c.  v0.`com.r0adkll.slidr.model.SlidrConfig.h` @type ^`float` := v1;
  #L3c5870.  return @kind void;
}
