record `com.yalantis.ucrop.task.BitmapLoadTask` @kind class @AccessFlag PUBLIC extends `android.os.AsyncTask` @kind class {
  `com.yalantis.ucrop.callback.BitmapLoadCallback` `com.yalantis.ucrop.task.BitmapLoadTask.mBitmapLoadCallback` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.WeakReference` `com.yalantis.ucrop.task.BitmapLoadTask.mContext` @AccessFlag PRIVATE_FINAL;
  `android.net.Uri` `com.yalantis.ucrop.task.BitmapLoadTask.mInputUri` @AccessFlag PRIVATE;
  `android.net.Uri` `com.yalantis.ucrop.task.BitmapLoadTask.mOutputUri` @AccessFlag PRIVATE;
  `int` `com.yalantis.ucrop.task.BitmapLoadTask.mRequiredHeight` @AccessFlag PRIVATE_FINAL;
  `int` `com.yalantis.ucrop.task.BitmapLoadTask.mRequiredWidth` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.yalantis.ucrop.task.BitmapLoadTask.MAX_BITMAP_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.yalantis.ucrop.task.BitmapLoadTask.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.yalantis.ucrop.task.BitmapLoadTask` v1 @kind this, `android.content.Context` v2 @kind object, `android.net.Uri` v3 @kind object, `android.net.Uri` v4 @kind object, `int` v5 , `int` v6 , `com.yalantis.ucrop.callback.BitmapLoadCallback` v7 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask;.<init>:(Landroid/content/Context;Landroid/net/Uri;Landroid/net/Uri;IILcom/yalantis/ucrop/callback/BitmapLoadCallback;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3fe090.  call `<init>`(v1) @signature `Landroid/os/AsyncTask;.<init>:()V` @kind direct;
  #L3fe096.  v0:= new `java.lang.ref.WeakReference`;
  #L3fe09a.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3fe0a0.  v1.`com.yalantis.ucrop.task.BitmapLoadTask.mContext` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L3fe0a4.  v1.`com.yalantis.ucrop.task.BitmapLoadTask.mInputUri` @type ^`android.net.Uri` := v3 @kind object;
  #L3fe0a8.  v1.`com.yalantis.ucrop.task.BitmapLoadTask.mOutputUri` @type ^`android.net.Uri` := v4 @kind object;
  #L3fe0ac.  v1.`com.yalantis.ucrop.task.BitmapLoadTask.mRequiredWidth` @type ^`int` := v5;
  #L3fe0b0.  v1.`com.yalantis.ucrop.task.BitmapLoadTask.mRequiredHeight` @type ^`int` := v6;
  #L3fe0b4.  v1.`com.yalantis.ucrop.task.BitmapLoadTask.mBitmapLoadCallback` @type ^`com.yalantis.ucrop.callback.BitmapLoadCallback` := v7 @kind object;
  #L3fe0b8.  return @kind void;
}
procedure `boolean` `checkSize`(`com.yalantis.ucrop.task.BitmapLoadTask` v2 @kind this, `android.graphics.Bitmap` v3 @kind object, `android.graphics.BitmapFactory$Options` v4 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask;.checkSize:(Landroid/graphics/Bitmap;Landroid/graphics/BitmapFactory$Options;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fdd7c.  v0:= 0I;
  #L3fdd7e.  if v3 == 0 then goto L3fdd8c;
  #L3fdd82.  call temp:= `getByteCount`(v3) @signature `Landroid/graphics/Bitmap;.getByteCount:()I` @kind virtual;
  #L3fdd88.  v3:= temp;
  #L3fdd8a.  goto L3fdd8e;
  #L3fdd8c.  v3:= 0I;
  #L3fdd8e.  v1:= 104857600I;
  #L3fdd92.  if v3 <= v1 then goto L3fdda6;
  #L3fdd96.  v3:= v4.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L3fdd9a.  v3:= v3 * 2;
  #L3fdd9e.  v4.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v3;
  #L3fdda2.  v3:= 1I;
  #L3fdda4.  return v3;
  #L3fdda6.  return v0;
}
procedure `void` `downloadFile`(`com.yalantis.ucrop.task.BitmapLoadTask` v4 @kind this, `android.net.Uri` v5 @kind object, `android.net.Uri` v6 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask;.downloadFile:(Landroid/net/Uri;Landroid/net/Uri;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fe0cc.  v0:= "BitmapWorkerTask" @kind object;
  #L3fe0d0.  v1:= "downloadFile" @kind object;
  #L3fe0d4.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3fe0da.  if v6 == 0 then goto L3fe208;
  #L3fe0de.  v0:= v4.`com.yalantis.ucrop.task.BitmapLoadTask.mContext` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3fe0e2.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3fe0e8.  v0:= temp @kind object;
  #L3fe0ea.  v0:= (`android.content.Context`) v0 @kind object;
  #L3fe0ee.  if v0 == 0 then goto L3fe1f8;
  #L3fe0f2.  v1:= `@@com.yalantis.ucrop.OkHttpClientStore.INSTANCE` @type ^`com.yalantis.ucrop.OkHttpClientStore` @kind object;
  #L3fe0f6.  call temp:= `getClient`(v1) @signature `Lcom/yalantis/ucrop/OkHttpClientStore;.getClient:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L3fe0fc.  v1:= temp @kind object;
  #L3fe0fe.  v2:= 0I;
  #L3fe100.  v3:= new `okhttp3.Request$Builder`;
  #L3fe104.  call `<init>`(v3) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L3fe10a.  call temp:= `toString`(v5) @signature `Landroid/net/Uri;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fe110.  v5:= temp @kind object;
  #L3fe112.  call temp:= `url`(v3, v5) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L3fe118.  v5:= temp @kind object;
  #L3fe11a.  call temp:= `build`(v5) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L3fe120.  v5:= temp @kind object;
  #L3fe122.  call temp:= `newCall`(v1, v5) @signature `Lokhttp3/OkHttpClient;.newCall:(Lokhttp3/Request;)Lokhttp3/Call;` @kind virtual;
  #L3fe128.  v5:= temp @kind object;
  #L3fe12a.  call temp:= `execute`(v5) @signature `Lokhttp3/Call;.execute:()Lokhttp3/Response;` @kind interface;
  #L3fe130.  v5:= temp @kind object;
  #L3fe132.  call temp:= `body`(v5) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L3fe138.  v3:= temp @kind object;
  #L3fe13a.  call temp:= `source`(v3) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L3fe140.  v3:= temp @kind object;
  #L3fe142.  call temp:= `getContentResolver`(v0) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L3fe148.  v0:= temp @kind object;
  #L3fe14a.  call temp:= `openOutputStream`(v0, v6) @signature `Landroid/content/ContentResolver;.openOutputStream:(Landroid/net/Uri;)Ljava/io/OutputStream;` @kind virtual;
  #L3fe150.  v6:= temp @kind object;
  #L3fe152.  if v6 == 0 then goto L3fe19a;
  #L3fe156.  call temp:= `sink`(v6) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L3fe15c.  v2:= temp @kind object;
  #L3fe15e.  call temp:= `readAll`(v3, v2) @signature `Lokio/BufferedSource;.readAll:(Lokio/Sink;)J` @kind interface;
  #L3fe164.  call `close`(v3) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3fe16a.  call `close`(v2) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3fe170.  if v5 == 0 then goto L3fe182;
  #L3fe174.  call temp:= `body`(v5) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L3fe17a.  v5:= temp @kind object;
  #L3fe17c.  call `close`(v5) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3fe182.  call temp:= `dispatcher`(v1) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L3fe188.  v5:= temp @kind object;
  #L3fe18a.  call `cancelAll`(v5) @signature `Lokhttp3/Dispatcher;.cancelAll:()V` @kind virtual;
  #L3fe190.  v5:= v4.`com.yalantis.ucrop.task.BitmapLoadTask.mOutputUri` @type ^`android.net.Uri` @kind object;
  #L3fe194.  v4.`com.yalantis.ucrop.task.BitmapLoadTask.mInputUri` @type ^`android.net.Uri` := v5 @kind object;
  #L3fe198.  return @kind void;
  #L3fe19a.  v6:= new `java.lang.NullPointerException`;
  #L3fe19e.  v0:= "OutputStream for given output Uri is null" @kind object;
  #L3fe1a2.  call `<init>`(v6, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fe1a8.  throw v6;
  #L3fe1aa.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fe1ac.  v0:= v5 @kind object;
  #L3fe1ae.  v5:= v2 @kind object;
  #L3fe1b0.  v2:= v3 @kind object;
  #L3fe1b2.  goto L3fe1c2;
  #L3fe1b4.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fe1b6.  v0:= v5 @kind object;
  #L3fe1b8.  v5:= v2 @kind object;
  #L3fe1ba.  goto L3fe1c2;
  #L3fe1bc.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fe1be.  v5:= v2 @kind object;
  #L3fe1c0.  v0:= v5 @kind object;
  #L3fe1c2.  call `close`(v2) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3fe1c8.  call `close`(v5) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3fe1ce.  if v0 == 0 then goto L3fe1e0;
  #L3fe1d2.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L3fe1d8.  v5:= temp @kind object;
  #L3fe1da.  call `close`(v5) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3fe1e0.  call temp:= `dispatcher`(v1) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L3fe1e6.  v5:= temp @kind object;
  #L3fe1e8.  call `cancelAll`(v5) @signature `Lokhttp3/Dispatcher;.cancelAll:()V` @kind virtual;
  #L3fe1ee.  v5:= v4.`com.yalantis.ucrop.task.BitmapLoadTask.mOutputUri` @type ^`android.net.Uri` @kind object;
  #L3fe1f2.  v4.`com.yalantis.ucrop.task.BitmapLoadTask.mInputUri` @type ^`android.net.Uri` := v5 @kind object;
  #L3fe1f6.  throw v6;
  #L3fe1f8.  v5:= new `java.lang.NullPointerException`;
  #L3fe1fc.  v6:= "Context is null" @kind object;
  #L3fe200.  call `<init>`(v5, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fe206.  throw v5;
  #L3fe208.  v5:= new `java.lang.NullPointerException`;
  #L3fe20c.  v6:= "Output Uri is null - cannot download image" @kind object;
  #L3fe210.  call `<init>`(v5, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fe216.  throw v5;
  catch `java.lang.Throwable` @[L3fe100..L3fe132] goto L3fe1bc;
  catch `java.lang.Throwable` @[L3fe132..L3fe142] goto L3fe1b4;
  catch `java.lang.Throwable` @[L3fe142..L3fe164] goto L3fe1aa;
  catch `java.lang.Throwable` @[L3fe19a..L3fe1aa] goto L3fe1aa;
}
procedure `void` `processInputUri`(`com.yalantis.ucrop.task.BitmapLoadTask` v4 @kind this) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask;.processInputUri:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fe2ac.  v0:= v4.`com.yalantis.ucrop.task.BitmapLoadTask.mInputUri` @type ^`android.net.Uri` @kind object;
  #L3fe2b0.  call temp:= `getScheme`(v0) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L3fe2b6.  v0:= temp @kind object;
  #L3fe2b8.  v1:= new `java.lang.StringBuilder`;
  #L3fe2bc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fe2c2.  v2:= "Uri scheme: " @kind object;
  #L3fe2c6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe2cc.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe2d2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fe2d8.  v1:= temp @kind object;
  #L3fe2da.  v2:= "BitmapWorkerTask" @kind object;
  #L3fe2de.  call temp:= `d`(v2, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3fe2e4.  v1:= "http" @kind object;
  #L3fe2e8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fe2ee.  v1:= temp;
  #L3fe2f0.  if v1 != 0 then goto L3fe37e;
  #L3fe2f4.  v1:= "https" @kind object;
  #L3fe2f8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fe2fe.  v1:= temp;
  #L3fe300.  if v1 == 0 then goto L3fe306;
  #L3fe304.  goto L3fe37e;
  #L3fe306.  v1:= "file" @kind object;
  #L3fe30a.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fe310.  v1:= temp;
  #L3fe312.  if v1 != 0 then goto L3fe38c;
  #L3fe316.  v1:= "content" @kind object;
  #L3fe31a.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fe320.  v1:= temp;
  #L3fe322.  if v1 == 0 then goto L3fe328;
  #L3fe326.  goto L3fe38c;
  #L3fe328.  v1:= new `java.lang.StringBuilder`;
  #L3fe32c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fe332.  v3:= "Invalid Uri scheme " @kind object;
  #L3fe336.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe33c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe342.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fe348.  v1:= temp @kind object;
  #L3fe34a.  call temp:= `e`(v2, v1) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3fe350.  v1:= new `java.lang.IllegalArgumentException`;
  #L3fe354.  v2:= new `java.lang.StringBuilder`;
  #L3fe358.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fe35e.  v3:= "Invalid Uri scheme" @kind object;
  #L3fe362.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe368.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe36e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fe374.  v0:= temp @kind object;
  #L3fe376.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fe37c.  throw v1;
  #L3fe37e.  v0:= v4.`com.yalantis.ucrop.task.BitmapLoadTask.mInputUri` @type ^`android.net.Uri` @kind object;
  #L3fe382.  v1:= v4.`com.yalantis.ucrop.task.BitmapLoadTask.mOutputUri` @type ^`android.net.Uri` @kind object;
  #L3fe386.  call `downloadFile`(v4, v0, v1) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask;.downloadFile:(Landroid/net/Uri;Landroid/net/Uri;)V` @kind direct;
  #L3fe38c.  return @kind void;
  #L3fe38e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3fe390.  goto L3fe394;
  #L3fe392.  v0:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L3fe394.  v1:= "Downloading failed" @kind object;
  #L3fe398.  call temp:= `e`(v2, v1, v0) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3fe39e.  throw v0;
  catch `java.lang.NullPointerException` @[L3fe37e..L3fe38c] goto L3fe392;
  catch `java.io.IOException` @[L3fe37e..L3fe38c] goto L3fe38e;
}
procedure `com.yalantis.ucrop.task.BitmapLoadTask$BitmapWorkerResult` `doInBackground`(`com.yalantis.ucrop.task.BitmapLoadTask` v13 @kind this, `java.lang.Void`[] v14 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask;.doInBackground:([Ljava/lang/Void;)Lcom/yalantis/ucrop/task/BitmapLoadTask$BitmapWorkerResult;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3fddb8.  v14:= "BitmapWorkerTask" @kind object;
  #L3fddbc.  v0:= v13.`com.yalantis.ucrop.task.BitmapLoadTask.mContext` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3fddc0.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3fddc6.  v0:= temp @kind object;
  #L3fddc8.  v0:= (`android.content.Context`) v0 @kind object;
  #L3fddcc.  if v0 != 0 then goto L3fddea;
  #L3fddd0.  v14:= new `com.yalantis.ucrop.task.BitmapLoadTask$BitmapWorkerResult`;
  #L3fddd4.  v0:= new `java.lang.NullPointerException`;
  #L3fddd8.  v1:= "context is null" @kind object;
  #L3fdddc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fdde2.  call `<init>`(v14, v0) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask$BitmapWorkerResult;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L3fdde8.  return v14 @kind object;
  #L3fddea.  v1:= v13.`com.yalantis.ucrop.task.BitmapLoadTask.mInputUri` @type ^`android.net.Uri` @kind object;
  #L3fddee.  if v1 != 0 then goto L3fde0c;
  #L3fddf2.  v14:= new `com.yalantis.ucrop.task.BitmapLoadTask$BitmapWorkerResult`;
  #L3fddf6.  v0:= new `java.lang.NullPointerException`;
  #L3fddfa.  v1:= "Input Uri cannot be null" @kind object;
  #L3fddfe.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fde04.  call `<init>`(v14, v0) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask$BitmapWorkerResult;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L3fde0a.  return v14 @kind object;
  #L3fde0c.  call `processInputUri`(v13) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask;.processInputUri:()V` @kind direct;
  #L3fde12.  v1:= new `android.graphics.BitmapFactory$Options`;
  #L3fde16.  call `<init>`(v1) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L3fde1c.  v2:= 1I;
  #L3fde1e.  v1.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v2 @kind boolean;
  #L3fde22.  v3:= v13.`com.yalantis.ucrop.task.BitmapLoadTask.mRequiredWidth` @type ^`int`;
  #L3fde26.  v4:= v13.`com.yalantis.ucrop.task.BitmapLoadTask.mRequiredHeight` @type ^`int`;
  #L3fde2a.  call temp:= `calculateInSampleSize`(v1, v3, v4) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.calculateInSampleSize:(Landroid/graphics/BitmapFactory$Options;II)I` @kind static;
  #L3fde30.  v3:= temp;
  #L3fde32.  v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v3;
  #L3fde36.  v3:= 0I;
  #L3fde38.  v1.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v3 @kind boolean;
  #L3fde3c.  v4:= 0I;
  #L3fde3e.  v5:= v4 @kind object;
  #L3fde40.  v6:= "Bitmap could not be decoded from the Uri: [" @kind object;
  #L3fde44.  v7:= "]" @kind object;
  #L3fde48.  if v3 != 0 then goto L3fdf4c;
  #L3fde4c.  call temp:= `getContentResolver`(v0) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L3fde52.  v8:= temp @kind object;
  #L3fde54.  v9:= v13.`com.yalantis.ucrop.task.BitmapLoadTask.mInputUri` @type ^`android.net.Uri` @kind object;
  #L3fde58.  call temp:= `openInputStream`(v8, v9) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L3fde5e.  v8:= temp @kind object;
  #L3fde60.  call temp:= `decodeStream`(v8, v4, v1) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L3fde66.  v5:= temp @kind object;
  #L3fde68.  v9:= v1.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L3fde6c.  v10:= -1I;
  #L3fde6e.  if v9 == v10 then goto L3fde94;
  #L3fde72.  v9:= v1.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L3fde76.  if v9 != v10 then goto L3fde7c;
  #L3fde7a.  goto L3fde94;
  #L3fde7c.  call `close`(v8) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3fde82.  call temp:= `checkSize`(v13, v5, v1) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask;.checkSize:(Landroid/graphics/Bitmap;Landroid/graphics/BitmapFactory$Options;)Z` @kind direct;
  #L3fde88.  v6:= temp;
  #L3fde8a.  if v6 == 0 then goto L3fde90;
  #L3fde8e.  goto L3fde40;
  #L3fde90.  v3:= 1I;
  #L3fde92.  goto L3fde40;
  #L3fde94.  v9:= new `com.yalantis.ucrop.task.BitmapLoadTask$BitmapWorkerResult`;
  #L3fde98.  v10:= new `java.lang.IllegalArgumentException`;
  #L3fde9c.  v11:= new `java.lang.StringBuilder`;
  #L3fdea0.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fdea6.  v12:= "Bounds for bitmap could not be retrieved from the Uri: [" @kind object;
  #L3fdeaa.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdeb0.  v12:= v13.`com.yalantis.ucrop.task.BitmapLoadTask.mInputUri` @type ^`android.net.Uri` @kind object;
  #L3fdeb4.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdeba.  call temp:= `append`(v11, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdec0.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fdec6.  v11:= temp @kind object;
  #L3fdec8.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fdece.  call `<init>`(v9, v10) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask$BitmapWorkerResult;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L3fded4.  call `close`(v8) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3fdeda.  return v9 @kind object;
  #L3fdedc.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fdede.  call `close`(v8) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3fdee4.  throw v9;
  #L3fdee6.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3fdee8.  v1:= "doInBackground: ImageDecoder.createSource: " @kind object;
  #L3fdeec.  call temp:= `e`(v14, v1, v0) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3fdef2.  v14:= new `com.yalantis.ucrop.task.BitmapLoadTask$BitmapWorkerResult`;
  #L3fdef6.  v1:= new `java.lang.IllegalArgumentException`;
  #L3fdefa.  v2:= new `java.lang.StringBuilder`;
  #L3fdefe.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fdf04.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdf0a.  v3:= v13.`com.yalantis.ucrop.task.BitmapLoadTask.mInputUri` @type ^`android.net.Uri` @kind object;
  #L3fdf0e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdf14.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdf1a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fdf20.  v2:= temp @kind object;
  #L3fdf22.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3fdf28.  call `<init>`(v14, v1) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask$BitmapWorkerResult;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L3fdf2e.  return v14 @kind object;
  #L3fdf30.  v6:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L3fdf32.  v7:= "doInBackground: BitmapFactory.decodeFileDescriptor: " @kind object;
  #L3fdf36.  call temp:= `e`(v14, v7, v6) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3fdf3c.  v6:= v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L3fdf40.  v6:= v6 * 2;
  #L3fdf44.  v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v6;
  #L3fdf48.  goto L3fde40;
  #L3fdf4c.  if v5 != 0 then goto L3fdf8e;
  #L3fdf50.  v14:= new `com.yalantis.ucrop.task.BitmapLoadTask$BitmapWorkerResult`;
  #L3fdf54.  v0:= new `java.lang.IllegalArgumentException`;
  #L3fdf58.  v1:= new `java.lang.StringBuilder`;
  #L3fdf5c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fdf62.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdf68.  v2:= v13.`com.yalantis.ucrop.task.BitmapLoadTask.mInputUri` @type ^`android.net.Uri` @kind object;
  #L3fdf6c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdf72.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdf78.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fdf7e.  v1:= temp @kind object;
  #L3fdf80.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fdf86.  call `<init>`(v14, v0) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask$BitmapWorkerResult;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L3fdf8c.  return v14 @kind object;
  #L3fdf8e.  v14:= v13.`com.yalantis.ucrop.task.BitmapLoadTask.mInputUri` @type ^`android.net.Uri` @kind object;
  #L3fdf92.  call temp:= `getExifOrientation`(v0, v14) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.getExifOrientation:(Landroid/content/Context;Landroid/net/Uri;)I` @kind static;
  #L3fdf98.  v14:= temp;
  #L3fdf9a.  call temp:= `exifToDegrees`(v14) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.exifToDegrees:(I)I` @kind static;
  #L3fdfa0.  v0:= temp;
  #L3fdfa2.  call temp:= `exifToTranslation`(v14) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.exifToTranslation:(I)I` @kind static;
  #L3fdfa8.  v1:= temp;
  #L3fdfaa.  v3:= new `com.yalantis.ucrop.model.ExifInfo`;
  #L3fdfae.  call `<init>`(v3, v14, v0, v1) @signature `Lcom/yalantis/ucrop/model/ExifInfo;.<init>:(III)V` @kind direct;
  #L3fdfb4.  v14:= new `android.graphics.Matrix`;
  #L3fdfb8.  call `<init>`(v14) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3fdfbe.  if v0 == 0 then goto L3fdfca;
  #L3fdfc2.  v0:= (`float`) v0 @kind i2f;
  #L3fdfc4.  call temp:= `preRotate`(v14, v0) @signature `Landroid/graphics/Matrix;.preRotate:(F)Z` @kind virtual;
  #L3fdfca.  if v1 == v2 then goto L3fdfda;
  #L3fdfce.  v0:= (`float`) v1 @kind i2f;
  #L3fdfd0.  v1:= 1.0F;
  #L3fdfd4.  call temp:= `postScale`(v14, v0, v1) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L3fdfda.  call temp:= `isIdentity`(v14) @signature `Landroid/graphics/Matrix;.isIdentity:()Z` @kind virtual;
  #L3fdfe0.  v0:= temp;
  #L3fdfe2.  if v0 != 0 then goto L3fdffa;
  #L3fdfe6.  v0:= new `com.yalantis.ucrop.task.BitmapLoadTask$BitmapWorkerResult`;
  #L3fdfea.  call temp:= `transformBitmap`(v5, v14) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.transformBitmap:(Landroid/graphics/Bitmap;Landroid/graphics/Matrix;)Landroid/graphics/Bitmap;` @kind static;
  #L3fdff0.  v14:= temp @kind object;
  #L3fdff2.  call `<init>`(v0, v14, v3) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask$BitmapWorkerResult;.<init>:(Landroid/graphics/Bitmap;Lcom/yalantis/ucrop/model/ExifInfo;)V` @kind direct;
  #L3fdff8.  return v0 @kind object;
  #L3fdffa.  v14:= new `com.yalantis.ucrop.task.BitmapLoadTask$BitmapWorkerResult`;
  #L3fdffe.  call `<init>`(v14, v5, v3) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask$BitmapWorkerResult;.<init>:(Landroid/graphics/Bitmap;Lcom/yalantis/ucrop/model/ExifInfo;)V` @kind direct;
  #L3fe004.  return v14 @kind object;
  #L3fe006.  v14:= Exception @type ^`java.io.IOException` @kind object;
  #L3fe008.  goto L3fe00c;
  #L3fe00a.  v14:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L3fe00c.  v0:= new `com.yalantis.ucrop.task.BitmapLoadTask$BitmapWorkerResult`;
  #L3fe010.  call `<init>`(v0, v14) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask$BitmapWorkerResult;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L3fe016.  return v0 @kind object;
  catch `java.lang.NullPointerException` @[L3fde0c..L3fde12] goto L3fe00a;
  catch `java.io.IOException` @[L3fde0c..L3fde12] goto L3fe006;
  catch `java.lang.OutOfMemoryError` @[L3fde4c..L3fde60] goto L3fdf30;
  catch `java.io.IOException` @[L3fde4c..L3fde60] goto L3fdee6;
  catch `java.lang.Throwable` @[L3fde60..L3fde76] goto L3fdedc;
  catch `java.lang.OutOfMemoryError` @[L3fde7c..L3fde8a] goto L3fdf30;
  catch `java.io.IOException` @[L3fde7c..L3fde8a] goto L3fdee6;
  catch `java.lang.Throwable` @[L3fde94..L3fded4] goto L3fdedc;
  catch `java.lang.OutOfMemoryError` @[L3fded4..L3fdee6] goto L3fdf30;
  catch `java.io.IOException` @[L3fded4..L3fdee6] goto L3fdee6;
}
procedure `java.lang.Object` `doInBackground`(`com.yalantis.ucrop.task.BitmapLoadTask` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask;.doInBackground:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L3fe070.  v1:= (`java.lang.Void`[]) v1 @kind object;
  #L3fe074.  call temp:= `doInBackground`(v0, v1) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask;.doInBackground:([Ljava/lang/Void;)Lcom/yalantis/ucrop/task/BitmapLoadTask$BitmapWorkerResult;` @kind virtual;
  #L3fe07a.  v1:= temp @kind object;
  #L3fe07c.  return v1 @kind object;
}
procedure `void` `onPostExecute`(`com.yalantis.ucrop.task.BitmapLoadTask` v4 @kind this, `com.yalantis.ucrop.task.BitmapLoadTask$BitmapWorkerResult` v5 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask;.onPostExecute:(Lcom/yalantis/ucrop/task/BitmapLoadTask$BitmapWorkerResult;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fe250.  v0:= v5.`com.yalantis.ucrop.task.BitmapLoadTask$BitmapWorkerResult.mBitmapWorkerException` @type ^`java.lang.Exception` @kind object;
  #L3fe254.  if v0 != 0 then goto L3fe274;
  #L3fe258.  v0:= v4.`com.yalantis.ucrop.task.BitmapLoadTask.mBitmapLoadCallback` @type ^`com.yalantis.ucrop.callback.BitmapLoadCallback` @kind object;
  #L3fe25c.  v1:= v5.`com.yalantis.ucrop.task.BitmapLoadTask$BitmapWorkerResult.mBitmapResult` @type ^`android.graphics.Bitmap` @kind object;
  #L3fe260.  v5:= v5.`com.yalantis.ucrop.task.BitmapLoadTask$BitmapWorkerResult.mExifInfo` @type ^`com.yalantis.ucrop.model.ExifInfo` @kind object;
  #L3fe264.  v2:= v4.`com.yalantis.ucrop.task.BitmapLoadTask.mInputUri` @type ^`android.net.Uri` @kind object;
  #L3fe268.  v3:= v4.`com.yalantis.ucrop.task.BitmapLoadTask.mOutputUri` @type ^`android.net.Uri` @kind object;
  #L3fe26c.  call `onBitmapLoaded`(v0, v1, v5, v2, v3) @signature `Lcom/yalantis/ucrop/callback/BitmapLoadCallback;.onBitmapLoaded:(Landroid/graphics/Bitmap;Lcom/yalantis/ucrop/model/ExifInfo;Landroid/net/Uri;Landroid/net/Uri;)V` @kind interface;
  #L3fe272.  goto L3fe27e;
  #L3fe274.  v5:= v4.`com.yalantis.ucrop.task.BitmapLoadTask.mBitmapLoadCallback` @type ^`com.yalantis.ucrop.callback.BitmapLoadCallback` @kind object;
  #L3fe278.  call `onFailure`(v5, v0) @signature `Lcom/yalantis/ucrop/callback/BitmapLoadCallback;.onFailure:(Ljava/lang/Exception;)V` @kind interface;
  #L3fe27e.  return @kind void;
}
procedure `void` `onPostExecute`(`com.yalantis.ucrop.task.BitmapLoadTask` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask;.onPostExecute:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L3fe290.  v1:= (`com.yalantis.ucrop.task.BitmapLoadTask$BitmapWorkerResult`) v1 @kind object;
  #L3fe294.  call `onPostExecute`(v0, v1) @signature `Lcom/yalantis/ucrop/task/BitmapLoadTask;.onPostExecute:(Lcom/yalantis/ucrop/task/BitmapLoadTask$BitmapWorkerResult;)V` @kind virtual;
  #L3fe29a.  return @kind void;
}
