record `com.yalantis.ucrop.task.BitmapCropTask` @kind class @AccessFlag PUBLIC extends `android.os.AsyncTask` @kind class {
  `int` `com.yalantis.ucrop.task.BitmapCropTask.cropOffsetX` @AccessFlag PRIVATE;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.cropOffsetY` @AccessFlag PRIVATE;
  `android.graphics.Bitmap$CompressFormat` `com.yalantis.ucrop.task.BitmapCropTask.mCompressFormat` @AccessFlag PRIVATE_FINAL;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.mCompressQuality` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.WeakReference` `com.yalantis.ucrop.task.BitmapCropTask.mContext` @AccessFlag PRIVATE_FINAL;
  `com.yalantis.ucrop.callback.BitmapCropCallback` `com.yalantis.ucrop.task.BitmapCropTask.mCropCallback` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @AccessFlag PRIVATE_FINAL;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageHeight` @AccessFlag PRIVATE;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @AccessFlag PRIVATE;
  `float` `com.yalantis.ucrop.task.BitmapCropTask.mCurrentAngle` @AccessFlag PRIVATE;
  `android.graphics.RectF` `com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @AccessFlag PRIVATE_FINAL;
  `float` `com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @AccessFlag PRIVATE;
  `com.yalantis.ucrop.model.ExifInfo` `com.yalantis.ucrop.task.BitmapCropTask.mExifInfo` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.yalantis.ucrop.task.BitmapCropTask.mImageInputPath` @AccessFlag PRIVATE_FINAL;
  `android.net.Uri` `com.yalantis.ucrop.task.BitmapCropTask.mImageInputUri` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.yalantis.ucrop.task.BitmapCropTask.mImageOutputPath` @AccessFlag PRIVATE_FINAL;
  `android.net.Uri` `com.yalantis.ucrop.task.BitmapCropTask.mImageOutputUri` @AccessFlag PRIVATE_FINAL;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeX` @AccessFlag PRIVATE_FINAL;
  `int` `com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeY` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Bitmap` `com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.yalantis.ucrop.task.BitmapCropTask.CONTENT_SCHEME` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.yalantis.ucrop.task.BitmapCropTask.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.yalantis.ucrop.task.BitmapCropTask` v1 @kind this, `android.content.Context` v2 @kind object, `android.graphics.Bitmap` v3 @kind object, `com.yalantis.ucrop.model.ImageState` v4 @kind object, `com.yalantis.ucrop.model.CropParameters` v5 @kind object, `com.yalantis.ucrop.callback.BitmapCropCallback` v6 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.<init>:(Landroid/content/Context;Landroid/graphics/Bitmap;Lcom/yalantis/ucrop/model/ImageState;Lcom/yalantis/ucrop/model/CropParameters;Lcom/yalantis/ucrop/callback/BitmapCropCallback;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3fda18.  call `<init>`(v1) @signature `Landroid/os/AsyncTask;.<init>:()V` @kind direct;
  #L3fda1e.  v0:= new `java.lang.ref.WeakReference`;
  #L3fda22.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3fda28.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mContext` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L3fda2c.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` := v3 @kind object;
  #L3fda30.  call temp:= `getCropRect`(v4) @signature `Lcom/yalantis/ucrop/model/ImageState;.getCropRect:()Landroid/graphics/RectF;` @kind virtual;
  #L3fda36.  v2:= temp @kind object;
  #L3fda38.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` := v2 @kind object;
  #L3fda3c.  call temp:= `getCurrentImageRect`(v4) @signature `Lcom/yalantis/ucrop/model/ImageState;.getCurrentImageRect:()Landroid/graphics/RectF;` @kind virtual;
  #L3fda42.  v2:= temp @kind object;
  #L3fda44.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` := v2 @kind object;
  #L3fda48.  call temp:= `getCurrentScale`(v4) @signature `Lcom/yalantis/ucrop/model/ImageState;.getCurrentScale:()F` @kind virtual;
  #L3fda4e.  v2:= temp;
  #L3fda50.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float` := v2;
  #L3fda54.  call temp:= `getCurrentAngle`(v4) @signature `Lcom/yalantis/ucrop/model/ImageState;.getCurrentAngle:()F` @kind virtual;
  #L3fda5a.  v2:= temp;
  #L3fda5c.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentAngle` @type ^`float` := v2;
  #L3fda60.  call temp:= `getMaxResultImageSizeX`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getMaxResultImageSizeX:()I` @kind virtual;
  #L3fda66.  v2:= temp;
  #L3fda68.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeX` @type ^`int` := v2;
  #L3fda6c.  call temp:= `getMaxResultImageSizeY`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getMaxResultImageSizeY:()I` @kind virtual;
  #L3fda72.  v2:= temp;
  #L3fda74.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeY` @type ^`int` := v2;
  #L3fda78.  call temp:= `getCompressFormat`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getCompressFormat:()Landroid/graphics/Bitmap$CompressFormat;` @kind virtual;
  #L3fda7e.  v2:= temp @kind object;
  #L3fda80.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mCompressFormat` @type ^`android.graphics.Bitmap$CompressFormat` := v2 @kind object;
  #L3fda84.  call temp:= `getCompressQuality`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getCompressQuality:()I` @kind virtual;
  #L3fda8a.  v2:= temp;
  #L3fda8c.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mCompressQuality` @type ^`int` := v2;
  #L3fda90.  call temp:= `getImageInputPath`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getImageInputPath:()Ljava/lang/String;` @kind virtual;
  #L3fda96.  v2:= temp @kind object;
  #L3fda98.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mImageInputPath` @type ^`java.lang.String` := v2 @kind object;
  #L3fda9c.  call temp:= `getImageOutputPath`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getImageOutputPath:()Ljava/lang/String;` @kind virtual;
  #L3fdaa2.  v2:= temp @kind object;
  #L3fdaa4.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputPath` @type ^`java.lang.String` := v2 @kind object;
  #L3fdaa8.  call temp:= `getContentImageInputUri`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getContentImageInputUri:()Landroid/net/Uri;` @kind virtual;
  #L3fdaae.  v2:= temp @kind object;
  #L3fdab0.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mImageInputUri` @type ^`android.net.Uri` := v2 @kind object;
  #L3fdab4.  call temp:= `getContentImageOutputUri`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getContentImageOutputUri:()Landroid/net/Uri;` @kind virtual;
  #L3fdaba.  v2:= temp @kind object;
  #L3fdabc.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputUri` @type ^`android.net.Uri` := v2 @kind object;
  #L3fdac0.  call temp:= `getExifInfo`(v5) @signature `Lcom/yalantis/ucrop/model/CropParameters;.getExifInfo:()Lcom/yalantis/ucrop/model/ExifInfo;` @kind virtual;
  #L3fdac6.  v2:= temp @kind object;
  #L3fdac8.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mExifInfo` @type ^`com.yalantis.ucrop.model.ExifInfo` := v2 @kind object;
  #L3fdacc.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mCropCallback` @type ^`com.yalantis.ucrop.callback.BitmapCropCallback` := v6 @kind object;
  #L3fdad0.  return @kind void;
}
procedure `void` `copyExifForOutputFile`(`com.yalantis.ucrop.task.BitmapCropTask` v5 @kind this, `android.content.Context` v6 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.copyExifForOutputFile:(Landroid/content/Context;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fdae4.  v0:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mImageInputUri` @type ^`android.net.Uri` @kind object;
  #L3fdae8.  call temp:= `hasContentScheme`(v0) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.hasContentScheme:(Landroid/net/Uri;)Z` @kind static;
  #L3fdaee.  v0:= temp;
  #L3fdaf0.  v1:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputUri` @type ^`android.net.Uri` @kind object;
  #L3fdaf4.  call temp:= `hasContentScheme`(v1) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.hasContentScheme:(Landroid/net/Uri;)Z` @kind static;
  #L3fdafa.  v1:= temp;
  #L3fdafc.  v2:= "It is not possible to write exif info into file represented by \"content\" Uri if Android < LOLLIPOP" @kind object;
  #L3fdb00.  v3:= "BitmapCropTask" @kind object;
  #L3fdb04.  v4:= 21I;
  #L3fdb08.  if v0 == 0 then goto L3fdb38;
  #L3fdb0c.  if v1 == 0 then goto L3fdb38;
  #L3fdb10.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3fdb14.  if v0 < v4 then goto L3fdb30;
  #L3fdb18.  v0:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @type ^`int`;
  #L3fdb1c.  v1:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageHeight` @type ^`int`;
  #L3fdb20.  v2:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mImageInputUri` @type ^`android.net.Uri` @kind object;
  #L3fdb24.  v3:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputUri` @type ^`android.net.Uri` @kind object;
  #L3fdb28.  call `copyExif`(v6, v0, v1, v2, v3) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.copyExif:(Landroid/content/Context;IILandroid/net/Uri;Landroid/net/Uri;)V` @kind static;
  #L3fdb2e.  goto L3fdbaa;
  #L3fdb30.  call temp:= `e`(v3, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3fdb36.  goto L3fdbaa;
  #L3fdb38.  if v0 == 0 then goto L3fdb54;
  #L3fdb3c.  v0:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @type ^`int`;
  #L3fdb40.  v1:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageHeight` @type ^`int`;
  #L3fdb44.  v2:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mImageInputUri` @type ^`android.net.Uri` @kind object;
  #L3fdb48.  v3:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputPath` @type ^`java.lang.String` @kind object;
  #L3fdb4c.  call `copyExif`(v6, v0, v1, v2, v3) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.copyExif:(Landroid/content/Context;IILandroid/net/Uri;Ljava/lang/String;)V` @kind static;
  #L3fdb52.  goto L3fdbaa;
  #L3fdb54.  if v1 == 0 then goto L3fdb8a;
  #L3fdb58.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3fdb5c.  if v0 < v4 then goto L3fdb82;
  #L3fdb60.  v0:= new `androidx.exifinterface.media.ExifInterface`;
  #L3fdb64.  v1:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mImageInputPath` @type ^`java.lang.String` @kind object;
  #L3fdb68.  call `<init>`(v0, v1) @signature `Landroidx/exifinterface/media/ExifInterface;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fdb6e.  v1:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @type ^`int`;
  #L3fdb72.  v2:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageHeight` @type ^`int`;
  #L3fdb76.  v3:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputUri` @type ^`android.net.Uri` @kind object;
  #L3fdb7a.  call `copyExif`(v6, v0, v1, v2, v3) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.copyExif:(Landroid/content/Context;Landroidx/exifinterface/media/ExifInterface;IILandroid/net/Uri;)V` @kind static;
  #L3fdb80.  goto L3fdbaa;
  #L3fdb82.  call temp:= `e`(v3, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3fdb88.  goto L3fdbaa;
  #L3fdb8a.  v6:= new `androidx.exifinterface.media.ExifInterface`;
  #L3fdb8e.  v0:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mImageInputPath` @type ^`java.lang.String` @kind object;
  #L3fdb92.  call `<init>`(v6, v0) @signature `Landroidx/exifinterface/media/ExifInterface;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fdb98.  v0:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @type ^`int`;
  #L3fdb9c.  v1:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageHeight` @type ^`int`;
  #L3fdba0.  v2:= v5.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputPath` @type ^`java.lang.String` @kind object;
  #L3fdba4.  call `copyExif`(v6, v0, v1, v2) @signature `Lcom/yalantis/ucrop/util/ImageHeaderParser;.copyExif:(Landroidx/exifinterface/media/ExifInterface;IILjava/lang/String;)V` @kind static;
  #L3fdbaa.  return @kind void;
}
procedure `boolean` `crop`(`com.yalantis.ucrop.task.BitmapCropTask` v10 @kind this) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.crop:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3fd608.  v0:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mContext` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3fd60c.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3fd612.  v0:= temp @kind object;
  #L3fd614.  v0:= (`android.content.Context`) v0 @kind object;
  #L3fd618.  v1:= 0I;
  #L3fd61a.  if v0 != 0 then goto L3fd620;
  #L3fd61e.  return v1;
  #L3fd620.  v2:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeX` @type ^`int`;
  #L3fd624.  if v2 <= 0 then goto L3fd6e0;
  #L3fd628.  v2:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeY` @type ^`int`;
  #L3fd62c.  if v2 <= 0 then goto L3fd6e0;
  #L3fd630.  v2:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd634.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3fd63a.  v2:= temp;
  #L3fd63c.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float`;
  #L3fd640.  v2:= v2 / v3 @kind float;
  #L3fd642.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd646.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3fd64c.  v3:= temp;
  #L3fd64e.  v4:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float`;
  #L3fd652.  v3:= v3 / v4 @kind float;
  #L3fd654.  v4:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeX` @type ^`int`;
  #L3fd658.  v4:= (`float`) v4 @kind i2f;
  #L3fd65a.  v4:= fcmpl(v2, v4);
  #L3fd65e.  if v4 > 0 then goto L3fd670;
  #L3fd662.  v4:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeY` @type ^`int`;
  #L3fd666.  v4:= (`float`) v4 @kind i2f;
  #L3fd668.  v4:= fcmpl(v3, v4);
  #L3fd66c.  if v4 <= 0 then goto L3fd6e0;
  #L3fd670.  v4:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeX` @type ^`int`;
  #L3fd674.  v4:= (`float`) v4 @kind i2f;
  #L3fd676.  v4:= v4 / v2 @kind float;
  #L3fd678.  v2:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeY` @type ^`int`;
  #L3fd67c.  v2:= (`float`) v2 @kind i2f;
  #L3fd67e.  v2:= v2 / v3 @kind float;
  #L3fd680.  call temp:= `min`(v4, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3fd686.  v2:= temp;
  #L3fd688.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L3fd68c.  call temp:= `getWidth`(v3) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3fd692.  v4:= temp;
  #L3fd694.  v4:= (`float`) v4 @kind i2f;
  #L3fd696.  v4:= v4 * v2 @kind float;
  #L3fd69a.  call temp:= `round`(v4) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3fd6a0.  v4:= temp;
  #L3fd6a2.  v5:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L3fd6a6.  call temp:= `getHeight`(v5) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3fd6ac.  v5:= temp;
  #L3fd6ae.  v5:= (`float`) v5 @kind i2f;
  #L3fd6b0.  v5:= v5 * v2 @kind float;
  #L3fd6b4.  call temp:= `round`(v5) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3fd6ba.  v5:= temp;
  #L3fd6bc.  call temp:= `createScaledBitmap`(v3, v4, v5, v1) @signature `Landroid/graphics/Bitmap;.createScaledBitmap:(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;` @kind static;
  #L3fd6c2.  v3:= temp @kind object;
  #L3fd6c4.  v4:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L3fd6c8.  if v4 == v3 then goto L3fd6d2;
  #L3fd6cc.  call `recycle`(v4) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L3fd6d2.  v10.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` := v3 @kind object;
  #L3fd6d6.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float`;
  #L3fd6da.  v3:= v3 / v2 @kind float;
  #L3fd6dc.  v10.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float` := v3;
  #L3fd6e0.  v2:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentAngle` @type ^`float`;
  #L3fd6e4.  v3:= 0I;
  #L3fd6e6.  v2:= fcmpl(v2, v3);
  #L3fd6ea.  if v2 == 0 then goto L3fd75e;
  #L3fd6ee.  v8:= new `android.graphics.Matrix`;
  #L3fd6f2.  call `<init>`(v8) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3fd6f8.  v2:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentAngle` @type ^`float`;
  #L3fd6fc.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L3fd700.  call temp:= `getWidth`(v3) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3fd706.  v3:= temp;
  #L3fd708.  v3:= v3 / 2;
  #L3fd70c.  v3:= (`float`) v3 @kind i2f;
  #L3fd70e.  v4:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L3fd712.  call temp:= `getHeight`(v4) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3fd718.  v4:= temp;
  #L3fd71a.  v4:= v4 / 2;
  #L3fd71e.  v4:= (`float`) v4 @kind i2f;
  #L3fd720.  call `setRotate`(v8, v2, v3, v4) @signature `Landroid/graphics/Matrix;.setRotate:(FFF)V` @kind virtual;
  #L3fd726.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L3fd72a.  v4:= 0I;
  #L3fd72c.  v5:= 0I;
  #L3fd72e.  call temp:= `getWidth`(v3) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3fd734.  v6:= temp;
  #L3fd736.  v2:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L3fd73a.  call temp:= `getHeight`(v2) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3fd740.  v7:= temp;
  #L3fd742.  v9:= 1I;
  #L3fd744.  call temp:= `createBitmap`(v3, v4, v5, v6, v7, v8, v9) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L3fd74a.  v2:= temp @kind object;
  #L3fd74c.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L3fd750.  if v3 == v2 then goto L3fd75a;
  #L3fd754.  call `recycle`(v3) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L3fd75a.  v10.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L3fd75e.  v2:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd762.  v2:= v2.`android.graphics.RectF.left` @type ^`float`;
  #L3fd766.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd76a.  v3:= v3.`android.graphics.RectF.left` @type ^`float`;
  #L3fd76e.  v2:= v2 - v3 @kind float;
  #L3fd770.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float`;
  #L3fd774.  v2:= v2 / v3 @kind float;
  #L3fd776.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3fd77c.  v2:= temp;
  #L3fd77e.  v10.`com.yalantis.ucrop.task.BitmapCropTask.cropOffsetX` @type ^`int` := v2;
  #L3fd782.  v2:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd786.  v2:= v2.`android.graphics.RectF.top` @type ^`float`;
  #L3fd78a.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd78e.  v3:= v3.`android.graphics.RectF.top` @type ^`float`;
  #L3fd792.  v2:= v2 - v3 @kind float;
  #L3fd794.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float`;
  #L3fd798.  v2:= v2 / v3 @kind float;
  #L3fd79a.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3fd7a0.  v2:= temp;
  #L3fd7a2.  v10.`com.yalantis.ucrop.task.BitmapCropTask.cropOffsetY` @type ^`int` := v2;
  #L3fd7a6.  v2:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd7aa.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3fd7b0.  v2:= temp;
  #L3fd7b2.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float`;
  #L3fd7b6.  v2:= v2 / v3 @kind float;
  #L3fd7b8.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3fd7be.  v2:= temp;
  #L3fd7c0.  v10.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @type ^`int` := v2;
  #L3fd7c4.  v2:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd7c8.  call temp:= `height`(v2) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3fd7ce.  v2:= temp;
  #L3fd7d0.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentScale` @type ^`float`;
  #L3fd7d4.  v2:= v2 / v3 @kind float;
  #L3fd7d6.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3fd7dc.  v2:= temp;
  #L3fd7de.  v10.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageHeight` @type ^`int` := v2;
  #L3fd7e2.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @type ^`int`;
  #L3fd7e6.  call temp:= `shouldCrop`(v10, v3, v2) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.shouldCrop:(II)Z` @kind direct;
  #L3fd7ec.  v2:= temp;
  #L3fd7ee.  v3:= new `java.lang.StringBuilder`;
  #L3fd7f2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fd7f8.  v4:= "Should crop: " @kind object;
  #L3fd7fc.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fd802.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fd808.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fd80e.  v3:= temp @kind object;
  #L3fd810.  v4:= "BitmapCropTask" @kind object;
  #L3fd814.  call temp:= `i`(v4, v3) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3fd81a.  if v2 == 0 then goto L3fd85e;
  #L3fd81e.  v1:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L3fd822.  v2:= v10.`com.yalantis.ucrop.task.BitmapCropTask.cropOffsetX` @type ^`int`;
  #L3fd826.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.cropOffsetY` @type ^`int`;
  #L3fd82a.  v4:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @type ^`int`;
  #L3fd82e.  v5:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageHeight` @type ^`int`;
  #L3fd832.  call temp:= `createBitmap`(v1, v2, v3, v4, v5) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;` @kind static;
  #L3fd838.  v1:= temp @kind object;
  #L3fd83a.  call `saveImage`(v10, v1) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.saveImage:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L3fd840.  v1:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mCompressFormat` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L3fd844.  v2:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L3fd848.  call temp:= `equals`(v1, v2) @signature `Landroid/graphics/Bitmap$CompressFormat;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fd84e.  v1:= temp;
  #L3fd850.  if v1 == 0 then goto L3fd85a;
  #L3fd854.  call `copyExifForOutputFile`(v10, v0) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.copyExifForOutputFile:(Landroid/content/Context;)V` @kind direct;
  #L3fd85a.  v0:= 1I;
  #L3fd85c.  return v0;
  #L3fd85e.  v2:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mImageInputUri` @type ^`android.net.Uri` @kind object;
  #L3fd862.  v3:= v10.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputUri` @type ^`android.net.Uri` @kind object;
  #L3fd866.  call `copyFile`(v0, v2, v3) @signature `Lcom/yalantis/ucrop/util/FileUtils;.copyFile:(Landroid/content/Context;Landroid/net/Uri;Landroid/net/Uri;)V` @kind static;
  #L3fd86c.  return v1;
}
procedure `void` `saveImage`(`com.yalantis.ucrop.task.BitmapCropTask` v4 @kind this, `android.graphics.Bitmap` v5 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.saveImage:(Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fdc48.  v0:= v4.`com.yalantis.ucrop.task.BitmapCropTask.mContext` @type ^`java.lang.ref.WeakReference` @kind object;
  #L3fdc4c.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3fdc52.  v0:= temp @kind object;
  #L3fdc54.  v0:= (`android.content.Context`) v0 @kind object;
  #L3fdc58.  if v0 != 0 then goto L3fdc5e;
  #L3fdc5c.  return @kind void;
  #L3fdc5e.  v1:= 0I;
  #L3fdc60.  call temp:= `getContentResolver`(v0) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L3fdc66.  v0:= temp @kind object;
  #L3fdc68.  v2:= v4.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputUri` @type ^`android.net.Uri` @kind object;
  #L3fdc6c.  call temp:= `openOutputStream`(v0, v2) @signature `Landroid/content/ContentResolver;.openOutputStream:(Landroid/net/Uri;)Ljava/io/OutputStream;` @kind virtual;
  #L3fdc72.  v0:= temp @kind object;
  #L3fdc74.  v2:= new `java.io.ByteArrayOutputStream`;
  #L3fdc78.  call `<init>`(v2) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L3fdc7e.  v1:= v4.`com.yalantis.ucrop.task.BitmapCropTask.mCompressFormat` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L3fdc82.  v3:= v4.`com.yalantis.ucrop.task.BitmapCropTask.mCompressQuality` @type ^`int`;
  #L3fdc86.  call temp:= `compress`(v5, v1, v3, v2) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L3fdc8c.  call temp:= `toByteArray`(v2) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L3fdc92.  v1:= temp @kind object;
  #L3fdc94.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L3fdc9a.  call `recycle`(v5) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L3fdca0.  call `close`(v0) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3fdca6.  goto L3fdce2;
  #L3fdca8.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fdcaa.  goto L3fdcb4;
  #L3fdcac.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L3fdcae.  goto L3fdcbc;
  #L3fdcb0.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fdcb2.  v2:= v1 @kind object;
  #L3fdcb4.  v1:= v0 @kind object;
  #L3fdcb6.  goto L3fdcec;
  #L3fdcb8.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L3fdcba.  v2:= v1 @kind object;
  #L3fdcbc.  v1:= v0 @kind object;
  #L3fdcbe.  goto L3fdcca;
  #L3fdcc0.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fdcc2.  v2:= v1 @kind object;
  #L3fdcc4.  goto L3fdcec;
  #L3fdcc6.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L3fdcc8.  v2:= v1 @kind object;
  #L3fdcca.  v0:= "BitmapCropTask" @kind object;
  #L3fdcce.  call temp:= `getLocalizedMessage`(v5) @signature `Ljava/io/IOException;.getLocalizedMessage:()Ljava/lang/String;` @kind virtual;
  #L3fdcd4.  v5:= temp @kind object;
  #L3fdcd6.  call temp:= `e`(v0, v5) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3fdcdc.  call `close`(v1) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3fdce2.  call `close`(v2) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3fdce8.  return @kind void;
  #L3fdcea.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fdcec.  call `close`(v1) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3fdcf2.  call `close`(v2) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.close:(Ljava/io/Closeable;)V` @kind static;
  #L3fdcf8.  throw v5;
  catch `java.io.IOException` @[L3fdc60..L3fdc74] goto L3fdcc6;
  catch `java.lang.Throwable` @[L3fdc60..L3fdc74] goto L3fdcc0;
  catch `java.io.IOException` @[L3fdc74..L3fdc7e] goto L3fdcb8;
  catch `java.lang.Throwable` @[L3fdc74..L3fdc7e] goto L3fdcb0;
  catch `java.io.IOException` @[L3fdc7e..L3fdca0] goto L3fdcac;
  catch `java.lang.Throwable` @[L3fdc7e..L3fdca0] goto L3fdca8;
  catch `java.lang.Throwable` @[L3fdcca..L3fdcdc] goto L3fdcea;
}
procedure `boolean` `shouldCrop`(`com.yalantis.ucrop.task.BitmapCropTask` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.shouldCrop:(II)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fd880.  call temp:= `max`(v3, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3fd886.  v3:= temp;
  #L3fd888.  v3:= (`float`) v3 @kind i2f;
  #L3fd88a.  v4:= 1000.0F;
  #L3fd88e.  v3:= v3 / v4 @kind float;
  #L3fd890.  call temp:= `round`(v3) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3fd896.  v3:= temp;
  #L3fd898.  v4:= 1I;
  #L3fd89a.  v3:= v3 + v4 @kind int;
  #L3fd89c.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeX` @type ^`int`;
  #L3fd8a0.  if v0 <= 0 then goto L3fd8ac;
  #L3fd8a4.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mMaxResultImageSizeY` @type ^`int`;
  #L3fd8a8.  if v0 > 0 then goto L3fd948;
  #L3fd8ac.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd8b0.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L3fd8b4.  v1:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd8b8.  v1:= v1.`android.graphics.RectF.left` @type ^`float`;
  #L3fd8bc.  v0:= v0 - v1 @kind float;
  #L3fd8be.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3fd8c4.  v0:= temp;
  #L3fd8c6.  v3:= (`float`) v3 @kind i2f;
  #L3fd8c8.  v0:= fcmpl(v0, v3);
  #L3fd8cc.  if v0 > 0 then goto L3fd948;
  #L3fd8d0.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd8d4.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L3fd8d8.  v1:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd8dc.  v1:= v1.`android.graphics.RectF.top` @type ^`float`;
  #L3fd8e0.  v0:= v0 - v1 @kind float;
  #L3fd8e2.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3fd8e8.  v0:= temp;
  #L3fd8ea.  v0:= fcmpl(v0, v3);
  #L3fd8ee.  if v0 > 0 then goto L3fd948;
  #L3fd8f2.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd8f6.  v0:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L3fd8fa.  v1:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd8fe.  v1:= v1.`android.graphics.RectF.bottom` @type ^`float`;
  #L3fd902.  v0:= v0 - v1 @kind float;
  #L3fd904.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3fd90a.  v0:= temp;
  #L3fd90c.  v0:= fcmpl(v0, v3);
  #L3fd910.  if v0 > 0 then goto L3fd948;
  #L3fd914.  v0:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCropRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd918.  v0:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L3fd91c.  v1:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd920.  v1:= v1.`android.graphics.RectF.right` @type ^`float`;
  #L3fd924.  v0:= v0 - v1 @kind float;
  #L3fd926.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3fd92c.  v0:= temp;
  #L3fd92e.  v3:= fcmpl(v0, v3);
  #L3fd932.  if v3 > 0 then goto L3fd948;
  #L3fd936.  v3:= v2.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentAngle` @type ^`float`;
  #L3fd93a.  v0:= 0I;
  #L3fd93c.  v3:= fcmpl(v3, v0);
  #L3fd940.  if v3 == 0 then goto L3fd946;
  #L3fd944.  goto L3fd948;
  #L3fd946.  v4:= 0I;
  #L3fd948.  return v4;
}
procedure `java.lang.Object` `doInBackground`(`com.yalantis.ucrop.task.BitmapCropTask` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.doInBackground:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L3fd95c.  v1:= (`java.lang.Void`[]) v1 @kind object;
  #L3fd960.  call temp:= `doInBackground`(v0, v1) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.doInBackground:([Ljava/lang/Void;)Ljava/lang/Throwable;` @kind virtual;
  #L3fd966.  v1:= temp @kind object;
  #L3fd968.  return v1 @kind object;
}
procedure `java.lang.Throwable` `doInBackground`(`com.yalantis.ucrop.task.BitmapCropTask` v1 @kind this, `java.lang.Void`[] v2 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.doInBackground:([Ljava/lang/Void;)Ljava/lang/Throwable;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3fd97c.  v2:= v1.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L3fd980.  if v2 != 0 then goto L3fd994;
  #L3fd984.  v2:= new `java.lang.NullPointerException`;
  #L3fd988.  v0:= "ViewBitmap is null" @kind object;
  #L3fd98c.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fd992.  return v2 @kind object;
  #L3fd994.  call temp:= `isRecycled`(v2) @signature `Landroid/graphics/Bitmap;.isRecycled:()Z` @kind virtual;
  #L3fd99a.  v2:= temp;
  #L3fd99c.  if v2 == 0 then goto L3fd9b0;
  #L3fd9a0.  v2:= new `java.lang.NullPointerException`;
  #L3fd9a4.  v0:= "ViewBitmap is recycled" @kind object;
  #L3fd9a8.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fd9ae.  return v2 @kind object;
  #L3fd9b0.  v2:= v1.`com.yalantis.ucrop.task.BitmapCropTask.mCurrentImageRect` @type ^`android.graphics.RectF` @kind object;
  #L3fd9b4.  call temp:= `isEmpty`(v2) @signature `Landroid/graphics/RectF;.isEmpty:()Z` @kind virtual;
  #L3fd9ba.  v2:= temp;
  #L3fd9bc.  if v2 == 0 then goto L3fd9d0;
  #L3fd9c0.  v2:= new `java.lang.NullPointerException`;
  #L3fd9c4.  v0:= "CurrentImageRect is empty" @kind object;
  #L3fd9c8.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fd9ce.  return v2 @kind object;
  #L3fd9d0.  v2:= v1.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputUri` @type ^`android.net.Uri` @kind object;
  #L3fd9d4.  if v2 != 0 then goto L3fd9e8;
  #L3fd9d8.  v2:= new `java.lang.NullPointerException`;
  #L3fd9dc.  v0:= "ImageOutputUri is null" @kind object;
  #L3fd9e0.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fd9e6.  return v2 @kind object;
  #L3fd9e8.  call temp:= `crop`(v1) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.crop:()Z` @kind direct;
  #L3fd9ee.  v2:= 0I;
  #L3fd9f0.  v1.`com.yalantis.ucrop.task.BitmapCropTask.mViewBitmap` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L3fd9f4.  return v2 @kind object;
  #L3fd9f6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fd9f8.  return v2 @kind object;
  catch `java.lang.Throwable` @[L3fd9e8..L3fd9f4] goto L3fd9f6;
}
procedure `void` `onPostExecute`(`com.yalantis.ucrop.task.BitmapCropTask` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.onPostExecute:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L3fdbbc.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L3fdbc0.  call `onPostExecute`(v0, v1) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.onPostExecute:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3fdbc6.  return @kind void;
}
procedure `void` `onPostExecute`(`com.yalantis.ucrop.task.BitmapCropTask` v6 @kind this, `java.lang.Throwable` v7 @kind object) @signature `Lcom/yalantis/ucrop/task/BitmapCropTask;.onPostExecute:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fdbd8.  v0:= v6.`com.yalantis.ucrop.task.BitmapCropTask.mCropCallback` @type ^`com.yalantis.ucrop.callback.BitmapCropCallback` @kind object;
  #L3fdbdc.  if v0 == 0 then goto L3fdc34;
  #L3fdbe0.  if v7 != 0 then goto L3fdc2e;
  #L3fdbe4.  v7:= v6.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputUri` @type ^`android.net.Uri` @kind object;
  #L3fdbe8.  call temp:= `hasContentScheme`(v7) @signature `Lcom/yalantis/ucrop/util/BitmapLoadUtils;.hasContentScheme:(Landroid/net/Uri;)Z` @kind static;
  #L3fdbee.  v7:= temp;
  #L3fdbf0.  if v7 == 0 then goto L3fdbfa;
  #L3fdbf4.  v7:= v6.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputUri` @type ^`android.net.Uri` @kind object;
  #L3fdbf8.  goto L3fdc10;
  #L3fdbfa.  v7:= new `java.io.File`;
  #L3fdbfe.  v0:= v6.`com.yalantis.ucrop.task.BitmapCropTask.mImageOutputPath` @type ^`java.lang.String` @kind object;
  #L3fdc02.  call `<init>`(v7, v0) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fdc08.  call temp:= `fromFile`(v7) @signature `Landroid/net/Uri;.fromFile:(Ljava/io/File;)Landroid/net/Uri;` @kind static;
  #L3fdc0e.  v7:= temp @kind object;
  #L3fdc10.  v1:= v7 @kind object;
  #L3fdc12.  v0:= v6.`com.yalantis.ucrop.task.BitmapCropTask.mCropCallback` @type ^`com.yalantis.ucrop.callback.BitmapCropCallback` @kind object;
  #L3fdc16.  v2:= v6.`com.yalantis.ucrop.task.BitmapCropTask.cropOffsetX` @type ^`int`;
  #L3fdc1a.  v3:= v6.`com.yalantis.ucrop.task.BitmapCropTask.cropOffsetY` @type ^`int`;
  #L3fdc1e.  v4:= v6.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageWidth` @type ^`int`;
  #L3fdc22.  v5:= v6.`com.yalantis.ucrop.task.BitmapCropTask.mCroppedImageHeight` @type ^`int`;
  #L3fdc26.  call `onBitmapCropped`(v0, v1, v2, v3, v4, v5) @signature `Lcom/yalantis/ucrop/callback/BitmapCropCallback;.onBitmapCropped:(Landroid/net/Uri;IIII)V` @kind interface;
  #L3fdc2c.  goto L3fdc34;
  #L3fdc2e.  call `onCropFailure`(v0, v7) @signature `Lcom/yalantis/ucrop/callback/BitmapCropCallback;.onCropFailure:(Ljava/lang/Throwable;)V` @kind interface;
  #L3fdc34.  return @kind void;
}
