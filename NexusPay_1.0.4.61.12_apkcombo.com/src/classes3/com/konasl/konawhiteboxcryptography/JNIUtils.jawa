record `com.konasl.konawhiteboxcryptography.JNIUtils` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.konasl.konawhiteboxcryptography.JNIUtils` v0 @kind this) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a678c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a6792.  return @kind void;
}
procedure `java.lang.String` `byteArrayToHex`(`byte`[] v6 @kind object) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.byteArrayToHex:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a65d0.  v0:= new `java.lang.StringBuilder`;
  #L3a65d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a65da.  v1:= length @variable v6;
  #L3a65dc.  v2:= 0I;
  #L3a65de.  v3:= 0I;
  #L3a65e0.  if v3 >= v1 then goto L3a6612;
  #L3a65e4.  v4:= v6[v3] @kind byte;
  #L3a65e8.  v5:= 1I;
  #L3a65ea.  v5:= new `java.lang.Object`[v5];
  #L3a65ee.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L3a65f4.  v4:= temp @kind object;
  #L3a65f6.  v5[v2]:= v4 @kind object;
  #L3a65fa.  v4:= "%02X" @kind object;
  #L3a65fe.  call temp:= `format`(v4, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3a6604.  v4:= temp @kind object;
  #L3a6606.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a660c.  v3:= v3 + 1;
  #L3a6610.  goto L3a65e0;
  #L3a6612.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a6618.  v6:= temp @kind object;
  #L3a661a.  return v6 @kind object;
}
procedure `long` `byteToLong`(`byte`[] v5 @kind object) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.byteToLong:([B)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a66ec.  v0:= 0L;
  #L3a66f0.  v2:= 0I;
  #L3a66f2.  v3:= 4I;
  #L3a66f4.  if v2 >= v3 then goto L3a6716;
  #L3a66f8.  v3:= length @variable v5;
  #L3a66fa.  if v2 >= v3 then goto L3a6716;
  #L3a66fe.  v3:= 8I;
  #L3a6702.  v0:= v0 ^< v3 @kind long;
  #L3a6704.  v3:= v5[v2] @kind byte;
  #L3a6708.  v3:= v3 ^& 255;
  #L3a670c.  v3:= (`long`) v3 @kind i2l;
  #L3a670e.  v0:= v0 ^| v3 @kind long;
  #L3a6710.  v2:= v2 + 1;
  #L3a6714.  goto L3a66f2;
  #L3a6716.  return v0 @kind wide;
}
procedure `byte` `charToByte`(`char` v1 , `char` v2 ) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.charToByte:(CC)B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3a643c.  v0:= 16I;
  #L3a6440.  call temp:= `digit`(v1, v0) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L3a6446.  v1:= temp;
  #L3a6448.  v1:= v1 ^< 4;
  #L3a644c.  call temp:= `digit`(v2, v0) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L3a6452.  v2:= temp;
  #L3a6454.  v1:= v1 + v2 @kind int;
  #L3a6456.  v1:= (`byte`) v1 @kind i2b;
  #L3a6458.  return v1;
}
procedure `void` `clearBytes`(`byte`[] v1 @kind object) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.clearBytes:([B)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a67a4.  v0:= 0I;
  #L3a67a6.  call `fill`(v1, v0) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L3a67ac.  return @kind void;
}
procedure `byte`[] `convertHexStringToBytes`(`java.lang.String` v5 @kind object) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.convertHexStringToBytes:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a646c.  if v5 != 0 then goto L3a6474;
  #L3a6470.  v5:= 0I;
  #L3a6472.  return v5 @kind object;
  #L3a6474.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a647a.  v0:= temp;
  #L3a647c.  v0:= v0 / 2;
  #L3a6480.  v1:= new `byte`[v0];
  #L3a6484.  v2:= 0I;
  #L3a6486.  if v2 >= v0 then goto L3a64b4;
  #L3a648a.  v3:= v2 * 2;
  #L3a648e.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a6494.  v4:= temp;
  #L3a6496.  v3:= v3 + 1;
  #L3a649a.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a64a0.  v3:= temp;
  #L3a64a2.  call temp:= `charToByte`(v4, v3) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.charToByte:(CC)B` @kind static;
  #L3a64a8.  v3:= temp;
  #L3a64aa.  v1[v2]:= v3 @kind byte;
  #L3a64ae.  v2:= v2 + 1;
  #L3a64b2.  goto L3a6486;
  #L3a64b4.  return v1 @kind object;
}
procedure `java.lang.String` `convertToHex`(`byte`[] v7 @kind object) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.convertToHex:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a662c.  v0:= new `java.lang.StringBuffer`;
  #L3a6630.  call `<init>`(v0) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L3a6636.  v1:= 0I;
  #L3a6638.  v2:= 0I;
  #L3a663a.  v3:= length @variable v7;
  #L3a663c.  if v2 >= v3 then goto L3a6694;
  #L3a6640.  v3:= v7[v2] @kind byte;
  #L3a6644.  v3:= v3 ^>> 4;
  #L3a6648.  v3:= v3 ^& 15;
  #L3a664c.  v4:= 0I;
  #L3a664e.  if v3 < 0 then goto L3a6668;
  #L3a6652.  v5:= 9I;
  #L3a6656.  if v3 > v5 then goto L3a6668;
  #L3a665a.  v3:= v3 + 48;
  #L3a665e.  v3:= (`char`) v3 @kind i2c;
  #L3a6660.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L3a6666.  goto L3a6678;
  #L3a6668.  v3:= v3 + -10;
  #L3a666c.  v3:= v3 + 65;
  #L3a6670.  v3:= (`char`) v3 @kind i2c;
  #L3a6672.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L3a6678.  v3:= v7[v2] @kind byte;
  #L3a667c.  v3:= v3 ^& 15;
  #L3a6680.  v5:= v4 + 1;
  #L3a6684.  v6:= 1I;
  #L3a6686.  if v4 < v6 then goto L3a6690;
  #L3a668a.  v2:= v2 + 1;
  #L3a668e.  goto L3a663a;
  #L3a6690.  v4:= v5;
  #L3a6692.  goto L3a664e;
  #L3a6694.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a669a.  v7:= temp @kind object;
  #L3a669c.  return v7 @kind object;
}
procedure `long` `formattedByteToLong`(`byte`[] v4 @kind object) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.formattedByteToLong:([B)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a6728.  call temp:= `convertToHex`(v4) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.convertToHex:([B)Ljava/lang/String;` @kind static;
  #L3a672e.  v4:= temp @kind object;
  #L3a6730.  v0:= 0I;
  #L3a6732.  v1:= 0I;
  #L3a6734.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a673a.  v2:= temp;
  #L3a673c.  if v1 >= v2 then goto L3a6758;
  #L3a6740.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a6746.  v2:= temp;
  #L3a6748.  v3:= 48I;
  #L3a674c.  if v2 != v3 then goto L3a6756;
  #L3a6750.  v1:= v1 + 1;
  #L3a6754.  goto L3a6734;
  #L3a6756.  v0:= v1;
  #L3a6758.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a675e.  v1:= temp;
  #L3a6760.  call temp:= `substring`(v4, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a6766.  v4:= temp @kind object;
  #L3a6768.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(Ljava/lang/String;)Ljava/lang/Long;` @kind static;
  #L3a676e.  v4:= temp @kind object;
  #L3a6770.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3a6776.  v0:= temp @kind wide;
  #L3a6778.  return v0 @kind wide;
}
procedure `byte`[] `getByteArray`(`short` v1 ) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.getByteArray:(S)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a64c8.  v0:= 2I;
  #L3a64ca.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L3a64d0.  v0:= temp @kind object;
  #L3a64d2.  call temp:= `putShort`(v0, v1) @signature `Ljava/nio/ByteBuffer;.putShort:(S)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3a64d8.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L3a64de.  v1:= temp @kind object;
  #L3a64e0.  return v1 @kind object;
}
procedure `java.lang.String` `getStringFromByteArray`(`byte`[] v2 @kind object) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.getStringFromByteArray:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a66b0.  v0:= new `java.lang.String`;
  #L3a66b4.  v1:= "UTF-8" @kind object;
  #L3a66b8.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L3a66be.  goto L3a66ca;
  #L3a66c0.  v2:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L3a66c2.  call `printStackTrace`(v2) @signature `Ljava/io/UnsupportedEncodingException;.printStackTrace:()V` @kind virtual;
  #L3a66c8.  v0:= 0I;
  #L3a66ca.  return v0 @kind object;
  catch `java.io.UnsupportedEncodingException` @[L3a66b0..L3a66be] goto L3a66c0;
}
procedure `byte`[] `longToByte`(`long` v5 ) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.longToByte:(J)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a64f4.  v0:= 4I;
  #L3a64f6.  v0:= new `byte`[v0];
  #L3a64fa.  v1:= -1L;
  #L3a64fe.  v3:= v5 ^& v1 @kind long;
  #L3a6502.  v4:= (`int`) v3 @kind l2i;
  #L3a6504.  v3:= (`byte`) v4 @kind i2b;
  #L3a6506.  v4:= 3I;
  #L3a6508.  v0[v4]:= v3 @kind byte;
  #L3a650c.  v3:= 8I;
  #L3a6510.  v3:= v5 ^> v3 @kind long;
  #L3a6514.  v3:= v3 ^& v1 @kind long;
  #L3a6516.  v4:= (`int`) v3 @kind l2i;
  #L3a6518.  v3:= (`byte`) v4 @kind i2b;
  #L3a651a.  v4:= 2I;
  #L3a651c.  v0[v4]:= v3 @kind byte;
  #L3a6520.  v3:= 16I;
  #L3a6524.  v3:= v5 ^> v3 @kind long;
  #L3a6528.  v3:= v3 ^& v1 @kind long;
  #L3a652a.  v4:= (`int`) v3 @kind l2i;
  #L3a652c.  v3:= (`byte`) v4 @kind i2b;
  #L3a652e.  v4:= 1I;
  #L3a6530.  v0[v4]:= v3 @kind byte;
  #L3a6534.  v3:= 24I;
  #L3a6538.  v5:= v5 ^> v3 @kind long;
  #L3a653a.  v5:= v5 ^& v1 @kind long;
  #L3a653c.  v6:= (`int`) v5 @kind l2i;
  #L3a653e.  v5:= (`byte`) v6 @kind i2b;
  #L3a6540.  v6:= 0I;
  #L3a6542.  v0[v6]:= v5 @kind byte;
  #L3a6546.  return v0 @kind object;
}
procedure `byte`[] `longToFormattedByte`(`long` v3 , `int` v5 ) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.longToFormattedByte:(JI)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a6558.  v0:= new `java.lang.StringBuilder`;
  #L3a655c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a6562.  v1:= "" @kind object;
  #L3a6566.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a656c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a6572.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a6578.  v3:= temp @kind object;
  #L3a657a.  v4:= new `java.lang.StringBuilder`;
  #L3a657e.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a6584.  v0:= 0I;
  #L3a6586.  v1:= v5 * 2;
  #L3a658a.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a6590.  v2:= temp;
  #L3a6592.  v1:= v1 - v2 @kind int;
  #L3a6594.  if v0 >= v1 then goto L3a65a8;
  #L3a6598.  v1:= "0" @kind object;
  #L3a659c.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a65a2.  v0:= v0 + 1;
  #L3a65a6.  goto L3a6586;
  #L3a65a8.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a65ae.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a65b4.  v3:= temp @kind object;
  #L3a65b6.  call temp:= `convertHexStringToBytes`(v3) @signature `Lcom/konasl/konawhiteboxcryptography/JNIUtils;.convertHexStringToBytes:(Ljava/lang/String;)[B` @kind static;
  #L3a65bc.  v3:= temp @kind object;
  #L3a65be.  return v3 @kind object;
}
