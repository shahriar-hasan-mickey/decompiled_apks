record `com.kona.mobileapi.smartcard.BerTlv` @kind class @AccessFlag PUBLIC {
  `byte`[] `com.kona.mobileapi.smartcard.BerTlv.a` @AccessFlag PRIVATE;
  `int` `com.kona.mobileapi.smartcard.BerTlv.b` @AccessFlag PRIVATE;
  `int` `com.kona.mobileapi.smartcard.BerTlv.c` @AccessFlag PRIVATE;
  `int` `com.kona.mobileapi.smartcard.BerTlv.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.kona.mobileapi.smartcard.BerTlv` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.<init>:([BIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32dbb0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32dbb6.  v0:= 0I;
  #L32dbb8.  v1.`com.kona.mobileapi.smartcard.BerTlv.a` @type ^`byte`[] := v0 @kind object;
  #L32dbbc.  v0:= 0I;
  #L32dbbe.  v1.`com.kona.mobileapi.smartcard.BerTlv.b` @type ^`int` := v0;
  #L32dbc2.  v1.`com.kona.mobileapi.smartcard.BerTlv.c` @type ^`int` := v0;
  #L32dbc6.  v1.`com.kona.mobileapi.smartcard.BerTlv.d` @type ^`int` := v0;
  #L32dbca.  v0:= length @variable v2;
  #L32dbcc.  call temp:= `copyOf`(v2, v0) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L32dbd2.  v2:= temp @kind object;
  #L32dbd4.  v1.`com.kona.mobileapi.smartcard.BerTlv.a` @type ^`byte`[] := v2 @kind object;
  #L32dbd8.  v1.`com.kona.mobileapi.smartcard.BerTlv.b` @type ^`int` := v3;
  #L32dbdc.  v1.`com.kona.mobileapi.smartcard.BerTlv.c` @type ^`int` := v4;
  #L32dbe0.  v1.`com.kona.mobileapi.smartcard.BerTlv.d` @type ^`int` := v5;
  #L32dbe4.  return @kind void;
}
procedure `com.kona.mobileapi.smartcard.BerTlv` `decode`(`byte`[] v8 @kind object, `int` v9 ) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.decode:([BI)Lcom/kona/mobileapi/smartcard/BerTlv;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L32d864.  if v8 == 0 then goto L32db48;
  #L32d868.  v0:= length @variable v8;
  #L32d86a.  if v0 == 0 then goto L32db48;
  #L32d86e.  v0:= length @variable v8;
  #L32d870.  v1:= "Index " @kind object;
  #L32d874.  if v9 >= v0 then goto L32db02;
  #L32d878.  v0:= v9 + 1;
  #L32d87c.  v9:= v8[v9] @kind byte;
  #L32d880.  v9:= v9 ^& 255;
  #L32d884.  v2:= v9 ^& 31;
  #L32d888.  v3:= 31I;
  #L32d88c.  v4:= " out of range! [0..[" @kind object;
  #L32d890.  if v2 != v3 then goto L32d8ec;
  #L32d894.  v2:= length @variable v8;
  #L32d896.  if v0 >= v2 then goto L32d8b4;
  #L32d89a.  v9:= v9 ^& 255;
  #L32d89e.  v9:= v9 ^< 8;
  #L32d8a2.  v2:= v0 + 1;
  #L32d8a6.  v0:= v8[v0] @kind byte;
  #L32d8aa.  v0:= v0 ^& 255;
  #L32d8ae.  v9:= v9 ^| v0 @kind int;
  #L32d8b0.  v0:= v2;
  #L32d8b2.  goto L32d8ec;
  #L32d8b4.  v9:= new `java.lang.Exception`;
  #L32d8b8.  v2:= new `java.lang.StringBuilder`;
  #L32d8bc.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32d8c2.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d8c8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d8ce.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d8d4.  v8:= length @variable v8;
  #L32d8d6.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d8dc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32d8e2.  v8:= temp @kind object;
  #L32d8e4.  call `<init>`(v9, v8) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32d8ea.  throw v9;
  #L32d8ec.  v2:= length @variable v8;
  #L32d8ee.  if v0 >= v2 then goto L32daca;
  #L32d8f2.  v2:= v0 + 1;
  #L32d8f6.  v0:= v8[v0] @kind byte;
  #L32d8fa.  v0:= v0 ^& 255;
  #L32d8fe.  v3:= 128I;
  #L32d902.  if v0 >= v3 then goto L32d90a;
  #L32d906.  goto L32da6a;
  #L32d90a.  v5:= 129I;
  #L32d90e.  v6:= "Not enough data provided!" @kind object;
  #L32d912.  v7:= "Invalid TLV length encoding!" @kind object;
  #L32d916.  if v0 != v5 then goto L32d992;
  #L32d91a.  v0:= length @variable v8;
  #L32d91c.  if v2 >= v0 then goto L32d95a;
  #L32d920.  v0:= v2 + 1;
  #L32d924.  v1:= v8[v2] @kind byte;
  #L32d928.  v1:= v1 ^& 255;
  #L32d92c.  if v1 < v3 then goto L32d94e;
  #L32d930.  v2:= length @variable v8;
  #L32d932.  v3:= v1 + v0 @kind int;
  #L32d936.  if v2 < v3 then goto L32d942;
  #L32d93a.  v2:= v0;
  #L32d93c.  v0:= v1;
  #L32d93e.  goto L32da6a;
  #L32d942.  v8:= new `java.lang.Exception`;
  #L32d946.  call `<init>`(v8, v6) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32d94c.  throw v8;
  #L32d94e.  v8:= new `java.lang.Exception`;
  #L32d952.  call `<init>`(v8, v7) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32d958.  throw v8;
  #L32d95a.  v9:= new `java.lang.Exception`;
  #L32d95e.  v0:= new `java.lang.StringBuilder`;
  #L32d962.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32d968.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d96e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d974.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d97a.  v8:= length @variable v8;
  #L32d97c.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d982.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32d988.  v8:= temp @kind object;
  #L32d98a.  call `<init>`(v9, v8) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32d990.  throw v9;
  #L32d992.  v1:= 130I;
  #L32d996.  v3:= "Index out of range! [0..[" @kind object;
  #L32d99a.  if v0 != v1 then goto L32da1a;
  #L32d99e.  v0:= v2 + 1;
  #L32d9a2.  v1:= length @variable v8;
  #L32d9a4.  if v0 >= v1 then goto L32d9ee;
  #L32d9a8.  v1:= v8[v2] @kind byte;
  #L32d9ac.  v1:= v1 ^& 255;
  #L32d9b0.  v1:= v1 ^< 8;
  #L32d9b4.  v0:= v8[v0] @kind byte;
  #L32d9b8.  v0:= v0 ^& 255;
  #L32d9bc.  v0:= v0 ^| v1 @kind int;
  #L32d9be.  v2:= v2 + 2;
  #L32d9c2.  v1:= 256I;
  #L32d9c6.  if v0 < v1 then goto L32d9e2;
  #L32d9ca.  v1:= length @variable v8;
  #L32d9cc.  v3:= v0 + v2 @kind int;
  #L32d9d0.  if v1 < v3 then goto L32d9d6;
  #L32d9d4.  goto L32da6a;
  #L32d9d6.  v8:= new `java.lang.Exception`;
  #L32d9da.  call `<init>`(v8, v6) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32d9e0.  throw v8;
  #L32d9e2.  v8:= new `java.lang.Exception`;
  #L32d9e6.  call `<init>`(v8, v7) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32d9ec.  throw v8;
  #L32d9ee.  v9:= new `java.lang.Exception`;
  #L32d9f2.  v0:= new `java.lang.StringBuilder`;
  #L32d9f6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32d9fc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32da02.  v8:= length @variable v8;
  #L32da04.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32da0a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32da10.  v8:= temp @kind object;
  #L32da12.  call `<init>`(v9, v8) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32da18.  throw v9;
  #L32da1a.  v1:= 131I;
  #L32da1e.  if v0 != v1 then goto L32daba;
  #L32da22.  v0:= v2 + 2;
  #L32da26.  v1:= length @variable v8;
  #L32da28.  if v0 >= v1 then goto L32da8e;
  #L32da2c.  v1:= v8[v2] @kind byte;
  #L32da30.  v1:= v1 ^& 255;
  #L32da34.  v1:= v1 ^< 16;
  #L32da38.  v3:= v2 + 1;
  #L32da3c.  v3:= v8[v3] @kind byte;
  #L32da40.  v3:= v3 ^& 255;
  #L32da44.  v3:= v3 ^< 8;
  #L32da48.  v1:= v1 ^| v3 @kind int;
  #L32da4a.  v0:= v8[v0] @kind byte;
  #L32da4e.  v0:= v0 ^& 255;
  #L32da52.  v0:= v0 ^| v1 @kind int;
  #L32da54.  v2:= v2 + 3;
  #L32da58.  v1:= 65536I;
  #L32da5c.  if v0 < v1 then goto L32da82;
  #L32da60.  v1:= length @variable v8;
  #L32da62.  v3:= v0 + v2 @kind int;
  #L32da66.  if v1 < v3 then goto L32da76;
  #L32da6a.  v1:= new `com.kona.mobileapi.smartcard.BerTlv`;
  #L32da6e.  call `<init>`(v1, v8, v9, v2, v0) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.<init>:([BIII)V` @kind direct;
  #L32da74.  return v1 @kind object;
  #L32da76.  v8:= new `java.lang.Exception`;
  #L32da7a.  call `<init>`(v8, v6) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32da80.  throw v8;
  #L32da82.  v8:= new `java.lang.Exception`;
  #L32da86.  call `<init>`(v8, v7) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32da8c.  throw v8;
  #L32da8e.  v9:= new `java.lang.Exception`;
  #L32da92.  v0:= new `java.lang.StringBuilder`;
  #L32da96.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32da9c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32daa2.  v8:= length @variable v8;
  #L32daa4.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32daaa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32dab0.  v8:= temp @kind object;
  #L32dab2.  call `<init>`(v9, v8) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32dab8.  throw v9;
  #L32daba.  v8:= new `java.lang.Exception`;
  #L32dabe.  v9:= "Unsupported TLV length encoding!" @kind object;
  #L32dac2.  call `<init>`(v8, v9) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32dac8.  throw v8;
  #L32daca.  v9:= new `java.lang.Exception`;
  #L32dace.  v2:= new `java.lang.StringBuilder`;
  #L32dad2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32dad8.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dade.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dae4.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32daea.  v8:= length @variable v8;
  #L32daec.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32daf2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32daf8.  v8:= temp @kind object;
  #L32dafa.  call `<init>`(v9, v8) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32db00.  throw v9;
  #L32db02.  v0:= new `java.lang.Exception`;
  #L32db06.  v2:= new `java.lang.StringBuilder`;
  #L32db0a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32db10.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32db16.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32db1c.  v9:= " out of range! [0.." @kind object;
  #L32db20.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32db26.  v8:= length @variable v8;
  #L32db28.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32db2e.  v8:= "]" @kind object;
  #L32db32.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32db38.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32db3e.  v8:= temp @kind object;
  #L32db40.  call `<init>`(v0, v8) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32db46.  throw v0;
  #L32db48.  v8:= new `java.lang.Exception`;
  #L32db4c.  v9:= "No data given!" @kind object;
  #L32db50.  call `<init>`(v8, v9) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32db56.  throw v8;
}
procedure `void` `encodeLength`(`int` v3 , `java.io.ByteArrayOutputStream` v4 @kind object) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.encodeLength:(ILjava/io/ByteArrayOutputStream;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L32dc60.  v0:= 65280I;
  #L32dc66.  v1:= 255I;
  #L32dc6a.  v2:= 65535I;
  #L32dc70.  if v3 <= v2 then goto L32dca4;
  #L32dc74.  v2:= 131I;
  #L32dc78.  call `write`(v4, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L32dc7e.  v2:= 16711680I;
  #L32dc82.  v2:= v2 ^& v3 @kind int;
  #L32dc84.  v2:= v2 ^> 16;
  #L32dc88.  call `write`(v4, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L32dc8e.  v0:= v0 ^& v3 @kind int;
  #L32dc90.  v0:= v0 ^> 8;
  #L32dc94.  call `write`(v4, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L32dc9a.  v3:= v3 ^& v1 @kind int;
  #L32dc9c.  call `write`(v4, v3) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L32dca2.  goto L32dcec;
  #L32dca4.  if v3 <= v1 then goto L32dcc8;
  #L32dca8.  v2:= 130I;
  #L32dcac.  call `write`(v4, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L32dcb2.  v0:= v0 ^& v3 @kind int;
  #L32dcb4.  v0:= v0 ^> 8;
  #L32dcb8.  call `write`(v4, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L32dcbe.  v3:= v3 ^& v1 @kind int;
  #L32dcc0.  call `write`(v4, v3) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L32dcc6.  goto L32dcec;
  #L32dcc8.  v0:= 127I;
  #L32dccc.  if v3 <= v0 then goto L32dce4;
  #L32dcd0.  v0:= 129I;
  #L32dcd4.  call `write`(v4, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L32dcda.  v3:= v3 ^& v1 @kind int;
  #L32dcdc.  call `write`(v4, v3) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L32dce2.  goto L32dcec;
  #L32dce4.  v3:= v3 ^& v1 @kind int;
  #L32dce6.  call `write`(v4, v3) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L32dcec.  return @kind void;
}
procedure `void` `build`(`com.kona.mobileapi.smartcard.BerTlv` v3 @kind this, `java.io.ByteArrayOutputStream` v4 @kind object) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.build:(Ljava/io/ByteArrayOutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32dbf8.  v0:= v3.`com.kona.mobileapi.smartcard.BerTlv.b` @type ^`int`;
  #L32dbfc.  v1:= 255I;
  #L32dc00.  if v0 <= v1 then goto L32dc24;
  #L32dc04.  v2:= 65280I;
  #L32dc0a.  v0:= v0 ^& v2 @kind int;
  #L32dc0c.  v0:= v0 ^> 8;
  #L32dc10.  call `write`(v4, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L32dc16.  v0:= v3.`com.kona.mobileapi.smartcard.BerTlv.b` @type ^`int`;
  #L32dc1a.  v0:= v0 ^& v1 @kind int;
  #L32dc1c.  call `write`(v4, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L32dc22.  goto L32dc2c;
  #L32dc24.  v0:= v0 ^& v1 @kind int;
  #L32dc26.  call `write`(v4, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L32dc2c.  v0:= v3.`com.kona.mobileapi.smartcard.BerTlv.d` @type ^`int`;
  #L32dc30.  call `encodeLength`(v0, v4) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.encodeLength:(ILjava/io/ByteArrayOutputStream;)V` @kind static;
  #L32dc36.  v0:= v3.`com.kona.mobileapi.smartcard.BerTlv.d` @type ^`int`;
  #L32dc3a.  if v0 <= 0 then goto L32dc4c;
  #L32dc3e.  v1:= v3.`com.kona.mobileapi.smartcard.BerTlv.a` @type ^`byte`[] @kind object;
  #L32dc42.  v2:= v3.`com.kona.mobileapi.smartcard.BerTlv.c` @type ^`int`;
  #L32dc46.  call `write`(v4, v1, v2, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:([BII)V` @kind virtual;
  #L32dc4c.  return @kind void;
}
procedure `boolean` `equals`(`com.kona.mobileapi.smartcard.BerTlv` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32d78c.  v0:= instanceof @variable v4 @type ^`com.kona.mobileapi.smartcard.BerTlv` @kind boolean;
  #L32d790.  v1:= 0I;
  #L32d792.  if v0 == 0 then goto L32d7da;
  #L32d796.  v4:= (`com.kona.mobileapi.smartcard.BerTlv`) v4 @kind object;
  #L32d79a.  v0:= v3.`com.kona.mobileapi.smartcard.BerTlv.b` @type ^`int`;
  #L32d79e.  v2:= v4.`com.kona.mobileapi.smartcard.BerTlv.b` @type ^`int`;
  #L32d7a2.  if v0 != v2 then goto L32d7aa;
  #L32d7a6.  v0:= 1I;
  #L32d7a8.  v1:= 1I;
  #L32d7aa.  if v1 == 0 then goto L32d7da;
  #L32d7ae.  call temp:= `getValue`(v3) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.getValue:()[B` @kind virtual;
  #L32d7b4.  v0:= temp @kind object;
  #L32d7b6.  call temp:= `getValue`(v4) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.getValue:()[B` @kind virtual;
  #L32d7bc.  v4:= temp @kind object;
  #L32d7be.  if v0 == 0 then goto L32d7ce;
  #L32d7c2.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L32d7c8.  v4:= temp;
  #L32d7ca.  v1:= v1 ^& v4 @kind int;
  #L32d7cc.  goto L32d7da;
  #L32d7ce.  if v0 != 0 then goto L32d7da;
  #L32d7d2.  if v4 != 0 then goto L32d7da;
  #L32d7d6.  v1:= v1 ^& 1;
  #L32d7da.  return v1;
}
procedure `byte`[] `getRawData`(`com.kona.mobileapi.smartcard.BerTlv` v1 @kind this) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.getRawData:()[B` @AccessFlag PROTECTED {
    temp;
    v0;

  #L32d7ec.  v0:= v1.`com.kona.mobileapi.smartcard.BerTlv.a` @type ^`byte`[] @kind object;
  #L32d7f0.  if v0 != 0 then goto L32d7f8;
  #L32d7f4.  v0:= 0I;
  #L32d7f6.  return v0 @kind object;
  #L32d7f8.  call temp:= `clone`(v0) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L32d7fe.  v0:= temp @kind object;
  #L32d800.  v0:= (`byte`[]) v0 @kind object;
  #L32d804.  return v0 @kind object;
}
procedure `int` `getTag`(`com.kona.mobileapi.smartcard.BerTlv` v1 @kind this) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.getTag:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32db68.  v0:= v1.`com.kona.mobileapi.smartcard.BerTlv.b` @type ^`int`;
  #L32db6c.  return v0;
}
procedure `byte`[] `getValue`(`com.kona.mobileapi.smartcard.BerTlv` v5 @kind this) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.getValue:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32d818.  v0:= v5.`com.kona.mobileapi.smartcard.BerTlv.a` @type ^`byte`[] @kind object;
  #L32d81c.  if v0 == 0 then goto L32d850;
  #L32d820.  v1:= v5.`com.kona.mobileapi.smartcard.BerTlv.d` @type ^`int`;
  #L32d824.  if v1 == 0 then goto L32d850;
  #L32d828.  v2:= v5.`com.kona.mobileapi.smartcard.BerTlv.c` @type ^`int`;
  #L32d82c.  if v2 < 0 then goto L32d850;
  #L32d830.  v3:= length @variable v0;
  #L32d832.  if v2 > v3 then goto L32d850;
  #L32d836.  v3:= v2 + v1 @kind int;
  #L32d83a.  v4:= length @variable v0;
  #L32d83c.  if v3 <= v4 then goto L32d842;
  #L32d840.  goto L32d850;
  #L32d842.  v3:= new `byte`[v1];
  #L32d846.  v4:= 0I;
  #L32d848.  call `arraycopy`(v0, v2, v3, v4, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L32d84e.  return v3 @kind object;
  #L32d850.  v0:= 0I;
  #L32d852.  return v0 @kind object;
}
procedure `int` `getValueIndex`(`com.kona.mobileapi.smartcard.BerTlv` v1 @kind this) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.getValueIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32db80.  v0:= v1.`com.kona.mobileapi.smartcard.BerTlv.c` @type ^`int`;
  #L32db84.  return v0;
}
procedure `int` `getValueLength`(`com.kona.mobileapi.smartcard.BerTlv` v1 @kind this) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.getValueLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32db98.  v0:= v1.`com.kona.mobileapi.smartcard.BerTlv.d` @type ^`int`;
  #L32db9c.  return v0;
}
procedure `void` `interpret`(`com.kona.mobileapi.smartcard.BerTlv` v0 @kind this) @signature `Lcom/kona/mobileapi/smartcard/BerTlv;.interpret:()V` @AccessFlag PUBLIC {
    temp;

  #L32dd00.  return @kind void;
}
