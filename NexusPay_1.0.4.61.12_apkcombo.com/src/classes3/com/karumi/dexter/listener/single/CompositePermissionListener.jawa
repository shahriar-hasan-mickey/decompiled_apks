record `com.karumi.dexter.listener.single.CompositePermissionListener` @kind class @AccessFlag PUBLIC extends `com.karumi.dexter.listener.single.PermissionListener` @kind interface {
  `java.util.Collection` `com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.karumi.dexter.listener.single.CompositePermissionListener` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.<init>:(Ljava/util/Collection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32922c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L329232.  v0.`com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @type ^`java.util.Collection` := v1 @kind object;
  #L329236.  return @kind void;
}
procedure `void` `<init>`(`com.karumi.dexter.listener.single.CompositePermissionListener` v0 @kind this, `com.karumi.dexter.listener.single.PermissionListener`[] v1 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.<init>:([Lcom/karumi/dexter/listener/single/PermissionListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32920c.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L329212.  v1:= temp @kind object;
  #L329214.  call `<init>`(v0, v1) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L32921a.  return @kind void;
}
procedure `void` `onPermissionDenied`(`com.karumi.dexter.listener.single.CompositePermissionListener` v2 @kind this, `com.karumi.dexter.listener.PermissionDeniedResponse` v3 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.onPermissionDenied:(Lcom/karumi/dexter/listener/PermissionDeniedResponse;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L329248.  v0:= v2.`com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @type ^`java.util.Collection` @kind object;
  #L32924c.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L329252.  v0:= temp @kind object;
  #L329254.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32925a.  v1:= temp;
  #L32925c.  if v1 == 0 then goto L329274;
  #L329260.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L329266.  v1:= temp @kind object;
  #L329268.  v1:= (`com.karumi.dexter.listener.single.PermissionListener`) v1 @kind object;
  #L32926c.  call `onPermissionDenied`(v1, v3) @signature `Lcom/karumi/dexter/listener/single/PermissionListener;.onPermissionDenied:(Lcom/karumi/dexter/listener/PermissionDeniedResponse;)V` @kind interface;
  #L329272.  goto L329254;
  #L329274.  return @kind void;
}
procedure `void` `onPermissionGranted`(`com.karumi.dexter.listener.single.CompositePermissionListener` v2 @kind this, `com.karumi.dexter.listener.PermissionGrantedResponse` v3 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.onPermissionGranted:(Lcom/karumi/dexter/listener/PermissionGrantedResponse;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L329288.  v0:= v2.`com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @type ^`java.util.Collection` @kind object;
  #L32928c.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L329292.  v0:= temp @kind object;
  #L329294.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32929a.  v1:= temp;
  #L32929c.  if v1 == 0 then goto L3292b4;
  #L3292a0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3292a6.  v1:= temp @kind object;
  #L3292a8.  v1:= (`com.karumi.dexter.listener.single.PermissionListener`) v1 @kind object;
  #L3292ac.  call `onPermissionGranted`(v1, v3) @signature `Lcom/karumi/dexter/listener/single/PermissionListener;.onPermissionGranted:(Lcom/karumi/dexter/listener/PermissionGrantedResponse;)V` @kind interface;
  #L3292b2.  goto L329294;
  #L3292b4.  return @kind void;
}
procedure `void` `onPermissionRationaleShouldBeShown`(`com.karumi.dexter.listener.single.CompositePermissionListener` v2 @kind this, `com.karumi.dexter.listener.PermissionRequest` v3 @kind object, `com.karumi.dexter.PermissionToken` v4 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.onPermissionRationaleShouldBeShown:(Lcom/karumi/dexter/listener/PermissionRequest;Lcom/karumi/dexter/PermissionToken;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3292c8.  v0:= v2.`com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @type ^`java.util.Collection` @kind object;
  #L3292cc.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3292d2.  v0:= temp @kind object;
  #L3292d4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3292da.  v1:= temp;
  #L3292dc.  if v1 == 0 then goto L3292f4;
  #L3292e0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3292e6.  v1:= temp @kind object;
  #L3292e8.  v1:= (`com.karumi.dexter.listener.single.PermissionListener`) v1 @kind object;
  #L3292ec.  call `onPermissionRationaleShouldBeShown`(v1, v3, v4) @signature `Lcom/karumi/dexter/listener/single/PermissionListener;.onPermissionRationaleShouldBeShown:(Lcom/karumi/dexter/listener/PermissionRequest;Lcom/karumi/dexter/PermissionToken;)V` @kind interface;
  #L3292f2.  goto L3292d4;
  #L3292f4.  return @kind void;
}
