record `com.karumi.dexter.listener.single.BasePermissionListener` @kind class @AccessFlag PUBLIC extends `com.karumi.dexter.listener.single.PermissionListener` @kind interface {
}
procedure `void` `<init>`(`com.karumi.dexter.listener.single.BasePermissionListener` v0 @kind this) @signature `Lcom/karumi/dexter/listener/single/BasePermissionListener;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3291b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3291ba.  return @kind void;
}
procedure `void` `onPermissionDenied`(`com.karumi.dexter.listener.single.BasePermissionListener` v0 @kind this, `com.karumi.dexter.listener.PermissionDeniedResponse` v1 @kind object) @signature `Lcom/karumi/dexter/listener/single/BasePermissionListener;.onPermissionDenied:(Lcom/karumi/dexter/listener/PermissionDeniedResponse;)V` @AccessFlag PUBLIC {
    temp;

  #L3291cc.  return @kind void;
}
procedure `void` `onPermissionGranted`(`com.karumi.dexter.listener.single.BasePermissionListener` v0 @kind this, `com.karumi.dexter.listener.PermissionGrantedResponse` v1 @kind object) @signature `Lcom/karumi/dexter/listener/single/BasePermissionListener;.onPermissionGranted:(Lcom/karumi/dexter/listener/PermissionGrantedResponse;)V` @AccessFlag PUBLIC {
    temp;

  #L3291e0.  return @kind void;
}
procedure `void` `onPermissionRationaleShouldBeShown`(`com.karumi.dexter.listener.single.BasePermissionListener` v0 @kind this, `com.karumi.dexter.listener.PermissionRequest` v1 @kind object, `com.karumi.dexter.PermissionToken` v2 @kind object) @signature `Lcom/karumi/dexter/listener/single/BasePermissionListener;.onPermissionRationaleShouldBeShown:(Lcom/karumi/dexter/listener/PermissionRequest;Lcom/karumi/dexter/PermissionToken;)V` @AccessFlag PUBLIC {
    temp;

  #L3291f4.  call `continuePermissionRequest`(v2) @signature `Lcom/karumi/dexter/PermissionToken;.continuePermissionRequest:()V` @kind interface;
  #L3291fa.  return @kind void;
}
