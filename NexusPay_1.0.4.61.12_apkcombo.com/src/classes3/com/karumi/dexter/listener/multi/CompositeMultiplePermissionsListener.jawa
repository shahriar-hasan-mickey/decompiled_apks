record `com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener` @kind class @AccessFlag PUBLIC extends `com.karumi.dexter.listener.multi.MultiplePermissionsListener` @kind interface {
  `java.util.Collection` `com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener.listeners` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/karumi/dexter/listener/multi/CompositeMultiplePermissionsListener;.<init>:(Ljava/util/Collection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3289cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3289d2.  v0.`com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener.listeners` @type ^`java.util.Collection` := v1 @kind object;
  #L3289d6.  return @kind void;
}
procedure `void` `<init>`(`com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener` v0 @kind this, `com.karumi.dexter.listener.multi.MultiplePermissionsListener`[] v1 @kind object) @signature `Lcom/karumi/dexter/listener/multi/CompositeMultiplePermissionsListener;.<init>:([Lcom/karumi/dexter/listener/multi/MultiplePermissionsListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3289ac.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3289b2.  v1:= temp @kind object;
  #L3289b4.  call `<init>`(v0, v1) @signature `Lcom/karumi/dexter/listener/multi/CompositeMultiplePermissionsListener;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3289ba.  return @kind void;
}
procedure `void` `onPermissionRationaleShouldBeShown`(`com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener` v2 @kind this, `java.util.List` v3 @kind object, `com.karumi.dexter.PermissionToken` v4 @kind object) @signature `Lcom/karumi/dexter/listener/multi/CompositeMultiplePermissionsListener;.onPermissionRationaleShouldBeShown:(Ljava/util/List;Lcom/karumi/dexter/PermissionToken;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3289e8.  v0:= v2.`com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener.listeners` @type ^`java.util.Collection` @kind object;
  #L3289ec.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3289f2.  v0:= temp @kind object;
  #L3289f4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3289fa.  v1:= temp;
  #L3289fc.  if v1 == 0 then goto L328a14;
  #L328a00.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L328a06.  v1:= temp @kind object;
  #L328a08.  v1:= (`com.karumi.dexter.listener.multi.MultiplePermissionsListener`) v1 @kind object;
  #L328a0c.  call `onPermissionRationaleShouldBeShown`(v1, v3, v4) @signature `Lcom/karumi/dexter/listener/multi/MultiplePermissionsListener;.onPermissionRationaleShouldBeShown:(Ljava/util/List;Lcom/karumi/dexter/PermissionToken;)V` @kind interface;
  #L328a12.  goto L3289f4;
  #L328a14.  return @kind void;
}
procedure `void` `onPermissionsChecked`(`com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener` v2 @kind this, `com.karumi.dexter.MultiplePermissionsReport` v3 @kind object) @signature `Lcom/karumi/dexter/listener/multi/CompositeMultiplePermissionsListener;.onPermissionsChecked:(Lcom/karumi/dexter/MultiplePermissionsReport;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L328a28.  v0:= v2.`com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener.listeners` @type ^`java.util.Collection` @kind object;
  #L328a2c.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L328a32.  v0:= temp @kind object;
  #L328a34.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L328a3a.  v1:= temp;
  #L328a3c.  if v1 == 0 then goto L328a54;
  #L328a40.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L328a46.  v1:= temp @kind object;
  #L328a48.  v1:= (`com.karumi.dexter.listener.multi.MultiplePermissionsListener`) v1 @kind object;
  #L328a4c.  call `onPermissionsChecked`(v1, v3) @signature `Lcom/karumi/dexter/listener/multi/MultiplePermissionsListener;.onPermissionsChecked:(Lcom/karumi/dexter/MultiplePermissionsReport;)V` @kind interface;
  #L328a52.  goto L328a34;
  #L328a54.  return @kind void;
}
