record `com.karumi.dexter.MainThread` @kind class @AccessFlag FINAL extends `com.karumi.dexter.Thread` @kind interface {
}
procedure `void` `<init>`(`com.karumi.dexter.MainThread` v0 @kind this) @signature `Lcom/karumi/dexter/MainThread;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L326d8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L326d92.  return @kind void;
}
procedure `boolean` `runningMainThread`() @signature `Lcom/karumi/dexter/MainThread;.runningMainThread:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L326d60.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L326d66.  v0:= temp @kind object;
  #L326d68.  call temp:= `myLooper`() @signature `Landroid/os/Looper;.myLooper:()Landroid/os/Looper;` @kind static;
  #L326d6e.  v1:= temp @kind object;
  #L326d70.  if v0 != v1 then goto L326d78;
  #L326d74.  v0:= 1I;
  #L326d76.  goto L326d7a;
  #L326d78.  v0:= 0I;
  #L326d7a.  return v0;
}
procedure `void` `execute`(`com.karumi.dexter.MainThread` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lcom/karumi/dexter/MainThread;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L326da4.  call temp:= `runningMainThread`() @signature `Lcom/karumi/dexter/MainThread;.runningMainThread:()Z` @kind static;
  #L326daa.  v0:= temp;
  #L326dac.  if v0 == 0 then goto L326db8;
  #L326db0.  call `run`(v3) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L326db6.  goto L326dd0;
  #L326db8.  v0:= new `android.os.Handler`;
  #L326dbc.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L326dc2.  v1:= temp @kind object;
  #L326dc4.  call `<init>`(v0, v1) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L326dca.  call temp:= `post`(v0, v3) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L326dd0.  return @kind void;
}
procedure `void` `loop`(`com.karumi.dexter.MainThread` v0 @kind this) @signature `Lcom/karumi/dexter/MainThread;.loop:()V` @AccessFlag PUBLIC {
    temp;

  #L326de4.  return @kind void;
}
