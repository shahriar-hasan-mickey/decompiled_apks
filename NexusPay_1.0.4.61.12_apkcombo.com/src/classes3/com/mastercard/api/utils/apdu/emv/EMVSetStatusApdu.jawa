record `com.mastercard.api.utils.apdu.emv.EMVSetStatusApdu` @kind class @AccessFlag PUBLIC extends `com.mastercard.api.utils.apdu.Apdu` @kind class {
}
global `byte` `@@com.mastercard.api.utils.apdu.emv.EMVSetStatusApdu.ACTIVATE_STATE_SET_PRIORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.EMVSetStatusApdu.ASSIGN_HIGHEST_PRIORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.EMVSetStatusApdu.ASSIGN_LOWEST_PRIORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.EMVSetStatusApdu.ASSIGN_OVERRIDE_PRIORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.EMVSetStatusApdu.AVAILABILITY_STATE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.EMVSetStatusApdu.CLA` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.EMVSetStatusApdu.INS` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.EMVSetStatusApdu.RESET_LOWEST_PRIORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.EMVSetStatusApdu.STATE_ACTIVATED` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.EMVSetStatusApdu.STATE_DEACTIVATED` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.EMVSetStatusApdu.STATE_NON_ACTIVATABLE` @AccessFlag PUBLIC_STATIC_FINAL;
global `short` `@@com.mastercard.api.utils.apdu.emv.EMVSetStatusApdu.SW_WARNING` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.mastercard.api.utils.apdu.emv.EMVSetStatusApdu` v2 @kind this, `byte` v3 , `byte` v4 ) @signature `Lcom/mastercard/api/utils/apdu/emv/EMVSetStatusApdu;.<init>:(BB)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3b766c.  v0:= -128I;
  #L3b7670.  v1:= -16I;
  #L3b7674.  call `<init>`(v2, v0, v1, v3, v4) @signature `Lcom/mastercard/api/utils/apdu/Apdu;.<init>:(BBBB)V` @kind direct;
  #L3b767a.  return @kind void;
}
