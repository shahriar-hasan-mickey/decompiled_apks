record `com.mastercard.api.utils.apdu.emv.VerifyPINApdu` @kind class @AccessFlag PUBLIC extends `com.mastercard.api.utils.apdu.Apdu` @kind class {
}
global `byte` `@@com.mastercard.api.utils.apdu.emv.VerifyPINApdu.CLA` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.VerifyPINApdu.INS` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.VerifyPINApdu.LENGTH_PLAINTEXT_BLOCK` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.mastercard.api.utils.apdu.emv.VerifyPINApdu.NO_PIN` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.VerifyPINApdu.P1` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.VerifyPINApdu.P2_CIPHERED` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.utils.apdu.emv.VerifyPINApdu.P2_PLAINTEXT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.mastercard.api.utils.apdu.emv.VerifyPINApdu.PIN_BLOCKED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.mastercard.api.utils.apdu.emv.VerifyPINApdu.PIN_ENTERED` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.mastercard.api.utils.apdu.emv.VerifyPINApdu` v5 @kind this, `byte` v6 , `byte`[] v7 @kind object) @signature `Lcom/mastercard/api/utils/apdu/emv/VerifyPINApdu;.<init>:(B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3b7f0c.  v0:= 0I;
  #L3b7f0e.  v1:= 32I;
  #L3b7f12.  call `<init>`(v5, v0, v1, v0, v6) @signature `Lcom/mastercard/api/utils/apdu/Apdu;.<init>:(BBBB)V` @kind direct;
  #L3b7f18.  v2:= -128I;
  #L3b7f1c.  if v6 != v2 then goto L3b7f76;
  #L3b7f20.  v6:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b7f24.  v2:= 8I;
  #L3b7f28.  call `<init>`(v6, v2) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:(I)V` @kind direct;
  #L3b7f2e.  v3:= length @variable v7;
  #L3b7f30.  v3:= v3 + v1 @kind int;
  #L3b7f32.  v1:= (`byte`) v3 @kind i2b;
  #L3b7f34.  call `setByte`(v6, v0, v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.setByte:(IB)V` @kind interface;
  #L3b7f3a.  call temp:= `encodeByteArray`(v7) @signature `Lcom/mastercard/api/utils/Utils;.encodeByteArray:([B)[B` @kind static;
  #L3b7f40.  v1:= temp @kind object;
  #L3b7f42.  v3:= length @variable v1;
  #L3b7f44.  v4:= 1I;
  #L3b7f46.  call `copyBufferToArray`(v6, v1, v0, v4, v3) @signature `Lcom/mastercard/api/bytes/ByteArray;.copyBufferToArray:([BIII)V` @kind interface;
  #L3b7f4c.  call `clearByteArray`(v1) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:([B)V` @kind static;
  #L3b7f52.  v0:= length @variable v1;
  #L3b7f54.  v0:= v0 + v4 @kind int;
  #L3b7f56.  if v0 >= v2 then goto L3b7f68;
  #L3b7f5a.  v1:= -1I;
  #L3b7f5c.  call `setByte`(v6, v0, v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.setByte:(IB)V` @kind interface;
  #L3b7f62.  v0:= v0 + 1;
  #L3b7f66.  goto L3b7f56;
  #L3b7f68.  call `setDataField`(v5, v6) @signature `Lcom/mastercard/api/utils/apdu/Apdu;.setDataField:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind virtual;
  #L3b7f6e.  call `clear`(v6) @signature `Lcom/mastercard/api/bytes/ByteArray;.clear:()V` @kind interface;
  #L3b7f74.  goto L3b7f8e;
  #L3b7f76.  v0:= -120I;
  #L3b7f7a.  if v6 != v0 then goto L3b7f8e;
  #L3b7f7e.  v6:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b7f82.  call `<init>`(v6, v7) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b7f88.  call `setDataField`(v5, v6) @signature `Lcom/mastercard/api/utils/apdu/Apdu;.setDataField:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind virtual;
  #L3b7f8e.  call `clearByteArray`(v7) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:([B)V` @kind static;
  #L3b7f94.  return @kind void;
}
