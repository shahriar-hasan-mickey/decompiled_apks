record `com.mastercard.api.utils.apdu.emv.SelectRespApdu` @kind class @AccessFlag PUBLIC extends `com.mastercard.api.utils.apdu.RespApdu` @kind class {
}
procedure `void` `<init>`(`com.mastercard.api.utils.apdu.emv.SelectRespApdu` v1 @kind this, `com.mastercard.api.bytes.ByteArray` v2 @kind object, `com.mastercard.api.bytes.ByteArray` v3 @kind object) @signature `Lcom/mastercard/api/utils/apdu/emv/SelectRespApdu;.<init>:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b7e9c.  call `<init>`(v1) @signature `Lcom/mastercard/api/utils/apdu/RespApdu;.<init>:()V` @kind direct;
  #L3b7ea2.  v0:= -124I;
  #L3b7ea6.  call temp:= `create`(v0, v2) @signature `Lcom/mastercard/api/utils/TLV;.create:(BLcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind static;
  #L3b7eac.  v2:= temp @kind object;
  #L3b7eae.  call temp:= `append`(v2, v3) @signature `Lcom/mastercard/api/bytes/ByteArray;.append:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3b7eb4.  v3:= 111I;
  #L3b7eb8.  call temp:= `create`(v3, v2) @signature `Lcom/mastercard/api/utils/TLV;.create:(BLcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind static;
  #L3b7ebe.  v2:= temp @kind object;
  #L3b7ec0.  call `setValueAndSuccess`(v1, v2) @signature `Lcom/mastercard/api/utils/apdu/RespApdu;.setValueAndSuccess:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind virtual;
  #L3b7ec6.  return @kind void;
}
