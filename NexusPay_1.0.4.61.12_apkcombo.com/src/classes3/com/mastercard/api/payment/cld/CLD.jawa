record `com.mastercard.api.payment.cld.CLD` @kind class @AccessFlag PUBLIC {
  `byte` `com.mastercard.api.payment.cld.CLD.a` @AccessFlag PRIVATE;
  `byte` `com.mastercard.api.payment.cld.CLD.b` @AccessFlag PRIVATE;
  `com.mastercard.api.payment.cld.CardSide` `com.mastercard.api.payment.cld.CLD.c` @AccessFlag PRIVATE;
  `com.mastercard.api.payment.cld.CardSide` `com.mastercard.api.payment.cld.CLD.d` @AccessFlag PRIVATE;
}
global `byte` `@@com.mastercard.api.payment.cld.CLD.BACK_SIDE_TAG` @AccessFlag PUBLIC_STATIC_FINAL;
global `short` `@@com.mastercard.api.payment.cld.CLD.CLD_TAG` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.payment.cld.CLD.DEFAULT_VERSION` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.payment.cld.CLD.FORM_FACTOR_TAG` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.payment.cld.CLD.FRONT_SIDE_TAG` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.payment.cld.CLD.ID1_FORMAT` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.payment.cld.CLD.MC_FORMAT` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.mastercard.api.payment.cld.CLD.VERSION_TAG` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.mastercard.api.payment.cld.CLD` v2 @kind this) @signature `Lcom/mastercard/api/payment/cld/CLD;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3b4878.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b487e.  v0:= 1I;
  #L3b4880.  v2.`com.mastercard.api.payment.cld.CLD.a` @type ^`byte` := v0 @kind byte;
  #L3b4884.  v2.`com.mastercard.api.payment.cld.CLD.b` @type ^`byte` := v0 @kind byte;
  #L3b4888.  v1:= 0I;
  #L3b488a.  v2.`com.mastercard.api.payment.cld.CLD.c` @type ^`com.mastercard.api.payment.cld.CardSide` := v1 @kind object;
  #L3b488e.  v2.`com.mastercard.api.payment.cld.CLD.d` @type ^`com.mastercard.api.payment.cld.CardSide` := v1 @kind object;
  #L3b4892.  v1:= new `com.mastercard.api.payment.cld.CardSide`;
  #L3b4896.  call `<init>`(v1, v0) @signature `Lcom/mastercard/api/payment/cld/CardSide;.<init>:(B)V` @kind direct;
  #L3b489c.  v2.`com.mastercard.api.payment.cld.CLD.c` @type ^`com.mastercard.api.payment.cld.CardSide` := v1 @kind object;
  #L3b48a0.  return @kind void;
}
procedure `void` `<init>`(`com.mastercard.api.payment.cld.CLD` v2 @kind this, `com.mastercard.api.bytes.ByteArray` v3 @kind object) @signature `Lcom/mastercard/api/payment/cld/CLD;.<init>:(Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3b4920.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b4926.  v0:= 1I;
  #L3b4928.  v2.`com.mastercard.api.payment.cld.CLD.a` @type ^`byte` := v0 @kind byte;
  #L3b492c.  v2.`com.mastercard.api.payment.cld.CLD.b` @type ^`byte` := v0 @kind byte;
  #L3b4930.  v0:= 0I;
  #L3b4932.  v2.`com.mastercard.api.payment.cld.CLD.c` @type ^`com.mastercard.api.payment.cld.CardSide` := v0 @kind object;
  #L3b4936.  v2.`com.mastercard.api.payment.cld.CLD.d` @type ^`com.mastercard.api.payment.cld.CardSide` := v0 @kind object;
  #L3b493a.  call temp:= `getBytes`(v3) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b4940.  v0:= temp @kind object;
  #L3b4942.  call temp:= `getLength`(v3) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b4948.  v3:= temp;
  #L3b494a.  v1:= 0I;
  #L3b494c.  call `a`(v2, v0, v1, v3) @signature `Lcom/mastercard/api/payment/cld/CLD;.a:([BII)V` @kind direct;
  #L3b4952.  return @kind void;
}
procedure `void` `<init>`(`com.mastercard.api.payment.cld.CLD` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/mastercard/api/payment/cld/CLD;.<init>:([BII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3b48b4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b48ba.  v5:= 1I;
  #L3b48bc.  v2.`com.mastercard.api.payment.cld.CLD.a` @type ^`byte` := v5 @kind byte;
  #L3b48c0.  v2.`com.mastercard.api.payment.cld.CLD.b` @type ^`byte` := v5 @kind byte;
  #L3b48c4.  v0:= 0I;
  #L3b48c6.  v2.`com.mastercard.api.payment.cld.CLD.c` @type ^`com.mastercard.api.payment.cld.CardSide` := v0 @kind object;
  #L3b48ca.  v2.`com.mastercard.api.payment.cld.CLD.d` @type ^`com.mastercard.api.payment.cld.CardSide` := v0 @kind object;
  #L3b48ce.  call temp:= `readShort`(v3, v4) @signature `Lcom/mastercard/api/utils/Utils;.readShort:([BI)S` @kind static;
  #L3b48d4.  v0:= temp;
  #L3b48d6.  v1:= -8377I;
  #L3b48da.  if v0 != v1 then goto L3b4902;
  #L3b48de.  v4:= v4 + 2;
  #L3b48e2.  call temp:= `getTLVLength`(v3, v4) @signature `Lcom/mastercard/api/utils/tlv/BERTLVUtils;.getTLVLength:([BI)I` @kind static;
  #L3b48e8.  v0:= temp;
  #L3b48ea.  v1:= 128I;
  #L3b48ee.  if v0 < v1 then goto L3b48f8;
  #L3b48f2.  v4:= v4 + 2;
  #L3b48f6.  goto L3b48fa;
  #L3b48f8.  v4:= v4 + v5 @kind int;
  #L3b48fa.  call `a`(v2, v3, v4, v0) @signature `Lcom/mastercard/api/payment/cld/CLD;.a:([BII)V` @kind direct;
  #L3b4900.  return @kind void;
  #L3b4902.  v3:= new `com.mastercard.api.utils.tlv.ParsingException`;
  #L3b4906.  call `<init>`(v3) @signature `Lcom/mastercard/api/utils/tlv/ParsingException;.<init>:()V` @kind direct;
  #L3b490c.  throw v3;
}
procedure `void` `a`(`com.mastercard.api.payment.cld.CLD` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/mastercard/api/payment/cld/CLD;.a:([BII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3b4994.  v0:= new `com.mastercard.api.payment.cld.CLDTLVHandler`;
  #L3b4998.  call `<init>`(v0) @signature `Lcom/mastercard/api/payment/cld/CLDTLVHandler;.<init>:()V` @kind direct;
  #L3b499e.  v1:= 1I;
  #L3b49a0.  call `setVersionToParse`(v0, v1) @signature `Lcom/mastercard/api/payment/cld/CLDTLVHandler;.setVersionToParse:(Z)V` @kind virtual;
  #L3b49a6.  call `setFrontSideToParse`(v0, v1) @signature `Lcom/mastercard/api/payment/cld/CLDTLVHandler;.setFrontSideToParse:(Z)V` @kind virtual;
  #L3b49ac.  call `parseTLV`(v3, v4, v5, v0) @signature `Lcom/mastercard/api/utils/tlv/TLVParser;.parseTLV:([BIILcom/mastercard/api/utils/tlv/TLVHandler;)V` @kind static;
  #L3b49b2.  call temp:= `isVersionToParse`(v0) @signature `Lcom/mastercard/api/payment/cld/CLDTLVHandler;.isVersionToParse:()Z` @kind virtual;
  #L3b49b8.  v4:= temp;
  #L3b49ba.  if v4 != 0 then goto L3b4a0e;
  #L3b49be.  call temp:= `getVersion`(v0) @signature `Lcom/mastercard/api/payment/cld/CLDTLVHandler;.getVersion:()B` @kind virtual;
  #L3b49c4.  v4:= temp;
  #L3b49c6.  v2.`com.mastercard.api.payment.cld.CLD.a` @type ^`byte` := v4 @kind byte;
  #L3b49ca.  call temp:= `getFormFactor`(v0) @signature `Lcom/mastercard/api/payment/cld/CLDTLVHandler;.getFormFactor:()B` @kind virtual;
  #L3b49d0.  v4:= temp;
  #L3b49d2.  v2.`com.mastercard.api.payment.cld.CLD.b` @type ^`byte` := v4 @kind byte;
  #L3b49d6.  call temp:= `isFrontSideToParse`(v0) @signature `Lcom/mastercard/api/payment/cld/CLDTLVHandler;.isFrontSideToParse:()Z` @kind virtual;
  #L3b49dc.  v4:= temp;
  #L3b49de.  if v4 != 0 then goto L3b4a02;
  #L3b49e2.  call temp:= `getFrontSide`(v0) @signature `Lcom/mastercard/api/payment/cld/CLDTLVHandler;.getFrontSide:()Lcom/mastercard/api/payment/cld/CardSide;` @kind virtual;
  #L3b49e8.  v4:= temp @kind object;
  #L3b49ea.  v2.`com.mastercard.api.payment.cld.CLD.c` @type ^`com.mastercard.api.payment.cld.CardSide` := v4 @kind object;
  #L3b49ee.  call temp:= `getBackSide`(v0) @signature `Lcom/mastercard/api/payment/cld/CLDTLVHandler;.getBackSide:()Lcom/mastercard/api/payment/cld/CardSide;` @kind virtual;
  #L3b49f4.  v4:= temp @kind object;
  #L3b49f6.  v2.`com.mastercard.api.payment.cld.CLD.d` @type ^`com.mastercard.api.payment.cld.CardSide` := v4 @kind object;
  #L3b49fa.  call `clearByteArray`(v3) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:([B)V` @kind static;
  #L3b4a00.  return @kind void;
  #L3b4a02.  v3:= new `com.mastercard.api.utils.tlv.ParsingException`;
  #L3b4a06.  call `<init>`(v3) @signature `Lcom/mastercard/api/utils/tlv/ParsingException;.<init>:()V` @kind direct;
  #L3b4a0c.  throw v3;
  #L3b4a0e.  v3:= new `com.mastercard.api.utils.tlv.ParsingException`;
  #L3b4a12.  call `<init>`(v3) @signature `Lcom/mastercard/api/utils/tlv/ParsingException;.<init>:()V` @kind direct;
  #L3b4a18.  throw v3;
}
procedure `void` `clear`(`com.mastercard.api.payment.cld.CLD` v1 @kind this) @signature `Lcom/mastercard/api/payment/cld/CLD;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b4964.  v0:= v1.`com.mastercard.api.payment.cld.CLD.c` @type ^`com.mastercard.api.payment.cld.CardSide` @kind object;
  #L3b4968.  if v0 == 0 then goto L3b4972;
  #L3b496c.  call `clear`(v0) @signature `Lcom/mastercard/api/payment/cld/CardSide;.clear:()V` @kind virtual;
  #L3b4972.  v0:= v1.`com.mastercard.api.payment.cld.CLD.d` @type ^`com.mastercard.api.payment.cld.CardSide` @kind object;
  #L3b4976.  if v0 == 0 then goto L3b4980;
  #L3b497a.  call `clear`(v0) @signature `Lcom/mastercard/api/payment/cld/CardSide;.clear:()V` @kind virtual;
  #L3b4980.  return @kind void;
}
procedure `com.mastercard.api.payment.cld.CardSide` `getBackSide`(`com.mastercard.api.payment.cld.CLD` v1 @kind this) @signature `Lcom/mastercard/api/payment/cld/CLD;.getBackSide:()Lcom/mastercard/api/payment/cld/CardSide;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b4848.  v0:= v1.`com.mastercard.api.payment.cld.CLD.d` @type ^`com.mastercard.api.payment.cld.CardSide` @kind object;
  #L3b484c.  return v0 @kind object;
}
procedure `byte` `getFormFactor`(`com.mastercard.api.payment.cld.CLD` v1 @kind this) @signature `Lcom/mastercard/api/payment/cld/CLD;.getFormFactor:()B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b4818.  v0:= v1.`com.mastercard.api.payment.cld.CLD.b` @type ^`byte` @kind byte;
  #L3b481c.  return v0;
}
procedure `com.mastercard.api.payment.cld.CardSide` `getFrontSide`(`com.mastercard.api.payment.cld.CLD` v1 @kind this) @signature `Lcom/mastercard/api/payment/cld/CLD;.getFrontSide:()Lcom/mastercard/api/payment/cld/CardSide;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b4860.  v0:= v1.`com.mastercard.api.payment.cld.CLD.c` @type ^`com.mastercard.api.payment.cld.CardSide` @kind object;
  #L3b4864.  return v0 @kind object;
}
procedure `byte` `getVersion`(`com.mastercard.api.payment.cld.CLD` v1 @kind this) @signature `Lcom/mastercard/api/payment/cld/CLD;.getVersion:()B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b4830.  v0:= v1.`com.mastercard.api.payment.cld.CLD.a` @type ^`byte` @kind byte;
  #L3b4834.  return v0;
}
procedure `void` `setBackSide`(`com.mastercard.api.payment.cld.CLD` v0 @kind this, `com.mastercard.api.payment.cld.CardSide` v1 @kind object) @signature `Lcom/mastercard/api/payment/cld/CLD;.setBackSide:(Lcom/mastercard/api/payment/cld/CardSide;)V` @AccessFlag PUBLIC {
    temp;

  #L3b4a2c.  v0.`com.mastercard.api.payment.cld.CLD.d` @type ^`com.mastercard.api.payment.cld.CardSide` := v1 @kind object;
  #L3b4a30.  return @kind void;
}
