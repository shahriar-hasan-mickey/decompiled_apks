record `com.mastercard.api.crypto.AndroidMCBPCryptoService` @kind class @AccessFlag PUBLIC extends `com.mastercard.api.crypto.MCBPCryptoService` @kind class {
}
global `javax.crypto.Cipher` `@@com.mastercard.api.crypto.AndroidMCBPCryptoService.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L3b2e68.  return @kind void;
}
procedure `void` `<init>`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v0 @kind this) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b2e7c.  call `<init>`(v0) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.<init>:()V` @kind direct;
  #L3b2e82.  return @kind void;
}
procedure `byte`[] `a`(`byte`[] v4 @kind object, `int` v5 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.a:([BI[BII)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b231c.  v0:= new `byte`[v8];
  #L3b2320.  v1:= 0I;
  #L3b2322.  if v1 >= v8 then goto L3b2344;
  #L3b2326.  v2:= v1 + v5 @kind int;
  #L3b232a.  v2:= v4[v2] @kind byte;
  #L3b232e.  v3:= v1 + v7 @kind int;
  #L3b2332.  v3:= v6[v3] @kind byte;
  #L3b2336.  v2:= v2 ^~ v3 @kind int;
  #L3b2338.  v2:= (`byte`) v2 @kind i2b;
  #L3b233a.  v0[v1]:= v2 @kind byte;
  #L3b233e.  v1:= v1 + 1;
  #L3b2342.  goto L3b2322;
  #L3b2344.  return v0 @kind object;
}
procedure `void` `b`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v2 @kind this, `java.security.interfaces.RSAPrivateKey` v3 @kind object) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.b:(Ljava/security/interfaces/RSAPrivateKey;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3b2f00.  v0:= "RSA" @kind object;
  #L3b2f04.  call temp:= `getInstance`(v0) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L3b2f0a.  v0:= temp @kind object;
  #L3b2f0c.  `@@com.mastercard.api.crypto.AndroidMCBPCryptoService.b` @type ^`javax.crypto.Cipher` := v0 @kind object;
  #L3b2f10.  v1:= 1I;
  #L3b2f12.  call `init`(v0, v1, v3) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L3b2f18.  return @kind void;
  #L3b2f1a.  v3:= Exception @type ^`java.security.InvalidKeyException` @kind object;
  #L3b2f1c.  call `printStackTrace`(v3) @signature `Lcom/mastercard/api/utils/logs/Logger;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L3b2f22.  v3:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2f26.  call `<init>`(v3) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:()V` @kind direct;
  #L3b2f2c.  throw v3;
  #L3b2f2e.  v3:= Exception @type ^`javax.crypto.NoSuchPaddingException` @kind object;
  #L3b2f30.  call `printStackTrace`(v3) @signature `Lcom/mastercard/api/utils/logs/Logger;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L3b2f36.  v3:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2f3a.  call `<init>`(v3) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:()V` @kind direct;
  #L3b2f40.  throw v3;
  #L3b2f42.  v3:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L3b2f44.  call `printStackTrace`(v3) @signature `Lcom/mastercard/api/utils/logs/Logger;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L3b2f4a.  v3:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2f4e.  call `<init>`(v3) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:()V` @kind direct;
  #L3b2f54.  throw v3;
  catch `java.security.NoSuchAlgorithmException` @[L3b2f00..L3b2f18] goto L3b2f42;
  catch `javax.crypto.NoSuchPaddingException` @[L3b2f00..L3b2f18] goto L3b2f2e;
  catch `java.security.InvalidKeyException` @[L3b2f00..L3b2f18] goto L3b2f1a;
}
procedure `com.mastercard.api.bytes.ByteArray` `AES`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v3 @kind this, `com.mastercard.api.bytes.ByteArray` v4 @kind object, `com.mastercard.api.bytes.ByteArray` v5 @kind object, `boolean` v6 ) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.AES:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Z)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b2358.  v0:= new `javax.crypto.spec.SecretKeySpec`;
  #L3b235c.  call temp:= `getBytes`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b2362.  v1:= temp @kind object;
  #L3b2364.  v2:= "AES" @kind object;
  #L3b2368.  call `<init>`(v0, v1, v2) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L3b236e.  v1:= "AES/ECB/NoPadding" @kind object;
  #L3b2372.  call temp:= `getInstance`(v1) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L3b2378.  v1:= temp @kind object;
  #L3b237a.  if v6 == 0 then goto L3b2388;
  #L3b237e.  v6:= 1I;
  #L3b2380.  call `init`(v1, v6, v0) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L3b2386.  goto L3b2390;
  #L3b2388.  v6:= 2I;
  #L3b238a.  call `init`(v1, v6, v0) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L3b2390.  call temp:= `getBytes`(v4) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b2396.  v4:= temp @kind object;
  #L3b2398.  call temp:= `doFinal`(v1, v4) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L3b239e.  v4:= temp @kind object;
  #L3b23a0.  v6:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b23a4.  call `<init>`(v6, v4) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b23aa.  call `clearByteArray`(v5) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3b23b0.  return v6 @kind object;
  #L3b23b2.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b23b4.  goto L3b2424;
  #L3b23b6.  v4:= Exception @type ^`javax.crypto.IllegalBlockSizeException` @kind object;
  #L3b23b8.  v6:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b23bc.  call temp:= `toString`(v4) @signature `Ljavax/crypto/IllegalBlockSizeException;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b23c2.  v4:= temp @kind object;
  #L3b23c4.  call `<init>`(v6, v4) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b23ca.  throw v6;
  #L3b23cc.  v4:= Exception @type ^`javax.crypto.BadPaddingException` @kind object;
  #L3b23ce.  v6:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b23d2.  call temp:= `toString`(v4) @signature `Ljavax/crypto/BadPaddingException;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b23d8.  v4:= temp @kind object;
  #L3b23da.  call `<init>`(v6, v4) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b23e0.  throw v6;
  #L3b23e2.  v4:= Exception @type ^`java.security.InvalidKeyException` @kind object;
  #L3b23e4.  v6:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b23e8.  call temp:= `toString`(v4) @signature `Ljava/security/InvalidKeyException;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b23ee.  v4:= temp @kind object;
  #L3b23f0.  call `<init>`(v6, v4) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b23f6.  throw v6;
  #L3b23f8.  v4:= Exception @type ^`javax.crypto.NoSuchPaddingException` @kind object;
  #L3b23fa.  v6:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b23fe.  call temp:= `toString`(v4) @signature `Ljavax/crypto/NoSuchPaddingException;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b2404.  v4:= temp @kind object;
  #L3b2406.  call `<init>`(v6, v4) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b240c.  throw v6;
  #L3b240e.  v4:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L3b2410.  v6:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2414.  call temp:= `toString`(v4) @signature `Ljava/security/NoSuchAlgorithmException;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b241a.  v4:= temp @kind object;
  #L3b241c.  call `<init>`(v6, v4) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b2422.  throw v6;
  #L3b2424.  call `clearByteArray`(v5) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3b242a.  throw v4;
  catch `java.security.NoSuchAlgorithmException` @[L3b236e..L3b23aa] goto L3b240e;
  catch `javax.crypto.NoSuchPaddingException` @[L3b236e..L3b23aa] goto L3b23f8;
  catch `java.security.InvalidKeyException` @[L3b236e..L3b23aa] goto L3b23e2;
  catch `javax.crypto.BadPaddingException` @[L3b236e..L3b23aa] goto L3b23cc;
  catch `javax.crypto.IllegalBlockSizeException` @[L3b236e..L3b23aa] goto L3b23b6;
  catch `java.lang.Throwable` @[L3b236e..L3b23aa] goto L3b23b2;
  catch `java.lang.Throwable` @[L3b23b8..L3b2424] goto L3b23b2;
}
procedure `com.mastercard.api.bytes.ByteArray` `AESCBCMAC`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v8 @kind this, `com.mastercard.api.bytes.ByteArray` v9 @kind object, `com.mastercard.api.bytes.ByteArray` v10 @kind object) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.AESCBCMAC:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3b2460.  call temp:= `getBytes`(v9) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b2466.  v0:= temp @kind object;
  #L3b2468.  call temp:= `getLength`(v9) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b246e.  v9:= temp;
  #L3b2470.  v1:= v9 %% 16;
  #L3b2474.  v2:= 16I;
  #L3b2478.  v1:= v1 - 16;
  #L3b247c.  v1:= v1 + v9 @kind int;
  #L3b247e.  v3:= new `byte`[v1];
  #L3b2482.  v4:= 0I;
  #L3b2484.  v5:= 0I;
  #L3b2486.  if v5 >= v9 then goto L3b2498;
  #L3b248a.  v6:= v0[v5] @kind byte;
  #L3b248e.  v3[v5]:= v6 @kind byte;
  #L3b2492.  v5:= v5 + 1;
  #L3b2496.  goto L3b2486;
  #L3b2498.  v0:= v9;
  #L3b249a.  if v0 >= v1 then goto L3b24b6;
  #L3b249e.  if v0 != v9 then goto L3b24ac;
  #L3b24a2.  v5:= -128I;
  #L3b24a6.  v3[v0]:= v5 @kind byte;
  #L3b24aa.  goto L3b24b0;
  #L3b24ac.  v3[v0]:= v4 @kind byte;
  #L3b24b0.  v0:= v0 + 1;
  #L3b24b4.  goto L3b249a;
  #L3b24b6.  v9:= new `javax.crypto.spec.SecretKeySpec`;
  #L3b24ba.  call temp:= `getBytes`(v10) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b24c0.  v10:= temp @kind object;
  #L3b24c2.  v0:= "AES" @kind object;
  #L3b24c6.  call `<init>`(v9, v10, v0) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L3b24cc.  v10:= new `byte`[v2];
  #L3b24d0.  v10[v4]:= v4 @kind byte;
  #L3b24d4.  v0:= 1I;
  #L3b24d6.  v10[v0]:= v4 @kind byte;
  #L3b24da.  v5:= 2I;
  #L3b24dc.  v10[v5]:= v4 @kind byte;
  #L3b24e0.  v5:= 3I;
  #L3b24e2.  v10[v5]:= v4 @kind byte;
  #L3b24e6.  v5:= 4I;
  #L3b24e8.  v10[v5]:= v4 @kind byte;
  #L3b24ec.  v5:= 5I;
  #L3b24ee.  v10[v5]:= v4 @kind byte;
  #L3b24f2.  v5:= 6I;
  #L3b24f4.  v10[v5]:= v4 @kind byte;
  #L3b24f8.  v5:= 7I;
  #L3b24fa.  v10[v5]:= v4 @kind byte;
  #L3b24fe.  v5:= 8I;
  #L3b2502.  v10[v5]:= v4 @kind byte;
  #L3b2506.  v6:= 9I;
  #L3b250a.  v10[v6]:= v4 @kind byte;
  #L3b250e.  v6:= 10I;
  #L3b2512.  v10[v6]:= v4 @kind byte;
  #L3b2516.  v6:= 11I;
  #L3b251a.  v10[v6]:= v4 @kind byte;
  #L3b251e.  v6:= 12I;
  #L3b2522.  v10[v6]:= v4 @kind byte;
  #L3b2526.  v6:= 13I;
  #L3b252a.  v10[v6]:= v4 @kind byte;
  #L3b252e.  v6:= 14I;
  #L3b2532.  v10[v6]:= v4 @kind byte;
  #L3b2536.  v6:= 15I;
  #L3b253a.  v10[v6]:= v4 @kind byte;
  #L3b253e.  v6:= "AES/CBC/NoPadding" @kind object;
  #L3b2542.  call temp:= `getInstance`(v6) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L3b2548.  v6:= temp @kind object;
  #L3b254a.  v7:= new `javax.crypto.spec.IvParameterSpec`;
  #L3b254e.  call `<init>`(v7, v10) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L3b2554.  call `init`(v6, v0, v9, v7) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L3b255a.  v9:= 0I;
  #L3b255c.  v0:= v1 / 16;
  #L3b2560.  if v9 >= v0 then goto L3b257e;
  #L3b2564.  v0:= v9 * 16;
  #L3b2568.  call temp:= `a`(v3, v0, v10, v4, v2) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.a:([BI[BII)[B` @kind static;
  #L3b256e.  v10:= temp @kind object;
  #L3b2570.  call temp:= `doFinal`(v6, v10) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L3b2576.  v10:= temp @kind object;
  #L3b2578.  v9:= v9 + 1;
  #L3b257c.  goto L3b255c;
  #L3b257e.  v9:= new `byte`[v5];
  #L3b2582.  call `arraycopy`(v10, v4, v9, v4, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b2588.  v10:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b258c.  call `<init>`(v10, v9) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b2592.  return v10 @kind object;
  #L3b2594.  v9:= Exception @type ^`java.lang.Exception` @kind object;
  #L3b2596.  v10:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b259a.  call temp:= `toString`(v9) @signature `Ljava/lang/Exception;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b25a0.  v9:= temp @kind object;
  #L3b25a2.  call `<init>`(v10, v9) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b25a8.  throw v10;
  catch `java.lang.Exception` @[L3b2460..L3b2592] goto L3b2594;
}
procedure `com.mastercard.api.bytes.ByteArray` `DES`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v2 @kind this, `com.mastercard.api.bytes.ByteArray` v3 @kind object, `com.mastercard.api.bytes.ByteArray` v4 @kind object, `boolean` v5 ) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.DES:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Z)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b25cc.  v0:= new `javax.crypto.spec.SecretKeySpec`;
  #L3b25d0.  call temp:= `getBytes`(v4) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b25d6.  v4:= temp @kind object;
  #L3b25d8.  v1:= "DES" @kind object;
  #L3b25dc.  call `<init>`(v0, v4, v1) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L3b25e2.  v4:= "DES/ECB/noPadding" @kind object;
  #L3b25e6.  call temp:= `getInstance`(v4) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L3b25ec.  v4:= temp @kind object;
  #L3b25ee.  if v5 == 0 then goto L3b25fc;
  #L3b25f2.  v5:= 1I;
  #L3b25f4.  call `init`(v4, v5, v0) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L3b25fa.  goto L3b2604;
  #L3b25fc.  v5:= 2I;
  #L3b25fe.  call `init`(v4, v5, v0) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L3b2604.  call temp:= `getBytes`(v3) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b260a.  v3:= temp @kind object;
  #L3b260c.  call temp:= `doFinal`(v4, v3) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L3b2612.  v3:= temp @kind object;
  #L3b2614.  v4:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b2618.  call `<init>`(v4, v3) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b261e.  return v4 @kind object;
  #L3b2620.  v3:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2624.  call `<init>`(v3) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:()V` @kind direct;
  #L3b262a.  throw v3;
  catch `java.security.NoSuchAlgorithmException` @[L3b25e2..L3b261e] goto L3b2620;
  catch `javax.crypto.NoSuchPaddingException` @[L3b25e2..L3b261e] goto L3b2620;
  catch `javax.crypto.IllegalBlockSizeException` @[L3b25e2..L3b261e] goto L3b2620;
  catch `javax.crypto.BadPaddingException` @[L3b25e2..L3b261e] goto L3b2620;
  catch `java.security.InvalidKeyException` @[L3b25e2..L3b261e] goto L3b2620;
}
procedure `com.mastercard.api.bytes.ByteArray` `DES3`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v4 @kind this, `com.mastercard.api.bytes.ByteArray` v5 @kind object, `com.mastercard.api.bytes.ByteArray` v6 @kind object, `boolean` v7 ) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.DES3:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Z)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b2658.  v0:= new `javax.crypto.spec.SecretKeySpec`;
  #L3b265c.  call temp:= `getBytes`(v6) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b2662.  v1:= temp @kind object;
  #L3b2664.  v2:= "DESede" @kind object;
  #L3b2668.  call `<init>`(v0, v1, v2) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L3b266e.  v1:= "DESede/CBC/noPadding" @kind object;
  #L3b2672.  v2:= "BC" @kind object;
  #L3b2676.  call temp:= `getInstance`(v1, v2) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L3b267c.  v1:= temp @kind object;
  #L3b267e.  v2:= new `javax.crypto.spec.IvParameterSpec`;
  #L3b2682.  v3:= 8I;
  #L3b2686.  v3:= new `byte`[v3];
  #L3b268a.  call `<init>`(v2, v3) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L3b2690.  if v7 == 0 then goto L3b269e;
  #L3b2694.  v7:= 1I;
  #L3b2696.  call `init`(v1, v7, v0, v2) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L3b269c.  goto L3b26a6;
  #L3b269e.  v7:= 2I;
  #L3b26a0.  call `init`(v1, v7, v0, v2) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L3b26a6.  v7:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b26aa.  call temp:= `getBytes`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b26b0.  v5:= temp @kind object;
  #L3b26b2.  call temp:= `doFinal`(v1, v5) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L3b26b8.  v5:= temp @kind object;
  #L3b26ba.  call `<init>`(v7, v5) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b26c0.  call `clearByteArray`(v6) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3b26c6.  return v7 @kind object;
  #L3b26c8.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b26ca.  goto L3b2730;
  #L3b26cc.  v5:= Exception @type ^`java.security.NoSuchProviderException` @kind object;
  #L3b26ce.  call temp:= `getMessage`(v5) @signature `Ljava/security/NoSuchProviderException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b26d4.  v5:= temp @kind object;
  #L3b26d6.  goto L3b271e;
  #L3b26d8.  v5:= Exception @type ^`java.security.InvalidKeyException` @kind object;
  #L3b26da.  call temp:= `getMessage`(v5) @signature `Ljava/security/InvalidKeyException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b26e0.  v5:= temp @kind object;
  #L3b26e2.  goto L3b271e;
  #L3b26e4.  v5:= Exception @type ^`java.security.InvalidAlgorithmParameterException` @kind object;
  #L3b26e6.  call temp:= `getMessage`(v5) @signature `Ljava/security/InvalidAlgorithmParameterException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b26ec.  v5:= temp @kind object;
  #L3b26ee.  goto L3b271e;
  #L3b26f0.  v5:= Exception @type ^`javax.crypto.BadPaddingException` @kind object;
  #L3b26f2.  call temp:= `getMessage`(v5) @signature `Ljavax/crypto/BadPaddingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b26f8.  v5:= temp @kind object;
  #L3b26fa.  goto L3b271e;
  #L3b26fc.  v5:= Exception @type ^`javax.crypto.IllegalBlockSizeException` @kind object;
  #L3b26fe.  call temp:= `getMessage`(v5) @signature `Ljavax/crypto/IllegalBlockSizeException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b2704.  v5:= temp @kind object;
  #L3b2706.  goto L3b271e;
  #L3b2708.  v5:= Exception @type ^`javax.crypto.NoSuchPaddingException` @kind object;
  #L3b270a.  call temp:= `getMessage`(v5) @signature `Ljavax/crypto/NoSuchPaddingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b2710.  v5:= temp @kind object;
  #L3b2712.  goto L3b271e;
  #L3b2714.  v5:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L3b2716.  call temp:= `getMessage`(v5) @signature `Ljava/security/NoSuchAlgorithmException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b271c.  v5:= temp @kind object;
  #L3b271e.  call `clearByteArray`(v6) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3b2724.  v6:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2728.  call `<init>`(v6, v5) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b272e.  throw v6;
  #L3b2730.  call `clearByteArray`(v6) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3b2736.  throw v5;
  catch `java.security.NoSuchAlgorithmException` @[L3b266e..L3b26c0] goto L3b2714;
  catch `javax.crypto.NoSuchPaddingException` @[L3b266e..L3b26c0] goto L3b2708;
  catch `javax.crypto.IllegalBlockSizeException` @[L3b266e..L3b26c0] goto L3b26fc;
  catch `javax.crypto.BadPaddingException` @[L3b266e..L3b26c0] goto L3b26f0;
  catch `java.security.InvalidAlgorithmParameterException` @[L3b266e..L3b26c0] goto L3b26e4;
  catch `java.security.InvalidKeyException` @[L3b266e..L3b26c0] goto L3b26d8;
  catch `java.security.NoSuchProviderException` @[L3b266e..L3b26c0] goto L3b26cc;
  catch `java.lang.Throwable` @[L3b266e..L3b26c0] goto L3b26c8;
  catch `java.lang.Throwable` @[L3b26ce..L3b271e] goto L3b26c8;
}
procedure `com.mastercard.api.bytes.ByteArray` `DESCBC`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v3 @kind this, `com.mastercard.api.bytes.ByteArray` v4 @kind object, `com.mastercard.api.bytes.ByteArray` v5 @kind object, `boolean` v6 ) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.DESCBC:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Z)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b2774.  v0:= "DES" @kind object;
  #L3b2778.  call temp:= `getInstance`(v0) @signature `Ljavax/crypto/SecretKeyFactory;.getInstance:(Ljava/lang/String;)Ljavax/crypto/SecretKeyFactory;` @kind static;
  #L3b277e.  v0:= temp @kind object;
  #L3b2780.  v1:= new `javax.crypto.spec.DESKeySpec`;
  #L3b2784.  call temp:= `getBytes`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b278a.  v5:= temp @kind object;
  #L3b278c.  call `<init>`(v1, v5) @signature `Ljavax/crypto/spec/DESKeySpec;.<init>:([B)V` @kind direct;
  #L3b2792.  call temp:= `generateSecret`(v0, v1) @signature `Ljavax/crypto/SecretKeyFactory;.generateSecret:(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;` @kind virtual;
  #L3b2798.  v5:= temp @kind object;
  #L3b279a.  v0:= "DES/CBC/noPadding" @kind object;
  #L3b279e.  call temp:= `getInstance`(v0) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L3b27a4.  v0:= temp @kind object;
  #L3b27a6.  v1:= new `javax.crypto.spec.IvParameterSpec`;
  #L3b27aa.  v2:= 8I;
  #L3b27ae.  v2:= new `byte`[v2];
  #L3b27b2.  call `<init>`(v1, v2) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L3b27b8.  if v6 == 0 then goto L3b27c6;
  #L3b27bc.  v6:= 1I;
  #L3b27be.  call `init`(v0, v6, v5, v1) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L3b27c4.  goto L3b27ce;
  #L3b27c6.  v6:= 2I;
  #L3b27c8.  call `init`(v0, v6, v5, v1) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L3b27ce.  v5:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b27d2.  call temp:= `getBytes`(v4) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b27d8.  v4:= temp @kind object;
  #L3b27da.  call temp:= `doFinal`(v0, v4) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L3b27e0.  v4:= temp @kind object;
  #L3b27e2.  call `<init>`(v5, v4) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b27e8.  return v5 @kind object;
  #L3b27ea.  v4:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b27ee.  call `<init>`(v4) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:()V` @kind direct;
  #L3b27f4.  throw v4;
  catch `java.security.spec.InvalidKeySpecException` @[L3b2774..L3b27e8] goto L3b27ea;
  catch `java.security.NoSuchAlgorithmException` @[L3b2774..L3b27e8] goto L3b27ea;
  catch `java.security.InvalidKeyException` @[L3b2774..L3b27e8] goto L3b27ea;
  catch `javax.crypto.IllegalBlockSizeException` @[L3b2774..L3b27e8] goto L3b27ea;
  catch `javax.crypto.BadPaddingException` @[L3b2774..L3b27e8] goto L3b27ea;
  catch `java.security.InvalidAlgorithmParameterException` @[L3b2774..L3b27e8] goto L3b27ea;
  catch `javax.crypto.NoSuchPaddingException` @[L3b2774..L3b27e8] goto L3b27ea;
}
procedure `com.mastercard.api.bytes.ByteArray` `RSA`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v2 @kind this, `com.mastercard.api.bytes.ByteArray` v3 @kind object) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.RSA:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b2828.  v0:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b282c.  v1:= `@@com.mastercard.api.crypto.AndroidMCBPCryptoService.b` @type ^`javax.crypto.Cipher` @kind object;
  #L3b2830.  call temp:= `getBytes`(v3) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b2836.  v3:= temp @kind object;
  #L3b2838.  call temp:= `doFinal`(v1, v3) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L3b283e.  v3:= temp @kind object;
  #L3b2840.  call `<init>`(v0, v3) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b2846.  return v0 @kind object;
  #L3b2848.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b284a.  goto L3b2874;
  #L3b284c.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L3b284e.  call `printStackTrace`(v3) @signature `Lcom/mastercard/api/utils/logs/Logger;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L3b2854.  goto L3b2868;
  #L3b2856.  v3:= Exception @type ^`javax.crypto.BadPaddingException` @kind object;
  #L3b2858.  call `printStackTrace`(v3) @signature `Lcom/mastercard/api/utils/logs/Logger;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L3b285e.  goto L3b2868;
  #L3b2860.  v3:= Exception @type ^`javax.crypto.IllegalBlockSizeException` @kind object;
  #L3b2862.  call `printStackTrace`(v3) @signature `Lcom/mastercard/api/utils/logs/Logger;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L3b2868.  v3:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b286c.  call `<init>`(v3) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:()V` @kind direct;
  #L3b2872.  throw v3;
  #L3b2874.  throw v3;
  catch `javax.crypto.IllegalBlockSizeException` @[L3b2828..L3b2846] goto L3b2860;
  catch `javax.crypto.BadPaddingException` @[L3b2828..L3b2846] goto L3b2856;
  catch `java.lang.Exception` @[L3b2828..L3b2846] goto L3b284c;
  catch `java.lang.Throwable` @[L3b2828..L3b2846] goto L3b2848;
  catch `java.lang.Throwable` @[L3b284e..L3b2868] goto L3b2848;
}
procedure `com.mastercard.api.bytes.ByteArray` `SHA1`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v1 @kind this, `com.mastercard.api.bytes.ByteArray` v2 @kind object) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.SHA1:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b28a8.  v0:= "SHA-1" @kind object;
  #L3b28ac.  call temp:= `getInstance`(v0) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L3b28b2.  v0:= temp @kind object;
  #L3b28b4.  call temp:= `getBytes`(v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b28ba.  v2:= temp @kind object;
  #L3b28bc.  call `update`(v0, v2) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L3b28c2.  v2:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b28c6.  call temp:= `digest`(v0) @signature `Ljava/security/MessageDigest;.digest:()[B` @kind virtual;
  #L3b28cc.  v0:= temp @kind object;
  #L3b28ce.  call `<init>`(v2, v0) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b28d4.  return v2 @kind object;
  #L3b28d6.  v2:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b28da.  call `<init>`(v2) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:()V` @kind direct;
  #L3b28e0.  throw v2;
  catch `java.security.NoSuchAlgorithmException` @[L3b28a8..L3b28d4] goto L3b28d6;
}
procedure `com.mastercard.api.bytes.ByteArray` `SHA256`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v3 @kind this, `com.mastercard.api.bytes.ByteArray` v4 @kind object) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.SHA256:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b2904.  v0:= "SHA-256" @kind object;
  #L3b2908.  call temp:= `getInstance`(v0) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L3b290e.  v0:= temp @kind object;
  #L3b2910.  v1:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b2914.  call temp:= `getBytes`(v4) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b291a.  v2:= temp @kind object;
  #L3b291c.  call temp:= `digest`(v0, v2) @signature `Ljava/security/MessageDigest;.digest:([B)[B` @kind virtual;
  #L3b2922.  v0:= temp @kind object;
  #L3b2924.  call `<init>`(v1, v0) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b292a.  call `clearByteArray`(v4) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3b2930.  return v1 @kind object;
  #L3b2932.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b2934.  call `clearByteArray`(v4) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3b293a.  throw v0;
  #L3b293c.  call `clearByteArray`(v4) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3b2942.  v4:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2946.  call `<init>`(v4) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:()V` @kind direct;
  #L3b294c.  throw v4;
  catch `java.security.NoSuchAlgorithmException` @[L3b2904..L3b292a] goto L3b293c;
  catch `java.lang.Throwable` @[L3b2904..L3b292a] goto L3b2932;
}
procedure `void` `clearRSAKey`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v1 @kind this, `int` v2 ) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.clearRSAKey:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2e94.  if v2 != 0 then goto L3b2e9c;
  #L3b2e98.  v2:= 768I;
  #L3b2e9c.  v0:= "RSA" @kind object;
  #L3b2ea0.  call temp:= `getInstance`(v0) @signature `Ljava/security/KeyPairGenerator;.getInstance:(Ljava/lang/String;)Ljava/security/KeyPairGenerator;` @kind static;
  #L3b2ea6.  v0:= temp @kind object;
  #L3b2ea8.  call `initialize`(v0, v2) @signature `Ljava/security/KeyPairGenerator;.initialize:(I)V` @kind virtual;
  #L3b2eae.  call temp:= `genKeyPair`(v0) @signature `Ljava/security/KeyPairGenerator;.genKeyPair:()Ljava/security/KeyPair;` @kind virtual;
  #L3b2eb4.  v2:= temp @kind object;
  #L3b2eb6.  call temp:= `getPrivate`(v2) @signature `Ljava/security/KeyPair;.getPrivate:()Ljava/security/PrivateKey;` @kind virtual;
  #L3b2ebc.  v2:= temp @kind object;
  #L3b2ebe.  v2:= (`java.security.interfaces.RSAPrivateKey`) v2 @kind object;
  #L3b2ec2.  call `b`(v1, v2) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.b:(Ljava/security/interfaces/RSAPrivateKey;)V` @kind direct;
  #L3b2ec8.  goto L3b2edc;
  #L3b2eca.  v2:= Exception @type ^`com.mastercard.api.crypto.MMPPCryptoException` @kind object;
  #L3b2ecc.  call `printStackTrace`(v2) @signature `Lcom/mastercard/api/utils/logs/Logger;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L3b2ed2.  goto L3b2edc;
  #L3b2ed4.  v2:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L3b2ed6.  call `printStackTrace`(v2) @signature `Lcom/mastercard/api/utils/logs/Logger;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L3b2edc.  return @kind void;
  catch `java.security.NoSuchAlgorithmException` @[L3b2e9c..L3b2ec8] goto L3b2ed4;
  catch `com.mastercard.api.crypto.MMPPCryptoException` @[L3b2e9c..L3b2ec8] goto L3b2eca;
}
procedure `com.mastercard.api.bytes.ByteArray` `encryptDecryptUsingCTRMode`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v1 @kind this, `com.mastercard.api.bytes.ByteArray` v2 @kind object, `com.mastercard.api.bytes.ByteArray` v3 @kind object, `byte`[] v4 @kind object, `boolean` v5 , `boolean` v6 ) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.encryptDecryptUsingCTRMode:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;[BZZ)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2970.  v5:= new `javax.crypto.spec.SecretKeySpec`;
  #L3b2974.  call temp:= `getBytes`(v3) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b297a.  v3:= temp @kind object;
  #L3b297c.  v0:= "AES" @kind object;
  #L3b2980.  call `<init>`(v5, v3, v0) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L3b2986.  v3:= new `javax.crypto.spec.IvParameterSpec`;
  #L3b298a.  call `<init>`(v3, v4) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L3b2990.  v4:= "AES/CTR/NoPadding" @kind object;
  #L3b2994.  call temp:= `getInstance`(v4) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L3b299a.  v4:= temp @kind object;
  #L3b299c.  if v6 == 0 then goto L3b29aa;
  #L3b29a0.  v0:= 1I;
  #L3b29a2.  call `init`(v4, v0, v5, v3) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L3b29a8.  goto L3b29b2;
  #L3b29aa.  v0:= 2I;
  #L3b29ac.  call `init`(v4, v0, v5, v3) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L3b29b2.  if v6 == 0 then goto L3b29c8;
  #L3b29b6.  call temp:= `getBytes`(v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b29bc.  v2:= temp @kind object;
  #L3b29be.  call temp:= `doFinal`(v4, v2) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L3b29c4.  v2:= temp @kind object;
  #L3b29c6.  goto L3b29d8;
  #L3b29c8.  call temp:= `getBytes`(v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b29ce.  v2:= temp @kind object;
  #L3b29d0.  call temp:= `doFinal`(v4, v2) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L3b29d6.  v2:= temp @kind object;
  #L3b29d8.  v3:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b29dc.  call `<init>`(v3, v2) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b29e2.  return v3 @kind object;
  #L3b29e4.  v2:= Exception @type ^`javax.crypto.BadPaddingException` @kind object;
  #L3b29e6.  v3:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b29ea.  call temp:= `getMessage`(v2) @signature `Ljavax/crypto/BadPaddingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b29f0.  v2:= temp @kind object;
  #L3b29f2.  call `<init>`(v3, v2) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b29f8.  throw v3;
  #L3b29fa.  v2:= Exception @type ^`javax.crypto.IllegalBlockSizeException` @kind object;
  #L3b29fc.  v3:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2a00.  call temp:= `getMessage`(v2) @signature `Ljavax/crypto/IllegalBlockSizeException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b2a06.  v2:= temp @kind object;
  #L3b2a08.  call `<init>`(v3, v2) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b2a0e.  throw v3;
  #L3b2a10.  v2:= Exception @type ^`java.security.InvalidAlgorithmParameterException` @kind object;
  #L3b2a12.  v3:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2a16.  call temp:= `getMessage`(v2) @signature `Ljava/security/InvalidAlgorithmParameterException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b2a1c.  v2:= temp @kind object;
  #L3b2a1e.  call `<init>`(v3, v2) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b2a24.  throw v3;
  #L3b2a26.  v2:= Exception @type ^`java.security.InvalidKeyException` @kind object;
  #L3b2a28.  v3:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2a2c.  call temp:= `getMessage`(v2) @signature `Ljava/security/InvalidKeyException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b2a32.  v2:= temp @kind object;
  #L3b2a34.  call `<init>`(v3, v2) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b2a3a.  throw v3;
  #L3b2a3c.  v2:= Exception @type ^`javax.crypto.NoSuchPaddingException` @kind object;
  #L3b2a3e.  v3:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2a42.  call temp:= `getMessage`(v2) @signature `Ljavax/crypto/NoSuchPaddingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b2a48.  v2:= temp @kind object;
  #L3b2a4a.  call `<init>`(v3, v2) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b2a50.  throw v3;
  #L3b2a52.  v2:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L3b2a54.  v3:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2a58.  call temp:= `getMessage`(v2) @signature `Ljava/security/NoSuchAlgorithmException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b2a5e.  v2:= temp @kind object;
  #L3b2a60.  call `<init>`(v3, v2) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b2a66.  throw v3;
  catch `java.security.NoSuchAlgorithmException` @[L3b2990..L3b29e2] goto L3b2a52;
  catch `javax.crypto.NoSuchPaddingException` @[L3b2990..L3b29e2] goto L3b2a3c;
  catch `java.security.InvalidKeyException` @[L3b2990..L3b29e2] goto L3b2a26;
  catch `java.security.InvalidAlgorithmParameterException` @[L3b2990..L3b29e2] goto L3b2a10;
  catch `javax.crypto.IllegalBlockSizeException` @[L3b2990..L3b29e2] goto L3b29fa;
  catch `javax.crypto.BadPaddingException` @[L3b2990..L3b29e2] goto L3b29e4;
}
procedure `com.mastercard.api.bytes.ByteArray` `generateRandom`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v3 @kind this, `int` v4 ) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.generateRandom:(I)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b2a94.  v0:= new `byte`[v4];
  #L3b2a98.  v1:= "SHA1PRNG" @kind object;
  #L3b2a9c.  call temp:= `getInstance`(v1) @signature `Ljava/security/SecureRandom;.getInstance:(Ljava/lang/String;)Ljava/security/SecureRandom;` @kind static;
  #L3b2aa2.  v1:= temp @kind object;
  #L3b2aa4.  v2:= 1I;
  #L3b2aa6.  v2:= new `byte`[v2];
  #L3b2aaa.  call `nextBytes`(v1, v2) @signature `Ljava/security/SecureRandom;.nextBytes:([B)V` @kind virtual;
  #L3b2ab0.  call `nextBytes`(v1, v0) @signature `Ljava/security/SecureRandom;.nextBytes:([B)V` @kind virtual;
  #L3b2ab6.  goto L3b2ac8;
  #L3b2ab8.  v1:= new `java.security.SecureRandom`;
  #L3b2abc.  call `<init>`(v1) @signature `Ljava/security/SecureRandom;.<init>:()V` @kind direct;
  #L3b2ac2.  call `nextBytes`(v1, v0) @signature `Ljava/security/SecureRandom;.nextBytes:([B)V` @kind virtual;
  #L3b2ac8.  v1:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b2acc.  call `<init>`(v1, v0, v4) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([BI)V` @kind direct;
  #L3b2ad2.  return v1 @kind object;
  catch `java.security.NoSuchAlgorithmException` @[L3b2a98..L3b2ab6] goto L3b2ab8;
}
procedure `com.mastercard.api.bytes.ByteArray` `generateTruncatedHash`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v1 @kind this, `com.mastercard.api.bytes.ByteArray` v2 @kind object) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.generateTruncatedHash:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2af4.  v0:= "SHA-256" @kind object;
  #L3b2af8.  call temp:= `getInstance`(v0) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L3b2afe.  v0:= temp @kind object;
  #L3b2b00.  call temp:= `getBytes`(v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b2b06.  v2:= temp @kind object;
  #L3b2b08.  call temp:= `digest`(v0, v2) @signature `Ljava/security/MessageDigest;.digest:([B)[B` @kind virtual;
  #L3b2b0e.  v2:= temp @kind object;
  #L3b2b10.  goto L3b2b1c;
  #L3b2b12.  v2:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L3b2b14.  call `printStackTrace`(v2) @signature `Lcom/mastercard/api/utils/logs/Logger;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L3b2b1a.  v2:= 0I;
  #L3b2b1c.  v0:= new `com.mastercard.api.bytes.AndroidByteArray`;
  #L3b2b20.  call `<init>`(v0, v2) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:([B)V` @kind direct;
  #L3b2b26.  return v0 @kind object;
  catch `java.security.NoSuchAlgorithmException` @[L3b2af4..L3b2b10] goto L3b2b12;
}
procedure `int` `initRSAPrivateKey`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v9 @kind this, `com.mastercard.api.bytes.ByteArray` v10 @kind object, `com.mastercard.api.bytes.ByteArray` v11 @kind object, `com.mastercard.api.bytes.ByteArray` v12 @kind object, `com.mastercard.api.bytes.ByteArray` v13 @kind object, `com.mastercard.api.bytes.ByteArray` v14 @kind object) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.initRSAPrivateKey:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3b2cf8.  v4:= new `java.math.BigInteger`;
  #L3b2cfc.  call temp:= `getHexString`(v10) @signature `Lcom/mastercard/api/bytes/ByteArray;.getHexString:()Ljava/lang/String;` @kind interface;
  #L3b2d02.  v10:= temp @kind object;
  #L3b2d04.  v0:= 16I;
  #L3b2d08.  call `<init>`(v4, v10, v0) @signature `Ljava/math/BigInteger;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3b2d0e.  v5:= new `java.math.BigInteger`;
  #L3b2d12.  call temp:= `getHexString`(v11) @signature `Lcom/mastercard/api/bytes/ByteArray;.getHexString:()Ljava/lang/String;` @kind interface;
  #L3b2d18.  v10:= temp @kind object;
  #L3b2d1a.  call `<init>`(v5, v10, v0) @signature `Ljava/math/BigInteger;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3b2d20.  v6:= new `java.math.BigInteger`;
  #L3b2d24.  call temp:= `getHexString`(v12) @signature `Lcom/mastercard/api/bytes/ByteArray;.getHexString:()Ljava/lang/String;` @kind interface;
  #L3b2d2a.  v10:= temp @kind object;
  #L3b2d2c.  call `<init>`(v6, v10, v0) @signature `Ljava/math/BigInteger;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3b2d32.  v7:= new `java.math.BigInteger`;
  #L3b2d36.  call temp:= `getHexString`(v13) @signature `Lcom/mastercard/api/bytes/ByteArray;.getHexString:()Ljava/lang/String;` @kind interface;
  #L3b2d3c.  v10:= temp @kind object;
  #L3b2d3e.  call `<init>`(v7, v10, v0) @signature `Ljava/math/BigInteger;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3b2d44.  v8:= new `java.math.BigInteger`;
  #L3b2d48.  call temp:= `getHexString`(v14) @signature `Lcom/mastercard/api/bytes/ByteArray;.getHexString:()Ljava/lang/String;` @kind interface;
  #L3b2d4e.  v10:= temp @kind object;
  #L3b2d50.  call `<init>`(v8, v10, v0) @signature `Ljava/math/BigInteger;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3b2d56.  call temp:= `multiply`(v4, v5) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3b2d5c.  v10:= temp @kind object;
  #L3b2d5e.  v11:= `@@java.math.BigInteger.ONE` @type ^`java.math.BigInteger` @kind object;
  #L3b2d62.  call temp:= `subtract`(v4, v11) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3b2d68.  v11:= temp @kind object;
  #L3b2d6a.  call temp:= `modInverse`(v6, v11) @signature `Ljava/math/BigInteger;.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3b2d70.  v2:= temp @kind object;
  #L3b2d72.  v11:= `@@java.math.BigInteger.ONE` @type ^`java.math.BigInteger` @kind object;
  #L3b2d76.  call temp:= `subtract`(v4, v11) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3b2d7c.  v11:= temp @kind object;
  #L3b2d7e.  v12:= `@@java.math.BigInteger.ONE` @type ^`java.math.BigInteger` @kind object;
  #L3b2d82.  call temp:= `subtract`(v5, v12) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3b2d88.  v12:= temp @kind object;
  #L3b2d8a.  call temp:= `multiply`(v11, v12) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3b2d90.  v11:= temp @kind object;
  #L3b2d92.  v12:= `@@java.math.BigInteger.ONE` @type ^`java.math.BigInteger` @kind object;
  #L3b2d96.  call temp:= `subtract`(v4, v12) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3b2d9c.  v12:= temp @kind object;
  #L3b2d9e.  v13:= `@@java.math.BigInteger.ONE` @type ^`java.math.BigInteger` @kind object;
  #L3b2da2.  call temp:= `subtract`(v5, v13) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3b2da8.  v13:= temp @kind object;
  #L3b2daa.  call temp:= `gcd`(v12, v13) @signature `Ljava/math/BigInteger;.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3b2db0.  v12:= temp @kind object;
  #L3b2db2.  call temp:= `divide`(v11, v12) @signature `Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3b2db8.  v11:= temp @kind object;
  #L3b2dba.  call temp:= `modInverse`(v2, v11) @signature `Ljava/math/BigInteger;.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3b2dc0.  v3:= temp @kind object;
  #L3b2dc2.  v11:= "RSA" @kind object;
  #L3b2dc6.  call temp:= `getInstance`(v11) @signature `Ljava/security/KeyFactory;.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;` @kind static;
  #L3b2dcc.  v11:= temp @kind object;
  #L3b2dce.  v12:= new `java.security.spec.RSAPrivateCrtKeySpec`;
  #L3b2dd2.  v0:= v12 @kind object;
  #L3b2dd4.  v1:= v10 @kind object;
  #L3b2dd6.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Ljava/security/spec/RSAPrivateCrtKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L3b2ddc.  call temp:= `generatePrivate`(v11, v12) @signature `Ljava/security/KeyFactory;.generatePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;` @kind virtual;
  #L3b2de2.  v11:= temp @kind object;
  #L3b2de4.  v11:= (`java.security.interfaces.RSAPrivateKey`) v11 @kind object;
  #L3b2de8.  call `b`(v9, v11) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.b:(Ljava/security/interfaces/RSAPrivateKey;)V` @kind direct;
  #L3b2dee.  call temp:= `bitLength`(v10) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L3b2df4.  v10:= temp;
  #L3b2df6.  v10:= v10 / 8;
  #L3b2dfa.  return v10;
  #L3b2dfc.  v10:= Exception @type ^`java.lang.Exception` @kind object;
  #L3b2dfe.  call `printStackTrace`(v10) @signature `Lcom/mastercard/api/utils/logs/Logger;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L3b2e04.  v10:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2e08.  call `<init>`(v10) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:()V` @kind direct;
  #L3b2e0e.  throw v10;
  #L3b2e10.  v10:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2e14.  call `<init>`(v10) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:()V` @kind direct;
  #L3b2e1a.  throw v10;
  #L3b2e1c.  v10:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2e20.  call `<init>`(v10) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:()V` @kind direct;
  #L3b2e26.  throw v10;
  #L3b2e28.  v10:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L3b2e2a.  call `printStackTrace`(v10) @signature `Lcom/mastercard/api/utils/logs/Logger;.printStackTrace:(Ljava/lang/Throwable;)V` @kind static;
  #L3b2e30.  v10:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2e34.  call `<init>`(v10) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:()V` @kind direct;
  #L3b2e3a.  throw v10;
  catch `java.security.NoSuchAlgorithmException` @[L3b2cf8..L3b2dfa] goto L3b2e28;
  catch `java.security.spec.InvalidKeySpecException` @[L3b2cf8..L3b2dfa] goto L3b2e1c;
  catch `com.mastercard.api.crypto.MMPPCryptoException` @[L3b2cf8..L3b2dfa] goto L3b2e10;
  catch `java.lang.Exception` @[L3b2cf8..L3b2dfa] goto L3b2dfc;
}
procedure `com.mastercard.api.bytes.ByteArray` `mac`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v5 @kind this, `com.mastercard.api.bytes.ByteArray` v6 @kind object, `com.mastercard.api.bytes.ByteArray` v7 @kind object) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.mac:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3b2b48.  call temp:= `getBytes`(v6) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b2b4e.  v0:= temp @kind object;
  #L3b2b50.  v0:= length @variable v0;
  #L3b2b52.  v0:= (`double`) v0 @kind i2d;
  #L3b2b54.  v2:= 1.0D;
  #L3b2b58.  v0:= v0 + v2 @kind double;
  #L3b2b5a.  v2:= 8.0D;
  #L3b2b5e.  v0:= v0 / v2 @kind double;
  #L3b2b60.  call temp:= `ceil`(v0) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L3b2b66.  v0:= temp @kind wide;
  #L3b2b68.  v0:= (`int`) v0 @kind d2i;
  #L3b2b6a.  v0:= v0 * 8;
  #L3b2b6e.  v1:= new `byte`[v0];
  #L3b2b72.  call temp:= `getBytes`(v6) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b2b78.  v2:= temp @kind object;
  #L3b2b7a.  call temp:= `getLength`(v6) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b2b80.  v3:= temp;
  #L3b2b82.  v4:= 0I;
  #L3b2b84.  call `arraycopy`(v2, v4, v1, v4, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b2b8a.  call temp:= `getLength`(v6) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b2b90.  v6:= temp;
  #L3b2b92.  v2:= -128I;
  #L3b2b96.  v1[v6]:= v2 @kind byte;
  #L3b2b9a.  v6:= new `java.lang.StringBuilder`;
  #L3b2b9e.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b2ba4.  v2:= "Cryptogram data : " @kind object;
  #L3b2ba8.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b2bae.  call temp:= `toHexString`(v1, v0) @signature `Lcom/mastercard/api/utils/Utils;.toHexString:([BI)Ljava/lang/String;` @kind static;
  #L3b2bb4.  v0:= temp @kind object;
  #L3b2bb6.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b2bbc.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b2bc2.  v6:= temp @kind object;
  #L3b2bc4.  call `println`(v6) @signature `Lcom/mastercard/api/utils/logs/Logger;.println:(Ljava/lang/String;)V` @kind static;
  #L3b2bca.  call temp:= `getBytes`(v7) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b2bd0.  v6:= temp @kind object;
  #L3b2bd2.  call temp:= `getBytes`(v7) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b2bd8.  v0:= temp @kind object;
  #L3b2bda.  v0:= length @variable v0;
  #L3b2bdc.  v0:= v0 / 2;
  #L3b2be0.  call temp:= `copyOfRange`(v6, v4, v0) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L3b2be6.  v6:= temp @kind object;
  #L3b2be8.  call temp:= `getBytes`(v7) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b2bee.  v0:= temp @kind object;
  #L3b2bf0.  call temp:= `getBytes`(v7) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b2bf6.  v2:= temp @kind object;
  #L3b2bf8.  v2:= length @variable v2;
  #L3b2bfa.  v2:= v2 / 2;
  #L3b2bfe.  call temp:= `getLength`(v7) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b2c04.  v7:= temp;
  #L3b2c06.  call temp:= `copyOfRange`(v0, v2, v7) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L3b2c0c.  v7:= temp @kind object;
  #L3b2c0e.  v0:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b2c12.  call `<init>`(v0, v1) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b2c18.  v1:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b2c1c.  call `<init>`(v1, v6) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b2c22.  v2:= 1I;
  #L3b2c24.  call temp:= `DESCBC`(v5, v0, v1, v2) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.DESCBC:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Z)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3b2c2a.  v0:= temp @kind object;
  #L3b2c2c.  v0:= (`com.mastercard.api.bytes.DefaultByteArrayImpl`) v0 @kind object;
  #L3b2c30.  call temp:= `getLength`(v0) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.getLength:()I` @kind virtual;
  #L3b2c36.  v1:= temp;
  #L3b2c38.  v1:= v1 + -8;
  #L3b2c3c.  call temp:= `getLength`(v0) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.getLength:()I` @kind virtual;
  #L3b2c42.  v3:= temp;
  #L3b2c44.  call temp:= `copyOfRange`(v0, v1, v3) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.copyOfRange:(II)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3b2c4a.  v0:= temp @kind object;
  #L3b2c4c.  v0:= (`com.mastercard.api.bytes.DefaultByteArrayImpl`) v0 @kind object;
  #L3b2c50.  v1:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b2c54.  call `<init>`(v1, v7) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b2c5a.  call temp:= `DES`(v5, v0, v1, v4) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.DES:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Z)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3b2c60.  v7:= temp @kind object;
  #L3b2c62.  v0:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b2c66.  call `<init>`(v0, v6) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b2c6c.  call temp:= `DES`(v5, v7, v0, v2) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.DES:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Z)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3b2c72.  v6:= temp @kind object;
  #L3b2c74.  return v6 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `macSHA256`(`com.mastercard.api.crypto.AndroidMCBPCryptoService` v2 @kind this, `com.mastercard.api.bytes.ByteArray` v3 @kind object, `com.mastercard.api.bytes.ByteArray` v4 @kind object) @signature `Lcom/mastercard/api/crypto/AndroidMCBPCryptoService;.macSHA256:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b2c88.  v0:= new `javax.crypto.spec.SecretKeySpec`;
  #L3b2c8c.  call temp:= `getBytes`(v4) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b2c92.  v4:= temp @kind object;
  #L3b2c94.  v1:= "AES" @kind object;
  #L3b2c98.  call `<init>`(v0, v4, v1) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L3b2c9e.  v4:= "HmacSHA256" @kind object;
  #L3b2ca2.  call temp:= `getInstance`(v4) @signature `Ljavax/crypto/Mac;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Mac;` @kind static;
  #L3b2ca8.  v4:= temp @kind object;
  #L3b2caa.  call `init`(v4, v0) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L3b2cb0.  call temp:= `getBytes`(v3) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b2cb6.  v3:= temp @kind object;
  #L3b2cb8.  call temp:= `doFinal`(v4, v3) @signature `Ljavax/crypto/Mac;.doFinal:([B)[B` @kind virtual;
  #L3b2cbe.  v3:= temp @kind object;
  #L3b2cc0.  v4:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3b2cc4.  call `<init>`(v4, v3) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3b2cca.  return v4 @kind object;
  #L3b2ccc.  v3:= new `com.mastercard.api.crypto.MMPPCryptoException`;
  #L3b2cd0.  call `<init>`(v3) @signature `Lcom/mastercard/api/crypto/MMPPCryptoException;.<init>:()V` @kind direct;
  #L3b2cd6.  throw v3;
  catch `java.security.InvalidKeyException` @[L3b2c9e..L3b2cca] goto L3b2ccc;
  catch `java.security.NoSuchAlgorithmException` @[L3b2c9e..L3b2cca] goto L3b2ccc;
}
