record `com.mastercard.api.crypto.MCBPCryptoService` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `com.mastercard.api.crypto.MCBPCryptoService` `@@com.mastercard.api.crypto.MCBPCryptoService.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`com.mastercard.api.crypto.MCBPCryptoService` v0 @kind this) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b2f94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b2f9a.  return @kind void;
}
procedure `com.mastercard.api.crypto.MCBPCryptoService` `getInstance`() @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.getInstance:()Lcom/mastercard/api/crypto/MCBPCryptoService;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b2f7c.  v0:= `@@com.mastercard.api.crypto.MCBPCryptoService.a` @type ^`com.mastercard.api.crypto.MCBPCryptoService` @kind object;
  #L3b2f80.  return v0 @kind object;
}
procedure `void` `setInstance`(`com.mastercard.api.crypto.MCBPCryptoService` v0 @kind object) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.setInstance:(Lcom/mastercard/api/crypto/MCBPCryptoService;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3b2fac.  `@@com.mastercard.api.crypto.MCBPCryptoService.a` @type ^`com.mastercard.api.crypto.MCBPCryptoService` := v0 @kind object;
  #L3b2fb0.  return @kind void;
}
procedure `com.mastercard.api.bytes.ByteArray` `AES`(`com.mastercard.api.bytes.ByteArray` v0 @kind object, `com.mastercard.api.bytes.ByteArray` v1 @kind object, `boolean` v2 ) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.AES:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Z)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `AESCBCMAC`(`com.mastercard.api.bytes.ByteArray` v0 @kind object, `com.mastercard.api.bytes.ByteArray` v1 @kind object) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.AESCBCMAC:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `DES`(`com.mastercard.api.bytes.ByteArray` v0 @kind object, `com.mastercard.api.bytes.ByteArray` v1 @kind object, `boolean` v2 ) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.DES:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Z)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `DES3`(`com.mastercard.api.bytes.ByteArray` v0 @kind object, `com.mastercard.api.bytes.ByteArray` v1 @kind object, `boolean` v2 ) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.DES3:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Z)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `DESCBC`(`com.mastercard.api.bytes.ByteArray` v0 @kind object, `com.mastercard.api.bytes.ByteArray` v1 @kind object, `boolean` v2 ) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.DESCBC:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Z)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `RSA`(`com.mastercard.api.bytes.ByteArray` v0 @kind object) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.RSA:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `SHA1`(`com.mastercard.api.bytes.ByteArray` v0 @kind object) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.SHA1:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `SHA256`(`com.mastercard.api.bytes.ByteArray` v0 @kind object) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.SHA256:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `encryptDecryptUsingCTRMode`(`com.mastercard.api.bytes.ByteArray` v0 @kind object, `com.mastercard.api.bytes.ByteArray` v1 @kind object, `byte`[] v2 @kind object, `boolean` v3 , `boolean` v4 ) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.encryptDecryptUsingCTRMode:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;[BZZ)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `generateRandom`(`int` v0 ) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.generateRandom:(I)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `generateTruncatedHash`(`com.mastercard.api.bytes.ByteArray` v0 @kind object) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.generateTruncatedHash:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `initRSAPrivateKey`(`com.mastercard.api.bytes.ByteArray` v0 @kind object, `com.mastercard.api.bytes.ByteArray` v1 @kind object, `com.mastercard.api.bytes.ByteArray` v2 @kind object, `com.mastercard.api.bytes.ByteArray` v3 @kind object, `com.mastercard.api.bytes.ByteArray` v4 @kind object) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.initRSAPrivateKey:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `mac`(`com.mastercard.api.bytes.ByteArray` v0 @kind object, `com.mastercard.api.bytes.ByteArray` v1 @kind object) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.mac:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `macSHA256`(`com.mastercard.api.bytes.ByteArray` v0 @kind object, `com.mastercard.api.bytes.ByteArray` v1 @kind object) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.macSHA256:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
