record `com.mastercard.api.task.DefaultWalletTask` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.mastercard.api.task.Task` @kind interface {
  `com.mastercard.api.task.ThreadedExecutor` `com.mastercard.api.task.DefaultWalletTask.threaded_executor` @AccessFlag PROTECTED;
}
global `int` `@@com.mastercard.api.task.DefaultWalletTask.CHANGED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.mastercard.api.task.DefaultWalletTask.CHANGE_ASK_NEW` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.mastercard.api.task.DefaultWalletTask.CREATED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.mastercard.api.task.DefaultWalletTask.PASSWORD_DISABLED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.mastercard.api.task.DefaultWalletTask.VERIFIED_ON_START` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.mastercard.api.task.DefaultWalletTask.WRONG_PASSWORD` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.mastercard.api.task.DefaultWalletTask` v1 @kind this) @signature `Lcom/mastercard/api/task/DefaultWalletTask;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b5ed8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b5ede.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/task/ThreadedExecutorFactory;.getInstance:()Lcom/mastercard/api/task/ThreadedExecutorFactory;` @kind static;
  #L3b5ee4.  v0:= temp @kind object;
  #L3b5ee6.  call temp:= `getThreadedExecutor`(v0) @signature `Lcom/mastercard/api/task/ThreadedExecutorFactory;.getThreadedExecutor:()Lcom/mastercard/api/task/ThreadedExecutor;` @kind virtual;
  #L3b5eec.  v0:= temp @kind object;
  #L3b5eee.  v1.`com.mastercard.api.task.DefaultWalletTask.threaded_executor` @type ^`com.mastercard.api.task.ThreadedExecutor` := v0 @kind object;
  #L3b5ef2.  return @kind void;
}
procedure `void` `execute`(`com.mastercard.api.task.DefaultWalletTask` v2 @kind this) @signature `Lcom/mastercard/api/task/DefaultWalletTask;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b5f04.  v0:= v2.`com.mastercard.api.task.DefaultWalletTask.threaded_executor` @type ^`com.mastercard.api.task.ThreadedExecutor` @kind object;
  #L3b5f08.  v1:= new `com.mastercard.api.task.DefaultWalletTask$a`;
  #L3b5f0c.  call `<init>`(v1, v2) @signature `Lcom/mastercard/api/task/DefaultWalletTask$a;.<init>:(Lcom/mastercard/api/task/DefaultWalletTask;)V` @kind direct;
  #L3b5f12.  call `execute`(v0, v1) @signature `Lcom/mastercard/api/task/ThreadedExecutor;.execute:(Lcom/mastercard/api/task/ExecutorListener;)V` @kind interface;
  #L3b5f18.  return @kind void;
}
procedure `void` `postExecute`() @signature `Lcom/mastercard/api/task/DefaultWalletTask;.postExecute:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `preExecute`() @signature `Lcom/mastercard/api/task/DefaultWalletTask;.preExecute:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `retry`(`com.mastercard.api.task.DefaultWalletTask` v1 @kind this) @signature `Lcom/mastercard/api/task/DefaultWalletTask;.retry:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5f2c.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/task/ThreadedExecutorFactory;.getInstance:()Lcom/mastercard/api/task/ThreadedExecutorFactory;` @kind static;
  #L3b5f32.  v0:= temp @kind object;
  #L3b5f34.  call temp:= `getThreadedExecutor`(v0) @signature `Lcom/mastercard/api/task/ThreadedExecutorFactory;.getThreadedExecutor:()Lcom/mastercard/api/task/ThreadedExecutor;` @kind virtual;
  #L3b5f3a.  v0:= temp @kind object;
  #L3b5f3c.  v1.`com.mastercard.api.task.DefaultWalletTask.threaded_executor` @type ^`com.mastercard.api.task.ThreadedExecutor` := v0 @kind object;
  #L3b5f40.  call `execute`(v1) @signature `Lcom/mastercard/api/task/DefaultWalletTask;.execute:()V` @kind virtual;
  #L3b5f46.  return @kind void;
}
procedure `void` `run`() @signature `Lcom/mastercard/api/task/DefaultWalletTask;.run:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
