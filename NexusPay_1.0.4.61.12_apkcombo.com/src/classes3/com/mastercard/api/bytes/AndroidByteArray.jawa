record `com.mastercard.api.bytes.AndroidByteArray` @kind class @AccessFlag PUBLIC extends `com.mastercard.api.bytes.ByteArray` @kind interface {
  `byte`[] `com.mastercard.api.bytes.AndroidByteArray.a` @AccessFlag PRIVATE;
  `int` `com.mastercard.api.bytes.AndroidByteArray.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.mastercard.api.bytes.AndroidByteArray` v0 @kind this, `int` v1 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b0bf8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b0bfe.  v0.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int` := v1;
  #L3b0c02.  v1:= new `byte`[v1];
  #L3b0c06.  v0.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] := v1 @kind object;
  #L3b0c0a.  return @kind void;
}
procedure `void` `<init>`(`com.mastercard.api.bytes.AndroidByteArray` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b0c1c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b0c22.  v0:= 0I;
  #L3b0c24.  if v5 != 0 then goto L3b0c2e;
  #L3b0c28.  v4.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int` := v0;
  #L3b0c2c.  return @kind void;
  #L3b0c2e.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b0c34.  v1:= temp;
  #L3b0c36.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b0c3c.  v2:= temp;
  #L3b0c3e.  v2:= v2 %% 2;
  #L3b0c42.  if v2 != 0 then goto L3b0c8c;
  #L3b0c46.  v1:= v1 / 2;
  #L3b0c4a.  v4.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int` := v1;
  #L3b0c4e.  v1:= new `byte`[v1];
  #L3b0c52.  v4.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] := v1 @kind object;
  #L3b0c56.  v1:= v4.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int`;
  #L3b0c5a.  if v0 >= v1 then goto L3b0c8a;
  #L3b0c5e.  v1:= v0 * 2;
  #L3b0c62.  v2:= v1 + 2;
  #L3b0c66.  call temp:= `substring`(v5, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3b0c6c.  v1:= temp @kind object;
  #L3b0c6e.  v2:= v4.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0c72.  v3:= 16I;
  #L3b0c76.  call temp:= `parseInt`(v1, v3) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;I)I` @kind static;
  #L3b0c7c.  v1:= temp;
  #L3b0c7e.  v1:= (`byte`) v1 @kind i2b;
  #L3b0c80.  v2[v0]:= v1 @kind byte;
  #L3b0c84.  v0:= v0 + 1;
  #L3b0c88.  goto L3b0c56;
  #L3b0c8a.  return @kind void;
  #L3b0c8c.  v5:= new `java.lang.IllegalArgumentException`;
  #L3b0c90.  v0:= "Number of characters should be even for a hexadecimal buffer" @kind object;
  #L3b0c94.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0c9a.  throw v5;
}
procedure `void` `<init>`(`com.mastercard.api.bytes.AndroidByteArray` v3 @kind this, `byte`[] v4 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3b0b70.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b0b76.  v0:= length @variable v4;
  #L3b0b78.  v3.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int` := v0;
  #L3b0b7c.  v1:= new `byte`[v0];
  #L3b0b80.  v3.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] := v1 @kind object;
  #L3b0b84.  v2:= 0I;
  #L3b0b86.  call `arraycopy`(v4, v2, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b0b8c.  return @kind void;
}
procedure `void` `<init>`(`com.mastercard.api.bytes.AndroidByteArray` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:([BI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3b0ba0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b0ba6.  v2.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int` := v4;
  #L3b0baa.  v0:= new `byte`[v4];
  #L3b0bae.  v2.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] := v0 @kind object;
  #L3b0bb2.  v1:= 0I;
  #L3b0bb4.  call `arraycopy`(v3, v1, v0, v1, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b0bba.  return @kind void;
}
procedure `void` `<init>`(`com.mastercard.api.bytes.AndroidByteArray` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:([BII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3b0bcc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b0bd2.  v2.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int` := v5;
  #L3b0bd6.  v0:= new `byte`[v5];
  #L3b0bda.  v2.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] := v0 @kind object;
  #L3b0bde.  v1:= 0I;
  #L3b0be0.  call `arraycopy`(v3, v4, v0, v1, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b0be6.  return @kind void;
}
procedure `com.mastercard.api.bytes.ByteArray` `append`(`com.mastercard.api.bytes.AndroidByteArray` v4 @kind this, `com.mastercard.api.bytes.ByteArray` v5 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.append:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b086c.  v0:= v4.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int`;
  #L3b0870.  call temp:= `getBytes`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b0876.  v1:= temp @kind object;
  #L3b0878.  if v1 != 0 then goto L3b087e;
  #L3b087c.  return v4 @kind object;
  #L3b087e.  v1:= v4.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int`;
  #L3b0882.  call temp:= `getLength`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b0888.  v2:= temp;
  #L3b088a.  v1:= v1 + v2 @kind int;
  #L3b088c.  call `resize`(v4, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.resize:(I)V` @kind virtual;
  #L3b0892.  call temp:= `getBytes`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b0898.  v1:= temp @kind object;
  #L3b089a.  v2:= 0I;
  #L3b089c.  v3:= v4.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b08a0.  call temp:= `getLength`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b08a6.  v5:= temp;
  #L3b08a8.  call `arraycopy`(v1, v2, v3, v0, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b08ae.  return v4 @kind object;
}
procedure `void` `appendBuffer`(`com.mastercard.api.bytes.AndroidByteArray` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.appendBuffer:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b0cac.  v0:= v2.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int`;
  #L3b0cb0.  v1:= length @variable v3;
  #L3b0cb2.  if v4 <= v1 then goto L3b0cb8;
  #L3b0cb6.  return @kind void;
  #L3b0cb8.  v1:= v0 + v5 @kind int;
  #L3b0cbc.  call `resize`(v2, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.resize:(I)V` @kind virtual;
  #L3b0cc2.  v1:= v2.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0cc6.  call `arraycopy`(v3, v4, v1, v0, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b0ccc.  return @kind void;
}
procedure `com.mastercard.api.bytes.ByteArray` `appendByte`(`com.mastercard.api.bytes.AndroidByteArray` v2 @kind this, `byte` v3 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.appendByte:(B)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b08c0.  v0:= v2.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int`;
  #L3b08c4.  v1:= v0 + 1;
  #L3b08c8.  call `resize`(v2, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.resize:(I)V` @kind virtual;
  #L3b08ce.  v1:= v2.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b08d2.  v1[v0]:= v3 @kind byte;
  #L3b08d6.  return v2 @kind object;
}
procedure `void` `appendByteArray`(`com.mastercard.api.bytes.AndroidByteArray` v4 @kind this, `com.mastercard.api.bytes.ByteArray` v5 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.appendByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b0ce0.  v0:= v4.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int`;
  #L3b0ce4.  call temp:= `getBytes`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b0cea.  v1:= temp @kind object;
  #L3b0cec.  if v1 != 0 then goto L3b0cf2;
  #L3b0cf0.  return @kind void;
  #L3b0cf2.  v1:= v4.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int`;
  #L3b0cf6.  call temp:= `getLength`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b0cfc.  v2:= temp;
  #L3b0cfe.  v1:= v1 + v2 @kind int;
  #L3b0d00.  call `resize`(v4, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.resize:(I)V` @kind virtual;
  #L3b0d06.  call temp:= `getBytes`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b0d0c.  v1:= temp @kind object;
  #L3b0d0e.  v2:= 0I;
  #L3b0d10.  v3:= v4.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0d14.  call temp:= `getLength`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b0d1a.  v5:= temp;
  #L3b0d1c.  call `arraycopy`(v1, v2, v3, v0, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b0d22.  return @kind void;
}
procedure `void` `appendByteArrayAsLV`(`com.mastercard.api.bytes.AndroidByteArray` v4 @kind this, `com.mastercard.api.bytes.ByteArray` v5 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.appendByteArrayAsLV:(Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b0d34.  v0:= 0I;
  #L3b0d36.  if v5 == 0 then goto L3b0d86;
  #L3b0d3a.  call temp:= `getLength`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b0d40.  v1:= temp;
  #L3b0d42.  if v1 != 0 then goto L3b0d48;
  #L3b0d46.  goto L3b0d86;
  #L3b0d48.  v1:= v4.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int`;
  #L3b0d4c.  v2:= v1 + 1;
  #L3b0d50.  call temp:= `getLength`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b0d56.  v3:= temp;
  #L3b0d58.  v2:= v2 + v3 @kind int;
  #L3b0d5a.  call `resize`(v4, v2) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.resize:(I)V` @kind virtual;
  #L3b0d60.  v2:= v4.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0d64.  call temp:= `getLength`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b0d6a.  v3:= temp;
  #L3b0d6c.  v3:= (`byte`) v3 @kind i2b;
  #L3b0d6e.  v2[v1]:= v3 @kind byte;
  #L3b0d72.  v1:= v1 + 1;
  #L3b0d76.  call temp:= `getLength`(v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b0d7c.  v2:= temp;
  #L3b0d7e.  call `copyArrayToArray`(v4, v5, v0, v1, v2) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.copyArrayToArray:(Lcom/mastercard/api/bytes/ByteArray;III)V` @kind virtual;
  #L3b0d84.  goto L3b0d8c;
  #L3b0d86.  call temp:= `appendByte`(v4, v0) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.appendByte:(B)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3b0d8c.  return @kind void;
}
procedure `com.mastercard.api.bytes.ByteArray` `appendBytes`(`com.mastercard.api.bytes.AndroidByteArray` v3 @kind this, `byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.appendBytes:([BI)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b08e8.  v0:= v3.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int`;
  #L3b08ec.  v1:= v0 + v5 @kind int;
  #L3b08f0.  call `resize`(v3, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.resize:(I)V` @kind virtual;
  #L3b08f6.  v1:= v3.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b08fa.  v2:= 0I;
  #L3b08fc.  call `arraycopy`(v4, v2, v1, v0, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b0902.  return v3 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `bitWiseAnd`(`com.mastercard.api.bytes.AndroidByteArray` v5 @kind this, `com.mastercard.api.bytes.ByteArray` v6 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.bitWiseAnd:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3b0914.  if v6 != 0 then goto L3b0922;
  #L3b0918.  call temp:= `clone`(v5) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.clone:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3b091e.  v6:= temp @kind object;
  #L3b0920.  return v6 @kind object;
  #L3b0922.  call temp:= `getLength`(v5) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getLength:()I` @kind virtual;
  #L3b0928.  v0:= temp;
  #L3b092a.  call temp:= `getLength`(v6) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b0930.  v1:= temp;
  #L3b0932.  if v0 >= v1 then goto L3b0940;
  #L3b0936.  call temp:= `getLength`(v5) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getLength:()I` @kind virtual;
  #L3b093c.  v0:= temp;
  #L3b093e.  goto L3b0948;
  #L3b0940.  call temp:= `getLength`(v6) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b0946.  v0:= temp;
  #L3b0948.  v1:= new `com.mastercard.api.bytes.AndroidByteArray`;
  #L3b094c.  call temp:= `getLength`(v5) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getLength:()I` @kind virtual;
  #L3b0952.  v2:= temp;
  #L3b0954.  call `<init>`(v1, v2) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:(I)V` @kind direct;
  #L3b095a.  v2:= 0I;
  #L3b095c.  if v2 >= v0 then goto L3b0980;
  #L3b0960.  v3:= v5.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0964.  v3:= v3[v2] @kind byte;
  #L3b0968.  call temp:= `getByte`(v6, v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3b096e.  v4:= temp;
  #L3b0970.  v3:= v3 ^& v4 @kind int;
  #L3b0972.  v3:= (`byte`) v3 @kind i2b;
  #L3b0974.  call `setByte`(v1, v2, v3) @signature `Lcom/mastercard/api/bytes/ByteArray;.setByte:(IB)V` @kind interface;
  #L3b097a.  v2:= v2 + 1;
  #L3b097e.  goto L3b095c;
  #L3b0980.  return v1 @kind object;
}
procedure `void` `clear`(`com.mastercard.api.bytes.AndroidByteArray` v1 @kind this) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0da0.  v0:= 0I;
  #L3b0da2.  call temp:= `fill`(v1, v0) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.fill:(B)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3b0da8.  return @kind void;
}
procedure `com.mastercard.api.bytes.ByteArray` `clone`(`com.mastercard.api.bytes.AndroidByteArray` v2 @kind this) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.clone:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b0994.  v0:= new `com.mastercard.api.bytes.AndroidByteArray`;
  #L3b0998.  call temp:= `getBytes`(v2) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getBytes:()[B` @kind virtual;
  #L3b099e.  v1:= temp @kind object;
  #L3b09a0.  call `<init>`(v0, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:([B)V` @kind direct;
  #L3b09a6.  return v0 @kind object;
}
procedure `java.lang.Object` `clone`(`com.mastercard.api.bytes.AndroidByteArray` v1 @kind this) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3b0ab0.  call temp:= `clone`(v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.clone:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3b0ab6.  v0:= temp @kind object;
  #L3b0ab8.  return v0 @kind object;
}
procedure `void` `copyArrayToArray`(`com.mastercard.api.bytes.AndroidByteArray` v1 @kind this, `com.mastercard.api.bytes.ByteArray` v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.copyArrayToArray:(Lcom/mastercard/api/bytes/ByteArray;III)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0dbc.  call temp:= `getBytes`(v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b0dc2.  v0:= temp @kind object;
  #L3b0dc4.  if v0 != 0 then goto L3b0dca;
  #L3b0dc8.  return @kind void;
  #L3b0dca.  call temp:= `getBytes`(v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b0dd0.  v2:= temp @kind object;
  #L3b0dd2.  v0:= v1.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0dd6.  call `arraycopy`(v2, v3, v0, v4, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b0ddc.  return @kind void;
}
procedure `void` `copyBufferToArray`(`com.mastercard.api.bytes.AndroidByteArray` v3 @kind this, `byte`[] v4 @kind object, `int` v5 , `int` v6 , `int` v7 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.copyBufferToArray:([BIII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b0df0.  if v4 == 0 then goto L3b0e0a;
  #L3b0df4.  v0:= v6 + v7 @kind int;
  #L3b0df8.  v1:= v3.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0dfc.  v2:= length @variable v1;
  #L3b0dfe.  if v0 <= v2 then goto L3b0e04;
  #L3b0e02.  goto L3b0e0a;
  #L3b0e04.  call `arraycopy`(v4, v5, v1, v6, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b0e0a.  return @kind void;
}
procedure `void` `copyBytes`(`com.mastercard.api.bytes.AndroidByteArray` v2 @kind this, `com.mastercard.api.bytes.ByteArray` v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.copyBytes:(Lcom/mastercard/api/bytes/ByteArray;III)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b0e1c.  v0:= v5 + v6 @kind int;
  #L3b0e20.  v1:= v2.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int`;
  #L3b0e24.  if v0 <= v1 then goto L3b0e32;
  #L3b0e28.  v0:= v0 - v1 @kind int;
  #L3b0e2a.  v1:= v1 + v0 @kind int;
  #L3b0e2c.  call `resize`(v2, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.resize:(I)V` @kind virtual;
  #L3b0e32.  call temp:= `getBytes`(v3) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b0e38.  v3:= temp @kind object;
  #L3b0e3a.  v0:= v2.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0e3e.  call `arraycopy`(v3, v4, v0, v5, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b0e44.  return @kind void;
}
procedure `com.mastercard.api.bytes.ByteArray` `copyOfRange`(`com.mastercard.api.bytes.AndroidByteArray` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.copyOfRange:(II)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b09b8.  v0:= v5 - v4 @kind int;
  #L3b09bc.  v1:= new `com.mastercard.api.bytes.AndroidByteArray`;
  #L3b09c0.  v2:= v3.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b09c4.  call temp:= `copyOfRange`(v2, v4, v5) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L3b09ca.  v4:= temp @kind object;
  #L3b09cc.  call `<init>`(v1, v4, v0) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:([BI)V` @kind direct;
  #L3b09d2.  return v1 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `fill`(`com.mastercard.api.bytes.AndroidByteArray` v1 @kind this, `byte` v2 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.fill:(B)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b09e4.  v0:= v1.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b09e8.  call `fill`(v0, v2) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L3b09ee.  return v1 @kind object;
}
procedure `byte` `getByte`(`com.mastercard.api.bytes.AndroidByteArray` v1 @kind this, `int` v2 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getByte:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0838.  v0:= v1.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b083c.  v2:= v0[v2] @kind byte;
  #L3b0840.  return v2;
}
procedure `byte`[] `getBytes`(`com.mastercard.api.bytes.AndroidByteArray` v1 @kind this) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getBytes:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0854.  v0:= v1.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0858.  return v0 @kind object;
}
procedure `java.lang.String` `getHexString`(`com.mastercard.api.bytes.AndroidByteArray` v1 @kind this) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getHexString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0acc.  call temp:= `toHexString`(v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.toHexString:()Ljava/lang/String;` @kind virtual;
  #L3b0ad2.  v0:= temp @kind object;
  #L3b0ad4.  return v0 @kind object;
}
procedure `int` `getLength`(`com.mastercard.api.bytes.AndroidByteArray` v1 @kind this) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0a98.  v0:= v1.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int`;
  #L3b0a9c.  return v0;
}
procedure `java.lang.String` `getString`(`com.mastercard.api.bytes.AndroidByteArray` v2 @kind this) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b0ae8.  v0:= new `java.lang.String`;
  #L3b0aec.  v1:= v2.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0af0.  call `<init>`(v0, v1) @signature `Ljava/lang/String;.<init>:([B)V` @kind direct;
  #L3b0af6.  return v0 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `getUTF8`(`com.mastercard.api.bytes.AndroidByteArray` v3 @kind this) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getUTF8:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b0a00.  v0:= new `com.mastercard.api.bytes.AndroidByteArray`;
  #L3b0a04.  call temp:= `getHexString`(v3) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getHexString:()Ljava/lang/String;` @kind virtual;
  #L3b0a0a.  v1:= temp @kind object;
  #L3b0a0c.  v2:= "UTF-8" @kind object;
  #L3b0a10.  call temp:= `getBytes`(v1, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L3b0a16.  v1:= temp @kind object;
  #L3b0a18.  call `<init>`(v0, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:([B)V` @kind direct;
  #L3b0a1e.  return v0 @kind object;
  #L3b0a20.  v0:= 0I;
  #L3b0a22.  return v0 @kind object;
  catch `java.io.UnsupportedEncodingException` @[L3b0a00..L3b0a1e] goto L3b0a20;
}
procedure `boolean` `isEqual`(`com.mastercard.api.bytes.AndroidByteArray` v1 @kind this, `com.mastercard.api.bytes.ByteArray` v2 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.isEqual:(Lcom/mastercard/api/bytes/ByteArray;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0810.  v0:= v1.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0814.  call temp:= `getBytes`(v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b081a.  v2:= temp @kind object;
  #L3b081c.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L3b0822.  v2:= temp;
  #L3b0824.  return v2;
}
procedure `com.mastercard.api.bytes.ByteArray` `makeXor`(`com.mastercard.api.bytes.AndroidByteArray` v4 @kind this, `com.mastercard.api.bytes.ByteArray` v5 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.makeXor:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b0a44.  v0:= new `com.mastercard.api.bytes.AndroidByteArray`;
  #L3b0a48.  call temp:= `getLength`(v4) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getLength:()I` @kind virtual;
  #L3b0a4e.  v1:= temp;
  #L3b0a50.  call `<init>`(v0, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:(I)V` @kind direct;
  #L3b0a56.  v1:= 0I;
  #L3b0a58.  call temp:= `getLength`(v0) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b0a5e.  v2:= temp;
  #L3b0a60.  if v1 >= v2 then goto L3b0a84;
  #L3b0a64.  call temp:= `getByte`(v4, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getByte:(I)B` @kind virtual;
  #L3b0a6a.  v2:= temp;
  #L3b0a6c.  call temp:= `getByte`(v5, v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3b0a72.  v3:= temp;
  #L3b0a74.  v2:= v2 ^~ v3 @kind int;
  #L3b0a76.  v2:= (`byte`) v2 @kind i2b;
  #L3b0a78.  call `setByte`(v0, v1, v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.setByte:(IB)V` @kind interface;
  #L3b0a7e.  v1:= v1 + 1;
  #L3b0a82.  goto L3b0a58;
  #L3b0a84.  return v0 @kind object;
}
procedure `void` `parityFix`(`com.mastercard.api.bytes.AndroidByteArray` v8 @kind this) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.parityFix:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3b0e58.  call temp:= `getLength`(v8) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getLength:()I` @kind virtual;
  #L3b0e5e.  v0:= temp;
  #L3b0e60.  v1:= 0I;
  #L3b0e62.  v2:= 0I;
  #L3b0e64.  if v2 >= v0 then goto L3b0eb4;
  #L3b0e68.  v3:= 1I;
  #L3b0e6a.  v4:= 0I;
  #L3b0e6c.  v5:= 0I;
  #L3b0e6e.  v6:= 1I;
  #L3b0e70.  v7:= 8I;
  #L3b0e74.  if v4 >= v7 then goto L3b0e94;
  #L3b0e78.  call temp:= `getByte`(v8, v2) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getByte:(I)B` @kind virtual;
  #L3b0e7e.  v7:= temp;
  #L3b0e80.  v7:= v7 ^& v6 @kind int;
  #L3b0e82.  if v7 == 0 then goto L3b0e8a;
  #L3b0e86.  v5:= v5 + 1;
  #L3b0e8a.  v6:= v6 * 2;
  #L3b0e8e.  v4:= v4 + 1;
  #L3b0e92.  goto L3b0e70;
  #L3b0e94.  v4:= v5 ^& 1;
  #L3b0e98.  if v4 != 0 then goto L3b0eae;
  #L3b0e9c.  call temp:= `getByte`(v8, v2) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.getByte:(I)B` @kind virtual;
  #L3b0ea2.  v4:= temp;
  #L3b0ea4.  v3:= v3 ^~ v4 @kind int;
  #L3b0ea6.  v3:= (`byte`) v3 @kind i2b;
  #L3b0ea8.  call `setByte`(v8, v2, v3) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.setByte:(IB)V` @kind virtual;
  #L3b0eae.  v2:= v2 + 1;
  #L3b0eb2.  goto L3b0e64;
  #L3b0eb4.  return @kind void;
}
procedure `void` `resize`(`com.mastercard.api.bytes.AndroidByteArray` v4 @kind this, `int` v5 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.resize:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b0ec8.  v0:= v4.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int`;
  #L3b0ecc.  if v5 <= v0 then goto L3b0ef2;
  #L3b0ed0.  v1:= new `byte`[v5];
  #L3b0ed4.  v2:= v4.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0ed8.  if v2 == 0 then goto L3b0eee;
  #L3b0edc.  v3:= 0I;
  #L3b0ede.  call `arraycopy`(v2, v3, v1, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3b0ee4.  v0:= v4.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0ee8.  call `clearByteArray`(v0) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:([B)V` @kind static;
  #L3b0eee.  v4.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] := v1 @kind object;
  #L3b0ef2.  v4.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int` := v5;
  #L3b0ef6.  return @kind void;
}
procedure `void` `setByte`(`com.mastercard.api.bytes.AndroidByteArray` v1 @kind this, `int` v2 , `byte` v3 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.setByte:(IB)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0f08.  v0:= v1.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0f0c.  v0[v2]:= v3 @kind byte;
  #L3b0f10.  return @kind void;
}
procedure `void` `setBytes`(`com.mastercard.api.bytes.AndroidByteArray` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.setBytes:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0f24.  v0:= length @variable v2;
  #L3b0f26.  call temp:= `copyOf`(v2, v0) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L3b0f2c.  v2:= temp @kind object;
  #L3b0f2e.  v1.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] := v2 @kind object;
  #L3b0f32.  v2:= length @variable v2;
  #L3b0f34.  v1.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int` := v2;
  #L3b0f38.  return @kind void;
}
procedure `void` `setShort`(`com.mastercard.api.bytes.AndroidByteArray` v2 @kind this, `int` v3 , `short` v4 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.setShort:(IS)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b0f4c.  v0:= v2.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0f50.  v1:= v4 ^> 8;
  #L3b0f54.  v1:= (`byte`) v1 @kind i2b;
  #L3b0f56.  v0[v3]:= v1 @kind byte;
  #L3b0f5a.  v3:= v3 + 1;
  #L3b0f5e.  v4:= v4 ^& 255;
  #L3b0f62.  v4:= (`byte`) v4 @kind i2b;
  #L3b0f64.  v0[v3]:= v4 @kind byte;
  #L3b0f68.  return @kind void;
}
procedure `java.lang.String` `toHexString`(`com.mastercard.api.bytes.AndroidByteArray` v5 @kind this) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.toHexString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3b0b08.  v0:= new `java.lang.StringBuffer`;
  #L3b0b0c.  call `<init>`(v0) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L3b0b12.  v1:= 0I;
  #L3b0b14.  v2:= v5.`com.mastercard.api.bytes.AndroidByteArray.b` @type ^`int`;
  #L3b0b18.  if v1 >= v2 then goto L3b0b56;
  #L3b0b1c.  v2:= v5.`com.mastercard.api.bytes.AndroidByteArray.a` @type ^`byte`[] @kind object;
  #L3b0b20.  v2:= v2[v1] @kind byte;
  #L3b0b24.  v3:= "0123456789ABCDEF" @kind object;
  #L3b0b28.  v4:= v2 ^> 4;
  #L3b0b2c.  v4:= v4 ^& 15;
  #L3b0b30.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3b0b36.  v4:= temp;
  #L3b0b38.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L3b0b3e.  v2:= v2 ^& 15;
  #L3b0b42.  call temp:= `charAt`(v3, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3b0b48.  v2:= temp;
  #L3b0b4a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L3b0b50.  v1:= v1 + 1;
  #L3b0b54.  goto L3b0b14;
  #L3b0b56.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b0b5c.  v0:= temp @kind object;
  #L3b0b5e.  return v0 @kind object;
}
