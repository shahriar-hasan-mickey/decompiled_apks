record `com.mastercard.api.bytes.AndroidByteArrayFactory` @kind class @AccessFlag PUBLIC extends `com.mastercard.api.bytes.ByteArrayFactory` @kind class {
}
global `char`[] `@@com.mastercard.api.bytes.AndroidByteArrayFactory.HEX_DIGITS` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b07ac.  v0:= 16I;
  #L3b07b0.  v0:= new `char`[v0];
  #L3b07b4.  goto L3b07c0;
  #L3b07ba.  `@@com.mastercard.api.bytes.AndroidByteArrayFactory.HEX_DIGITS` @type ^`char`[] := v0 @kind object;
  #L3b07be.  return @kind void;
  #L3b07c0.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L3b07e7.  goto L3b07ba;
}
procedure `void` `<init>`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v0 @kind this) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b07f8.  call `<init>`(v0) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.<init>:()V` @kind direct;
  #L3b07fe.  return @kind void;
}
procedure `boolean` `compareString`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.compareString:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;

  #L3b0184.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b018a.  v1:= temp;
  #L3b018c.  return v1;
}
procedure `com.mastercard.api.bytes.ByteArray` `convertString`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.convertString:(Ljava/lang/String;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b021c.  v0:= new `com.mastercard.api.bytes.AndroidByteArray`;
  #L3b0220.  call temp:= `getBytes`(v3) @signature `Ljava/lang/String;.getBytes:()[B` @kind virtual;
  #L3b0226.  v1:= temp @kind object;
  #L3b0228.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b022e.  v3:= temp;
  #L3b0230.  call `<init>`(v0, v1, v3) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:([BI)V` @kind direct;
  #L3b0236.  return v0 @kind object;
}
procedure `java.lang.String` `formatAtc`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v2 @kind this, `int` v3 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.formatAtc:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b0418.  call temp:= `integerToHex`(v2, v3) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.integerToHex:(I)Ljava/lang/String;` @kind virtual;
  #L3b041e.  v3:= temp @kind object;
  #L3b0420.  v0:= 4I;
  #L3b0422.  v1:= 48I;
  #L3b0426.  call temp:= `padleft`(v2, v3, v0, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.padleft:(Ljava/lang/String;IC)Ljava/lang/String;` @kind virtual;
  #L3b042c.  v3:= temp @kind object;
  #L3b042e.  call temp:= `toUpperCase`(v3) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L3b0434.  v3:= temp @kind object;
  #L3b0436.  return v3 @kind object;
}
procedure `int` `fromChar`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v3 @kind this, `char` v4 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.fromChar:(C)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b02f8.  goto L3b035c;
  #L3b02fe.  goto L3b038c;
  #L3b0304.  goto L3b03ac;
  #L3b030a.  v0:= new `java.lang.IllegalArgumentException`;
  #L3b030e.  v1:= new `java.lang.StringBuilder`;
  #L3b0312.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b0318.  v2:= "Invalid hex digit [" @kind object;
  #L3b031c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0322.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0328.  v4:= "]" @kind object;
  #L3b032c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0332.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b0338.  v4:= temp @kind object;
  #L3b033a.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0340.  throw v0;
  #L3b0342.  v4:= v4 + -97;
  #L3b0346.  v4:= v4 + 10;
  #L3b034a.  return v4;
  #L3b034c.  v4:= v4 + -65;
  #L3b0350.  v4:= v4 + 10;
  #L3b0354.  return v4;
  #L3b0356.  v4:= v4 + -48;
  #L3b035a.  return v4;
  #L3b035c.  switch v4
                  | 48 => goto L3b0356
                  | 49 => goto L3b0356
                  | 50 => goto L3b0356
                  | 51 => goto L3b0356
                  | 52 => goto L3b0356
                  | 53 => goto L3b0356
                  | 54 => goto L3b0356
                  | 55 => goto L3b0356
                  | 56 => goto L3b0356
                  | 57 => goto L3b0356
                  | else => goto L3b02fe;
  #L3b038c.  switch v4
                  | 65 => goto L3b034c
                  | 66 => goto L3b034c
                  | 67 => goto L3b034c
                  | 68 => goto L3b034c
                  | 69 => goto L3b034c
                  | 70 => goto L3b034c
                  | else => goto L3b0304;
  #L3b03ac.  switch v4
                  | 97 => goto L3b0342
                  | 98 => goto L3b0342
                  | 99 => goto L3b0342
                  | 100 => goto L3b0342
                  | 101 => goto L3b0342
                  | 102 => goto L3b0342
                  | else => goto L3b030a;
}
procedure `com.mastercard.api.bytes.ByteArray` `fromHexString`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.fromHexString:(Ljava/lang/String;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0248.  v0:= new `com.mastercard.api.bytes.AndroidByteArray`;
  #L3b024c.  call `<init>`(v0, v2) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0252.  return v0 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `getByteArray`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v1 @kind this, `int` v2 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.getByteArray:(I)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0280.  v0:= new `com.mastercard.api.bytes.AndroidByteArray`;
  #L3b0284.  call `<init>`(v0, v2) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:(I)V` @kind direct;
  #L3b028a.  return v0 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `getByteArray`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v1 @kind this, `byte`[] v2 @kind object, `int` v3 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.getByteArray:([BI)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0264.  v0:= new `com.mastercard.api.bytes.AndroidByteArray`;
  #L3b0268.  call `<init>`(v0, v2, v3) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:([BI)V` @kind direct;
  #L3b026e.  return v0 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `getFromByteArray`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v1 @kind this, `com.mastercard.api.bytes.ByteArray` v2 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.getFromByteArray:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b029c.  v0:= new `com.mastercard.api.bytes.AndroidByteArray`;
  #L3b02a0.  call temp:= `getBytes`(v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b02a6.  v2:= temp @kind object;
  #L3b02a8.  call `<init>`(v0, v2) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:([B)V` @kind direct;
  #L3b02ae.  return v0 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `getFromWord`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v3 @kind this, `int` v4 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b02c0.  v0:= new `com.mastercard.api.bytes.AndroidByteArray`;
  #L3b02c4.  v1:= 2I;
  #L3b02c6.  call temp:= `allocate`(v1) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L3b02cc.  v2:= temp @kind object;
  #L3b02ce.  v4:= (`short`) v4 @kind i2s;
  #L3b02d0.  call temp:= `putShort`(v2, v4) @signature `Ljava/nio/ByteBuffer;.putShort:(S)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3b02d6.  v4:= temp @kind object;
  #L3b02d8.  call temp:= `array`(v4) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L3b02de.  v4:= temp @kind object;
  #L3b02e0.  call `<init>`(v0, v4, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArray;.<init>:([BI)V` @kind direct;
  #L3b02e6.  return v0 @kind object;
}
procedure `java.lang.String` `getHexStringLengthAsHex`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.getHexStringLengthAsHex:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3b0448.  call temp:= `fromHexString`(v0, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.fromHexString:(Ljava/lang/String;)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3b044e.  v1:= temp @kind object;
  #L3b0450.  call temp:= `getLength`(v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b0456.  v1:= temp;
  #L3b0458.  call temp:= `integerToHex`(v0, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.integerToHex:(I)Ljava/lang/String;` @kind virtual;
  #L3b045e.  v1:= temp @kind object;
  #L3b0460.  call temp:= `toUpperCase`(v1) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L3b0466.  v1:= temp @kind object;
  #L3b0468.  return v1 @kind object;
}
procedure `java.lang.String` `getHexStringLengthAsHex`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.getHexStringLengthAsHex:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b047c.  call temp:= `fromHexString`(v1, v2) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.fromHexString:(Ljava/lang/String;)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3b0482.  v2:= temp @kind object;
  #L3b0484.  call temp:= `getLength`(v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3b048a.  v2:= temp;
  #L3b048c.  call temp:= `integerToHex`(v1, v2) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.integerToHex:(I)Ljava/lang/String;` @kind virtual;
  #L3b0492.  v2:= temp @kind object;
  #L3b0494.  v3:= v3 * 2;
  #L3b0498.  v0:= 48I;
  #L3b049c.  call temp:= `padleft`(v1, v2, v3, v0) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.padleft:(Ljava/lang/String;IC)Ljava/lang/String;` @kind virtual;
  #L3b04a2.  v2:= temp @kind object;
  #L3b04a4.  call temp:= `toUpperCase`(v2) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L3b04aa.  v2:= temp @kind object;
  #L3b04ac.  return v2 @kind object;
}
procedure `java.lang.String` `getStringLengthAsHex`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.getStringLengthAsHex:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b04c0.  v0:= "UTF-8" @kind object;
  #L3b04c4.  call temp:= `getBytes`(v2, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L3b04ca.  v2:= temp @kind object;
  #L3b04cc.  v2:= length @variable v2;
  #L3b04ce.  call temp:= `integerToHex`(v1, v2) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.integerToHex:(I)Ljava/lang/String;` @kind virtual;
  #L3b04d4.  v2:= temp @kind object;
  #L3b04d6.  goto L3b04da;
  #L3b04d8.  v2:= 0I;
  #L3b04da.  call temp:= `toUpperCase`(v2) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L3b04e0.  v2:= temp @kind object;
  #L3b04e2.  return v2 @kind object;
  catch `java.io.UnsupportedEncodingException` @[L3b04c0..L3b04d6] goto L3b04d8;
}
procedure `java.lang.String` `getUTF8String`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v1 @kind this, `com.mastercard.api.bytes.ByteArray` v2 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.getUTF8String:(Lcom/mastercard/api/bytes/ByteArray;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0504.  v0:= new `java.lang.String`;
  #L3b0508.  call temp:= `getBytes`(v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.getBytes:()[B` @kind interface;
  #L3b050e.  v2:= temp @kind object;
  #L3b0510.  call `<init>`(v0, v2) @signature `Ljava/lang/String;.<init>:([B)V` @kind direct;
  #L3b0516.  return v0 @kind object;
}
procedure `java.lang.String` `hexStringToBase64`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.hexStringToBase64:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3b0528.  v0:= 0I;
  #L3b052a.  v1:= "" @kind object;
  #L3b052e.  v3:= v1 @kind object;
  #L3b0530.  v2:= 0I;
  #L3b0532.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b0538.  v4:= temp;
  #L3b053a.  v5:= "000000" @kind object;
  #L3b053e.  if v2 >= v4 then goto L3b05b6;
  #L3b0542.  v4:= new `java.lang.StringBuilder`;
  #L3b0546.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b054c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0552.  v5:= v2 + 1;
  #L3b0556.  call temp:= `substring`(v8, v2, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3b055c.  v2:= temp @kind object;
  #L3b055e.  v6:= 16I;
  #L3b0562.  call temp:= `parseInt`(v2, v6) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;I)I` @kind static;
  #L3b0568.  v2:= temp;
  #L3b056a.  call temp:= `toBinaryString`(v2) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L3b0570.  v2:= temp @kind object;
  #L3b0572.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0578.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b057e.  v2:= temp @kind object;
  #L3b0580.  v4:= new `java.lang.StringBuilder`;
  #L3b0584.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b058a.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0590.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b0596.  v3:= temp;
  #L3b0598.  v3:= v3 + -4;
  #L3b059c.  call temp:= `substring`(v2, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3b05a2.  v2:= temp @kind object;
  #L3b05a4.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b05aa.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b05b0.  v3:= temp @kind object;
  #L3b05b2.  v2:= v5;
  #L3b05b4.  goto L3b0532;
  #L3b05b6.  v8:= new `java.lang.StringBuilder`;
  #L3b05ba.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b05c0.  call temp:= `append`(v8, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b05c6.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b05cc.  v2:= temp;
  #L3b05ce.  v2:= v2 %% 6;
  #L3b05d2.  call temp:= `substring`(v5, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3b05d8.  v2:= temp @kind object;
  #L3b05da.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b05e0.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b05e6.  v8:= temp @kind object;
  #L3b05e8.  v2:= new `java.lang.StringBuilder`;
  #L3b05ec.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b05f2.  v3:= "base64 bin: " @kind object;
  #L3b05f6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b05fc.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0602.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b0608.  v2:= temp @kind object;
  #L3b060a.  call `println`(v2) @signature `Lcom/mastercard/api/utils/logs/Logger;.println:(Ljava/lang/String;)V` @kind static;
  #L3b0610.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b0616.  v2:= temp;
  #L3b0618.  if v0 >= v2 then goto L3b0660;
  #L3b061c.  v2:= v0 + 6;
  #L3b0620.  call temp:= `substring`(v8, v0, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3b0626.  v0:= temp @kind object;
  #L3b0628.  v3:= new `java.lang.StringBuilder`;
  #L3b062c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b0632.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0638.  v1:= 2I;
  #L3b063a.  call temp:= `parseInt`(v0, v1) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;I)I` @kind static;
  #L3b0640.  v0:= temp;
  #L3b0642.  v1:= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" @kind object;
  #L3b0646.  call temp:= `charAt`(v1, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3b064c.  v0:= temp;
  #L3b064e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0654.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b065a.  v1:= temp @kind object;
  #L3b065c.  v0:= v2;
  #L3b065e.  goto L3b0610;
  #L3b0660.  v8:= new `java.lang.StringBuilder`;
  #L3b0664.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b066a.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0670.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b0676.  v0:= temp;
  #L3b0678.  v0:= v0 %% 4;
  #L3b067c.  v1:= "====" @kind object;
  #L3b0680.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3b0686.  v0:= temp @kind object;
  #L3b0688.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b068e.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b0694.  v8:= temp @kind object;
  #L3b0696.  return v8 @kind object;
}
procedure `int` `hexToInteger`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.hexToInteger:(Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b03dc.  v0:= 16I;
  #L3b03e0.  call temp:= `parseInt`(v2, v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;I)I` @kind static;
  #L3b03e6.  v2:= temp;
  #L3b03e8.  return v2;
}
procedure `java.lang.String` `integerToHex`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v2 @kind this, `int` v3 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.integerToHex:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b06a8.  call temp:= `toHexString`(v3) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L3b06ae.  v3:= temp @kind object;
  #L3b06b0.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b06b6.  v0:= temp;
  #L3b06b8.  v0:= v0 %% 2;
  #L3b06bc.  if v0 == 0 then goto L3b06d8;
  #L3b06c0.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b06c6.  v0:= temp;
  #L3b06c8.  v0:= v0 + 1;
  #L3b06cc.  v1:= 48I;
  #L3b06d0.  call temp:= `padleft`(v2, v3, v0, v1) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.padleft:(Ljava/lang/String;IC)Ljava/lang/String;` @kind virtual;
  #L3b06d6.  v3:= temp @kind object;
  #L3b06d8.  call temp:= `toUpperCase`(v3) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L3b06de.  v3:= temp @kind object;
  #L3b06e0.  return v3 @kind object;
}
procedure `boolean` `isNull`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.isNull:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;

  #L3b01a0.  if v1 != 0 then goto L3b01a8;
  #L3b01a4.  v1:= 1I;
  #L3b01a6.  goto L3b01aa;
  #L3b01a8.  v1:= 0I;
  #L3b01aa.  return v1;
}
procedure `java.lang.String` `padleft`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v2 @kind this, `java.lang.String` v3 @kind object, `int` v4 , `char` v5 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.padleft:(Ljava/lang/String;IC)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b06f4.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3b06fa.  v3:= temp @kind object;
  #L3b06fc.  v0:= new `java.lang.StringBuilder`;
  #L3b0700.  call `<init>`(v0, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3b0706.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b070c.  v1:= temp;
  #L3b070e.  v4:= v4 - v1 @kind int;
  #L3b0710.  v1:= v4 + -1;
  #L3b0714.  if v4 <= 0 then goto L3b0722;
  #L3b0718.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b071e.  v4:= v1;
  #L3b0720.  goto L3b0710;
  #L3b0722.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b0728.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b072e.  v3:= temp @kind object;
  #L3b0730.  return v3 @kind object;
}
procedure `int` `stringToInt`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.stringToInt:(Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;

  #L3b03fc.  call temp:= `parseInt`(v1) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3b0402.  v1:= temp;
  #L3b0404.  return v1;
}
procedure `char` `toChar`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v3 @kind this, `int` v4 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.toChar:(I)C` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b01bc.  if v4 < 0 then goto L3b01d2;
  #L3b01c0.  v0:= 15I;
  #L3b01c4.  if v4 > v0 then goto L3b01d2;
  #L3b01c8.  v0:= `@@com.mastercard.api.bytes.AndroidByteArrayFactory.HEX_DIGITS` @type ^`char`[] @kind object;
  #L3b01cc.  v4:= v0[v4] @kind char;
  #L3b01d0.  return v4;
  #L3b01d2.  v0:= new `java.lang.IllegalArgumentException`;
  #L3b01d6.  v1:= new `java.lang.StringBuilder`;
  #L3b01da.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b01e0.  v2:= "Invalid hex digit [" @kind object;
  #L3b01e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b01ea.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b01f0.  v4:= "]" @kind object;
  #L3b01f4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b01fa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b0200.  v4:= temp @kind object;
  #L3b0202.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b0208.  throw v0;
}
procedure `java.lang.String` `toString`(`com.mastercard.api.bytes.AndroidByteArrayFactory` v7 @kind this, `com.mastercard.api.bytes.ByteArray` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lcom/mastercard/api/bytes/AndroidByteArrayFactory;.toString:(Lcom/mastercard/api/bytes/ByteArray;II)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3b0744.  v0:= v10 * 2;
  #L3b0748.  v0:= new `char`[v0];
  #L3b074c.  v1:= 0I;
  #L3b074e.  v2:= v9;
  #L3b0750.  v3:= v9 + v10 @kind int;
  #L3b0754.  if v2 >= v3 then goto L3b078e;
  #L3b0758.  call temp:= `getByte`(v8, v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3b075e.  v3:= temp;
  #L3b0760.  v4:= v1 + 1;
  #L3b0764.  v5:= `@@com.mastercard.api.bytes.AndroidByteArrayFactory.HEX_DIGITS` @type ^`char`[] @kind object;
  #L3b0768.  v6:= v3 ^>> 4;
  #L3b076c.  v6:= v6 ^& 15;
  #L3b0770.  v6:= v5[v6] @kind char;
  #L3b0774.  v0[v1]:= v6 @kind char;
  #L3b0778.  v1:= v4 + 1;
  #L3b077c.  v3:= v3 ^& 15;
  #L3b0780.  v3:= v5[v3] @kind char;
  #L3b0784.  v0[v4]:= v3 @kind char;
  #L3b0788.  v2:= v2 + 1;
  #L3b078c.  goto L3b0750;
  #L3b078e.  v8:= new `java.lang.String`;
  #L3b0792.  call `<init>`(v8, v0) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L3b0798.  return v8 @kind object;
}
