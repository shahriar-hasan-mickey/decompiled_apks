record `com.mastercard.api.bytes.ByteArrayFactory` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `com.mastercard.api.bytes.ByteArrayFactory` `@@com.mastercard.api.bytes.ByteArrayFactory.a` @AccessFlag STATIC;
procedure `void` `<init>`(`com.mastercard.api.bytes.ByteArrayFactory` v0 @kind this) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b0fc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b0fc6.  return @kind void;
}
procedure `com.mastercard.api.bytes.ByteArrayFactory` `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b0f7c.  v0:= `@@com.mastercard.api.bytes.ByteArrayFactory.a` @type ^`com.mastercard.api.bytes.ByteArrayFactory` @kind object;
  #L3b0f80.  return v0 @kind object;
}
procedure `void` `setInstance`(`com.mastercard.api.bytes.ByteArrayFactory` v0 @kind object) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.setInstance:(Lcom/mastercard/api/bytes/ByteArrayFactory;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3b0fd8.  `@@com.mastercard.api.bytes.ByteArrayFactory.a` @type ^`com.mastercard.api.bytes.ByteArrayFactory` := v0 @kind object;
  #L3b0fdc.  return @kind void;
}
procedure `boolean` `compareString`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.compareString:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `convertString`(`java.lang.String` v0 @kind object) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.convertString:(Ljava/lang/String;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `formatAtc`(`int` v0 ) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.formatAtc:(I)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `fromChar`(`char` v0 ) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.fromChar:(C)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `fromHexString`(`java.lang.String` v0 @kind object) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.fromHexString:(Ljava/lang/String;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `getByteArray`(`int` v0 ) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getByteArray:(I)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `getByteArray`(`byte`[] v0 @kind object, `int` v1 ) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getByteArray:([BI)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `getFromByteArray`(`com.mastercard.api.bytes.ByteArray` v0 @kind object) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromByteArray:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `getFromWord`(`int` v0 ) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getHexStringLengthAsHex`(`java.lang.String` v0 @kind object) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getHexStringLengthAsHex:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getHexStringLengthAsHex`(`java.lang.String` v0 @kind object, `int` v1 ) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getHexStringLengthAsHex:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getStringLengthAsHex`(`java.lang.String` v0 @kind object) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getStringLengthAsHex:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getUTF8String`(`com.mastercard.api.bytes.ByteArray` v0 @kind object) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getUTF8String:(Lcom/mastercard/api/bytes/ByteArray;)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `hexStringToBase64`(`java.lang.String` v0 @kind object) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.hexStringToBase64:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hexToInteger`(`java.lang.String` v0 @kind object) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.hexToInteger:(Ljava/lang/String;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `integerToHex`(`int` v0 ) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.integerToHex:(I)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Boolean` `isBitSet`(`com.mastercard.api.bytes.ByteArrayFactory` v1 @kind this, `byte` v2 , `int` v3 ) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.isBitSet:(BI)Ljava/lang/Boolean;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b0f94.  v0:= 1I;
  #L3b0f96.  v3:= v0 ^< v3 @kind int;
  #L3b0f9a.  v2:= v2 ^& v3 @kind int;
  #L3b0f9c.  if v2 == 0 then goto L3b0fa2;
  #L3b0fa0.  goto L3b0fa4;
  #L3b0fa2.  v0:= 0I;
  #L3b0fa4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3b0faa.  v2:= temp @kind object;
  #L3b0fac.  return v2 @kind object;
}
procedure `boolean` `isNull`(`java.lang.String` v0 @kind object) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.isNull:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `padleft`(`java.lang.String` v0 @kind object, `int` v1 , `char` v2 ) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.padleft:(Ljava/lang/String;IC)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `stringToInt`(`java.lang.String` v0 @kind object) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.stringToInt:(Ljava/lang/String;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `char` `toChar`(`int` v0 ) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.toChar:(I)C` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`(`com.mastercard.api.bytes.ByteArray` v0 @kind object, `int` v1 , `int` v2 ) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.toString:(Lcom/mastercard/api/bytes/ByteArray;II)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
