record `com.mastercard.mcbp.core.mcbpcards.TransactionInformation` @kind class @AccessFlag PUBLIC {
  `long` `com.mastercard.mcbp.core.mcbpcards.TransactionInformation.a` @AccessFlag PRIVATE;
  `int` `com.mastercard.mcbp.core.mcbpcards.TransactionInformation.b` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.TransactionInformation.c` @AccessFlag PRIVATE;
}
global `long` `@@com.mastercard.mcbp.core.mcbpcards.TransactionInformation.MAX_AMOUNT` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.mastercard.mcbp.core.mcbpcards.TransactionInformation` v0 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/TransactionInformation;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ba5c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ba5ce.  return @kind void;
}
procedure `void` `<init>`(`com.mastercard.mcbp.core.mcbpcards.TransactionInformation` v0 @kind this, `long` v1 , `int` v3 , `boolean` v4 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/TransactionInformation;.<init>:(JIZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ba5e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ba5e6.  v0.`com.mastercard.mcbp.core.mcbpcards.TransactionInformation.a` @type ^`long` := v1 @kind wide;
  #L3ba5ea.  v0.`com.mastercard.mcbp.core.mcbpcards.TransactionInformation.b` @type ^`int` := v3;
  #L3ba5ee.  v0.`com.mastercard.mcbp.core.mcbpcards.TransactionInformation.c` @type ^`boolean` := v4 @kind boolean;
  #L3ba5f2.  return @kind void;
}
procedure `long` `getAmount`(`com.mastercard.mcbp.core.mcbpcards.TransactionInformation` v2 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/TransactionInformation;.getAmount:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ba5b0.  v0:= v2.`com.mastercard.mcbp.core.mcbpcards.TransactionInformation.a` @type ^`long` @kind wide;
  #L3ba5b4.  return v0 @kind wide;
}
procedure `int` `getCurrencyCode`(`com.mastercard.mcbp.core.mcbpcards.TransactionInformation` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/TransactionInformation;.getCurrencyCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ba598.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.TransactionInformation.b` @type ^`int`;
  #L3ba59c.  return v0;
}
procedure `boolean` `isExactAmount`(`com.mastercard.mcbp.core.mcbpcards.TransactionInformation` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/TransactionInformation;.isExactAmount:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ba580.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.TransactionInformation.c` @type ^`boolean` @kind boolean;
  #L3ba584.  return v0;
}
procedure `void` `setAmount`(`com.mastercard.mcbp.core.mcbpcards.TransactionInformation` v0 @kind this, `long` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/TransactionInformation;.setAmount:(J)V` @AccessFlag PUBLIC {
    temp;

  #L3ba604.  v0.`com.mastercard.mcbp.core.mcbpcards.TransactionInformation.a` @type ^`long` := v1 @kind wide;
  #L3ba608.  return @kind void;
}
procedure `void` `setCurrencyCode`(`com.mastercard.mcbp.core.mcbpcards.TransactionInformation` v0 @kind this, `int` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/TransactionInformation;.setCurrencyCode:(I)V` @AccessFlag PUBLIC {
    temp;

  #L3ba61c.  v0.`com.mastercard.mcbp.core.mcbpcards.TransactionInformation.b` @type ^`int` := v1;
  #L3ba620.  return @kind void;
}
procedure `void` `setExactAmount`(`com.mastercard.mcbp.core.mcbpcards.TransactionInformation` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/TransactionInformation;.setExactAmount:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3ba634.  v0.`com.mastercard.mcbp.core.mcbpcards.TransactionInformation.c` @type ^`boolean` := v1 @kind boolean;
  #L3ba638.  return @kind void;
}
