record `com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` @kind class @AccessFlag PUBLIC {
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.a` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.b` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.c` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.d` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.e` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.f` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.g` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v0 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3bb694.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3bb69a.  return @kind void;
}
procedure `byte` `setBit`(`byte` v1 , `int` v2 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.setBit:(BI)B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3bb5b4.  v0:= 1I;
  #L3bb5b6.  v2:= v0 ^< v2 @kind int;
  #L3bb5ba.  v1:= v1 ^| v2 @kind int;
  #L3bb5bc.  v1:= (`byte`) v1 @kind i2b;
  #L3bb5be.  return v1;
}
procedure `boolean` `getACK_AlwaysRequiredIfCurrencyNotProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.getACK_AlwaysRequiredIfCurrencyNotProvided:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb4f4.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.d` @type ^`boolean` @kind boolean;
  #L3bb4f8.  return v0;
}
procedure `boolean` `getACK_AlwaysRequiredIfCurrencyProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.getACK_AlwaysRequiredIfCurrencyProvided:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb50c.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.a` @type ^`boolean` @kind boolean;
  #L3bb510.  return v0;
}
procedure `boolean` `getACK_AutomaticallyResetByApplication`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.getACK_AutomaticallyResetByApplication:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb524.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.f` @type ^`boolean` @kind boolean;
  #L3bb528.  return v0;
}
procedure `boolean` `getACK_PreEntryAllowed`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.getACK_PreEntryAllowed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb53c.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.e` @type ^`boolean` @kind boolean;
  #L3bb540.  return v0;
}
procedure `com.mastercard.api.bytes.ByteArray` `getMPAObject`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v4 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.getMPAObject:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bb5d0.  call temp:= `getACK_AlwaysRequiredIfCurrencyProvided`(v4) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.getACK_AlwaysRequiredIfCurrencyProvided:()Z` @kind virtual;
  #L3bb5d6.  v0:= temp;
  #L3bb5d8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3bb5de.  v0:= temp @kind object;
  #L3bb5e0.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3bb5e6.  v0:= temp;
  #L3bb5e8.  v1:= 0I;
  #L3bb5ea.  if v0 == 0 then goto L3bb5fa;
  #L3bb5ee.  v0:= 7I;
  #L3bb5f0.  call temp:= `setBit`(v1, v0) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.setBit:(BI)B` @kind static;
  #L3bb5f6.  v0:= temp;
  #L3bb5f8.  goto L3bb5fc;
  #L3bb5fa.  v0:= 0I;
  #L3bb5fc.  call temp:= `getACK_AlwaysRequiredIfCurrencyNotProvided`(v4) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.getACK_AlwaysRequiredIfCurrencyNotProvided:()Z` @kind virtual;
  #L3bb602.  v2:= temp;
  #L3bb604.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3bb60a.  v2:= temp @kind object;
  #L3bb60c.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3bb612.  v2:= temp;
  #L3bb614.  if v2 == 0 then goto L3bb622;
  #L3bb618.  v2:= 6I;
  #L3bb61a.  call temp:= `setBit`(v0, v2) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.setBit:(BI)B` @kind static;
  #L3bb620.  v0:= temp;
  #L3bb622.  call temp:= `getPIN_AlwaysRequiredIfCurrencyProvided`(v4) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.getPIN_AlwaysRequiredIfCurrencyProvided:()Z` @kind virtual;
  #L3bb628.  v2:= temp;
  #L3bb62a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3bb630.  v2:= temp @kind object;
  #L3bb632.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3bb638.  v2:= temp;
  #L3bb63a.  if v2 == 0 then goto L3bb648;
  #L3bb63e.  v2:= 4I;
  #L3bb640.  call temp:= `setBit`(v0, v2) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.setBit:(BI)B` @kind static;
  #L3bb646.  v0:= temp;
  #L3bb648.  call temp:= `getPIN_AlwaysRequiredIfCurrencyNotProvided`(v4) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.getPIN_AlwaysRequiredIfCurrencyNotProvided:()Z` @kind virtual;
  #L3bb64e.  v2:= temp;
  #L3bb650.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3bb656.  v2:= temp @kind object;
  #L3bb658.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3bb65e.  v2:= temp;
  #L3bb660.  if v2 == 0 then goto L3bb66e;
  #L3bb664.  v2:= 3I;
  #L3bb666.  call temp:= `setBit`(v0, v2) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.setBit:(BI)B` @kind static;
  #L3bb66c.  v0:= temp;
  #L3bb66e.  v2:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3bb672.  v3:= 1I;
  #L3bb674.  v3:= new `byte`[v3];
  #L3bb678.  v3[v1]:= v0 @kind byte;
  #L3bb67c.  call `<init>`(v2, v3) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3bb682.  return v2 @kind object;
}
procedure `boolean` `getPIN_AlwaysRequiredIfCurrencyNotProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.getPIN_AlwaysRequiredIfCurrencyNotProvided:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb554.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.c` @type ^`boolean` @kind boolean;
  #L3bb558.  return v0;
}
procedure `boolean` `getPIN_AlwaysRequiredIfCurrencyProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.getPIN_AlwaysRequiredIfCurrencyProvided:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb56c.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.h` @type ^`boolean` @kind boolean;
  #L3bb570.  return v0;
}
procedure `boolean` `getPIN_AutomaticallyResetByApplication`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.getPIN_AutomaticallyResetByApplication:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb584.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.g` @type ^`boolean` @kind boolean;
  #L3bb588.  return v0;
}
procedure `boolean` `getPIN_PreEntryAllowed`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.getPIN_PreEntryAllowed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb59c.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.b` @type ^`boolean` @kind boolean;
  #L3bb5a0.  return v0;
}
procedure `void` `setACK_AlwaysRequiredIfCurrencyNotProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.setACK_AlwaysRequiredIfCurrencyNotProvided:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb6ac.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.d` @type ^`boolean` := v1 @kind boolean;
  #L3bb6b0.  return @kind void;
}
procedure `void` `setACK_AlwaysRequiredIfCurrencyProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.setACK_AlwaysRequiredIfCurrencyProvided:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb6c4.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.a` @type ^`boolean` := v1 @kind boolean;
  #L3bb6c8.  return @kind void;
}
procedure `void` `setACK_AutomaticallyResetByApplication`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.setACK_AutomaticallyResetByApplication:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb6dc.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.f` @type ^`boolean` := v1 @kind boolean;
  #L3bb6e0.  return @kind void;
}
procedure `void` `setACK_PreEntryAllowed`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.setACK_PreEntryAllowed:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb6f4.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.e` @type ^`boolean` := v1 @kind boolean;
  #L3bb6f8.  return @kind void;
}
procedure `void` `setPIN_AlwaysRequiredIfCurrencyNotProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.setPIN_AlwaysRequiredIfCurrencyNotProvided:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb70c.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.c` @type ^`boolean` := v1 @kind boolean;
  #L3bb710.  return @kind void;
}
procedure `void` `setPIN_AlwaysRequiredIfCurrencyProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.setPIN_AlwaysRequiredIfCurrencyProvided:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb724.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.h` @type ^`boolean` := v1 @kind boolean;
  #L3bb728.  return @kind void;
}
procedure `void` `setPIN_AutomaticallyResetByApplication`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.setPIN_AutomaticallyResetByApplication:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb73c.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.g` @type ^`boolean` := v1 @kind boolean;
  #L3bb740.  return @kind void;
}
procedure `void` `setPIN_PreEntryAllowed`(`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MagstripeCVM_IssuerOptions;.setPIN_PreEntryAllowed:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb754.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MagstripeCVM_IssuerOptions.b` @type ^`boolean` := v1 @kind boolean;
  #L3bb758.  return @kind void;
}
