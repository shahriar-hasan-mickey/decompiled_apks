record `com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` @kind class @AccessFlag PUBLIC {
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.a` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.b` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.c` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.d` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.e` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.f` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.g` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v0 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3bb41c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3bb422.  return @kind void;
}
procedure `byte` `setBit`(`byte` v1 , `int` v2 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setBit:(BI)B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3bb328.  v0:= 1I;
  #L3bb32a.  v2:= v0 ^< v2 @kind int;
  #L3bb32e.  v1:= v1 ^| v2 @kind int;
  #L3bb330.  v1:= (`byte`) v1 @kind i2b;
  #L3bb332.  return v1;
}
procedure `boolean` `getACK_AlwaysRequiredIfCurrencyNotProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getACK_AlwaysRequiredIfCurrencyNotProvided:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb268.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.d` @type ^`boolean` @kind boolean;
  #L3bb26c.  return v0;
}
procedure `boolean` `getACK_AlwaysRequiredIfCurrencyProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getACK_AlwaysRequiredIfCurrencyProvided:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb280.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.a` @type ^`boolean` @kind boolean;
  #L3bb284.  return v0;
}
procedure `boolean` `getACK_AutomaticallyResetByApplication`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getACK_AutomaticallyResetByApplication:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb298.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.f` @type ^`boolean` @kind boolean;
  #L3bb29c.  return v0;
}
procedure `boolean` `getACK_PreEntryAllowed`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getACK_PreEntryAllowed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb2b0.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.e` @type ^`boolean` @kind boolean;
  #L3bb2b4.  return v0;
}
procedure `com.mastercard.api.bytes.ByteArray` `getMPAObject`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v4 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getMPAObject:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bb344.  call temp:= `getACK_AlwaysRequiredIfCurrencyProvided`(v4) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getACK_AlwaysRequiredIfCurrencyProvided:()Z` @kind virtual;
  #L3bb34a.  v0:= temp;
  #L3bb34c.  v1:= 0I;
  #L3bb34e.  if v0 == 0 then goto L3bb35e;
  #L3bb352.  v0:= 7I;
  #L3bb354.  call temp:= `setBit`(v1, v0) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setBit:(BI)B` @kind static;
  #L3bb35a.  v0:= temp;
  #L3bb35c.  goto L3bb360;
  #L3bb35e.  v0:= 0I;
  #L3bb360.  call temp:= `getACK_AlwaysRequiredIfCurrencyNotProvided`(v4) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getACK_AlwaysRequiredIfCurrencyNotProvided:()Z` @kind virtual;
  #L3bb366.  v2:= temp;
  #L3bb368.  if v2 == 0 then goto L3bb376;
  #L3bb36c.  v2:= 6I;
  #L3bb36e.  call temp:= `setBit`(v0, v2) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setBit:(BI)B` @kind static;
  #L3bb374.  v0:= temp;
  #L3bb376.  call temp:= `getACK_PreEntryAllowed`(v4) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getACK_PreEntryAllowed:()Z` @kind virtual;
  #L3bb37c.  v2:= temp;
  #L3bb37e.  if v2 == 0 then goto L3bb38c;
  #L3bb382.  v2:= 5I;
  #L3bb384.  call temp:= `setBit`(v0, v2) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setBit:(BI)B` @kind static;
  #L3bb38a.  v0:= temp;
  #L3bb38c.  call temp:= `getPIN_AlwaysRequiredIfCurrencyProvided`(v4) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getPIN_AlwaysRequiredIfCurrencyProvided:()Z` @kind virtual;
  #L3bb392.  v2:= temp;
  #L3bb394.  if v2 == 0 then goto L3bb3a2;
  #L3bb398.  v2:= 4I;
  #L3bb39a.  call temp:= `setBit`(v0, v2) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setBit:(BI)B` @kind static;
  #L3bb3a0.  v0:= temp;
  #L3bb3a2.  call temp:= `getPIN_AlwaysRequiredIfCurrencyNotProvided`(v4) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getPIN_AlwaysRequiredIfCurrencyNotProvided:()Z` @kind virtual;
  #L3bb3a8.  v2:= temp;
  #L3bb3aa.  if v2 == 0 then goto L3bb3b8;
  #L3bb3ae.  v2:= 3I;
  #L3bb3b0.  call temp:= `setBit`(v0, v2) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setBit:(BI)B` @kind static;
  #L3bb3b6.  v0:= temp;
  #L3bb3b8.  call temp:= `getPIN_PreEntryAllowed`(v4) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getPIN_PreEntryAllowed:()Z` @kind virtual;
  #L3bb3be.  v2:= temp;
  #L3bb3c0.  if v2 == 0 then goto L3bb3ce;
  #L3bb3c4.  v2:= 2I;
  #L3bb3c6.  call temp:= `setBit`(v0, v2) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setBit:(BI)B` @kind static;
  #L3bb3cc.  v0:= temp;
  #L3bb3ce.  call temp:= `getACK_AutomaticallyResetByApplication`(v4) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getACK_AutomaticallyResetByApplication:()Z` @kind virtual;
  #L3bb3d4.  v2:= temp;
  #L3bb3d6.  v3:= 1I;
  #L3bb3d8.  if v2 == 0 then goto L3bb3e4;
  #L3bb3dc.  call temp:= `setBit`(v0, v3) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setBit:(BI)B` @kind static;
  #L3bb3e2.  v0:= temp;
  #L3bb3e4.  call temp:= `getPIN_AutomaticallyResetByApplication`(v4) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getPIN_AutomaticallyResetByApplication:()Z` @kind virtual;
  #L3bb3ea.  v2:= temp;
  #L3bb3ec.  if v2 == 0 then goto L3bb3f8;
  #L3bb3f0.  call temp:= `setBit`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setBit:(BI)B` @kind static;
  #L3bb3f6.  v0:= temp;
  #L3bb3f8.  v2:= new `com.mastercard.api.bytes.DefaultByteArrayImpl`;
  #L3bb3fc.  v3:= new `byte`[v3];
  #L3bb400.  v3[v1]:= v0 @kind byte;
  #L3bb404.  call `<init>`(v2, v3) @signature `Lcom/mastercard/api/bytes/DefaultByteArrayImpl;.<init>:([B)V` @kind direct;
  #L3bb40a.  return v2 @kind object;
}
procedure `boolean` `getPIN_AlwaysRequiredIfCurrencyNotProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getPIN_AlwaysRequiredIfCurrencyNotProvided:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb2c8.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.c` @type ^`boolean` @kind boolean;
  #L3bb2cc.  return v0;
}
procedure `boolean` `getPIN_AlwaysRequiredIfCurrencyProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getPIN_AlwaysRequiredIfCurrencyProvided:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb2e0.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.h` @type ^`boolean` @kind boolean;
  #L3bb2e4.  return v0;
}
procedure `boolean` `getPIN_AutomaticallyResetByApplication`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getPIN_AutomaticallyResetByApplication:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb2f8.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.g` @type ^`boolean` @kind boolean;
  #L3bb2fc.  return v0;
}
procedure `boolean` `getPIN_PreEntryAllowed`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.getPIN_PreEntryAllowed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb310.  v0:= v1.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.b` @type ^`boolean` @kind boolean;
  #L3bb314.  return v0;
}
procedure `void` `setACK_AlwaysRequiredIfCurrencyNotProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setACK_AlwaysRequiredIfCurrencyNotProvided:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb434.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.d` @type ^`boolean` := v1 @kind boolean;
  #L3bb438.  return @kind void;
}
procedure `void` `setACK_AlwaysRequiredIfCurrencyProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setACK_AlwaysRequiredIfCurrencyProvided:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb44c.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.a` @type ^`boolean` := v1 @kind boolean;
  #L3bb450.  return @kind void;
}
procedure `void` `setACK_AutomaticallyResetByApplication`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setACK_AutomaticallyResetByApplication:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb464.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.f` @type ^`boolean` := v1 @kind boolean;
  #L3bb468.  return @kind void;
}
procedure `void` `setACK_PreEntryAllowed`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setACK_PreEntryAllowed:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb47c.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.e` @type ^`boolean` := v1 @kind boolean;
  #L3bb480.  return @kind void;
}
procedure `void` `setPIN_AlwaysRequiredIfCurrencyNotProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setPIN_AlwaysRequiredIfCurrencyNotProvided:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb494.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.c` @type ^`boolean` := v1 @kind boolean;
  #L3bb498.  return @kind void;
}
procedure `void` `setPIN_AlwaysRequiredIfCurrencyProvided`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setPIN_AlwaysRequiredIfCurrencyProvided:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb4ac.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.h` @type ^`boolean` := v1 @kind boolean;
  #L3bb4b0.  return @kind void;
}
procedure `void` `setPIN_AutomaticallyResetByApplication`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setPIN_AutomaticallyResetByApplication:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb4c4.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.g` @type ^`boolean` := v1 @kind boolean;
  #L3bb4c8.  return @kind void;
}
procedure `void` `setPIN_PreEntryAllowed`(`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/MChipCVM_IssuerOptions;.setPIN_PreEntryAllowed:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3bb4dc.  v0.`com.mastercard.mcbp.core.mcbpcards.profile.MChipCVM_IssuerOptions.b` @type ^`boolean` := v1 @kind boolean;
  #L3bb4e0.  return @kind void;
}
