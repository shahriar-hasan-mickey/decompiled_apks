record `com.mastercard.mcbp.core.mcbpcards.MCBPCard` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `boolean` `ActivateContactlessIfNeeded`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.ActivateContactlessIfNeeded:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.mcbp.core.mcbpcards.ActivateContactlessResult` `activateContactless`(`com.mastercard.mcbp.core.mcbpcards.CardListener` v0 @kind object) @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.activateContactless:(Lcom/mastercard/mcbp/core/mcbpcards/CardListener;)Lcom/mastercard/mcbp/core/mcbpcards/ActivateContactlessResult;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.mcbp.core.mcbpcards.ActivateRemotePaymentResult` `activateRemotePayment`(`com.mastercard.mcbp.core.lde.data.SessionKey` v0 @kind object, `com.mastercard.mcbp.core.mcbpcards.RemotePaymentListener` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.activateRemotePayment:(Lcom/mastercard/mcbp/core/lde/data/SessionKey;Lcom/mastercard/mcbp/core/mcbpcards/RemotePaymentListener;)Lcom/mastercard/mcbp/core/mcbpcards/ActivateRemotePaymentResult;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `clearData`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.clearData:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `deactivate`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.deactivate:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getAtc`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.getAtc:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getCVMResetTimeOut`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.getCVMResetTimeOut:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.payment.cld.CLD` `getCardLayout`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.getCardLayout:()Lcom/mastercard/api/payment/cld/CLD;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getDcId`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.getDcId:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getDualTapTimeOut`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.getDualTapTimeOut:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.mcbp.core.mpplite.MPPLite` `getMPPLite`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.getMPPLite:()Lcom/mastercard/mcbp/core/mpplite/MPPLite;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.mcbp.core.mobilekernel.DSRPResult` `getTransactionRecord`(`com.mastercard.mcbp.core.mobilekernel.DSRPInputData` v0 @kind object) @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.getTransactionRecord:(Lcom/mastercard/mcbp/core/mobilekernel/DSRPInputData;)Lcom/mastercard/mcbp/core/mobilekernel/DSRPResult;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isClSupported`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.isClSupported:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isInitialized`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.isInitialized:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isReadyForContactlessTransaction`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.isReadyForContactlessTransaction:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isRpSupported`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.isRpSupported:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `notifyTransactionFailed`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.notifyTransactionFailed:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `numberPaymentsLeft`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.numberPaymentsLeft:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `processApdu`(`com.mastercard.api.bytes.ByteArray` v0 @kind object) @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.processApdu:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `processOnDeactivated`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.processOnDeactivated:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setPinListener`(`com.mastercard.mcbp.core.mcbpcards.PINCardListener` v0 @kind object) @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.setPinListener:(Lcom/mastercard/mcbp/core/mcbpcards/PINCardListener;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `startContactlessIfNeeded`(`com.mastercard.mcbp.core.mpplite.ContactLessTransactionListener` v0 @kind object, `com.mastercard.mcbp.core.mcbpcards.TransactionInformation` v1 @kind object, `boolean` v2 , `boolean` v3 , `boolean` v4 ) @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.startContactlessIfNeeded:(Lcom/mastercard/mcbp/core/mpplite/ContactLessTransactionListener;Lcom/mastercard/mcbp/core/mcbpcards/TransactionInformation;ZZZ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `startContactlessPayment`(`com.mastercard.mcbp.core.lde.data.SessionKey` v0 @kind object, `com.mastercard.mcbp.core.mcbpcards.TransactionInformation` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.startContactlessPayment:(Lcom/mastercard/mcbp/core/lde/data/SessionKey;Lcom/mastercard/mcbp/core/mcbpcards/TransactionInformation;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.mastercard.mcbp.core.mcbpcards.StopContactlessResult` `stopContactLess`() @signature `Lcom/mastercard/mcbp/core/mcbpcards/MCBPCard;.stopContactLess:()Lcom/mastercard/mcbp/core/mcbpcards/StopContactlessResult;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
