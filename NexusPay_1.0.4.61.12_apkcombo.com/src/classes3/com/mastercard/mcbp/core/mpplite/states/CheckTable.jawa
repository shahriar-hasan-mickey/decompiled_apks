record `com.mastercard.mcbp.core.mpplite.states.CheckTable` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.mastercard.mcbp.core.mpplite.states.CheckTable` v0 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CheckTable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3c05c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c05c6.  return @kind void;
}
procedure `void` `processAddCheckTable`(`com.mastercard.api.bytes.ByteArray` v11 @kind object, `com.mastercard.api.bytes.ByteArray` v12 @kind object, `com.mastercard.api.bytes.ByteArray` v13 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CheckTable;.processAddCheckTable:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3c05d8.  v0:= 0I;
  #L3c05da.  call temp:= `getByte`(v12, v0) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c05e0.  v1:= temp;
  #L3c05e2.  v2:= 1I;
  #L3c05e4.  call temp:= `getByte`(v12, v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c05ea.  v3:= temp;
  #L3c05ec.  v4:= 2I;
  #L3c05ee.  call temp:= `getByte`(v12, v4) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c05f4.  v5:= temp;
  #L3c05f6.  v6:= 4I;
  #L3c05f8.  if v1 == v6 then goto L3c06b4;
  #L3c05fc.  v6:= v1 + v3 @kind int;
  #L3c0600.  v7:= 5I;
  #L3c0602.  v6:= v6 - v7 @kind int;
  #L3c0604.  call temp:= `getLength`(v11) @signature `Lcom/mastercard/api/bytes/ByteArray;.getLength:()I` @kind interface;
  #L3c060a.  v8:= temp;
  #L3c060c.  if v6 > v8 then goto L3c06b4;
  #L3c0610.  if v5 <= v2 then goto L3c06b4;
  #L3c0614.  if v3 <= 0 then goto L3c06b4;
  #L3c0618.  v6:= v5 * v3 @kind int;
  #L3c061c.  v8:= 15I;
  #L3c0620.  if v6 > v8 then goto L3c06b4;
  #L3c0624.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c062a.  v6:= temp @kind object;
  #L3c062c.  call temp:= `getByteArray`(v6, v3) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getByteArray:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c0632.  v6:= temp @kind object;
  #L3c0634.  v8:= 0I;
  #L3c0636.  if v8 >= v3 then goto L3c0662;
  #L3c063a.  v9:= v8 + 3;
  #L3c063e.  call temp:= `getByte`(v12, v9) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c0644.  v9:= temp;
  #L3c0646.  v10:= v1 + v8 @kind int;
  #L3c064a.  call temp:= `getByte`(v11, v10) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c0650.  v10:= temp;
  #L3c0652.  v9:= v9 ^& v10 @kind int;
  #L3c0654.  v9:= (`byte`) v9 @kind i2b;
  #L3c0656.  call `setByte`(v6, v8, v9) @signature `Lcom/mastercard/api/bytes/ByteArray;.setByte:(IB)V` @kind interface;
  #L3c065c.  v8:= v8 + 1;
  #L3c0660.  goto L3c0636;
  #L3c0662.  v11:= 1I;
  #L3c0664.  if v11 >= v5 then goto L3c0692;
  #L3c0668.  v1:= v11 * v3 @kind int;
  #L3c066c.  v1:= v1 + 3;
  #L3c0670.  v11:= v11 + 1;
  #L3c0674.  v8:= v11 * v3 @kind int;
  #L3c0678.  v8:= v8 + 3;
  #L3c067c.  call temp:= `copyOfRange`(v12, v1, v8) @signature `Lcom/mastercard/api/bytes/ByteArray;.copyOfRange:(II)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c0682.  v1:= temp @kind object;
  #L3c0684.  call temp:= `isEqual`(v6, v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.isEqual:(Lcom/mastercard/api/bytes/ByteArray;)Z` @kind interface;
  #L3c068a.  v1:= temp;
  #L3c068c.  if v1 == 0 then goto L3c0664;
  #L3c0690.  v0:= 1I;
  #L3c0692.  call temp:= `getByte`(v13, v7) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c0698.  v11:= temp;
  #L3c069a.  if v0 == 0 then goto L3c06aa;
  #L3c069e.  v11:= v11 ^| v4 @kind int;
  #L3c06a0.  v11:= (`byte`) v11 @kind i2b;
  #L3c06a2.  call `setByte`(v13, v7, v11) @signature `Lcom/mastercard/api/bytes/ByteArray;.setByte:(IB)V` @kind interface;
  #L3c06a8.  goto L3c06b4;
  #L3c06aa.  v11:= v11 ^| v2 @kind int;
  #L3c06ac.  v11:= (`byte`) v11 @kind i2b;
  #L3c06ae.  call `setByte`(v13, v7, v11) @signature `Lcom/mastercard/api/bytes/ByteArray;.setByte:(IB)V` @kind interface;
  #L3c06b4.  return @kind void;
}
