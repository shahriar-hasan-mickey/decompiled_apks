record `com.mastercard.mcbp.core.mpplite.states.CLReadyState` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.mastercard.mcbp.core.mpplite.MPPLiteState` @kind interface {
  `com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` `com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @AccessFlag PROTECTED_FINAL;
}
global `int` `@@com.mastercard.mcbp.core.mpplite.states.CLReadyState.GPO_LC_3` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.mastercard.mcbp.core.mpplite.states.CLReadyState.GPO_LC_D` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.mastercard.api.bytes.ByteArray` `@@com.mastercard.mcbp.core.mpplite.states.CLReadyState.PPSE_AID` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3c0178.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c017e.  v0:= temp @kind object;
  #L3c0180.  v1:= "325041592E5359532E4444463031" @kind object;
  #L3c0184.  call temp:= `fromHexString`(v0, v1) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.fromHexString:(Ljava/lang/String;)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c018a.  v0:= temp @kind object;
  #L3c018c.  `@@com.mastercard.mcbp.core.mpplite.states.CLReadyState.PPSE_AID` @type ^`com.mastercard.api.bytes.ByteArray` := v0 @kind object;
  #L3c0190.  return @kind void;
}
procedure `void` `<init>`(`com.mastercard.mcbp.core.mpplite.states.CLReadyState` v0 @kind this, `com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3c01a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c01aa.  v0.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` := v1 @kind object;
  #L3c01ae.  return @kind void;
}
procedure `com.mastercard.api.bytes.ByteArray` `a`(`com.mastercard.mcbp.core.mpplite.states.CLReadyState` v3 @kind this, `com.mastercard.api.bytes.ByteArray` v4 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.a:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3bfd70.  v0:= 2I;
  #L3bfd72.  call temp:= `getByte`(v4, v0) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3bfd78.  v0:= temp;
  #L3bfd7a.  v1:= 3I;
  #L3bfd7c.  call temp:= `getByte`(v4, v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3bfd82.  v1:= temp;
  #L3bfd84.  v2:= 4I;
  #L3bfd86.  if v0 != v2 then goto L3bff0a;
  #L3bfd8a.  if v1 == 0 then goto L3bfd92;
  #L3bfd8e.  goto L3bff0a;
  #L3bfd92.  call temp:= `parseSelectAID`(v3, v4) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.parseSelectAID:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfd98.  v4:= temp @kind object;
  #L3bfd9a.  v0:= v3.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bfd9e.  call temp:= `getProfile`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getProfile:()Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;` @kind virtual;
  #L3bfda4.  v0:= temp @kind object;
  #L3bfda6.  v1:= `@@com.mastercard.mcbp.core.mpplite.states.CLReadyState.PPSE_AID` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bfdaa.  call temp:= `isEqual`(v4, v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.isEqual:(Lcom/mastercard/api/bytes/ByteArray;)Z` @kind interface;
  #L3bfdb0.  v1:= temp;
  #L3bfdb2.  v2:= -28672I;
  #L3bfdb6.  if v1 == 0 then goto L3bfe00;
  #L3bfdba.  v4:= v3.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bfdbe.  v1:= new `com.mastercard.mcbp.core.mpplite.states.CLNotSelectedState`;
  #L3bfdc2.  call `<init>`(v1, v4) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLNotSelectedState;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;)V` @kind direct;
  #L3bfdc8.  call `setState`(v4, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.setState:(Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;)V` @kind virtual;
  #L3bfdce.  call temp:= `getContactlessPaymentData`(v0) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;.getContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;` @kind virtual;
  #L3bfdd4.  v4:= temp @kind object;
  #L3bfdd6.  call temp:= `getPPSE_FCI`(v4) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;.getPPSE_FCI:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfddc.  v4:= temp @kind object;
  #L3bfdde.  call temp:= `clone`(v4) @signature `Lcom/mastercard/api/bytes/ByteArray;.clone:()Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3bfde4.  v4:= temp @kind object;
  #L3bfde6.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3bfdec.  v0:= temp @kind object;
  #L3bfdee.  call temp:= `getFromWord`(v0, v2) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfdf4.  v0:= temp @kind object;
  #L3bfdf6.  call temp:= `append`(v4, v0) @signature `Lcom/mastercard/api/bytes/ByteArray;.append:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3bfdfc.  v4:= temp @kind object;
  #L3bfdfe.  return v4 @kind object;
  #L3bfe00.  call temp:= `getContactlessPaymentData`(v0) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;.getContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;` @kind virtual;
  #L3bfe06.  v1:= temp @kind object;
  #L3bfe08.  call temp:= `getAID`(v1) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;.getAID:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfe0e.  v1:= temp @kind object;
  #L3bfe10.  call temp:= `isEqual`(v4, v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.isEqual:(Lcom/mastercard/api/bytes/ByteArray;)Z` @kind interface;
  #L3bfe16.  v1:= temp;
  #L3bfe18.  if v1 == 0 then goto L3bfe62;
  #L3bfe1c.  v4:= v3.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bfe20.  v1:= new `com.mastercard.mcbp.core.mpplite.states.CLSelectedState`;
  #L3bfe24.  call `<init>`(v1, v4) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLSelectedState;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;)V` @kind direct;
  #L3bfe2a.  call `setState`(v4, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.setState:(Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;)V` @kind virtual;
  #L3bfe30.  call temp:= `getContactlessPaymentData`(v0) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;.getContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;` @kind virtual;
  #L3bfe36.  v4:= temp @kind object;
  #L3bfe38.  call temp:= `getPaymentFCI`(v4) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;.getPaymentFCI:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfe3e.  v4:= temp @kind object;
  #L3bfe40.  call temp:= `clone`(v4) @signature `Lcom/mastercard/api/bytes/ByteArray;.clone:()Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3bfe46.  v4:= temp @kind object;
  #L3bfe48.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3bfe4e.  v0:= temp @kind object;
  #L3bfe50.  call temp:= `getFromWord`(v0, v2) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfe56.  v0:= temp @kind object;
  #L3bfe58.  call temp:= `append`(v4, v0) @signature `Lcom/mastercard/api/bytes/ByteArray;.append:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3bfe5e.  v4:= temp @kind object;
  #L3bfe60.  return v4 @kind object;
  #L3bfe62.  call temp:= `getContactlessPaymentData`(v0) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;.getContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;` @kind virtual;
  #L3bfe68.  v0:= temp @kind object;
  #L3bfe6a.  call temp:= `getAlternateContactlessPaymentData`(v0) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;.getAlternateContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/AlternateContactlessPaymentData;` @kind virtual;
  #L3bfe70.  v0:= temp @kind object;
  #L3bfe72.  if v0 == 0 then goto L3bfede;
  #L3bfe76.  call temp:= `getAID`(v0) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/AlternateContactlessPaymentData;.getAID:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfe7c.  v1:= temp @kind object;
  #L3bfe7e.  call temp:= `isEqual`(v4, v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.isEqual:(Lcom/mastercard/api/bytes/ByteArray;)Z` @kind interface;
  #L3bfe84.  v4:= temp;
  #L3bfe86.  if v4 != 0 then goto L3bfe8c;
  #L3bfe8a.  goto L3bfede;
  #L3bfe8c.  v4:= v3.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bfe90.  call temp:= `getClContext`(v4) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/CLContext;` @kind virtual;
  #L3bfe96.  v4:= temp @kind object;
  #L3bfe98.  v1:= 1I;
  #L3bfe9a.  call `setAlternateAID`(v4, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setAlternateAID:(Z)V` @kind virtual;
  #L3bfea0.  v4:= v3.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bfea4.  v1:= new `com.mastercard.mcbp.core.mpplite.states.CLSelectedState`;
  #L3bfea8.  call `<init>`(v1, v4) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLSelectedState;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;)V` @kind direct;
  #L3bfeae.  call `setState`(v4, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.setState:(Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;)V` @kind virtual;
  #L3bfeb4.  call temp:= `getPaymentFCI`(v0) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/AlternateContactlessPaymentData;.getPaymentFCI:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfeba.  v4:= temp @kind object;
  #L3bfebc.  call temp:= `clone`(v4) @signature `Lcom/mastercard/api/bytes/ByteArray;.clone:()Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3bfec2.  v4:= temp @kind object;
  #L3bfec4.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3bfeca.  v0:= temp @kind object;
  #L3bfecc.  call temp:= `getFromWord`(v0, v2) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfed2.  v0:= temp @kind object;
  #L3bfed4.  call temp:= `append`(v4, v0) @signature `Lcom/mastercard/api/bytes/ByteArray;.append:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3bfeda.  v4:= temp @kind object;
  #L3bfedc.  return v4 @kind object;
  #L3bfede.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3bfee4.  v4:= temp @kind object;
  #L3bfee6.  v0:= 27266I;
  #L3bfeea.  call temp:= `getFromWord`(v4, v0) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfef0.  v4:= temp @kind object;
  #L3bfef2.  return v4 @kind object;
  #L3bfef4.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3bfefa.  v4:= temp @kind object;
  #L3bfefc.  v0:= 26368I;
  #L3bff00.  call temp:= `getFromWord`(v4, v0) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bff06.  v4:= temp @kind object;
  #L3bff08.  return v4 @kind object;
  #L3bff0a.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3bff10.  v4:= temp @kind object;
  #L3bff12.  v0:= 27270I;
  #L3bff16.  call temp:= `getFromWord`(v4, v0) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bff1c.  v4:= temp @kind object;
  #L3bff1e.  return v4 @kind object;
  catch `java.lang.Exception` @[L3bfd92..L3bfd9a] goto L3bfef4;
}
procedure `boolean` `isTerminalOffline`(`byte` v1 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.isTerminalOffline:(B)Z` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;

  #L3bfc7c.  v1:= v1 ^& 15;
  #L3bfc80.  v0:= 3I;
  #L3bfc82.  if v1 == v0 then goto L3bfc92;
  #L3bfc86.  v0:= 6I;
  #L3bfc88.  if v1 != v0 then goto L3bfc8e;
  #L3bfc8c.  goto L3bfc92;
  #L3bfc8e.  v1:= 0I;
  #L3bfc90.  return v1;
  #L3bfc92.  v1:= 1I;
  #L3bfc94.  return v1;
}
procedure `com.mastercard.mcbp.core.mpplite.ReturnCode` `cancelPayment`(`com.mastercard.mcbp.core.mpplite.states.CLReadyState` v3 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.cancelPayment:()Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3c006c.  v0:= v3.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c0070.  call `clearCredentials`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.clearCredentials:()V` @kind virtual;
  #L3c0076.  v0:= v3.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c007a.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/CLContext;` @kind virtual;
  #L3c0080.  v0:= temp @kind object;
  #L3c0082.  call `wipe`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.wipe:()V` @kind virtual;
  #L3c0088.  v0:= v3.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c008c.  v1:= new `com.mastercard.mcbp.core.mpplite.states.InitializedState`;
  #L3c0090.  call temp:= `getProfile`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getProfile:()Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;` @kind virtual;
  #L3c0096.  v2:= temp @kind object;
  #L3c0098.  call `<init>`(v1, v0, v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/InitializedState;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;)V` @kind direct;
  #L3c009e.  call `setState`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.setState:(Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;)V` @kind virtual;
  #L3c00a4.  v0:= `@@com.mastercard.mcbp.core.mpplite.ReturnCode.OK` @type ^`com.mastercard.mcbp.core.mpplite.ReturnCode` @kind object;
  #L3c00a8.  return v0 @kind object;
}
procedure `com.mastercard.mcbp.core.mpplite.states.RemoteCryptogramResult` `createRemoteCryptogram`(`com.mastercard.mcbp.core.mpplite.states.CLReadyState` v1 @kind this, `com.mastercard.mcbp.core.mobilekernel.CryptogramInput` v2 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.createRemoteCryptogram:(Lcom/mastercard/mcbp/core/mobilekernel/CryptogramInput;)Lcom/mastercard/mcbp/core/mpplite/states/RemoteCryptogramResult;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c0158.  v2:= new `com.mastercard.mcbp.core.mpplite.states.RemoteCryptogramResult`;
  #L3c015c.  v0:= `@@com.mastercard.mcbp.core.mpplite.ReturnCode.STATE_ERROR` @type ^`com.mastercard.mcbp.core.mpplite.ReturnCode` @kind object;
  #L3c0160.  call `<init>`(v2, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/RemoteCryptogramResult;.<init>:(Lcom/mastercard/mcbp/core/mpplite/ReturnCode;)V` @kind direct;
  #L3c0166.  return v2 @kind object;
}
procedure `com.mastercard.mcbp.core.mpplite.ReturnCode` `initialize`(`com.mastercard.mcbp.core.mpplite.states.CLReadyState` v0 @kind this, `com.mastercard.mcbp.core.mcbpcards.profile.DC_CP_MPP` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.initialize:(Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;)Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @AccessFlag PUBLIC {
    temp;

  #L3c00bc.  v1:= `@@com.mastercard.mcbp.core.mpplite.ReturnCode.STATE_ERROR` @type ^`com.mastercard.mcbp.core.mpplite.ReturnCode` @kind object;
  #L3c00c0.  return v1 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `parseSelectAID`(`com.mastercard.mcbp.core.mpplite.states.CLReadyState` v4 @kind this, `com.mastercard.api.bytes.ByteArray` v5 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.parseSelectAID:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bfca8.  v0:= 4I;
  #L3bfcaa.  call temp:= `getByte`(v5, v0) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3bfcb0.  v0:= temp;
  #L3bfcb2.  v0:= v0 ^& 255;
  #L3bfcb6.  v0:= (`byte`) v0 @kind i2b;
  #L3bfcb8.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3bfcbe.  v1:= temp @kind object;
  #L3bfcc0.  call temp:= `getByteArray`(v1, v0) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getByteArray:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfcc6.  v1:= temp @kind object;
  #L3bfcc8.  v2:= 5I;
  #L3bfcca.  v3:= 0I;
  #L3bfccc.  call `copyBytes`(v1, v5, v2, v3, v0) @signature `Lcom/mastercard/api/bytes/ByteArray;.copyBytes:(Lcom/mastercard/api/bytes/ByteArray;III)V` @kind interface;
  #L3bfcd2.  return v1 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `processApdu`(`com.mastercard.mcbp.core.mpplite.states.CLReadyState` v2 @kind this, `com.mastercard.api.bytes.ByteArray` v3 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.processApdu:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bfce4.  v0:= 1I;
  #L3bfce6.  call temp:= `getByte`(v3, v0) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3bfcec.  v0:= temp;
  #L3bfcee.  v1:= -92I;
  #L3bfcf2.  if v0 == v1 then goto L3bfd54;
  #L3bfcf6.  v1:= -88I;
  #L3bfcfa.  if v0 == v1 then goto L3bfd4a;
  #L3bfcfe.  v1:= -82I;
  #L3bfd02.  if v0 == v1 then goto L3bfd40;
  #L3bfd06.  v1:= -78I;
  #L3bfd0a.  if v0 == v1 then goto L3bfd36;
  #L3bfd0e.  v1:= 42I;
  #L3bfd12.  if v0 == v1 then goto L3bfd2c;
  #L3bfd16.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3bfd1c.  v3:= temp @kind object;
  #L3bfd1e.  v0:= 27904I;
  #L3bfd22.  call temp:= `getFromWord`(v3, v0) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfd28.  v3:= temp @kind object;
  #L3bfd2a.  return v3 @kind object;
  #L3bfd2c.  call temp:= `processComputeCC`(v2, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.processComputeCC:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfd32.  v3:= temp @kind object;
  #L3bfd34.  return v3 @kind object;
  #L3bfd36.  call temp:= `processReadRecord`(v2, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.processReadRecord:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfd3c.  v3:= temp @kind object;
  #L3bfd3e.  return v3 @kind object;
  #L3bfd40.  call temp:= `processGenAC`(v2, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.processGenAC:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfd46.  v3:= temp @kind object;
  #L3bfd48.  return v3 @kind object;
  #L3bfd4a.  call temp:= `processGPO`(v2, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.processGPO:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfd50.  v3:= temp @kind object;
  #L3bfd52.  return v3 @kind object;
  #L3bfd54.  call temp:= `a`(v2, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.a:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind direct;
  #L3bfd5a.  v3:= temp @kind object;
  #L3bfd5c.  return v3 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `processComputeCC`(`com.mastercard.api.bytes.ByteArray` v0 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.processComputeCC:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `processGPO`(`com.mastercard.api.bytes.ByteArray` v0 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.processGPO:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `processGenAC`(`com.mastercard.api.bytes.ByteArray` v0 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.processGenAC:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `processReadRecord`(`com.mastercard.api.bytes.ByteArray` v0 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.processReadRecord:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `com.mastercard.api.bytes.ByteArray` `readRecord`(`com.mastercard.mcbp.core.mpplite.states.CLReadyState` v8 @kind this, `com.mastercard.api.bytes.ByteArray` v9 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.readRecord:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3bff40.  v0:= new `com.mastercard.api.utils.apdu.emv.ReadRecordApdu`;
  #L3bff44.  call `<init>`(v0, v9) @signature `Lcom/mastercard/api/utils/apdu/emv/ReadRecordApdu;.<init>:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind direct;
  #L3bff4a.  v1:= 2I;
  #L3bff4c.  call temp:= `getByte`(v9, v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3bff52.  v1:= temp;
  #L3bff54.  v2:= 3I;
  #L3bff56.  call temp:= `getByte`(v9, v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3bff5c.  v9:= temp;
  #L3bff5e.  if v1 == 0 then goto L3c0044;
  #L3bff62.  v9:= v9 ^& 7;
  #L3bff66.  v1:= 4I;
  #L3bff68.  if v9 == v1 then goto L3bff6e;
  #L3bff6c.  goto L3c0044;
  #L3bff6e.  call temp:= `getRecordNumber`(v0) @signature `Lcom/mastercard/api/utils/apdu/emv/ReadRecordApdu;.getRecordNumber:()B` @kind virtual;
  #L3bff74.  v9:= temp;
  #L3bff76.  call temp:= `getSfiNumber`(v0) @signature `Lcom/mastercard/api/utils/apdu/emv/ReadRecordApdu;.getSfiNumber:()B` @kind virtual;
  #L3bff7c.  v0:= temp;
  #L3bff7e.  v1:= -1I;
  #L3bff80.  v2:= 27272I;
  #L3bff84.  if v9 == v1 then goto L3c0032;
  #L3bff88.  v1:= v8.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bff8c.  call temp:= `getProfile`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getProfile:()Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;` @kind virtual;
  #L3bff92.  v1:= temp @kind object;
  #L3bff94.  call temp:= `getContactlessPaymentData`(v1) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;.getContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;` @kind virtual;
  #L3bff9a.  v1:= temp @kind object;
  #L3bff9c.  call temp:= `getRecords`(v1) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;.getRecords:()[Lcom/mastercard/mcbp/core/mcbpcards/profile/Records;` @kind virtual;
  #L3bffa2.  v1:= temp @kind object;
  #L3bffa4.  if v1 == 0 then goto L3c0020;
  #L3bffa8.  v3:= length @variable v1;
  #L3bffaa.  if v3 != 0 then goto L3bffb0;
  #L3bffae.  goto L3c0020;
  #L3bffb0.  v3:= 0I;
  #L3bffb2.  v4:= length @variable v1;
  #L3bffb4.  v5:= 0I;
  #L3bffb6.  if v5 >= v4 then goto L3bffe4;
  #L3bffba.  v6:= v1[v5] @kind object;
  #L3bffbe.  call temp:= `getRecordNumber`(v6) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/Records;.getRecordNumber:()B` @kind virtual;
  #L3bffc4.  v7:= temp;
  #L3bffc6.  if v7 != v9 then goto L3bffde;
  #L3bffca.  call temp:= `getSFI`(v6) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/Records;.getSFI:()B` @kind virtual;
  #L3bffd0.  v7:= temp;
  #L3bffd2.  if v7 != v0 then goto L3bffde;
  #L3bffd6.  call temp:= `getRecordValue`(v6) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/Records;.getRecordValue:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bffdc.  v3:= temp @kind object;
  #L3bffde.  v5:= v5 + 1;
  #L3bffe2.  goto L3bffb6;
  #L3bffe4.  if v3 != 0 then goto L3bfffa;
  #L3bffe8.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3bffee.  v9:= temp @kind object;
  #L3bfff0.  call temp:= `getFromWord`(v9, v2) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bfff6.  v9:= temp @kind object;
  #L3bfff8.  return v9 @kind object;
  #L3bfffa.  call temp:= `clone`(v3) @signature `Lcom/mastercard/api/bytes/ByteArray;.clone:()Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c0000.  v9:= temp @kind object;
  #L3c0002.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c0008.  v0:= temp @kind object;
  #L3c000a.  v1:= -28672I;
  #L3c000e.  call temp:= `getFromWord`(v0, v1) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c0014.  v0:= temp @kind object;
  #L3c0016.  call temp:= `append`(v9, v0) @signature `Lcom/mastercard/api/bytes/ByteArray;.append:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c001c.  v9:= temp @kind object;
  #L3c001e.  return v9 @kind object;
  #L3c0020.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c0026.  v9:= temp @kind object;
  #L3c0028.  call temp:= `getFromWord`(v9, v2) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c002e.  v9:= temp @kind object;
  #L3c0030.  return v9 @kind object;
  #L3c0032.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c0038.  v9:= temp @kind object;
  #L3c003a.  call temp:= `getFromWord`(v9, v2) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c0040.  v9:= temp @kind object;
  #L3c0042.  return v9 @kind object;
  #L3c0044.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c004a.  v9:= temp @kind object;
  #L3c004c.  v0:= 27270I;
  #L3c0050.  call temp:= `getFromWord`(v9, v0) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c0056.  v9:= temp @kind object;
  #L3c0058.  return v9 @kind object;
}
procedure `com.mastercard.mcbp.core.mpplite.ReturnCode` `startContactLessPayment`(`com.mastercard.mcbp.core.mpplite.states.CLReadyState` v0 @kind this, `com.mastercard.mcbp.core.mpplite.TransactionCredentials` v1 @kind object, `com.mastercard.mcbp.core.mpplite.ContactLessTransactionListener` v2 @kind object, `com.mastercard.mcbp.core.mcbpcards.TransactionInformation` v3 @kind object, `boolean` v4 , `boolean` v5 , `boolean` v6 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.startContactLessPayment:(Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;Lcom/mastercard/mcbp/core/mpplite/ContactLessTransactionListener;Lcom/mastercard/mcbp/core/mcbpcards/TransactionInformation;ZZZ)Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @AccessFlag PUBLIC {
    temp;

  #L3c00d4.  v1:= `@@com.mastercard.mcbp.core.mpplite.ReturnCode.STATE_ERROR` @type ^`com.mastercard.mcbp.core.mpplite.ReturnCode` @kind object;
  #L3c00d8.  return v1 @kind object;
}
procedure `com.mastercard.mcbp.core.mpplite.ReturnCode` `startRemotePayment`(`com.mastercard.mcbp.core.mpplite.states.CLReadyState` v0 @kind this, `com.mastercard.mcbp.core.mpplite.TransactionCredentials` v1 @kind object, `boolean` v2 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.startRemotePayment:(Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;Z)Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @AccessFlag PUBLIC {
    temp;

  #L3c00ec.  v1:= `@@com.mastercard.mcbp.core.mpplite.ReturnCode.STATE_ERROR` @type ^`com.mastercard.mcbp.core.mpplite.ReturnCode` @kind object;
  #L3c00f0.  return v1 @kind object;
}
procedure `com.mastercard.mcbp.core.mpplite.ReturnCode` `stop`(`com.mastercard.mcbp.core.mpplite.states.CLReadyState` v2 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.stop:()Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c0104.  call temp:= `cancelPayment`(v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.cancelPayment:()Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @kind virtual;
  #L3c010a.  v0:= v2.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c010e.  call temp:= `getProfile`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getProfile:()Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;` @kind virtual;
  #L3c0114.  v0:= temp @kind object;
  #L3c0116.  if v0 == 0 then goto L3c012c;
  #L3c011a.  call `wipe`(v0) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;.wipe:()V` @kind virtual;
  #L3c0120.  v0:= v2.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c0124.  v1:= 0I;
  #L3c0126.  call `setProfile`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.setProfile:(Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;)V` @kind virtual;
  #L3c012c.  v0:= v2.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c0130.  v1:= new `com.mastercard.mcbp.core.mpplite.states.StoppedState`;
  #L3c0134.  call `<init>`(v1, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/StoppedState;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;)V` @kind direct;
  #L3c013a.  call `setState`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.setState:(Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;)V` @kind virtual;
  #L3c0140.  v0:= `@@com.mastercard.mcbp.core.mpplite.ReturnCode.OK` @type ^`com.mastercard.mcbp.core.mpplite.ReturnCode` @kind object;
  #L3c0144.  return v0 @kind object;
}
