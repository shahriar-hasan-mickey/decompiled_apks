record `com.mastercard.mcbp.core.mpplite.MPPLite` @kind class @AccessFlag PUBLIC {
  `com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` `com.mastercard.mcbp.core.mpplite.MPPLite.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.mastercard.mcbp.core.mpplite.MPPLite` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLite;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3bdb30.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3bdb36.  v0:= new `com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext`;
  #L3bdb3a.  call `<init>`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.<init>:()V` @kind direct;
  #L3bdb40.  v1.`com.mastercard.mcbp.core.mpplite.MPPLite.a` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` := v0 @kind object;
  #L3bdb44.  return @kind void;
}
procedure `com.mastercard.mcbp.core.mpplite.ReturnCode` `cancelPayment`(`com.mastercard.mcbp.core.mpplite.MPPLite` v2 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLite;.cancelPayment:()Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bda00.  v0:= v2.`com.mastercard.mcbp.core.mpplite.MPPLite.a` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bda04.  call temp:= `getState`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getState:()Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;` @kind virtual;
  #L3bda0a.  v0:= temp @kind object;
  #L3bda0c.  call temp:= `getState`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;.getState:()Lcom/mastercard/mcbp/core/mpplite/MPPLiteStateValue;` @kind interface;
  #L3bda12.  v0:= temp @kind object;
  #L3bda14.  v1:= `@@com.mastercard.mcbp.core.mpplite.MPPLiteStateValue.CLNotSelected` @type ^`com.mastercard.mcbp.core.mpplite.MPPLiteStateValue` @kind object;
  #L3bda18.  if v0 != v1 then goto L3bda4a;
  #L3bda1c.  v0:= v2.`com.mastercard.mcbp.core.mpplite.MPPLite.a` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bda20.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/CLContext;` @kind virtual;
  #L3bda26.  v0:= temp @kind object;
  #L3bda28.  call temp:= `getTransactionListener`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.getTransactionListener:()Lcom/mastercard/mcbp/core/mpplite/ContactLessTransactionListener;` @kind virtual;
  #L3bda2e.  v0:= temp @kind object;
  #L3bda30.  v1:= v2.`com.mastercard.mcbp.core.mpplite.MPPLite.a` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bda34.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/CLContext;` @kind virtual;
  #L3bda3a.  v1:= temp @kind object;
  #L3bda3c.  call temp:= `getTransactionContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.getTransactionContext:()Lcom/mastercard/mcbp/core/mcbpcards/ContactlessTransactionContext;` @kind virtual;
  #L3bda42.  v1:= temp @kind object;
  #L3bda44.  call `onContactlessTransactionAbort`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/ContactLessTransactionListener;.onContactlessTransactionAbort:(Lcom/mastercard/mcbp/core/mcbpcards/ContactlessTransactionContext;)V` @kind interface;
  #L3bda4a.  v0:= v2.`com.mastercard.mcbp.core.mpplite.MPPLite.a` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bda4e.  call temp:= `getState`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getState:()Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;` @kind virtual;
  #L3bda54.  v0:= temp @kind object;
  #L3bda56.  call temp:= `cancelPayment`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;.cancelPayment:()Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @kind interface;
  #L3bda5c.  v0:= temp @kind object;
  #L3bda5e.  return v0 @kind object;
}
procedure `com.mastercard.mcbp.core.mpplite.states.RemoteCryptogramResult` `createRemoteCryptogram`(`com.mastercard.mcbp.core.mpplite.MPPLite` v1 @kind this, `com.mastercard.mcbp.core.mobilekernel.CryptogramInput` v2 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLite;.createRemoteCryptogram:(Lcom/mastercard/mcbp/core/mobilekernel/CryptogramInput;)Lcom/mastercard/mcbp/core/mpplite/states/RemoteCryptogramResult;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdb08.  v0:= v1.`com.mastercard.mcbp.core.mpplite.MPPLite.a` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bdb0c.  call temp:= `getState`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getState:()Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;` @kind virtual;
  #L3bdb12.  v0:= temp @kind object;
  #L3bdb14.  call temp:= `createRemoteCryptogram`(v0, v2) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;.createRemoteCryptogram:(Lcom/mastercard/mcbp/core/mobilekernel/CryptogramInput;)Lcom/mastercard/mcbp/core/mpplite/states/RemoteCryptogramResult;` @kind interface;
  #L3bdb1a.  v2:= temp @kind object;
  #L3bdb1c.  return v2 @kind object;
}
procedure `boolean` `hasCredentials`(`com.mastercard.mcbp.core.mpplite.MPPLite` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLite;.hasCredentials:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bd9ac.  v0:= v1.`com.mastercard.mcbp.core.mpplite.MPPLite.a` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bd9b0.  call temp:= `getState`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getState:()Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;` @kind virtual;
  #L3bd9b6.  v0:= temp @kind object;
  #L3bd9b8.  v0:= instanceof @variable v0 @type ^`com.mastercard.mcbp.core.mpplite.states.CLNotSelectedState` @kind boolean;
  #L3bd9bc.  if v0 == 0 then goto L3bd9c4;
  #L3bd9c0.  v0:= 1I;
  #L3bd9c2.  return v0;
  #L3bd9c4.  v0:= 0I;
  #L3bd9c6.  return v0;
}
procedure `com.mastercard.mcbp.core.mpplite.ReturnCode` `initialize`(`com.mastercard.mcbp.core.mpplite.MPPLite` v2 @kind this, `com.mastercard.mcbp.core.mcbpcards.profile.DC_CP_MPP` v3 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLite;.initialize:(Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;)Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bda70.  v0:= v2.`com.mastercard.mcbp.core.mpplite.MPPLite.a` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bda74.  v1:= new `com.mastercard.mcbp.core.mpplite.states.StoppedState`;
  #L3bda78.  call `<init>`(v1, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/StoppedState;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;)V` @kind direct;
  #L3bda7e.  call `setState`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.setState:(Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;)V` @kind virtual;
  #L3bda84.  v0:= v2.`com.mastercard.mcbp.core.mpplite.MPPLite.a` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bda88.  call temp:= `getState`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getState:()Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;` @kind virtual;
  #L3bda8e.  v0:= temp @kind object;
  #L3bda90.  call temp:= `initialize`(v0, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;.initialize:(Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;)Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @kind interface;
  #L3bda96.  v3:= temp @kind object;
  #L3bda98.  return v3 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `processApdu`(`com.mastercard.mcbp.core.mpplite.MPPLite` v1 @kind this, `com.mastercard.api.bytes.ByteArray` v2 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLite;.processApdu:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bd9d8.  v0:= v1.`com.mastercard.mcbp.core.mpplite.MPPLite.a` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bd9dc.  call temp:= `getState`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getState:()Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;` @kind virtual;
  #L3bd9e2.  v0:= temp @kind object;
  #L3bd9e4.  call temp:= `processApdu`(v0, v2) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;.processApdu:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3bd9ea.  v2:= temp @kind object;
  #L3bd9ec.  return v2 @kind object;
}
procedure `com.mastercard.mcbp.core.mpplite.ReturnCode` `startContactLessPayment`(`com.mastercard.mcbp.core.mpplite.MPPLite` v8 @kind this, `com.mastercard.mcbp.core.mpplite.TransactionCredentials` v9 @kind object, `com.mastercard.mcbp.core.mpplite.ContactLessTransactionListener` v10 @kind object, `com.mastercard.mcbp.core.mcbpcards.TransactionInformation` v11 @kind object, `boolean` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLite;.startContactLessPayment:(Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;Lcom/mastercard/mcbp/core/mpplite/ContactLessTransactionListener;Lcom/mastercard/mcbp/core/mcbpcards/TransactionInformation;ZZZ)Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3bdaac.  v0:= v8.`com.mastercard.mcbp.core.mpplite.MPPLite.a` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bdab0.  call temp:= `getState`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getState:()Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;` @kind virtual;
  #L3bdab6.  v1:= temp @kind object;
  #L3bdab8.  v2:= v9 @kind object;
  #L3bdaba.  v3:= v10 @kind object;
  #L3bdabc.  v4:= v11 @kind object;
  #L3bdabe.  v5:= v12;
  #L3bdac0.  v6:= v13;
  #L3bdac2.  v7:= v14;
  #L3bdac4.  call temp:= `startContactLessPayment`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;.startContactLessPayment:(Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;Lcom/mastercard/mcbp/core/mpplite/ContactLessTransactionListener;Lcom/mastercard/mcbp/core/mcbpcards/TransactionInformation;ZZZ)Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @kind interface;
  #L3bdaca.  v9:= temp @kind object;
  #L3bdacc.  return v9 @kind object;
}
procedure `com.mastercard.mcbp.core.mpplite.ReturnCode` `startRemotePayment`(`com.mastercard.mcbp.core.mpplite.MPPLite` v1 @kind this, `com.mastercard.mcbp.core.mpplite.TransactionCredentials` v2 @kind object, `boolean` v3 ) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLite;.startRemotePayment:(Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;Z)Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdae0.  v0:= v1.`com.mastercard.mcbp.core.mpplite.MPPLite.a` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bdae4.  call temp:= `getState`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getState:()Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;` @kind virtual;
  #L3bdaea.  v0:= temp @kind object;
  #L3bdaec.  call temp:= `startRemotePayment`(v0, v2, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;.startRemotePayment:(Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;Z)Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @kind interface;
  #L3bdaf2.  v2:= temp @kind object;
  #L3bdaf4.  return v2 @kind object;
}
procedure `void` `stop`(`com.mastercard.mcbp.core.mpplite.MPPLite` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLite;.stop:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdb58.  v0:= v1.`com.mastercard.mcbp.core.mpplite.MPPLite.a` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3bdb5c.  call temp:= `getState`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getState:()Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;` @kind virtual;
  #L3bdb62.  v0:= temp @kind object;
  #L3bdb64.  call temp:= `stop`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;.stop:()Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @kind interface;
  #L3bdb6a.  return @kind void;
}
