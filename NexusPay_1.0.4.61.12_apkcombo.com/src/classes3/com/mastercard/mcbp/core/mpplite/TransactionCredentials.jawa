record `com.mastercard.mcbp.core.mpplite.TransactionCredentials` @kind class @AccessFlag PUBLIC {
  `com.mastercard.api.bytes.ByteArray` `com.mastercard.mcbp.core.mpplite.TransactionCredentials.a` @AccessFlag PRIVATE;
  `com.mastercard.api.bytes.ByteArray` `com.mastercard.mcbp.core.mpplite.TransactionCredentials.b` @AccessFlag PRIVATE;
  `com.mastercard.api.bytes.ByteArray` `com.mastercard.mcbp.core.mpplite.TransactionCredentials.c` @AccessFlag PRIVATE;
  `com.mastercard.api.bytes.ByteArray` `com.mastercard.mcbp.core.mpplite.TransactionCredentials.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.mastercard.mcbp.core.mpplite.TransactionCredentials` v0 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3bdd9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3bdda2.  return @kind void;
}
procedure `void` `<init>`(`com.mastercard.mcbp.core.mpplite.TransactionCredentials` v0 @kind this, `com.mastercard.api.bytes.ByteArray` v1 @kind object, `com.mastercard.api.bytes.ByteArray` v2 @kind object, `com.mastercard.api.bytes.ByteArray` v3 @kind object, `com.mastercard.api.bytes.ByteArray` v4 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;.<init>:(Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3bddb4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3bddba.  v0.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.a` @type ^`com.mastercard.api.bytes.ByteArray` := v1 @kind object;
  #L3bddbe.  v0.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.b` @type ^`com.mastercard.api.bytes.ByteArray` := v2 @kind object;
  #L3bddc2.  v0.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.c` @type ^`com.mastercard.api.bytes.ByteArray` := v3 @kind object;
  #L3bddc6.  v0.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.d` @type ^`com.mastercard.api.bytes.ByteArray` := v4 @kind object;
  #L3bddca.  return @kind void;
}
procedure `void` `fillMissingData`(`com.mastercard.mcbp.core.mpplite.TransactionCredentials` v3 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;.fillMissingData:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3bdddc.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3bdde2.  v0:= temp @kind object;
  #L3bdde4.  v1:= v3.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.a` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdde8.  v2:= 16I;
  #L3bddec.  if v1 != 0 then goto L3bde04;
  #L3bddf0.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.getInstance:()Lcom/mastercard/api/crypto/MCBPCryptoService;` @kind static;
  #L3bddf6.  v1:= temp @kind object;
  #L3bddf8.  call temp:= `generateRandom`(v1, v2) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.generateRandom:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bddfe.  v1:= temp @kind object;
  #L3bde00.  v3.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.a` @type ^`com.mastercard.api.bytes.ByteArray` := v1 @kind object;
  #L3bde04.  v1:= v3.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.b` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bde08.  if v1 != 0 then goto L3bde20;
  #L3bde0c.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.getInstance:()Lcom/mastercard/api/crypto/MCBPCryptoService;` @kind static;
  #L3bde12.  v1:= temp @kind object;
  #L3bde14.  call temp:= `generateRandom`(v1, v2) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.generateRandom:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bde1a.  v1:= temp @kind object;
  #L3bde1c.  v3.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.b` @type ^`com.mastercard.api.bytes.ByteArray` := v1 @kind object;
  #L3bde20.  v1:= v3.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.d` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bde24.  if v1 != 0 then goto L3bde40;
  #L3bde28.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.getInstance:()Lcom/mastercard/api/crypto/MCBPCryptoService;` @kind static;
  #L3bde2e.  v1:= temp @kind object;
  #L3bde30.  v2:= 8I;
  #L3bde34.  call temp:= `generateRandom`(v1, v2) @signature `Lcom/mastercard/api/crypto/MCBPCryptoService;.generateRandom:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bde3a.  v1:= temp @kind object;
  #L3bde3c.  v3.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.d` @type ^`com.mastercard.api.bytes.ByteArray` := v1 @kind object;
  #L3bde40.  v1:= v3.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.c` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bde44.  if v1 != 0 then goto L3bde56;
  #L3bde48.  v1:= 1I;
  #L3bde4a.  call temp:= `getFromWord`(v0, v1) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3bde50.  v0:= temp @kind object;
  #L3bde52.  v3.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.c` @type ^`com.mastercard.api.bytes.ByteArray` := v0 @kind object;
  #L3bde56.  return @kind void;
}
procedure `com.mastercard.api.bytes.ByteArray` `getATC`(`com.mastercard.mcbp.core.mpplite.TransactionCredentials` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;.getATC:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdc9c.  v0:= v1.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.c` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdca0.  return v0 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `getIDN`(`com.mastercard.mcbp.core.mpplite.TransactionCredentials` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;.getIDN:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdcb4.  v0:= v1.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.d` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdcb8.  return v0 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `getMDSessionKey`(`com.mastercard.mcbp.core.mpplite.TransactionCredentials` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;.getMDSessionKey:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdccc.  v0:= v1.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.b` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdcd0.  return v0 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `getUMDSessionKey`(`com.mastercard.mcbp.core.mpplite.TransactionCredentials` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;.getUMDSessionKey:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdce4.  v0:= v1.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.a` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdce8.  return v0 @kind object;
}
procedure `void` `setUMDSessionKey`(`com.mastercard.mcbp.core.mpplite.TransactionCredentials` v0 @kind this, `com.mastercard.api.bytes.ByteArray` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;.setUMDSessionKey:(Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC {
    temp;

  #L3bde68.  v0.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.a` @type ^`com.mastercard.api.bytes.ByteArray` := v1 @kind object;
  #L3bde6c.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.mastercard.mcbp.core.mpplite.TransactionCredentials` v2 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bdcfc.  v0:= new `java.lang.StringBuilder`;
  #L3bdd00.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bdd06.  v1:= "TransactionCredentials{UMDSessionKey=" @kind object;
  #L3bdd0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bdd10.  v1:= v2.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.a` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdd14.  call temp:= `getHexString`(v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.getHexString:()Ljava/lang/String;` @kind interface;
  #L3bdd1a.  v1:= temp @kind object;
  #L3bdd1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bdd22.  v1:= ", MDSessionKey=" @kind object;
  #L3bdd26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bdd2c.  v1:= v2.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.b` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdd30.  call temp:= `getHexString`(v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.getHexString:()Ljava/lang/String;` @kind interface;
  #L3bdd36.  v1:= temp @kind object;
  #L3bdd38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bdd3e.  v1:= ", ATC=" @kind object;
  #L3bdd42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bdd48.  v1:= v2.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.c` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdd4c.  call temp:= `getHexString`(v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.getHexString:()Ljava/lang/String;` @kind interface;
  #L3bdd52.  v1:= temp @kind object;
  #L3bdd54.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bdd5a.  v1:= ", IDN=" @kind object;
  #L3bdd5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bdd64.  v1:= v2.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.d` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdd68.  call temp:= `getHexString`(v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.getHexString:()Ljava/lang/String;` @kind interface;
  #L3bdd6e.  v1:= temp @kind object;
  #L3bdd70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bdd76.  v1:= 125I;
  #L3bdd7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bdd80.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bdd86.  v0:= temp @kind object;
  #L3bdd88.  return v0 @kind object;
}
procedure `void` `wipe`(`com.mastercard.mcbp.core.mpplite.TransactionCredentials` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/TransactionCredentials;.wipe:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bde80.  v0:= v1.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.a` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bde84.  call `clearByteArray`(v0) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3bde8a.  v0:= v1.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.b` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bde8e.  call `clearByteArray`(v0) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3bde94.  v0:= v1.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.c` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bde98.  call `clearByteArray`(v0) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3bde9e.  v0:= v1.`com.mastercard.mcbp.core.mpplite.TransactionCredentials.d` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdea2.  call `clearByteArray`(v0) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3bdea8.  return @kind void;
}
