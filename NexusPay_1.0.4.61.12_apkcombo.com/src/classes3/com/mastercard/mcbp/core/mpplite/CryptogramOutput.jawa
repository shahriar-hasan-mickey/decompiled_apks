record `com.mastercard.mcbp.core.mpplite.CryptogramOutput` @kind class @AccessFlag PUBLIC {
  `com.mastercard.api.bytes.ByteArray` `com.mastercard.mcbp.core.mpplite.CryptogramOutput.a` @AccessFlag PRIVATE;
  `com.mastercard.api.bytes.ByteArray` `com.mastercard.mcbp.core.mpplite.CryptogramOutput.b` @AccessFlag PRIVATE;
  `com.mastercard.api.bytes.ByteArray` `com.mastercard.mcbp.core.mpplite.CryptogramOutput.c` @AccessFlag PRIVATE;
  `byte` `com.mastercard.mcbp.core.mpplite.CryptogramOutput.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.mastercard.mcbp.core.mpplite.CryptogramOutput` v0 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/CryptogramOutput;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3bd7c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3bd7ca.  return @kind void;
}
procedure `com.mastercard.api.bytes.ByteArray` `getATC`(`com.mastercard.mcbp.core.mpplite.CryptogramOutput` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/CryptogramOutput;.getATC:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bd6e4.  v0:= v1.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.a` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bd6e8.  return v0 @kind object;
}
procedure `byte` `getCid`(`com.mastercard.mcbp.core.mpplite.CryptogramOutput` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/CryptogramOutput;.getCid:()B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bd6cc.  v0:= v1.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.d` @type ^`byte` @kind byte;
  #L3bd6d0.  return v0;
}
procedure `com.mastercard.api.bytes.ByteArray` `getCryptogram`(`com.mastercard.mcbp.core.mpplite.CryptogramOutput` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/CryptogramOutput;.getCryptogram:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bd6fc.  v0:= v1.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.c` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bd700.  return v0 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `getIssuerApplicationData`(`com.mastercard.mcbp.core.mpplite.CryptogramOutput` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/CryptogramOutput;.getIssuerApplicationData:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bd714.  v0:= v1.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.b` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bd718.  return v0 @kind object;
}
procedure `void` `setATC`(`com.mastercard.mcbp.core.mpplite.CryptogramOutput` v0 @kind this, `com.mastercard.api.bytes.ByteArray` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/CryptogramOutput;.setATC:(Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC {
    temp;

  #L3bd7dc.  v0.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.a` @type ^`com.mastercard.api.bytes.ByteArray` := v1 @kind object;
  #L3bd7e0.  return @kind void;
}
procedure `void` `setCid`(`com.mastercard.mcbp.core.mpplite.CryptogramOutput` v0 @kind this, `byte` v1 ) @signature `Lcom/mastercard/mcbp/core/mpplite/CryptogramOutput;.setCid:(B)V` @AccessFlag PUBLIC {
    temp;

  #L3bd7f4.  v0.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.d` @type ^`byte` := v1 @kind byte;
  #L3bd7f8.  return @kind void;
}
procedure `void` `setCryptogram`(`com.mastercard.mcbp.core.mpplite.CryptogramOutput` v0 @kind this, `com.mastercard.api.bytes.ByteArray` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/CryptogramOutput;.setCryptogram:(Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC {
    temp;

  #L3bd80c.  v0.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.c` @type ^`com.mastercard.api.bytes.ByteArray` := v1 @kind object;
  #L3bd810.  return @kind void;
}
procedure `void` `setIssuerApplicationData`(`com.mastercard.mcbp.core.mpplite.CryptogramOutput` v0 @kind this, `com.mastercard.api.bytes.ByteArray` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/CryptogramOutput;.setIssuerApplicationData:(Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC {
    temp;

  #L3bd824.  v0.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.b` @type ^`com.mastercard.api.bytes.ByteArray` := v1 @kind object;
  #L3bd828.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.mastercard.mcbp.core.mpplite.CryptogramOutput` v2 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/CryptogramOutput;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bd72c.  v0:= new `java.lang.StringBuilder`;
  #L3bd730.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bd736.  v1:= "CryptogramOutput{ATC=" @kind object;
  #L3bd73a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd740.  v1:= v2.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.a` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bd744.  call temp:= `getHexString`(v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.getHexString:()Ljava/lang/String;` @kind interface;
  #L3bd74a.  v1:= temp @kind object;
  #L3bd74c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd752.  v1:= ", issuerApplicationData=" @kind object;
  #L3bd756.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd75c.  v1:= v2.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.b` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bd760.  call temp:= `getHexString`(v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.getHexString:()Ljava/lang/String;` @kind interface;
  #L3bd766.  v1:= temp @kind object;
  #L3bd768.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd76e.  v1:= ", cryptogram=" @kind object;
  #L3bd772.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd778.  v1:= v2.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.c` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bd77c.  call temp:= `getHexString`(v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.getHexString:()Ljava/lang/String;` @kind interface;
  #L3bd782.  v1:= temp @kind object;
  #L3bd784.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd78a.  v1:= ", cid=" @kind object;
  #L3bd78e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd794.  v1:= v2.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.d` @type ^`byte` @kind byte;
  #L3bd798.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd79e.  v1:= 125I;
  #L3bd7a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd7a8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bd7ae.  v0:= temp @kind object;
  #L3bd7b0.  return v0 @kind object;
}
procedure `void` `wipe`(`com.mastercard.mcbp.core.mpplite.CryptogramOutput` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/CryptogramOutput;.wipe:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bd83c.  v0:= v1.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.a` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bd840.  call `clearByteArray`(v0) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3bd846.  v0:= v1.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.c` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bd84a.  call `clearByteArray`(v0) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3bd850.  v0:= v1.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.b` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bd854.  call `clearByteArray`(v0) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3bd85a.  v0:= 0I;
  #L3bd85c.  v1.`com.mastercard.mcbp.core.mpplite.CryptogramOutput.d` @type ^`byte` := v0 @kind byte;
  #L3bd860.  return @kind void;
}
