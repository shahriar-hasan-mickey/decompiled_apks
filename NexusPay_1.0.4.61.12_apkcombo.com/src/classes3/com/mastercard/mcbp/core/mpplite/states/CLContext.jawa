record `com.mastercard.mcbp.core.mpplite.states.CLContext` @kind class @AccessFlag PUBLIC {
  `boolean` `com.mastercard.mcbp.core.mpplite.states.CLContext.a` @AccessFlag PRIVATE;
  `com.mastercard.api.bytes.ByteArray` `com.mastercard.mcbp.core.mpplite.states.CLContext.b` @AccessFlag PRIVATE;
  `com.mastercard.api.bytes.ByteArray` `com.mastercard.mcbp.core.mpplite.states.CLContext.c` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mpplite.states.CLContext.d` @AccessFlag PRIVATE;
  `com.mastercard.api.bytes.ByteArray` `com.mastercard.mcbp.core.mpplite.states.CLContext.e` @AccessFlag PRIVATE;
  `com.mastercard.api.bytes.ByteArray` `com.mastercard.mcbp.core.mpplite.states.CLContext.f` @AccessFlag PRIVATE;
  `com.mastercard.mcbp.core.mpplite.CryptogramOutput` `com.mastercard.mcbp.core.mpplite.states.CLContext.g` @AccessFlag PRIVATE;
  `com.mastercard.api.bytes.ByteArray` `com.mastercard.mcbp.core.mpplite.states.CLContext.h` @AccessFlag PRIVATE;
  `com.mastercard.mcbp.core.mcbpcards.ContactlessTransactionContext` `com.mastercard.mcbp.core.mpplite.states.CLContext.i` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mpplite.states.CLContext.j` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mpplite.states.CLContext.k` @AccessFlag PRIVATE;
  `boolean` `com.mastercard.mcbp.core.mpplite.states.CLContext.l` @AccessFlag PRIVATE;
  `com.mastercard.mcbp.core.mpplite.ContactLessTransactionListener` `com.mastercard.mcbp.core.mpplite.states.CLContext.m` @AccessFlag PRIVATE;
}
global `int` `@@com.mastercard.mcbp.core.mpplite.states.CLContext.TRANSACTION_CONTEXT_LENGTH` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3be00c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3be012.  v0:= new `com.mastercard.mcbp.core.mcbpcards.ContactlessTransactionContext`;
  #L3be016.  call `<init>`(v0) @signature `Lcom/mastercard/mcbp/core/mcbpcards/ContactlessTransactionContext;.<init>:()V` @kind direct;
  #L3be01c.  v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.i` @type ^`com.mastercard.mcbp.core.mcbpcards.ContactlessTransactionContext` := v0 @kind object;
  #L3be020.  return @kind void;
}
procedure `com.mastercard.api.bytes.ByteArray` `getAIP`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.getAIP:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdf4c.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.b` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdf50.  return v0 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `getBlAmount`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.getBlAmount:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdf64.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.e` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdf68.  return v0 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `getBlCurrency`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.getBlCurrency:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdf7c.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.f` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdf80.  return v0 @kind object;
}
procedure `com.mastercard.mcbp.core.mpplite.CryptogramOutput` `getCryptoOut`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.getCryptoOut:()Lcom/mastercard/mcbp/core/mpplite/CryptogramOutput;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdff4.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.g` @type ^`com.mastercard.mcbp.core.mpplite.CryptogramOutput` @kind object;
  #L3bdff8.  return v0 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `getPOSCII`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.getPOSCII:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdf94.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.h` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdf98.  return v0 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `getPdol`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.getPdol:()Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdfac.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.c` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3bdfb0.  return v0 @kind object;
}
procedure `com.mastercard.mcbp.core.mcbpcards.ContactlessTransactionContext` `getTransactionContext`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.getTransactionContext:()Lcom/mastercard/mcbp/core/mcbpcards/ContactlessTransactionContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdfc4.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.i` @type ^`com.mastercard.mcbp.core.mcbpcards.ContactlessTransactionContext` @kind object;
  #L3bdfc8.  return v0 @kind object;
}
procedure `com.mastercard.mcbp.core.mpplite.ContactLessTransactionListener` `getTransactionListener`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.getTransactionListener:()Lcom/mastercard/mcbp/core/mpplite/ContactLessTransactionListener;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdfdc.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.m` @type ^`com.mastercard.mcbp.core.mpplite.ContactLessTransactionListener` @kind object;
  #L3bdfe0.  return v0 @kind object;
}
procedure `boolean` `isAlternateAID`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.isAlternateAID:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bded4.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.a` @type ^`boolean` @kind boolean;
  #L3bded8.  return v0;
}
procedure `boolean` `isBlExactAmount`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.isBlExactAmount:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdeec.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.d` @type ^`boolean` @kind boolean;
  #L3bdef0.  return v0;
}
procedure `boolean` `isCVMRequired`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.isCVMRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdf04.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.k` @type ^`boolean` @kind boolean;
  #L3bdf08.  return v0;
}
procedure `boolean` `isCvmEntered`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.isCvmEntered:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdf1c.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.j` @type ^`boolean` @kind boolean;
  #L3bdf20.  return v0;
}
procedure `boolean` `isOnlineAllowed`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.isOnlineAllowed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdf34.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.l` @type ^`boolean` @kind boolean;
  #L3bdf38.  return v0;
}
procedure `void` `setAIP`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v0 @kind this, `com.mastercard.api.bytes.ByteArray` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setAIP:(Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC {
    temp;

  #L3be034.  call temp:= `clone`(v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.clone:()Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3be03a.  v1:= temp @kind object;
  #L3be03c.  v0.`com.mastercard.mcbp.core.mpplite.states.CLContext.b` @type ^`com.mastercard.api.bytes.ByteArray` := v1 @kind object;
  #L3be040.  return @kind void;
}
procedure `void` `setAlternateAID`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setAlternateAID:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3be054.  v0.`com.mastercard.mcbp.core.mpplite.states.CLContext.a` @type ^`boolean` := v1 @kind boolean;
  #L3be058.  return @kind void;
}
procedure `void` `setBlAmount`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v0 @kind this, `com.mastercard.api.bytes.ByteArray` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setBlAmount:(Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC {
    temp;

  #L3be06c.  v0.`com.mastercard.mcbp.core.mpplite.states.CLContext.e` @type ^`com.mastercard.api.bytes.ByteArray` := v1 @kind object;
  #L3be070.  return @kind void;
}
procedure `void` `setBlCurrency`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v0 @kind this, `com.mastercard.api.bytes.ByteArray` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setBlCurrency:(Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC {
    temp;

  #L3be084.  v0.`com.mastercard.mcbp.core.mpplite.states.CLContext.f` @type ^`com.mastercard.api.bytes.ByteArray` := v1 @kind object;
  #L3be088.  return @kind void;
}
procedure `void` `setBlExactAmount`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setBlExactAmount:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3be09c.  v0.`com.mastercard.mcbp.core.mpplite.states.CLContext.d` @type ^`boolean` := v1 @kind boolean;
  #L3be0a0.  return @kind void;
}
procedure `void` `setCVMEntered`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setCVMEntered:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3be0b4.  v0.`com.mastercard.mcbp.core.mpplite.states.CLContext.j` @type ^`boolean` := v1 @kind boolean;
  #L3be0b8.  return @kind void;
}
procedure `void` `setCVMRequired`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setCVMRequired:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3be0cc.  v0.`com.mastercard.mcbp.core.mpplite.states.CLContext.k` @type ^`boolean` := v1 @kind boolean;
  #L3be0d0.  return @kind void;
}
procedure `void` `setCryptoOut`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v0 @kind this, `com.mastercard.mcbp.core.mpplite.CryptogramOutput` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setCryptoOut:(Lcom/mastercard/mcbp/core/mpplite/CryptogramOutput;)V` @AccessFlag PUBLIC {
    temp;

  #L3be0e4.  v0.`com.mastercard.mcbp.core.mpplite.states.CLContext.g` @type ^`com.mastercard.mcbp.core.mpplite.CryptogramOutput` := v1 @kind object;
  #L3be0e8.  return @kind void;
}
procedure `void` `setOnlineAllowed`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v0 @kind this, `boolean` v1 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setOnlineAllowed:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3be0fc.  v0.`com.mastercard.mcbp.core.mpplite.states.CLContext.l` @type ^`boolean` := v1 @kind boolean;
  #L3be100.  return @kind void;
}
procedure `void` `setPDOL`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v0 @kind this, `com.mastercard.api.bytes.ByteArray` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setPDOL:(Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC {
    temp;

  #L3be114.  call temp:= `clone`(v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.clone:()Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3be11a.  v1:= temp @kind object;
  #L3be11c.  v0.`com.mastercard.mcbp.core.mpplite.states.CLContext.c` @type ^`com.mastercard.api.bytes.ByteArray` := v1 @kind object;
  #L3be120.  return @kind void;
}
procedure `void` `setPOSCII`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v0 @kind this, `com.mastercard.api.bytes.ByteArray` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setPOSCII:(Lcom/mastercard/api/bytes/ByteArray;)V` @AccessFlag PUBLIC {
    temp;

  #L3be134.  v0.`com.mastercard.mcbp.core.mpplite.states.CLContext.h` @type ^`com.mastercard.api.bytes.ByteArray` := v1 @kind object;
  #L3be138.  return @kind void;
}
procedure `void` `setTransactionContext`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v0 @kind this, `com.mastercard.mcbp.core.mcbpcards.ContactlessTransactionContext` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setTransactionContext:(Lcom/mastercard/mcbp/core/mcbpcards/ContactlessTransactionContext;)V` @AccessFlag PUBLIC {
    temp;

  #L3be14c.  v0.`com.mastercard.mcbp.core.mpplite.states.CLContext.i` @type ^`com.mastercard.mcbp.core.mcbpcards.ContactlessTransactionContext` := v1 @kind object;
  #L3be150.  return @kind void;
}
procedure `void` `setTransactionListener`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v0 @kind this, `com.mastercard.mcbp.core.mpplite.ContactLessTransactionListener` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setTransactionListener:(Lcom/mastercard/mcbp/core/mpplite/ContactLessTransactionListener;)V` @AccessFlag PUBLIC {
    temp;

  #L3be164.  v0.`com.mastercard.mcbp.core.mpplite.states.CLContext.m` @type ^`com.mastercard.mcbp.core.mpplite.ContactLessTransactionListener` := v1 @kind object;
  #L3be168.  return @kind void;
}
procedure `void` `wipe`(`com.mastercard.mcbp.core.mpplite.states.CLContext` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.wipe:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3be17c.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.b` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3be180.  call `clearByteArray`(v0) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3be186.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.c` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3be18a.  call `clearByteArray`(v0) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3be190.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.e` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3be194.  call `clearByteArray`(v0) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3be19a.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.f` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3be19e.  call `clearByteArray`(v0) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3be1a4.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.h` @type ^`com.mastercard.api.bytes.ByteArray` @kind object;
  #L3be1a8.  call `clearByteArray`(v0) @signature `Lcom/mastercard/api/utils/Utils;.clearByteArray:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind static;
  #L3be1ae.  v0:= 0I;
  #L3be1b0.  v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.b` @type ^`com.mastercard.api.bytes.ByteArray` := v0 @kind object;
  #L3be1b4.  v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.c` @type ^`com.mastercard.api.bytes.ByteArray` := v0 @kind object;
  #L3be1b8.  v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.e` @type ^`com.mastercard.api.bytes.ByteArray` := v0 @kind object;
  #L3be1bc.  v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.f` @type ^`com.mastercard.api.bytes.ByteArray` := v0 @kind object;
  #L3be1c0.  v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.h` @type ^`com.mastercard.api.bytes.ByteArray` := v0 @kind object;
  #L3be1c4.  v0:= v1.`com.mastercard.mcbp.core.mpplite.states.CLContext.i` @type ^`com.mastercard.mcbp.core.mcbpcards.ContactlessTransactionContext` @kind object;
  #L3be1c8.  call `wipe`(v0) @signature `Lcom/mastercard/mcbp/core/mcbpcards/ContactlessTransactionContext;.wipe:()V` @kind virtual;
  #L3be1ce.  return @kind void;
}
