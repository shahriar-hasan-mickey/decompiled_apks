record `com.mastercard.mcbp.core.mpplite.states.CLSelectedState` @kind class @AccessFlag PUBLIC extends `com.mastercard.mcbp.core.mpplite.states.CLReadyState` @kind class {
}
procedure `void` `<init>`(`com.mastercard.mcbp.core.mpplite.states.CLSelectedState` v0 @kind this, `com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLSelectedState;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3c05a8.  call `<init>`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;)V` @kind direct;
  #L3c05ae.  return @kind void;
}
procedure `com.mastercard.mcbp.core.mpplite.MPPLiteStateValue` `getState`(`com.mastercard.mcbp.core.mpplite.states.CLSelectedState` v1 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLSelectedState;.getState:()Lcom/mastercard/mcbp/core/mpplite/MPPLiteStateValue;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c0590.  v0:= `@@com.mastercard.mcbp.core.mpplite.MPPLiteStateValue.CLSelected` @type ^`com.mastercard.mcbp.core.mpplite.MPPLiteStateValue` @kind object;
  #L3c0594.  return v0 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `processComputeCC`(`com.mastercard.mcbp.core.mpplite.states.CLSelectedState` v1 @kind this, `com.mastercard.api.bytes.ByteArray` v2 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLSelectedState;.processComputeCC:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3c01c0.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c01c6.  v2:= temp @kind object;
  #L3c01c8.  v0:= 27013I;
  #L3c01cc.  call temp:= `getFromWord`(v2, v0) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c01d2.  v2:= temp @kind object;
  #L3c01d4.  return v2 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `processGPO`(`com.mastercard.mcbp.core.mpplite.states.CLSelectedState` v9 @kind this, `com.mastercard.api.bytes.ByteArray` v10 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLSelectedState;.processGPO:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3c01e8.  v0:= 2I;
  #L3c01ea.  call temp:= `getByte`(v10, v0) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c01f0.  v0:= temp;
  #L3c01f2.  v1:= 3I;
  #L3c01f4.  call temp:= `getByte`(v10, v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c01fa.  v2:= temp;
  #L3c01fc.  v3:= 4I;
  #L3c01fe.  call temp:= `getByte`(v10, v3) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c0204.  v4:= temp;
  #L3c0206.  v4:= v4 ^& 255;
  #L3c020a.  if v0 != 0 then goto L3c0526;
  #L3c020e.  if v2 == 0 then goto L3c0216;
  #L3c0212.  goto L3c0526;
  #L3c0216.  v0:= v9.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c021a.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/CLContext;` @kind virtual;
  #L3c0220.  v0:= temp @kind object;
  #L3c0222.  v2:= -125I;
  #L3c0226.  v5:= 5I;
  #L3c0228.  v6:= 7I;
  #L3c022a.  v7:= 27013I;
  #L3c022e.  v8:= 6I;
  #L3c0230.  if v4 != v1 then goto L3c02f6;
  #L3c0234.  call temp:= `getByte`(v10, v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c023a.  v1:= temp;
  #L3c023c.  if v1 != v2 then goto L3c02e4;
  #L3c0240.  call temp:= `getByte`(v10, v8) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c0246.  v1:= temp;
  #L3c0248.  v2:= 1I;
  #L3c024a.  if v1 == v2 then goto L3c0250;
  #L3c024e.  goto L3c02e4;
  #L3c0250.  call temp:= `getByte`(v10, v6) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c0256.  v10:= temp;
  #L3c0258.  call temp:= `isAlternateAID`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.isAlternateAID:()Z` @kind virtual;
  #L3c025e.  v1:= temp;
  #L3c0260.  if v1 == 0 then goto L3c0298;
  #L3c0264.  v1:= v9.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c0268.  call temp:= `getProfile`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getProfile:()Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;` @kind virtual;
  #L3c026e.  v1:= temp @kind object;
  #L3c0270.  call temp:= `getContactlessPaymentData`(v1) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;.getContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;` @kind virtual;
  #L3c0276.  v1:= temp @kind object;
  #L3c0278.  call temp:= `getAlternateContactlessPaymentData`(v1) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;.getAlternateContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/AlternateContactlessPaymentData;` @kind virtual;
  #L3c027e.  v1:= temp @kind object;
  #L3c0280.  call temp:= `getGPO_Response`(v1) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/AlternateContactlessPaymentData;.getGPO_Response:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c0286.  v1:= temp @kind object;
  #L3c0288.  call temp:= `copyOfRange`(v1, v3, v8) @signature `Lcom/mastercard/api/bytes/ByteArray;.copyOfRange:(II)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c028e.  v1:= temp @kind object;
  #L3c0290.  call `setAIP`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setAIP:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind virtual;
  #L3c0296.  goto L3c02c2;
  #L3c0298.  v1:= v9.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c029c.  call temp:= `getProfile`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getProfile:()Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;` @kind virtual;
  #L3c02a2.  v1:= temp @kind object;
  #L3c02a4.  call temp:= `getContactlessPaymentData`(v1) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;.getContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;` @kind virtual;
  #L3c02aa.  v1:= temp @kind object;
  #L3c02ac.  call temp:= `getGPO_Response`(v1) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;.getGPO_Response:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c02b2.  v1:= temp @kind object;
  #L3c02b4.  call temp:= `copyOfRange`(v1, v3, v8) @signature `Lcom/mastercard/api/bytes/ByteArray;.copyOfRange:(II)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c02ba.  v1:= temp @kind object;
  #L3c02bc.  call `setAIP`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setAIP:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind virtual;
  #L3c02c2.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c02c8.  v1:= temp @kind object;
  #L3c02ca.  call temp:= `getByteArray`(v1, v2) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getByteArray:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c02d0.  v1:= temp @kind object;
  #L3c02d2.  v2:= 0I;
  #L3c02d4.  call `setByte`(v1, v2, v10) @signature `Lcom/mastercard/api/bytes/ByteArray;.setByte:(IB)V` @kind interface;
  #L3c02da.  call `setPDOL`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setPDOL:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind virtual;
  #L3c02e0.  goto L3c0426;
  #L3c02e4.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c02ea.  v10:= temp @kind object;
  #L3c02ec.  call temp:= `getFromWord`(v10, v7) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c02f2.  v10:= temp @kind object;
  #L3c02f4.  return v10 @kind object;
  #L3c02f6.  v1:= 13I;
  #L3c02fa.  if v4 != v1 then goto L3c0510;
  #L3c02fe.  call temp:= `getByte`(v10, v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c0304.  v1:= temp;
  #L3c0306.  if v1 != v2 then goto L3c04fe;
  #L3c030a.  call temp:= `getByte`(v10, v8) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c0310.  v1:= temp;
  #L3c0312.  v2:= 11I;
  #L3c0316.  if v1 == v2 then goto L3c031e;
  #L3c031a.  goto L3c04fe;
  #L3c031e.  v1:= 17I;
  #L3c0322.  call temp:= `getByte`(v10, v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.getByte:(I)B` @kind interface;
  #L3c0328.  v3:= temp;
  #L3c032a.  call temp:= `copyOfRange`(v10, v6, v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.copyOfRange:(II)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c0330.  v1:= temp @kind object;
  #L3c0332.  v4:= 15I;
  #L3c0336.  v5:= 16I;
  #L3c033a.  call temp:= `copyOfRange`(v10, v4, v5) @signature `Lcom/mastercard/api/bytes/ByteArray;.copyOfRange:(II)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c0340.  v4:= temp @kind object;
  #L3c0342.  call temp:= `isAlternateAID`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.isAlternateAID:()Z` @kind virtual;
  #L3c0348.  v5:= temp;
  #L3c034a.  v8:= 9I;
  #L3c034e.  if v5 == 0 then goto L3c0386;
  #L3c0352.  v5:= v9.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c0356.  call temp:= `getProfile`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getProfile:()Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;` @kind virtual;
  #L3c035c.  v5:= temp @kind object;
  #L3c035e.  call temp:= `getContactlessPaymentData`(v5) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;.getContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;` @kind virtual;
  #L3c0364.  v5:= temp @kind object;
  #L3c0366.  call temp:= `getAlternateContactlessPaymentData`(v5) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;.getAlternateContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/AlternateContactlessPaymentData;` @kind virtual;
  #L3c036c.  v5:= temp @kind object;
  #L3c036e.  call temp:= `getGPO_Response`(v5) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/AlternateContactlessPaymentData;.getGPO_Response:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c0374.  v5:= temp @kind object;
  #L3c0376.  call temp:= `copyOfRange`(v5, v8, v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.copyOfRange:(II)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c037c.  v2:= temp @kind object;
  #L3c037e.  call `setAIP`(v0, v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setAIP:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind virtual;
  #L3c0384.  goto L3c03b0;
  #L3c0386.  v5:= v9.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c038a.  call temp:= `getProfile`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getProfile:()Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;` @kind virtual;
  #L3c0390.  v5:= temp @kind object;
  #L3c0392.  call temp:= `getContactlessPaymentData`(v5) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;.getContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;` @kind virtual;
  #L3c0398.  v5:= temp @kind object;
  #L3c039a.  call temp:= `getGPO_Response`(v5) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;.getGPO_Response:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c03a0.  v5:= temp @kind object;
  #L3c03a2.  call temp:= `copyOfRange`(v5, v8, v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.copyOfRange:(II)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c03a8.  v2:= temp @kind object;
  #L3c03aa.  call `setAIP`(v0, v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setAIP:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind virtual;
  #L3c03b0.  v2:= 19I;
  #L3c03b4.  call temp:= `copyOfRange`(v10, v6, v2) @signature `Lcom/mastercard/api/bytes/ByteArray;.copyOfRange:(II)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c03ba.  v10:= temp @kind object;
  #L3c03bc.  call `setPDOL`(v0, v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setPDOL:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind virtual;
  #L3c03c2.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c03c8.  v10:= temp @kind object;
  #L3c03ca.  v2:= 2112I;
  #L3c03ce.  call temp:= `getFromWord`(v10, v2) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c03d4.  v10:= temp @kind object;
  #L3c03d6.  call temp:= `isEqual`(v4, v10) @signature `Lcom/mastercard/api/bytes/ByteArray;.isEqual:(Lcom/mastercard/api/bytes/ByteArray;)Z` @kind interface;
  #L3c03dc.  v10:= temp;
  #L3c03de.  if v10 != 0 then goto L3c03ee;
  #L3c03e2.  call temp:= `isZero`(v4) @signature `Lcom/mastercard/api/utils/Utils;.isZero:(Lcom/mastercard/api/bytes/ByteArray;)Z` @kind static;
  #L3c03e8.  v10:= temp;
  #L3c03ea.  if v10 == 0 then goto L3c0424;
  #L3c03ee.  call temp:= `isZero`(v1) @signature `Lcom/mastercard/api/utils/Utils;.isZero:(Lcom/mastercard/api/bytes/ByteArray;)Z` @kind static;
  #L3c03f4.  v10:= temp;
  #L3c03f6.  if v10 == 0 then goto L3c0424;
  #L3c03fa.  call temp:= `getAIP`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.getAIP:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c0400.  v10:= temp @kind object;
  #L3c0402.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c0408.  v1:= temp @kind object;
  #L3c040a.  v2:= -129I;
  #L3c040e.  call temp:= `getFromWord`(v1, v2) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c0414.  v1:= temp @kind object;
  #L3c0416.  call temp:= `bitWiseAnd`(v10, v1) @signature `Lcom/mastercard/api/bytes/ByteArray;.bitWiseAnd:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c041c.  v10:= temp @kind object;
  #L3c041e.  call `setAIP`(v0, v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.setAIP:(Lcom/mastercard/api/bytes/ByteArray;)V` @kind virtual;
  #L3c0424.  v10:= v3;
  #L3c0426.  call temp:= `isTerminalOffline`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.isTerminalOffline:(B)Z` @kind static;
  #L3c042c.  v10:= temp;
  #L3c042e.  if v10 == 0 then goto L3c044a;
  #L3c0432.  call temp:= `cancelPayment`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.cancelPayment:()Lcom/mastercard/mcbp/core/mpplite/ReturnCode;` @kind virtual;
  #L3c0438.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c043e.  v10:= temp @kind object;
  #L3c0440.  call temp:= `getFromWord`(v10, v7) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c0446.  v10:= temp @kind object;
  #L3c0448.  return v10 @kind object;
  #L3c044a.  v10:= v9.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c044e.  v0:= new `com.mastercard.mcbp.core.mpplite.states.CLInitiatedState`;
  #L3c0452.  call `<init>`(v0, v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLInitiatedState;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;)V` @kind direct;
  #L3c0458.  call `setState`(v10, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.setState:(Lcom/mastercard/mcbp/core/mpplite/MPPLiteState;)V` @kind virtual;
  #L3c045e.  v10:= v9.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c0462.  call temp:= `getClContext`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/CLContext;` @kind virtual;
  #L3c0468.  v10:= temp @kind object;
  #L3c046a.  call temp:= `isAlternateAID`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLContext;.isAlternateAID:()Z` @kind virtual;
  #L3c0470.  v10:= temp;
  #L3c0472.  v0:= -28672I;
  #L3c0476.  if v10 == 0 then goto L3c04c0;
  #L3c047a.  v10:= v9.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c047e.  call temp:= `getProfile`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getProfile:()Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;` @kind virtual;
  #L3c0484.  v10:= temp @kind object;
  #L3c0486.  call temp:= `getContactlessPaymentData`(v10) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;.getContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;` @kind virtual;
  #L3c048c.  v10:= temp @kind object;
  #L3c048e.  call temp:= `getAlternateContactlessPaymentData`(v10) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;.getAlternateContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/AlternateContactlessPaymentData;` @kind virtual;
  #L3c0494.  v10:= temp @kind object;
  #L3c0496.  call temp:= `getGPO_Response`(v10) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/AlternateContactlessPaymentData;.getGPO_Response:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c049c.  v10:= temp @kind object;
  #L3c049e.  call temp:= `clone`(v10) @signature `Lcom/mastercard/api/bytes/ByteArray;.clone:()Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c04a4.  v10:= temp @kind object;
  #L3c04a6.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c04ac.  v1:= temp @kind object;
  #L3c04ae.  call temp:= `getFromWord`(v1, v0) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c04b4.  v0:= temp @kind object;
  #L3c04b6.  call temp:= `append`(v10, v0) @signature `Lcom/mastercard/api/bytes/ByteArray;.append:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c04bc.  v10:= temp @kind object;
  #L3c04be.  return v10 @kind object;
  #L3c04c0.  v10:= v9.`com.mastercard.mcbp.core.mpplite.states.CLReadyState.ctx` @type ^`com.mastercard.mcbp.core.mpplite.states.MPPLiteStateContext` @kind object;
  #L3c04c4.  call temp:= `getProfile`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/MPPLiteStateContext;.getProfile:()Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;` @kind virtual;
  #L3c04ca.  v10:= temp @kind object;
  #L3c04cc.  call temp:= `getContactlessPaymentData`(v10) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/DC_CP_MPP;.getContactlessPaymentData:()Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;` @kind virtual;
  #L3c04d2.  v10:= temp @kind object;
  #L3c04d4.  call temp:= `getGPO_Response`(v10) @signature `Lcom/mastercard/mcbp/core/mcbpcards/profile/ContactlessPaymentData;.getGPO_Response:()Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c04da.  v10:= temp @kind object;
  #L3c04dc.  call temp:= `clone`(v10) @signature `Lcom/mastercard/api/bytes/ByteArray;.clone:()Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c04e2.  v10:= temp @kind object;
  #L3c04e4.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c04ea.  v1:= temp @kind object;
  #L3c04ec.  call temp:= `getFromWord`(v1, v0) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c04f2.  v0:= temp @kind object;
  #L3c04f4.  call temp:= `append`(v10, v0) @signature `Lcom/mastercard/api/bytes/ByteArray;.append:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind interface;
  #L3c04fa.  v10:= temp @kind object;
  #L3c04fc.  return v10 @kind object;
  #L3c04fe.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c0504.  v10:= temp @kind object;
  #L3c0506.  call temp:= `getFromWord`(v10, v7) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c050c.  v10:= temp @kind object;
  #L3c050e.  return v10 @kind object;
  #L3c0510.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c0516.  v10:= temp @kind object;
  #L3c0518.  v0:= 26368I;
  #L3c051c.  call temp:= `getFromWord`(v10, v0) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c0522.  v10:= temp @kind object;
  #L3c0524.  return v10 @kind object;
  #L3c0526.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c052c.  v10:= temp @kind object;
  #L3c052e.  v0:= 27270I;
  #L3c0532.  call temp:= `getFromWord`(v10, v0) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c0538.  v10:= temp @kind object;
  #L3c053a.  return v10 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `processGenAC`(`com.mastercard.mcbp.core.mpplite.states.CLSelectedState` v1 @kind this, `com.mastercard.api.bytes.ByteArray` v2 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLSelectedState;.processGenAC:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3c054c.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getInstance:()Lcom/mastercard/api/bytes/ByteArrayFactory;` @kind static;
  #L3c0552.  v2:= temp @kind object;
  #L3c0554.  v0:= 27013I;
  #L3c0558.  call temp:= `getFromWord`(v2, v0) @signature `Lcom/mastercard/api/bytes/ByteArrayFactory;.getFromWord:(I)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c055e.  v2:= temp @kind object;
  #L3c0560.  return v2 @kind object;
}
procedure `com.mastercard.api.bytes.ByteArray` `processReadRecord`(`com.mastercard.mcbp.core.mpplite.states.CLSelectedState` v0 @kind this, `com.mastercard.api.bytes.ByteArray` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLSelectedState;.processReadRecord:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @AccessFlag PROTECTED {
    temp;

  #L3c0574.  call temp:= `readRecord`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/CLReadyState;.readRecord:(Lcom/mastercard/api/bytes/ByteArray;)Lcom/mastercard/api/bytes/ByteArray;` @kind virtual;
  #L3c057a.  v1:= temp @kind object;
  #L3c057c.  return v1 @kind object;
}
