record `io.jsonwebtoken.Header` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `java.util.Map` @kind interface {
}
global `java.lang.String` `@@io.jsonwebtoken.Header.COMPRESSION_ALGORITHM` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@io.jsonwebtoken.Header.CONTENT_TYPE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@io.jsonwebtoken.Header.DEPRECATED_COMPRESSION_ALGORITHM` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@io.jsonwebtoken.Header.JWT_TYPE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@io.jsonwebtoken.Header.TYPE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `java.lang.String` `getCompressionAlgorithm`() @signature `Lio/jsonwebtoken/Header;.getCompressionAlgorithm:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getContentType`() @signature `Lio/jsonwebtoken/Header;.getContentType:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getType`() @signature `Lio/jsonwebtoken/Header;.getType:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.Header` `setCompressionAlgorithm`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/Header;.setCompressionAlgorithm:(Ljava/lang/String;)Lio/jsonwebtoken/Header;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.Header` `setContentType`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/Header;.setContentType:(Ljava/lang/String;)Lio/jsonwebtoken/Header;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.Header` `setType`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/Header;.setType:(Ljava/lang/String;)Lio/jsonwebtoken/Header;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
