record `io.jsonwebtoken.ExpiredJwtException` @kind class @AccessFlag PUBLIC extends `io.jsonwebtoken.ClaimJwtException` @kind class {
}
procedure `void` `<init>`(`io.jsonwebtoken.ExpiredJwtException` v0 @kind this, `io.jsonwebtoken.Header` v1 @kind object, `io.jsonwebtoken.Claims` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lio/jsonwebtoken/ExpiredJwtException;.<init>:(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40b2dc.  call `<init>`(v0, v1, v2, v3) @signature `Lio/jsonwebtoken/ClaimJwtException;.<init>:(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;)V` @kind direct;
  #L40b2e2.  return @kind void;
}
procedure `void` `<init>`(`io.jsonwebtoken.ExpiredJwtException` v0 @kind this, `io.jsonwebtoken.Header` v1 @kind object, `io.jsonwebtoken.Claims` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lio/jsonwebtoken/ExpiredJwtException;.<init>:(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40b2f4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/jsonwebtoken/ClaimJwtException;.<init>:(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L40b2fa.  return @kind void;
}
