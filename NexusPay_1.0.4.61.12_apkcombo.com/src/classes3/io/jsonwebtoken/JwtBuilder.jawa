record `io.jsonwebtoken.JwtBuilder` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `io.jsonwebtoken.ClaimsMutator` @kind interface {
}
procedure `io.jsonwebtoken.JwtBuilder` `claim`(`java.lang.String` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.claim:(Ljava/lang/String;Ljava/lang/Object;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `compact`() @signature `Lio/jsonwebtoken/JwtBuilder;.compact:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `compressWith`(`io.jsonwebtoken.CompressionCodec` v0 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.compressWith:(Lio/jsonwebtoken/CompressionCodec;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `setAudience`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.setAudience:(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `setClaims`(`io.jsonwebtoken.Claims` v0 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.setClaims:(Lio/jsonwebtoken/Claims;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `setClaims`(`java.util.Map` v0 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.setClaims:(Ljava/util/Map;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `setExpiration`(`java.util.Date` v0 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.setExpiration:(Ljava/util/Date;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `setHeader`(`io.jsonwebtoken.Header` v0 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.setHeader:(Lio/jsonwebtoken/Header;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `setHeader`(`java.util.Map` v0 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.setHeader:(Ljava/util/Map;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `setHeaderParam`(`java.lang.String` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.setHeaderParam:(Ljava/lang/String;Ljava/lang/Object;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `setHeaderParams`(`java.util.Map` v0 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.setHeaderParams:(Ljava/util/Map;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `setId`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.setId:(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `setIssuedAt`(`java.util.Date` v0 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.setIssuedAt:(Ljava/util/Date;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `setIssuer`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.setIssuer:(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `setNotBefore`(`java.util.Date` v0 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.setNotBefore:(Ljava/util/Date;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `setPayload`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.setPayload:(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `setSubject`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.setSubject:(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `signWith`(`io.jsonwebtoken.SignatureAlgorithm` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.signWith:(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `signWith`(`io.jsonwebtoken.SignatureAlgorithm` v0 @kind object, `java.security.Key` v1 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.signWith:(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtBuilder` `signWith`(`io.jsonwebtoken.SignatureAlgorithm` v0 @kind object, `byte`[] v1 @kind object) @signature `Lio/jsonwebtoken/JwtBuilder;.signWith:(Lio/jsonwebtoken/SignatureAlgorithm;[B)Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
