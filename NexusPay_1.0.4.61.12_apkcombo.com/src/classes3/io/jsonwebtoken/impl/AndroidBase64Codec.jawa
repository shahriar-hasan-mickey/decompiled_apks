record `io.jsonwebtoken.impl.AndroidBase64Codec` @kind class @AccessFlag PUBLIC extends `io.jsonwebtoken.impl.AbstractTextCodec` @kind class {
}
procedure `void` `<init>`(`io.jsonwebtoken.impl.AndroidBase64Codec` v0 @kind this) @signature `Lio/jsonwebtoken/impl/AndroidBase64Codec;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40bd6c.  call `<init>`(v0) @signature `Lio/jsonwebtoken/impl/AbstractTextCodec;.<init>:()V` @kind direct;
  #L40bd72.  return @kind void;
}
procedure `byte`[] `decode`(`io.jsonwebtoken.impl.AndroidBase64Codec` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lio/jsonwebtoken/impl/AndroidBase64Codec;.decode:(Ljava/lang/String;)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bd34.  v0:= 0I;
  #L40bd36.  call temp:= `decode`(v2, v0) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L40bd3c.  v2:= temp @kind object;
  #L40bd3e.  return v2 @kind object;
}
procedure `java.lang.String` `encode`(`io.jsonwebtoken.impl.AndroidBase64Codec` v1 @kind this, `byte`[] v2 @kind object) @signature `Lio/jsonwebtoken/impl/AndroidBase64Codec;.encode:([B)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bd50.  v0:= 3I;
  #L40bd52.  call temp:= `encodeToString`(v2, v0) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L40bd58.  v2:= temp @kind object;
  #L40bd5a.  return v2 @kind object;
}
