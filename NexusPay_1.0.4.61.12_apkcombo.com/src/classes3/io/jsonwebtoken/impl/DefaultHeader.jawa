record `io.jsonwebtoken.impl.DefaultHeader` @kind class @AccessFlag PUBLIC extends `io.jsonwebtoken.impl.JwtMap` @kind class, `io.jsonwebtoken.Header` @kind interface {
}
procedure `void` `<init>`(`io.jsonwebtoken.impl.DefaultHeader` v0 @kind this) @signature `Lio/jsonwebtoken/impl/DefaultHeader;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40c42c.  call `<init>`(v0) @signature `Lio/jsonwebtoken/impl/JwtMap;.<init>:()V` @kind direct;
  #L40c432.  return @kind void;
}
procedure `void` `<init>`(`io.jsonwebtoken.impl.DefaultHeader` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultHeader;.<init>:(Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40c444.  call `<init>`(v0, v1) @signature `Lio/jsonwebtoken/impl/JwtMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L40c44a.  return @kind void;
}
procedure `java.lang.String` `getCompressionAlgorithm`(`io.jsonwebtoken.impl.DefaultHeader` v2 @kind this) @signature `Lio/jsonwebtoken/impl/DefaultHeader;.getCompressionAlgorithm:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40c3b4.  v0:= "zip" @kind object;
  #L40c3b8.  call temp:= `getString`(v2, v0) @signature `Lio/jsonwebtoken/impl/JwtMap;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L40c3be.  v0:= temp @kind object;
  #L40c3c0.  call temp:= `hasText`(v0) @signature `Lio/jsonwebtoken/lang/Strings;.hasText:(Ljava/lang/String;)Z` @kind static;
  #L40c3c6.  v1:= temp;
  #L40c3c8.  if v1 != 0 then goto L40c3d8;
  #L40c3cc.  v0:= "calg" @kind object;
  #L40c3d0.  call temp:= `getString`(v2, v0) @signature `Lio/jsonwebtoken/impl/JwtMap;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L40c3d6.  v0:= temp @kind object;
  #L40c3d8.  return v0 @kind object;
}
procedure `java.lang.String` `getContentType`(`io.jsonwebtoken.impl.DefaultHeader` v1 @kind this) @signature `Lio/jsonwebtoken/impl/DefaultHeader;.getContentType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c3ec.  v0:= "cty" @kind object;
  #L40c3f0.  call temp:= `getString`(v1, v0) @signature `Lio/jsonwebtoken/impl/JwtMap;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L40c3f6.  v0:= temp @kind object;
  #L40c3f8.  return v0 @kind object;
}
procedure `java.lang.String` `getType`(`io.jsonwebtoken.impl.DefaultHeader` v1 @kind this) @signature `Lio/jsonwebtoken/impl/DefaultHeader;.getType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c40c.  v0:= "typ" @kind object;
  #L40c410.  call temp:= `getString`(v1, v0) @signature `Lio/jsonwebtoken/impl/JwtMap;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L40c416.  v0:= temp @kind object;
  #L40c418.  return v0 @kind object;
}
procedure `io.jsonwebtoken.Header` `setCompressionAlgorithm`(`io.jsonwebtoken.impl.DefaultHeader` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultHeader;.setCompressionAlgorithm:(Ljava/lang/String;)Lio/jsonwebtoken/Header;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c360.  v0:= "zip" @kind object;
  #L40c364.  call `setValue`(v1, v0, v2) @signature `Lio/jsonwebtoken/impl/JwtMap;.setValue:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L40c36a.  return v1 @kind object;
}
procedure `io.jsonwebtoken.Header` `setContentType`(`io.jsonwebtoken.impl.DefaultHeader` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultHeader;.setContentType:(Ljava/lang/String;)Lio/jsonwebtoken/Header;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c37c.  v0:= "cty" @kind object;
  #L40c380.  call `setValue`(v1, v0, v2) @signature `Lio/jsonwebtoken/impl/JwtMap;.setValue:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L40c386.  return v1 @kind object;
}
procedure `io.jsonwebtoken.Header` `setType`(`io.jsonwebtoken.impl.DefaultHeader` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultHeader;.setType:(Ljava/lang/String;)Lio/jsonwebtoken/Header;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c398.  v0:= "typ" @kind object;
  #L40c39c.  call `setValue`(v1, v0, v2) @signature `Lio/jsonwebtoken/impl/JwtMap;.setValue:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L40c3a2.  return v1 @kind object;
}
