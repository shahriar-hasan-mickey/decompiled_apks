record `io.jsonwebtoken.impl.TextCodec` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `io.jsonwebtoken.impl.TextCodec` `@@io.jsonwebtoken.impl.TextCodec.BASE64` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.jsonwebtoken.impl.TextCodec` `@@io.jsonwebtoken.impl.TextCodec.BASE64URL` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/jsonwebtoken/impl/TextCodec;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L40e064.  v0:= new `io.jsonwebtoken.impl.DefaultTextCodecFactory`;
  #L40e068.  call `<init>`(v0) @signature `Lio/jsonwebtoken/impl/DefaultTextCodecFactory;.<init>:()V` @kind direct;
  #L40e06e.  call temp:= `getTextCodec`(v0) @signature `Lio/jsonwebtoken/impl/DefaultTextCodecFactory;.getTextCodec:()Lio/jsonwebtoken/impl/TextCodec;` @kind virtual;
  #L40e074.  v0:= temp @kind object;
  #L40e076.  `@@io.jsonwebtoken.impl.TextCodec.BASE64` @type ^`io.jsonwebtoken.impl.TextCodec` := v0 @kind object;
  #L40e07a.  v0:= new `io.jsonwebtoken.impl.Base64UrlCodec`;
  #L40e07e.  call `<init>`(v0) @signature `Lio/jsonwebtoken/impl/Base64UrlCodec;.<init>:()V` @kind direct;
  #L40e084.  `@@io.jsonwebtoken.impl.TextCodec.BASE64URL` @type ^`io.jsonwebtoken.impl.TextCodec` := v0 @kind object;
  #L40e088.  return @kind void;
}
procedure `byte`[] `decode`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/impl/TextCodec;.decode:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `decodeToString`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/impl/TextCodec;.decodeToString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `encode`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/impl/TextCodec;.encode:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `encode`(`byte`[] v0 @kind object) @signature `Lio/jsonwebtoken/impl/TextCodec;.encode:([B)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
