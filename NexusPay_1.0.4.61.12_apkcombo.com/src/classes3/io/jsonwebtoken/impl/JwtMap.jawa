record `io.jsonwebtoken.impl.JwtMap` @kind class @AccessFlag PUBLIC extends `java.util.Map` @kind interface {
  `java.util.Map` `io.jsonwebtoken.impl.JwtMap.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this) @signature `Lio/jsonwebtoken/impl/JwtMap;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L40df38.  v0:= new `java.util.LinkedHashMap`;
  #L40df3c.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L40df42.  call `<init>`(v1, v0) @signature `Lio/jsonwebtoken/impl/JwtMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L40df48.  return @kind void;
}
procedure `void` `<init>`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lio/jsonwebtoken/impl/JwtMap;.<init>:(Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L40df5c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40df62.  v0:= "Map argument cannot be null." @kind object;
  #L40df66.  call `notNull`(v2, v0) @signature `Lio/jsonwebtoken/lang/Assert;.notNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L40df6c.  v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` := v2 @kind object;
  #L40df70.  return @kind void;
}
procedure `java.util.Date` `toDate`(`java.lang.Object` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lio/jsonwebtoken/impl/JwtMap;.toDate:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Date;` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40de3c.  if v3 != 0 then goto L40de44;
  #L40de40.  v3:= 0I;
  #L40de42.  return v3 @kind object;
  #L40de44.  v0:= instanceof @variable v3 @type ^`java.util.Date` @kind boolean;
  #L40de48.  if v0 == 0 then goto L40de52;
  #L40de4c.  v3:= (`java.util.Date`) v3 @kind object;
  #L40de50.  return v3 @kind object;
  #L40de52.  v0:= instanceof @variable v3 @type ^`java.lang.Number` @kind boolean;
  #L40de56.  v1:= 1000L;
  #L40de5a.  if v0 == 0 then goto L40de7a;
  #L40de5e.  v3:= (`java.lang.Number`) v3 @kind object;
  #L40de62.  call temp:= `longValue`(v3) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L40de68.  v3:= temp @kind wide;
  #L40de6a.  v3:= v3 * v1 @kind long;
  #L40de6e.  v0:= new `java.util.Date`;
  #L40de72.  call `<init>`(v0, v3) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L40de78.  return v0 @kind object;
  #L40de7a.  v0:= instanceof @variable v3 @type ^`java.lang.String` @kind boolean;
  #L40de7e.  if v0 == 0 then goto L40de9e;
  #L40de82.  v3:= (`java.lang.String`) v3 @kind object;
  #L40de86.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L40de8c.  v3:= temp @kind wide;
  #L40de8e.  v3:= v3 * v1 @kind long;
  #L40de92.  v0:= new `java.util.Date`;
  #L40de96.  call `<init>`(v0, v3) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L40de9c.  return v0 @kind object;
  #L40de9e.  v0:= new `java.lang.IllegalStateException`;
  #L40dea2.  v1:= new `java.lang.StringBuilder`;
  #L40dea6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40deac.  v2:= "Cannot convert '" @kind object;
  #L40deb0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40deb6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40debc.  v4:= "' value [" @kind object;
  #L40dec0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40dec6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40decc.  v3:= "] to Date instance." @kind object;
  #L40ded0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ded6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40dedc.  v3:= temp @kind object;
  #L40dede.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40dee4.  throw v0;
}
procedure `void` `clear`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this) @signature `Lio/jsonwebtoken/impl/JwtMap;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40df84.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40df88.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L40df8e.  return @kind void;
}
procedure `boolean` `containsKey`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/jsonwebtoken/impl/JwtMap;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40dc58.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40dc5c.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L40dc62.  v2:= temp;
  #L40dc64.  return v2;
}
procedure `boolean` `containsValue`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/jsonwebtoken/impl/JwtMap;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40dc78.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40dc7c.  call temp:= `containsValue`(v0, v2) @signature `Ljava/util/Map;.containsValue:(Ljava/lang/Object;)Z` @kind interface;
  #L40dc82.  v2:= temp;
  #L40dc84.  return v2;
}
procedure `java.util.Set` `entrySet`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this) @signature `Lio/jsonwebtoken/impl/JwtMap;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40def8.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40defc.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L40df02.  v0:= temp @kind object;
  #L40df04.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/jsonwebtoken/impl/JwtMap;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40dc98.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40dc9c.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L40dca2.  v2:= temp;
  #L40dca4.  return v2;
}
procedure `java.lang.Object` `get`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/jsonwebtoken/impl/JwtMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40dd18.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40dd1c.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40dd22.  v2:= temp @kind object;
  #L40dd24.  return v2 @kind object;
}
procedure `java.util.Date` `getDate`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lio/jsonwebtoken/impl/JwtMap;.getDate:(Ljava/lang/String;)Ljava/util/Date;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L40de14.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40de18.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40de1e.  v0:= temp @kind object;
  #L40de20.  call temp:= `toDate`(v0, v2) @signature `Lio/jsonwebtoken/impl/JwtMap;.toDate:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L40de26.  v2:= temp @kind object;
  #L40de28.  return v2 @kind object;
}
procedure `java.lang.String` `getString`(`io.jsonwebtoken.impl.JwtMap` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lio/jsonwebtoken/impl/JwtMap;.getString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;

  #L40dda8.  call temp:= `get`(v0, v1) @signature `Lio/jsonwebtoken/impl/JwtMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L40ddae.  v1:= temp @kind object;
  #L40ddb0.  if v1 == 0 then goto L40ddbe;
  #L40ddb4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L40ddba.  v1:= temp @kind object;
  #L40ddbc.  goto L40ddc0;
  #L40ddbe.  v1:= 0I;
  #L40ddc0.  return v1 @kind object;
}
procedure `int` `hashCode`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this) @signature `Lio/jsonwebtoken/impl/JwtMap;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40dcd8.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40dcdc.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L40dce2.  v0:= temp;
  #L40dce4.  return v0;
}
procedure `boolean` `isEmpty`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this) @signature `Lio/jsonwebtoken/impl/JwtMap;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40dcb8.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40dcbc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L40dcc2.  v0:= temp;
  #L40dcc4.  return v0;
}
procedure `java.util.Set` `keySet`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this) @signature `Lio/jsonwebtoken/impl/JwtMap;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40df18.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40df1c.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L40df22.  v0:= temp @kind object;
  #L40df24.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`io.jsonwebtoken.impl.JwtMap` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/jsonwebtoken/impl/JwtMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40dd38.  v1:= (`java.lang.String`) v1 @kind object;
  #L40dd3c.  call temp:= `put`(v0, v1, v2) @signature `Lio/jsonwebtoken/impl/JwtMap;.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L40dd42.  v1:= temp @kind object;
  #L40dd44.  return v1 @kind object;
}
procedure `java.lang.Object` `put`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/jsonwebtoken/impl/JwtMap;.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40dd58.  if v3 != 0 then goto L40dd6a;
  #L40dd5c.  v3:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40dd60.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40dd66.  v2:= temp @kind object;
  #L40dd68.  return v2 @kind object;
  #L40dd6a.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40dd6e.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40dd74.  v2:= temp @kind object;
  #L40dd76.  return v2 @kind object;
}
procedure `void` `putAll`(`io.jsonwebtoken.impl.JwtMap` v4 @kind this, `java.util.Map` v5 @kind object) @signature `Lio/jsonwebtoken/impl/JwtMap;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40dfa0.  if v5 != 0 then goto L40dfa6;
  #L40dfa4.  return @kind void;
  #L40dfa6.  call temp:= `keySet`(v5) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L40dfac.  v0:= temp @kind object;
  #L40dfae.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40dfb4.  v0:= temp @kind object;
  #L40dfb6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L40dfbc.  v1:= temp;
  #L40dfbe.  if v1 == 0 then goto L40dfe2;
  #L40dfc2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L40dfc8.  v1:= temp @kind object;
  #L40dfca.  v1:= (`java.lang.String`) v1 @kind object;
  #L40dfce.  v2:= v4.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40dfd2.  call temp:= `get`(v5, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40dfd8.  v3:= temp @kind object;
  #L40dfda.  call temp:= `put`(v2, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40dfe0.  goto L40dfb6;
  #L40dfe2.  return @kind void;
}
procedure `java.lang.Object` `remove`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/jsonwebtoken/impl/JwtMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40dd88.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40dd8c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40dd92.  v2:= temp @kind object;
  #L40dd94.  return v2 @kind object;
}
procedure `void` `setDate`(`io.jsonwebtoken.impl.JwtMap` v4 @kind this, `java.lang.String` v5 @kind object, `java.util.Date` v6 @kind object) @signature `Lio/jsonwebtoken/impl/JwtMap;.setDate:(Ljava/lang/String;Ljava/util/Date;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40dff4.  if v6 != 0 then goto L40e004;
  #L40dff8.  v6:= v4.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40dffc.  call temp:= `remove`(v6, v5) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40e002.  goto L40e024;
  #L40e004.  call temp:= `getTime`(v6) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L40e00a.  v0:= temp @kind wide;
  #L40e00c.  v2:= 1000L;
  #L40e010.  v0:= v0 / v2 @kind long;
  #L40e012.  v6:= v4.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40e016.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L40e01c.  v0:= temp @kind object;
  #L40e01e.  call temp:= `put`(v6, v5, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40e024.  return @kind void;
}
procedure `void` `setValue`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/jsonwebtoken/impl/JwtMap;.setValue:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L40e038.  if v3 != 0 then goto L40e048;
  #L40e03c.  v3:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40e040.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40e046.  goto L40e052;
  #L40e048.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40e04c.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40e052.  return @kind void;
}
procedure `int` `size`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this) @signature `Lio/jsonwebtoken/impl/JwtMap;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40dcf8.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40dcfc.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L40dd02.  v0:= temp;
  #L40dd04.  return v0;
}
procedure `java.lang.String` `toString`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this) @signature `Lio/jsonwebtoken/impl/JwtMap;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40ddd4.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40ddd8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L40ddde.  v0:= temp @kind object;
  #L40dde0.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`io.jsonwebtoken.impl.JwtMap` v1 @kind this) @signature `Lio/jsonwebtoken/impl/JwtMap;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40ddf4.  v0:= v1.`io.jsonwebtoken.impl.JwtMap.a` @type ^`java.util.Map` @kind object;
  #L40ddf8.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L40ddfe.  v0:= temp @kind object;
  #L40de00.  return v0 @kind object;
}
