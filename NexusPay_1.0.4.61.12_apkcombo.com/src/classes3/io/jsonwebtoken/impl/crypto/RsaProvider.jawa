record `io.jsonwebtoken.impl.crypto.RsaProvider` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.jsonwebtoken.impl.crypto.a` @kind class {
}
global `java.util.Map` `@@io.jsonwebtoken.impl.crypto.RsaProvider.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L40f8a8.  call temp:= `a`() @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.a:()Ljava/util/Map;` @kind static;
  #L40f8ae.  v0:= temp @kind object;
  #L40f8b0.  `@@io.jsonwebtoken.impl.crypto.RsaProvider.a` @type ^`java.util.Map` := v0 @kind object;
  #L40f8b4.  return @kind void;
}
procedure `void` `<init>`(`io.jsonwebtoken.impl.crypto.RsaProvider` v0 @kind this, `io.jsonwebtoken.SignatureAlgorithm` v1 @kind object, `java.security.Key` v2 @kind object) @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.<init>:(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L40f8c8.  call `<init>`(v0, v1, v2) @signature `Lio/jsonwebtoken/impl/crypto/a;.<init>:(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)V` @kind direct;
  #L40f8ce.  call temp:= `isRsa`(v1) @signature `Lio/jsonwebtoken/SignatureAlgorithm;.isRsa:()Z` @kind virtual;
  #L40f8d4.  v1:= temp;
  #L40f8d6.  v2:= "SignatureAlgorithm must be an RSASSA or RSASSA-PSS algorithm." @kind object;
  #L40f8da.  call `isTrue`(v1, v2) @signature `Lio/jsonwebtoken/lang/Assert;.isTrue:(ZLjava/lang/String;)V` @kind static;
  #L40f8e0.  return @kind void;
}
procedure `java.util.Map` `a`() @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.a:()Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L40f808.  v0:= new `java.util.HashMap`;
  #L40f80c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L40f812.  v4:= `@@java.security.spec.MGF1ParameterSpec.SHA256` @type ^`java.security.spec.MGF1ParameterSpec` @kind object;
  #L40f816.  v7:= new `java.security.spec.PSSParameterSpec`;
  #L40f81a.  call temp:= `getDigestAlgorithm`(v4) @signature `Ljava/security/spec/MGF1ParameterSpec;.getDigestAlgorithm:()Ljava/lang/String;` @kind virtual;
  #L40f820.  v2:= temp @kind object;
  #L40f822.  v3:= "MGF1" @kind object;
  #L40f826.  v5:= 32I;
  #L40f82a.  v6:= 1I;
  #L40f82c.  v1:= v7 @kind object;
  #L40f82e.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Ljava/security/spec/PSSParameterSpec;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/security/spec/AlgorithmParameterSpec;II)V` @kind direct;
  #L40f834.  v1:= `@@io.jsonwebtoken.SignatureAlgorithm.PS256` @type ^`io.jsonwebtoken.SignatureAlgorithm` @kind object;
  #L40f838.  call temp:= `put`(v0, v1, v7) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40f83e.  v11:= `@@java.security.spec.MGF1ParameterSpec.SHA384` @type ^`java.security.spec.MGF1ParameterSpec` @kind object;
  #L40f842.  v1:= new `java.security.spec.PSSParameterSpec`;
  #L40f846.  call temp:= `getDigestAlgorithm`(v11) @signature `Ljava/security/spec/MGF1ParameterSpec;.getDigestAlgorithm:()Ljava/lang/String;` @kind virtual;
  #L40f84c.  v9:= temp @kind object;
  #L40f84e.  v10:= "MGF1" @kind object;
  #L40f852.  v12:= 48I;
  #L40f856.  v13:= 1I;
  #L40f858.  v8:= v1 @kind object;
  #L40f85a.  call `<init>`(v8, v9, v10, v11, v12, v13) @signature `Ljava/security/spec/PSSParameterSpec;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/security/spec/AlgorithmParameterSpec;II)V` @kind direct;
  #L40f860.  v2:= `@@io.jsonwebtoken.SignatureAlgorithm.PS384` @type ^`io.jsonwebtoken.SignatureAlgorithm` @kind object;
  #L40f864.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40f86a.  v6:= `@@java.security.spec.MGF1ParameterSpec.SHA512` @type ^`java.security.spec.MGF1ParameterSpec` @kind object;
  #L40f86e.  v1:= new `java.security.spec.PSSParameterSpec`;
  #L40f872.  call temp:= `getDigestAlgorithm`(v6) @signature `Ljava/security/spec/MGF1ParameterSpec;.getDigestAlgorithm:()Ljava/lang/String;` @kind virtual;
  #L40f878.  v4:= temp @kind object;
  #L40f87a.  v5:= "MGF1" @kind object;
  #L40f87e.  v7:= 64I;
  #L40f882.  v8:= 1I;
  #L40f884.  v3:= v1 @kind object;
  #L40f886.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Ljava/security/spec/PSSParameterSpec;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/security/spec/AlgorithmParameterSpec;II)V` @kind direct;
  #L40f88c.  v2:= `@@io.jsonwebtoken.SignatureAlgorithm.PS512` @type ^`io.jsonwebtoken.SignatureAlgorithm` @kind object;
  #L40f890.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40f896.  return v0 @kind object;
}
procedure `java.security.KeyPair` `generateKeyPair`() @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.generateKeyPair:()Ljava/security/KeyPair;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40f700.  v0:= 4096I;
  #L40f704.  call temp:= `generateKeyPair`(v0) @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.generateKeyPair:(I)Ljava/security/KeyPair;` @kind static;
  #L40f70a.  v0:= temp @kind object;
  #L40f70c.  return v0 @kind object;
}
procedure `java.security.KeyPair` `generateKeyPair`(`int` v1 ) @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.generateKeyPair:(I)Ljava/security/KeyPair;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40f720.  v0:= `@@io.jsonwebtoken.impl.crypto.a.DEFAULT_SECURE_RANDOM` @type ^`java.security.SecureRandom` @kind object;
  #L40f724.  call temp:= `generateKeyPair`(v1, v0) @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.generateKeyPair:(ILjava/security/SecureRandom;)Ljava/security/KeyPair;` @kind static;
  #L40f72a.  v1:= temp @kind object;
  #L40f72c.  return v1 @kind object;
}
procedure `java.security.KeyPair` `generateKeyPair`(`int` v1 , `java.security.SecureRandom` v2 @kind object) @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.generateKeyPair:(ILjava/security/SecureRandom;)Ljava/security/KeyPair;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40f740.  v0:= "RSA" @kind object;
  #L40f744.  call temp:= `generateKeyPair`(v0, v1, v2) @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.generateKeyPair:(Ljava/lang/String;ILjava/security/SecureRandom;)Ljava/security/KeyPair;` @kind static;
  #L40f74a.  v1:= temp @kind object;
  #L40f74c.  return v1 @kind object;
}
procedure `java.security.KeyPair` `generateKeyPair`(`java.lang.String` v1 @kind object, `int` v2 , `java.security.SecureRandom` v3 @kind object) @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.generateKeyPair:(Ljava/lang/String;ILjava/security/SecureRandom;)Ljava/security/KeyPair;` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;

  #L40f760.  call temp:= `getInstance`(v1) @signature `Ljava/security/KeyPairGenerator;.getInstance:(Ljava/lang/String;)Ljava/security/KeyPairGenerator;` @kind static;
  #L40f766.  v1:= temp @kind object;
  #L40f768.  call `initialize`(v1, v2, v3) @signature `Ljava/security/KeyPairGenerator;.initialize:(ILjava/security/SecureRandom;)V` @kind virtual;
  #L40f76e.  call temp:= `genKeyPair`(v1) @signature `Ljava/security/KeyPairGenerator;.genKeyPair:()Ljava/security/KeyPair;` @kind virtual;
  #L40f774.  v1:= temp @kind object;
  #L40f776.  return v1 @kind object;
  #L40f778.  v1:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L40f77a.  v2:= new `java.lang.IllegalStateException`;
  #L40f77e.  v3:= new `java.lang.StringBuilder`;
  #L40f782.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40f788.  v0:= "Unable to obtain an RSA KeyPairGenerator: " @kind object;
  #L40f78c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40f792.  call temp:= `getMessage`(v1) @signature `Ljava/security/NoSuchAlgorithmException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L40f798.  v0:= temp @kind object;
  #L40f79a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40f7a0.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40f7a6.  v3:= temp @kind object;
  #L40f7a8.  call `<init>`(v2, v3, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L40f7ae.  throw v2;
  catch `java.security.NoSuchAlgorithmException` @[L40f760..L40f768] goto L40f778;
}
procedure `java.security.Signature` `createSignatureInstance`(`io.jsonwebtoken.impl.crypto.RsaProvider` v3 @kind this) @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.createSignatureInstance:()Ljava/security/Signature;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L40f7d0.  call temp:= `createSignatureInstance`(v3) @signature `Lio/jsonwebtoken/impl/crypto/a;.createSignatureInstance:()Ljava/security/Signature;` @kind super;
  #L40f7d6.  v0:= temp @kind object;
  #L40f7d8.  v1:= `@@io.jsonwebtoken.impl.crypto.RsaProvider.a` @type ^`java.util.Map` @kind object;
  #L40f7dc.  v2:= v3.`io.jsonwebtoken.impl.crypto.a.alg` @type ^`io.jsonwebtoken.SignatureAlgorithm` @kind object;
  #L40f7e0.  call temp:= `get`(v1, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40f7e6.  v1:= temp @kind object;
  #L40f7e8.  v1:= (`java.security.spec.PSSParameterSpec`) v1 @kind object;
  #L40f7ec.  if v1 == 0 then goto L40f7f6;
  #L40f7f0.  call `setParameter`(v3, v0, v1) @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.setParameter:(Ljava/security/Signature;Ljava/security/spec/PSSParameterSpec;)V` @kind virtual;
  #L40f7f6.  return v0 @kind object;
}
procedure `void` `doSetParameter`(`io.jsonwebtoken.impl.crypto.RsaProvider` v0 @kind this, `java.security.Signature` v1 @kind object, `java.security.spec.PSSParameterSpec` v2 @kind object) @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.doSetParameter:(Ljava/security/Signature;Ljava/security/spec/PSSParameterSpec;)V` @AccessFlag PROTECTED {
    temp;

  #L40f8f4.  call `setParameter`(v1, v2) @signature `Ljava/security/Signature;.setParameter:(Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L40f8fa.  return @kind void;
}
procedure `void` `setParameter`(`io.jsonwebtoken.impl.crypto.RsaProvider` v2 @kind this, `java.security.Signature` v3 @kind object, `java.security.spec.PSSParameterSpec` v4 @kind object) @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.setParameter:(Ljava/security/Signature;Ljava/security/spec/PSSParameterSpec;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L40f90c.  call `doSetParameter`(v2, v3, v4) @signature `Lio/jsonwebtoken/impl/crypto/RsaProvider;.doSetParameter:(Ljava/security/Signature;Ljava/security/spec/PSSParameterSpec;)V` @kind virtual;
  #L40f912.  return @kind void;
  #L40f914.  v3:= Exception @type ^`java.security.InvalidAlgorithmParameterException` @kind object;
  #L40f916.  v0:= new `java.lang.StringBuilder`;
  #L40f91a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40f920.  v1:= "Unsupported RSASSA-PSS parameter '" @kind object;
  #L40f924.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40f92a.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40f930.  v4:= "': " @kind object;
  #L40f934.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40f93a.  call temp:= `getMessage`(v3) @signature `Ljava/security/InvalidAlgorithmParameterException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L40f940.  v4:= temp @kind object;
  #L40f942.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40f948.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40f94e.  v4:= temp @kind object;
  #L40f950.  v0:= new `io.jsonwebtoken.SignatureException`;
  #L40f954.  call `<init>`(v0, v4, v3) @signature `Lio/jsonwebtoken/SignatureException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L40f95a.  throw v0;
  catch `java.security.InvalidAlgorithmParameterException` @[L40f90c..L40f912] goto L40f914;
}
