record `io.jsonwebtoken.impl.crypto.MacProvider$a` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@io.jsonwebtoken.impl.crypto.MacProvider$a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/jsonwebtoken/impl/crypto/MacProvider$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L40f398.  call temp:= `values`() @signature `Lio/jsonwebtoken/SignatureAlgorithm;.values:()[Lio/jsonwebtoken/SignatureAlgorithm;` @kind static;
  #L40f39e.  v0:= temp @kind object;
  #L40f3a0.  v0:= length @variable v0;
  #L40f3a2.  v0:= new `int`[v0];
  #L40f3a6.  `@@io.jsonwebtoken.impl.crypto.MacProvider$a.a` @type ^`int`[] := v0 @kind object;
  #L40f3aa.  v1:= `@@io.jsonwebtoken.SignatureAlgorithm.HS256` @type ^`io.jsonwebtoken.SignatureAlgorithm` @kind object;
  #L40f3ae.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40f3b4.  v1:= temp;
  #L40f3b6.  v2:= 1I;
  #L40f3b8.  v0[v1]:= v2;
  #L40f3bc.  v0:= `@@io.jsonwebtoken.impl.crypto.MacProvider$a.a` @type ^`int`[] @kind object;
  #L40f3c0.  v1:= `@@io.jsonwebtoken.SignatureAlgorithm.HS384` @type ^`io.jsonwebtoken.SignatureAlgorithm` @kind object;
  #L40f3c4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40f3ca.  v1:= temp;
  #L40f3cc.  v2:= 2I;
  #L40f3ce.  v0[v1]:= v2;
  #L40f3d2.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L40f3aa..L40f3bc] goto L40f3bc;
  catch `java.lang.NoSuchFieldError` @[L40f3bc..L40f3d2] goto L40f3d2;
}
