record `io.jsonwebtoken.impl.DefaultClaims` @kind class @AccessFlag PUBLIC extends `io.jsonwebtoken.impl.JwtMap` @kind class, `io.jsonwebtoken.Claims` @kind interface {
}
procedure `void` `<init>`(`io.jsonwebtoken.impl.DefaultClaims` v0 @kind this) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40c2dc.  call `<init>`(v0) @signature `Lio/jsonwebtoken/impl/JwtMap;.<init>:()V` @kind direct;
  #L40c2e2.  return @kind void;
}
procedure `void` `<init>`(`io.jsonwebtoken.impl.DefaultClaims` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.<init>:(Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40c2f4.  call `<init>`(v0, v1) @signature `Lio/jsonwebtoken/impl/JwtMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L40c2fa.  return @kind void;
}
procedure `java.lang.Object` `get`(`io.jsonwebtoken.impl.DefaultClaims` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.get:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40c108.  call temp:= `get`(v3, v4) @signature `Lio/jsonwebtoken/impl/JwtMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L40c10e.  v0:= temp @kind object;
  #L40c110.  if v0 != 0 then goto L40c118;
  #L40c114.  v4:= 0I;
  #L40c116.  return v4 @kind object;
  #L40c118.  v1:= "exp" @kind object;
  #L40c11c.  call temp:= `equals`(v1, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40c122.  v1:= temp;
  #L40c124.  if v1 != 0 then goto L40c148;
  #L40c128.  v1:= "iat" @kind object;
  #L40c12c.  call temp:= `equals`(v1, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40c132.  v1:= temp;
  #L40c134.  if v1 != 0 then goto L40c148;
  #L40c138.  v1:= "nbf" @kind object;
  #L40c13c.  call temp:= `equals`(v1, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40c142.  v1:= temp;
  #L40c144.  if v1 == 0 then goto L40c150;
  #L40c148.  call temp:= `getDate`(v3, v4) @signature `Lio/jsonwebtoken/impl/JwtMap;.getDate:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #L40c14e.  v0:= temp @kind object;
  #L40c150.  v4:= constclass @type ^`java.util.Date` @kind object;
  #L40c154.  if v5 != v4 then goto L40c178;
  #L40c158.  v4:= instanceof @variable v0 @type ^`java.lang.Long` @kind boolean;
  #L40c15c.  if v4 == 0 then goto L40c178;
  #L40c160.  v4:= new `java.util.Date`;
  #L40c164.  v0:= (`java.lang.Long`) v0 @kind object;
  #L40c168.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L40c16e.  v0:= temp @kind wide;
  #L40c170.  call `<init>`(v4, v0) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L40c176.  v0:= v4 @kind object;
  #L40c178.  call temp:= `isInstance`(v5, v0) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L40c17e.  v4:= temp;
  #L40c180.  if v4 == 0 then goto L40c18e;
  #L40c184.  call temp:= `cast`(v5, v0) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L40c18a.  v4:= temp @kind object;
  #L40c18c.  return v4 @kind object;
  #L40c18e.  v4:= new `io.jsonwebtoken.RequiredTypeException`;
  #L40c192.  v1:= new `java.lang.StringBuilder`;
  #L40c196.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40c19c.  v2:= "Expected value to be of type: " @kind object;
  #L40c1a0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c1a6.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c1ac.  v5:= ", but was " @kind object;
  #L40c1b0.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c1b6.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L40c1bc.  v5:= temp @kind object;
  #L40c1be.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c1c4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40c1ca.  v5:= temp @kind object;
  #L40c1cc.  call `<init>`(v4, v5) @signature `Lio/jsonwebtoken/RequiredTypeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40c1d2.  throw v4;
}
procedure `java.lang.String` `getAudience`(`io.jsonwebtoken.impl.DefaultClaims` v1 @kind this) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.getAudience:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c1e4.  v0:= "aud" @kind object;
  #L40c1e8.  call temp:= `getString`(v1, v0) @signature `Lio/jsonwebtoken/impl/JwtMap;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L40c1ee.  v0:= temp @kind object;
  #L40c1f0.  return v0 @kind object;
}
procedure `java.util.Date` `getExpiration`(`io.jsonwebtoken.impl.DefaultClaims` v2 @kind this) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.getExpiration:()Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40c264.  v0:= constclass @type ^`java.util.Date` @kind object;
  #L40c268.  v1:= "exp" @kind object;
  #L40c26c.  call temp:= `get`(v2, v1, v0) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.get:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L40c272.  v0:= temp @kind object;
  #L40c274.  v0:= (`java.util.Date`) v0 @kind object;
  #L40c278.  return v0 @kind object;
}
procedure `java.lang.String` `getId`(`io.jsonwebtoken.impl.DefaultClaims` v1 @kind this) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.getId:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c204.  v0:= "jti" @kind object;
  #L40c208.  call temp:= `getString`(v1, v0) @signature `Lio/jsonwebtoken/impl/JwtMap;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L40c20e.  v0:= temp @kind object;
  #L40c210.  return v0 @kind object;
}
procedure `java.util.Date` `getIssuedAt`(`io.jsonwebtoken.impl.DefaultClaims` v2 @kind this) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.getIssuedAt:()Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40c28c.  v0:= constclass @type ^`java.util.Date` @kind object;
  #L40c290.  v1:= "iat" @kind object;
  #L40c294.  call temp:= `get`(v2, v1, v0) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.get:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L40c29a.  v0:= temp @kind object;
  #L40c29c.  v0:= (`java.util.Date`) v0 @kind object;
  #L40c2a0.  return v0 @kind object;
}
procedure `java.lang.String` `getIssuer`(`io.jsonwebtoken.impl.DefaultClaims` v1 @kind this) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.getIssuer:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c224.  v0:= "iss" @kind object;
  #L40c228.  call temp:= `getString`(v1, v0) @signature `Lio/jsonwebtoken/impl/JwtMap;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L40c22e.  v0:= temp @kind object;
  #L40c230.  return v0 @kind object;
}
procedure `java.util.Date` `getNotBefore`(`io.jsonwebtoken.impl.DefaultClaims` v2 @kind this) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.getNotBefore:()Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40c2b4.  v0:= constclass @type ^`java.util.Date` @kind object;
  #L40c2b8.  v1:= "nbf" @kind object;
  #L40c2bc.  call temp:= `get`(v2, v1, v0) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.get:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L40c2c2.  v0:= temp @kind object;
  #L40c2c4.  v0:= (`java.util.Date`) v0 @kind object;
  #L40c2c8.  return v0 @kind object;
}
procedure `java.lang.String` `getSubject`(`io.jsonwebtoken.impl.DefaultClaims` v1 @kind this) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.getSubject:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c244.  v0:= "sub" @kind object;
  #L40c248.  call temp:= `getString`(v1, v0) @signature `Lio/jsonwebtoken/impl/JwtMap;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L40c24e.  v0:= temp @kind object;
  #L40c250.  return v0 @kind object;
}
procedure `io.jsonwebtoken.Claims` `setAudience`(`io.jsonwebtoken.impl.DefaultClaims` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setAudience:(Ljava/lang/String;)Lio/jsonwebtoken/Claims;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bf80.  v0:= "aud" @kind object;
  #L40bf84.  call `setValue`(v1, v0, v2) @signature `Lio/jsonwebtoken/impl/JwtMap;.setValue:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L40bf8a.  return v1 @kind object;
}
procedure `io.jsonwebtoken.ClaimsMutator` `setAudience`(`io.jsonwebtoken.impl.DefaultClaims` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setAudience:(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40c044.  call temp:= `setAudience`(v0, v1) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setAudience:(Ljava/lang/String;)Lio/jsonwebtoken/Claims;` @kind virtual;
  #L40c04a.  v1:= temp @kind object;
  #L40c04c.  return v1 @kind object;
}
procedure `io.jsonwebtoken.Claims` `setExpiration`(`io.jsonwebtoken.impl.DefaultClaims` v1 @kind this, `java.util.Date` v2 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setExpiration:(Ljava/util/Date;)Lio/jsonwebtoken/Claims;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bf9c.  v0:= "exp" @kind object;
  #L40bfa0.  call `setDate`(v1, v0, v2) @signature `Lio/jsonwebtoken/impl/JwtMap;.setDate:(Ljava/lang/String;Ljava/util/Date;)V` @kind virtual;
  #L40bfa6.  return v1 @kind object;
}
procedure `io.jsonwebtoken.ClaimsMutator` `setExpiration`(`io.jsonwebtoken.impl.DefaultClaims` v0 @kind this, `java.util.Date` v1 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setExpiration:(Ljava/util/Date;)Lio/jsonwebtoken/ClaimsMutator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40c060.  call temp:= `setExpiration`(v0, v1) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setExpiration:(Ljava/util/Date;)Lio/jsonwebtoken/Claims;` @kind virtual;
  #L40c066.  v1:= temp @kind object;
  #L40c068.  return v1 @kind object;
}
procedure `io.jsonwebtoken.Claims` `setId`(`io.jsonwebtoken.impl.DefaultClaims` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setId:(Ljava/lang/String;)Lio/jsonwebtoken/Claims;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bfb8.  v0:= "jti" @kind object;
  #L40bfbc.  call `setValue`(v1, v0, v2) @signature `Lio/jsonwebtoken/impl/JwtMap;.setValue:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L40bfc2.  return v1 @kind object;
}
procedure `io.jsonwebtoken.ClaimsMutator` `setId`(`io.jsonwebtoken.impl.DefaultClaims` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setId:(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40c07c.  call temp:= `setId`(v0, v1) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setId:(Ljava/lang/String;)Lio/jsonwebtoken/Claims;` @kind virtual;
  #L40c082.  v1:= temp @kind object;
  #L40c084.  return v1 @kind object;
}
procedure `io.jsonwebtoken.Claims` `setIssuedAt`(`io.jsonwebtoken.impl.DefaultClaims` v1 @kind this, `java.util.Date` v2 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setIssuedAt:(Ljava/util/Date;)Lio/jsonwebtoken/Claims;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bfd4.  v0:= "iat" @kind object;
  #L40bfd8.  call `setDate`(v1, v0, v2) @signature `Lio/jsonwebtoken/impl/JwtMap;.setDate:(Ljava/lang/String;Ljava/util/Date;)V` @kind virtual;
  #L40bfde.  return v1 @kind object;
}
procedure `io.jsonwebtoken.ClaimsMutator` `setIssuedAt`(`io.jsonwebtoken.impl.DefaultClaims` v0 @kind this, `java.util.Date` v1 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setIssuedAt:(Ljava/util/Date;)Lio/jsonwebtoken/ClaimsMutator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40c098.  call temp:= `setIssuedAt`(v0, v1) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setIssuedAt:(Ljava/util/Date;)Lio/jsonwebtoken/Claims;` @kind virtual;
  #L40c09e.  v1:= temp @kind object;
  #L40c0a0.  return v1 @kind object;
}
procedure `io.jsonwebtoken.Claims` `setIssuer`(`io.jsonwebtoken.impl.DefaultClaims` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setIssuer:(Ljava/lang/String;)Lio/jsonwebtoken/Claims;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bff0.  v0:= "iss" @kind object;
  #L40bff4.  call `setValue`(v1, v0, v2) @signature `Lio/jsonwebtoken/impl/JwtMap;.setValue:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L40bffa.  return v1 @kind object;
}
procedure `io.jsonwebtoken.ClaimsMutator` `setIssuer`(`io.jsonwebtoken.impl.DefaultClaims` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setIssuer:(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40c0b4.  call temp:= `setIssuer`(v0, v1) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setIssuer:(Ljava/lang/String;)Lio/jsonwebtoken/Claims;` @kind virtual;
  #L40c0ba.  v1:= temp @kind object;
  #L40c0bc.  return v1 @kind object;
}
procedure `io.jsonwebtoken.Claims` `setNotBefore`(`io.jsonwebtoken.impl.DefaultClaims` v1 @kind this, `java.util.Date` v2 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setNotBefore:(Ljava/util/Date;)Lio/jsonwebtoken/Claims;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c00c.  v0:= "nbf" @kind object;
  #L40c010.  call `setDate`(v1, v0, v2) @signature `Lio/jsonwebtoken/impl/JwtMap;.setDate:(Ljava/lang/String;Ljava/util/Date;)V` @kind virtual;
  #L40c016.  return v1 @kind object;
}
procedure `io.jsonwebtoken.ClaimsMutator` `setNotBefore`(`io.jsonwebtoken.impl.DefaultClaims` v0 @kind this, `java.util.Date` v1 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setNotBefore:(Ljava/util/Date;)Lio/jsonwebtoken/ClaimsMutator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40c0d0.  call temp:= `setNotBefore`(v0, v1) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setNotBefore:(Ljava/util/Date;)Lio/jsonwebtoken/Claims;` @kind virtual;
  #L40c0d6.  v1:= temp @kind object;
  #L40c0d8.  return v1 @kind object;
}
procedure `io.jsonwebtoken.Claims` `setSubject`(`io.jsonwebtoken.impl.DefaultClaims` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setSubject:(Ljava/lang/String;)Lio/jsonwebtoken/Claims;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c028.  v0:= "sub" @kind object;
  #L40c02c.  call `setValue`(v1, v0, v2) @signature `Lio/jsonwebtoken/impl/JwtMap;.setValue:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L40c032.  return v1 @kind object;
}
procedure `io.jsonwebtoken.ClaimsMutator` `setSubject`(`io.jsonwebtoken.impl.DefaultClaims` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setSubject:(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40c0ec.  call temp:= `setSubject`(v0, v1) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.setSubject:(Ljava/lang/String;)Lio/jsonwebtoken/Claims;` @kind virtual;
  #L40c0f2.  v1:= temp @kind object;
  #L40c0f4.  return v1 @kind object;
}
