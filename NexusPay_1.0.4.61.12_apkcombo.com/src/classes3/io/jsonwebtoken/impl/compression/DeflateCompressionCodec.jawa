record `io.jsonwebtoken.impl.compression.DeflateCompressionCodec` @kind class @AccessFlag PUBLIC extends `io.jsonwebtoken.impl.compression.AbstractCompressionCodec` @kind class {
}
procedure `void` `<init>`(`io.jsonwebtoken.impl.compression.DeflateCompressionCodec` v0 @kind this) @signature `Lio/jsonwebtoken/impl/compression/DeflateCompressionCodec;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40e3b0.  call `<init>`(v0) @signature `Lio/jsonwebtoken/impl/compression/AbstractCompressionCodec;.<init>:()V` @kind direct;
  #L40e3b6.  return @kind void;
}
procedure `byte`[] `doCompress`(`io.jsonwebtoken.impl.compression.DeflateCompressionCodec` v7 @kind this, `byte`[] v8 @kind object) @signature `Lio/jsonwebtoken/impl/compression/DeflateCompressionCodec;.doCompress:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L40e258.  v0:= new `java.util.zip.Deflater`;
  #L40e25c.  v1:= 9I;
  #L40e260.  call `<init>`(v0, v1) @signature `Ljava/util/zip/Deflater;.<init>:(I)V` @kind direct;
  #L40e266.  v1:= 2I;
  #L40e268.  v2:= 0I;
  #L40e26a.  v3:= 1I;
  #L40e26c.  v4:= 0I;
  #L40e26e.  v5:= new `java.io.ByteArrayOutputStream`;
  #L40e272.  call `<init>`(v5) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L40e278.  v6:= new `java.util.zip.DeflaterOutputStream`;
  #L40e27c.  call `<init>`(v6, v5, v0, v3) @signature `Ljava/util/zip/DeflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;Z)V` @kind direct;
  #L40e282.  v0:= length @variable v8;
  #L40e284.  call `write`(v6, v8, v4, v0) @signature `Ljava/util/zip/DeflaterOutputStream;.write:([BII)V` @kind virtual;
  #L40e28a.  call `flush`(v6) @signature `Ljava/util/zip/DeflaterOutputStream;.flush:()V` @kind virtual;
  #L40e290.  call temp:= `toByteArray`(v5) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L40e296.  v8:= temp @kind object;
  #L40e298.  v0:= new `java.io.Closeable`[v1];
  #L40e29c.  v0[v4]:= v5 @kind object;
  #L40e2a0.  v0[v3]:= v6 @kind object;
  #L40e2a4.  call `nullSafeClose`(v0) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeClose:([Ljava/io/Closeable;)V` @kind static;
  #L40e2aa.  return v8 @kind object;
  #L40e2ac.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40e2ae.  goto L40e2b4;
  #L40e2b0.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40e2b2.  v6:= v2 @kind object;
  #L40e2b4.  v2:= v5 @kind object;
  #L40e2b6.  goto L40e2bc;
  #L40e2b8.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40e2ba.  v6:= v2 @kind object;
  #L40e2bc.  v0:= new `java.io.Closeable`[v1];
  #L40e2c0.  v0[v4]:= v2 @kind object;
  #L40e2c4.  v0[v3]:= v6 @kind object;
  #L40e2c8.  call `nullSafeClose`(v0) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeClose:([Ljava/io/Closeable;)V` @kind static;
  #L40e2ce.  throw v8;
  catch `java.lang.Throwable` @[L40e26e..L40e278] goto L40e2b8;
  catch `java.lang.Throwable` @[L40e278..L40e282] goto L40e2b0;
  catch `java.lang.Throwable` @[L40e282..L40e298] goto L40e2ac;
}
procedure `byte`[] `doDecompress`(`io.jsonwebtoken.impl.compression.DeflateCompressionCodec` v6 @kind this, `byte`[] v7 @kind object) @signature `Lio/jsonwebtoken/impl/compression/DeflateCompressionCodec;.doDecompress:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L40e300.  v0:= 1I;
  #L40e302.  v1:= 0I;
  #L40e304.  v2:= 2I;
  #L40e306.  v3:= 0I;
  #L40e308.  v4:= new `java.io.ByteArrayOutputStream`;
  #L40e30c.  call `<init>`(v4) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L40e312.  v5:= new `java.util.zip.InflaterOutputStream`;
  #L40e316.  call `<init>`(v5, v4) @signature `Ljava/util/zip/InflaterOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L40e31c.  call `write`(v5, v7) @signature `Ljava/util/zip/InflaterOutputStream;.write:([B)V` @kind virtual;
  #L40e322.  call `flush`(v5) @signature `Ljava/util/zip/InflaterOutputStream;.flush:()V` @kind virtual;
  #L40e328.  call temp:= `toByteArray`(v4) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L40e32e.  v7:= temp @kind object;
  #L40e330.  v2:= new `java.io.Closeable`[v2];
  #L40e334.  v2[v1]:= v4 @kind object;
  #L40e338.  v2[v0]:= v5 @kind object;
  #L40e33c.  call `nullSafeClose`(v2) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeClose:([Ljava/io/Closeable;)V` @kind static;
  #L40e342.  return v7 @kind object;
  #L40e344.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40e346.  goto L40e34c;
  #L40e348.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40e34a.  v5:= v3 @kind object;
  #L40e34c.  v3:= v4 @kind object;
  #L40e34e.  goto L40e354;
  #L40e350.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40e352.  v5:= v3 @kind object;
  #L40e354.  v2:= new `java.io.Closeable`[v2];
  #L40e358.  v2[v1]:= v3 @kind object;
  #L40e35c.  v2[v0]:= v5 @kind object;
  #L40e360.  call `nullSafeClose`(v2) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeClose:([Ljava/io/Closeable;)V` @kind static;
  #L40e366.  throw v7;
  catch `java.lang.Throwable` @[L40e308..L40e312] goto L40e350;
  catch `java.lang.Throwable` @[L40e312..L40e31c] goto L40e348;
  catch `java.lang.Throwable` @[L40e31c..L40e330] goto L40e344;
}
procedure `java.lang.String` `getAlgorithmName`(`io.jsonwebtoken.impl.compression.DeflateCompressionCodec` v1 @kind this) @signature `Lio/jsonwebtoken/impl/compression/DeflateCompressionCodec;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e398.  v0:= "DEF" @kind object;
  #L40e39c.  return v0 @kind object;
}
