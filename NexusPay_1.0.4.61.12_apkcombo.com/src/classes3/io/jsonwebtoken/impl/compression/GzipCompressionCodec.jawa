record `io.jsonwebtoken.impl.compression.GzipCompressionCodec` @kind class @AccessFlag PUBLIC extends `io.jsonwebtoken.impl.compression.AbstractCompressionCodec` @kind class, `io.jsonwebtoken.CompressionCodec` @kind interface {
}
procedure `void` `<init>`(`io.jsonwebtoken.impl.compression.GzipCompressionCodec` v0 @kind this) @signature `Lio/jsonwebtoken/impl/compression/GzipCompressionCodec;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40e52c.  call `<init>`(v0) @signature `Lio/jsonwebtoken/impl/compression/AbstractCompressionCodec;.<init>:()V` @kind direct;
  #L40e532.  return @kind void;
}
procedure `byte`[] `doCompress`(`io.jsonwebtoken.impl.compression.GzipCompressionCodec` v6 @kind this, `byte`[] v7 @kind object) @signature `Lio/jsonwebtoken/impl/compression/GzipCompressionCodec;.doCompress:([B)[B` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L40e3c8.  v0:= new `java.io.ByteArrayOutputStream`;
  #L40e3cc.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L40e3d2.  v1:= new `java.util.zip.GZIPOutputStream`;
  #L40e3d6.  v2:= 1I;
  #L40e3d8.  call `<init>`(v1, v0, v2) @signature `Ljava/util/zip/GZIPOutputStream;.<init>:(Ljava/io/OutputStream;Z)V` @kind direct;
  #L40e3de.  v3:= 2I;
  #L40e3e0.  v4:= 0I;
  #L40e3e2.  v5:= length @variable v7;
  #L40e3e4.  call `write`(v1, v7, v4, v5) @signature `Ljava/util/zip/GZIPOutputStream;.write:([BII)V` @kind virtual;
  #L40e3ea.  call `finish`(v1) @signature `Ljava/util/zip/GZIPOutputStream;.finish:()V` @kind virtual;
  #L40e3f0.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L40e3f6.  v7:= temp @kind object;
  #L40e3f8.  v3:= new `java.io.Closeable`[v3];
  #L40e3fc.  v3[v4]:= v1 @kind object;
  #L40e400.  v3[v2]:= v0 @kind object;
  #L40e404.  call `nullSafeClose`(v3) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeClose:([Ljava/io/Closeable;)V` @kind static;
  #L40e40a.  return v7 @kind object;
  #L40e40c.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40e40e.  v3:= new `java.io.Closeable`[v3];
  #L40e412.  v3[v4]:= v1 @kind object;
  #L40e416.  v3[v2]:= v0 @kind object;
  #L40e41a.  call `nullSafeClose`(v3) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeClose:([Ljava/io/Closeable;)V` @kind static;
  #L40e420.  throw v7;
  catch `java.lang.Throwable` @[L40e3e2..L40e3f8] goto L40e40c;
}
procedure `byte`[] `doDecompress`(`io.jsonwebtoken.impl.compression.GzipCompressionCodec` v9 @kind this, `byte`[] v10 @kind object) @signature `Lio/jsonwebtoken/impl/compression/GzipCompressionCodec;.doDecompress:([B)[B` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L40e440.  v0:= 512I;
  #L40e444.  v0:= new `byte`[v0];
  #L40e448.  v1:= 2I;
  #L40e44a.  v2:= 1I;
  #L40e44c.  v3:= 3I;
  #L40e44e.  v4:= 0I;
  #L40e450.  v5:= 0I;
  #L40e452.  v6:= new `java.io.ByteArrayInputStream`;
  #L40e456.  call `<init>`(v6, v10) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L40e45c.  v10:= new `java.util.zip.GZIPInputStream`;
  #L40e460.  call `<init>`(v10, v6) @signature `Ljava/util/zip/GZIPInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L40e466.  v7:= new `java.io.ByteArrayOutputStream`;
  #L40e46a.  call `<init>`(v7) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L40e470.  call temp:= `read`(v10, v0) @signature `Ljava/util/zip/GZIPInputStream;.read:([B)I` @kind virtual;
  #L40e476.  v5:= temp;
  #L40e478.  v8:= -1I;
  #L40e47a.  if v5 == v8 then goto L40e486;
  #L40e47e.  call `write`(v7, v0, v4, v5) @signature `Ljava/io/ByteArrayOutputStream;.write:([BII)V` @kind virtual;
  #L40e484.  goto L40e470;
  #L40e486.  call temp:= `toByteArray`(v7) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L40e48c.  v0:= temp @kind object;
  #L40e48e.  v3:= new `java.io.Closeable`[v3];
  #L40e492.  v3[v4]:= v6 @kind object;
  #L40e496.  v3[v2]:= v10 @kind object;
  #L40e49a.  v3[v1]:= v7 @kind object;
  #L40e49e.  call `nullSafeClose`(v3) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeClose:([Ljava/io/Closeable;)V` @kind static;
  #L40e4a4.  return v0 @kind object;
  #L40e4a6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40e4a8.  goto L40e4b6;
  #L40e4aa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40e4ac.  v7:= v5 @kind object;
  #L40e4ae.  goto L40e4b6;
  #L40e4b0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40e4b2.  v10:= v5 @kind object;
  #L40e4b4.  v7:= v10 @kind object;
  #L40e4b6.  v5:= v6 @kind object;
  #L40e4b8.  goto L40e4c0;
  #L40e4ba.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40e4bc.  v10:= v5 @kind object;
  #L40e4be.  v7:= v10 @kind object;
  #L40e4c0.  v3:= new `java.io.Closeable`[v3];
  #L40e4c4.  v3[v4]:= v5 @kind object;
  #L40e4c8.  v3[v2]:= v10 @kind object;
  #L40e4cc.  v3[v1]:= v7 @kind object;
  #L40e4d0.  call `nullSafeClose`(v3) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeClose:([Ljava/io/Closeable;)V` @kind static;
  #L40e4d6.  throw v0;
  catch `java.lang.Throwable` @[L40e452..L40e45c] goto L40e4ba;
  catch `java.lang.Throwable` @[L40e45c..L40e466] goto L40e4b0;
  catch `java.lang.Throwable` @[L40e466..L40e470] goto L40e4aa;
  catch `java.lang.Throwable` @[L40e470..L40e48e] goto L40e4a6;
}
procedure `java.lang.String` `getAlgorithmName`(`io.jsonwebtoken.impl.compression.GzipCompressionCodec` v1 @kind this) @signature `Lio/jsonwebtoken/impl/compression/GzipCompressionCodec;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e514.  v0:= "GZIP" @kind object;
  #L40e518.  return v0 @kind object;
}
