record `io.jsonwebtoken.lang.Classes$b` @kind class @AccessFlag FINAL extends `io.jsonwebtoken.lang.Classes$e` @kind class {
}
procedure `void` `<init>`(`io.jsonwebtoken.lang.Classes$b` v1 @kind this) @signature `Lio/jsonwebtoken/lang/Classes$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4102e0.  v0:= 0I;
  #L4102e2.  call `<init>`(v1, v0) @signature `Lio/jsonwebtoken/lang/Classes$e;.<init>:(Lio/jsonwebtoken/lang/Classes$a;)V` @kind direct;
  #L4102e8.  return @kind void;
}
procedure `java.lang.ClassLoader` `c`(`io.jsonwebtoken.lang.Classes$b` v1 @kind this) @signature `Lio/jsonwebtoken/lang/Classes$b;.c:()Ljava/lang/ClassLoader;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4102c0.  v0:= constclass @type ^`io.jsonwebtoken.lang.Classes` @kind object;
  #L4102c4.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L4102ca.  v0:= temp @kind object;
  #L4102cc.  return v0 @kind object;
}
