record `io.jsonwebtoken.lang.Objects` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<clinit>`() @signature `Lio/jsonwebtoken/lang/Objects;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L411ab0.  return @kind void;
}
procedure `void` `<init>`(`io.jsonwebtoken.lang.Objects` v0 @kind this) @signature `Lio/jsonwebtoken/lang/Objects;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L411ac4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L411aca.  return @kind void;
}
procedure `java.lang.Object`[] `addObjectToArray`(`java.lang.Object`[] v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.addObjectToArray:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L411394.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L411398.  if v4 == 0 then goto L4113ae;
  #L41139c.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4113a2.  v0:= temp @kind object;
  #L4113a4.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L4113aa.  v0:= temp @kind object;
  #L4113ac.  goto L4113ba;
  #L4113ae.  if v5 == 0 then goto L4113ba;
  #L4113b2.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4113b8.  v0:= temp @kind object;
  #L4113ba.  v1:= 1I;
  #L4113bc.  if v4 == 0 then goto L4113c6;
  #L4113c0.  v2:= length @variable v4;
  #L4113c2.  v2:= v2 + v1 @kind int;
  #L4113c4.  goto L4113c8;
  #L4113c6.  v2:= 1I;
  #L4113c8.  call temp:= `newInstance`(v0, v2) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L4113ce.  v0:= temp @kind object;
  #L4113d0.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L4113d4.  if v4 == 0 then goto L4113e2;
  #L4113d8.  v2:= length @variable v4;
  #L4113da.  v3:= 0I;
  #L4113dc.  call `arraycopy`(v4, v3, v0, v3, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4113e2.  v4:= length @variable v0;
  #L4113e4.  v4:= v4 - v1 @kind int;
  #L4113e6.  v0[v4]:= v5 @kind object;
  #L4113ea.  return v0 @kind object;
}
procedure `java.lang.Enum` `caseInsensitiveValueOf`(`java.lang.Enum`[] v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.caseInsensitiveValueOf:([Ljava/lang/Enum;Ljava/lang/String;)Ljava/lang/Enum;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L411318.  v0:= length @variable v5;
  #L41131a.  v1:= 0I;
  #L41131c.  v2:= 0I;
  #L41131e.  if v2 >= v0 then goto L411342;
  #L411322.  v3:= v5[v2] @kind object;
  #L411326.  call temp:= `toString`(v3) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L41132c.  v4:= temp @kind object;
  #L41132e.  call temp:= `equalsIgnoreCase`(v4, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L411334.  v4:= temp;
  #L411336.  if v4 == 0 then goto L41133c;
  #L41133a.  return v3 @kind object;
  #L41133c.  v2:= v2 + 1;
  #L411340.  goto L41131e;
  #L411342.  v0:= new `java.lang.IllegalArgumentException`;
  #L411346.  v2:= 2I;
  #L411348.  v2:= new `java.lang.Object`[v2];
  #L41134c.  v2[v1]:= v6 @kind object;
  #L411350.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L411356.  v5:= temp @kind object;
  #L411358.  call temp:= `getComponentType`(v5) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L41135e.  v5:= temp @kind object;
  #L411360.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L411366.  v5:= temp @kind object;
  #L411368.  v6:= 1I;
  #L41136a.  v2[v6]:= v5 @kind object;
  #L41136e.  v5:= "constant [%s] does not exist in enum type %s" @kind object;
  #L411372.  call temp:= `format`(v5, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L411378.  v5:= temp @kind object;
  #L41137a.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L411380.  throw v0;
}
procedure `boolean` `containsConstant`(`java.lang.Enum`[] v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.containsConstant:([Ljava/lang/Enum;Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L410c70.  v0:= 0I;
  #L410c72.  call temp:= `containsConstant`(v1, v2, v0) @signature `Lio/jsonwebtoken/lang/Objects;.containsConstant:([Ljava/lang/Enum;Ljava/lang/String;Z)Z` @kind static;
  #L410c78.  v1:= temp;
  #L410c7a.  return v1;
}
procedure `boolean` `containsConstant`(`java.lang.Enum`[] v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 ) @signature `Lio/jsonwebtoken/lang/Objects;.containsConstant:([Ljava/lang/Enum;Ljava/lang/String;Z)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L410c8c.  v0:= length @variable v4;
  #L410c8e.  v1:= 0I;
  #L410c90.  v2:= 0I;
  #L410c92.  if v2 >= v0 then goto L410cd2;
  #L410c96.  v3:= v4[v2] @kind object;
  #L410c9a.  if v6 == 0 then goto L410cb4;
  #L410c9e.  call temp:= `toString`(v3) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L410ca4.  v3:= temp @kind object;
  #L410ca6.  call temp:= `equals`(v3, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L410cac.  v3:= temp;
  #L410cae.  if v3 == 0 then goto L410ccc;
  #L410cb2.  goto L410cc8;
  #L410cb4.  call temp:= `toString`(v3) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L410cba.  v3:= temp @kind object;
  #L410cbc.  call temp:= `equalsIgnoreCase`(v3, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L410cc2.  v3:= temp;
  #L410cc4.  if v3 == 0 then goto L410ccc;
  #L410cc8.  v4:= 1I;
  #L410cca.  return v4;
  #L410ccc.  v2:= v2 + 1;
  #L410cd0.  goto L410c92;
  #L410cd2.  return v1;
}
procedure `boolean` `containsElement`(`java.lang.Object`[] v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.containsElement:([Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L410ce4.  v0:= 0I;
  #L410ce6.  if v4 != 0 then goto L410cec;
  #L410cea.  return v0;
  #L410cec.  v1:= length @variable v4;
  #L410cee.  v2:= 0I;
  #L410cf0.  if v2 >= v1 then goto L410d0e;
  #L410cf4.  v3:= v4[v2] @kind object;
  #L410cf8.  call temp:= `nullSafeEquals`(v3, v5) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L410cfe.  v3:= temp;
  #L410d00.  if v3 == 0 then goto L410d08;
  #L410d04.  v4:= 1I;
  #L410d06.  return v4;
  #L410d08.  v2:= v2 + 1;
  #L410d0c.  goto L410cf0;
  #L410d0e.  return v0;
}
procedure `java.lang.String` `getDisplayString`(`java.lang.Object` v0 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.getDisplayString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4114b0.  if v0 != 0 then goto L4114ba;
  #L4114b4.  v0:= "" @kind object;
  #L4114b8.  return v0 @kind object;
  #L4114ba.  call temp:= `nullSafeToString`(v0) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4114c0.  v0:= temp @kind object;
  #L4114c2.  return v0 @kind object;
}
procedure `java.lang.String` `getIdentityHexString`(`java.lang.Object` v0 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.getIdentityHexString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4114d4.  call temp:= `identityHashCode`(v0) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L4114da.  v0:= temp;
  #L4114dc.  call temp:= `toHexString`(v0) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L4114e2.  v0:= temp @kind object;
  #L4114e4.  return v0 @kind object;
}
procedure `int` `hashCode`(`double` v0 ) @signature `Lio/jsonwebtoken/lang/Objects;.hashCode:(D)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L410fc0.  call temp:= `doubleToLongBits`(v0) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L410fc6.  v0:= temp @kind wide;
  #L410fc8.  call temp:= `hashCode`(v0) @signature `Lio/jsonwebtoken/lang/Objects;.hashCode:(J)I` @kind static;
  #L410fce.  v0:= temp;
  #L410fd0.  return v0;
}
procedure `int` `hashCode`(`float` v0 ) @signature `Lio/jsonwebtoken/lang/Objects;.hashCode:(F)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L410fe4.  call temp:= `floatToIntBits`(v0) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L410fea.  v0:= temp;
  #L410fec.  return v0;
}
procedure `int` `hashCode`(`long` v2 ) @signature `Lio/jsonwebtoken/lang/Objects;.hashCode:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L411000.  v0:= 32I;
  #L411004.  v0:= v2 ^>> v0 @kind long;
  #L411008.  v2:= v2 ^~ v0 @kind long;
  #L41100a.  v3:= (`int`) v2 @kind l2i;
  #L41100c.  return v3;
}
procedure `int` `hashCode`(`boolean` v0 ) @signature `Lio/jsonwebtoken/lang/Objects;.hashCode:(Z)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L410fa0.  if v0 == 0 then goto L410faa;
  #L410fa4.  v0:= 1231I;
  #L410fa8.  goto L410fae;
  #L410faa.  v0:= 1237I;
  #L410fae.  return v0;
}
procedure `java.lang.String` `identityToString`(`java.lang.Object` v2 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.identityToString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4114f8.  if v2 != 0 then goto L411502;
  #L4114fc.  v2:= "" @kind object;
  #L411500.  return v2 @kind object;
  #L411502.  v0:= new `java.lang.StringBuilder`;
  #L411506.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41150c.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L411512.  v1:= temp @kind object;
  #L411514.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L41151a.  v1:= temp @kind object;
  #L41151c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411522.  v1:= "@" @kind object;
  #L411526.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41152c.  call temp:= `getIdentityHexString`(v2) @signature `Lio/jsonwebtoken/lang/Objects;.getIdentityHexString:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L411532.  v2:= temp @kind object;
  #L411534.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41153a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L411540.  v2:= temp @kind object;
  #L411542.  return v2 @kind object;
}
procedure `boolean` `isArray`(`java.lang.Object` v0 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.isArray:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L410d20.  if v0 == 0 then goto L410d3c;
  #L410d24.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L410d2a.  v0:= temp @kind object;
  #L410d2c.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L410d32.  v0:= temp;
  #L410d34.  if v0 == 0 then goto L410d3c;
  #L410d38.  v0:= 1I;
  #L410d3a.  goto L410d3e;
  #L410d3c.  v0:= 0I;
  #L410d3e.  return v0;
}
procedure `boolean` `isCheckedException`(`java.lang.Throwable` v1 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.isCheckedException:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L410d50.  v0:= instanceof @variable v1 @type ^`java.lang.RuntimeException` @kind boolean;
  #L410d54.  if v0 != 0 then goto L410d64;
  #L410d58.  v1:= instanceof @variable v1 @type ^`java.lang.Error` @kind boolean;
  #L410d5c.  if v1 != 0 then goto L410d64;
  #L410d60.  v1:= 1I;
  #L410d62.  goto L410d66;
  #L410d64.  v1:= 0I;
  #L410d66.  return v1;
}
procedure `boolean` `isCompatibleWithThrowsClause`(`java.lang.Throwable` v5 @kind object, `java.lang.Class`[] v6 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.isCompatibleWithThrowsClause:(Ljava/lang/Throwable;[Ljava/lang/Class;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L410d78.  call temp:= `isCheckedException`(v5) @signature `Lio/jsonwebtoken/lang/Objects;.isCheckedException:(Ljava/lang/Throwable;)Z` @kind static;
  #L410d7e.  v0:= temp;
  #L410d80.  v1:= 1I;
  #L410d82.  if v0 != 0 then goto L410d88;
  #L410d86.  return v1;
  #L410d88.  v0:= 0I;
  #L410d8a.  if v6 == 0 then goto L410db6;
  #L410d8e.  v2:= 0I;
  #L410d90.  v3:= length @variable v6;
  #L410d92.  if v2 >= v3 then goto L410db6;
  #L410d96.  v3:= v6[v2] @kind object;
  #L410d9a.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L410da0.  v4:= temp @kind object;
  #L410da2.  call temp:= `isAssignableFrom`(v3, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L410da8.  v3:= temp;
  #L410daa.  if v3 == 0 then goto L410db0;
  #L410dae.  return v1;
  #L410db0.  v2:= v2 + 1;
  #L410db4.  goto L410d90;
  #L410db6.  return v0;
}
procedure `boolean` `isEmpty`(`byte`[] v0 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.isEmpty:([B)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L410dc8.  if v0 == 0 then goto L410dd8;
  #L410dcc.  v0:= length @variable v0;
  #L410dce.  if v0 != 0 then goto L410dd4;
  #L410dd2.  goto L410dd8;
  #L410dd4.  v0:= 0I;
  #L410dd6.  goto L410dda;
  #L410dd8.  v0:= 1I;
  #L410dda.  return v0;
}
procedure `boolean` `isEmpty`(`java.lang.Object`[] v0 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.isEmpty:([Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L410dec.  if v0 == 0 then goto L410dfc;
  #L410df0.  v0:= length @variable v0;
  #L410df2.  if v0 != 0 then goto L410df8;
  #L410df6.  goto L410dfc;
  #L410df8.  v0:= 0I;
  #L410dfa.  goto L410dfe;
  #L410dfc.  v0:= 1I;
  #L410dfe.  return v0;
}
procedure `java.lang.String` `nullSafeClassName`(`java.lang.Object` v0 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeClassName:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L411554.  if v0 == 0 then goto L41156a;
  #L411558.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L41155e.  v0:= temp @kind object;
  #L411560.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L411566.  v0:= temp @kind object;
  #L411568.  goto L41156e;
  #L41156a.  v0:= "null" @kind object;
  #L41156e.  return v0 @kind object;
}
procedure `void` `nullSafeClose`(`java.io.Closeable`[] v3 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeClose:([Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L411adc.  if v3 != 0 then goto L411ae2;
  #L411ae0.  return @kind void;
  #L411ae2.  v0:= length @variable v3;
  #L411ae4.  v1:= 0I;
  #L411ae6.  if v1 >= v0 then goto L411afe;
  #L411aea.  v2:= v3[v1] @kind object;
  #L411aee.  if v2 == 0 then goto L411af8;
  #L411af2.  call `close`(v2) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L411af8.  v1:= v1 + 1;
  #L411afc.  goto L411ae6;
  #L411afe.  return @kind void;
  catch `java.io.IOException` @[L411af2..L411af8] goto L411af8;
}
procedure `boolean` `nullSafeEquals`(`java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L410e10.  v0:= 1I;
  #L410e12.  if v3 != v4 then goto L410e18;
  #L410e16.  return v0;
  #L410e18.  v1:= 0I;
  #L410e1a.  if v3 == 0 then goto L410f8e;
  #L410e1e.  if v4 != 0 then goto L410e26;
  #L410e22.  goto L410f8e;
  #L410e26.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L410e2c.  v2:= temp;
  #L410e2e.  if v2 == 0 then goto L410e34;
  #L410e32.  return v0;
  #L410e34.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L410e3a.  v0:= temp @kind object;
  #L410e3c.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L410e42.  v0:= temp;
  #L410e44.  if v0 == 0 then goto L410f8e;
  #L410e48.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L410e4e.  v0:= temp @kind object;
  #L410e50.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L410e56.  v0:= temp;
  #L410e58.  if v0 == 0 then goto L410f8e;
  #L410e5c.  v0:= instanceof @variable v3 @type ^`java.lang.Object`[] @kind boolean;
  #L410e60.  if v0 == 0 then goto L410e7e;
  #L410e64.  v0:= instanceof @variable v4 @type ^`java.lang.Object`[] @kind boolean;
  #L410e68.  if v0 == 0 then goto L410e7e;
  #L410e6c.  v3:= (`java.lang.Object`[]) v3 @kind object;
  #L410e70.  v4:= (`java.lang.Object`[]) v4 @kind object;
  #L410e74.  call temp:= `equals`(v3, v4) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L410e7a.  v3:= temp;
  #L410e7c.  return v3;
  #L410e7e.  v0:= instanceof @variable v3 @type ^`boolean`[] @kind boolean;
  #L410e82.  if v0 == 0 then goto L410ea0;
  #L410e86.  v0:= instanceof @variable v4 @type ^`boolean`[] @kind boolean;
  #L410e8a.  if v0 == 0 then goto L410ea0;
  #L410e8e.  v3:= (`boolean`[]) v3 @kind object;
  #L410e92.  v4:= (`boolean`[]) v4 @kind object;
  #L410e96.  call temp:= `equals`(v3, v4) @signature `Ljava/util/Arrays;.equals:([Z[Z)Z` @kind static;
  #L410e9c.  v3:= temp;
  #L410e9e.  return v3;
  #L410ea0.  v0:= instanceof @variable v3 @type ^`byte`[] @kind boolean;
  #L410ea4.  if v0 == 0 then goto L410ec2;
  #L410ea8.  v0:= instanceof @variable v4 @type ^`byte`[] @kind boolean;
  #L410eac.  if v0 == 0 then goto L410ec2;
  #L410eb0.  v3:= (`byte`[]) v3 @kind object;
  #L410eb4.  v4:= (`byte`[]) v4 @kind object;
  #L410eb8.  call temp:= `equals`(v3, v4) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L410ebe.  v3:= temp;
  #L410ec0.  return v3;
  #L410ec2.  v0:= instanceof @variable v3 @type ^`char`[] @kind boolean;
  #L410ec6.  if v0 == 0 then goto L410ee4;
  #L410eca.  v0:= instanceof @variable v4 @type ^`char`[] @kind boolean;
  #L410ece.  if v0 == 0 then goto L410ee4;
  #L410ed2.  v3:= (`char`[]) v3 @kind object;
  #L410ed6.  v4:= (`char`[]) v4 @kind object;
  #L410eda.  call temp:= `equals`(v3, v4) @signature `Ljava/util/Arrays;.equals:([C[C)Z` @kind static;
  #L410ee0.  v3:= temp;
  #L410ee2.  return v3;
  #L410ee4.  v0:= instanceof @variable v3 @type ^`double`[] @kind boolean;
  #L410ee8.  if v0 == 0 then goto L410f06;
  #L410eec.  v0:= instanceof @variable v4 @type ^`double`[] @kind boolean;
  #L410ef0.  if v0 == 0 then goto L410f06;
  #L410ef4.  v3:= (`double`[]) v3 @kind object;
  #L410ef8.  v4:= (`double`[]) v4 @kind object;
  #L410efc.  call temp:= `equals`(v3, v4) @signature `Ljava/util/Arrays;.equals:([D[D)Z` @kind static;
  #L410f02.  v3:= temp;
  #L410f04.  return v3;
  #L410f06.  v0:= instanceof @variable v3 @type ^`float`[] @kind boolean;
  #L410f0a.  if v0 == 0 then goto L410f28;
  #L410f0e.  v0:= instanceof @variable v4 @type ^`float`[] @kind boolean;
  #L410f12.  if v0 == 0 then goto L410f28;
  #L410f16.  v3:= (`float`[]) v3 @kind object;
  #L410f1a.  v4:= (`float`[]) v4 @kind object;
  #L410f1e.  call temp:= `equals`(v3, v4) @signature `Ljava/util/Arrays;.equals:([F[F)Z` @kind static;
  #L410f24.  v3:= temp;
  #L410f26.  return v3;
  #L410f28.  v0:= instanceof @variable v3 @type ^`int`[] @kind boolean;
  #L410f2c.  if v0 == 0 then goto L410f4a;
  #L410f30.  v0:= instanceof @variable v4 @type ^`int`[] @kind boolean;
  #L410f34.  if v0 == 0 then goto L410f4a;
  #L410f38.  v3:= (`int`[]) v3 @kind object;
  #L410f3c.  v4:= (`int`[]) v4 @kind object;
  #L410f40.  call temp:= `equals`(v3, v4) @signature `Ljava/util/Arrays;.equals:([I[I)Z` @kind static;
  #L410f46.  v3:= temp;
  #L410f48.  return v3;
  #L410f4a.  v0:= instanceof @variable v3 @type ^`long`[] @kind boolean;
  #L410f4e.  if v0 == 0 then goto L410f6c;
  #L410f52.  v0:= instanceof @variable v4 @type ^`long`[] @kind boolean;
  #L410f56.  if v0 == 0 then goto L410f6c;
  #L410f5a.  v3:= (`long`[]) v3 @kind object;
  #L410f5e.  v4:= (`long`[]) v4 @kind object;
  #L410f62.  call temp:= `equals`(v3, v4) @signature `Ljava/util/Arrays;.equals:([J[J)Z` @kind static;
  #L410f68.  v3:= temp;
  #L410f6a.  return v3;
  #L410f6c.  v0:= instanceof @variable v3 @type ^`short`[] @kind boolean;
  #L410f70.  if v0 == 0 then goto L410f8e;
  #L410f74.  v0:= instanceof @variable v4 @type ^`short`[] @kind boolean;
  #L410f78.  if v0 == 0 then goto L410f8e;
  #L410f7c.  v3:= (`short`[]) v3 @kind object;
  #L410f80.  v4:= (`short`[]) v4 @kind object;
  #L410f84.  call temp:= `equals`(v3, v4) @signature `Ljava/util/Arrays;.equals:([S[S)Z` @kind static;
  #L410f8a.  v3:= temp;
  #L410f8c.  return v3;
  #L410f8e.  return v1;
}
procedure `int` `nullSafeHashCode`(`java.lang.Object` v1 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L411170.  if v1 != 0 then goto L411178;
  #L411174.  v1:= 0I;
  #L411176.  return v1;
  #L411178.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L41117e.  v0:= temp @kind object;
  #L411180.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L411186.  v0:= temp;
  #L411188.  if v0 == 0 then goto L411252;
  #L41118c.  v0:= instanceof @variable v1 @type ^`java.lang.Object`[] @kind boolean;
  #L411190.  if v0 == 0 then goto L4111a2;
  #L411194.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L411198.  call temp:= `nullSafeHashCode`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([Ljava/lang/Object;)I` @kind static;
  #L41119e.  v1:= temp;
  #L4111a0.  return v1;
  #L4111a2.  v0:= instanceof @variable v1 @type ^`boolean`[] @kind boolean;
  #L4111a6.  if v0 == 0 then goto L4111b8;
  #L4111aa.  v1:= (`boolean`[]) v1 @kind object;
  #L4111ae.  call temp:= `nullSafeHashCode`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([Z)I` @kind static;
  #L4111b4.  v1:= temp;
  #L4111b6.  return v1;
  #L4111b8.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L4111bc.  if v0 == 0 then goto L4111ce;
  #L4111c0.  v1:= (`byte`[]) v1 @kind object;
  #L4111c4.  call temp:= `nullSafeHashCode`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([B)I` @kind static;
  #L4111ca.  v1:= temp;
  #L4111cc.  return v1;
  #L4111ce.  v0:= instanceof @variable v1 @type ^`char`[] @kind boolean;
  #L4111d2.  if v0 == 0 then goto L4111e4;
  #L4111d6.  v1:= (`char`[]) v1 @kind object;
  #L4111da.  call temp:= `nullSafeHashCode`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([C)I` @kind static;
  #L4111e0.  v1:= temp;
  #L4111e2.  return v1;
  #L4111e4.  v0:= instanceof @variable v1 @type ^`double`[] @kind boolean;
  #L4111e8.  if v0 == 0 then goto L4111fa;
  #L4111ec.  v1:= (`double`[]) v1 @kind object;
  #L4111f0.  call temp:= `nullSafeHashCode`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([D)I` @kind static;
  #L4111f6.  v1:= temp;
  #L4111f8.  return v1;
  #L4111fa.  v0:= instanceof @variable v1 @type ^`float`[] @kind boolean;
  #L4111fe.  if v0 == 0 then goto L411210;
  #L411202.  v1:= (`float`[]) v1 @kind object;
  #L411206.  call temp:= `nullSafeHashCode`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([F)I` @kind static;
  #L41120c.  v1:= temp;
  #L41120e.  return v1;
  #L411210.  v0:= instanceof @variable v1 @type ^`int`[] @kind boolean;
  #L411214.  if v0 == 0 then goto L411226;
  #L411218.  v1:= (`int`[]) v1 @kind object;
  #L41121c.  call temp:= `nullSafeHashCode`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([I)I` @kind static;
  #L411222.  v1:= temp;
  #L411224.  return v1;
  #L411226.  v0:= instanceof @variable v1 @type ^`long`[] @kind boolean;
  #L41122a.  if v0 == 0 then goto L41123c;
  #L41122e.  v1:= (`long`[]) v1 @kind object;
  #L411232.  call temp:= `nullSafeHashCode`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([J)I` @kind static;
  #L411238.  v1:= temp;
  #L41123a.  return v1;
  #L41123c.  v0:= instanceof @variable v1 @type ^`short`[] @kind boolean;
  #L411240.  if v0 == 0 then goto L411252;
  #L411244.  v1:= (`short`[]) v1 @kind object;
  #L411248.  call temp:= `nullSafeHashCode`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([S)I` @kind static;
  #L41124e.  v1:= temp;
  #L411250.  return v1;
  #L411252.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L411258.  v1:= temp;
  #L41125a.  return v1;
}
procedure `int` `nullSafeHashCode`(`byte`[] v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([B)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41105c.  v0:= 0I;
  #L41105e.  if v4 != 0 then goto L411064;
  #L411062.  return v0;
  #L411064.  v1:= 7I;
  #L411066.  v2:= length @variable v4;
  #L411068.  if v0 >= v2 then goto L41107c;
  #L41106c.  v1:= v1 * 31;
  #L411070.  v3:= v4[v0] @kind byte;
  #L411074.  v1:= v1 + v3 @kind int;
  #L411076.  v0:= v0 + 1;
  #L41107a.  goto L411068;
  #L41107c.  return v1;
}
procedure `int` `nullSafeHashCode`(`char`[] v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([C)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L411090.  v0:= 0I;
  #L411092.  if v4 != 0 then goto L411098;
  #L411096.  return v0;
  #L411098.  v1:= 7I;
  #L41109a.  v2:= length @variable v4;
  #L41109c.  if v0 >= v2 then goto L4110b0;
  #L4110a0.  v1:= v1 * 31;
  #L4110a4.  v3:= v4[v0] @kind char;
  #L4110a8.  v1:= v1 + v3 @kind int;
  #L4110aa.  v0:= v0 + 1;
  #L4110ae.  goto L41109c;
  #L4110b0.  return v1;
}
procedure `int` `nullSafeHashCode`(`double`[] v5 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([D)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4110c4.  v0:= 0I;
  #L4110c6.  if v5 != 0 then goto L4110cc;
  #L4110ca.  return v0;
  #L4110cc.  v1:= 7I;
  #L4110ce.  v2:= length @variable v5;
  #L4110d0.  if v0 >= v2 then goto L4110ec;
  #L4110d4.  v1:= v1 * 31;
  #L4110d8.  v3:= v5[v0] @kind wide;
  #L4110dc.  call temp:= `hashCode`(v3) @signature `Lio/jsonwebtoken/lang/Objects;.hashCode:(D)I` @kind static;
  #L4110e2.  v3:= temp;
  #L4110e4.  v1:= v1 + v3 @kind int;
  #L4110e6.  v0:= v0 + 1;
  #L4110ea.  goto L4110d0;
  #L4110ec.  return v1;
}
procedure `int` `nullSafeHashCode`(`float`[] v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([F)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L411100.  v0:= 0I;
  #L411102.  if v4 != 0 then goto L411108;
  #L411106.  return v0;
  #L411108.  v1:= 7I;
  #L41110a.  v2:= length @variable v4;
  #L41110c.  if v0 >= v2 then goto L411128;
  #L411110.  v1:= v1 * 31;
  #L411114.  v3:= v4[v0];
  #L411118.  call temp:= `hashCode`(v3) @signature `Lio/jsonwebtoken/lang/Objects;.hashCode:(F)I` @kind static;
  #L41111e.  v3:= temp;
  #L411120.  v1:= v1 + v3 @kind int;
  #L411122.  v0:= v0 + 1;
  #L411126.  goto L41110c;
  #L411128.  return v1;
}
procedure `int` `nullSafeHashCode`(`int`[] v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41113c.  v0:= 0I;
  #L41113e.  if v4 != 0 then goto L411144;
  #L411142.  return v0;
  #L411144.  v1:= 7I;
  #L411146.  v2:= length @variable v4;
  #L411148.  if v0 >= v2 then goto L41115c;
  #L41114c.  v1:= v1 * 31;
  #L411150.  v3:= v4[v0];
  #L411154.  v1:= v1 + v3 @kind int;
  #L411156.  v0:= v0 + 1;
  #L41115a.  goto L411148;
  #L41115c.  return v1;
}
procedure `int` `nullSafeHashCode`(`long`[] v5 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4112a8.  v0:= 0I;
  #L4112aa.  if v5 != 0 then goto L4112b0;
  #L4112ae.  return v0;
  #L4112b0.  v1:= 7I;
  #L4112b2.  v2:= length @variable v5;
  #L4112b4.  if v0 >= v2 then goto L4112d0;
  #L4112b8.  v1:= v1 * 31;
  #L4112bc.  v3:= v5[v0] @kind wide;
  #L4112c0.  call temp:= `hashCode`(v3) @signature `Lio/jsonwebtoken/lang/Objects;.hashCode:(J)I` @kind static;
  #L4112c6.  v3:= temp;
  #L4112c8.  v1:= v1 + v3 @kind int;
  #L4112ca.  v0:= v0 + 1;
  #L4112ce.  goto L4112b4;
  #L4112d0.  return v1;
}
procedure `int` `nullSafeHashCode`(`java.lang.Object`[] v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41126c.  v0:= 0I;
  #L41126e.  if v4 != 0 then goto L411274;
  #L411272.  return v0;
  #L411274.  v1:= 7I;
  #L411276.  v2:= length @variable v4;
  #L411278.  if v0 >= v2 then goto L411294;
  #L41127c.  v1:= v1 * 31;
  #L411280.  v3:= v4[v0] @kind object;
  #L411284.  call temp:= `nullSafeHashCode`(v3) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:(Ljava/lang/Object;)I` @kind static;
  #L41128a.  v3:= temp;
  #L41128c.  v1:= v1 + v3 @kind int;
  #L41128e.  v0:= v0 + 1;
  #L411292.  goto L411278;
  #L411294.  return v1;
}
procedure `int` `nullSafeHashCode`(`short`[] v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([S)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4112e4.  v0:= 0I;
  #L4112e6.  if v4 != 0 then goto L4112ec;
  #L4112ea.  return v0;
  #L4112ec.  v1:= 7I;
  #L4112ee.  v2:= length @variable v4;
  #L4112f0.  if v0 >= v2 then goto L411304;
  #L4112f4.  v1:= v1 * 31;
  #L4112f8.  v3:= v4[v0] @kind short;
  #L4112fc.  v1:= v1 + v3 @kind int;
  #L4112fe.  v0:= v0 + 1;
  #L411302.  goto L4112f0;
  #L411304.  return v1;
}
procedure `int` `nullSafeHashCode`(`boolean`[] v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeHashCode:([Z)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L411020.  v0:= 0I;
  #L411022.  if v4 != 0 then goto L411028;
  #L411026.  return v0;
  #L411028.  v1:= 7I;
  #L41102a.  v2:= length @variable v4;
  #L41102c.  if v0 >= v2 then goto L411048;
  #L411030.  v1:= v1 * 31;
  #L411034.  v3:= v4[v0] @kind boolean;
  #L411038.  call temp:= `hashCode`(v3) @signature `Lio/jsonwebtoken/lang/Objects;.hashCode:(Z)I` @kind static;
  #L41103e.  v3:= temp;
  #L411040.  v1:= v1 + v3 @kind int;
  #L411042.  v0:= v0 + 1;
  #L411046.  goto L41102c;
  #L411048.  return v1;
}
procedure `java.lang.String` `nullSafeToString`(`java.lang.Object` v1 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L411848.  if v1 != 0 then goto L411852;
  #L41184c.  v1:= "null" @kind object;
  #L411850.  return v1 @kind object;
  #L411852.  v0:= instanceof @variable v1 @type ^`java.lang.String` @kind boolean;
  #L411856.  if v0 == 0 then goto L411860;
  #L41185a.  v1:= (`java.lang.String`) v1 @kind object;
  #L41185e.  return v1 @kind object;
  #L411860.  v0:= instanceof @variable v1 @type ^`java.lang.Object`[] @kind boolean;
  #L411864.  if v0 == 0 then goto L411876;
  #L411868.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L41186c.  call temp:= `nullSafeToString`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L411872.  v1:= temp @kind object;
  #L411874.  return v1 @kind object;
  #L411876.  v0:= instanceof @variable v1 @type ^`boolean`[] @kind boolean;
  #L41187a.  if v0 == 0 then goto L41188c;
  #L41187e.  v1:= (`boolean`[]) v1 @kind object;
  #L411882.  call temp:= `nullSafeToString`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([Z)Ljava/lang/String;` @kind static;
  #L411888.  v1:= temp @kind object;
  #L41188a.  return v1 @kind object;
  #L41188c.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L411890.  if v0 == 0 then goto L4118a2;
  #L411894.  v1:= (`byte`[]) v1 @kind object;
  #L411898.  call temp:= `nullSafeToString`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([B)Ljava/lang/String;` @kind static;
  #L41189e.  v1:= temp @kind object;
  #L4118a0.  return v1 @kind object;
  #L4118a2.  v0:= instanceof @variable v1 @type ^`char`[] @kind boolean;
  #L4118a6.  if v0 == 0 then goto L4118b8;
  #L4118aa.  v1:= (`char`[]) v1 @kind object;
  #L4118ae.  call temp:= `nullSafeToString`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([C)Ljava/lang/String;` @kind static;
  #L4118b4.  v1:= temp @kind object;
  #L4118b6.  return v1 @kind object;
  #L4118b8.  v0:= instanceof @variable v1 @type ^`double`[] @kind boolean;
  #L4118bc.  if v0 == 0 then goto L4118ce;
  #L4118c0.  v1:= (`double`[]) v1 @kind object;
  #L4118c4.  call temp:= `nullSafeToString`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([D)Ljava/lang/String;` @kind static;
  #L4118ca.  v1:= temp @kind object;
  #L4118cc.  return v1 @kind object;
  #L4118ce.  v0:= instanceof @variable v1 @type ^`float`[] @kind boolean;
  #L4118d2.  if v0 == 0 then goto L4118e4;
  #L4118d6.  v1:= (`float`[]) v1 @kind object;
  #L4118da.  call temp:= `nullSafeToString`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([F)Ljava/lang/String;` @kind static;
  #L4118e0.  v1:= temp @kind object;
  #L4118e2.  return v1 @kind object;
  #L4118e4.  v0:= instanceof @variable v1 @type ^`int`[] @kind boolean;
  #L4118e8.  if v0 == 0 then goto L4118fa;
  #L4118ec.  v1:= (`int`[]) v1 @kind object;
  #L4118f0.  call temp:= `nullSafeToString`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([I)Ljava/lang/String;` @kind static;
  #L4118f6.  v1:= temp @kind object;
  #L4118f8.  return v1 @kind object;
  #L4118fa.  v0:= instanceof @variable v1 @type ^`long`[] @kind boolean;
  #L4118fe.  if v0 == 0 then goto L411910;
  #L411902.  v1:= (`long`[]) v1 @kind object;
  #L411906.  call temp:= `nullSafeToString`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([J)Ljava/lang/String;` @kind static;
  #L41190c.  v1:= temp @kind object;
  #L41190e.  return v1 @kind object;
  #L411910.  v0:= instanceof @variable v1 @type ^`short`[] @kind boolean;
  #L411914.  if v0 == 0 then goto L411926;
  #L411918.  v1:= (`short`[]) v1 @kind object;
  #L41191c.  call temp:= `nullSafeToString`(v1) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([S)Ljava/lang/String;` @kind static;
  #L411922.  v1:= temp @kind object;
  #L411924.  return v1 @kind object;
  #L411926.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L41192c.  v1:= temp @kind object;
  #L41192e.  if v1 == 0 then goto L411934;
  #L411932.  goto L411938;
  #L411934.  v1:= "" @kind object;
  #L411938.  return v1 @kind object;
}
procedure `java.lang.String` `nullSafeToString`(`byte`[] v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4115f4.  if v4 != 0 then goto L4115fe;
  #L4115f8.  v4:= "null" @kind object;
  #L4115fc.  return v4 @kind object;
  #L4115fe.  v0:= length @variable v4;
  #L411600.  if v0 != 0 then goto L41160a;
  #L411604.  v4:= "{}" @kind object;
  #L411608.  return v4 @kind object;
  #L41160a.  v1:= new `java.lang.StringBuilder`;
  #L41160e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L411614.  v2:= 0I;
  #L411616.  if v2 >= v0 then goto L411644;
  #L41161a.  if v2 != 0 then goto L41162a;
  #L41161e.  v3:= "{" @kind object;
  #L411622.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411628.  goto L411634;
  #L41162a.  v3:= ", " @kind object;
  #L41162e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411634.  v3:= v4[v2] @kind byte;
  #L411638.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L41163e.  v2:= v2 + 1;
  #L411642.  goto L411616;
  #L411644.  v4:= "}" @kind object;
  #L411648.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41164e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L411654.  v4:= temp @kind object;
  #L411656.  return v4 @kind object;
}
procedure `java.lang.String` `nullSafeToString`(`char`[] v5 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L411668.  if v5 != 0 then goto L411672;
  #L41166c.  v5:= "null" @kind object;
  #L411670.  return v5 @kind object;
  #L411672.  v0:= length @variable v5;
  #L411674.  if v0 != 0 then goto L41167e;
  #L411678.  v5:= "{}" @kind object;
  #L41167c.  return v5 @kind object;
  #L41167e.  v1:= new `java.lang.StringBuilder`;
  #L411682.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L411688.  v2:= 0I;
  #L41168a.  if v2 >= v0 then goto L4116c8;
  #L41168e.  if v2 != 0 then goto L41169e;
  #L411692.  v3:= "{" @kind object;
  #L411696.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41169c.  goto L4116a8;
  #L41169e.  v3:= ", " @kind object;
  #L4116a2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4116a8.  v3:= "'" @kind object;
  #L4116ac.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4116b2.  v4:= v5[v2] @kind char;
  #L4116b6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4116bc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4116c2.  v2:= v2 + 1;
  #L4116c6.  goto L41168a;
  #L4116c8.  v5:= "}" @kind object;
  #L4116cc.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4116d2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4116d8.  v5:= temp @kind object;
  #L4116da.  return v5 @kind object;
}
procedure `java.lang.String` `nullSafeToString`(`double`[] v5 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([D)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4116ec.  if v5 != 0 then goto L4116f6;
  #L4116f0.  v5:= "null" @kind object;
  #L4116f4.  return v5 @kind object;
  #L4116f6.  v0:= length @variable v5;
  #L4116f8.  if v0 != 0 then goto L411702;
  #L4116fc.  v5:= "{}" @kind object;
  #L411700.  return v5 @kind object;
  #L411702.  v1:= new `java.lang.StringBuilder`;
  #L411706.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41170c.  v2:= 0I;
  #L41170e.  if v2 >= v0 then goto L41173c;
  #L411712.  if v2 != 0 then goto L411722;
  #L411716.  v3:= "{" @kind object;
  #L41171a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411720.  goto L41172c;
  #L411722.  v3:= ", " @kind object;
  #L411726.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41172c.  v3:= v5[v2] @kind wide;
  #L411730.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L411736.  v2:= v2 + 1;
  #L41173a.  goto L41170e;
  #L41173c.  v5:= "}" @kind object;
  #L411740.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411746.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41174c.  v5:= temp @kind object;
  #L41174e.  return v5 @kind object;
}
procedure `java.lang.String` `nullSafeToString`(`float`[] v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([F)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L411760.  if v4 != 0 then goto L41176a;
  #L411764.  v4:= "null" @kind object;
  #L411768.  return v4 @kind object;
  #L41176a.  v0:= length @variable v4;
  #L41176c.  if v0 != 0 then goto L411776;
  #L411770.  v4:= "{}" @kind object;
  #L411774.  return v4 @kind object;
  #L411776.  v1:= new `java.lang.StringBuilder`;
  #L41177a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L411780.  v2:= 0I;
  #L411782.  if v2 >= v0 then goto L4117b0;
  #L411786.  if v2 != 0 then goto L411796;
  #L41178a.  v3:= "{" @kind object;
  #L41178e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411794.  goto L4117a0;
  #L411796.  v3:= ", " @kind object;
  #L41179a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4117a0.  v3:= v4[v2];
  #L4117a4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L4117aa.  v2:= v2 + 1;
  #L4117ae.  goto L411782;
  #L4117b0.  v4:= "}" @kind object;
  #L4117b4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4117ba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4117c0.  v4:= temp @kind object;
  #L4117c2.  return v4 @kind object;
}
procedure `java.lang.String` `nullSafeToString`(`int`[] v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4117d4.  if v4 != 0 then goto L4117de;
  #L4117d8.  v4:= "null" @kind object;
  #L4117dc.  return v4 @kind object;
  #L4117de.  v0:= length @variable v4;
  #L4117e0.  if v0 != 0 then goto L4117ea;
  #L4117e4.  v4:= "{}" @kind object;
  #L4117e8.  return v4 @kind object;
  #L4117ea.  v1:= new `java.lang.StringBuilder`;
  #L4117ee.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4117f4.  v2:= 0I;
  #L4117f6.  if v2 >= v0 then goto L411824;
  #L4117fa.  if v2 != 0 then goto L41180a;
  #L4117fe.  v3:= "{" @kind object;
  #L411802.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411808.  goto L411814;
  #L41180a.  v3:= ", " @kind object;
  #L41180e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411814.  v3:= v4[v2];
  #L411818.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L41181e.  v2:= v2 + 1;
  #L411822.  goto L4117f6;
  #L411824.  v4:= "}" @kind object;
  #L411828.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41182e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L411834.  v4:= temp @kind object;
  #L411836.  return v4 @kind object;
}
procedure `java.lang.String` `nullSafeToString`(`long`[] v5 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4119c8.  if v5 != 0 then goto L4119d2;
  #L4119cc.  v5:= "null" @kind object;
  #L4119d0.  return v5 @kind object;
  #L4119d2.  v0:= length @variable v5;
  #L4119d4.  if v0 != 0 then goto L4119de;
  #L4119d8.  v5:= "{}" @kind object;
  #L4119dc.  return v5 @kind object;
  #L4119de.  v1:= new `java.lang.StringBuilder`;
  #L4119e2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4119e8.  v2:= 0I;
  #L4119ea.  if v2 >= v0 then goto L411a18;
  #L4119ee.  if v2 != 0 then goto L4119fe;
  #L4119f2.  v3:= "{" @kind object;
  #L4119f6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4119fc.  goto L411a08;
  #L4119fe.  v3:= ", " @kind object;
  #L411a02.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411a08.  v3:= v5[v2] @kind wide;
  #L411a0c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L411a12.  v2:= v2 + 1;
  #L411a16.  goto L4119ea;
  #L411a18.  v5:= "}" @kind object;
  #L411a1c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411a22.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L411a28.  v5:= temp @kind object;
  #L411a2a.  return v5 @kind object;
}
procedure `java.lang.String` `nullSafeToString`(`java.lang.Object`[] v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41194c.  if v4 != 0 then goto L411956;
  #L411950.  v4:= "null" @kind object;
  #L411954.  return v4 @kind object;
  #L411956.  v0:= length @variable v4;
  #L411958.  if v0 != 0 then goto L411962;
  #L41195c.  v4:= "{}" @kind object;
  #L411960.  return v4 @kind object;
  #L411962.  v1:= new `java.lang.StringBuilder`;
  #L411966.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41196c.  v2:= 0I;
  #L41196e.  if v2 >= v0 then goto L4119a4;
  #L411972.  if v2 != 0 then goto L411982;
  #L411976.  v3:= "{" @kind object;
  #L41197a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411980.  goto L41198c;
  #L411982.  v3:= ", " @kind object;
  #L411986.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41198c.  v3:= v4[v2] @kind object;
  #L411990.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L411996.  v3:= temp @kind object;
  #L411998.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41199e.  v2:= v2 + 1;
  #L4119a2.  goto L41196e;
  #L4119a4.  v4:= "}" @kind object;
  #L4119a8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4119ae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4119b4.  v4:= temp @kind object;
  #L4119b6.  return v4 @kind object;
}
procedure `java.lang.String` `nullSafeToString`(`short`[] v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([S)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L411a3c.  if v4 != 0 then goto L411a46;
  #L411a40.  v4:= "null" @kind object;
  #L411a44.  return v4 @kind object;
  #L411a46.  v0:= length @variable v4;
  #L411a48.  if v0 != 0 then goto L411a52;
  #L411a4c.  v4:= "{}" @kind object;
  #L411a50.  return v4 @kind object;
  #L411a52.  v1:= new `java.lang.StringBuilder`;
  #L411a56.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L411a5c.  v2:= 0I;
  #L411a5e.  if v2 >= v0 then goto L411a8c;
  #L411a62.  if v2 != 0 then goto L411a72;
  #L411a66.  v3:= "{" @kind object;
  #L411a6a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411a70.  goto L411a7c;
  #L411a72.  v3:= ", " @kind object;
  #L411a76.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411a7c.  v3:= v4[v2] @kind short;
  #L411a80.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L411a86.  v2:= v2 + 1;
  #L411a8a.  goto L411a5e;
  #L411a8c.  v4:= "}" @kind object;
  #L411a90.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411a96.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L411a9c.  v4:= temp @kind object;
  #L411a9e.  return v4 @kind object;
}
procedure `java.lang.String` `nullSafeToString`(`boolean`[] v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeToString:([Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L411580.  if v4 != 0 then goto L41158a;
  #L411584.  v4:= "null" @kind object;
  #L411588.  return v4 @kind object;
  #L41158a.  v0:= length @variable v4;
  #L41158c.  if v0 != 0 then goto L411596;
  #L411590.  v4:= "{}" @kind object;
  #L411594.  return v4 @kind object;
  #L411596.  v1:= new `java.lang.StringBuilder`;
  #L41159a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4115a0.  v2:= 0I;
  #L4115a2.  if v2 >= v0 then goto L4115d0;
  #L4115a6.  if v2 != 0 then goto L4115b6;
  #L4115aa.  v3:= "{" @kind object;
  #L4115ae.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4115b4.  goto L4115c0;
  #L4115b6.  v3:= ", " @kind object;
  #L4115ba.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4115c0.  v3:= v4[v2] @kind boolean;
  #L4115c4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L4115ca.  v2:= v2 + 1;
  #L4115ce.  goto L4115a2;
  #L4115d0.  v4:= "}" @kind object;
  #L4115d4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4115da.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4115e0.  v4:= temp @kind object;
  #L4115e2.  return v4 @kind object;
}
procedure `java.lang.Object`[] `toObjectArray`(`java.lang.Object` v4 @kind object) @signature `Lio/jsonwebtoken/lang/Objects;.toObjectArray:(Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4113fc.  v0:= instanceof @variable v4 @type ^`java.lang.Object`[] @kind boolean;
  #L411400.  if v0 == 0 then goto L41140a;
  #L411404.  v4:= (`java.lang.Object`[]) v4 @kind object;
  #L411408.  return v4 @kind object;
  #L41140a.  v0:= 0I;
  #L41140c.  if v4 != 0 then goto L411416;
  #L411410.  v4:= new `java.lang.Object`[v0];
  #L411414.  return v4 @kind object;
  #L411416.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L41141c.  v1:= temp @kind object;
  #L41141e.  call temp:= `isArray`(v1) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L411424.  v1:= temp;
  #L411426.  if v1 == 0 then goto L411470;
  #L41142a.  call temp:= `getLength`(v4) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L411430.  v1:= temp;
  #L411432.  if v1 != 0 then goto L41143c;
  #L411436.  v4:= new `java.lang.Object`[v0];
  #L41143a.  return v4 @kind object;
  #L41143c.  call temp:= `get`(v4, v0) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L411442.  v2:= temp @kind object;
  #L411444.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L41144a.  v2:= temp @kind object;
  #L41144c.  call temp:= `newInstance`(v2, v1) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L411452.  v2:= temp @kind object;
  #L411454.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L411458.  if v0 >= v1 then goto L41146e;
  #L41145c.  call temp:= `get`(v4, v0) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L411462.  v3:= temp @kind object;
  #L411464.  v2[v0]:= v3 @kind object;
  #L411468.  v0:= v0 + 1;
  #L41146c.  goto L411458;
  #L41146e.  return v2 @kind object;
  #L411470.  v0:= new `java.lang.IllegalArgumentException`;
  #L411474.  v1:= new `java.lang.StringBuilder`;
  #L411478.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41147e.  v2:= "Source is not an array: " @kind object;
  #L411482.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L411488.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41148e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L411494.  v4:= temp @kind object;
  #L411496.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41149c.  throw v0;
}
