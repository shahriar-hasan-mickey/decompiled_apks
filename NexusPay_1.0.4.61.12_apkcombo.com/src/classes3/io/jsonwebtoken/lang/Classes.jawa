record `io.jsonwebtoken.lang.Classes` @kind class @AccessFlag PUBLIC_FINAL {
}
global `io.jsonwebtoken.lang.Classes$d` `@@io.jsonwebtoken.lang.Classes.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `io.jsonwebtoken.lang.Classes$d` `@@io.jsonwebtoken.lang.Classes.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `io.jsonwebtoken.lang.Classes$d` `@@io.jsonwebtoken.lang.Classes.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/jsonwebtoken/lang/Classes;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4106c4.  v0:= new `io.jsonwebtoken.lang.Classes$a`;
  #L4106c8.  call `<init>`(v0) @signature `Lio/jsonwebtoken/lang/Classes$a;.<init>:()V` @kind direct;
  #L4106ce.  `@@io.jsonwebtoken.lang.Classes.a` @type ^`io.jsonwebtoken.lang.Classes$d` := v0 @kind object;
  #L4106d2.  v0:= new `io.jsonwebtoken.lang.Classes$b`;
  #L4106d6.  call `<init>`(v0) @signature `Lio/jsonwebtoken/lang/Classes$b;.<init>:()V` @kind direct;
  #L4106dc.  `@@io.jsonwebtoken.lang.Classes.b` @type ^`io.jsonwebtoken.lang.Classes$d` := v0 @kind object;
  #L4106e0.  v0:= new `io.jsonwebtoken.lang.Classes$c`;
  #L4106e4.  call `<init>`(v0) @signature `Lio/jsonwebtoken/lang/Classes$c;.<init>:()V` @kind direct;
  #L4106ea.  `@@io.jsonwebtoken.lang.Classes.c` @type ^`io.jsonwebtoken.lang.Classes$d` := v0 @kind object;
  #L4106ee.  return @kind void;
}
procedure `void` `<init>`(`io.jsonwebtoken.lang.Classes` v0 @kind this) @signature `Lio/jsonwebtoken/lang/Classes;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L410700.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L410706.  return @kind void;
}
procedure `java.lang.Class` `forName`(`java.lang.String` v2 @kind object) @signature `Lio/jsonwebtoken/lang/Classes;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L410468.  v0:= `@@io.jsonwebtoken.lang.Classes.a` @type ^`io.jsonwebtoken.lang.Classes$d` @kind object;
  #L41046c.  call temp:= `b`(v0, v2) @signature `Lio/jsonwebtoken/lang/Classes$d;.b:(Ljava/lang/String;)Ljava/lang/Class;` @kind interface;
  #L410472.  v0:= temp @kind object;
  #L410474.  if v0 != 0 then goto L410484;
  #L410478.  v0:= `@@io.jsonwebtoken.lang.Classes.b` @type ^`io.jsonwebtoken.lang.Classes$d` @kind object;
  #L41047c.  call temp:= `b`(v0, v2) @signature `Lio/jsonwebtoken/lang/Classes$d;.b:(Ljava/lang/String;)Ljava/lang/Class;` @kind interface;
  #L410482.  v0:= temp @kind object;
  #L410484.  if v0 != 0 then goto L410494;
  #L410488.  v0:= `@@io.jsonwebtoken.lang.Classes.c` @type ^`io.jsonwebtoken.lang.Classes$d` @kind object;
  #L41048c.  call temp:= `b`(v0, v2) @signature `Lio/jsonwebtoken/lang/Classes$d;.b:(Ljava/lang/String;)Ljava/lang/Class;` @kind interface;
  #L410492.  v0:= temp @kind object;
  #L410494.  if v0 != 0 then goto L410506;
  #L410498.  v0:= new `java.lang.StringBuilder`;
  #L41049c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4104a2.  v1:= "Unable to load class named [" @kind object;
  #L4104a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4104ac.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4104b2.  v1:= "] from the thread context, current, or system/application ClassLoaders.  All heuristics have been exhausted.  Class could not be found." @kind object;
  #L4104b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4104bc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4104c2.  v0:= temp @kind object;
  #L4104c4.  if v2 == 0 then goto L4104fa;
  #L4104c8.  v1:= "com.stormpath.sdk.impl" @kind object;
  #L4104cc.  call temp:= `startsWith`(v2, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4104d2.  v2:= temp;
  #L4104d4.  if v2 == 0 then goto L4104fa;
  #L4104d8.  v2:= new `java.lang.StringBuilder`;
  #L4104dc.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4104e2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4104e8.  v0:= "  Have you remembered to include the stormpath-sdk-impl .jar in your runtime classpath?" @kind object;
  #L4104ec.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4104f2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4104f8.  v0:= temp @kind object;
  #L4104fa.  v2:= new `io.jsonwebtoken.lang.UnknownClassException`;
  #L4104fe.  call `<init>`(v2, v0) @signature `Lio/jsonwebtoken/lang/UnknownClassException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L410504.  throw v2;
  #L410506.  return v0 @kind object;
}
procedure `java.lang.reflect.Constructor` `getConstructor`(`java.lang.Class` v0 @kind object, `java.lang.Class`[] v1 @kind object) @signature `Lio/jsonwebtoken/lang/Classes;.getConstructor:(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L41068c.  call temp:= `getConstructor`(v0, v1) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L410692.  v0:= temp @kind object;
  #L410694.  return v0 @kind object;
  #L410696.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L410698.  v1:= new `java.lang.IllegalStateException`;
  #L41069c.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L4106a2.  throw v1;
  catch `java.lang.NoSuchMethodException` @[L41068c..L410694] goto L410696;
}
procedure `java.io.InputStream` `getResourceAsStream`(`java.lang.String` v1 @kind object) @signature `Lio/jsonwebtoken/lang/Classes;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L410428.  v0:= `@@io.jsonwebtoken.lang.Classes.a` @type ^`io.jsonwebtoken.lang.Classes$d` @kind object;
  #L41042c.  call temp:= `a`(v0, v1) @signature `Lio/jsonwebtoken/lang/Classes$d;.a:(Ljava/lang/String;)Ljava/io/InputStream;` @kind interface;
  #L410432.  v0:= temp @kind object;
  #L410434.  if v0 != 0 then goto L410444;
  #L410438.  v0:= `@@io.jsonwebtoken.lang.Classes.b` @type ^`io.jsonwebtoken.lang.Classes$d` @kind object;
  #L41043c.  call temp:= `a`(v0, v1) @signature `Lio/jsonwebtoken/lang/Classes$d;.a:(Ljava/lang/String;)Ljava/io/InputStream;` @kind interface;
  #L410442.  v0:= temp @kind object;
  #L410444.  if v0 != 0 then goto L410454;
  #L410448.  v0:= `@@io.jsonwebtoken.lang.Classes.c` @type ^`io.jsonwebtoken.lang.Classes$d` @kind object;
  #L41044c.  call temp:= `a`(v0, v1) @signature `Lio/jsonwebtoken/lang/Classes$d;.a:(Ljava/lang/String;)Ljava/io/InputStream;` @kind interface;
  #L410452.  v0:= temp @kind object;
  #L410454.  return v0 @kind object;
}
procedure `java.lang.Object` `instantiate`(`java.lang.reflect.Constructor` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lio/jsonwebtoken/lang/Classes;.instantiate:(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L410518.  call temp:= `newInstance`(v2, v3) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L41051e.  v2:= temp @kind object;
  #L410520.  return v2 @kind object;
  #L410522.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L410524.  v0:= new `java.lang.StringBuilder`;
  #L410528.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41052e.  v1:= "Unable to instantiate instance with constructor [" @kind object;
  #L410532.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410538.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41053e.  v2:= "]" @kind object;
  #L410542.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410548.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41054e.  v2:= temp @kind object;
  #L410550.  v0:= new `io.jsonwebtoken.lang.InstantiationException`;
  #L410554.  call `<init>`(v0, v2, v3) @signature `Lio/jsonwebtoken/lang/InstantiationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L41055a.  throw v0;
  catch `java.lang.Exception` @[L410518..L410520] goto L410522;
}
procedure `boolean` `isAvailable`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/lang/Classes;.isAvailable:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4103f8.  call temp:= `forName`(v0) @signature `Lio/jsonwebtoken/lang/Classes;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L4103fe.  v0:= 1I;
  #L410400.  return v0;
  #L410402.  v0:= 0I;
  #L410404.  return v0;
  catch `io.jsonwebtoken.lang.UnknownClassException` @[L4103f8..L4103fe] goto L410402;
}
procedure `java.lang.Object` `newInstance`(`java.lang.Class` v4 @kind object) @signature `Lio/jsonwebtoken/lang/Classes;.newInstance:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41057c.  if v4 == 0 then goto L4105cc;
  #L410580.  call temp:= `newInstance`(v4) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L410586.  v4:= temp @kind object;
  #L410588.  return v4 @kind object;
  #L41058a.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L41058c.  v1:= new `io.jsonwebtoken.lang.InstantiationException`;
  #L410590.  v2:= new `java.lang.StringBuilder`;
  #L410594.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41059a.  v3:= "Unable to instantiate class [" @kind object;
  #L41059e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4105a4.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L4105aa.  v4:= temp @kind object;
  #L4105ac.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4105b2.  v4:= "]" @kind object;
  #L4105b6.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4105bc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4105c2.  v4:= temp @kind object;
  #L4105c4.  call `<init>`(v1, v4, v0) @signature `Lio/jsonwebtoken/lang/InstantiationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L4105ca.  throw v1;
  #L4105cc.  v4:= new `java.lang.IllegalArgumentException`;
  #L4105d0.  v0:= "Class method parameter cannot be null." @kind object;
  #L4105d4.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4105da.  throw v4;
  catch `java.lang.Exception` @[L410580..L410588] goto L41058a;
}
procedure `java.lang.Object` `newInstance`(`java.lang.Class` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lio/jsonwebtoken/lang/Classes;.newInstance:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4105fc.  v0:= length @variable v4;
  #L4105fe.  v0:= new `java.lang.Class`[v0];
  #L410602.  v1:= 0I;
  #L410604.  v2:= length @variable v4;
  #L410606.  if v1 >= v2 then goto L410620;
  #L41060a.  v2:= v4[v1] @kind object;
  #L41060e.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L410614.  v2:= temp @kind object;
  #L410616.  v0[v1]:= v2 @kind object;
  #L41061a.  v1:= v1 + 1;
  #L41061e.  goto L410604;
  #L410620.  call temp:= `getConstructor`(v3, v0) @signature `Lio/jsonwebtoken/lang/Classes;.getConstructor:(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind static;
  #L410626.  v3:= temp @kind object;
  #L410628.  call temp:= `instantiate`(v3, v4) @signature `Lio/jsonwebtoken/lang/Classes;.instantiate:(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L41062e.  v3:= temp @kind object;
  #L410630.  return v3 @kind object;
}
procedure `java.lang.Object` `newInstance`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/lang/Classes;.newInstance:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L410644.  call temp:= `forName`(v0) @signature `Lio/jsonwebtoken/lang/Classes;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L41064a.  v0:= temp @kind object;
  #L41064c.  call temp:= `newInstance`(v0) @signature `Lio/jsonwebtoken/lang/Classes;.newInstance:(Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L410652.  v0:= temp @kind object;
  #L410654.  return v0 @kind object;
}
procedure `java.lang.Object` `newInstance`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lio/jsonwebtoken/lang/Classes;.newInstance:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L410668.  call temp:= `forName`(v0) @signature `Lio/jsonwebtoken/lang/Classes;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L41066e.  v0:= temp @kind object;
  #L410670.  call temp:= `newInstance`(v0, v1) @signature `Lio/jsonwebtoken/lang/Classes;.newInstance:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L410676.  v0:= temp @kind object;
  #L410678.  return v0 @kind object;
}
