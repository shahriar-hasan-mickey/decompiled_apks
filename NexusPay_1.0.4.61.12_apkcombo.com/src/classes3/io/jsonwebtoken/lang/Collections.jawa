record `io.jsonwebtoken.lang.Collections` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<clinit>`() @signature `Lio/jsonwebtoken/lang/Collections;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L410b7c.  return @kind void;
}
procedure `void` `<init>`(`io.jsonwebtoken.lang.Collections` v0 @kind this) @signature `Lio/jsonwebtoken/lang/Collections;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L410b90.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L410b96.  return @kind void;
}
procedure `java.util.List` `arrayToList`(`java.lang.Object` v0 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.arrayToList:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L410b58.  call temp:= `toObjectArray`(v0) @signature `Lio/jsonwebtoken/lang/Objects;.toObjectArray:(Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L410b5e.  v0:= temp @kind object;
  #L410b60.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L410b66.  v0:= temp @kind object;
  #L410b68.  return v0 @kind object;
}
procedure `boolean` `contains`(`java.util.Enumeration` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.contains:(Ljava/util/Enumeration;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L410794.  if v1 == 0 then goto L4107bc;
  #L410798.  call temp:= `hasMoreElements`(v1) @signature `Ljava/util/Enumeration;.hasMoreElements:()Z` @kind interface;
  #L41079e.  v0:= temp;
  #L4107a0.  if v0 == 0 then goto L4107bc;
  #L4107a4.  call temp:= `nextElement`(v1) @signature `Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;` @kind interface;
  #L4107aa.  v0:= temp @kind object;
  #L4107ac.  call temp:= `nullSafeEquals`(v0, v2) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4107b2.  v0:= temp;
  #L4107b4.  if v0 == 0 then goto L410798;
  #L4107b8.  v1:= 1I;
  #L4107ba.  return v1;
  #L4107bc.  v1:= 0I;
  #L4107be.  return v1;
}
procedure `boolean` `contains`(`java.util.Iterator` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.contains:(Ljava/util/Iterator;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4107d0.  if v1 == 0 then goto L4107f8;
  #L4107d4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4107da.  v0:= temp;
  #L4107dc.  if v0 == 0 then goto L4107f8;
  #L4107e0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4107e6.  v0:= temp @kind object;
  #L4107e8.  call temp:= `nullSafeEquals`(v0, v2) @signature `Lio/jsonwebtoken/lang/Objects;.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4107ee.  v0:= temp;
  #L4107f0.  if v0 == 0 then goto L4107d4;
  #L4107f4.  v1:= 1I;
  #L4107f6.  return v1;
  #L4107f8.  v1:= 0I;
  #L4107fa.  return v1;
}
procedure `boolean` `containsAny`(`java.util.Collection` v2 @kind object, `java.util.Collection` v3 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.containsAny:(Ljava/util/Collection;Ljava/util/Collection;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41080c.  call temp:= `isEmpty`(v2) @signature `Lio/jsonwebtoken/lang/Collections;.isEmpty:(Ljava/util/Collection;)Z` @kind static;
  #L410812.  v0:= temp;
  #L410814.  v1:= 0I;
  #L410816.  if v0 != 0 then goto L410854;
  #L41081a.  call temp:= `isEmpty`(v3) @signature `Lio/jsonwebtoken/lang/Collections;.isEmpty:(Ljava/util/Collection;)Z` @kind static;
  #L410820.  v0:= temp;
  #L410822.  if v0 == 0 then goto L410828;
  #L410826.  goto L410854;
  #L410828.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L41082e.  v3:= temp @kind object;
  #L410830.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L410836.  v0:= temp;
  #L410838.  if v0 == 0 then goto L410854;
  #L41083c.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L410842.  v0:= temp @kind object;
  #L410844.  call temp:= `contains`(v2, v0) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L41084a.  v0:= temp;
  #L41084c.  if v0 == 0 then goto L410830;
  #L410850.  v2:= 1I;
  #L410852.  return v2;
  #L410854.  return v1;
}
procedure `boolean` `containsInstance`(`java.util.Collection` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.containsInstance:(Ljava/util/Collection;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L410868.  if v1 == 0 then goto L410890;
  #L41086c.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L410872.  v1:= temp @kind object;
  #L410874.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L41087a.  v0:= temp;
  #L41087c.  if v0 == 0 then goto L410890;
  #L410880.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L410886.  v0:= temp @kind object;
  #L410888.  if v0 != v2 then goto L410874;
  #L41088c.  v1:= 1I;
  #L41088e.  return v1;
  #L410890.  v1:= 0I;
  #L410892.  return v1;
}
procedure `java.lang.Class` `findCommonElementType`(`java.util.Collection` v3 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.findCommonElementType:(Ljava/util/Collection;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L410998.  call temp:= `isEmpty`(v3) @signature `Lio/jsonwebtoken/lang/Collections;.isEmpty:(Ljava/util/Collection;)Z` @kind static;
  #L41099e.  v0:= temp;
  #L4109a0.  v1:= 0I;
  #L4109a2.  if v0 == 0 then goto L4109a8;
  #L4109a6.  return v1 @kind object;
  #L4109a8.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4109ae.  v3:= temp @kind object;
  #L4109b0.  v0:= v1 @kind object;
  #L4109b2.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4109b8.  v2:= temp;
  #L4109ba.  if v2 == 0 then goto L4109e6;
  #L4109be.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4109c4.  v2:= temp @kind object;
  #L4109c6.  if v2 == 0 then goto L4109b2;
  #L4109ca.  if v0 != 0 then goto L4109d8;
  #L4109ce.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4109d4.  v0:= temp @kind object;
  #L4109d6.  goto L4109b2;
  #L4109d8.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4109de.  v2:= temp @kind object;
  #L4109e0.  if v0 == v2 then goto L4109b2;
  #L4109e4.  return v1 @kind object;
  #L4109e6.  return v0 @kind object;
}
procedure `java.lang.Object` `findFirstMatch`(`java.util.Collection` v3 @kind object, `java.util.Collection` v4 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.findFirstMatch:(Ljava/util/Collection;Ljava/util/Collection;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4109f8.  call temp:= `isEmpty`(v3) @signature `Lio/jsonwebtoken/lang/Collections;.isEmpty:(Ljava/util/Collection;)Z` @kind static;
  #L4109fe.  v0:= temp;
  #L410a00.  v1:= 0I;
  #L410a02.  if v0 != 0 then goto L410a3e;
  #L410a06.  call temp:= `isEmpty`(v4) @signature `Lio/jsonwebtoken/lang/Collections;.isEmpty:(Ljava/util/Collection;)Z` @kind static;
  #L410a0c.  v0:= temp;
  #L410a0e.  if v0 == 0 then goto L410a14;
  #L410a12.  goto L410a3e;
  #L410a14.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L410a1a.  v4:= temp @kind object;
  #L410a1c.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L410a22.  v0:= temp;
  #L410a24.  if v0 == 0 then goto L410a3e;
  #L410a28.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L410a2e.  v0:= temp @kind object;
  #L410a30.  call temp:= `contains`(v3, v0) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L410a36.  v2:= temp;
  #L410a38.  if v2 == 0 then goto L410a1c;
  #L410a3c.  return v0 @kind object;
  #L410a3e.  return v1 @kind object;
}
procedure `java.lang.Object` `findValueOfType`(`java.util.Collection` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.findValueOfType:(Ljava/util/Collection;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L410a50.  call temp:= `isEmpty`(v4) @signature `Lio/jsonwebtoken/lang/Collections;.isEmpty:(Ljava/util/Collection;)Z` @kind static;
  #L410a56.  v0:= temp;
  #L410a58.  v1:= 0I;
  #L410a5a.  if v0 == 0 then goto L410a60;
  #L410a5e.  return v1 @kind object;
  #L410a60.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L410a66.  v4:= temp @kind object;
  #L410a68.  v0:= v1 @kind object;
  #L410a6a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L410a70.  v2:= temp;
  #L410a72.  if v2 == 0 then goto L410a98;
  #L410a76.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L410a7c.  v2:= temp @kind object;
  #L410a7e.  if v5 == 0 then goto L410a8e;
  #L410a82.  call temp:= `isInstance`(v5, v2) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L410a88.  v3:= temp;
  #L410a8a.  if v3 == 0 then goto L410a6a;
  #L410a8e.  if v0 == 0 then goto L410a94;
  #L410a92.  return v1 @kind object;
  #L410a94.  v0:= v2 @kind object;
  #L410a96.  goto L410a6a;
  #L410a98.  return v0 @kind object;
}
procedure `java.lang.Object` `findValueOfType`(`java.util.Collection` v4 @kind object, `java.lang.Class`[] v5 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.findValueOfType:(Ljava/util/Collection;[Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L410aac.  call temp:= `isEmpty`(v4) @signature `Lio/jsonwebtoken/lang/Collections;.isEmpty:(Ljava/util/Collection;)Z` @kind static;
  #L410ab2.  v0:= temp;
  #L410ab4.  v1:= 0I;
  #L410ab6.  if v0 != 0 then goto L410ae8;
  #L410aba.  call temp:= `isEmpty`(v5) @signature `Lio/jsonwebtoken/lang/Objects;.isEmpty:([Ljava/lang/Object;)Z` @kind static;
  #L410ac0.  v0:= temp;
  #L410ac2.  if v0 == 0 then goto L410ac8;
  #L410ac6.  goto L410ae8;
  #L410ac8.  v0:= length @variable v5;
  #L410aca.  v2:= 0I;
  #L410acc.  if v2 >= v0 then goto L410ae8;
  #L410ad0.  v3:= v5[v2] @kind object;
  #L410ad4.  call temp:= `findValueOfType`(v4, v3) @signature `Lio/jsonwebtoken/lang/Collections;.findValueOfType:(Ljava/util/Collection;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L410ada.  v3:= temp @kind object;
  #L410adc.  if v3 == 0 then goto L410ae2;
  #L410ae0.  return v3 @kind object;
  #L410ae2.  v2:= v2 + 1;
  #L410ae6.  goto L410acc;
  #L410ae8.  return v1 @kind object;
}
procedure `boolean` `hasUniqueObject`(`java.util.Collection` v5 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.hasUniqueObject:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4108a4.  call temp:= `isEmpty`(v5) @signature `Lio/jsonwebtoken/lang/Collections;.isEmpty:(Ljava/util/Collection;)Z` @kind static;
  #L4108aa.  v0:= temp;
  #L4108ac.  v1:= 0I;
  #L4108ae.  if v0 == 0 then goto L4108b4;
  #L4108b2.  return v1;
  #L4108b4.  v0:= 0I;
  #L4108b6.  call temp:= `iterator`(v5) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4108bc.  v5:= temp @kind object;
  #L4108be.  v2:= 0I;
  #L4108c0.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4108c6.  v3:= temp;
  #L4108c8.  v4:= 1I;
  #L4108ca.  if v3 == 0 then goto L4108e6;
  #L4108ce.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4108d4.  v3:= temp @kind object;
  #L4108d6.  if v2 != 0 then goto L4108e0;
  #L4108da.  v0:= v3 @kind object;
  #L4108dc.  v2:= 1I;
  #L4108de.  goto L4108c0;
  #L4108e0.  if v0 == v3 then goto L4108c0;
  #L4108e4.  return v1;
  #L4108e6.  return v4;
}
procedure `boolean` `isEmpty`(`java.util.Collection` v0 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.isEmpty:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4108f8.  if v0 == 0 then goto L41090e;
  #L4108fc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L410902.  v0:= temp;
  #L410904.  if v0 == 0 then goto L41090a;
  #L410908.  goto L41090e;
  #L41090a.  v0:= 0I;
  #L41090c.  goto L410910;
  #L41090e.  v0:= 1I;
  #L410910.  return v0;
}
procedure `boolean` `isEmpty`(`java.util.Map` v0 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.isEmpty:(Ljava/util/Map;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L410924.  if v0 == 0 then goto L41093a;
  #L410928.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L41092e.  v0:= temp;
  #L410930.  if v0 == 0 then goto L410936;
  #L410934.  goto L41093a;
  #L410936.  v0:= 0I;
  #L410938.  goto L41093c;
  #L41093a.  v0:= 1I;
  #L41093c.  return v0;
}
procedure `void` `mergeArrayIntoCollection`(`java.lang.Object` v3 @kind object, `java.util.Collection` v4 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.mergeArrayIntoCollection:(Ljava/lang/Object;Ljava/util/Collection;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L410ba8.  if v4 == 0 then goto L410bce;
  #L410bac.  call temp:= `toObjectArray`(v3) @signature `Lio/jsonwebtoken/lang/Objects;.toObjectArray:(Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L410bb2.  v3:= temp @kind object;
  #L410bb4.  v0:= length @variable v3;
  #L410bb6.  v1:= 0I;
  #L410bb8.  if v1 >= v0 then goto L410bcc;
  #L410bbc.  v2:= v3[v1] @kind object;
  #L410bc0.  call temp:= `add`(v4, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L410bc6.  v1:= v1 + 1;
  #L410bca.  goto L410bb8;
  #L410bcc.  return @kind void;
  #L410bce.  v3:= new `java.lang.IllegalArgumentException`;
  #L410bd2.  v4:= "Collection must not be null" @kind object;
  #L410bd6.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L410bdc.  throw v3;
}
procedure `void` `mergePropertiesIntoMap`(`java.util.Properties` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.mergePropertiesIntoMap:(Ljava/util/Properties;Ljava/util/Map;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L410bf0.  if v4 == 0 then goto L410c36;
  #L410bf4.  if v3 == 0 then goto L410c34;
  #L410bf8.  call temp:= `propertyNames`(v3) @signature `Ljava/util/Properties;.propertyNames:()Ljava/util/Enumeration;` @kind virtual;
  #L410bfe.  v0:= temp @kind object;
  #L410c00.  call temp:= `hasMoreElements`(v0) @signature `Ljava/util/Enumeration;.hasMoreElements:()Z` @kind interface;
  #L410c06.  v1:= temp;
  #L410c08.  if v1 == 0 then goto L410c34;
  #L410c0c.  call temp:= `nextElement`(v0) @signature `Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;` @kind interface;
  #L410c12.  v1:= temp @kind object;
  #L410c14.  v1:= (`java.lang.String`) v1 @kind object;
  #L410c18.  call temp:= `getProperty`(v3, v1) @signature `Ljava/util/Properties;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L410c1e.  v2:= temp @kind object;
  #L410c20.  if v2 != 0 then goto L410c2c;
  #L410c24.  call temp:= `get`(v3, v1) @signature `Ljava/util/Properties;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L410c2a.  v2:= temp @kind object;
  #L410c2c.  call temp:= `put`(v4, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410c32.  goto L410c00;
  #L410c34.  return @kind void;
  #L410c36.  v3:= new `java.lang.IllegalArgumentException`;
  #L410c3a.  v4:= "Map must not be null" @kind object;
  #L410c3e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L410c44.  throw v3;
}
procedure `int` `size`(`java.util.Collection` v0 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.size:(Ljava/util/Collection;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L410950.  if v0 != 0 then goto L410958;
  #L410954.  v0:= 0I;
  #L410956.  goto L410960;
  #L410958.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L41095e.  v0:= temp;
  #L410960.  return v0;
}
procedure `int` `size`(`java.util.Map` v0 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.size:(Ljava/util/Map;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L410974.  if v0 != 0 then goto L41097c;
  #L410978.  v0:= 0I;
  #L41097a.  goto L410984;
  #L41097c.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L410982.  v0:= temp;
  #L410984.  return v0;
}
procedure `java.lang.Object`[] `toArray`(`java.util.Enumeration` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.toArray:(Ljava/util/Enumeration;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L410afc.  v0:= new `java.util.ArrayList`;
  #L410b00.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L410b06.  call temp:= `hasMoreElements`(v2) @signature `Ljava/util/Enumeration;.hasMoreElements:()Z` @kind interface;
  #L410b0c.  v1:= temp;
  #L410b0e.  if v1 == 0 then goto L410b22;
  #L410b12.  call temp:= `nextElement`(v2) @signature `Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;` @kind interface;
  #L410b18.  v1:= temp @kind object;
  #L410b1a.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L410b20.  goto L410b06;
  #L410b22.  call temp:= `toArray`(v0, v3) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L410b28.  v2:= temp @kind object;
  #L410b2a.  return v2 @kind object;
}
procedure `java.util.Iterator` `toIterator`(`java.util.Enumeration` v1 @kind object) @signature `Lio/jsonwebtoken/lang/Collections;.toIterator:(Ljava/util/Enumeration;)Ljava/util/Iterator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L410b3c.  v0:= new `io.jsonwebtoken.lang.Collections$a`;
  #L410b40.  call `<init>`(v0, v1) @signature `Lio/jsonwebtoken/lang/Collections$a;.<init>:(Ljava/util/Enumeration;)V` @kind direct;
  #L410b46.  return v0 @kind object;
}
