record `io.jsonwebtoken.lang.Classes$a` @kind class @AccessFlag FINAL extends `io.jsonwebtoken.lang.Classes$e` @kind class {
}
procedure `void` `<init>`(`io.jsonwebtoken.lang.Classes$a` v1 @kind this) @signature `Lio/jsonwebtoken/lang/Classes$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4102a4.  v0:= 0I;
  #L4102a6.  call `<init>`(v1, v0) @signature `Lio/jsonwebtoken/lang/Classes$e;.<init>:(Lio/jsonwebtoken/lang/Classes$a;)V` @kind direct;
  #L4102ac.  return @kind void;
}
procedure `java.lang.ClassLoader` `c`(`io.jsonwebtoken.lang.Classes$a` v1 @kind this) @signature `Lio/jsonwebtoken/lang/Classes$a;.c:()Ljava/lang/ClassLoader;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L410280.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L410286.  v0:= temp @kind object;
  #L410288.  call temp:= `getContextClassLoader`(v0) @signature `Ljava/lang/Thread;.getContextClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L41028e.  v0:= temp @kind object;
  #L410290.  return v0 @kind object;
}
