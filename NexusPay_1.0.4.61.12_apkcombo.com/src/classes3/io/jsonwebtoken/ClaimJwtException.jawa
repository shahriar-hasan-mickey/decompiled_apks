record `io.jsonwebtoken.ClaimJwtException` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.jsonwebtoken.JwtException` @kind class {
  `io.jsonwebtoken.Header` `io.jsonwebtoken.ClaimJwtException.a` @AccessFlag PRIVATE_FINAL;
  `io.jsonwebtoken.Claims` `io.jsonwebtoken.ClaimJwtException.b` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@io.jsonwebtoken.ClaimJwtException.INCORRECT_EXPECTED_CLAIM_MESSAGE_TEMPLATE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@io.jsonwebtoken.ClaimJwtException.MISSING_EXPECTED_CLAIM_MESSAGE_TEMPLATE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`io.jsonwebtoken.ClaimJwtException` v0 @kind this, `io.jsonwebtoken.Header` v1 @kind object, `io.jsonwebtoken.Claims` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lio/jsonwebtoken/ClaimJwtException;.<init>:(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L40b224.  call `<init>`(v0, v3) @signature `Lio/jsonwebtoken/JwtException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40b22a.  v0.`io.jsonwebtoken.ClaimJwtException.a` @type ^`io.jsonwebtoken.Header` := v1 @kind object;
  #L40b22e.  v0.`io.jsonwebtoken.ClaimJwtException.b` @type ^`io.jsonwebtoken.Claims` := v2 @kind object;
  #L40b232.  return @kind void;
}
procedure `void` `<init>`(`io.jsonwebtoken.ClaimJwtException` v0 @kind this, `io.jsonwebtoken.Header` v1 @kind object, `io.jsonwebtoken.Claims` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lio/jsonwebtoken/ClaimJwtException;.<init>:(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L40b244.  call `<init>`(v0, v3, v4) @signature `Lio/jsonwebtoken/JwtException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L40b24a.  v0.`io.jsonwebtoken.ClaimJwtException.a` @type ^`io.jsonwebtoken.Header` := v1 @kind object;
  #L40b24e.  v0.`io.jsonwebtoken.ClaimJwtException.b` @type ^`io.jsonwebtoken.Claims` := v2 @kind object;
  #L40b252.  return @kind void;
}
procedure `io.jsonwebtoken.Claims` `getClaims`(`io.jsonwebtoken.ClaimJwtException` v1 @kind this) @signature `Lio/jsonwebtoken/ClaimJwtException;.getClaims:()Lio/jsonwebtoken/Claims;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40b1f4.  v0:= v1.`io.jsonwebtoken.ClaimJwtException.b` @type ^`io.jsonwebtoken.Claims` @kind object;
  #L40b1f8.  return v0 @kind object;
}
procedure `io.jsonwebtoken.Header` `getHeader`(`io.jsonwebtoken.ClaimJwtException` v1 @kind this) @signature `Lio/jsonwebtoken/ClaimJwtException;.getHeader:()Lio/jsonwebtoken/Header;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40b20c.  v0:= v1.`io.jsonwebtoken.ClaimJwtException.a` @type ^`io.jsonwebtoken.Header` @kind object;
  #L40b210.  return v0 @kind object;
}
