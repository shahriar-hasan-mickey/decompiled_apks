record `io.jsonwebtoken.JwtParser` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `char` `@@io.jsonwebtoken.JwtParser.SEPARATOR_CHAR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `boolean` `isSigned`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.isSigned:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.Jwt` `parse`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.parse:(Ljava/lang/String;)Lio/jsonwebtoken/Jwt;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `parse`(`java.lang.String` v0 @kind object, `io.jsonwebtoken.JwtHandler` v1 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.parse:(Ljava/lang/String;Lio/jsonwebtoken/JwtHandler;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.Jws` `parseClaimsJws`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.parseClaimsJws:(Ljava/lang/String;)Lio/jsonwebtoken/Jws;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.Jwt` `parseClaimsJwt`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.parseClaimsJwt:(Ljava/lang/String;)Lio/jsonwebtoken/Jwt;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.Jws` `parsePlaintextJws`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.parsePlaintextJws:(Ljava/lang/String;)Lio/jsonwebtoken/Jws;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.Jwt` `parsePlaintextJwt`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.parsePlaintextJwt:(Ljava/lang/String;)Lio/jsonwebtoken/Jwt;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `require`(`java.lang.String` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.require:(Ljava/lang/String;Ljava/lang/Object;)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `requireAudience`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.requireAudience:(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `requireExpiration`(`java.util.Date` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.requireExpiration:(Ljava/util/Date;)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `requireId`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.requireId:(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `requireIssuedAt`(`java.util.Date` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.requireIssuedAt:(Ljava/util/Date;)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `requireIssuer`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.requireIssuer:(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `requireNotBefore`(`java.util.Date` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.requireNotBefore:(Ljava/util/Date;)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `requireSubject`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.requireSubject:(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `setAllowedClockSkewSeconds`(`long` v0 ) @signature `Lio/jsonwebtoken/JwtParser;.setAllowedClockSkewSeconds:(J)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `setClock`(`io.jsonwebtoken.Clock` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.setClock:(Lio/jsonwebtoken/Clock;)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `setCompressionCodecResolver`(`io.jsonwebtoken.CompressionCodecResolver` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.setCompressionCodecResolver:(Lio/jsonwebtoken/CompressionCodecResolver;)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `setSigningKey`(`java.lang.String` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.setSigningKey:(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `setSigningKey`(`java.security.Key` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.setSigningKey:(Ljava/security/Key;)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `setSigningKey`(`byte`[] v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.setSigningKey:([B)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.jsonwebtoken.JwtParser` `setSigningKeyResolver`(`io.jsonwebtoken.SigningKeyResolver` v0 @kind object) @signature `Lio/jsonwebtoken/JwtParser;.setSigningKeyResolver:(Lio/jsonwebtoken/SigningKeyResolver;)Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
