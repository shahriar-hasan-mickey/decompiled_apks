record `io.jsonwebtoken.Jwts` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`io.jsonwebtoken.Jwts` v0 @kind this) @signature `Lio/jsonwebtoken/Jwts;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L40b574.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40b57a.  return @kind void;
}
procedure `io.jsonwebtoken.JwtBuilder` `builder`() @signature `Lio/jsonwebtoken/Jwts;.builder:()Lio/jsonwebtoken/JwtBuilder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40b53c.  v0:= new `io.jsonwebtoken.impl.DefaultJwtBuilder`;
  #L40b540.  call `<init>`(v0) @signature `Lio/jsonwebtoken/impl/DefaultJwtBuilder;.<init>:()V` @kind direct;
  #L40b546.  return v0 @kind object;
}
procedure `io.jsonwebtoken.Claims` `claims`() @signature `Lio/jsonwebtoken/Jwts;.claims:()Lio/jsonwebtoken/Claims;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40b494.  v0:= new `io.jsonwebtoken.impl.DefaultClaims`;
  #L40b498.  call `<init>`(v0) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.<init>:()V` @kind direct;
  #L40b49e.  return v0 @kind object;
}
procedure `io.jsonwebtoken.Claims` `claims`(`java.util.Map` v1 @kind object) @signature `Lio/jsonwebtoken/Jwts;.claims:(Ljava/util/Map;)Lio/jsonwebtoken/Claims;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40b4b0.  v0:= new `io.jsonwebtoken.impl.DefaultClaims`;
  #L40b4b4.  call `<init>`(v0, v1) @signature `Lio/jsonwebtoken/impl/DefaultClaims;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L40b4ba.  return v0 @kind object;
}
procedure `io.jsonwebtoken.Header` `header`() @signature `Lio/jsonwebtoken/Jwts;.header:()Lio/jsonwebtoken/Header;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40b4cc.  v0:= new `io.jsonwebtoken.impl.DefaultHeader`;
  #L40b4d0.  call `<init>`(v0) @signature `Lio/jsonwebtoken/impl/DefaultHeader;.<init>:()V` @kind direct;
  #L40b4d6.  return v0 @kind object;
}
procedure `io.jsonwebtoken.Header` `header`(`java.util.Map` v1 @kind object) @signature `Lio/jsonwebtoken/Jwts;.header:(Ljava/util/Map;)Lio/jsonwebtoken/Header;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40b4e8.  v0:= new `io.jsonwebtoken.impl.DefaultHeader`;
  #L40b4ec.  call `<init>`(v0, v1) @signature `Lio/jsonwebtoken/impl/DefaultHeader;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L40b4f2.  return v0 @kind object;
}
procedure `io.jsonwebtoken.JwsHeader` `jwsHeader`() @signature `Lio/jsonwebtoken/Jwts;.jwsHeader:()Lio/jsonwebtoken/JwsHeader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40b504.  v0:= new `io.jsonwebtoken.impl.DefaultJwsHeader`;
  #L40b508.  call `<init>`(v0) @signature `Lio/jsonwebtoken/impl/DefaultJwsHeader;.<init>:()V` @kind direct;
  #L40b50e.  return v0 @kind object;
}
procedure `io.jsonwebtoken.JwsHeader` `jwsHeader`(`java.util.Map` v1 @kind object) @signature `Lio/jsonwebtoken/Jwts;.jwsHeader:(Ljava/util/Map;)Lio/jsonwebtoken/JwsHeader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40b520.  v0:= new `io.jsonwebtoken.impl.DefaultJwsHeader`;
  #L40b524.  call `<init>`(v0, v1) @signature `Lio/jsonwebtoken/impl/DefaultJwsHeader;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L40b52a.  return v0 @kind object;
}
procedure `io.jsonwebtoken.JwtParser` `parser`() @signature `Lio/jsonwebtoken/Jwts;.parser:()Lio/jsonwebtoken/JwtParser;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40b558.  v0:= new `io.jsonwebtoken.impl.DefaultJwtParser`;
  #L40b55c.  call `<init>`(v0) @signature `Lio/jsonwebtoken/impl/DefaultJwtParser;.<init>:()V` @kind direct;
  #L40b562.  return v0 @kind object;
}
