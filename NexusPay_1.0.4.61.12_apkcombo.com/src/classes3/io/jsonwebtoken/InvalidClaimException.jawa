record `io.jsonwebtoken.InvalidClaimException` @kind class @AccessFlag PUBLIC extends `io.jsonwebtoken.ClaimJwtException` @kind class {
  `java.lang.String` `io.jsonwebtoken.InvalidClaimException.c` @AccessFlag PRIVATE;
  `java.lang.Object` `io.jsonwebtoken.InvalidClaimException.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.jsonwebtoken.InvalidClaimException` v0 @kind this, `io.jsonwebtoken.Header` v1 @kind object, `io.jsonwebtoken.Claims` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lio/jsonwebtoken/InvalidClaimException;.<init>:(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L40b36c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/jsonwebtoken/ClaimJwtException;.<init>:(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;)V` @kind direct;
  #L40b372.  return @kind void;
}
procedure `void` `<init>`(`io.jsonwebtoken.InvalidClaimException` v0 @kind this, `io.jsonwebtoken.Header` v1 @kind object, `io.jsonwebtoken.Claims` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lio/jsonwebtoken/InvalidClaimException;.<init>:(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L40b384.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/jsonwebtoken/ClaimJwtException;.<init>:(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L40b38a.  return @kind void;
}
procedure `java.lang.String` `getClaimName`(`io.jsonwebtoken.InvalidClaimException` v1 @kind this) @signature `Lio/jsonwebtoken/InvalidClaimException;.getClaimName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40b354.  v0:= v1.`io.jsonwebtoken.InvalidClaimException.c` @type ^`java.lang.String` @kind object;
  #L40b358.  return v0 @kind object;
}
procedure `java.lang.Object` `getClaimValue`(`io.jsonwebtoken.InvalidClaimException` v1 @kind this) @signature `Lio/jsonwebtoken/InvalidClaimException;.getClaimValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40b33c.  v0:= v1.`io.jsonwebtoken.InvalidClaimException.d` @type ^`java.lang.Object` @kind object;
  #L40b340.  return v0 @kind object;
}
procedure `void` `setClaimName`(`io.jsonwebtoken.InvalidClaimException` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lio/jsonwebtoken/InvalidClaimException;.setClaimName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L40b39c.  v0.`io.jsonwebtoken.InvalidClaimException.c` @type ^`java.lang.String` := v1 @kind object;
  #L40b3a0.  return @kind void;
}
procedure `void` `setClaimValue`(`io.jsonwebtoken.InvalidClaimException` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/jsonwebtoken/InvalidClaimException;.setClaimValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L40b3b4.  v0.`io.jsonwebtoken.InvalidClaimException.d` @type ^`java.lang.Object` := v1 @kind object;
  #L40b3b8.  return @kind void;
}
