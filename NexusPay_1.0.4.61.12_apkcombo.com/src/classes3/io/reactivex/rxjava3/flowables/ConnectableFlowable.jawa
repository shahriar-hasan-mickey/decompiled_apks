record `io.reactivex.rxjava3.flowables.ConnectableFlowable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.Flowable` @kind class {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v0 @kind this) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ab154.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4ab15a.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `autoConnect`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.autoConnect:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aaf88.  v0:= 1I;
  #L4aaf8a.  call temp:= `autoConnect`(v1, v0) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.autoConnect:(I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4aaf90.  v0:= temp @kind object;
  #L4aaf92.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `autoConnect`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.autoConnect:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aafa4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4aafaa.  v0:= temp @kind object;
  #L4aafac.  call temp:= `autoConnect`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.autoConnect:(ILio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4aafb2.  v2:= temp @kind object;
  #L4aafb4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `autoConnect`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v1 @kind this, `int` v2 , `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.autoConnect:(ILio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aafc8.  v0:= "connection is null" @kind object;
  #L4aafcc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aafd2.  if v2 > 0 then goto L4aafe6;
  #L4aafd6.  call `connect`(v1, v3) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.connect:(Lio/reactivex/rxjava3/functions/Consumer;)V` @kind virtual;
  #L4aafdc.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/flowables/ConnectableFlowable;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L4aafe2.  v2:= temp @kind object;
  #L4aafe4.  return v2 @kind object;
  #L4aafe6.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableAutoConnect`;
  #L4aafea.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAutoConnect;.<init>:(Lio/reactivex/rxjava3/flowables/ConnectableFlowable;ILio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L4aaff0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4aaff6.  v2:= temp @kind object;
  #L4aaff8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `connect`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.connect:()Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4ab12c.  v0:= new `io.reactivex.rxjava3.internal.util.ConnectConsumer`;
  #L4ab130.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/util/ConnectConsumer;.<init>:()V` @kind direct;
  #L4ab136.  call `connect`(v1, v0) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.connect:(Lio/reactivex/rxjava3/functions/Consumer;)V` @kind virtual;
  #L4ab13c.  v0:= v0.`io.reactivex.rxjava3.internal.util.ConnectConsumer.disposable` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ab140.  return v0 @kind object;
}
procedure `void` `connect`(`io.reactivex.rxjava3.functions.Consumer` v0 @kind object) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.connect:(Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.reactivex.rxjava3.core.Flowable` `refCount`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab00c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRefCount`;
  #L4ab010.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRefCount;.<init>:(Lio/reactivex/rxjava3/flowables/ConnectableFlowable;)V` @kind direct;
  #L4ab016.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4ab01c.  v0:= temp @kind object;
  #L4ab01e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `refCount`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v6 @kind this, `int` v7 ) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4ab030.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4ab034.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4ab03a.  v5:= temp @kind object;
  #L4ab03c.  v2:= 0L;
  #L4ab040.  v0:= v6 @kind object;
  #L4ab042.  v1:= v7;
  #L4ab044.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4ab04a.  v7:= temp @kind object;
  #L4ab04c.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `refCount`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4ab060.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4ab066.  v5:= temp @kind object;
  #L4ab068.  v0:= v6 @kind object;
  #L4ab06a.  v1:= v7;
  #L4ab06c.  v2:= v8 @kind wide;
  #L4ab06e.  v4:= v10 @kind object;
  #L4ab070.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4ab076.  v7:= temp @kind object;
  #L4ab078.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `refCount`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v8 @kind this, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4ab08c.  v0:= "subscriberCount" @kind object;
  #L4ab090.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4ab096.  v0:= "unit is null" @kind object;
  #L4ab09a.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ab0a0.  v0:= "scheduler is null" @kind object;
  #L4ab0a4.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ab0aa.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRefCount`;
  #L4ab0ae.  v1:= v0 @kind object;
  #L4ab0b0.  v2:= v8 @kind object;
  #L4ab0b2.  v3:= v9;
  #L4ab0b4.  v4:= v10 @kind wide;
  #L4ab0b6.  v6:= v12 @kind object;
  #L4ab0b8.  v7:= v13 @kind object;
  #L4ab0ba.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRefCount;.<init>:(Lio/reactivex/rxjava3/flowables/ConnectableFlowable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4ab0c0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4ab0c6.  v9:= temp @kind object;
  #L4ab0c8.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `refCount`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4ab0dc.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4ab0e2.  v5:= temp @kind object;
  #L4ab0e4.  v1:= 1I;
  #L4ab0e6.  v0:= v6 @kind object;
  #L4ab0e8.  v2:= v7 @kind wide;
  #L4ab0ea.  v4:= v9 @kind object;
  #L4ab0ec.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4ab0f2.  v7:= temp @kind object;
  #L4ab0f4.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `refCount`(`io.reactivex.rxjava3.flowables.ConnectableFlowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4ab108.  v1:= 1I;
  #L4ab10a.  v0:= v6 @kind object;
  #L4ab10c.  v2:= v7 @kind wide;
  #L4ab10e.  v4:= v9 @kind object;
  #L4ab110.  v5:= v10 @kind object;
  #L4ab112.  call temp:= `refCount`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4ab118.  v7:= temp @kind object;
  #L4ab11a.  return v7 @kind object;
}
procedure `void` `reset`() @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.reset:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
