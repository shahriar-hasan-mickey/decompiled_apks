record `io.reactivex.rxjava3.disposables.SerialDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.disposables.SerialDisposable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.disposables.SerialDisposable` v1 @kind this) @signature `Lio/reactivex/rxjava3/disposables/SerialDisposable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4aa75c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aa762.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4aa766.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4aa76c.  v1.`io.reactivex.rxjava3.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4aa770.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.disposables.SerialDisposable` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/disposables/SerialDisposable;.<init>:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4aa784.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aa78a.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4aa78e.  call `<init>`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4aa794.  v1.`io.reactivex.rxjava3.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4aa798.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.disposables.SerialDisposable` v1 @kind this) @signature `Lio/reactivex/rxjava3/disposables/SerialDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa7ac.  v0:= v1.`io.reactivex.rxjava3.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4aa7b0.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4aa7b6.  return @kind void;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `get`(`io.reactivex.rxjava3.disposables.SerialDisposable` v2 @kind this) @signature `Lio/reactivex/rxjava3/disposables/SerialDisposable;.get:()Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aa728.  v0:= v2.`io.reactivex.rxjava3.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4aa72c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4aa732.  v0:= temp @kind object;
  #L4aa734.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4aa738.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4aa73c.  if v0 != v1 then goto L4aa748;
  #L4aa740.  call temp:= `a`() @signature `Lio/reactivex/rxjava3/disposables/a;.a:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L4aa746.  v0:= temp @kind object;
  #L4aa748.  return v0 @kind object;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.disposables.SerialDisposable` v1 @kind this) @signature `Lio/reactivex/rxjava3/disposables/SerialDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa6bc.  v0:= v1.`io.reactivex.rxjava3.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4aa6c0.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4aa6c6.  v0:= temp @kind object;
  #L4aa6c8.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4aa6cc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4aa6d2.  v0:= temp;
  #L4aa6d4.  return v0;
}
procedure `boolean` `replace`(`io.reactivex.rxjava3.disposables.SerialDisposable` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/disposables/SerialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa6e8.  v0:= v1.`io.reactivex.rxjava3.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4aa6ec.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4aa6f2.  v2:= temp;
  #L4aa6f4.  return v2;
}
procedure `boolean` `set`(`io.reactivex.rxjava3.disposables.SerialDisposable` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/disposables/SerialDisposable;.set:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa708.  v0:= v1.`io.reactivex.rxjava3.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4aa70c.  call temp:= `set`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4aa712.  v2:= temp;
  #L4aa714.  return v2;
}
