record `io.reactivex.rxjava3.disposables.CompositeDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `io.reactivex.rxjava3.disposables.DisposableContainer` @kind interface {
  `io.reactivex.rxjava3.internal.util.OpenHashSet` `io.reactivex.rxjava3.disposables.CompositeDisposable.a` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.disposables.CompositeDisposable.b` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.disposables.CompositeDisposable` v0 @kind this) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4aa2fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aa302.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.disposables.CompositeDisposable` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4aa370.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aa376.  v0:= "disposables is null" @kind object;
  #L4aa37a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aa380.  v0:= new `io.reactivex.rxjava3.internal.util.OpenHashSet`;
  #L4aa384.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/util/OpenHashSet;.<init>:()V` @kind direct;
  #L4aa38a.  v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.a` @type ^`io.reactivex.rxjava3.internal.util.OpenHashSet` := v0 @kind object;
  #L4aa38e.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4aa394.  v3:= temp @kind object;
  #L4aa396.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4aa39c.  v0:= temp;
  #L4aa39e.  if v0 == 0 then goto L4aa3c4;
  #L4aa3a2.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4aa3a8.  v0:= temp @kind object;
  #L4aa3aa.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4aa3ae.  v1:= "A Disposable item in the disposables sequence is null" @kind object;
  #L4aa3b2.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aa3b8.  v1:= v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.a` @type ^`io.reactivex.rxjava3.internal.util.OpenHashSet` @kind object;
  #L4aa3bc.  call temp:= `add`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/util/OpenHashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4aa3c2.  goto L4aa396;
  #L4aa3c4.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.disposables.CompositeDisposable` v4 @kind this, `io.reactivex.rxjava3.disposables.Disposable`[] v5 @kind object) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:([Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4aa314.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aa31a.  v0:= "disposables is null" @kind object;
  #L4aa31e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aa324.  v0:= new `io.reactivex.rxjava3.internal.util.OpenHashSet`;
  #L4aa328.  v1:= length @variable v5;
  #L4aa32a.  v1:= v1 + 1;
  #L4aa32e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/OpenHashSet;.<init>:(I)V` @kind direct;
  #L4aa334.  v4.`io.reactivex.rxjava3.disposables.CompositeDisposable.a` @type ^`io.reactivex.rxjava3.internal.util.OpenHashSet` := v0 @kind object;
  #L4aa338.  v0:= length @variable v5;
  #L4aa33a.  v1:= 0I;
  #L4aa33c.  if v1 >= v0 then goto L4aa35e;
  #L4aa340.  v2:= v5[v1] @kind object;
  #L4aa344.  v3:= "A Disposable in the disposables array is null" @kind object;
  #L4aa348.  call temp:= `requireNonNull`(v2, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aa34e.  v3:= v4.`io.reactivex.rxjava3.disposables.CompositeDisposable.a` @type ^`io.reactivex.rxjava3.internal.util.OpenHashSet` @kind object;
  #L4aa352.  call temp:= `add`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/util/OpenHashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4aa358.  v1:= v1 + 1;
  #L4aa35c.  goto L4aa33c;
  #L4aa35e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.disposables.CompositeDisposable` v6 @kind this, `io.reactivex.rxjava3.internal.util.OpenHashSet` v7 @kind object) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.a:(Lio/reactivex/rxjava3/internal/util/OpenHashSet;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4aa48c.  if v7 != 0 then goto L4aa492;
  #L4aa490.  return @kind void;
  #L4aa492.  v0:= 0I;
  #L4aa494.  call temp:= `keys`(v7) @signature `Lio/reactivex/rxjava3/internal/util/OpenHashSet;.keys:()[Ljava/lang/Object;` @kind virtual;
  #L4aa49a.  v7:= temp @kind object;
  #L4aa49c.  v1:= length @variable v7;
  #L4aa49e.  v2:= 0I;
  #L4aa4a0.  v3:= 0I;
  #L4aa4a2.  if v3 >= v1 then goto L4aa4e0;
  #L4aa4a6.  v4:= v7[v3] @kind object;
  #L4aa4aa.  v5:= instanceof @variable v4 @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind boolean;
  #L4aa4ae.  if v5 == 0 then goto L4aa4da;
  #L4aa4b2.  v4:= (`io.reactivex.rxjava3.disposables.Disposable`) v4 @kind object;
  #L4aa4b6.  call `dispose`(v4) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4aa4bc.  goto L4aa4da;
  #L4aa4be.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4aa4c0.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4aa4c6.  if v0 != 0 then goto L4aa4d4;
  #L4aa4ca.  v0:= new `java.util.ArrayList`;
  #L4aa4ce.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4aa4d4.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4aa4da.  v3:= v3 + 1;
  #L4aa4de.  goto L4aa4a2;
  #L4aa4e0.  if v0 == 0 then goto L4aa514;
  #L4aa4e4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4aa4ea.  v7:= temp;
  #L4aa4ec.  v1:= 1I;
  #L4aa4ee.  if v7 != v1 then goto L4aa508;
  #L4aa4f2.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4aa4f8.  v7:= temp @kind object;
  #L4aa4fa.  v7:= (`java.lang.Throwable`) v7 @kind object;
  #L4aa4fe.  call temp:= `wrapOrThrow`(v7) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4aa504.  v7:= temp @kind object;
  #L4aa506.  throw v7;
  #L4aa508.  v7:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4aa50c.  call `<init>`(v7, v0) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L4aa512.  throw v7;
  #L4aa514.  return @kind void;
  catch `java.lang.Throwable` @[L4aa4b2..L4aa4bc] goto L4aa4be;
}
procedure `boolean` `add`(`io.reactivex.rxjava3.disposables.CompositeDisposable` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa0f0.  v0:= "disposable is null" @kind object;
  #L4aa0f4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aa0fa.  v0:= v1.`io.reactivex.rxjava3.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4aa0fe.  if v0 != 0 then goto L4aa138;
  #L4aa102.  @monitorenter v1
  #L4aa104.  v0:= v1.`io.reactivex.rxjava3.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4aa108.  if v0 != 0 then goto L4aa12e;
  #L4aa10c.  v0:= v1.`io.reactivex.rxjava3.disposables.CompositeDisposable.a` @type ^`io.reactivex.rxjava3.internal.util.OpenHashSet` @kind object;
  #L4aa110.  if v0 != 0 then goto L4aa122;
  #L4aa114.  v0:= new `io.reactivex.rxjava3.internal.util.OpenHashSet`;
  #L4aa118.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/util/OpenHashSet;.<init>:()V` @kind direct;
  #L4aa11e.  v1.`io.reactivex.rxjava3.disposables.CompositeDisposable.a` @type ^`io.reactivex.rxjava3.internal.util.OpenHashSet` := v0 @kind object;
  #L4aa122.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/OpenHashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4aa128.  v2:= 1I;
  #L4aa12a.  @monitorexit v1
  #L4aa12c.  return v2;
  #L4aa12e.  @monitorexit v1
  #L4aa130.  goto L4aa138;
  #L4aa132.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4aa134.  @monitorexit v1
  #L4aa136.  throw v2;
  #L4aa138.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4aa13e.  v2:= 0I;
  #L4aa140.  return v2;
  catch `java.lang.Throwable` @[L4aa104..L4aa136] goto L4aa132;
}
procedure `boolean` `addAll`(`io.reactivex.rxjava3.disposables.CompositeDisposable` v6 @kind this, `io.reactivex.rxjava3.disposables.Disposable`[] v7 @kind object) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.addAll:([Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4aa160.  v0:= "disposables is null" @kind object;
  #L4aa164.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aa16a.  v0:= v6.`io.reactivex.rxjava3.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4aa16e.  v1:= 0I;
  #L4aa170.  if v0 != 0 then goto L4aa1c8;
  #L4aa174.  @monitorenter v6
  #L4aa176.  v0:= v6.`io.reactivex.rxjava3.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4aa17a.  if v0 != 0 then goto L4aa1be;
  #L4aa17e.  v0:= v6.`io.reactivex.rxjava3.disposables.CompositeDisposable.a` @type ^`io.reactivex.rxjava3.internal.util.OpenHashSet` @kind object;
  #L4aa182.  v2:= 1I;
  #L4aa184.  if v0 != 0 then goto L4aa19a;
  #L4aa188.  v0:= new `io.reactivex.rxjava3.internal.util.OpenHashSet`;
  #L4aa18c.  v3:= length @variable v7;
  #L4aa18e.  v3:= v3 + v2 @kind int;
  #L4aa190.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/OpenHashSet;.<init>:(I)V` @kind direct;
  #L4aa196.  v6.`io.reactivex.rxjava3.disposables.CompositeDisposable.a` @type ^`io.reactivex.rxjava3.internal.util.OpenHashSet` := v0 @kind object;
  #L4aa19a.  v3:= length @variable v7;
  #L4aa19c.  if v1 >= v3 then goto L4aa1ba;
  #L4aa1a0.  v4:= v7[v1] @kind object;
  #L4aa1a4.  v5:= "A Disposable in the disposables array is null" @kind object;
  #L4aa1a8.  call temp:= `requireNonNull`(v4, v5) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aa1ae.  call temp:= `add`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/util/OpenHashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4aa1b4.  v1:= v1 + 1;
  #L4aa1b8.  goto L4aa19c;
  #L4aa1ba.  @monitorexit v6
  #L4aa1bc.  return v2;
  #L4aa1be.  @monitorexit v6
  #L4aa1c0.  goto L4aa1c8;
  #L4aa1c2.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4aa1c4.  @monitorexit v6
  #L4aa1c6.  throw v7;
  #L4aa1c8.  v0:= length @variable v7;
  #L4aa1ca.  v2:= 0I;
  #L4aa1cc.  if v2 >= v0 then goto L4aa1e0;
  #L4aa1d0.  v3:= v7[v2] @kind object;
  #L4aa1d4.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4aa1da.  v2:= v2 + 1;
  #L4aa1de.  goto L4aa1cc;
  #L4aa1e0.  return v1;
  catch `java.lang.Throwable` @[L4aa176..L4aa1c6] goto L4aa1c2;
}
procedure `void` `clear`(`io.reactivex.rxjava3.disposables.CompositeDisposable` v2 @kind this) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aa3d8.  v0:= v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4aa3dc.  if v0 == 0 then goto L4aa3e2;
  #L4aa3e0.  return @kind void;
  #L4aa3e2.  @monitorenter v2
  #L4aa3e4.  v0:= v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4aa3e8.  if v0 == 0 then goto L4aa3f0;
  #L4aa3ec.  @monitorexit v2
  #L4aa3ee.  return @kind void;
  #L4aa3f0.  v0:= v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.a` @type ^`io.reactivex.rxjava3.internal.util.OpenHashSet` @kind object;
  #L4aa3f4.  v1:= 0I;
  #L4aa3f6.  v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.a` @type ^`io.reactivex.rxjava3.internal.util.OpenHashSet` := v1 @kind object;
  #L4aa3fa.  @monitorexit v2
  #L4aa3fc.  call `a`(v2, v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.a:(Lio/reactivex/rxjava3/internal/util/OpenHashSet;)V` @kind virtual;
  #L4aa402.  return @kind void;
  #L4aa404.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4aa406.  @monitorexit v2
  #L4aa408.  throw v0;
  catch `java.lang.Throwable` @[L4aa3e4..L4aa3fc] goto L4aa404;
  catch `java.lang.Throwable` @[L4aa406..L4aa408] goto L4aa404;
}
procedure `boolean` `delete`(`io.reactivex.rxjava3.disposables.CompositeDisposable` v2 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aa200.  v0:= "disposable is null" @kind object;
  #L4aa204.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aa20a.  v0:= v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4aa20e.  v1:= 0I;
  #L4aa210.  if v0 == 0 then goto L4aa216;
  #L4aa214.  return v1;
  #L4aa216.  @monitorenter v2
  #L4aa218.  v0:= v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4aa21c.  if v0 == 0 then goto L4aa224;
  #L4aa220.  @monitorexit v2
  #L4aa222.  return v1;
  #L4aa224.  v0:= v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.a` @type ^`io.reactivex.rxjava3.internal.util.OpenHashSet` @kind object;
  #L4aa228.  if v0 == 0 then goto L4aa240;
  #L4aa22c.  call temp:= `remove`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/OpenHashSet;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L4aa232.  v3:= temp;
  #L4aa234.  if v3 != 0 then goto L4aa23a;
  #L4aa238.  goto L4aa240;
  #L4aa23a.  @monitorexit v2
  #L4aa23c.  v3:= 1I;
  #L4aa23e.  return v3;
  #L4aa240.  @monitorexit v2
  #L4aa242.  return v1;
  #L4aa244.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4aa246.  @monitorexit v2
  #L4aa248.  throw v3;
  catch `java.lang.Throwable` @[L4aa218..L4aa248] goto L4aa244;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.disposables.CompositeDisposable` v2 @kind this) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aa430.  v0:= v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4aa434.  if v0 == 0 then goto L4aa43a;
  #L4aa438.  return @kind void;
  #L4aa43a.  @monitorenter v2
  #L4aa43c.  v0:= v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4aa440.  if v0 == 0 then goto L4aa448;
  #L4aa444.  @monitorexit v2
  #L4aa446.  return @kind void;
  #L4aa448.  v0:= 1I;
  #L4aa44a.  v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.b` @type ^`boolean` := v0 @kind boolean;
  #L4aa44e.  v0:= v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.a` @type ^`io.reactivex.rxjava3.internal.util.OpenHashSet` @kind object;
  #L4aa452.  v1:= 0I;
  #L4aa454.  v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.a` @type ^`io.reactivex.rxjava3.internal.util.OpenHashSet` := v1 @kind object;
  #L4aa458.  @monitorexit v2
  #L4aa45a.  call `a`(v2, v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.a:(Lio/reactivex/rxjava3/internal/util/OpenHashSet;)V` @kind virtual;
  #L4aa460.  return @kind void;
  #L4aa462.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4aa464.  @monitorexit v2
  #L4aa466.  throw v0;
  catch `java.lang.Throwable` @[L4aa43c..L4aa45a] goto L4aa462;
  catch `java.lang.Throwable` @[L4aa464..L4aa466] goto L4aa462;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.disposables.CompositeDisposable` v1 @kind this) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa268.  v0:= v1.`io.reactivex.rxjava3.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4aa26c.  return v0;
}
procedure `boolean` `remove`(`io.reactivex.rxjava3.disposables.CompositeDisposable` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.remove:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa280.  call temp:= `delete`(v1, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4aa286.  v0:= temp;
  #L4aa288.  if v0 == 0 then goto L4aa296;
  #L4aa28c.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4aa292.  v2:= 1I;
  #L4aa294.  return v2;
  #L4aa296.  v2:= 0I;
  #L4aa298.  return v2;
}
procedure `int` `size`(`io.reactivex.rxjava3.disposables.CompositeDisposable` v2 @kind this) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aa2ac.  v0:= v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4aa2b0.  v1:= 0I;
  #L4aa2b2.  if v0 == 0 then goto L4aa2b8;
  #L4aa2b6.  return v1;
  #L4aa2b8.  @monitorenter v2
  #L4aa2ba.  v0:= v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4aa2be.  if v0 == 0 then goto L4aa2c6;
  #L4aa2c2.  @monitorexit v2
  #L4aa2c4.  return v1;
  #L4aa2c6.  v0:= v2.`io.reactivex.rxjava3.disposables.CompositeDisposable.a` @type ^`io.reactivex.rxjava3.internal.util.OpenHashSet` @kind object;
  #L4aa2ca.  if v0 == 0 then goto L4aa2d6;
  #L4aa2ce.  call temp:= `size`(v0) @signature `Lio/reactivex/rxjava3/internal/util/OpenHashSet;.size:()I` @kind virtual;
  #L4aa2d4.  v1:= temp;
  #L4aa2d6.  @monitorexit v2
  #L4aa2d8.  return v1;
  #L4aa2da.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4aa2dc.  @monitorexit v2
  #L4aa2de.  throw v0;
  catch `java.lang.Throwable` @[L4aa2ba..L4aa2de] goto L4aa2da;
}
