record `io.reactivex.rxjava3.observers.ResourceCompletableObserver` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.CompletableObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.observers.ResourceCompletableObserver.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` `io.reactivex.rxjava3.observers.ResourceCompletableObserver.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.observers.ResourceCompletableObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/observers/ResourceCompletableObserver;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L51b3dc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L51b3e2.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L51b3e6.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L51b3ec.  v1.`io.reactivex.rxjava3.observers.ResourceCompletableObserver.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L51b3f0.  v0:= new `io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable`;
  #L51b3f4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.<init>:()V` @kind direct;
  #L51b3fa.  v1.`io.reactivex.rxjava3.observers.ResourceCompletableObserver.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` := v0 @kind object;
  #L51b3fe.  return @kind void;
}
procedure `void` `add`(`io.reactivex.rxjava3.observers.ResourceCompletableObserver` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/observers/ResourceCompletableObserver;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51b410.  v0:= "resource is null" @kind object;
  #L51b414.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51b41a.  v0:= v1.`io.reactivex.rxjava3.observers.ResourceCompletableObserver.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` @kind object;
  #L51b41e.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L51b424.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.observers.ResourceCompletableObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/observers/ResourceCompletableObserver;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51b438.  v0:= v1.`io.reactivex.rxjava3.observers.ResourceCompletableObserver.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L51b43c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L51b442.  v0:= temp;
  #L51b444.  if v0 == 0 then goto L51b452;
  #L51b448.  v0:= v1.`io.reactivex.rxjava3.observers.ResourceCompletableObserver.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` @kind object;
  #L51b44c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.dispose:()V` @kind virtual;
  #L51b452.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.observers.ResourceCompletableObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/observers/ResourceCompletableObserver;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51b3b0.  v0:= v1.`io.reactivex.rxjava3.observers.ResourceCompletableObserver.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L51b3b4.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L51b3ba.  v0:= temp @kind object;
  #L51b3bc.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L51b3c0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L51b3c6.  v0:= temp;
  #L51b3c8.  return v0;
}
procedure `void` `onStart`(`io.reactivex.rxjava3.observers.ResourceCompletableObserver` v0 @kind this) @signature `Lio/reactivex/rxjava3/observers/ResourceCompletableObserver;.onStart:()V` @AccessFlag PROTECTED {
    temp;

  #L51b464.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.observers.ResourceCompletableObserver` v2 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/observers/ResourceCompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L51b478.  v0:= v2.`io.reactivex.rxjava3.observers.ResourceCompletableObserver.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L51b47c.  v1:= constclass @type ^`io.reactivex.rxjava3.observers.ResourceCompletableObserver` @kind object;
  #L51b480.  call temp:= `setOnce`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/util/EndConsumerHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;Ljava/lang/Class;)Z` @kind static;
  #L51b486.  v3:= temp;
  #L51b488.  if v3 == 0 then goto L51b492;
  #L51b48c.  call `onStart`(v2) @signature `Lio/reactivex/rxjava3/observers/ResourceCompletableObserver;.onStart:()V` @kind virtual;
  #L51b492.  return @kind void;
}
