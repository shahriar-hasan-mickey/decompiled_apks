record `io.reactivex.rxjava3.observers.ResourceMaybeObserver` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.observers.ResourceMaybeObserver.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` `io.reactivex.rxjava3.observers.ResourceMaybeObserver.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.observers.ResourceMaybeObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/observers/ResourceMaybeObserver;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L51b4d0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L51b4d6.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L51b4da.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L51b4e0.  v1.`io.reactivex.rxjava3.observers.ResourceMaybeObserver.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L51b4e4.  v0:= new `io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable`;
  #L51b4e8.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.<init>:()V` @kind direct;
  #L51b4ee.  v1.`io.reactivex.rxjava3.observers.ResourceMaybeObserver.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` := v0 @kind object;
  #L51b4f2.  return @kind void;
}
procedure `void` `add`(`io.reactivex.rxjava3.observers.ResourceMaybeObserver` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/observers/ResourceMaybeObserver;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51b504.  v0:= "resource is null" @kind object;
  #L51b508.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51b50e.  v0:= v1.`io.reactivex.rxjava3.observers.ResourceMaybeObserver.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` @kind object;
  #L51b512.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L51b518.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.observers.ResourceMaybeObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/observers/ResourceMaybeObserver;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51b52c.  v0:= v1.`io.reactivex.rxjava3.observers.ResourceMaybeObserver.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L51b530.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L51b536.  v0:= temp;
  #L51b538.  if v0 == 0 then goto L51b546;
  #L51b53c.  v0:= v1.`io.reactivex.rxjava3.observers.ResourceMaybeObserver.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` @kind object;
  #L51b540.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.dispose:()V` @kind virtual;
  #L51b546.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.observers.ResourceMaybeObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/observers/ResourceMaybeObserver;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51b4a4.  v0:= v1.`io.reactivex.rxjava3.observers.ResourceMaybeObserver.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L51b4a8.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L51b4ae.  v0:= temp @kind object;
  #L51b4b0.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L51b4b4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L51b4ba.  v0:= temp;
  #L51b4bc.  return v0;
}
procedure `void` `onStart`(`io.reactivex.rxjava3.observers.ResourceMaybeObserver` v0 @kind this) @signature `Lio/reactivex/rxjava3/observers/ResourceMaybeObserver;.onStart:()V` @AccessFlag PROTECTED {
    temp;

  #L51b558.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.observers.ResourceMaybeObserver` v2 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/observers/ResourceMaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L51b56c.  v0:= v2.`io.reactivex.rxjava3.observers.ResourceMaybeObserver.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L51b570.  v1:= constclass @type ^`io.reactivex.rxjava3.observers.ResourceMaybeObserver` @kind object;
  #L51b574.  call temp:= `setOnce`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/util/EndConsumerHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;Ljava/lang/Class;)Z` @kind static;
  #L51b57a.  v3:= temp;
  #L51b57c.  if v3 == 0 then goto L51b586;
  #L51b580.  call `onStart`(v2) @signature `Lio/reactivex/rxjava3/observers/ResourceMaybeObserver;.onStart:()V` @kind virtual;
  #L51b586.  return @kind void;
}
