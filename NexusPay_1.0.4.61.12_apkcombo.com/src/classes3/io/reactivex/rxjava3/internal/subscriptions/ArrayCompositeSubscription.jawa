record `io.reactivex.rxjava3.internal.subscriptions.ArrayCompositeSubscription` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReferenceArray` @kind class, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
}
global `long` `@@io.reactivex.rxjava3.internal.subscriptions.ArrayCompositeSubscription.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.subscriptions.ArrayCompositeSubscription` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/subscriptions/ArrayCompositeSubscription;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L50fb80.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L50fb86.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.subscriptions.ArrayCompositeSubscription` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscriptions/ArrayCompositeSubscription;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L50fb98.  v0:= 0I;
  #L50fb9a.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L50fba0.  v1:= temp @kind object;
  #L50fba2.  v2:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L50fba6.  if v1 == v2 then goto L50fbee;
  #L50fbaa.  call temp:= `length`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L50fbb0.  v1:= temp;
  #L50fbb2.  if v0 >= v1 then goto L50fbee;
  #L50fbb6.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L50fbbc.  v2:= temp @kind object;
  #L50fbbe.  v2:= (`org.reactivestreams.Subscription`) v2 @kind object;
  #L50fbc2.  v3:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L50fbc6.  if v2 == v3 then goto L50fbe8;
  #L50fbca.  call temp:= `getAndSet`(v4, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.getAndSet:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L50fbd0.  v2:= temp @kind object;
  #L50fbd2.  v2:= (`org.reactivestreams.Subscription`) v2 @kind object;
  #L50fbd6.  v3:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L50fbda.  if v2 == v3 then goto L50fbe8;
  #L50fbde.  if v2 == 0 then goto L50fbe8;
  #L50fbe2.  call `cancel`(v2) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L50fbe8.  v0:= v0 + 1;
  #L50fbec.  goto L50fbb2;
  #L50fbee.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.subscriptions.ArrayCompositeSubscription` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscriptions/ArrayCompositeSubscription;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L50facc.  v0:= 0I;
  #L50face.  call temp:= `get`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L50fad4.  v1:= temp @kind object;
  #L50fad6.  v2:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L50fada.  if v1 != v2 then goto L50fae0;
  #L50fade.  v0:= 1I;
  #L50fae0.  return v0;
}
procedure `org.reactivestreams.Subscription` `replaceResource`(`io.reactivex.rxjava3.internal.subscriptions.ArrayCompositeSubscription` v2 @kind this, `int` v3 , `org.reactivestreams.Subscription` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscriptions/ArrayCompositeSubscription;.replaceResource:(ILorg/reactivestreams/Subscription;)Lorg/reactivestreams/Subscription;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50fb40.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L50fb46.  v0:= temp @kind object;
  #L50fb48.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L50fb4c.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L50fb50.  if v0 != v1 then goto L50fb62;
  #L50fb54.  if v4 == 0 then goto L50fb5e;
  #L50fb58.  call `cancel`(v4) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L50fb5e.  v3:= 0I;
  #L50fb60.  return v3 @kind object;
  #L50fb62.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L50fb68.  v1:= temp;
  #L50fb6a.  if v1 == 0 then goto L50fb40;
  #L50fb6e.  return v0 @kind object;
}
procedure `boolean` `setResource`(`io.reactivex.rxjava3.internal.subscriptions.ArrayCompositeSubscription` v2 @kind this, `int` v3 , `org.reactivestreams.Subscription` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscriptions/ArrayCompositeSubscription;.setResource:(ILorg/reactivestreams/Subscription;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50faf4.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L50fafa.  v0:= temp @kind object;
  #L50fafc.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L50fb00.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L50fb04.  if v0 != v1 then goto L50fb16;
  #L50fb08.  if v4 == 0 then goto L50fb12;
  #L50fb0c.  call `cancel`(v4) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L50fb12.  v3:= 0I;
  #L50fb14.  return v3;
  #L50fb16.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L50fb1c.  v1:= temp;
  #L50fb1e.  if v1 == 0 then goto L50faf4;
  #L50fb22.  if v0 == 0 then goto L50fb2c;
  #L50fb26.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L50fb2c.  v3:= 1I;
  #L50fb2e.  return v3;
}
