record `io.reactivex.rxjava3.internal.observers.SafeMaybeObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeMaybeObserver;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b3a68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b3a6e.  v0.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4b3a72.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/SafeMaybeObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b3a84.  v0:= v1.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.b` @type ^`boolean` @kind boolean;
  #L4b3a88.  if v0 != 0 then goto L4b3aa6;
  #L4b3a8c.  v0:= v1.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4b3a90.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4b3a96.  goto L4b3aa6;
  #L4b3a98.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b3a9a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3aa0.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3aa6.  return @kind void;
  catch `java.lang.Throwable` @[L4b3a8c..L4b3a96] goto L4b3a98;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeMaybeObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b3ac4.  v0:= v4.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.b` @type ^`boolean` @kind boolean;
  #L4b3ac8.  if v0 == 0 then goto L4b3ad4;
  #L4b3acc.  call `onError`(v5) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3ad2.  goto L4b3b0a;
  #L4b3ad4.  v0:= v4.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4b3ad8.  call `onError`(v0, v5) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b3ade.  goto L4b3b0a;
  #L4b3ae0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b3ae2.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3ae8.  v1:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4b3aec.  v2:= 2I;
  #L4b3aee.  v2:= new `java.lang.Throwable`[v2];
  #L4b3af2.  v3:= 0I;
  #L4b3af4.  v2[v3]:= v5 @kind object;
  #L4b3af8.  v5:= 1I;
  #L4b3afa.  v2[v5]:= v0 @kind object;
  #L4b3afe.  call `<init>`(v1, v2) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4b3b04.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3b0a.  return @kind void;
  catch `java.lang.Throwable` @[L4b3ad4..L4b3ade] goto L4b3ae0;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver` v2 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeMaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b3b28.  v0:= v2.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4b3b2c.  call `onSubscribe`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b3b32.  goto L4b3b4e;
  #L4b3b34.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b3b36.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3b3c.  v1:= 1I;
  #L4b3b3e.  v2.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.b` @type ^`boolean` := v1 @kind boolean;
  #L4b3b42.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b3b48.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3b4e.  return @kind void;
  catch `java.lang.Throwable` @[L4b3b28..L4b3b32] goto L4b3b34;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeMaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b3b6c.  v0:= v1.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.b` @type ^`boolean` @kind boolean;
  #L4b3b70.  if v0 != 0 then goto L4b3b8e;
  #L4b3b74.  v0:= v1.`io.reactivex.rxjava3.internal.observers.SafeMaybeObserver.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4b3b78.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4b3b7e.  goto L4b3b8e;
  #L4b3b80.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b3b82.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3b88.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3b8e.  return @kind void;
  catch `java.lang.Throwable` @[L4b3b74..L4b3b7e] goto L4b3b80;
}
