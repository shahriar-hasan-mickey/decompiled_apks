record `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.CountDownLatch` @kind class, `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.core.CompletableObserver` @kind interface, `io.reactivex.rxjava3.core.MaybeObserver` @kind interface {
  `java.lang.Object` `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.a` @AccessFlag ;
  `java.lang.Throwable` `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.b` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.d` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4b21c0.  v0:= 1I;
  #L4b21c2.  call `<init>`(v1, v0) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L4b21c8.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.a:()V` @AccessFlag  {
    temp;
    v0;

  #L4b2278.  v0:= 1I;
  #L4b227a.  v1.`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.d` @type ^`boolean` := v0 @kind boolean;
  #L4b227e.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4b2282.  if v0 == 0 then goto L4b228c;
  #L4b2286.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b228c.  return @kind void;
}
procedure `boolean` `blockingAwait`(`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver` v5 @kind this, `long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.blockingAwait:(JLjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b2068.  call temp:= `getCount`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.getCount:()J` @kind virtual;
  #L4b206e.  v0:= temp @kind wide;
  #L4b2070.  v2:= 0L;
  #L4b2074.  v4:= lcmp(v0, v2);
  #L4b2078.  if v4 == 0 then goto L4b20aa;
  #L4b207c.  call `verifyNonBlocking`() @signature `Lio/reactivex/rxjava3/internal/util/BlockingHelper;.verifyNonBlocking:()V` @kind static;
  #L4b2082.  call temp:= `await`(v5, v6, v8) @signature `Ljava/util/concurrent/CountDownLatch;.await:(JLjava/util/concurrent/TimeUnit;)Z` @kind virtual;
  #L4b2088.  v6:= temp;
  #L4b208a.  if v6 != 0 then goto L4b20aa;
  #L4b208e.  call `a`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.a:()V` @kind virtual;
  #L4b2094.  v6:= 0I;
  #L4b2096.  return v6;
  #L4b2098.  v6:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L4b209a.  call `a`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.a:()V` @kind virtual;
  #L4b20a0.  call temp:= `wrapOrThrow`(v6) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4b20a6.  v6:= temp @kind object;
  #L4b20a8.  throw v6;
  #L4b20aa.  v6:= v5.`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.b` @type ^`java.lang.Throwable` @kind object;
  #L4b20ae.  if v6 != 0 then goto L4b20b6;
  #L4b20b2.  v6:= 1I;
  #L4b20b4.  return v6;
  #L4b20b6.  call temp:= `wrapOrThrow`(v6) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4b20bc.  v6:= temp @kind object;
  #L4b20be.  throw v6;
  catch `java.lang.InterruptedException` @[L4b207c..L4b2094] goto L4b2098;
}
procedure `void` `blockingConsume`(`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver` v5 @kind this, `io.reactivex.rxjava3.functions.Consumer` v6 @kind object, `io.reactivex.rxjava3.functions.Consumer` v7 @kind object, `io.reactivex.rxjava3.functions.Action` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b21dc.  call temp:= `getCount`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.getCount:()J` @kind virtual;
  #L4b21e2.  v0:= temp @kind wide;
  #L4b21e4.  v2:= 0L;
  #L4b21e8.  v4:= lcmp(v0, v2);
  #L4b21ec.  if v4 == 0 then goto L4b220e;
  #L4b21f0.  call `verifyNonBlocking`() @signature `Lio/reactivex/rxjava3/internal/util/BlockingHelper;.verifyNonBlocking:()V` @kind static;
  #L4b21f6.  call `await`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L4b21fc.  goto L4b220e;
  #L4b21fe.  v6:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L4b2200.  call `a`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.a:()V` @kind virtual;
  #L4b2206.  call `accept`(v7, v6) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4b220c.  return @kind void;
  #L4b220e.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.b` @type ^`java.lang.Throwable` @kind object;
  #L4b2212.  if v0 == 0 then goto L4b221e;
  #L4b2216.  call `accept`(v7, v0) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4b221c.  return @kind void;
  #L4b221e.  v7:= v5.`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.a` @type ^`java.lang.Object` @kind object;
  #L4b2222.  if v7 == 0 then goto L4b222e;
  #L4b2226.  call `accept`(v6, v7) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4b222c.  goto L4b2244;
  #L4b222e.  call `run`(v8) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4b2234.  goto L4b2244;
  #L4b2236.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b2238.  call `throwIfFatal`(v6) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b223e.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b2244.  return @kind void;
  catch `java.lang.Throwable` @[L4b21dc..L4b21e4] goto L4b2236;
  catch `java.lang.InterruptedException` @[L4b21f0..L4b21fc] goto L4b21fe;
  catch `java.lang.Throwable` @[L4b21f0..L4b21fc] goto L4b2236;
  catch `java.lang.Throwable` @[L4b2200..L4b2234] goto L4b2236;
}
procedure `java.lang.Object` `blockingGet`(`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.blockingGet:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b20e0.  call temp:= `getCount`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.getCount:()J` @kind virtual;
  #L4b20e6.  v0:= temp @kind wide;
  #L4b20e8.  v2:= 0L;
  #L4b20ec.  v4:= lcmp(v0, v2);
  #L4b20f0.  if v4 == 0 then goto L4b2114;
  #L4b20f4.  call `verifyNonBlocking`() @signature `Lio/reactivex/rxjava3/internal/util/BlockingHelper;.verifyNonBlocking:()V` @kind static;
  #L4b20fa.  call `await`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L4b2100.  goto L4b2114;
  #L4b2102.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L4b2104.  call `a`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.a:()V` @kind virtual;
  #L4b210a.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4b2110.  v0:= temp @kind object;
  #L4b2112.  throw v0;
  #L4b2114.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.b` @type ^`java.lang.Throwable` @kind object;
  #L4b2118.  if v0 != 0 then goto L4b2122;
  #L4b211c.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.a` @type ^`java.lang.Object` @kind object;
  #L4b2120.  return v0 @kind object;
  #L4b2122.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4b2128.  v0:= temp @kind object;
  #L4b212a.  throw v0;
  catch `java.lang.InterruptedException` @[L4b20f4..L4b2100] goto L4b2102;
}
procedure `java.lang.Object` `blockingGet`(`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.blockingGet:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b214c.  call temp:= `getCount`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.getCount:()J` @kind virtual;
  #L4b2152.  v0:= temp @kind wide;
  #L4b2154.  v2:= 0L;
  #L4b2158.  v4:= lcmp(v0, v2);
  #L4b215c.  if v4 == 0 then goto L4b2180;
  #L4b2160.  call `verifyNonBlocking`() @signature `Lio/reactivex/rxjava3/internal/util/BlockingHelper;.verifyNonBlocking:()V` @kind static;
  #L4b2166.  call `await`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L4b216c.  goto L4b2180;
  #L4b216e.  v6:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L4b2170.  call `a`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.a:()V` @kind virtual;
  #L4b2176.  call temp:= `wrapOrThrow`(v6) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4b217c.  v6:= temp @kind object;
  #L4b217e.  throw v6;
  #L4b2180.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.b` @type ^`java.lang.Throwable` @kind object;
  #L4b2184.  if v0 != 0 then goto L4b2194;
  #L4b2188.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.a` @type ^`java.lang.Object` @kind object;
  #L4b218c.  if v0 == 0 then goto L4b2192;
  #L4b2190.  v6:= v0 @kind object;
  #L4b2192.  return v6 @kind object;
  #L4b2194.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4b219a.  v6:= temp @kind object;
  #L4b219c.  throw v6;
  catch `java.lang.InterruptedException` @[L4b2160..L4b216c] goto L4b216e;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L4b22a0.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L4b22a6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L4b22b8.  v0.`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.b` @type ^`java.lang.Throwable` := v1 @kind object;
  #L4b22bc.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L4b22c2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b22d4.  v1.`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4b22d8.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.d` @type ^`boolean` @kind boolean;
  #L4b22dc.  if v0 == 0 then goto L4b22e6;
  #L4b22e0.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b22e6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4b22f8.  v0.`io.reactivex.rxjava3.internal.observers.BlockingMultiObserver.a` @type ^`java.lang.Object` := v1 @kind object;
  #L4b22fc.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L4b2302.  return @kind void;
}
