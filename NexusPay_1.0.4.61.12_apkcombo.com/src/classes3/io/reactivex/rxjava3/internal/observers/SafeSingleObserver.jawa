record `io.reactivex.rxjava3.internal.observers.SafeSingleObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.SingleObserver` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.observers.SafeSingleObserver.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.observers.SafeSingleObserver.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.observers.SafeSingleObserver` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeSingleObserver;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b3bac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b3bb2.  v0.`io.reactivex.rxjava3.internal.observers.SafeSingleObserver.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4b3bb6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.observers.SafeSingleObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeSingleObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b3bc8.  v0:= v4.`io.reactivex.rxjava3.internal.observers.SafeSingleObserver.b` @type ^`boolean` @kind boolean;
  #L4b3bcc.  if v0 == 0 then goto L4b3bd8;
  #L4b3bd0.  call `onError`(v5) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3bd6.  goto L4b3c0e;
  #L4b3bd8.  v0:= v4.`io.reactivex.rxjava3.internal.observers.SafeSingleObserver.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b3bdc.  call `onError`(v0, v5) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b3be2.  goto L4b3c0e;
  #L4b3be4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b3be6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3bec.  v1:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4b3bf0.  v2:= 2I;
  #L4b3bf2.  v2:= new `java.lang.Throwable`[v2];
  #L4b3bf6.  v3:= 0I;
  #L4b3bf8.  v2[v3]:= v5 @kind object;
  #L4b3bfc.  v5:= 1I;
  #L4b3bfe.  v2[v5]:= v0 @kind object;
  #L4b3c02.  call `<init>`(v1, v2) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4b3c08.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3c0e.  return @kind void;
  catch `java.lang.Throwable` @[L4b3bd8..L4b3be2] goto L4b3be4;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.observers.SafeSingleObserver` v2 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeSingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b3c2c.  v0:= v2.`io.reactivex.rxjava3.internal.observers.SafeSingleObserver.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b3c30.  call `onSubscribe`(v0, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b3c36.  goto L4b3c52;
  #L4b3c38.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b3c3a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3c40.  v1:= 1I;
  #L4b3c42.  v2.`io.reactivex.rxjava3.internal.observers.SafeSingleObserver.b` @type ^`boolean` := v1 @kind boolean;
  #L4b3c46.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b3c4c.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3c52.  return @kind void;
  catch `java.lang.Throwable` @[L4b3c2c..L4b3c36] goto L4b3c38;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.observers.SafeSingleObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/SafeSingleObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b3c70.  v0:= v1.`io.reactivex.rxjava3.internal.observers.SafeSingleObserver.b` @type ^`boolean` @kind boolean;
  #L4b3c74.  if v0 != 0 then goto L4b3c92;
  #L4b3c78.  v0:= v1.`io.reactivex.rxjava3.internal.observers.SafeSingleObserver.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b3c7c.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4b3c82.  goto L4b3c92;
  #L4b3c84.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b3c86.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3c8c.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3c92.  return @kind void;
  catch `java.lang.Throwable` @[L4b3c78..L4b3c82] goto L4b3c84;
}
