record `io.reactivex.rxjava3.internal.observers.LambdaObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `io.reactivex.rxjava3.observers.LambdaConsumerIntrospection` @kind interface {
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.observers.LambdaObserver.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.observers.LambdaObserver.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.observers.LambdaObserver.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.observers.LambdaObserver.d` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.observers.LambdaObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v0 @kind this, `io.reactivex.rxjava3.functions.Consumer` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.<init>:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b3538.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4b353e.  v0.`io.reactivex.rxjava3.internal.observers.LambdaObserver.a` @type ^`io.reactivex.rxjava3.functions.Consumer` := v1 @kind object;
  #L4b3542.  v0.`io.reactivex.rxjava3.internal.observers.LambdaObserver.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L4b3546.  v0.`io.reactivex.rxjava3.internal.observers.LambdaObserver.c` @type ^`io.reactivex.rxjava3.functions.Action` := v3 @kind object;
  #L4b354a.  v0.`io.reactivex.rxjava3.internal.observers.LambdaObserver.d` @type ^`io.reactivex.rxjava3.functions.Consumer` := v4 @kind object;
  #L4b354e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4b3560.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b3566.  return @kind void;
}
procedure `boolean` `hasCustomOnError`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.hasCustomOnError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b34ec.  v0:= v2.`io.reactivex.rxjava3.internal.observers.LambdaObserver.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4b34f0.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4b34f4.  if v0 == v1 then goto L4b34fc;
  #L4b34f8.  v0:= 1I;
  #L4b34fa.  goto L4b34fe;
  #L4b34fc.  v0:= 0I;
  #L4b34fe.  return v0;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b3510.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b3516.  v0:= temp @kind object;
  #L4b3518.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4b351c.  if v0 != v1 then goto L4b3524;
  #L4b3520.  v0:= 1I;
  #L4b3522.  goto L4b3526;
  #L4b3524.  v0:= 0I;
  #L4b3526.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b3578.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.isDisposed:()Z` @kind virtual;
  #L4b357e.  v0:= temp;
  #L4b3580.  if v0 != 0 then goto L4b35a8;
  #L4b3584.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4b3588.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4b358e.  v0:= v1.`io.reactivex.rxjava3.internal.observers.LambdaObserver.c` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4b3592.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4b3598.  goto L4b35a8;
  #L4b359a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b359c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b35a2.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b35a8.  return @kind void;
  catch `java.lang.Throwable` @[L4b358e..L4b3598] goto L4b359a;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b35c8.  call temp:= `isDisposed`(v4) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.isDisposed:()Z` @kind virtual;
  #L4b35ce.  v0:= temp;
  #L4b35d0.  if v0 != 0 then goto L4b3616;
  #L4b35d4.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4b35d8.  call `lazySet`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4b35de.  v0:= v4.`io.reactivex.rxjava3.internal.observers.LambdaObserver.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4b35e2.  call `accept`(v0, v5) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4b35e8.  goto L4b361c;
  #L4b35ea.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b35ec.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b35f2.  v1:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4b35f6.  v2:= 2I;
  #L4b35f8.  v2:= new `java.lang.Throwable`[v2];
  #L4b35fc.  v3:= 0I;
  #L4b35fe.  v2[v3]:= v5 @kind object;
  #L4b3602.  v5:= 1I;
  #L4b3604.  v2[v5]:= v0 @kind object;
  #L4b3608.  call `<init>`(v1, v2) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4b360e.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3614.  goto L4b361c;
  #L4b3616.  call `onError`(v5) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b361c.  return @kind void;
  catch `java.lang.Throwable` @[L4b35de..L4b35e8] goto L4b35ea;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b363c.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.isDisposed:()Z` @kind virtual;
  #L4b3642.  v0:= temp;
  #L4b3644.  if v0 != 0 then goto L4b3674;
  #L4b3648.  v0:= v1.`io.reactivex.rxjava3.internal.observers.LambdaObserver.a` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4b364c.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4b3652.  goto L4b3674;
  #L4b3654.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b3656.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b365c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b3662.  v0:= temp @kind object;
  #L4b3664.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4b3668.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b366e.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b3674.  return @kind void;
  catch `java.lang.Throwable` @[L4b3648..L4b3652] goto L4b3654;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.observers.LambdaObserver` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b3694.  call temp:= `setOnce`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b369a.  v0:= temp;
  #L4b369c.  if v0 == 0 then goto L4b36c0;
  #L4b36a0.  v0:= v1.`io.reactivex.rxjava3.internal.observers.LambdaObserver.d` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4b36a4.  call `accept`(v0, v1) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4b36aa.  goto L4b36c0;
  #L4b36ac.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b36ae.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b36b4.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4b36ba.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b36c0.  return @kind void;
  catch `java.lang.Throwable` @[L4b36a0..L4b36aa] goto L4b36ac;
}
