record `io.reactivex.rxjava3.internal.observers.BlockingObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `java.util.Queue` `io.reactivex.rxjava3.internal.observers.BlockingObserver.a` @AccessFlag FINAL;
}
global `java.lang.Object` `@@io.reactivex.rxjava3.internal.observers.BlockingObserver.TERMINATED` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@io.reactivex.rxjava3.internal.observers.BlockingObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/observers/BlockingObserver;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4b233c.  v0:= new `java.lang.Object`;
  #L4b2340.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b2346.  `@@io.reactivex.rxjava3.internal.observers.BlockingObserver.TERMINATED` @type ^`java.lang.Object` := v0 @kind object;
  #L4b234a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.observers.BlockingObserver` v0 @kind this, `java.util.Queue` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingObserver;.<init>:(Ljava/util/Queue;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b235c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4b2362.  v0.`io.reactivex.rxjava3.internal.observers.BlockingObserver.a` @type ^`java.util.Queue` := v1 @kind object;
  #L4b2366.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.observers.BlockingObserver` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b2378.  call temp:= `dispose`(v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b237e.  v0:= temp;
  #L4b2380.  if v0 == 0 then goto L4b2392;
  #L4b2384.  v0:= v2.`io.reactivex.rxjava3.internal.observers.BlockingObserver.a` @type ^`java.util.Queue` @kind object;
  #L4b2388.  v1:= `@@io.reactivex.rxjava3.internal.observers.BlockingObserver.TERMINATED` @type ^`java.lang.Object` @kind object;
  #L4b238c.  call temp:= `offer`(v0, v1) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4b2392.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.observers.BlockingObserver` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b2314.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b231a.  v0:= temp @kind object;
  #L4b231c.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4b2320.  if v0 != v1 then goto L4b2328;
  #L4b2324.  v0:= 1I;
  #L4b2326.  goto L4b232a;
  #L4b2328.  v0:= 0I;
  #L4b232a.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.observers.BlockingObserver` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b23a4.  v0:= v2.`io.reactivex.rxjava3.internal.observers.BlockingObserver.a` @type ^`java.util.Queue` @kind object;
  #L4b23a8.  call temp:= `complete`() @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.complete:()Ljava/lang/Object;` @kind static;
  #L4b23ae.  v1:= temp @kind object;
  #L4b23b0.  call temp:= `offer`(v0, v1) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4b23b6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.observers.BlockingObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b23c8.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BlockingObserver.a` @type ^`java.util.Queue` @kind object;
  #L4b23cc.  call temp:= `error`(v2) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L4b23d2.  v2:= temp @kind object;
  #L4b23d4.  call temp:= `offer`(v0, v2) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4b23da.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.observers.BlockingObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b23ec.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BlockingObserver.a` @type ^`java.util.Queue` @kind object;
  #L4b23f0.  call temp:= `next`(v2) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4b23f6.  v2:= temp @kind object;
  #L4b23f8.  call temp:= `offer`(v0, v2) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4b23fe.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.observers.BlockingObserver` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4b2410.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b2416.  return @kind void;
}
