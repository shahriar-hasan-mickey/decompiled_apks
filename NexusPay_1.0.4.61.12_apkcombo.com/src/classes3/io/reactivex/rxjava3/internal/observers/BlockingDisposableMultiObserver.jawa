record `io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.CountDownLatch` @kind class, `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.core.CompletableObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `java.lang.Object` `io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.a` @AccessFlag ;
  `java.lang.Throwable` `io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.b` @AccessFlag ;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4b1d38.  v0:= 1I;
  #L4b1d3a.  call `<init>`(v1, v0) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L4b1d40.  v0:= new `io.reactivex.rxjava3.internal.disposables.SequentialDisposable`;
  #L4b1d44.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L4b1d4a.  v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v0 @kind object;
  #L4b1d4e.  return @kind void;
}
procedure `void` `blockingConsume`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v5 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b1d60.  call temp:= `getCount`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.getCount:()J` @kind virtual;
  #L4b1d66.  v0:= temp @kind wide;
  #L4b1d68.  v2:= 0L;
  #L4b1d6c.  v4:= lcmp(v0, v2);
  #L4b1d70.  if v4 == 0 then goto L4b1d92;
  #L4b1d74.  call `verifyNonBlocking`() @signature `Lio/reactivex/rxjava3/internal/util/BlockingHelper;.verifyNonBlocking:()V` @kind static;
  #L4b1d7a.  call `await`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L4b1d80.  goto L4b1d92;
  #L4b1d82.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L4b1d84.  call `dispose`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.dispose:()V` @kind virtual;
  #L4b1d8a.  call `onError`(v6, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b1d90.  return @kind void;
  #L4b1d92.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.isDisposed:()Z` @kind virtual;
  #L4b1d98.  v0:= temp;
  #L4b1d9a.  if v0 == 0 then goto L4b1da0;
  #L4b1d9e.  return @kind void;
  #L4b1da0.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.b` @type ^`java.lang.Throwable` @kind object;
  #L4b1da4.  if v0 == 0 then goto L4b1db0;
  #L4b1da8.  call `onError`(v6, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b1dae.  goto L4b1db6;
  #L4b1db0.  call `onComplete`(v6) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L4b1db6.  return @kind void;
  catch `java.lang.InterruptedException` @[L4b1d74..L4b1d80] goto L4b1d82;
}
procedure `void` `blockingConsume`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v5 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b1dd8.  call temp:= `getCount`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.getCount:()J` @kind virtual;
  #L4b1dde.  v0:= temp @kind wide;
  #L4b1de0.  v2:= 0L;
  #L4b1de4.  v4:= lcmp(v0, v2);
  #L4b1de8.  if v4 == 0 then goto L4b1e0a;
  #L4b1dec.  call `verifyNonBlocking`() @signature `Lio/reactivex/rxjava3/internal/util/BlockingHelper;.verifyNonBlocking:()V` @kind static;
  #L4b1df2.  call `await`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L4b1df8.  goto L4b1e0a;
  #L4b1dfa.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L4b1dfc.  call `dispose`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.dispose:()V` @kind virtual;
  #L4b1e02.  call `onError`(v6, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b1e08.  return @kind void;
  #L4b1e0a.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.isDisposed:()Z` @kind virtual;
  #L4b1e10.  v0:= temp;
  #L4b1e12.  if v0 == 0 then goto L4b1e18;
  #L4b1e16.  return @kind void;
  #L4b1e18.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.b` @type ^`java.lang.Throwable` @kind object;
  #L4b1e1c.  if v0 == 0 then goto L4b1e28;
  #L4b1e20.  call `onError`(v6, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b1e26.  goto L4b1e3e;
  #L4b1e28.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.a` @type ^`java.lang.Object` @kind object;
  #L4b1e2c.  if v0 != 0 then goto L4b1e38;
  #L4b1e30.  call `onComplete`(v6) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4b1e36.  goto L4b1e3e;
  #L4b1e38.  call `onSuccess`(v6, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4b1e3e.  return @kind void;
  catch `java.lang.InterruptedException` @[L4b1dec..L4b1df8] goto L4b1dfa;
}
procedure `void` `blockingConsume`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v5 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b1e60.  call temp:= `getCount`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.getCount:()J` @kind virtual;
  #L4b1e66.  v0:= temp @kind wide;
  #L4b1e68.  v2:= 0L;
  #L4b1e6c.  v4:= lcmp(v0, v2);
  #L4b1e70.  if v4 == 0 then goto L4b1e92;
  #L4b1e74.  call `verifyNonBlocking`() @signature `Lio/reactivex/rxjava3/internal/util/BlockingHelper;.verifyNonBlocking:()V` @kind static;
  #L4b1e7a.  call `await`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L4b1e80.  goto L4b1e92;
  #L4b1e82.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L4b1e84.  call `dispose`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.dispose:()V` @kind virtual;
  #L4b1e8a.  call `onError`(v6, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b1e90.  return @kind void;
  #L4b1e92.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.isDisposed:()Z` @kind virtual;
  #L4b1e98.  v0:= temp;
  #L4b1e9a.  if v0 == 0 then goto L4b1ea0;
  #L4b1e9e.  return @kind void;
  #L4b1ea0.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.b` @type ^`java.lang.Throwable` @kind object;
  #L4b1ea4.  if v0 == 0 then goto L4b1eb0;
  #L4b1ea8.  call `onError`(v6, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b1eae.  goto L4b1eba;
  #L4b1eb0.  v0:= v5.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.a` @type ^`java.lang.Object` @kind object;
  #L4b1eb4.  call `onSuccess`(v6, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4b1eba.  return @kind void;
  catch `java.lang.InterruptedException` @[L4b1e74..L4b1e80] goto L4b1e82;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1edc.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4b1ee0.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4b1ee6.  call `countDown`(v1) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L4b1eec.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1d18.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4b1d1c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.isDisposed:()Z` @kind virtual;
  #L4b1d22.  v0:= temp;
  #L4b1d24.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b1f00.  v0:= v2.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4b1f04.  call temp:= `a`() @signature `Lio/reactivex/rxjava3/disposables/a;.a:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L4b1f0a.  v1:= temp @kind object;
  #L4b1f0c.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4b1f12.  call `countDown`(v2) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L4b1f18.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1f2c.  v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.b` @type ^`java.lang.Throwable` := v2 @kind object;
  #L4b1f30.  v2:= v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4b1f34.  call temp:= `a`() @signature `Lio/reactivex/rxjava3/disposables/a;.a:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L4b1f3a.  v0:= temp @kind object;
  #L4b1f3c.  call `lazySet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4b1f42.  call `countDown`(v1) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L4b1f48.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1f5c.  v0:= v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4b1f60.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b1f66.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1f78.  v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.a` @type ^`java.lang.Object` := v2 @kind object;
  #L4b1f7c.  v2:= v1.`io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4b1f80.  call temp:= `a`() @signature `Lio/reactivex/rxjava3/disposables/a;.a:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L4b1f86.  v0:= temp @kind object;
  #L4b1f88.  call `lazySet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4b1f8e.  call `countDown`(v1) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L4b1f94.  return @kind void;
}
