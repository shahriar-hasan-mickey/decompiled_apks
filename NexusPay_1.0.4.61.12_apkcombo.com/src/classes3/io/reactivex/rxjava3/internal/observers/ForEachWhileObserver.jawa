record `io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.d` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` v0 @kind this, `io.reactivex.rxjava3.functions.Predicate` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.<init>:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b2c28.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4b2c2e.  v0.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.a` @type ^`io.reactivex.rxjava3.functions.Predicate` := v1 @kind object;
  #L4b2c32.  v0.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L4b2c36.  v0.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.c` @type ^`io.reactivex.rxjava3.functions.Action` := v3 @kind object;
  #L4b2c3a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4b2c4c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b2c52.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2c00.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b2c06.  v0:= temp @kind object;
  #L4b2c08.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4b2c0c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b2c12.  v0:= temp;
  #L4b2c14.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2c64.  v0:= v1.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.d` @type ^`boolean` @kind boolean;
  #L4b2c68.  if v0 == 0 then goto L4b2c6e;
  #L4b2c6c.  return @kind void;
  #L4b2c6e.  v0:= 1I;
  #L4b2c70.  v1.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.d` @type ^`boolean` := v0 @kind boolean;
  #L4b2c74.  v0:= v1.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.c` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4b2c78.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4b2c7e.  goto L4b2c8e;
  #L4b2c80.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b2c82.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b2c88.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b2c8e.  return @kind void;
  catch `java.lang.Throwable` @[L4b2c74..L4b2c7e] goto L4b2c80;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b2cac.  v0:= v5.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.d` @type ^`boolean` @kind boolean;
  #L4b2cb0.  if v0 == 0 then goto L4b2cbc;
  #L4b2cb4.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b2cba.  return @kind void;
  #L4b2cbc.  v0:= 1I;
  #L4b2cbe.  v5.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.d` @type ^`boolean` := v0 @kind boolean;
  #L4b2cc2.  v1:= v5.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4b2cc6.  call `accept`(v1, v6) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4b2ccc.  goto L4b2cf6;
  #L4b2cce.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b2cd0.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b2cd6.  v2:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4b2cda.  v3:= 2I;
  #L4b2cdc.  v3:= new `java.lang.Throwable`[v3];
  #L4b2ce0.  v4:= 0I;
  #L4b2ce2.  v3[v4]:= v6 @kind object;
  #L4b2ce6.  v3[v0]:= v1 @kind object;
  #L4b2cea.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4b2cf0.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b2cf6.  return @kind void;
  catch `java.lang.Throwable` @[L4b2cc2..L4b2ccc] goto L4b2cce;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2d14.  v0:= v1.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.d` @type ^`boolean` @kind boolean;
  #L4b2d18.  if v0 == 0 then goto L4b2d1e;
  #L4b2d1c.  return @kind void;
  #L4b2d1e.  v0:= v1.`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver.a` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4b2d22.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4b2d28.  v2:= temp;
  #L4b2d2a.  if v2 != 0 then goto L4b2d3a;
  #L4b2d2e.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.dispose:()V` @kind virtual;
  #L4b2d34.  call `onComplete`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.onComplete:()V` @kind virtual;
  #L4b2d3a.  return @kind void;
  #L4b2d3c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b2d3e.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b2d44.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.dispose:()V` @kind virtual;
  #L4b2d4a.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b2d50.  return @kind void;
  catch `java.lang.Throwable` @[L4b2d1e..L4b2d2a] goto L4b2d3c;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.observers.ForEachWhileObserver` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4b2d70.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b2d76.  return @kind void;
}
