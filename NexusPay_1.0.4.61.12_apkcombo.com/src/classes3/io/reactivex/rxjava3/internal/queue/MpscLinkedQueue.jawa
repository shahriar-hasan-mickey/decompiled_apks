record `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L50a538.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50a53e.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L50a542.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L50a548.  v1.`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L50a54c.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L50a550.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L50a556.  v1.`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L50a55a.  v0:= new `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a`;
  #L50a55e.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;.<init>:()V` @kind direct;
  #L50a564.  call `g`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L50a56a.  call temp:= `h`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.h:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L50a570.  return @kind void;
}
procedure `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a` `a`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.a:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L50a444.  v0:= v1.`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50a448.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L50a44e.  v0:= temp @kind object;
  #L50a450.  v0:= (`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a`) v0 @kind object;
  #L50a454.  return v0 @kind object;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50a584.  call temp:= `poll`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L50a58a.  v0:= temp @kind object;
  #L50a58c.  if v0 == 0 then goto L50a59e;
  #L50a590.  call temp:= `isEmpty`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L50a596.  v0:= temp;
  #L50a598.  if v0 != 0 then goto L50a59e;
  #L50a59c.  goto L50a584;
  #L50a59e.  return @kind void;
}
procedure `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a` `e`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.e:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L50a468.  v0:= v1.`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50a46c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L50a472.  v0:= temp @kind object;
  #L50a474.  v0:= (`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a`) v0 @kind object;
  #L50a478.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a` `f`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.f:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L50a48c.  v0:= v1.`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50a490.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L50a496.  v0:= temp @kind object;
  #L50a498.  v0:= (`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a`) v0 @kind object;
  #L50a49c.  return v0 @kind object;
}
procedure `void` `g`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this, `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)V` @AccessFlag  {
    temp;
    v0;

  #L50a5b0.  v0:= v1.`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50a5b4.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L50a5ba.  return @kind void;
}
procedure `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a` `h`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this, `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.h:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L50a4b0.  v0:= v1.`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50a4b4.  call temp:= `getAndSet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L50a4ba.  v2:= temp @kind object;
  #L50a4bc.  v2:= (`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a`) v2 @kind object;
  #L50a4c0.  return v2 @kind object;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50a3b8.  call temp:= `e`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.e:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L50a3be.  v0:= temp @kind object;
  #L50a3c0.  call temp:= `f`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.f:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L50a3c6.  v1:= temp @kind object;
  #L50a3c8.  if v0 != v1 then goto L50a3d0;
  #L50a3cc.  v0:= 1I;
  #L50a3ce.  goto L50a3d2;
  #L50a3d0.  v0:= 0I;
  #L50a3d2.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50a3e4.  if v2 == 0 then goto L50a404;
  #L50a3e8.  v0:= new `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$a`;
  #L50a3ec.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L50a3f2.  call temp:= `h`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.h:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L50a3f8.  v2:= temp @kind object;
  #L50a3fa.  call `d`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;.d:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L50a400.  v2:= 1I;
  #L50a402.  return v2;
  #L50a404.  v2:= new `java.lang.NullPointerException`;
  #L50a408.  v0:= "Null is not a valid element" @kind object;
  #L50a40c.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50a412.  throw v2;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L50a424.  call temp:= `offer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L50a42a.  call temp:= `offer`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L50a430.  v1:= 1I;
  #L50a432.  return v1;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.queue.MpscLinkedQueue` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50a4d4.  call temp:= `a`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.a:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L50a4da.  v0:= temp @kind object;
  #L50a4dc.  call temp:= `c`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;.c:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L50a4e2.  v1:= temp @kind object;
  #L50a4e4.  if v1 == 0 then goto L50a4f8;
  #L50a4e8.  call temp:= `a`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;.a:()Ljava/lang/Object;` @kind virtual;
  #L50a4ee.  v0:= temp @kind object;
  #L50a4f0.  call `g`(v2, v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L50a4f6.  return v0 @kind object;
  #L50a4f8.  call temp:= `f`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.f:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L50a4fe.  v1:= temp @kind object;
  #L50a500.  if v0 == v1 then goto L50a522;
  #L50a504.  call temp:= `c`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;.c:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L50a50a.  v1:= temp @kind object;
  #L50a50c.  if v1 != 0 then goto L50a512;
  #L50a510.  goto L50a504;
  #L50a512.  call temp:= `a`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;.a:()Ljava/lang/Object;` @kind virtual;
  #L50a518.  v0:= temp @kind object;
  #L50a51a.  call `g`(v2, v1) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L50a520.  return v0 @kind object;
  #L50a522.  v0:= 0I;
  #L50a524.  return v0 @kind object;
}
