record `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind interface {
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.b` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.c` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReferenceArray` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.e` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.f` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReferenceArray` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.g` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.h` @AccessFlag FINAL;
}
global `int` `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.i` @AccessFlag STATIC_FINAL;
global `java.lang.Object` `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.j` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L50ac90.  v0:= "jctools.spsc.max.lookahead.step" @kind object;
  #L50ac94.  v1:= 4096I;
  #L50ac98.  call temp:= `getInteger`(v0, v1) @signature `Ljava/lang/Integer;.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L50ac9e.  v0:= temp @kind object;
  #L50aca0.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L50aca6.  v0:= temp;
  #L50aca8.  `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.i` @type ^`int` := v0;
  #L50acac.  v0:= new `java.lang.Object`;
  #L50acb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50acb6.  `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` := v0 @kind object;
  #L50acba.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L50accc.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50acd2.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L50acd6.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L50acdc.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.a` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L50ace0.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L50ace4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L50acea.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.h` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L50acee.  v0:= 8I;
  #L50acf2.  call temp:= `max`(v0, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L50acf8.  v4:= temp;
  #L50acfa.  call temp:= `roundToPowerOfTwo`(v4) @signature `Lio/reactivex/rxjava3/internal/util/Pow2;.roundToPowerOfTwo:(I)I` @kind static;
  #L50ad00.  v4:= temp;
  #L50ad02.  v0:= v4 + -1;
  #L50ad06.  v1:= new `java.util.concurrent.atomic.AtomicReferenceArray`;
  #L50ad0a.  v2:= v4 + 1;
  #L50ad0e.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L50ad14.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v1 @kind object;
  #L50ad18.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.d` @type ^`int` := v0;
  #L50ad1c.  call `a`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.a:(I)V` @kind direct;
  #L50ad22.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v1 @kind object;
  #L50ad26.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.f` @type ^`int` := v0;
  #L50ad2a.  v0:= v0 + -1;
  #L50ad2e.  v0:= (`long`) v0 @kind i2l;
  #L50ad30.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.c` @type ^`long` := v0 @kind wide;
  #L50ad34.  v0:= 0L;
  #L50ad38.  call `s`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L50ad3e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.a:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L50ad50.  v2:= v2 / 4;
  #L50ad54.  v0:= `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.i` @type ^`int`;
  #L50ad58.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L50ad5e.  v2:= temp;
  #L50ad60.  v1.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.b` @type ^`int` := v2;
  #L50ad64.  return @kind void;
}
procedure `int` `e`(`int` v0 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.e:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L50aa28.  return v0;
}
procedure `int` `f`(`long` v0 , `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L50aa3c.  v1:= (`int`) v0 @kind l2i;
  #L50aa3e.  v0:= v1 ^& v2 @kind int;
  #L50aa42.  call temp:= `e`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.e:(I)I` @kind static;
  #L50aa48.  return v0;
}
procedure `long` `g`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.g:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L50ac10.  v0:= v2.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L50ac14.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L50ac1a.  v0:= temp @kind wide;
  #L50ac1c.  return v0 @kind wide;
}
procedure `long` `h`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.h:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L50ac30.  v0:= v2.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.a` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L50ac34.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L50ac3a.  v0:= temp @kind wide;
  #L50ac3c.  return v0 @kind wide;
}
procedure `long` `i`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.i:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L50ac50.  v0:= v2.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L50ac54.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L50ac5a.  v0:= temp @kind wide;
  #L50ac5c.  return v0 @kind wide;
}
procedure `java.lang.Object` `j`(`java.util.concurrent.atomic.AtomicReferenceArray` v0 @kind object, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L50aa98.  call temp:= `get`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L50aa9e.  v0:= temp @kind object;
  #L50aaa0.  return v0 @kind object;
}
procedure `java.util.concurrent.atomic.AtomicReferenceArray` `k`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v2 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.k:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/util/concurrent/atomic/AtomicReferenceArray;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L50abe4.  call temp:= `e`(v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.e:(I)I` @kind static;
  #L50abea.  call temp:= `j`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L50abf0.  v0:= temp @kind object;
  #L50abf2.  v0:= (`java.util.concurrent.atomic.AtomicReferenceArray`) v0 @kind object;
  #L50abf6.  v1:= 0I;
  #L50abf8.  call `q`(v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L50abfe.  return v0 @kind object;
}
procedure `long` `l`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.l:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L50ac70.  v0:= v2.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.a` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L50ac74.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L50ac7a.  v0:= temp @kind wide;
  #L50ac7c.  return v0 @kind wide;
}
procedure `java.lang.Object` `m`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v0 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v1 @kind object, `long` v2 , `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.m:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;

  #L50aab4.  v0.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v1 @kind object;
  #L50aab8.  call temp:= `f`(v2, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L50aabe.  v2:= temp;
  #L50aac0.  call temp:= `j`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L50aac6.  v1:= temp @kind object;
  #L50aac8.  return v1 @kind object;
}
procedure `java.lang.Object` `n`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v3 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v4 @kind object, `long` v5 , `int` v7 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.n:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L50aadc.  v3.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v4 @kind object;
  #L50aae0.  call temp:= `f`(v5, v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L50aae6.  v7:= temp;
  #L50aae8.  call temp:= `j`(v4, v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L50aaee.  v0:= temp @kind object;
  #L50aaf0.  if v0 == 0 then goto L50ab08;
  #L50aaf4.  v1:= 0I;
  #L50aaf6.  call `q`(v4, v7, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L50aafc.  v1:= 1L;
  #L50ab00.  v5:= v5 + v1 @kind long;
  #L50ab02.  call `p`(v3, v5) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.p:(J)V` @kind direct;
  #L50ab08.  return v0 @kind object;
}
procedure `void` `o`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v4 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v5 @kind object, `long` v6 , `int` v8 , `java.lang.Object` v9 @kind object, `long` v10 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.o:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JILjava/lang/Object;J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L50ada4.  call temp:= `length`(v5) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L50adaa.  v0:= temp;
  #L50adac.  v1:= new `java.util.concurrent.atomic.AtomicReferenceArray`;
  #L50adb0.  call `<init>`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L50adb6.  v4.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v1 @kind object;
  #L50adba.  v10:= v10 + v6 @kind long;
  #L50adbc.  v2:= 1L;
  #L50adc0.  v10:= v10 - v2 @kind long;
  #L50adc2.  v4.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.c` @type ^`long` := v10 @kind wide;
  #L50adc6.  call `q`(v1, v8, v9) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L50adcc.  call `r`(v4, v5, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.r:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/util/concurrent/atomic/AtomicReferenceArray;)V` @kind direct;
  #L50add2.  v9:= `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` @kind object;
  #L50add6.  call `q`(v5, v8, v9) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L50addc.  v6:= v6 + v2 @kind long;
  #L50adde.  call `s`(v4, v6) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L50ade4.  return @kind void;
}
procedure `void` `p`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.p:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L50adf8.  v0:= v1.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L50adfc.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.lazySet:(J)V` @kind virtual;
  #L50ae02.  return @kind void;
}
procedure `void` `q`(`java.util.concurrent.atomic.AtomicReferenceArray` v0 @kind object, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L50ae14.  call `lazySet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.lazySet:(ILjava/lang/Object;)V` @kind virtual;
  #L50ae1a.  return @kind void;
}
procedure `void` `r`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v1 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v2 @kind object, `java.util.concurrent.atomic.AtomicReferenceArray` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.r:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/util/concurrent/atomic/AtomicReferenceArray;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L50ae2c.  call temp:= `length`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L50ae32.  v0:= temp;
  #L50ae34.  v0:= v0 + -1;
  #L50ae38.  call temp:= `e`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.e:(I)I` @kind static;
  #L50ae3e.  call `q`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L50ae44.  return @kind void;
}
procedure `void` `s`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L50ae58.  v0:= v1.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.a` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L50ae5c.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.lazySet:(J)V` @kind virtual;
  #L50ae62.  return @kind void;
}
procedure `boolean` `t`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v0 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v1 @kind object, `java.lang.Object` v2 @kind object, `long` v3 , `int` v5 ) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.t:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z` @AccessFlag PRIVATE {
    temp;

  #L50aa00.  call `q`(v1, v5, v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L50aa06.  v1:= 1L;
  #L50aa0a.  v3:= v3 + v1 @kind long;
  #L50aa0c.  call `s`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L50aa12.  v1:= 1I;
  #L50aa14.  return v1;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50ad78.  call temp:= `poll`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L50ad7e.  v0:= temp @kind object;
  #L50ad80.  if v0 != 0 then goto L50ad78;
  #L50ad84.  call temp:= `isEmpty`(v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.isEmpty:()Z` @kind virtual;
  #L50ad8a.  v0:= temp;
  #L50ad8c.  if v0 != 0 then goto L50ad92;
  #L50ad90.  goto L50ad78;
  #L50ad92.  return @kind void;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L50a868.  call temp:= `l`(v5) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.l:()J` @kind direct;
  #L50a86e.  v0:= temp @kind wide;
  #L50a870.  call temp:= `i`(v5) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.i:()J` @kind direct;
  #L50a876.  v2:= temp @kind wide;
  #L50a878.  v4:= lcmp(v0, v2);
  #L50a87c.  if v4 != 0 then goto L50a884;
  #L50a880.  v0:= 1I;
  #L50a882.  goto L50a886;
  #L50a884.  v0:= 0I;
  #L50a886.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v10 @kind this, `java.lang.Object` v11 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L50a898.  if v11 == 0 then goto L50a93a;
  #L50a89c.  v1:= v10.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L50a8a0.  call temp:= `h`(v10) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.h:()J` @kind direct;
  #L50a8a6.  v3:= temp @kind wide;
  #L50a8a8.  v0:= v10.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.d` @type ^`int`;
  #L50a8ac.  call temp:= `f`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L50a8b2.  v5:= temp;
  #L50a8b4.  v6:= v10.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.c` @type ^`long` @kind wide;
  #L50a8b8.  v2:= lcmp(v3, v6);
  #L50a8bc.  if v2 >= 0 then goto L50a8ce;
  #L50a8c0.  v0:= v10 @kind object;
  #L50a8c2.  v2:= v11 @kind object;
  #L50a8c4.  call temp:= `t`(v0, v1, v2, v3, v5) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.t:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z` @kind direct;
  #L50a8ca.  v11:= temp;
  #L50a8cc.  return v11;
  #L50a8ce.  v2:= v10.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.b` @type ^`int`;
  #L50a8d2.  v6:= (`long`) v2 @kind i2l;
  #L50a8d4.  v6:= v6 + v3 @kind long;
  #L50a8d6.  call temp:= `f`(v6, v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L50a8dc.  v2:= temp;
  #L50a8de.  call temp:= `j`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L50a8e4.  v2:= temp @kind object;
  #L50a8e6.  v8:= 1L;
  #L50a8ea.  if v2 != 0 then goto L50a902;
  #L50a8ee.  v6:= v6 - v8 @kind long;
  #L50a8f0.  v10.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.c` @type ^`long` := v6 @kind wide;
  #L50a8f4.  v0:= v10 @kind object;
  #L50a8f6.  v2:= v11 @kind object;
  #L50a8f8.  call temp:= `t`(v0, v1, v2, v3, v5) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.t:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z` @kind direct;
  #L50a8fe.  v11:= temp;
  #L50a900.  return v11;
  #L50a902.  v8:= v8 + v3 @kind long;
  #L50a904.  call temp:= `f`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L50a90a.  v2:= temp;
  #L50a90c.  call temp:= `j`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L50a912.  v2:= temp @kind object;
  #L50a914.  if v2 != 0 then goto L50a926;
  #L50a918.  v0:= v10 @kind object;
  #L50a91a.  v2:= v11 @kind object;
  #L50a91c.  call temp:= `t`(v0, v1, v2, v3, v5) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.t:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z` @kind direct;
  #L50a922.  v11:= temp;
  #L50a924.  return v11;
  #L50a926.  v6:= (`long`) v0 @kind i2l;
  #L50a928.  v0:= v10 @kind object;
  #L50a92a.  v2:= v3 @kind wide;
  #L50a92c.  v4:= v5;
  #L50a92e.  v5:= v11 @kind object;
  #L50a930.  call `o`(v0, v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.o:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JILjava/lang/Object;J)V` @kind direct;
  #L50a936.  v11:= 1I;
  #L50a938.  return v11;
  #L50a93a.  v11:= new `java.lang.NullPointerException`;
  #L50a93e.  v0:= "Null is not a valid element" @kind object;
  #L50a942.  call `<init>`(v11, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50a948.  throw v11;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v8 @kind this, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L50a95c.  v0:= v8.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L50a960.  call temp:= `l`(v8) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.l:()J` @kind direct;
  #L50a966.  v1:= temp @kind wide;
  #L50a968.  v3:= v8.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.d` @type ^`int`;
  #L50a96c.  v4:= 2L;
  #L50a970.  v4:= v4 + v1 @kind long;
  #L50a972.  call temp:= `f`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L50a978.  v6:= temp;
  #L50a97a.  call temp:= `j`(v0, v6) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L50a980.  v6:= temp @kind object;
  #L50a982.  if v6 != 0 then goto L50a9a6;
  #L50a986.  call temp:= `f`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L50a98c.  v1:= temp;
  #L50a98e.  v2:= v1 + 1;
  #L50a992.  call `q`(v0, v2, v10) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L50a998.  call `q`(v0, v1, v9) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L50a99e.  call `s`(v8, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L50a9a4.  goto L50a9ea;
  #L50a9a6.  call temp:= `length`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L50a9ac.  v6:= temp;
  #L50a9ae.  v7:= new `java.util.concurrent.atomic.AtomicReferenceArray`;
  #L50a9b2.  call `<init>`(v7, v6) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L50a9b8.  v8.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.e` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v7 @kind object;
  #L50a9bc.  call temp:= `f`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L50a9c2.  v1:= temp;
  #L50a9c4.  v2:= v1 + 1;
  #L50a9c8.  call `q`(v7, v2, v10) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L50a9ce.  call `q`(v7, v1, v9) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L50a9d4.  call `r`(v8, v0, v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.r:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/util/concurrent/atomic/AtomicReferenceArray;)V` @kind direct;
  #L50a9da.  v9:= `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` @kind object;
  #L50a9de.  call `q`(v0, v1, v9) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L50a9e4.  call `s`(v8, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.s:(J)V` @kind direct;
  #L50a9ea.  v9:= 1I;
  #L50a9ec.  return v9;
}
procedure `java.lang.Object` `peek`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v6 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.peek:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L50ab1c.  v0:= v6.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L50ab20.  call temp:= `g`(v6) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.g:()J` @kind direct;
  #L50ab26.  v1:= temp @kind wide;
  #L50ab28.  v3:= v6.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.f` @type ^`int`;
  #L50ab2c.  call temp:= `f`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L50ab32.  v4:= temp;
  #L50ab34.  call temp:= `j`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L50ab3a.  v4:= temp @kind object;
  #L50ab3c.  v5:= `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` @kind object;
  #L50ab40.  if v4 != v5 then goto L50ab5a;
  #L50ab44.  v4:= v3 + 1;
  #L50ab48.  call temp:= `k`(v6, v0, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.k:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/util/concurrent/atomic/AtomicReferenceArray;` @kind direct;
  #L50ab4e.  v0:= temp @kind object;
  #L50ab50.  call temp:= `m`(v6, v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.m:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;` @kind direct;
  #L50ab56.  v0:= temp @kind object;
  #L50ab58.  return v0 @kind object;
  #L50ab5a.  return v4 @kind object;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v8 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L50ab6c.  v0:= v8.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.g` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L50ab70.  call temp:= `g`(v8) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.g:()J` @kind direct;
  #L50ab76.  v1:= temp @kind wide;
  #L50ab78.  v3:= v8.`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.f` @type ^`int`;
  #L50ab7c.  call temp:= `f`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.f:(JI)I` @kind static;
  #L50ab82.  v4:= temp;
  #L50ab84.  call temp:= `j`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.j:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;` @kind static;
  #L50ab8a.  v5:= temp @kind object;
  #L50ab8c.  v6:= `@@io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue.j` @type ^`java.lang.Object` @kind object;
  #L50ab90.  if v5 != v6 then goto L50ab98;
  #L50ab94.  v6:= 1I;
  #L50ab96.  goto L50ab9a;
  #L50ab98.  v6:= 0I;
  #L50ab9a.  v7:= 0I;
  #L50ab9c.  if v5 == 0 then goto L50abb8;
  #L50aba0.  if v6 != 0 then goto L50abb8;
  #L50aba4.  call `q`(v0, v4, v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.q:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V` @kind static;
  #L50abaa.  v3:= 1L;
  #L50abae.  v1:= v1 + v3 @kind long;
  #L50abb0.  call `p`(v8, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.p:(J)V` @kind direct;
  #L50abb6.  return v5 @kind object;
  #L50abb8.  if v6 == 0 then goto L50abd2;
  #L50abbc.  v4:= v3 + 1;
  #L50abc0.  call temp:= `k`(v8, v0, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.k:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/util/concurrent/atomic/AtomicReferenceArray;` @kind direct;
  #L50abc6.  v0:= temp @kind object;
  #L50abc8.  call temp:= `n`(v8, v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.n:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;` @kind direct;
  #L50abce.  v0:= temp @kind object;
  #L50abd0.  return v0 @kind object;
  #L50abd2.  return v7 @kind object;
}
procedure `int` `size`(`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v7 @kind this) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L50aa5c.  call temp:= `i`(v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.i:()J` @kind direct;
  #L50aa62.  v0:= temp @kind wide;
  #L50aa64.  call temp:= `l`(v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.l:()J` @kind direct;
  #L50aa6a.  v2:= temp @kind wide;
  #L50aa6c.  call temp:= `i`(v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.i:()J` @kind direct;
  #L50aa72.  v4:= temp @kind wide;
  #L50aa74.  v6:= lcmp(v0, v4);
  #L50aa78.  if v6 != 0 then goto L50aa82;
  #L50aa7c.  v2:= v2 - v4 @kind long;
  #L50aa7e.  v0:= (`int`) v2 @kind l2i;
  #L50aa80.  return v0;
  #L50aa82.  v0:= v4 @kind wide;
  #L50aa84.  goto L50aa64;
}
