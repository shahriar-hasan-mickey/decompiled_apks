record `io.reactivex.rxjava3.internal.subscribers.StrictSubscriber` @kind class @AccessFlag PUBLIC extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.AtomicThrowable` `io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.c` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.f` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/StrictSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L50f7ac.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L50f7b2.  v0.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L50f7b6.  v1:= new `io.reactivex.rxjava3.internal.util.AtomicThrowable`;
  #L50f7ba.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L50f7c0.  v0.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` := v1 @kind object;
  #L50f7c4.  v1:= new `java.util.concurrent.atomic.AtomicLong`;
  #L50f7c8.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L50f7ce.  v0.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.c` @type ^`java.util.concurrent.atomic.AtomicLong` := v1 @kind object;
  #L50f7d2.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L50f7d6.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L50f7dc.  v0.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.d` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L50f7e0.  v1:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L50f7e4.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L50f7ea.  v0.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v1 @kind object;
  #L50f7ee.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/StrictSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50f800.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.f` @type ^`boolean` @kind boolean;
  #L50f804.  if v0 != 0 then goto L50f812;
  #L50f808.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50f80c.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L50f812.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/StrictSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50f824.  v0:= 1I;
  #L50f826.  v2.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.f` @type ^`boolean` := v0 @kind boolean;
  #L50f82a.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L50f82e.  v1:= v2.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L50f832.  call `onComplete`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/util/HalfSerializer;.onComplete:(Lorg/reactivestreams/Subscriber;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)V` @kind static;
  #L50f838.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/StrictSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50f84c.  v0:= 1I;
  #L50f84e.  v2.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.f` @type ^`boolean` := v0 @kind boolean;
  #L50f852.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L50f856.  v1:= v2.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L50f85a.  call `onError`(v0, v3, v2, v1) @signature `Lio/reactivex/rxjava3/internal/util/HalfSerializer;.onError:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)V` @kind static;
  #L50f860.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/StrictSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50f874.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L50f878.  v1:= v2.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L50f87c.  call temp:= `onNext`(v0, v3, v2, v1) @signature `Lio/reactivex/rxjava3/internal/util/HalfSerializer;.onNext:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)Z` @kind static;
  #L50f882.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber` v3 @kind this, `org.reactivestreams.Subscription` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/StrictSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L50f894.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L50f898.  v1:= 0I;
  #L50f89a.  v2:= 1I;
  #L50f89c.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L50f8a2.  v0:= temp;
  #L50f8a4.  if v0 == 0 then goto L50f8c2;
  #L50f8a8.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L50f8ac.  call `onSubscribe`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L50f8b2.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50f8b6.  v1:= v3.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.c` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L50f8ba.  call temp:= `deferredSetOnce`(v0, v1, v4) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L50f8c0.  goto L50f8e2;
  #L50f8c2.  call `cancel`(v4) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L50f8c8.  call `cancel`(v3) @signature `Lio/reactivex/rxjava3/internal/subscribers/StrictSubscriber;.cancel:()V` @kind virtual;
  #L50f8ce.  v4:= new `java.lang.IllegalStateException`;
  #L50f8d2.  v0:= "ยง2.12 violated: onSubscribe must be called at most once" @kind object;
  #L50f8d6.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50f8dc.  call `onError`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/subscribers/StrictSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L50f8e2.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/internal/subscribers/StrictSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L50f8f4.  v0:= 0L;
  #L50f8f8.  v2:= lcmp(v4, v0);
  #L50f8fc.  if v2 > 0 then goto L50f93a;
  #L50f900.  call `cancel`(v3) @signature `Lio/reactivex/rxjava3/internal/subscribers/StrictSubscriber;.cancel:()V` @kind virtual;
  #L50f906.  v0:= new `java.lang.IllegalArgumentException`;
  #L50f90a.  v1:= new `java.lang.StringBuilder`;
  #L50f90e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50f914.  v2:= "ยง3.9 violated: positive request amount required but it was " @kind object;
  #L50f918.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50f91e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L50f924.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L50f92a.  v4:= temp @kind object;
  #L50f92c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50f932.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/StrictSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L50f938.  goto L50f948;
  #L50f93a.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50f93e.  v1:= v3.`io.reactivex.rxjava3.internal.subscribers.StrictSubscriber.c` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L50f942.  call `deferredRequest`(v0, v1, v4) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V` @kind static;
  #L50f948.  return @kind void;
}
