record `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind interface {
  `boolean` `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @AccessFlag PROTECTED;
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @AccessFlag PROTECTED_FINAL;
  `io.reactivex.rxjava3.internal.fuseable.QueueSubscription` `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @AccessFlag PROTECTED;
  `int` `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.sourceMode` @AccessFlag PROTECTED;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.upstream` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L50e238.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50e23e.  v0.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L50e242.  return @kind void;
}
procedure `void` `afterDownstream`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.afterDownstream:()V` @AccessFlag PROTECTED {
    temp;

  #L50e254.  return @kind void;
}
procedure `boolean` `beforeDownstream`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.beforeDownstream:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L50e18c.  v0:= 1I;
  #L50e18e.  return v0;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50e268.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L50e26c.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L50e272.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50e284.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L50e288.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L50e28e.  return @kind void;
}
procedure `void` `fail`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.fail:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L50e2a0.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L50e2a6.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L50e2aa.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L50e2b0.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L50e2b6.  return @kind void;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50e1a0.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L50e1a4.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.isEmpty:()Z` @kind interface;
  #L50e1aa.  v0:= temp;
  #L50e1ac.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L50e1c0.  v2:= new `java.lang.UnsupportedOperationException`;
  #L50e1c4.  v0:= "Should not be called!" @kind object;
  #L50e1c8.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50e1ce.  throw v2;
}
procedure `boolean` `offer`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L50e1e0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L50e1e4.  v2:= "Should not be called!" @kind object;
  #L50e1e8.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50e1ee.  throw v1;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50e2c8.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L50e2cc.  if v0 == 0 then goto L50e2d2;
  #L50e2d0.  return @kind void;
  #L50e2d2.  v0:= 1I;
  #L50e2d4.  v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L50e2d8.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L50e2dc.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L50e2e2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50e2f4.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L50e2f8.  if v0 == 0 then goto L50e304;
  #L50e2fc.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L50e302.  return @kind void;
  #L50e304.  v0:= 1I;
  #L50e306.  v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L50e30a.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L50e30e.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L50e314.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L50e328.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L50e32c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L50e332.  v0:= temp;
  #L50e334.  if v0 == 0 then goto L50e368;
  #L50e338.  v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L50e33c.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind boolean;
  #L50e340.  if v0 == 0 then goto L50e34c;
  #L50e344.  v2:= (`io.reactivex.rxjava3.internal.fuseable.QueueSubscription`) v2 @kind object;
  #L50e348.  v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` := v2 @kind object;
  #L50e34c.  call temp:= `beforeDownstream`(v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.beforeDownstream:()Z` @kind virtual;
  #L50e352.  v2:= temp;
  #L50e354.  if v2 == 0 then goto L50e368;
  #L50e358.  v2:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L50e35c.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L50e362.  call `afterDownstream`(v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.afterDownstream:()V` @kind virtual;
  #L50e368.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50e37c.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L50e380.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L50e386.  return @kind void;
}
procedure `int` `transitiveBoundaryFusion`(`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.transitiveBoundaryFusion:(I)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L50e200.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L50e204.  if v0 == 0 then goto L50e222;
  #L50e208.  v1:= v3 ^& 4;
  #L50e20c.  if v1 != 0 then goto L50e222;
  #L50e210.  call temp:= `requestFusion`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/QueueFuseable;.requestFusion:(I)I` @kind interface;
  #L50e216.  v3:= temp;
  #L50e218.  if v3 == 0 then goto L50e220;
  #L50e21c.  v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int` := v3;
  #L50e220.  return v3;
  #L50e222.  v3:= 0I;
  #L50e224.  return v3;
}
