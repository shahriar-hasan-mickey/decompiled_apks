record `io.reactivex.rxjava3.internal.functions.ObjectHelper` @kind class @AccessFlag PUBLIC_FINAL {
}
global `io.reactivex.rxjava3.functions.BiPredicate` `@@io.reactivex.rxjava3.internal.functions.ObjectHelper.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4ad1c0.  v0:= new `io.reactivex.rxjava3.internal.functions.ObjectHelper$a`;
  #L4ad1c4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper$a;.<init>:()V` @kind direct;
  #L4ad1ca.  `@@io.reactivex.rxjava3.internal.functions.ObjectHelper.a` @type ^`io.reactivex.rxjava3.functions.BiPredicate` := v0 @kind object;
  #L4ad1ce.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.functions.ObjectHelper` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4ad1e0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ad1e6.  v0:= new `java.lang.IllegalStateException`;
  #L4ad1ea.  v1:= "No instances!" @kind object;
  #L4ad1ee.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ad1f4.  throw v0;
}
procedure `io.reactivex.rxjava3.functions.BiPredicate` `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ad154.  v0:= `@@io.reactivex.rxjava3.internal.functions.ObjectHelper.a` @type ^`io.reactivex.rxjava3.functions.BiPredicate` @kind object;
  #L4ad158.  return v0 @kind object;
}
procedure `int` `verifyPositive`(`int` v2 , `java.lang.String` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4ad108.  if v2 <= 0 then goto L4ad10e;
  #L4ad10c.  return v2;
  #L4ad10e.  v0:= new `java.lang.IllegalArgumentException`;
  #L4ad112.  v1:= new `java.lang.StringBuilder`;
  #L4ad116.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ad11c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ad122.  v3:= " > 0 required but it was " @kind object;
  #L4ad126.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ad12c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ad132.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ad138.  v2:= temp @kind object;
  #L4ad13a.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ad140.  throw v0;
}
procedure `long` `verifyPositive`(`long` v3 , `java.lang.String` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4ad16c.  v0:= 0L;
  #L4ad170.  v2:= lcmp(v3, v0);
  #L4ad174.  if v2 <= 0 then goto L4ad17a;
  #L4ad178.  return v3 @kind wide;
  #L4ad17a.  v0:= new `java.lang.IllegalArgumentException`;
  #L4ad17e.  v1:= new `java.lang.StringBuilder`;
  #L4ad182.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ad188.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ad18e.  v5:= " > 0 required but it was " @kind object;
  #L4ad192.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ad198.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ad19e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ad1a4.  v3:= temp @kind object;
  #L4ad1a6.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ad1ac.  throw v0;
}
