record `io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class, `io.reactivex.rxjava3.internal.fuseable.FuseToFlowable` @kind interface {
  `io.reactivex.rxjava3.core.Flowable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4be7fc.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4be802.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` := v1 @kind object;
  #L4be806.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fuseToFlowable`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle;.fuseToFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4be7d4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCount`;
  #L4be7d8.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4be7dc.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCount;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4be7e2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4be7e8.  v0:= temp @kind object;
  #L4be7ea.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle` v2 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4be818.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4be81c.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a`;
  #L4be820.  call `<init>`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind direct;
  #L4be826.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4be82c.  return @kind void;
}
