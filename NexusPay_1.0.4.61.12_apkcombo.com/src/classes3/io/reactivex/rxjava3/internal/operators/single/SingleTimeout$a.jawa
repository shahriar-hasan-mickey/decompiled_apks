record `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `java.lang.Runnable` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.a` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a$a` `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.SingleSource` `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.d` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.e` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.f` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/core/SingleSource;JLjava/util/concurrent/TimeUnit;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5094b8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L5094be.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L5094c2.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.d` @type ^`io.reactivex.rxjava3.core.SingleSource` := v2 @kind object;
  #L5094c6.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.e` @type ^`long` := v3 @kind wide;
  #L5094ca.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.f` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L5094ce.  v3:= new `java.util.concurrent.atomic.AtomicReference`;
  #L5094d2.  call `<init>`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L5094d8.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v3 @kind object;
  #L5094dc.  if v2 == 0 then goto L5094f0;
  #L5094e0.  v2:= new `io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a$a`;
  #L5094e4.  call `<init>`(v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind direct;
  #L5094ea.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.c` @type ^`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a$a` := v2 @kind object;
  #L5094ee.  goto L5094f6;
  #L5094f0.  v1:= 0I;
  #L5094f2.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.c` @type ^`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a$a` := v1 @kind object;
  #L5094f6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L509508.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L50950e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L509512.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L509518.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.c` @type ^`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a$a` @kind object;
  #L50951c.  if v0 == 0 then goto L509526;
  #L509520.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L509526.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L509490.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L509496.  v0:= temp @kind object;
  #L509498.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L50949c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L5094a2.  v0:= temp;
  #L5094a4.  return v0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L509538.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L50953e.  v0:= temp @kind object;
  #L509540.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L509544.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L509548.  if v0 == v1 then goto L50956e;
  #L50954c.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L509552.  v0:= temp;
  #L509554.  if v0 == 0 then goto L50956e;
  #L509558.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50955c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L509562.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L509566.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L50956c.  goto L509574;
  #L50956e.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L509574.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L509588.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L50958e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5095a0.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L5095a6.  v0:= temp @kind object;
  #L5095a8.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L5095ac.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L5095b0.  if v0 == v1 then goto L5095d4;
  #L5095b4.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L5095ba.  v0:= temp;
  #L5095bc.  if v0 == 0 then goto L5095d4;
  #L5095c0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L5095c4.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L5095ca.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L5095ce.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L5095d4.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L5095e8.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L5095ee.  v0:= temp @kind object;
  #L5095f0.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L5095f4.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L5095f8.  if v0 == v1 then goto L509650;
  #L5095fc.  call temp:= `compareAndSet`(v5, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L509602.  v1:= temp;
  #L509604.  if v1 == 0 then goto L509650;
  #L509608.  if v0 == 0 then goto L509612;
  #L50960c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L509612.  v0:= v5.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.d` @type ^`io.reactivex.rxjava3.core.SingleSource` @kind object;
  #L509616.  if v0 != 0 then goto L509640;
  #L50961a.  v0:= v5.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L50961e.  v1:= new `java.util.concurrent.TimeoutException`;
  #L509622.  v2:= v5.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.e` @type ^`long` @kind wide;
  #L509626.  v4:= v5.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.f` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L50962a.  call temp:= `timeoutMessage`(v2, v4) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.timeoutMessage:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/String;` @kind static;
  #L509630.  v2:= temp @kind object;
  #L509632.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/TimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L509638.  call `onError`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L50963e.  goto L509650;
  #L509640.  v1:= 0I;
  #L509642.  v5.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.d` @type ^`io.reactivex.rxjava3.core.SingleSource` := v1 @kind object;
  #L509646.  v1:= v5.`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a.c` @type ^`io.reactivex.rxjava3.internal.operators.single.SingleTimeout$a$a` @kind object;
  #L50964a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L509650.  return @kind void;
}
