record `io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.core.CompletableObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a.b` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenObservable$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e2898.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4e289e.  v0.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a.b` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v2 @kind object;
  #L4e28a2.  v0.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4e28a6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenObservable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4e28b8.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e28be.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenObservable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e2870.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e2876.  v0:= temp @kind object;
  #L4e2878.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4e287c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e2882.  v0:= temp;
  #L4e2884.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenObservable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e28d0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a.b` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4e28d4.  if v0 != 0 then goto L4e28e4;
  #L4e28d8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e28dc.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4e28e2.  goto L4e28f0;
  #L4e28e4.  v1:= 0I;
  #L4e28e6.  v2.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a.b` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v1 @kind object;
  #L4e28ea.  call `subscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4e28f0.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenObservable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e2904.  v0:= v1.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e2908.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e290e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenObservable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e2920.  v0:= v1.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e2924.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4e292a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenObservable$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4e293c.  call temp:= `replace`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e2942.  return @kind void;
}
