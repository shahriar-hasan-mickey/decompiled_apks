record `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$c` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$a` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.d` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b` v1 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutMaybe$b;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/core/MaybeSource;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4e126c.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4e1272.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v2 @kind object;
  #L4e1276.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$c`;
  #L4e127a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutMaybe$c;.<init>:(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutMaybe$b;)V` @kind direct;
  #L4e1280.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$c` := v0 @kind object;
  #L4e1284.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.c` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v3 @kind object;
  #L4e1288.  if v3 == 0 then goto L4e1298;
  #L4e128c.  v3:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$a`;
  #L4e1290.  call `<init>`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutMaybe$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind direct;
  #L4e1296.  goto L4e129a;
  #L4e1298.  v3:= 0I;
  #L4e129a.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.d` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$a` := v3 @kind object;
  #L4e129e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutMaybe$b;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e13b4.  call temp:= `dispose`(v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e13ba.  v0:= temp;
  #L4e13bc.  if v0 == 0 then goto L4e13e8;
  #L4e13c0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.c` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4e13c4.  if v0 != 0 then goto L4e13de;
  #L4e13c8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4e13cc.  v1:= new `java.util.concurrent.TimeoutException`;
  #L4e13d0.  call `<init>`(v1) @signature `Ljava/util/concurrent/TimeoutException;.<init>:()V` @kind direct;
  #L4e13d6.  call `onError`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e13dc.  goto L4e13e8;
  #L4e13de.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.d` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$a` @kind object;
  #L4e13e2.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4e13e8.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutMaybe$b;.b:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e13fc.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e1402.  v0:= temp;
  #L4e1404.  if v0 == 0 then goto L4e1414;
  #L4e1408.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4e140c.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e1412.  goto L4e141a;
  #L4e1414.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4e141a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutMaybe$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e12b0.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e12b6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$c` @kind object;
  #L4e12ba.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e12c0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.d` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$a` @kind object;
  #L4e12c4.  if v0 == 0 then goto L4e12ce;
  #L4e12c8.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e12ce.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutMaybe$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e1244.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e124a.  v0:= temp @kind object;
  #L4e124c.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4e1250.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e1256.  v0:= temp;
  #L4e1258.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutMaybe$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e12e0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$c` @kind object;
  #L4e12e4.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e12ea.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e12ee.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4e12f4.  v0:= temp @kind object;
  #L4e12f6.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e12fa.  if v0 == v1 then goto L4e1308;
  #L4e12fe.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4e1302.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4e1308.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutMaybe$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e131c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$c` @kind object;
  #L4e1320.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e1326.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e132a.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4e1330.  v0:= temp @kind object;
  #L4e1332.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e1336.  if v0 == v1 then goto L4e1346;
  #L4e133a.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4e133e.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e1344.  goto L4e134c;
  #L4e1346.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4e134c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutMaybe$b;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4e1360.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e1366.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutMaybe$b;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e1378.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$c` @kind object;
  #L4e137c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e1382.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e1386.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4e138c.  v0:= temp @kind object;
  #L4e138e.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e1392.  if v0 == v1 then goto L4e13a0;
  #L4e1396.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutMaybe$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4e139a.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4e13a0.  return @kind void;
}
