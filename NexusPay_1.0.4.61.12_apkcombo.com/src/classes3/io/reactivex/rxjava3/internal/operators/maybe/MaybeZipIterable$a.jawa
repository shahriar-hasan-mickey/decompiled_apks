record `io.reactivex.rxjava3.internal.operators.maybe.MaybeZipIterable$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.functions.Function` @kind interface {
  `io.reactivex.rxjava3.internal.operators.maybe.MaybeZipIterable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeZipIterable$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipIterable$a` v0 @kind this, `io.reactivex.rxjava3.internal.operators.maybe.MaybeZipIterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeZipIterable$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeZipIterable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e2728.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipIterable$a.a` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipIterable` := v1 @kind object;
  #L4e272c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e2732.  return @kind void;
}
procedure `java.lang.Object` `apply`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipIterable$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeZipIterable$a;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4e26ec.  v0:= v3.`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipIterable$a.a` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipIterable` @kind object;
  #L4e26f0.  v0:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeZipIterable.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4e26f4.  v1:= 1I;
  #L4e26f6.  v1:= new `java.lang.Object`[v1];
  #L4e26fa.  v2:= 0I;
  #L4e26fc.  v1[v2]:= v4 @kind object;
  #L4e2700.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4e2706.  v4:= temp @kind object;
  #L4e2708.  v0:= "The zipper returned a null value" @kind object;
  #L4e270c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4e2712.  v4:= temp @kind object;
  #L4e2714.  return v4 @kind object;
}
