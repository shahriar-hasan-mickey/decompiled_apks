record `io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b8f50.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b8f56.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4b8f5a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L4b8f5e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b8f70.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b8f74.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4b8f7a.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4b8f7e.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4b8f82.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b8f2c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b8f30.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4b8f34.  if v0 != v1 then goto L4b8f3c;
  #L4b8f38.  v0:= 1I;
  #L4b8f3a.  goto L4b8f3e;
  #L4b8f3c.  v0:= 0I;
  #L4b8f3e.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b8f94.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L4b8f98.  if v0 != 0 then goto L4b8fb8;
  #L4b8f9c.  v0:= 1I;
  #L4b8f9e.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4b8fa2.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4b8fa6.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4b8faa.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b8fae.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L4b8fb2.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4b8fb8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b8fcc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L4b8fd0.  if v0 == 0 then goto L4b8fdc;
  #L4b8fd4.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b8fda.  return @kind void;
  #L4b8fdc.  v0:= 1I;
  #L4b8fde.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4b8fe2.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4b8fe6.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4b8fea.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b8fee.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b8ff4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b9008.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L4b900c.  if v0 == 0 then goto L4b9012;
  #L4b9010.  return @kind void;
  #L4b9012.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4b9016.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4b901c.  v2:= temp;
  #L4b901e.  if v2 == 0 then goto L4b9048;
  #L4b9022.  v2:= 1I;
  #L4b9024.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.d` @type ^`boolean` := v2 @kind boolean;
  #L4b9028.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b902c.  call `cancel`(v2) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4b9032.  v2:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4b9036.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L4b903a.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b903e.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4b9042.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4b9048.  return @kind void;
  #L4b904a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b904c.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b9052.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b9056.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4b905c.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4b9060.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4b9064.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b906a.  return @kind void;
  catch `java.lang.Throwable` @[L4b9012..L4b901e] goto L4b904a;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b9088.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b908c.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4b9092.  v0:= temp;
  #L4b9094.  if v0 == 0 then goto L4b90b6;
  #L4b9098.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.c` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4b909c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4b90a0.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b90a6.  v0:= 9223372036854775807L;
  #L4b90b0.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4b90b6.  return @kind void;
}
