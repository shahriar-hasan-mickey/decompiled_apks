record `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Completable` @kind class {
  `io.reactivex.rxjava3.core.Flowable` `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e3d8c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.<init>:()V` @kind direct;
  #L4e3d92.  v0.`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable.a` @type ^`io.reactivex.rxjava3.core.Flowable` := v1 @kind object;
  #L4e3d96.  v0.`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4e3d9a.  v0.`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable.c` @type ^`boolean` := v3 @kind boolean;
  #L4e3d9e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable` v4 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable;.subscribeActual:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e3db0.  v0:= v4.`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4e3db4.  v1:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable$a`;
  #L4e3db8.  v2:= v4.`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4e3dbc.  v3:= v4.`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable.c` @type ^`boolean` @kind boolean;
  #L4e3dc0.  call `<init>`(v1, v5, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4e3dc6.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4e3dcc.  return @kind void;
}
