record `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscribers.DeferredScalarSubscriber` @kind class {
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.b` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.c` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L503c8c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/DeferredScalarSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L503c92.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L503c96.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.a` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v3 @kind object;
  #L503c9a.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503cac.  call `cancel`(v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/DeferredScalarSubscriber;.cancel:()V` @kind super;
  #L503cb2.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.DeferredScalarSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L503cb6.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L503cbc.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L503cd0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` @kind boolean;
  #L503cd4.  if v0 != 0 then goto L503cee;
  #L503cd8.  v0:= 1I;
  #L503cda.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` := v0 @kind boolean;
  #L503cde.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` @kind object;
  #L503ce2.  v1:= 0I;
  #L503ce4.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L503ce8.  call `complete`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L503cee.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503d00.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` @kind boolean;
  #L503d04.  if v0 == 0 then goto L503d10;
  #L503d08.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L503d0e.  return @kind void;
  #L503d10.  v0:= 1I;
  #L503d12.  v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` := v0 @kind boolean;
  #L503d16.  v0:= 0I;
  #L503d18.  v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` := v0 @kind object;
  #L503d1c.  v0:= v1.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L503d20.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L503d26.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L503d38.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.c` @type ^`boolean` @kind boolean;
  #L503d3c.  if v0 != 0 then goto L503d76;
  #L503d40.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.a` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L503d44.  v1:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` @kind object;
  #L503d48.  call temp:= `apply`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L503d4e.  v3:= temp @kind object;
  #L503d50.  v0:= "The reducer returned a null value" @kind object;
  #L503d54.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L503d5a.  v3:= temp @kind object;
  #L503d5c.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a.b` @type ^`java.lang.Object` := v3 @kind object;
  #L503d60.  goto L503d76;
  #L503d62.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L503d64.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L503d6a.  call `cancel`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.cancel:()V` @kind virtual;
  #L503d70.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L503d76.  return @kind void;
  catch `java.lang.Throwable` @[L503d40..L503d5c] goto L503d62;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L503d94.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.DeferredScalarSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L503d98.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L503d9e.  v0:= temp;
  #L503da0.  if v0 == 0 then goto L503dc2;
  #L503da4.  v2.`io.reactivex.rxjava3.internal.subscribers.DeferredScalarSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L503da8.  v0:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L503dac.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L503db2.  v0:= 9223372036854775807L;
  #L503dbc.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L503dc2.  return @kind void;
}
