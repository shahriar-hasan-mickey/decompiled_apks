record `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$d` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler$Worker` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.e` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.f` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.g` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.h` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler$Worker` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler$Worker;Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fcdd4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4fcdda.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4fcdde.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.b` @type ^`long` := v2 @kind wide;
  #L4fcde2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.c` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L4fcde6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` := v5 @kind object;
  #L4fcdea.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.h` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v6 @kind object;
  #L4fcdee.  v1:= new `io.reactivex.rxjava3.internal.disposables.SequentialDisposable`;
  #L4fcdf2.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L4fcdf8.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.e` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L4fcdfc.  v1:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4fce00.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4fce06.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.f` @type ^`java.util.concurrent.atomic.AtomicLong` := v1 @kind object;
  #L4fce0a.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4fce0e.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4fce14.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.g` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L4fce18.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$b;.b:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fcf8c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.f` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4fcf90.  v1:= 9223372036854775807L;
  #L4fcf9a.  call temp:= `compareAndSet`(v0, v4, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4fcfa0.  v4:= temp;
  #L4fcfa2.  if v4 == 0 then goto L4fcfd8;
  #L4fcfa6.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4fcfaa.  call temp:= `dispose`(v4) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4fcfb0.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.h` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4fcfb4.  v5:= 0I;
  #L4fcfb6.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.h` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v5 @kind object;
  #L4fcfba.  v5:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a`;
  #L4fcfbe.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fcfc2.  call `<init>`(v5, v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/concurrent/atomic/AtomicReference;)V` @kind direct;
  #L4fcfc8.  call `subscribe`(v4, v5) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4fcfce.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4fcfd2.  call `dispose`(v4) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fcfd8.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b` v4 @kind this, `long` v5 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$b;.c:(J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fcfec.  v0:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.e` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4fcff0.  v1:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4fcff4.  v2:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$e`;
  #L4fcff8.  call `<init>`(v2, v5, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$e;.<init>:(JLio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$d;)V` @kind direct;
  #L4fcffe.  v5:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.b` @type ^`long` @kind wide;
  #L4fd002.  v3:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4fd006.  call temp:= `schedule`(v1, v2, v5, v3) @signature `Lio/reactivex/rxjava3/core/Scheduler$Worker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4fd00c.  v5:= temp @kind object;
  #L4fd00e.  call temp:= `replace`(v0, v5) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4fd014.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fce2c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4fce30.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4fce36.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4fce3c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4fce40.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fce46.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fcdac.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4fcdb2.  v0:= temp @kind object;
  #L4fcdb4.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4fcdb8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4fcdbe.  v0:= temp;
  #L4fcdc0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fce58.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.f` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4fce5c.  v1:= 9223372036854775807L;
  #L4fce66.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4fce6c.  v3:= temp @kind wide;
  #L4fce6e.  v0:= lcmp(v3, v1);
  #L4fce72.  if v0 == 0 then goto L4fce94;
  #L4fce76.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.e` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4fce7a.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4fce80.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fce84.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4fce8a.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4fce8e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fce94.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fcea8.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.f` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4fceac.  v1:= 9223372036854775807L;
  #L4fceb6.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4fcebc.  v3:= temp @kind wide;
  #L4fcebe.  v0:= lcmp(v3, v1);
  #L4fcec2.  if v0 == 0 then goto L4fcee6;
  #L4fcec6.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.e` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4fceca.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4fced0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fced4.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fceda.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4fcede.  call `dispose`(v6) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fcee4.  goto L4fceec;
  #L4fcee6.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4fceec.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fcf00.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.f` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4fcf04.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4fcf0a.  v0:= temp @kind wide;
  #L4fcf0c.  v2:= 9223372036854775807L;
  #L4fcf16.  v4:= lcmp(v0, v2);
  #L4fcf1a.  if v4 == 0 then goto L4fcf5c;
  #L4fcf1e.  v2:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.f` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4fcf22.  v3:= 1L;
  #L4fcf26.  v3:= v3 + v0 @kind long;
  #L4fcf28.  call temp:= `compareAndSet`(v2, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4fcf2e.  v0:= temp;
  #L4fcf30.  if v0 != 0 then goto L4fcf36;
  #L4fcf34.  goto L4fcf5c;
  #L4fcf36.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.e` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4fcf3a.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4fcf40.  v0:= temp @kind object;
  #L4fcf42.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4fcf46.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fcf4c.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fcf50.  call `onNext`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4fcf56.  call `c`(v5, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$b;.c:(J)V` @kind virtual;
  #L4fcf5c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$b;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fcf70.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$b.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4fcf74.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4fcf7a.  return @kind void;
}
