record `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$a`[] `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.c` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.d` @AccessFlag ;
  `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.f` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.g` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.h` @AccessFlag VOLATILE;
  `io.reactivex.rxjava3.internal.util.AtomicThrowable` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.j` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.k` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;IIZ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4ea408.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4ea40e.  v0:= new `io.reactivex.rxjava3.internal.util.AtomicThrowable`;
  #L4ea412.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L4ea418.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` := v0 @kind object;
  #L4ea41c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.a` @type ^`io.reactivex.rxjava3.core.Observer` := v2 @kind object;
  #L4ea420.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.b` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L4ea424.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.f` @type ^`boolean` := v6 @kind boolean;
  #L4ea428.  v2:= new `java.lang.Object`[v4];
  #L4ea42c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.d` @type ^`java.lang.Object`[] := v2 @kind object;
  #L4ea430.  v2:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$a`[v4];
  #L4ea434.  v3:= 0I;
  #L4ea436.  if v3 >= v4 then goto L4ea44e;
  #L4ea43a.  v6:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$a`;
  #L4ea43e.  call `<init>`(v6, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;I)V` @kind direct;
  #L4ea444.  v2[v3]:= v6 @kind object;
  #L4ea448.  v3:= v3 + 1;
  #L4ea44c.  goto L4ea436;
  #L4ea44e.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.c` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$a`[] := v2 @kind object;
  #L4ea452.  v2:= new `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue`;
  #L4ea456.  call `<init>`(v2, v5) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L4ea45c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` := v2 @kind object;
  #L4ea460.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ea474.  v0:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.c` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$a`[] @kind object;
  #L4ea478.  v1:= length @variable v0;
  #L4ea47a.  v2:= 0I;
  #L4ea47c.  if v2 >= v1 then goto L4ea490;
  #L4ea480.  v3:= v0[v2] @kind object;
  #L4ea484.  call `a`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$a;.a:()V` @kind virtual;
  #L4ea48a.  v2:= v2 + 1;
  #L4ea48e.  goto L4ea47c;
  #L4ea490.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v1 @kind this, `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.b:(Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;)V` @AccessFlag  {
    temp;
    v0;

  #L4ea4a4.  @monitorenter v1
  #L4ea4a6.  v0:= 0I;
  #L4ea4a8.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.d` @type ^`java.lang.Object`[] := v0 @kind object;
  #L4ea4ac.  @monitorexit v1
  #L4ea4ae.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4ea4b4.  return @kind void;
  #L4ea4b6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ea4b8.  @monitorexit v1
  #L4ea4ba.  throw v2;
  catch `java.lang.Throwable` @[L4ea4a8..L4ea4ae] goto L4ea4b6;
  catch `java.lang.Throwable` @[L4ea4b8..L4ea4ba] goto L4ea4b6;
}
procedure `void` `c`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v8 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.c:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4ea50c.  call temp:= `getAndIncrement`(v8) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4ea512.  v0:= temp;
  #L4ea514.  if v0 == 0 then goto L4ea51a;
  #L4ea518.  return @kind void;
  #L4ea51a.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4ea51e.  v1:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ea522.  v2:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.f` @type ^`boolean` @kind boolean;
  #L4ea526.  v3:= 1I;
  #L4ea528.  v4:= 1I;
  #L4ea52a.  v5:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.g` @type ^`boolean` @kind boolean;
  #L4ea52e.  if v5 == 0 then goto L4ea544;
  #L4ea532.  call `b`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.b:(Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;)V` @kind virtual;
  #L4ea538.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4ea53c.  call `tryTerminateAndReport`(v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateAndReport:()V` @kind virtual;
  #L4ea542.  return @kind void;
  #L4ea544.  if v2 != 0 then goto L4ea570;
  #L4ea548.  v5:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4ea54c.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ea552.  v5:= temp @kind object;
  #L4ea554.  if v5 == 0 then goto L4ea570;
  #L4ea558.  call `a`(v8) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.a:()V` @kind virtual;
  #L4ea55e.  call `b`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.b:(Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;)V` @kind virtual;
  #L4ea564.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4ea568.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4ea56e.  return @kind void;
  #L4ea570.  v5:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.h` @type ^`boolean` @kind boolean;
  #L4ea574.  call temp:= `poll`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4ea57a.  v6:= temp @kind object;
  #L4ea57c.  v6:= (`java.lang.Object`[]) v6 @kind object;
  #L4ea580.  if v6 != 0 then goto L4ea588;
  #L4ea584.  v7:= 1I;
  #L4ea586.  goto L4ea58a;
  #L4ea588.  v7:= 0I;
  #L4ea58a.  if v5 == 0 then goto L4ea5a4;
  #L4ea58e.  if v7 == 0 then goto L4ea5a4;
  #L4ea592.  call `b`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.b:(Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;)V` @kind virtual;
  #L4ea598.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4ea59c.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4ea5a2.  return @kind void;
  #L4ea5a4.  if v7 == 0 then goto L4ea5b8;
  #L4ea5a8.  v4:= -v4 @kind int;
  #L4ea5aa.  call temp:= `addAndGet`(v8, v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L4ea5b0.  v4:= temp;
  #L4ea5b2.  if v4 != 0 then goto L4ea52a;
  #L4ea5b6.  return @kind void;
  #L4ea5b8.  v5:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ea5bc.  call temp:= `apply`(v5, v6) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ea5c2.  v5:= temp @kind object;
  #L4ea5c4.  v6:= "The combiner returned a null value" @kind object;
  #L4ea5c8.  call temp:= `requireNonNull`(v5, v6) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ea5ce.  v5:= temp @kind object;
  #L4ea5d0.  call `onNext`(v1, v5) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4ea5d6.  goto L4ea52a;
  #L4ea5d8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ea5da.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ea5e0.  v3:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4ea5e4.  call temp:= `tryAddThrowableOrReport`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4ea5ea.  call `a`(v8) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.a:()V` @kind virtual;
  #L4ea5f0.  call `b`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.b:(Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;)V` @kind virtual;
  #L4ea5f6.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4ea5fa.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4ea600.  return @kind void;
  catch `java.lang.Throwable` @[L4ea5b8..L4ea5d0] goto L4ea5d8;
}
procedure `void` `d`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.d:(I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4ea620.  @monitorenter v3
  #L4ea622.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.d` @type ^`java.lang.Object`[] @kind object;
  #L4ea626.  if v0 != 0 then goto L4ea62e;
  #L4ea62a.  @monitorexit v3
  #L4ea62c.  return @kind void;
  #L4ea62e.  v4:= v0[v4] @kind object;
  #L4ea632.  v1:= 1I;
  #L4ea634.  if v4 != 0 then goto L4ea63c;
  #L4ea638.  v4:= 1I;
  #L4ea63a.  goto L4ea63e;
  #L4ea63c.  v4:= 0I;
  #L4ea63e.  if v4 != 0 then goto L4ea652;
  #L4ea642.  v2:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.k` @type ^`int`;
  #L4ea646.  v2:= v2 + v1 @kind int;
  #L4ea648.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.k` @type ^`int` := v2;
  #L4ea64c.  v0:= length @variable v0;
  #L4ea64e.  if v2 != v0 then goto L4ea656;
  #L4ea652.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.h` @type ^`boolean` := v1 @kind boolean;
  #L4ea656.  @monitorexit v3
  #L4ea658.  if v4 == 0 then goto L4ea662;
  #L4ea65c.  call `a`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.a:()V` @kind virtual;
  #L4ea662.  call `c`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.c:()V` @kind virtual;
  #L4ea668.  return @kind void;
  #L4ea66a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ea66c.  @monitorexit v3
  #L4ea66e.  throw v4;
  catch `java.lang.Throwable` @[L4ea622..L4ea658] goto L4ea66a;
  catch `java.lang.Throwable` @[L4ea66c..L4ea66e] goto L4ea66a;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ea4e0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.g` @type ^`boolean` @kind boolean;
  #L4ea4e4.  if v0 != 0 then goto L4ea4fa;
  #L4ea4e8.  v0:= 1I;
  #L4ea4ea.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.g` @type ^`boolean` := v0 @kind boolean;
  #L4ea4ee.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.a:()V` @kind virtual;
  #L4ea4f4.  call `c`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.c:()V` @kind virtual;
  #L4ea4fa.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v2 @kind this, `int` v3 , `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.e:(ILjava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4ea694.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.i` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4ea698.  call temp:= `tryAddThrowableOrReport`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4ea69e.  v4:= temp;
  #L4ea6a0.  if v4 == 0 then goto L4ea6fe;
  #L4ea6a4.  v4:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.f` @type ^`boolean` @kind boolean;
  #L4ea6a8.  v0:= 1I;
  #L4ea6aa.  if v4 == 0 then goto L4ea6ee;
  #L4ea6ae.  @monitorenter v2
  #L4ea6b0.  v4:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.d` @type ^`java.lang.Object`[] @kind object;
  #L4ea6b4.  if v4 != 0 then goto L4ea6bc;
  #L4ea6b8.  @monitorexit v2
  #L4ea6ba.  return @kind void;
  #L4ea6bc.  v3:= v4[v3] @kind object;
  #L4ea6c0.  if v3 != 0 then goto L4ea6c8;
  #L4ea6c4.  v3:= 1I;
  #L4ea6c6.  goto L4ea6ca;
  #L4ea6c8.  v3:= 0I;
  #L4ea6ca.  if v3 != 0 then goto L4ea6de;
  #L4ea6ce.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.k` @type ^`int`;
  #L4ea6d2.  v1:= v1 + v0 @kind int;
  #L4ea6d4.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.k` @type ^`int` := v1;
  #L4ea6d8.  v4:= length @variable v4;
  #L4ea6da.  if v1 != v4 then goto L4ea6e2;
  #L4ea6de.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.h` @type ^`boolean` := v0 @kind boolean;
  #L4ea6e2.  @monitorexit v2
  #L4ea6e4.  v0:= v3;
  #L4ea6e6.  goto L4ea6ee;
  #L4ea6e8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ea6ea.  @monitorexit v2
  #L4ea6ec.  throw v3;
  #L4ea6ee.  if v0 == 0 then goto L4ea6f8;
  #L4ea6f2.  call `a`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.a:()V` @kind virtual;
  #L4ea6f8.  call `c`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.c:()V` @kind virtual;
  #L4ea6fe.  return @kind void;
  catch `java.lang.Throwable` @[L4ea6b0..L4ea6ec] goto L4ea6e8;
}
procedure `void` `f`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v3 @kind this, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.f:(ILjava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4ea71c.  @monitorenter v3
  #L4ea71e.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.d` @type ^`java.lang.Object`[] @kind object;
  #L4ea722.  if v0 != 0 then goto L4ea72a;
  #L4ea726.  @monitorexit v3
  #L4ea728.  return @kind void;
  #L4ea72a.  v1:= v0[v4] @kind object;
  #L4ea72e.  v2:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.j` @type ^`int`;
  #L4ea732.  if v1 != 0 then goto L4ea73e;
  #L4ea736.  v2:= v2 + 1;
  #L4ea73a.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.j` @type ^`int` := v2;
  #L4ea73e.  v0[v4]:= v5 @kind object;
  #L4ea742.  v4:= length @variable v0;
  #L4ea744.  if v2 != v4 then goto L4ea75e;
  #L4ea748.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4ea74c.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4ea752.  v5:= temp @kind object;
  #L4ea754.  call temp:= `offer`(v4, v5) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L4ea75a.  v4:= 1I;
  #L4ea75c.  goto L4ea760;
  #L4ea75e.  v4:= 0I;
  #L4ea760.  @monitorexit v3
  #L4ea762.  if v4 == 0 then goto L4ea76c;
  #L4ea766.  call `c`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.c:()V` @kind virtual;
  #L4ea76c.  return @kind void;
  #L4ea76e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ea770.  @monitorexit v3
  #L4ea772.  throw v4;
  catch `java.lang.Throwable` @[L4ea71e..L4ea762] goto L4ea76e;
  catch `java.lang.Throwable` @[L4ea770..L4ea772] goto L4ea76e;
}
procedure `void` `g`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v5 @kind this, `io.reactivex.rxjava3.core.ObservableSource`[] v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.g:([Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ea798.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.c` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$a`[] @kind object;
  #L4ea79c.  v1:= length @variable v0;
  #L4ea79e.  v2:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ea7a2.  call `onSubscribe`(v2, v5) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ea7a8.  v2:= 0I;
  #L4ea7aa.  if v2 >= v1 then goto L4ea7d4;
  #L4ea7ae.  v3:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.h` @type ^`boolean` @kind boolean;
  #L4ea7b2.  if v3 != 0 then goto L4ea7d4;
  #L4ea7b6.  v3:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.g` @type ^`boolean` @kind boolean;
  #L4ea7ba.  if v3 == 0 then goto L4ea7c0;
  #L4ea7be.  goto L4ea7d4;
  #L4ea7c0.  v3:= v6[v2] @kind object;
  #L4ea7c4.  v4:= v0[v2] @kind object;
  #L4ea7c8.  call `subscribe`(v3, v4) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4ea7ce.  v2:= v2 + 1;
  #L4ea7d2.  goto L4ea7aa;
  #L4ea7d4.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ea3f0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest$b.g` @type ^`boolean` @kind boolean;
  #L4ea3f4.  return v0;
}
