record `io.reactivex.rxjava3.internal.operators.completable.CompletableCache` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Completable` @kind class, `io.reactivex.rxjava3.core.CompletableObserver` @kind interface {
  `io.reactivex.rxjava3.core.CompletableSource` `io.reactivex.rxjava3.internal.operators.completable.CompletableCache.a` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.completable.CompletableCache.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.rxjava3.internal.operators.completable.CompletableCache.c` @AccessFlag FINAL;
  `java.lang.Throwable` `io.reactivex.rxjava3.internal.operators.completable.CompletableCache.d` @AccessFlag ;
}
global `io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[] `@@io.reactivex.rxjava3.internal.operators.completable.CompletableCache.e` @AccessFlag STATIC_FINAL;
global `io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[] `@@io.reactivex.rxjava3.internal.operators.completable.CompletableCache.f` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4b4124.  v0:= 0I;
  #L4b4126.  v1:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[v0];
  #L4b412a.  `@@io.reactivex.rxjava3.internal.operators.completable.CompletableCache.e` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[] := v1 @kind object;
  #L4b412e.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[v0];
  #L4b4132.  `@@io.reactivex.rxjava3.internal.operators.completable.CompletableCache.f` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[] := v0 @kind object;
  #L4b4136.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCache` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4b4148.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.<init>:()V` @kind direct;
  #L4b414e.  v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache.a` @type ^`io.reactivex.rxjava3.core.CompletableSource` := v2 @kind object;
  #L4b4152.  v2:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4b4156.  v0:= `@@io.reactivex.rxjava3.internal.operators.completable.CompletableCache.e` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[] @kind object;
  #L4b415a.  call `<init>`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4b4160.  v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v2 @kind object;
  #L4b4164.  v2:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L4b4168.  call `<init>`(v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4b416e.  v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v2 @kind object;
  #L4b4172.  return @kind void;
}
procedure `boolean` `e`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCache` v4 @kind this, `io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache;.e:(Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache$a;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b40d0.  v0:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4b40d4.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b40da.  v0:= temp @kind object;
  #L4b40dc.  v0:= (`io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[]) v0 @kind object;
  #L4b40e0.  v1:= `@@io.reactivex.rxjava3.internal.operators.completable.CompletableCache.f` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[] @kind object;
  #L4b40e4.  v2:= 0I;
  #L4b40e6.  if v0 != v1 then goto L4b40ec;
  #L4b40ea.  return v2;
  #L4b40ec.  v1:= length @variable v0;
  #L4b40ee.  v3:= v1 + 1;
  #L4b40f2.  v3:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[v3];
  #L4b40f6.  call `arraycopy`(v0, v2, v3, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4b40fc.  v3[v1]:= v5 @kind object;
  #L4b4100.  v1:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4b4104.  call temp:= `compareAndSet`(v1, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4b410a.  v0:= temp;
  #L4b410c.  if v0 == 0 then goto L4b40d0;
  #L4b4110.  v5:= 1I;
  #L4b4112.  return v5;
}
procedure `void` `f`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCache` v6 @kind this, `io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache;.f:(Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache$a;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4b423c.  v0:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4b4240.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b4246.  v0:= temp @kind object;
  #L4b4248.  v0:= (`io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[]) v0 @kind object;
  #L4b424c.  v1:= length @variable v0;
  #L4b424e.  if v1 != 0 then goto L4b4254;
  #L4b4252.  return @kind void;
  #L4b4254.  v2:= -1I;
  #L4b4256.  v3:= 0I;
  #L4b4258.  v4:= 0I;
  #L4b425a.  if v4 >= v1 then goto L4b4270;
  #L4b425e.  v5:= v0[v4] @kind object;
  #L4b4262.  if v5 != v7 then goto L4b426a;
  #L4b4266.  v2:= v4;
  #L4b4268.  goto L4b4270;
  #L4b426a.  v4:= v4 + 1;
  #L4b426e.  goto L4b425a;
  #L4b4270.  if v2 >= 0 then goto L4b4276;
  #L4b4274.  return @kind void;
  #L4b4276.  v4:= 1I;
  #L4b4278.  if v1 != v4 then goto L4b4282;
  #L4b427c.  v1:= `@@io.reactivex.rxjava3.internal.operators.completable.CompletableCache.e` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[] @kind object;
  #L4b4280.  goto L4b42a0;
  #L4b4282.  v5:= v1 + -1;
  #L4b4286.  v5:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[v5];
  #L4b428a.  call `arraycopy`(v0, v3, v5, v3, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4b4290.  v3:= v2 + 1;
  #L4b4294.  v1:= v1 - v2 @kind int;
  #L4b4296.  v1:= v1 - v4 @kind int;
  #L4b4298.  call `arraycopy`(v0, v3, v5, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4b429e.  v1:= v5 @kind object;
  #L4b42a0.  v2:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4b42a4.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4b42aa.  v0:= temp;
  #L4b42ac.  if v0 == 0 then goto L4b423c;
  #L4b42b0.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCache` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b4184.  v0:= v5.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4b4188.  v1:= `@@io.reactivex.rxjava3.internal.operators.completable.CompletableCache.f` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[] @kind object;
  #L4b418c.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4b4192.  v0:= temp @kind object;
  #L4b4194.  v0:= (`io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[]) v0 @kind object;
  #L4b4198.  v1:= length @variable v0;
  #L4b419a.  v2:= 0I;
  #L4b419c.  if v2 >= v1 then goto L4b41c0;
  #L4b41a0.  v3:= v0[v2] @kind object;
  #L4b41a4.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4b41aa.  v4:= temp;
  #L4b41ac.  if v4 != 0 then goto L4b41ba;
  #L4b41b0.  v3:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b41b4.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L4b41ba.  v2:= v2 + 1;
  #L4b41be.  goto L4b419c;
  #L4b41c0.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCache` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b41d4.  v5.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache.d` @type ^`java.lang.Throwable` := v6 @kind object;
  #L4b41d8.  v0:= v5.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4b41dc.  v1:= `@@io.reactivex.rxjava3.internal.operators.completable.CompletableCache.f` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[] @kind object;
  #L4b41e0.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4b41e6.  v0:= temp @kind object;
  #L4b41e8.  v0:= (`io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`[]) v0 @kind object;
  #L4b41ec.  v1:= length @variable v0;
  #L4b41ee.  v2:= 0I;
  #L4b41f0.  if v2 >= v1 then goto L4b4214;
  #L4b41f4.  v3:= v0[v2] @kind object;
  #L4b41f8.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4b41fe.  v4:= temp;
  #L4b4200.  if v4 != 0 then goto L4b420e;
  #L4b4204.  v3:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b4208.  call `onError`(v3, v6) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b420e.  v2:= v2 + 1;
  #L4b4212.  goto L4b41f0;
  #L4b4214.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCache` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4b4228.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.completable.CompletableCache` v2 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache;.subscribeActual:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4b42c4.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableCache$a`;
  #L4b42c8.  call `<init>`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache;Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind direct;
  #L4b42ce.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b42d4.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache;.e:(Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache$a;)Z` @kind virtual;
  #L4b42da.  v1:= temp;
  #L4b42dc.  if v1 == 0 then goto L4b4312;
  #L4b42e0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache$a;.isDisposed:()Z` @kind virtual;
  #L4b42e6.  v3:= temp;
  #L4b42e8.  if v3 == 0 then goto L4b42f2;
  #L4b42ec.  call `f`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache;.f:(Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache$a;)V` @kind virtual;
  #L4b42f2.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4b42f6.  v0:= 0I;
  #L4b42f8.  v1:= 1I;
  #L4b42fa.  call temp:= `compareAndSet`(v3, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4b4300.  v3:= temp;
  #L4b4302.  if v3 == 0 then goto L4b4328;
  #L4b4306.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache.a` @type ^`io.reactivex.rxjava3.core.CompletableSource` @kind object;
  #L4b430a.  call `subscribe`(v3, v2) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4b4310.  goto L4b4328;
  #L4b4312.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableCache.d` @type ^`java.lang.Throwable` @kind object;
  #L4b4316.  if v0 == 0 then goto L4b4322;
  #L4b431a.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b4320.  goto L4b4328;
  #L4b4322.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L4b4328.  return @kind void;
}
