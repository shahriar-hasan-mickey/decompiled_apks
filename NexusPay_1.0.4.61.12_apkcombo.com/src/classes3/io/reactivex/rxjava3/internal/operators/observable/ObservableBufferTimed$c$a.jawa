record `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `java.util.Collection` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c$a` v0 @kind this, `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e9570.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c$a.b` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` := v1 @kind object;
  #L4e9574.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e957a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c$a.a` @type ^`java.util.Collection` := v2 @kind object;
  #L4e957e.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c$a` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e9590.  v0:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c$a.b` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` @kind object;
  #L4e9594.  @monitorenter v0
  #L4e9596.  v1:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c$a.b` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` @kind object;
  #L4e959a.  v1:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.g` @type ^`java.util.List` @kind object;
  #L4e959e.  v2:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c$a.a` @type ^`java.util.Collection` @kind object;
  #L4e95a2.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L4e95a8.  @monitorexit v0
  #L4e95aa.  v0:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c$a.b` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` @kind object;
  #L4e95ae.  v1:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c$a.a` @type ^`java.util.Collection` @kind object;
  #L4e95b2.  v2:= 0I;
  #L4e95b4.  v3:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.f` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4e95b8.  call `b`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.b:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;Ljava/lang/Object;ZLio/reactivex/rxjava3/disposables/Disposable;)V` @kind static;
  #L4e95be.  return @kind void;
  #L4e95c0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e95c2.  @monitorexit v0
  #L4e95c4.  throw v1;
  catch `java.lang.Throwable` @[L4e9596..L4e95aa] goto L4e95c0;
  catch `java.lang.Throwable` @[L4e95c2..L4e95c4] goto L4e95c0;
}
