record `io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.a` @AccessFlag FINAL;
  `java.util.Iterator` `io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `java.util.Iterator` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZipIterable$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/Iterator;Lio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L500888.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50088e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L500892.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.b` @type ^`java.util.Iterator` := v2 @kind object;
  #L500896.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.c` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v3 @kind object;
  #L50089a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZipIterable$a;.a:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;

  #L5008c8.  v0:= 1I;
  #L5008ca.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.e` @type ^`boolean` := v0 @kind boolean;
  #L5008ce.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L5008d2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L5008d8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L5008dc.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5008e2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZipIterable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5008ac.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L5008b0.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L5008b6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZipIterable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500868.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L50086c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L500872.  v0:= temp;
  #L500874.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZipIterable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5008f4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.e` @type ^`boolean` @kind boolean;
  #L5008f8.  if v0 == 0 then goto L5008fe;
  #L5008fc.  return @kind void;
  #L5008fe.  v0:= 1I;
  #L500900.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.e` @type ^`boolean` := v0 @kind boolean;
  #L500904.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L500908.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L50090e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZipIterable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500920.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.e` @type ^`boolean` @kind boolean;
  #L500924.  if v0 == 0 then goto L500930;
  #L500928.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L50092e.  return @kind void;
  #L500930.  v0:= 1I;
  #L500932.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.e` @type ^`boolean` := v0 @kind boolean;
  #L500936.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L50093a.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L500940.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZipIterable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L500954.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.e` @type ^`boolean` @kind boolean;
  #L500958.  if v0 == 0 then goto L50095e;
  #L50095c.  return @kind void;
  #L50095e.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.b` @type ^`java.util.Iterator` @kind object;
  #L500962.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L500968.  v0:= temp @kind object;
  #L50096a.  v1:= "The iterator returned a null value" @kind object;
  #L50096e.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L500974.  v0:= temp @kind object;
  #L500976.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.c` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L50097a.  call temp:= `apply`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L500980.  v3:= temp @kind object;
  #L500982.  v0:= "The zipper function returned a null value" @kind object;
  #L500986.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L50098c.  v3:= temp @kind object;
  #L50098e.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L500992.  call `onNext`(v0, v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L500998.  v3:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.b` @type ^`java.util.Iterator` @kind object;
  #L50099c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5009a2.  v3:= temp;
  #L5009a4.  if v3 != 0 then goto L5009c2;
  #L5009a8.  v3:= 1I;
  #L5009aa.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.e` @type ^`boolean` := v3 @kind boolean;
  #L5009ae.  v3:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L5009b2.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L5009b8.  v3:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L5009bc.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L5009c2.  return @kind void;
  #L5009c4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5009c6.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L5009cc.  call `a`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZipIterable$a;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L5009d2.  return @kind void;
  #L5009d4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5009d6.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L5009dc.  call `a`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZipIterable$a;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L5009e2.  return @kind void;
  #L5009e4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5009e6.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L5009ec.  call `a`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZipIterable$a;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L5009f2.  return @kind void;
  catch `java.lang.Throwable` @[L50095e..L500976] goto L5009e4;
  catch `java.lang.Throwable` @[L500976..L50098e] goto L5009d4;
  catch `java.lang.Throwable` @[L500998..L5009a4] goto L5009c4;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZipIterable$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500a24.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L500a28.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L500a2e.  v0:= temp;
  #L500a30.  if v0 == 0 then goto L500a42;
  #L500a34.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L500a38.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L500a3c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L500a42.  return @kind void;
}
