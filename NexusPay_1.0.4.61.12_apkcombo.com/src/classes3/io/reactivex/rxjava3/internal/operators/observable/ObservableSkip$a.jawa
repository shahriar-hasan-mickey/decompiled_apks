record `io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.b` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fa150.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fa156.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4fa15a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.b` @type ^`long` := v2 @kind wide;
  #L4fa15e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa170.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fa174.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fa17a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa130.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fa134.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4fa13a.  v0:= temp;
  #L4fa13c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa18c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fa190.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4fa196.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa1a8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fa1ac.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fa1b2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fa1c4.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.b` @type ^`long` @kind wide;
  #L4fa1c8.  v2:= 0L;
  #L4fa1cc.  v4:= lcmp(v0, v2);
  #L4fa1d0.  if v4 == 0 then goto L4fa1e0;
  #L4fa1d4.  v2:= 1L;
  #L4fa1d8.  v0:= v0 - v2 @kind long;
  #L4fa1da.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.b` @type ^`long` := v0 @kind wide;
  #L4fa1de.  goto L4fa1ea;
  #L4fa1e0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fa1e4.  call `onNext`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4fa1ea.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa1fc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fa200.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4fa206.  v0:= temp;
  #L4fa208.  if v0 == 0 then goto L4fa21a;
  #L4fa20c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4fa210.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkip$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fa214.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4fa21a.  return @kind void;
}
