record `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.f` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.g` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Action` v4 @kind object, `io.reactivex.rxjava3.functions.Action` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ee1e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ee1ea.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4ee1ee.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L4ee1f2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` := v3 @kind object;
  #L4ee1f6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.d` @type ^`io.reactivex.rxjava3.functions.Action` := v4 @kind object;
  #L4ee1fa.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.e` @type ^`io.reactivex.rxjava3.functions.Action` := v5 @kind object;
  #L4ee1fe.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ee210.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ee214.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ee21a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ee1c4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ee1c8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ee1ce.  v0:= temp;
  #L4ee1d0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ee22c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` @kind boolean;
  #L4ee230.  if v0 == 0 then goto L4ee236;
  #L4ee234.  return @kind void;
  #L4ee236.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.d` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4ee23a.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4ee240.  v0:= 1I;
  #L4ee242.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4ee246.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ee24a.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4ee250.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.e` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4ee254.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4ee25a.  goto L4ee26a;
  #L4ee25c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ee25e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ee264.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4ee26a.  return @kind void;
  #L4ee26c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ee26e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ee274.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ee27a.  return @kind void;
  catch `java.lang.Throwable` @[L4ee236..L4ee240] goto L4ee26c;
  catch `java.lang.Throwable` @[L4ee250..L4ee25a] goto L4ee25c;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ee2a4.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` @kind boolean;
  #L4ee2a8.  if v0 == 0 then goto L4ee2b4;
  #L4ee2ac.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4ee2b2.  return @kind void;
  #L4ee2b4.  v0:= 1I;
  #L4ee2b6.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4ee2ba.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4ee2be.  call `accept`(v1, v6) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4ee2c4.  goto L4ee2ea;
  #L4ee2c6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ee2c8.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ee2ce.  v2:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4ee2d2.  v3:= 2I;
  #L4ee2d4.  v3:= new `java.lang.Throwable`[v3];
  #L4ee2d8.  v4:= 0I;
  #L4ee2da.  v3[v4]:= v6 @kind object;
  #L4ee2de.  v3[v0]:= v1 @kind object;
  #L4ee2e2.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4ee2e8.  v6:= v2 @kind object;
  #L4ee2ea.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ee2ee.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ee2f4.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.e` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4ee2f8.  call `run`(v6) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4ee2fe.  goto L4ee30e;
  #L4ee300.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ee302.  call `throwIfFatal`(v6) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ee308.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4ee30e.  return @kind void;
  catch `java.lang.Throwable` @[L4ee2ba..L4ee2c4] goto L4ee2c6;
  catch `java.lang.Throwable` @[L4ee2f4..L4ee2fe] goto L4ee300;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ee338.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.g` @type ^`boolean` @kind boolean;
  #L4ee33c.  if v0 == 0 then goto L4ee342;
  #L4ee340.  return @kind void;
  #L4ee342.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4ee346.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4ee34c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ee350.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4ee356.  return @kind void;
  #L4ee358.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ee35a.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ee360.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ee364.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ee36a.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ee370.  return @kind void;
  catch `java.lang.Throwable` @[L4ee342..L4ee34c] goto L4ee358;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ee390.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ee394.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ee39a.  v0:= temp;
  #L4ee39c.  if v0 == 0 then goto L4ee3ae;
  #L4ee3a0.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4ee3a4.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ee3a8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ee3ae.  return @kind void;
}
