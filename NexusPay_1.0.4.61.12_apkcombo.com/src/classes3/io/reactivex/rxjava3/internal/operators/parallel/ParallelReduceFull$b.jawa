record `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription` @kind class {
  `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$a`[] `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.AtomicThrowable` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.e` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object, `int` v4 , `io.reactivex.rxjava3.functions.BiFunction` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.<init>:(Lorg/reactivestreams/Subscriber;ILio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L503f8c.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L503f92.  v3:= new `java.util.concurrent.atomic.AtomicReference`;
  #L503f96.  call `<init>`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L503f9c.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v3 @kind object;
  #L503fa0.  v3:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L503fa4.  call `<init>`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L503faa.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.d` @type ^`java.util.concurrent.atomic.AtomicInteger` := v3 @kind object;
  #L503fae.  v3:= new `io.reactivex.rxjava3.internal.util.AtomicThrowable`;
  #L503fb2.  call `<init>`(v3) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L503fb8.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.e` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` := v3 @kind object;
  #L503fbc.  v3:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$a`[v4];
  #L503fc0.  v0:= 0I;
  #L503fc2.  if v0 >= v4 then goto L503fda;
  #L503fc6.  v1:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$a`;
  #L503fca.  call `<init>`(v1, v2, v5) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L503fd0.  v3[v0]:= v1 @kind object;
  #L503fd4.  v0:= v0 + 1;
  #L503fd8.  goto L503fc2;
  #L503fda.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.a` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$a`[] := v3 @kind object;
  #L503fde.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v5 @kind object;
  #L503fe2.  v3:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L503fe6.  call `lazySet`(v3, v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L503fec.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.a:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L5040d8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.e` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L5040dc.  v1:= 0I;
  #L5040de.  call temp:= `compareAndSet`(v0, v1, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L5040e4.  v0:= temp;
  #L5040e6.  if v0 == 0 then goto L5040fc;
  #L5040ea.  call `cancel`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.cancel:()V` @kind virtual;
  #L5040f0.  v0:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L5040f4.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5040fa.  goto L504112;
  #L5040fc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.e` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L504100.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L504106.  v0:= temp @kind object;
  #L504108.  if v3 == v0 then goto L504112;
  #L50410c.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L504112.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L504000.  v0:= v4.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.a` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$a`[] @kind object;
  #L504004.  v1:= length @variable v0;
  #L504006.  v2:= 0I;
  #L504008.  if v2 >= v1 then goto L50401c;
  #L50400c.  v3:= v0[v2] @kind object;
  #L504010.  call `a`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$a;.a:()V` @kind virtual;
  #L504016.  v2:= v2 + 1;
  #L50401a.  goto L504008;
  #L50401c.  return @kind void;
}
procedure `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c` `e`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.e:(Ljava/lang/Object;)Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$c;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L503f08.  v0:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L503f0c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L503f12.  v0:= temp @kind object;
  #L503f14.  v0:= (`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c`) v0 @kind object;
  #L503f18.  v1:= 0I;
  #L503f1a.  if v0 != 0 then goto L503f3a;
  #L503f1e.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c`;
  #L503f22.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$c;.<init>:()V` @kind direct;
  #L503f28.  v2:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L503f2c.  call temp:= `compareAndSet`(v2, v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L503f32.  v2:= temp;
  #L503f34.  if v2 != 0 then goto L503f3a;
  #L503f38.  goto L503f08;
  #L503f3a.  call temp:= `b`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$c;.b:()I` @kind virtual;
  #L503f40.  v2:= temp;
  #L503f42.  if v2 >= 0 then goto L503f52;
  #L503f46.  v2:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L503f4a.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L503f50.  goto L503f08;
  #L503f52.  if v2 != 0 then goto L503f5c;
  #L503f56.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c.a` @type ^`java.lang.Object` := v4 @kind object;
  #L503f5a.  goto L503f60;
  #L503f5c.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c.b` @type ^`java.lang.Object` := v4 @kind object;
  #L503f60.  call temp:= `a`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$c;.a:()Z` @kind virtual;
  #L503f66.  v4:= temp;
  #L503f68.  if v4 == 0 then goto L503f78;
  #L503f6c.  v4:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L503f70.  call temp:= `compareAndSet`(v4, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L503f76.  return v0 @kind object;
  #L503f78.  return v1 @kind object;
}
procedure `void` `f`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.f:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L504030.  if v3 == 0 then goto L504072;
  #L504034.  call temp:= `e`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.e:(Ljava/lang/Object;)Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$c;` @kind virtual;
  #L50403a.  v3:= temp @kind object;
  #L50403c.  if v3 == 0 then goto L504072;
  #L504040.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L504044.  v1:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c.a` @type ^`java.lang.Object` @kind object;
  #L504048.  v3:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c.b` @type ^`java.lang.Object` @kind object;
  #L50404c.  call temp:= `apply`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L504052.  v3:= temp @kind object;
  #L504054.  v0:= "The reducer returned a null value" @kind object;
  #L504058.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L50405e.  v3:= temp @kind object;
  #L504060.  goto L504034;
  #L504062.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L504064.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L50406a.  call `a`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull$b;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L504070.  return @kind void;
  #L504072.  v3:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L504076.  call temp:= `decrementAndGet`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L50407c.  v3:= temp;
  #L50407e.  if v3 != 0 then goto L5040b8;
  #L504082.  v3:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L504086.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L50408c.  v3:= temp @kind object;
  #L50408e.  v3:= (`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c`) v3 @kind object;
  #L504092.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L504096.  v1:= 0I;
  #L504098.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L50409e.  if v3 == 0 then goto L5040ae;
  #L5040a2.  v3:= v3.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull$c.a` @type ^`java.lang.Object` @kind object;
  #L5040a6.  call `complete`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L5040ac.  goto L5040b8;
  #L5040ae.  v3:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L5040b2.  call `onComplete`(v3) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L5040b8.  return @kind void;
  catch `java.lang.Throwable` @[L504040..L504060] goto L504062;
}
