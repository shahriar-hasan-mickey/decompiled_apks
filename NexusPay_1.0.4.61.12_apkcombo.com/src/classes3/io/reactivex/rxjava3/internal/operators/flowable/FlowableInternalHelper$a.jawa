record `io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.functions.Supplier` @kind interface {
  `io.reactivex.rxjava3.core.Flowable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$a.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$a` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper$a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c7ed0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c7ed6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$a.a` @type ^`io.reactivex.rxjava3.core.Flowable` := v1 @kind object;
  #L4c7eda.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$a.b` @type ^`int` := v2;
  #L4c7ede.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$a.c` @type ^`boolean` := v3 @kind boolean;
  #L4c7ee2.  return @kind void;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper$a;.a:()Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4c7e8c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$a.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4c7e90.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$a.b` @type ^`int`;
  #L4c7e94.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$a.c` @type ^`boolean` @kind boolean;
  #L4c7e98.  call temp:= `replay`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(IZ)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind virtual;
  #L4c7e9e.  v0:= temp @kind object;
  #L4c7ea0.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper$a;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4c7eb4.  call temp:= `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper$a;.a:()Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind virtual;
  #L4c7eba.  v0:= temp @kind object;
  #L4c7ebc.  return v0 @kind object;
}
