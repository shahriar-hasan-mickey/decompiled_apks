record `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.f` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.g` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.h` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.i` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.j` @AccessFlag VOLATILE;
  `java.lang.Throwable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.k` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.rxjava3.core.Scheduler` v6 @kind object, `int` v7 , `boolean` v8 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4d2ab0.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4d2ab6.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4d2aba.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4d2ac0.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.h` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L4d2ac4.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.a` @type ^`org.reactivestreams.Subscriber` := v2 @kind object;
  #L4d2ac8.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.b` @type ^`long` := v3 @kind wide;
  #L4d2acc.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.c` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L4d2ad0.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler` := v6 @kind object;
  #L4d2ad4.  v2:= new `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue`;
  #L4d2ad8.  call `<init>`(v2, v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L4d2ade.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` := v2 @kind object;
  #L4d2ae2.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.f` @type ^`boolean` := v8 @kind boolean;
  #L4d2ae6.  return @kind void;
}
procedure `boolean` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v2 @kind this, `boolean` v3 , `boolean` v4 , `org.reactivestreams.Subscriber` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.a:(ZZLorg/reactivestreams/Subscriber;Z)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4d2a3c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.i` @type ^`boolean` @kind boolean;
  #L4d2a40.  v1:= 1I;
  #L4d2a42.  if v0 == 0 then goto L4d2a52;
  #L4d2a46.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4d2a4a.  call `clear`(v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4d2a50.  return v1;
  #L4d2a52.  if v3 == 0 then goto L4d2a9c;
  #L4d2a56.  if v6 == 0 then goto L4d2a76;
  #L4d2a5a.  if v4 == 0 then goto L4d2a9c;
  #L4d2a5e.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.k` @type ^`java.lang.Throwable` @kind object;
  #L4d2a62.  if v3 == 0 then goto L4d2a6e;
  #L4d2a66.  call `onError`(v5, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d2a6c.  goto L4d2a74;
  #L4d2a6e.  call `onComplete`(v5) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4d2a74.  return v1;
  #L4d2a76.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.k` @type ^`java.lang.Throwable` @kind object;
  #L4d2a7a.  if v3 == 0 then goto L4d2a90;
  #L4d2a7e.  v4:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4d2a82.  call `clear`(v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4d2a88.  call `onError`(v5, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d2a8e.  return v1;
  #L4d2a90.  if v4 == 0 then goto L4d2a9c;
  #L4d2a94.  call `onComplete`(v5) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4d2a9a.  return v1;
  #L4d2a9c.  v3:= 0I;
  #L4d2a9e.  return v3;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v23 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L4d2b38.  v0:= v23 @kind object;
  #L4d2b3c.  call temp:= `getAndIncrement`(v23) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4d2b42.  v1:= temp;
  #L4d2b44.  if v1 == 0 then goto L4d2b4a;
  #L4d2b48.  return @kind void;
  #L4d2b4a.  v1:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d2b4e.  v2:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4d2b52.  v3:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.f` @type ^`boolean` @kind boolean;
  #L4d2b56.  v4:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4d2b5a.  v5:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4d2b5e.  v6:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.b` @type ^`long` @kind wide;
  #L4d2b62.  v9:= 1I;
  #L4d2b64.  v10:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d2b68.  call temp:= `get`(v10) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4d2b6e.  v10:= temp @kind wide;
  #L4d2b70.  v14:= 0L;
  #L4d2b74.  v16:= lcmp(v14, v10);
  #L4d2b78.  if v16 == 0 then goto L4d2bf2;
  #L4d2b7c.  v8:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.j` @type ^`boolean` @kind boolean;
  #L4d2b80.  call temp:= `peek`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.peek:()Ljava/lang/Object;` @kind virtual;
  #L4d2b86.  v17:= temp @kind object;
  #L4d2b88.  v17:= (`java.lang.Long`) v17 @kind object;
  #L4d2b8c.  if v17 != 0 then goto L4d2b96;
  #L4d2b90.  v18:= 1I;
  #L4d2b94.  goto L4d2b9a;
  #L4d2b96.  v18:= 0I;
  #L4d2b9a.  call temp:= `now`(v5, v4) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4d2ba0.  v19:= temp @kind wide;
  #L4d2ba2.  if v18 != 0 then goto L4d2bbe;
  #L4d2ba6.  call temp:= `longValue`(v17) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4d2bac.  v21:= temp @kind wide;
  #L4d2bae.  v19:= v19 - v6 @kind long;
  #L4d2bb2.  v17:= lcmp(v21, v19);
  #L4d2bb6.  if v17 <= 0 then goto L4d2bbe;
  #L4d2bba.  v12:= 1I;
  #L4d2bbc.  goto L4d2bc2;
  #L4d2bbe.  v12:= v18;
  #L4d2bc2.  call temp:= `a`(v0, v8, v12, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.a:(ZZLorg/reactivestreams/Subscriber;Z)Z` @kind virtual;
  #L4d2bc8.  v8:= temp;
  #L4d2bca.  if v8 == 0 then goto L4d2bd0;
  #L4d2bce.  return @kind void;
  #L4d2bd0.  if v12 == 0 then goto L4d2bd6;
  #L4d2bd4.  goto L4d2bf2;
  #L4d2bd6.  call temp:= `poll`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4d2bdc.  call temp:= `poll`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4d2be2.  v8:= temp @kind object;
  #L4d2be4.  call `onNext`(v1, v8) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4d2bea.  v12:= 1L;
  #L4d2bee.  v14:= v14 + v12 @kind long;
  #L4d2bf0.  goto L4d2b74;
  #L4d2bf2.  v10:= 0L;
  #L4d2bf6.  v8:= lcmp(v14, v10);
  #L4d2bfa.  if v8 == 0 then goto L4d2c08;
  #L4d2bfe.  v8:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d2c02.  call temp:= `produced`(v8, v14) @signature `Lio/reactivex/rxjava3/internal/util/BackpressureHelper;.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L4d2c08.  v8:= -v9 @kind int;
  #L4d2c0a.  call temp:= `addAndGet`(v0, v8) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L4d2c10.  v9:= temp;
  #L4d2c12.  if v9 != 0 then goto L4d2b64;
  #L4d2c16.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d2af8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.i` @type ^`boolean` @kind boolean;
  #L4d2afc.  if v0 != 0 then goto L4d2b26;
  #L4d2b00.  v0:= 1I;
  #L4d2b02.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.i` @type ^`boolean` := v0 @kind boolean;
  #L4d2b06.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4d2b0a.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4d2b10.  call temp:= `getAndIncrement`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4d2b16.  v0:= temp;
  #L4d2b18.  if v0 != 0 then goto L4d2b26;
  #L4d2b1c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4d2b20.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4d2b26.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d2c28.  v0:= 1I;
  #L4d2c2a.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.j` @type ^`boolean` := v0 @kind boolean;
  #L4d2c2e.  call `b`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.b:()V` @kind virtual;
  #L4d2c34.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L4d2c48.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.k` @type ^`java.lang.Throwable` := v1 @kind object;
  #L4d2c4c.  v1:= 1I;
  #L4d2c4e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.j` @type ^`boolean` := v1 @kind boolean;
  #L4d2c52.  call `b`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.b:()V` @kind virtual;
  #L4d2c58.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d2c6c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4d2c70.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4d2c74.  call temp:= `now`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4d2c7a.  v0:= temp @kind wide;
  #L4d2c7c.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.e` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4d2c80.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4d2c86.  v0:= temp @kind object;
  #L4d2c88.  call temp:= `offer`(v2, v0, v4) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4d2c8e.  call `b`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.b:()V` @kind virtual;
  #L4d2c94.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d2ca8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4d2cac.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4d2cb2.  v0:= temp;
  #L4d2cb4.  if v0 == 0 then goto L4d2cd6;
  #L4d2cb8.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.g` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4d2cbc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d2cc0.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4d2cc6.  v0:= 9223372036854775807L;
  #L4d2cd0.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4d2cd6.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d2ce8.  call temp:= `validate`(v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L4d2cee.  v0:= temp;
  #L4d2cf0.  if v0 == 0 then goto L4d2d04;
  #L4d2cf4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed$a.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d2cf8.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/BackpressureHelper;.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L4d2cfe.  call `b`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed$a;.b:()V` @kind virtual;
  #L4d2d04.  return @kind void;
}
