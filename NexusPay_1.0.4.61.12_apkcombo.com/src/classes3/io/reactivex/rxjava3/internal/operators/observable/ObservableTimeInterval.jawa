record `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.observable.a` @kind class {
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval.a` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeInterval;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4fc59c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4fc5a2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval.a` @type ^`io.reactivex.rxjava3.core.Scheduler` := v3 @kind object;
  #L4fc5a6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval.b` @type ^`java.util.concurrent.TimeUnit` := v2 @kind object;
  #L4fc5aa.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval` v4 @kind this, `io.reactivex.rxjava3.core.Observer` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeInterval;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fc5bc.  v0:= v4.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4fc5c0.  v1:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a`;
  #L4fc5c4.  v2:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4fc5c8.  v3:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval.a` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4fc5cc.  call `<init>`(v1, v5, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeInterval$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4fc5d2.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4fc5d8.  return @kind void;
}
