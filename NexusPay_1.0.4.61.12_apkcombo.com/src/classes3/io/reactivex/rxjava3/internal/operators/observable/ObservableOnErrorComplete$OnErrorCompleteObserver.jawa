record `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete$OnErrorCompleteObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f534c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f5352.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4f5356.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L4f535a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete$OnErrorCompleteObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f536c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f5370.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4f5376.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete$OnErrorCompleteObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f532c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f5330.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4f5336.  v0:= temp;
  #L4f5338.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete$OnErrorCompleteObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f5388.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f538c.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f5392.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete$OnErrorCompleteObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f53a4.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4f53a8.  call temp:= `test`(v0, v6) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4f53ae.  v0:= temp;
  #L4f53b0.  if v0 == 0 then goto L4f53c0;
  #L4f53b4.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f53b8.  call `onComplete`(v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f53be.  goto L4f53ca;
  #L4f53c0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f53c4.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f53ca.  return @kind void;
  #L4f53cc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f53ce.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f53d4.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f53d8.  v2:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4f53dc.  v3:= 2I;
  #L4f53de.  v3:= new `java.lang.Throwable`[v3];
  #L4f53e2.  v4:= 0I;
  #L4f53e4.  v3[v4]:= v6 @kind object;
  #L4f53e8.  v6:= 1I;
  #L4f53ea.  v3[v6]:= v0 @kind object;
  #L4f53ee.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4f53f4.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f53fa.  return @kind void;
  catch `java.lang.Throwable` @[L4f53a4..L4f53b0] goto L4f53cc;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete$OnErrorCompleteObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f5418.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f541c.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4f5422.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete$OnErrorCompleteObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f5434.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f5438.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4f543e.  v0:= temp;
  #L4f5440.  if v0 == 0 then goto L4f5452;
  #L4f5444.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4f5448.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete$OnErrorCompleteObserver.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f544c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4f5452.  return @kind void;
}
