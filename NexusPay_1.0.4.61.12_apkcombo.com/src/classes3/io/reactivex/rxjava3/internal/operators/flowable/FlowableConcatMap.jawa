record `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.ErrorMode` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `io.reactivex.rxjava3.internal.util.ErrorMode` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4be170.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4be176.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4be17a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap.c` @type ^`int` := v3;
  #L4be17e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap.d` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` := v4 @kind object;
  #L4be182.  return @kind void;
}
procedure `org.reactivestreams.Subscriber` `subscribe`(`org.reactivestreams.Subscriber` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 , `io.reactivex.rxjava3.internal.util.ErrorMode` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap;.subscribe:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)Lorg/reactivestreams/Subscriber;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4be11c.  v0:= `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$a.a` @type ^`int`[] @kind object;
  #L4be120.  call temp:= `ordinal`(v5) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4be126.  v5:= temp;
  #L4be128.  v5:= v0[v5];
  #L4be12c.  v0:= 1I;
  #L4be12e.  if v5 == v0 then goto L4be150;
  #L4be132.  v1:= 2I;
  #L4be134.  if v5 == v1 then goto L4be144;
  #L4be138.  v5:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$d`;
  #L4be13c.  call `<init>`(v5, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$d;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L4be142.  return v5 @kind object;
  #L4be144.  v5:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$c`;
  #L4be148.  call `<init>`(v5, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$c;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4be14e.  return v5 @kind object;
  #L4be150.  v5:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$c`;
  #L4be154.  v0:= 0I;
  #L4be156.  call `<init>`(v5, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$c;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4be15c.  return v5 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4be194.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4be198.  v1:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4be19c.  call temp:= `tryScalarXMapSubscribe`(v0, v5, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.tryScalarXMapSubscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)Z` @kind static;
  #L4be1a2.  v0:= temp;
  #L4be1a4.  if v0 == 0 then goto L4be1aa;
  #L4be1a8.  return @kind void;
  #L4be1aa.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4be1ae.  v1:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4be1b2.  v2:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap.c` @type ^`int`;
  #L4be1b6.  v3:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap.d` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4be1ba.  call temp:= `subscribe`(v5, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap;.subscribe:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)Lorg/reactivestreams/Subscriber;` @kind static;
  #L4be1c0.  v5:= temp @kind object;
  #L4be1c2.  call `subscribe`(v0, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L4be1c8.  return @kind void;
}
