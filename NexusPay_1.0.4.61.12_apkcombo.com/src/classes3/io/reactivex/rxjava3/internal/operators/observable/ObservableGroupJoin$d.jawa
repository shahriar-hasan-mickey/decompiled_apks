record `io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$b` `io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d` v0 @kind this, `io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$b` v1 @kind object, `boolean` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupJoin$d;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupJoin$b;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f264c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4f2652.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$b` := v1 @kind object;
  #L4f2656.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d.b` @type ^`boolean` := v2 @kind boolean;
  #L4f265a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupJoin$d;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4f266c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4f2672.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupJoin$d;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f2624.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4f262a.  v0:= temp @kind object;
  #L4f262c.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4f2630.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4f2636.  v0:= temp;
  #L4f2638.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupJoin$d;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f2684.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$b` @kind object;
  #L4f2688.  call `d`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupJoin$b;.d:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupJoin$d;)V` @kind interface;
  #L4f268e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupJoin$d;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f26a0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$b` @kind object;
  #L4f26a4.  call `a`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupJoin$b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f26aa.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupJoin$d;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f26bc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$b` @kind object;
  #L4f26c0.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d.b` @type ^`boolean` @kind boolean;
  #L4f26c4.  call `b`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupJoin$b;.b:(ZLjava/lang/Object;)V` @kind interface;
  #L4f26ca.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin$d` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupJoin$d;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4f26dc.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4f26e2.  return @kind void;
}
