record `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c` @kind class {
  `java.util.concurrent.atomic.AtomicInteger` `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$a.g` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f8748.  call `<init>`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.<init>:(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4f874e.  v1:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L4f8752.  v2:= 1I;
  #L4f8754.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L4f875a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$a.g` @type ^`java.util.concurrent.atomic.AtomicInteger` := v1 @kind object;
  #L4f875e.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$a;.b:()V` @AccessFlag  {
    temp;
    v0;

  #L4f8770.  call `c`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.c:()V` @kind virtual;
  #L4f8776.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$a.g` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L4f877a.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4f8780.  v0:= temp;
  #L4f8782.  if v0 != 0 then goto L4f8790;
  #L4f8786.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f878a.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f8790.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f87a4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$a.g` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L4f87a8.  call temp:= `incrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.incrementAndGet:()I` @kind virtual;
  #L4f87ae.  v0:= temp;
  #L4f87b0.  v1:= 2I;
  #L4f87b2.  if v0 != v1 then goto L4f87d6;
  #L4f87b6.  call `c`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.c:()V` @kind virtual;
  #L4f87bc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$a.g` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L4f87c0.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4f87c6.  v0:= temp;
  #L4f87c8.  if v0 != 0 then goto L4f87d6;
  #L4f87cc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f87d0.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f87d6.  return @kind void;
}
