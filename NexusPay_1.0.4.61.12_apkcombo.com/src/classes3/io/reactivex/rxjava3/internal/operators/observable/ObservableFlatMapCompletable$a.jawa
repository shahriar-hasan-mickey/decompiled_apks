record `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.observers.BasicIntQueueDisposable` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.AtomicThrowable` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.f` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.g` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ef618.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BasicIntQueueDisposable;.<init>:()V` @kind direct;
  #L4ef61e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4ef622.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.c` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4ef626.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.d` @type ^`boolean` := v3 @kind boolean;
  #L4ef62a.  v1:= new `io.reactivex.rxjava3.internal.util.AtomicThrowable`;
  #L4ef62e.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L4ef634.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` := v1 @kind object;
  #L4ef638.  v1:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L4ef63c.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4ef642.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v1 @kind object;
  #L4ef646.  v1:= 1I;
  #L4ef648.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L4ef64e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this, `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a$a` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.a:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a$a;)V` @AccessFlag  {
    temp;
    v0;

  #L4ef6ac.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4ef6b0.  call temp:= `delete`(v0, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4ef6b6.  call `onComplete`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.onComplete:()V` @kind virtual;
  #L4ef6bc.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.clear:()V` @AccessFlag PUBLIC {
    temp;

  #L4ef660.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ef674.  v0:= 1I;
  #L4ef676.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4ef67a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ef67e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ef684.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4ef688.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4ef68e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4ef692.  call `tryTerminateAndReport`(v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateAndReport:()V` @kind virtual;
  #L4ef698.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this, `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a$a` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.e:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a$a;Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;

  #L4ef6d0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4ef6d4.  call temp:= `delete`(v0, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4ef6da.  call `onError`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ef6e0.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ef5b8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ef5bc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ef5c2.  v0:= temp;
  #L4ef5c4.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ef5d8.  v0:= 1I;
  #L4ef5da.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ef6f4.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4ef6fa.  v0:= temp;
  #L4ef6fc.  if v0 != 0 then goto L4ef70e;
  #L4ef700.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4ef704.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ef708.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4ef70e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ef720.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4ef724.  call temp:= `tryAddThrowableOrReport`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4ef72a.  v2:= temp;
  #L4ef72c.  if v2 == 0 then goto L4ef77c;
  #L4ef730.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.d` @type ^`boolean` @kind boolean;
  #L4ef734.  if v2 == 0 then goto L4ef754;
  #L4ef738.  call temp:= `decrementAndGet`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4ef73e.  v2:= temp;
  #L4ef740.  if v2 != 0 then goto L4ef77c;
  #L4ef744.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4ef748.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ef74c.  call `tryTerminateConsumer`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4ef752.  goto L4ef77c;
  #L4ef754.  v2:= 1I;
  #L4ef756.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.g` @type ^`boolean` := v2 @kind boolean;
  #L4ef75a.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ef75e.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ef764.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4ef768.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4ef76e.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4ef772.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ef776.  call `tryTerminateConsumer`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4ef77c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ef790.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ef794.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ef79a.  v3:= temp @kind object;
  #L4ef79c.  v0:= "The mapper returned a null CompletableSource" @kind object;
  #L4ef7a0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ef7a6.  v3:= temp @kind object;
  #L4ef7a8.  v3:= (`io.reactivex.rxjava3.core.CompletableSource`) v3 @kind object;
  #L4ef7ac.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4ef7b2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a$a`;
  #L4ef7b6.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;)V` @kind direct;
  #L4ef7bc.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.g` @type ^`boolean` @kind boolean;
  #L4ef7c0.  if v1 != 0 then goto L4ef7da;
  #L4ef7c4.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4ef7c8.  call temp:= `add`(v1, v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4ef7ce.  v1:= temp;
  #L4ef7d0.  if v1 == 0 then goto L4ef7da;
  #L4ef7d4.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4ef7da.  return @kind void;
  #L4ef7dc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ef7de.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ef7e4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ef7e8.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ef7ee.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ef7f4.  return @kind void;
  catch `java.lang.Throwable` @[L4ef790..L4ef7ac] goto L4ef7dc;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ef814.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ef818.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ef81e.  v0:= temp;
  #L4ef820.  if v0 == 0 then goto L4ef832;
  #L4ef824.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4ef828.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ef82c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ef832.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ef604.  v0:= 0I;
  #L4ef606.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletable$a` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletable$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L4ef5ec.  v1:= v1 ^& 2;
  #L4ef5f0.  return v1;
}
