record `io.reactivex.rxjava3.internal.operators.maybe.MaybeErrorCallable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Maybe` @kind class {
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.maybe.MaybeErrorCallable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeErrorCallable` v0 @kind this, `io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeErrorCallable;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4dd09c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.<init>:()V` @kind direct;
  #L4dd0a2.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeErrorCallable.a` @type ^`io.reactivex.rxjava3.functions.Supplier` := v1 @kind object;
  #L4dd0a6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeErrorCallable` v2 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeErrorCallable;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4dd0b8.  call temp:= `a`() @signature `Lio/reactivex/rxjava3/disposables/a;.a:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L4dd0be.  v0:= temp @kind object;
  #L4dd0c0.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4dd0c6.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeErrorCallable.a` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4dd0ca.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4dd0d0.  v0:= temp @kind object;
  #L4dd0d2.  v1:= "Supplier returned a null Throwable." @kind object;
  #L4dd0d6.  call temp:= `nullCheck`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4dd0dc.  v0:= temp @kind object;
  #L4dd0de.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L4dd0e2.  goto L4dd0ec;
  #L4dd0e4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4dd0e6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4dd0ec.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dd0f2.  return @kind void;
  catch `java.lang.Throwable` @[L4dd0c6..L4dd0e2] goto L4dd0e4;
}
