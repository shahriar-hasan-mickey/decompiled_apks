record `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/BiFunction;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f64b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f64ba.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4f64be.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L4f64c2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v2 @kind object;
  #L4f64c6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f64d8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f64dc.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4f64e2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6494.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f6498.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4f649e.  v0:= temp;
  #L4f64a0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f64f4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L4f64f8.  if v0 == 0 then goto L4f650c;
  #L4f64fc.  v1:= 0I;
  #L4f64fe.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L4f6502.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4f6506.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4f650c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6520.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L4f6524.  if v0 == 0 then goto L4f653a;
  #L4f6528.  v0:= 0I;
  #L4f652a.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L4f652e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4f6532.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f6538.  goto L4f6540;
  #L4f653a.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f6540.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f6554.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L4f6558.  if v0 == 0 then goto L4f6592;
  #L4f655c.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L4f6560.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4f6566.  v3:= temp @kind object;
  #L4f6568.  v0:= "The reducer returned a null value" @kind object;
  #L4f656c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4f6572.  v3:= temp @kind object;
  #L4f6574.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L4f6578.  goto L4f6592;
  #L4f657a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f657c.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f6582.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f6586.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4f658c.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f6592.  return @kind void;
  catch `java.lang.Throwable` @[L4f655c..L4f6578] goto L4f657a;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f65b0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f65b4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4f65ba.  v0:= temp;
  #L4f65bc.  if v0 == 0 then goto L4f65ce;
  #L4f65c0.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4f65c4.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4f65c8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4f65ce.  return @kind void;
}
