record `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a` v0 @kind this, `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate` v1 @kind object, `io.reactivex.rxjava3.core.MaybeObserver` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnTerminate$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnTerminate;Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4dcc20.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate` := v1 @kind object;
  #L4dcc24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dcc2a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v2 @kind object;
  #L4dcc2e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnTerminate$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dcc40.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate` @kind object;
  #L4dcc44.  v0:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate.b` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4dcc48.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4dcc4e.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dcc52.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4dcc58.  return @kind void;
  #L4dcc5a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4dcc5c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4dcc62.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dcc66.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dcc6c.  return @kind void;
  catch `java.lang.Throwable` @[L4dcc40..L4dcc4e] goto L4dcc5a;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnTerminate$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4dcc8c.  v0:= v4.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate` @kind object;
  #L4dcc90.  v0:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate.b` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4dcc94.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4dcc9a.  goto L4dccc2;
  #L4dcc9c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4dcc9e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4dcca4.  v1:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4dcca8.  v2:= 2I;
  #L4dccaa.  v2:= new `java.lang.Throwable`[v2];
  #L4dccae.  v3:= 0I;
  #L4dccb0.  v2[v3]:= v5 @kind object;
  #L4dccb4.  v5:= 1I;
  #L4dccb6.  v2[v5]:= v0 @kind object;
  #L4dccba.  call `<init>`(v1, v2) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4dccc0.  v5:= v1 @kind object;
  #L4dccc2.  v0:= v4.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dccc6.  call `onError`(v0, v5) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dcccc.  return @kind void;
  catch `java.lang.Throwable` @[L4dcc8c..L4dcc9a] goto L4dcc9c;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnTerminate$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dccec.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dccf0.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4dccf6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnTerminate$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dcd08.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate` @kind object;
  #L4dcd0c.  v0:= v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate.b` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4dcd10.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4dcd16.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dcd1a.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4dcd20.  return @kind void;
  #L4dcd22.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4dcd24.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4dcd2a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnTerminate$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dcd2e.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dcd34.  return @kind void;
  catch `java.lang.Throwable` @[L4dcd08..L4dcd16] goto L4dcd22;
}
