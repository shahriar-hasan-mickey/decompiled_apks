record `io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElementCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Completable` @kind class, `io.reactivex.rxjava3.internal.fuseable.FuseToMaybe` @kind interface {
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElementCompletable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElementCompletable` v0 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIgnoreElementCompletable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4def08.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.<init>:()V` @kind direct;
  #L4def0e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElementCompletable.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v1 @kind object;
  #L4def12.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Maybe` `fuseToMaybe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElementCompletable` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIgnoreElementCompletable;.fuseToMaybe:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4deee0.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElement`;
  #L4deee4.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElementCompletable.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4deee8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIgnoreElement;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L4deeee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4deef4.  v0:= temp @kind object;
  #L4deef6.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElementCompletable` v2 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIgnoreElementCompletable;.subscribeActual:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4def24.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElementCompletable.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4def28.  v1:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElementCompletable$a`;
  #L4def2c.  call `<init>`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIgnoreElementCompletable$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind direct;
  #L4def32.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4def38.  return @kind void;
}
