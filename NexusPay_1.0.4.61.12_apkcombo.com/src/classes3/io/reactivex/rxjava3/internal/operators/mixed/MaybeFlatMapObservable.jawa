record `io.reactivex.rxjava3.internal.operators.mixed.MaybeFlatMapObservable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.mixed.MaybeFlatMapObservable.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.mixed.MaybeFlatMapObservable.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.mixed.MaybeFlatMapObservable` v0 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/MaybeFlatMapObservable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e49b8.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4e49be.  v0.`io.reactivex.rxjava3.internal.operators.mixed.MaybeFlatMapObservable.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v1 @kind object;
  #L4e49c2.  v0.`io.reactivex.rxjava3.internal.operators.mixed.MaybeFlatMapObservable.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4e49c6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.mixed.MaybeFlatMapObservable` v2 @kind this, `io.reactivex.rxjava3.core.Observer` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/MaybeFlatMapObservable;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4e49d8.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.MaybeFlatMapObservable$a`;
  #L4e49dc.  v1:= v2.`io.reactivex.rxjava3.internal.operators.mixed.MaybeFlatMapObservable.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4e49e0.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/MaybeFlatMapObservable$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4e49e6.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4e49ec.  v3:= v2.`io.reactivex.rxjava3.internal.operators.mixed.MaybeFlatMapObservable.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4e49f0.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4e49f6.  return @kind void;
}
