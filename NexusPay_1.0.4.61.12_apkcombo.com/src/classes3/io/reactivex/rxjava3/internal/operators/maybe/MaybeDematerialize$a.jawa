record `io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4dc2a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dc2a6.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4dc2aa.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4dc2ae.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dc2c0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dc2c4.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4dc2ca.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dc280.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dc284.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4dc28a.  v0:= temp;
  #L4dc28c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dc2dc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dc2e0.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4dc2e6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dc2f8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dc2fc.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dc302.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dc314.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dc318.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4dc31e.  v0:= temp;
  #L4dc320.  if v0 == 0 then goto L4dc332;
  #L4dc324.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4dc328.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dc32c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4dc332.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDematerialize$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dc344.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4dc348.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4dc34e.  v2:= temp @kind object;
  #L4dc350.  v0:= "The selector returned a null Notification" @kind object;
  #L4dc354.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4dc35a.  v2:= temp @kind object;
  #L4dc35c.  v2:= (`io.reactivex.rxjava3.core.Notification`) v2 @kind object;
  #L4dc360.  call temp:= `isOnNext`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.isOnNext:()Z` @kind virtual;
  #L4dc366.  v0:= temp;
  #L4dc368.  if v0 == 0 then goto L4dc380;
  #L4dc36c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dc370.  call temp:= `getValue`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4dc376.  v2:= temp @kind object;
  #L4dc378.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4dc37e.  goto L4dc3aa;
  #L4dc380.  call temp:= `isOnComplete`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.isOnComplete:()Z` @kind virtual;
  #L4dc386.  v0:= temp;
  #L4dc388.  if v0 == 0 then goto L4dc398;
  #L4dc38c.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dc390.  call `onComplete`(v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4dc396.  goto L4dc3aa;
  #L4dc398.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dc39c.  call temp:= `getError`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.getError:()Ljava/lang/Throwable;` @kind virtual;
  #L4dc3a2.  v2:= temp @kind object;
  #L4dc3a4.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dc3aa.  return @kind void;
  #L4dc3ac.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4dc3ae.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4dc3b4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDematerialize$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dc3b8.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dc3be.  return @kind void;
  catch `java.lang.Throwable` @[L4dc344..L4dc360] goto L4dc3ac;
}
