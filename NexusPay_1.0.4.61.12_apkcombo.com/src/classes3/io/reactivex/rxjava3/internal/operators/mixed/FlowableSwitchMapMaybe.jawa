record `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `io.reactivex.rxjava3.core.Flowable` `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e428c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4e4292.  v0.`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe.b` @type ^`io.reactivex.rxjava3.core.Flowable` := v1 @kind object;
  #L4e4296.  v0.`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe.c` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4e429a.  v0.`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe.d` @type ^`boolean` := v3 @kind boolean;
  #L4e429e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapMaybe;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e42b0.  v0:= v4.`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe.b` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4e42b4.  v1:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe$a`;
  #L4e42b8.  v2:= v4.`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4e42bc.  v3:= v4.`io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe.d` @type ^`boolean` @kind boolean;
  #L4e42c0.  call `<init>`(v1, v5, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapMaybe$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4e42c6.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4e42cc.  return @kind void;
}
