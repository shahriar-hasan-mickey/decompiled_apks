record `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.CompletableObserver` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.AtomicThrowable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.f` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.h` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v0 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;Lio/reactivex/rxjava3/functions/Function;ZI)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c3524.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4c352a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` := v1 @kind object;
  #L4c352e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.c` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4c3532.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.d` @type ^`boolean` := v3 @kind boolean;
  #L4c3536.  v1:= new `io.reactivex.rxjava3.internal.util.AtomicThrowable`;
  #L4c353a.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L4c3540.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` := v1 @kind object;
  #L4c3544.  v1:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L4c3548.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4c354e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v1 @kind object;
  #L4c3552.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.f` @type ^`int` := v4;
  #L4c3556.  v1:= 1I;
  #L4c3558.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L4c355e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v1 @kind this, `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a$a` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.a:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a$a;)V` @AccessFlag  {
    temp;
    v0;

  #L4c35a8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4c35ac.  call temp:= `delete`(v0, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4c35b2.  call `onComplete`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.onComplete:()V` @kind virtual;
  #L4c35b8.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v1 @kind this, `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a$a` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.b:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a$a;Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;

  #L4c35cc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4c35d0.  call temp:= `delete`(v0, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4c35d6.  call `onError`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4c35dc.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c3570.  v0:= 1I;
  #L4c3572.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.h` @type ^`boolean` := v0 @kind boolean;
  #L4c3576.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c357a.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4c3580.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4c3584.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4c358a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4c358e.  call `tryTerminateAndReport`(v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateAndReport:()V` @kind virtual;
  #L4c3594.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c3504.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4c3508.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L4c350e.  v0:= temp;
  #L4c3510.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4c35f0.  call temp:= `decrementAndGet`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4c35f6.  v0:= temp;
  #L4c35f8.  if v0 != 0 then goto L4c360c;
  #L4c35fc.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4c3600.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4c3604.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4c360a.  goto L4c3628;
  #L4c360c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.f` @type ^`int`;
  #L4c3610.  v1:= 2147483647I;
  #L4c3616.  if v0 == v1 then goto L4c3628;
  #L4c361a.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c361e.  v1:= 1L;
  #L4c3622.  call `request`(v0, v1) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4c3628.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c363c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4c3640.  call temp:= `tryAddThrowableOrReport`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4c3646.  v3:= temp;
  #L4c3648.  if v3 == 0 then goto L4c36b6;
  #L4c364c.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.d` @type ^`boolean` @kind boolean;
  #L4c3650.  if v3 == 0 then goto L4c368e;
  #L4c3654.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4c365a.  v3:= temp;
  #L4c365c.  if v3 != 0 then goto L4c3670;
  #L4c3660.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4c3664.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4c3668.  call `tryTerminateConsumer`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4c366e.  goto L4c36b6;
  #L4c3670.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.f` @type ^`int`;
  #L4c3674.  v0:= 2147483647I;
  #L4c367a.  if v3 == v0 then goto L4c36b6;
  #L4c367e.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c3682.  v0:= 1L;
  #L4c3686.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4c368c.  goto L4c36b6;
  #L4c368e.  v3:= 1I;
  #L4c3690.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.h` @type ^`boolean` := v3 @kind boolean;
  #L4c3694.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c3698.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4c369e.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4c36a2.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4c36a8.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.b` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4c36ac.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4c36b0.  call `tryTerminateConsumer`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4c36b6.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c36c8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4c36cc.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c36d2.  v3:= temp @kind object;
  #L4c36d4.  v0:= "The mapper returned a null CompletableSource" @kind object;
  #L4c36d8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4c36de.  v3:= temp @kind object;
  #L4c36e0.  v3:= (`io.reactivex.rxjava3.core.CompletableSource`) v3 @kind object;
  #L4c36e4.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4c36ea.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a$a`;
  #L4c36ee.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;)V` @kind direct;
  #L4c36f4.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.h` @type ^`boolean` @kind boolean;
  #L4c36f8.  if v1 != 0 then goto L4c3712;
  #L4c36fc.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4c3700.  call temp:= `add`(v1, v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4c3706.  v1:= temp;
  #L4c3708.  if v1 == 0 then goto L4c3712;
  #L4c370c.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4c3712.  return @kind void;
  #L4c3714.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c3716.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c371c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c3720.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4c3726.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4c372c.  return @kind void;
  catch `java.lang.Throwable` @[L4c36c8..L4c36e4] goto L4c3714;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c374c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c3750.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4c3756.  v0:= temp;
  #L4c3758.  if v0 == 0 then goto L4c3792;
  #L4c375c.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.g` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4c3760.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4c3764.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c376a.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a.f` @type ^`int`;
  #L4c376e.  v1:= 2147483647I;
  #L4c3774.  if v0 != v1 then goto L4c378a;
  #L4c3778.  v0:= 9223372036854775807L;
  #L4c3782.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4c3788.  goto L4c3792;
  #L4c378a.  v0:= (`long`) v0 @kind i2l;
  #L4c378c.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4c3792.  return @kind void;
}
