record `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.parallel.ParallelFlowable` @kind class {
  `io.reactivex.rxjava3.parallel.ParallelFlowable` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.f` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.g` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.LongConsumer` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.h` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.i` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` v0 @kind this, `io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object, `io.reactivex.rxjava3.functions.Action` v5 @kind object, `io.reactivex.rxjava3.functions.Action` v6 @kind object, `io.reactivex.rxjava3.functions.Consumer` v7 @kind object, `io.reactivex.rxjava3.functions.LongConsumer` v8 @kind object, `io.reactivex.rxjava3.functions.Action` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L503b80.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.<init>:()V` @kind direct;
  #L503b86.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` := v1 @kind object;
  #L503b8a.  v1:= "onNext is null" @kind object;
  #L503b8e.  call temp:= `requireNonNull`(v2, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L503b94.  v1:= temp @kind object;
  #L503b96.  v1:= (`io.reactivex.rxjava3.functions.Consumer`) v1 @kind object;
  #L503b9a.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v1 @kind object;
  #L503b9e.  v1:= "onAfterNext is null" @kind object;
  #L503ba2.  call temp:= `requireNonNull`(v3, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L503ba8.  v1:= temp @kind object;
  #L503baa.  v1:= (`io.reactivex.rxjava3.functions.Consumer`) v1 @kind object;
  #L503bae.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.c` @type ^`io.reactivex.rxjava3.functions.Consumer` := v1 @kind object;
  #L503bb2.  v1:= "onError is null" @kind object;
  #L503bb6.  call temp:= `requireNonNull`(v4, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L503bbc.  v1:= temp @kind object;
  #L503bbe.  v1:= (`io.reactivex.rxjava3.functions.Consumer`) v1 @kind object;
  #L503bc2.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.d` @type ^`io.reactivex.rxjava3.functions.Consumer` := v1 @kind object;
  #L503bc6.  v1:= "onComplete is null" @kind object;
  #L503bca.  call temp:= `requireNonNull`(v5, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L503bd0.  v1:= temp @kind object;
  #L503bd2.  v1:= (`io.reactivex.rxjava3.functions.Action`) v1 @kind object;
  #L503bd6.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.e` @type ^`io.reactivex.rxjava3.functions.Action` := v1 @kind object;
  #L503bda.  v1:= "onAfterTerminated is null" @kind object;
  #L503bde.  call temp:= `requireNonNull`(v6, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L503be4.  v1:= temp @kind object;
  #L503be6.  v1:= (`io.reactivex.rxjava3.functions.Action`) v1 @kind object;
  #L503bea.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.f` @type ^`io.reactivex.rxjava3.functions.Action` := v1 @kind object;
  #L503bee.  v1:= "onSubscribe is null" @kind object;
  #L503bf2.  call temp:= `requireNonNull`(v7, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L503bf8.  v1:= temp @kind object;
  #L503bfa.  v1:= (`io.reactivex.rxjava3.functions.Consumer`) v1 @kind object;
  #L503bfe.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.g` @type ^`io.reactivex.rxjava3.functions.Consumer` := v1 @kind object;
  #L503c02.  v1:= "onRequest is null" @kind object;
  #L503c06.  call temp:= `requireNonNull`(v8, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L503c0c.  v1:= temp @kind object;
  #L503c0e.  v1:= (`io.reactivex.rxjava3.functions.LongConsumer`) v1 @kind object;
  #L503c12.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.h` @type ^`io.reactivex.rxjava3.functions.LongConsumer` := v1 @kind object;
  #L503c16.  v1:= "onCancel is null" @kind object;
  #L503c1a.  call temp:= `requireNonNull`(v9, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L503c20.  v1:= temp @kind object;
  #L503c22.  v1:= (`io.reactivex.rxjava3.functions.Action`) v1 @kind object;
  #L503c26.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.i` @type ^`io.reactivex.rxjava3.functions.Action` := v1 @kind object;
  #L503c2a.  return @kind void;
}
procedure `int` `parallelism`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;.parallelism:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503b60.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` @kind object;
  #L503b64.  call temp:= `parallelism`(v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L503b6a.  v0:= temp;
  #L503b6c.  return v0;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` v5 @kind this, `org.reactivestreams.Subscriber`[] v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L503c3c.  call temp:= `validate`(v5, v6) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.validate:([Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L503c42.  v0:= temp;
  #L503c44.  if v0 != 0 then goto L503c4a;
  #L503c48.  return @kind void;
  #L503c4a.  v0:= length @variable v6;
  #L503c4c.  v1:= new `org.reactivestreams.Subscriber`[v0];
  #L503c50.  v2:= 0I;
  #L503c52.  if v2 >= v0 then goto L503c6e;
  #L503c56.  v3:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a`;
  #L503c5a.  v4:= v6[v2] @kind object;
  #L503c5e.  call `<init>`(v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;)V` @kind direct;
  #L503c64.  v1[v2]:= v3 @kind object;
  #L503c68.  v2:= v2 + 1;
  #L503c6c.  goto L503c52;
  #L503c6e.  v6:= v5.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` @kind object;
  #L503c72.  call `subscribe`(v6, v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L503c78.  return @kind void;
}
