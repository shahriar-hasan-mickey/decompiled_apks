record `io.reactivex.rxjava3.internal.operators.flowable.FlowableMaterialize$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscribers.SinglePostCompleteSubscriber` @kind class {
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableMaterialize$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableMaterialize$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMaterialize$a;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c9a0c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/SinglePostCompleteSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4c9a12.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableMaterialize$a` v1 @kind this, `io.reactivex.rxjava3.core.Notification` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMaterialize$a;.a:(Lio/reactivex/rxjava3/core/Notification;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4c9a44.  call temp:= `isOnError`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.isOnError:()Z` @kind virtual;
  #L4c9a4a.  v0:= temp;
  #L4c9a4c.  if v0 == 0 then goto L4c9a5e;
  #L4c9a50.  call temp:= `getError`(v2) @signature `Lio/reactivex/rxjava3/core/Notification;.getError:()Ljava/lang/Throwable;` @kind virtual;
  #L4c9a56.  v2:= temp @kind object;
  #L4c9a58.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4c9a5e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableMaterialize$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMaterialize$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9a24.  call temp:= `createOnComplete`() @signature `Lio/reactivex/rxjava3/core/Notification;.createOnComplete:()Lio/reactivex/rxjava3/core/Notification;` @kind static;
  #L4c9a2a.  v0:= temp @kind object;
  #L4c9a2c.  call `complete`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/SinglePostCompleteSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4c9a32.  return @kind void;
}
procedure `void` `onDrop`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableMaterialize$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMaterialize$a;.onDrop:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L4c9a70.  v1:= (`io.reactivex.rxjava3.core.Notification`) v1 @kind object;
  #L4c9a74.  call `a`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMaterialize$a;.a:(Lio/reactivex/rxjava3/core/Notification;)V` @kind virtual;
  #L4c9a7a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableMaterialize$a` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMaterialize$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L4c9a8c.  call temp:= `createOnError`(v1) @signature `Lio/reactivex/rxjava3/core/Notification;.createOnError:(Ljava/lang/Throwable;)Lio/reactivex/rxjava3/core/Notification;` @kind static;
  #L4c9a92.  v1:= temp @kind object;
  #L4c9a94.  call `complete`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/SinglePostCompleteSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4c9a9a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableMaterialize$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMaterialize$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4c9aac.  v0:= v4.`io.reactivex.rxjava3.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` @kind wide;
  #L4c9ab0.  v2:= 1L;
  #L4c9ab4.  v0:= v0 + v2 @kind long;
  #L4c9ab6.  v4.`io.reactivex.rxjava3.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` := v0 @kind wide;
  #L4c9aba.  v0:= v4.`io.reactivex.rxjava3.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c9abe.  call temp:= `createOnNext`(v5) @signature `Lio/reactivex/rxjava3/core/Notification;.createOnNext:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Notification;` @kind static;
  #L4c9ac4.  v5:= temp @kind object;
  #L4c9ac6.  call `onNext`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c9acc.  return @kind void;
}
