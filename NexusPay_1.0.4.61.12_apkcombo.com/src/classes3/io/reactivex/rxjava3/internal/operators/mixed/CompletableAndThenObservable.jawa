record `io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `io.reactivex.rxjava3.core.CompletableSource` `io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable` v0 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v1 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenObservable;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e2954.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4e295a.  v0.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable.a` @type ^`io.reactivex.rxjava3.core.CompletableSource` := v1 @kind object;
  #L4e295e.  v0.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable.b` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v2 @kind object;
  #L4e2962.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable` v2 @kind this, `io.reactivex.rxjava3.core.Observer` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenObservable;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4e2974.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$a`;
  #L4e2978.  v1:= v2.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable.b` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4e297c.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenObservable$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4e2982.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4e2988.  v3:= v2.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable.a` @type ^`io.reactivex.rxjava3.core.CompletableSource` @kind object;
  #L4e298c.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4e2992.  return @kind void;
}
