record `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.core.CompletableObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.CompletableSource` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.b` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.c` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatWithCompletable$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/core/CompletableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ec044.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4ec04a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4ec04e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.b` @type ^`io.reactivex.rxjava3.core.CompletableSource` := v2 @kind object;
  #L4ec052.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatWithCompletable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4ec064.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4ec06a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatWithCompletable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ec01c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ec022.  v0:= temp @kind object;
  #L4ec024.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4ec028.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ec02e.  v0:= temp;
  #L4ec030.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatWithCompletable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ec07c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.c` @type ^`boolean` @kind boolean;
  #L4ec080.  if v0 == 0 then goto L4ec090;
  #L4ec084.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ec088.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4ec08e.  goto L4ec0ac;
  #L4ec090.  v0:= 1I;
  #L4ec092.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.c` @type ^`boolean` := v0 @kind boolean;
  #L4ec096.  v0:= 0I;
  #L4ec098.  call temp:= `replace`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ec09e.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.b` @type ^`io.reactivex.rxjava3.core.CompletableSource` @kind object;
  #L4ec0a2.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.b` @type ^`io.reactivex.rxjava3.core.CompletableSource` := v0 @kind object;
  #L4ec0a6.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4ec0ac.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatWithCompletable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ec0c0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ec0c4.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ec0ca.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatWithCompletable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ec0dc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ec0e0.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4ec0e6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatWithCompletable$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4ec0f8.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ec0fe.  v1:= temp;
  #L4ec100.  if v1 == 0 then goto L4ec116;
  #L4ec104.  v1:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.c` @type ^`boolean` @kind boolean;
  #L4ec108.  if v1 != 0 then goto L4ec116;
  #L4ec10c.  v1:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ec110.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ec116.  return @kind void;
}
