record `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4dd178.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dd17e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4dd182.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L4dd186.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dd198.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dd19c.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4dd1a0.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4dd1a4.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4dd1aa.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd158.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dd15c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4dd162.  v0:= temp;
  #L4dd164.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd1bc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dd1c0.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4dd1c6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd1d8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dd1dc.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dd1e2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd1f4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dd1f8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4dd1fe.  v0:= temp;
  #L4dd200.  if v0 == 0 then goto L4dd212;
  #L4dd204.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4dd208.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dd20c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4dd212.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilter$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd224.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4dd228.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4dd22e.  v0:= temp;
  #L4dd230.  if v0 == 0 then goto L4dd240;
  #L4dd234.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dd238.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4dd23e.  goto L4dd24a;
  #L4dd240.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dd244.  call `onComplete`(v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4dd24a.  return @kind void;
  #L4dd24c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4dd24e.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4dd254.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilter$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dd258.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dd25e.  return @kind void;
  catch `java.lang.Throwable` @[L4dd224..L4dd230] goto L4dd24c;
}
