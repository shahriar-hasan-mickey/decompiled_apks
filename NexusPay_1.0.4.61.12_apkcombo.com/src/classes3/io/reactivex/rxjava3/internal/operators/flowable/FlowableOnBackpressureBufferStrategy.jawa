record `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.BackpressureOverflowStrategy` `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `long` v2 , `io.reactivex.rxjava3.functions.Action` v4 @kind object, `io.reactivex.rxjava3.core.BackpressureOverflowStrategy` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureBufferStrategy;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/core/BackpressureOverflowStrategy;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4cbbf4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4cbbfa.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy.b` @type ^`long` := v2 @kind wide;
  #L4cbbfe.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy.c` @type ^`io.reactivex.rxjava3.functions.Action` := v4 @kind object;
  #L4cbc02.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy.d` @type ^`io.reactivex.rxjava3.core.BackpressureOverflowStrategy` := v5 @kind object;
  #L4cbc06.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy` v8 @kind this, `org.reactivestreams.Subscriber` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureBufferStrategy;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4cbc18.  v0:= v8.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4cbc1c.  v7:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$b`;
  #L4cbc20.  v3:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy.c` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4cbc24.  v4:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy.d` @type ^`io.reactivex.rxjava3.core.BackpressureOverflowStrategy` @kind object;
  #L4cbc28.  v5:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy.b` @type ^`long` @kind wide;
  #L4cbc2c.  v1:= v7 @kind object;
  #L4cbc2e.  v2:= v9 @kind object;
  #L4cbc30.  call `<init>`(v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureBufferStrategy$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/core/BackpressureOverflowStrategy;J)V` @kind direct;
  #L4cbc36.  call `subscribe`(v0, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4cbc3c.  return @kind void;
}
