record `io.reactivex.rxjava3.internal.operators.flowable.FlowableScalarXMap` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableScalarXMap` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4d12ac.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d12b2.  v0:= new `java.lang.IllegalStateException`;
  #L4d12b6.  v1:= "No instances!" @kind object;
  #L4d12ba.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4d12c0.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `scalarXMap`(`java.lang.Object` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4d1288.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableScalarXMap$a`;
  #L4d128c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap$a;.<init>:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4d1292.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4d1298.  v1:= temp @kind object;
  #L4d129a.  return v1 @kind object;
}
procedure `boolean` `tryScalarXMapSubscribe`(`org.reactivestreams.Publisher` v1 @kind object, `org.reactivestreams.Subscriber` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.tryScalarXMapSubscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4d11b0.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.functions.Supplier` @kind boolean;
  #L4d11b4.  if v0 == 0 then goto L4d1254;
  #L4d11b8.  v0:= 1I;
  #L4d11ba.  v1:= (`io.reactivex.rxjava3.functions.Supplier`) v1 @kind object;
  #L4d11be.  call temp:= `get`(v1) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4d11c4.  v1:= temp @kind object;
  #L4d11c6.  if v1 != 0 then goto L4d11d2;
  #L4d11ca.  call `complete`(v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4d11d0.  return v0;
  #L4d11d2.  call temp:= `apply`(v3, v1) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4d11d8.  v1:= temp @kind object;
  #L4d11da.  v3:= "The mapper returned a null Publisher" @kind object;
  #L4d11de.  call temp:= `requireNonNull`(v1, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d11e4.  v1:= temp @kind object;
  #L4d11e6.  v1:= (`org.reactivestreams.Publisher`) v1 @kind object;
  #L4d11ea.  v3:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.functions.Supplier` @kind boolean;
  #L4d11ee.  if v3 == 0 then goto L4d122c;
  #L4d11f2.  v1:= (`io.reactivex.rxjava3.functions.Supplier`) v1 @kind object;
  #L4d11f6.  call temp:= `get`(v1) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4d11fc.  v1:= temp @kind object;
  #L4d11fe.  if v1 != 0 then goto L4d120a;
  #L4d1202.  call `complete`(v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4d1208.  return v0;
  #L4d120a.  v3:= new `io.reactivex.rxjava3.internal.subscriptions.ScalarSubscription`;
  #L4d120e.  call `<init>`(v3, v2, v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/ScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)V` @kind direct;
  #L4d1214.  call `onSubscribe`(v2, v3) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4d121a.  goto L4d1232;
  #L4d121c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d121e.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d1224.  call `error`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4d122a.  return v0;
  #L4d122c.  call `subscribe`(v1, v2) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4d1232.  return v0;
  #L4d1234.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d1236.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d123c.  call `error`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4d1242.  return v0;
  #L4d1244.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d1246.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d124c.  call `error`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4d1252.  return v0;
  #L4d1254.  v1:= 0I;
  #L4d1256.  return v1;
  catch `java.lang.Throwable` @[L4d11ba..L4d11c6] goto L4d1244;
  catch `java.lang.Throwable` @[L4d11d2..L4d11ea] goto L4d1234;
  catch `java.lang.Throwable` @[L4d11f2..L4d11fe] goto L4d121c;
}
