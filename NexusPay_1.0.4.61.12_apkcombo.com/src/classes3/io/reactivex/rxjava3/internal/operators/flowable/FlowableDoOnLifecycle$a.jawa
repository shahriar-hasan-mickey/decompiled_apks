record `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.LongConsumer` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.d` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.LongConsumer` v3 @kind object, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c1858.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c185e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4c1862.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L4c1866.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.functions.Action` := v4 @kind object;
  #L4c186a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.c` @type ^`io.reactivex.rxjava3.functions.LongConsumer` := v3 @kind object;
  #L4c186e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c1880.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c1884.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4c1888.  if v0 == v1 then goto L4c18b0;
  #L4c188c.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L4c1890.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4c1894.  call `run`(v1) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4c189a.  goto L4c18aa;
  #L4c189c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c189e.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c18a4.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4c18aa.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4c18b0.  return @kind void;
  catch `java.lang.Throwable` @[L4c1890..L4c189a] goto L4c189c;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c18d0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c18d4.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4c18d8.  if v0 == v1 then goto L4c18e6;
  #L4c18dc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c18e0.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4c18e6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c18f8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c18fc.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4c1900.  if v0 == v1 then goto L4c1910;
  #L4c1904.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c1908.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c190e.  goto L4c1916;
  #L4c1910.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4c1916.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c1928.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c192c.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c1932.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c1944.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4c1948.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4c194e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c1952.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4c1958.  v0:= temp;
  #L4c195a.  if v0 == 0 then goto L4c196c;
  #L4c195e.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L4c1962.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c1966.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4c196c.  return @kind void;
  #L4c196e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c1970.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c1976.  call `cancel`(v2) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4c197c.  v2:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4c1980.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L4c1984.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c1988.  call `error`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4c198e.  return @kind void;
  catch `java.lang.Throwable` @[L4c1944..L4c194e] goto L4c196e;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c19ac.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.c` @type ^`io.reactivex.rxjava3.functions.LongConsumer` @kind object;
  #L4c19b0.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/LongConsumer;.accept:(J)V` @kind interface;
  #L4c19b6.  goto L4c19c6;
  #L4c19b8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c19ba.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c19c0.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4c19c6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c19ca.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4c19d0.  return @kind void;
  catch `java.lang.Throwable` @[L4c19ac..L4c19b6] goto L4c19b8;
}
