record `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$a` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureBufferStrategy$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4cb7d4.  call temp:= `values`() @signature `Lio/reactivex/rxjava3/core/BackpressureOverflowStrategy;.values:()[Lio/reactivex/rxjava3/core/BackpressureOverflowStrategy;` @kind static;
  #L4cb7da.  v0:= temp @kind object;
  #L4cb7dc.  v0:= length @variable v0;
  #L4cb7de.  v0:= new `int`[v0];
  #L4cb7e2.  `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$a.a` @type ^`int`[] := v0 @kind object;
  #L4cb7e6.  v1:= `@@io.reactivex.rxjava3.core.BackpressureOverflowStrategy.DROP_LATEST` @type ^`io.reactivex.rxjava3.core.BackpressureOverflowStrategy` @kind object;
  #L4cb7ea.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4cb7f0.  v1:= temp;
  #L4cb7f2.  v2:= 1I;
  #L4cb7f4.  v0[v1]:= v2;
  #L4cb7f8.  v0:= `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$a.a` @type ^`int`[] @kind object;
  #L4cb7fc.  v1:= `@@io.reactivex.rxjava3.core.BackpressureOverflowStrategy.DROP_OLDEST` @type ^`io.reactivex.rxjava3.core.BackpressureOverflowStrategy` @kind object;
  #L4cb800.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4cb806.  v1:= temp;
  #L4cb808.  v2:= 2I;
  #L4cb80a.  v0[v1]:= v2;
  #L4cb80e.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L4cb7e6..L4cb7f8] goto L4cb7f8;
  catch `java.lang.NoSuchFieldError` @[L4cb7f8..L4cb80e] goto L4cb80e;
}
