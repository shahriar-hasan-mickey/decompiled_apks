record `io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.b` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.c` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fb2dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fb2e2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4fb2e6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.d` @type ^`long` := v2 @kind wide;
  #L4fb2ea.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb2fc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fb300.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fb306.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb2bc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fb2c0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4fb2c6.  v0:= temp;
  #L4fb2c8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb318.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.b` @type ^`boolean` @kind boolean;
  #L4fb31c.  if v0 != 0 then goto L4fb33a;
  #L4fb320.  v0:= 1I;
  #L4fb322.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.b` @type ^`boolean` := v0 @kind boolean;
  #L4fb326.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fb32a.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fb330.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fb334.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4fb33a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb34c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.b` @type ^`boolean` @kind boolean;
  #L4fb350.  if v0 == 0 then goto L4fb35c;
  #L4fb354.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4fb35a.  return @kind void;
  #L4fb35c.  v0:= 1I;
  #L4fb35e.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.b` @type ^`boolean` := v0 @kind boolean;
  #L4fb362.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fb366.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fb36c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fb370.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fb376.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4fb388.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.b` @type ^`boolean` @kind boolean;
  #L4fb38c.  if v0 != 0 then goto L4fb3ce;
  #L4fb390.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.d` @type ^`long` @kind wide;
  #L4fb394.  v2:= 1L;
  #L4fb398.  v2:= v0 - v2 @kind long;
  #L4fb39c.  v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.d` @type ^`long` := v2 @kind wide;
  #L4fb3a0.  v4:= 0L;
  #L4fb3a4.  v6:= lcmp(v0, v4);
  #L4fb3a8.  if v6 <= 0 then goto L4fb3ce;
  #L4fb3ac.  v0:= lcmp(v2, v4);
  #L4fb3b0.  if v0 != 0 then goto L4fb3b8;
  #L4fb3b4.  v0:= 1I;
  #L4fb3b6.  goto L4fb3ba;
  #L4fb3b8.  v0:= 0I;
  #L4fb3ba.  v1:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fb3be.  call `onNext`(v1, v8) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4fb3c4.  if v0 == 0 then goto L4fb3ce;
  #L4fb3c8.  call `onComplete`(v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.onComplete:()V` @kind virtual;
  #L4fb3ce.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a` v5 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fb3e0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fb3e4.  call temp:= `validate`(v0, v6) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4fb3ea.  v0:= temp;
  #L4fb3ec.  if v0 == 0 then goto L4fb426;
  #L4fb3f0.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v6 @kind object;
  #L4fb3f4.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.d` @type ^`long` @kind wide;
  #L4fb3f8.  v2:= 0L;
  #L4fb3fc.  v4:= lcmp(v0, v2);
  #L4fb400.  if v4 != 0 then goto L4fb41c;
  #L4fb404.  v0:= 1I;
  #L4fb406.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.b` @type ^`boolean` := v0 @kind boolean;
  #L4fb40a.  call `dispose`(v6) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fb410.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fb414.  call `complete`(v6) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4fb41a.  goto L4fb426;
  #L4fb41c.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTake$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fb420.  call `onSubscribe`(v6, v5) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4fb426.  return @kind void;
}
