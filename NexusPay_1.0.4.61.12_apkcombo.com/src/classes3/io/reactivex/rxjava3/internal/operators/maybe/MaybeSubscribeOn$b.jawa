record `io.reactivex.rxjava3.internal.operators.maybe.MaybeSubscribeOn$b` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeSubscribeOn$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.maybe.MaybeSubscribeOn$b.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeSubscribeOn$b` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeSubscribeOn$b;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/core/MaybeSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e06b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e06be.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeSubscribeOn$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4e06c2.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeSubscribeOn$b.b` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v2 @kind object;
  #L4e06c6.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeSubscribeOn$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeSubscribeOn$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e06d8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeSubscribeOn$b.b` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4e06dc.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeSubscribeOn$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4e06e0.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4e06e6.  return @kind void;
}
