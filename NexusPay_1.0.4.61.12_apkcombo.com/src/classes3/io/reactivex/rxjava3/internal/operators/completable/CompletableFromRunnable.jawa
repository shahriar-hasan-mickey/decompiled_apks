record `io.reactivex.rxjava3.internal.operators.completable.CompletableFromRunnable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Completable` @kind class {
  `java.lang.Runnable` `io.reactivex.rxjava3.internal.operators.completable.CompletableFromRunnable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.completable.CompletableFromRunnable` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromRunnable;.<init>:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b5824.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.<init>:()V` @kind direct;
  #L4b582a.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableFromRunnable.a` @type ^`java.lang.Runnable` := v1 @kind object;
  #L4b582e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.completable.CompletableFromRunnable` v2 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromRunnable;.subscribeActual:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4b5840.  call temp:= `b`() @signature `Lio/reactivex/rxjava3/disposables/a;.b:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L4b5846.  v0:= temp @kind object;
  #L4b5848.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b584e.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4b5854.  v1:= temp;
  #L4b5856.  if v1 != 0 then goto L4b589a;
  #L4b585a.  v1:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableFromRunnable.a` @type ^`java.lang.Runnable` @kind object;
  #L4b585e.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L4b5864.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4b586a.  v0:= temp;
  #L4b586c.  if v0 != 0 then goto L4b589a;
  #L4b5870.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L4b5876.  goto L4b589a;
  #L4b5878.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b587a.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b5880.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4b5886.  v0:= temp;
  #L4b5888.  if v0 != 0 then goto L4b5894;
  #L4b588c.  call `onError`(v3, v1) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b5892.  goto L4b589a;
  #L4b5894.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b589a.  return @kind void;
  catch `java.lang.Throwable` @[L4b585a..L4b5864] goto L4b5878;
}
