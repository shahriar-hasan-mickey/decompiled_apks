record `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$a` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4bc6f4.  call temp:= `values`() @signature `Lio/reactivex/rxjava3/internal/util/ErrorMode;.values:()[Lio/reactivex/rxjava3/internal/util/ErrorMode;` @kind static;
  #L4bc6fa.  v0:= temp @kind object;
  #L4bc6fc.  v0:= length @variable v0;
  #L4bc6fe.  v0:= new `int`[v0];
  #L4bc702.  `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$a.a` @type ^`int`[] := v0 @kind object;
  #L4bc706.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4bc70a.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4bc710.  v1:= temp;
  #L4bc712.  v2:= 1I;
  #L4bc714.  v0[v1]:= v2;
  #L4bc718.  v0:= `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$a.a` @type ^`int`[] @kind object;
  #L4bc71c.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4bc720.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4bc726.  v1:= temp;
  #L4bc728.  v2:= 2I;
  #L4bc72a.  v0[v1]:= v2;
  #L4bc72e.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L4bc706..L4bc718] goto L4bc718;
  catch `java.lang.NoSuchFieldError` @[L4bc718..L4bc72e] goto L4bc72e;
}
