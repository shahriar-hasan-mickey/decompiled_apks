record `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fa860.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fa866.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4fa86a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L4fa86e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa880.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fa884.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fa88a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa840.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fa844.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4fa84a.  v0:= temp;
  #L4fa84c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa89c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fa8a0.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4fa8a6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa8b8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fa8bc.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fa8c2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa8d4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.d` @type ^`boolean` @kind boolean;
  #L4fa8d8.  if v0 == 0 then goto L4fa8e8;
  #L4fa8dc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fa8e0.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4fa8e6.  goto L4fa908;
  #L4fa8e8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4fa8ec.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4fa8f2.  v0:= temp;
  #L4fa8f4.  if v0 != 0 then goto L4fa908;
  #L4fa8f8.  v0:= 1I;
  #L4fa8fa.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4fa8fe.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fa902.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4fa908.  return @kind void;
  #L4fa90a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fa90c.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4fa912.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fa916.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fa91c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fa920.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fa926.  return @kind void;
  catch `java.lang.Throwable` @[L4fa8e8..L4fa8f4] goto L4fa90a;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa944.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fa948.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4fa94e.  v0:= temp;
  #L4fa950.  if v0 == 0 then goto L4fa962;
  #L4fa954.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4fa958.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fa95c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4fa962.  return @kind void;
}
