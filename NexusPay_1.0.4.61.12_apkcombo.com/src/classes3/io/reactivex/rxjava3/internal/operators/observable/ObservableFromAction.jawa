record `io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class, `io.reactivex.rxjava3.functions.Supplier` @kind interface {
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction` v0 @kind this, `io.reactivex.rxjava3.functions.Action` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromAction;.<init>:(Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f0a58.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4f0a5e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction.a` @type ^`io.reactivex.rxjava3.functions.Action` := v1 @kind object;
  #L4f0a62.  return @kind void;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromAction;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f0a38.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction.a` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4f0a3c.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4f0a42.  v0:= 0I;
  #L4f0a44.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction` v2 @kind this, `io.reactivex.rxjava3.core.Observer` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromAction;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4f0a74.  v0:= new `io.reactivex.rxjava3.internal.fuseable.CancellableQueueFuseable`;
  #L4f0a78.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/CancellableQueueFuseable;.<init>:()V` @kind direct;
  #L4f0a7e.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4f0a84.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/CancellableQueueFuseable;.isDisposed:()Z` @kind virtual;
  #L4f0a8a.  v1:= temp;
  #L4f0a8c.  if v1 != 0 then goto L4f0ad0;
  #L4f0a90.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction.a` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4f0a94.  call `run`(v1) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4f0a9a.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/CancellableQueueFuseable;.isDisposed:()Z` @kind virtual;
  #L4f0aa0.  v0:= temp;
  #L4f0aa2.  if v0 != 0 then goto L4f0ad0;
  #L4f0aa6.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f0aac.  goto L4f0ad0;
  #L4f0aae.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f0ab0.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f0ab6.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/CancellableQueueFuseable;.isDisposed:()Z` @kind virtual;
  #L4f0abc.  v0:= temp;
  #L4f0abe.  if v0 != 0 then goto L4f0aca;
  #L4f0ac2.  call `onError`(v3, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f0ac8.  goto L4f0ad0;
  #L4f0aca.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f0ad0.  return @kind void;
  catch `java.lang.Throwable` @[L4f0a90..L4f0a9a] goto L4f0aae;
}
