record `io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.observable.a` @kind class {
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableObserveOn;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;ZI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f52b8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4f52be.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn.a` @type ^`io.reactivex.rxjava3.core.Scheduler` := v2 @kind object;
  #L4f52c2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn.b` @type ^`boolean` := v3 @kind boolean;
  #L4f52c6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn.c` @type ^`int` := v4;
  #L4f52ca.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn` v5 @kind this, `io.reactivex.rxjava3.core.Observer` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableObserveOn;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f52dc.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn.a` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4f52e0.  v1:= instanceof @variable v0 @type ^`io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler` @kind boolean;
  #L4f52e4.  if v1 == 0 then goto L4f52f4;
  #L4f52e8.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4f52ec.  call `subscribe`(v0, v6) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4f52f2.  goto L4f5318;
  #L4f52f4.  call temp:= `createWorker`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L4f52fa.  v0:= temp @kind object;
  #L4f52fc.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4f5300.  v2:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn$a`;
  #L4f5304.  v3:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn.b` @type ^`boolean` @kind boolean;
  #L4f5308.  v4:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn.c` @type ^`int`;
  #L4f530c.  call `<init>`(v2, v6, v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableObserveOn$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/core/Scheduler$Worker;ZI)V` @kind direct;
  #L4f5312.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4f5318.  return @kind void;
}
