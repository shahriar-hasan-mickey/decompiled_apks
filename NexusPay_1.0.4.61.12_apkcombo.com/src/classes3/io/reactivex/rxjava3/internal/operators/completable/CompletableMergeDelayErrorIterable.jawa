record `io.reactivex.rxjava3.internal.operators.completable.CompletableMergeDelayErrorIterable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Completable` @kind class {
  `java.lang.Iterable` `io.reactivex.rxjava3.internal.operators.completable.CompletableMergeDelayErrorIterable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMergeDelayErrorIterable` v0 @kind this, `java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMergeDelayErrorIterable;.<init>:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b6308.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.<init>:()V` @kind direct;
  #L4b630e.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableMergeDelayErrorIterable.a` @type ^`java.lang.Iterable` := v1 @kind object;
  #L4b6312.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMergeDelayErrorIterable` v6 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMergeDelayErrorIterable;.subscribeActual:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4b6324.  v0:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L4b6328.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4b632e.  call `onSubscribe`(v7, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b6334.  v1:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableMergeDelayErrorIterable.a` @type ^`java.lang.Iterable` @kind object;
  #L4b6338.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b633e.  v1:= temp @kind object;
  #L4b6340.  v2:= "The source iterator returned is null" @kind object;
  #L4b6344.  call temp:= `requireNonNull`(v1, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4b634a.  v1:= temp @kind object;
  #L4b634c.  v1:= (`java.util.Iterator`) v1 @kind object;
  #L4b6350.  v2:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L4b6354.  v3:= 1I;
  #L4b6356.  call `<init>`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L4b635c.  v3:= new `io.reactivex.rxjava3.internal.util.AtomicThrowable`;
  #L4b6360.  call `<init>`(v3) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L4b6366.  v4:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableMergeArrayDelayError$b`;
  #L4b636a.  call `<init>`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMergeArrayDelayError$b;.<init>:(Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)V` @kind direct;
  #L4b6370.  call temp:= `add`(v0, v4) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4b6376.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L4b637c.  v4:= temp;
  #L4b637e.  if v4 == 0 then goto L4b6384;
  #L4b6382.  return @kind void;
  #L4b6384.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b638a.  v4:= temp;
  #L4b638c.  if v4 != 0 then goto L4b6392;
  #L4b6390.  goto L4b63fc;
  #L4b6392.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L4b6398.  v4:= temp;
  #L4b639a.  if v4 == 0 then goto L4b63a0;
  #L4b639e.  return @kind void;
  #L4b63a0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b63a6.  v4:= temp @kind object;
  #L4b63a8.  v5:= "The iterator returned a null CompletableSource" @kind object;
  #L4b63ac.  call temp:= `requireNonNull`(v4, v5) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4b63b2.  v4:= temp @kind object;
  #L4b63b4.  v4:= (`io.reactivex.rxjava3.core.CompletableSource`) v4 @kind object;
  #L4b63b8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L4b63be.  v5:= temp;
  #L4b63c0.  if v5 == 0 then goto L4b63c6;
  #L4b63c4.  return @kind void;
  #L4b63c6.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4b63cc.  v5:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableMergeArrayDelayError$a`;
  #L4b63d0.  call `<init>`(v5, v7, v0, v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMergeArrayDelayError$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;Lio/reactivex/rxjava3/disposables/CompositeDisposable;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;Ljava/util/concurrent/atomic/AtomicInteger;)V` @kind direct;
  #L4b63d6.  call `subscribe`(v4, v5) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4b63dc.  goto L4b6376;
  #L4b63de.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b63e0.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b63e6.  call temp:= `tryAddThrowableOrReport`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4b63ec.  goto L4b63fc;
  #L4b63ee.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b63f0.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b63f6.  call temp:= `tryAddThrowableOrReport`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4b63fc.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4b6402.  v0:= temp;
  #L4b6404.  if v0 != 0 then goto L4b640e;
  #L4b6408.  call `tryTerminateConsumer`(v3, v7) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4b640e.  return @kind void;
  #L4b6410.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b6412.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b6418.  call `onError`(v7, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b641e.  return @kind void;
  catch `java.lang.Throwable` @[L4b6334..L4b6350] goto L4b6410;
  catch `java.lang.Throwable` @[L4b6384..L4b638c] goto L4b63ee;
  catch `java.lang.Throwable` @[L4b63a0..L4b63b8] goto L4b63de;
}
