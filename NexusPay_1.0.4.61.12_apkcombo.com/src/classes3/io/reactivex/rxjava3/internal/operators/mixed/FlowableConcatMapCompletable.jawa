record `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Completable` @kind class {
  `io.reactivex.rxjava3.core.Flowable` `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.ErrorMode` `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable.c` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.internal.util.ErrorMode` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e2f40.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.<init>:()V` @kind direct;
  #L4e2f46.  v0.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable.a` @type ^`io.reactivex.rxjava3.core.Flowable` := v1 @kind object;
  #L4e2f4a.  v0.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4e2f4e.  v0.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` := v3 @kind object;
  #L4e2f52.  v0.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable.d` @type ^`int` := v4;
  #L4e2f56.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable` v5 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapCompletable;.subscribeActual:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4e2f68.  v0:= v5.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4e2f6c.  v1:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable$a`;
  #L4e2f70.  v2:= v5.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4e2f74.  v3:= v5.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4e2f78.  v4:= v5.`io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable.d` @type ^`int`;
  #L4e2f7c.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapCompletable$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4e2f82.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4e2f88.  return @kind void;
}
