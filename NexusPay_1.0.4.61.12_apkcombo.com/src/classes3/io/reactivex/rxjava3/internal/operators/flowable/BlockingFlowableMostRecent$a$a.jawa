record `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @AccessFlag PRIVATE;
  `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a` `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v0 @kind this, `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableMostRecent$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b8194.  v0.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a` := v1 @kind object;
  #L4b8198.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b819e.  return @kind void;
}
procedure `boolean` `hasNext`(`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b80d0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a` @kind object;
  #L4b80d4.  v0:= v0.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a.b` @type ^`java.lang.Object` @kind object;
  #L4b80d8.  v1.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4b80dc.  call temp:= `isComplete`(v0) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L4b80e2.  v0:= temp;
  #L4b80e4.  v0:= v0 ^~ 1;
  #L4b80e8.  return v0;
}
procedure `java.lang.Object` `next`(`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b80fc.  v0:= 0I;
  #L4b80fe.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4b8102.  if v1 != 0 then goto L4b8112;
  #L4b8106.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a` @kind object;
  #L4b810a.  v1:= v1.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a.b` @type ^`java.lang.Object` @kind object;
  #L4b810e.  v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L4b8112.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4b8116.  call temp:= `isComplete`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L4b811c.  v1:= temp;
  #L4b811e.  if v1 != 0 then goto L4b815a;
  #L4b8122.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4b8126.  call temp:= `isError`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L4b812c.  v1:= temp;
  #L4b812e.  if v1 != 0 then goto L4b8144;
  #L4b8132.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4b8136.  call temp:= `getValue`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.getValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4b813c.  v1:= temp @kind object;
  #L4b813e.  v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4b8142.  return v1 @kind object;
  #L4b8144.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4b8148.  call temp:= `getError`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L4b814e.  v1:= temp @kind object;
  #L4b8150.  call temp:= `wrapOrThrow`(v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4b8156.  v1:= temp @kind object;
  #L4b8158.  throw v1;
  #L4b815a.  v1:= new `java.util.NoSuchElementException`;
  #L4b815e.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4b8164.  throw v1;
  #L4b8166.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b8168.  v2.`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4b816c.  throw v1;
  catch `java.lang.Throwable` @[L4b80fe..L4b813e] goto L4b8166;
  catch `java.lang.Throwable` @[L4b8144..L4b8166] goto L4b8166;
}
procedure `void` `remove`(`io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b81b0.  v0:= new `java.lang.UnsupportedOperationException`;
  #L4b81b4.  v1:= "Read only iterator" @kind object;
  #L4b81b8.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b81be.  throw v0;
}
