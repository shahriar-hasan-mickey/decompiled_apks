record `io.reactivex.rxjava3.internal.operators.flowable.FlowableUnsubscribeOn$a$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `io.reactivex.rxjava3.internal.operators.flowable.FlowableUnsubscribeOn$a` `io.reactivex.rxjava3.internal.operators.flowable.FlowableUnsubscribeOn$a$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableUnsubscribeOn$a$a` v0 @kind this, `io.reactivex.rxjava3.internal.operators.flowable.FlowableUnsubscribeOn$a` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableUnsubscribeOn$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableUnsubscribeOn$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d66c4.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableUnsubscribeOn$a$a.a` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableUnsubscribeOn$a` := v1 @kind object;
  #L4d66c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d66ce.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableUnsubscribeOn$a$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableUnsubscribeOn$a$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d66e0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableUnsubscribeOn$a$a.a` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableUnsubscribeOn$a` @kind object;
  #L4d66e4.  v0:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableUnsubscribeOn$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4d66e8.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4d66ee.  return @kind void;
}
