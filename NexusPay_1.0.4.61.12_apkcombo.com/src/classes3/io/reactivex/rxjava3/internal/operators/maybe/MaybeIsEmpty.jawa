record `io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.maybe.a` @kind class {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty` v0 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIsEmpty;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4df1f8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/a;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L4df1fe.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty` v2 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIsEmpty;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4df210.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.a.source` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4df214.  v1:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeIsEmpty$a`;
  #L4df218.  call `<init>`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIsEmpty$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind direct;
  #L4df21e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4df224.  return @kind void;
}
