record `io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.b` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.c` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.d` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval` v0 @kind this, `long` v1 , `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.rxjava3.core.Scheduler` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInterval;.<init>:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4c894c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4c8952.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.c` @type ^`long` := v1 @kind wide;
  #L4c8956.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.d` @type ^`long` := v3 @kind wide;
  #L4c895a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.e` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L4c895e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.b` @type ^`io.reactivex.rxjava3.core.Scheduler` := v6 @kind object;
  #L4c8962.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval` v8 @kind this, `org.reactivestreams.Subscriber` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInterval;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4c8974.  v7:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval$a`;
  #L4c8978.  call `<init>`(v7, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInterval$a;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4c897e.  call `onSubscribe`(v9, v7) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4c8984.  v0:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.b` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4c8988.  v9:= instanceof @variable v0 @type ^`io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler` @kind boolean;
  #L4c898c.  if v9 == 0 then goto L4c89b4;
  #L4c8990.  call temp:= `createWorker`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L4c8996.  v0:= temp @kind object;
  #L4c8998.  call `a`(v7, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInterval$a;.a:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind virtual;
  #L4c899e.  v2:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.c` @type ^`long` @kind wide;
  #L4c89a2.  v4:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.d` @type ^`long` @kind wide;
  #L4c89a6.  v6:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.e` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4c89aa.  v1:= v7 @kind object;
  #L4c89ac.  call temp:= `schedulePeriodically`(v0, v1, v2, v4, v6) @signature `Lio/reactivex/rxjava3/core/Scheduler$Worker;.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4c89b2.  goto L4c89d0;
  #L4c89b4.  v2:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.c` @type ^`long` @kind wide;
  #L4c89b8.  v4:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.d` @type ^`long` @kind wide;
  #L4c89bc.  v6:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval.e` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4c89c0.  v1:= v7 @kind object;
  #L4c89c2.  call temp:= `schedulePeriodicallyDirect`(v0, v1, v2, v4, v6) @signature `Lio/reactivex/rxjava3/core/Scheduler;.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4c89c8.  v9:= temp @kind object;
  #L4c89ca.  call `a`(v7, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInterval$a;.a:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind virtual;
  #L4c89d0.  return @kind void;
}
