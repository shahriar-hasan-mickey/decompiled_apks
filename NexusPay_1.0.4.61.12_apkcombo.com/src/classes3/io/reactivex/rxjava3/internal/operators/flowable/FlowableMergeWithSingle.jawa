record `io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.core.SingleSource` `io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithSingle.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithSingle` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/SingleSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ca8bc.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4ca8c2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithSingle.b` @type ^`io.reactivex.rxjava3.core.SingleSource` := v2 @kind object;
  #L4ca8c6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithSingle` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithSingle;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4ca8d8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithSingle$a`;
  #L4ca8dc.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithSingle$a;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4ca8e2.  call `onSubscribe`(v2, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4ca8e8.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4ca8ec.  call `subscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4ca8f2.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithSingle.b` @type ^`io.reactivex.rxjava3.core.SingleSource` @kind object;
  #L4ca8f6.  v0:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithSingle$a.c` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithSingle$a$a` @kind object;
  #L4ca8fa.  call `subscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L4ca900.  return @kind void;
}
