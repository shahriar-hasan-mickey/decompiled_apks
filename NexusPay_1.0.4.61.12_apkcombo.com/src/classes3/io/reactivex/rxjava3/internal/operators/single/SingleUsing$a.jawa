record `io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `java.lang.Object` v2 @kind object, `boolean` v3 , `io.reactivex.rxjava3.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Ljava/lang/Object;ZLio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L509b2c.  call `<init>`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L509b32.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L509b36.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.c` @type ^`boolean` := v3 @kind boolean;
  #L509b3a.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v4 @kind object;
  #L509b3e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L509b9c.  call temp:= `getAndSet`(v2, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L509ba2.  v0:= temp @kind object;
  #L509ba4.  if v0 == v2 then goto L509bc2;
  #L509ba8.  v1:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L509bac.  call `accept`(v1, v0) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L509bb2.  goto L509bc2;
  #L509bb4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L509bb6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L509bbc.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L509bc2.  return @kind void;
  catch `java.lang.Throwable` @[L509ba8..L509bb2] goto L509bb4;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L509b50.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.c` @type ^`boolean` @kind boolean;
  #L509b54.  if v0 == 0 then goto L509b72;
  #L509b58.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.a:()V` @kind virtual;
  #L509b5e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L509b62.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L509b68.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L509b6c.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L509b70.  goto L509b8a;
  #L509b72.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L509b76.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L509b7c.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L509b80.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L509b84.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.a:()V` @kind virtual;
  #L509b8a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L509b0c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L509b10.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L509b16.  v0:= temp;
  #L509b18.  return v0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L509be0.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L509be4.  v4.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L509be8.  v0:= v4.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.c` @type ^`boolean` @kind boolean;
  #L509bec.  if v0 == 0 then goto L509c32;
  #L509bf0.  call temp:= `getAndSet`(v4, v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L509bf6.  v0:= temp @kind object;
  #L509bf8.  if v0 == v4 then goto L509c30;
  #L509bfc.  v1:= v4.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L509c00.  call `accept`(v1, v0) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L509c06.  goto L509c32;
  #L509c08.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L509c0a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L509c10.  v1:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L509c14.  v2:= 2I;
  #L509c16.  v2:= new `java.lang.Throwable`[v2];
  #L509c1a.  v3:= 0I;
  #L509c1c.  v2[v3]:= v5 @kind object;
  #L509c20.  v5:= 1I;
  #L509c22.  v2[v5]:= v0 @kind object;
  #L509c26.  call `<init>`(v1, v2) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L509c2c.  v5:= v1 @kind object;
  #L509c2e.  goto L509c32;
  #L509c30.  return @kind void;
  #L509c32.  v0:= v4.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L509c36.  call `onError`(v0, v5) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L509c3c.  v5:= v4.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.c` @type ^`boolean` @kind boolean;
  #L509c40.  if v5 != 0 then goto L509c4a;
  #L509c44.  call `a`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.a:()V` @kind virtual;
  #L509c4a.  return @kind void;
  catch `java.lang.Throwable` @[L509bfc..L509c06] goto L509c08;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L509c68.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L509c6c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L509c72.  v0:= temp;
  #L509c74.  if v0 == 0 then goto L509c86;
  #L509c78.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L509c7c.  v2:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L509c80.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L509c86.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L509c98.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L509c9c.  v2.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L509ca0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.c` @type ^`boolean` @kind boolean;
  #L509ca4.  if v0 == 0 then goto L509cd4;
  #L509ca8.  call temp:= `getAndSet`(v2, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L509cae.  v0:= temp @kind object;
  #L509cb0.  if v0 == v2 then goto L509cd2;
  #L509cb4.  v1:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L509cb8.  call `accept`(v1, v0) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L509cbe.  goto L509cd4;
  #L509cc0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L509cc2.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L509cc8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L509ccc.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L509cd2.  return @kind void;
  #L509cd4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L509cd8.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L509cde.  v3:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleUsing$a.c` @type ^`boolean` @kind boolean;
  #L509ce2.  if v3 != 0 then goto L509cec;
  #L509ce6.  call `a`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing$a;.a:()V` @kind virtual;
  #L509cec.  return @kind void;
  catch `java.lang.Throwable` @[L509cb4..L509cbe] goto L509cc0;
}
