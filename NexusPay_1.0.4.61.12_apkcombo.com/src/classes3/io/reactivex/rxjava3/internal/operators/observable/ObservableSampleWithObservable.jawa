record `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.observable.a` @kind class {
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleWithObservable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f8d94.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4f8d9a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable.a` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v2 @kind object;
  #L4f8d9e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable.b` @type ^`boolean` := v3 @kind boolean;
  #L4f8da2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable` v3 @kind this, `io.reactivex.rxjava3.core.Observer` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleWithObservable;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f8db4.  v0:= new `io.reactivex.rxjava3.observers.SerializedObserver`;
  #L4f8db8.  call `<init>`(v0, v4) @signature `Lio/reactivex/rxjava3/observers/SerializedObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4f8dbe.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable.b` @type ^`boolean` @kind boolean;
  #L4f8dc2.  if v4 == 0 then goto L4f8de0;
  #L4f8dc6.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4f8dca.  v1:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable$a`;
  #L4f8dce.  v2:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable.a` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4f8dd2.  call `<init>`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleWithObservable$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4f8dd8.  call `subscribe`(v4, v1) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4f8dde.  goto L4f8df8;
  #L4f8de0.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4f8de4.  v1:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable$b`;
  #L4f8de8.  v2:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable.a` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4f8dec.  call `<init>`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleWithObservable$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4f8df2.  call `subscribe`(v4, v1) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4f8df8.  return @kind void;
}
