record `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` @kind class @AccessFlag ABSTRACT extends `java.util.concurrent.atomic.AtomicLong` @kind class, `io.reactivex.rxjava3.core.FlowableEmitter` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bea68.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4bea6e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4bea72.  v1:= new `io.reactivex.rxjava3.internal.disposables.SequentialDisposable`;
  #L4bea76.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L4bea7c.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L4bea80.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.a:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4beab8.  call temp:= `isCancelled`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.isCancelled:()Z` @kind virtual;
  #L4beabe.  v0:= temp;
  #L4beac0.  if v0 == 0 then goto L4beac6;
  #L4beac4.  return @kind void;
  #L4beac6.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4beaca.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4bead0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4bead4.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4beada.  return @kind void;
  #L4beadc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4beade.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4beae2.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4beae8.  throw v0;
  catch `java.lang.Throwable` @[L4beac6..L4bead0] goto L4beadc;
}
procedure `boolean` `b`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.b:(Ljava/lang/Throwable;)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4be92c.  call temp:= `isCancelled`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.isCancelled:()Z` @kind virtual;
  #L4be932.  v0:= temp;
  #L4be934.  if v0 == 0 then goto L4be93c;
  #L4be938.  v2:= 0I;
  #L4be93a.  return v2;
  #L4be93c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4be940.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4be946.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4be94a.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4be950.  v2:= 1I;
  #L4be952.  return v2;
  #L4be954.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4be956.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4be95a.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4be960.  throw v2;
  catch `java.lang.Throwable` @[L4be93c..L4be946] goto L4be954;
}
procedure `void` `c`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.c:()V` @AccessFlag  {
    temp;

  #L4beb54.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.cancel:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4bea94.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4bea98.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4bea9e.  call `d`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.d:()V` @kind virtual;
  #L4beaa4.  return @kind void;
}
procedure `void` `d`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.d:()V` @AccessFlag  {
    temp;

  #L4beb68.  return @kind void;
}
procedure `boolean` `e`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.e:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;

  #L4be9a0.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.b:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4be9a6.  v1:= temp;
  #L4be9a8.  return v1;
}
procedure `boolean` `isCancelled`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.isCancelled:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4be980.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4be984.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.isDisposed:()Z` @kind virtual;
  #L4be98a.  v0:= temp;
  #L4be98c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L4beb08.  call `a`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.a:()V` @kind virtual;
  #L4beb0e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4beb20.  if v2 != 0 then goto L4beb30;
  #L4beb24.  v2:= "onError called with a null Throwable." @kind object;
  #L4beb28.  call temp:= `createNullPointerException`(v2) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L4beb2e.  v2:= temp @kind object;
  #L4beb30.  call temp:= `e`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.e:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4beb36.  v0:= temp;
  #L4beb38.  if v0 != 0 then goto L4beb42;
  #L4beb3c.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4beb42.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.request:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4beb7c.  call temp:= `validate`(v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L4beb82.  v0:= temp;
  #L4beb84.  if v0 == 0 then goto L4beb94;
  #L4beb88.  call temp:= `add`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/util/BackpressureHelper;.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L4beb8e.  call `c`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.c:()V` @kind virtual;
  #L4beb94.  return @kind void;
}
procedure `long` `requested`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.requested:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4bea4c.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4bea52.  v0:= temp @kind wide;
  #L4bea54.  return v0 @kind wide;
}
procedure `io.reactivex.rxjava3.core.FlowableEmitter` `serialize`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.serialize:()Lio/reactivex/rxjava3/core/FlowableEmitter;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4be9e8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$i`;
  #L4be9ec.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$i;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;)V` @kind direct;
  #L4be9f2.  return v0 @kind object;
}
procedure `void` `setCancellable`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v1 @kind this, `io.reactivex.rxjava3.functions.Cancellable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.setCancellable:(Lio/reactivex/rxjava3/functions/Cancellable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4beba8.  v0:= new `io.reactivex.rxjava3.internal.disposables.CancellableDisposable`;
  #L4bebac.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/CancellableDisposable;.<init>:(Lio/reactivex/rxjava3/functions/Cancellable;)V` @kind direct;
  #L4bebb2.  call `setDisposable`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.setDisposable:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind virtual;
  #L4bebb8.  return @kind void;
}
procedure `void` `setDisposable`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.setDisposable:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4bebcc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4bebd0.  call temp:= `update`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.update:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4bebd6.  return @kind void;
}
procedure `java.lang.String` `toString`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4bea04.  v0:= 2I;
  #L4bea06.  v0:= new `java.lang.Object`[v0];
  #L4bea0a.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4bea10.  v1:= temp @kind object;
  #L4bea12.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L4bea18.  v1:= temp @kind object;
  #L4bea1a.  v2:= 0I;
  #L4bea1c.  v0[v2]:= v1 @kind object;
  #L4bea20.  call temp:= `toString`(v3) @signature `Ljava/util/concurrent/atomic/AtomicLong;.toString:()Ljava/lang/String;` @kind super;
  #L4bea26.  v1:= temp @kind object;
  #L4bea28.  v2:= 1I;
  #L4bea2a.  v0[v2]:= v1 @kind object;
  #L4bea2e.  v1:= "%s{%s}" @kind object;
  #L4bea32.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4bea38.  v0:= temp @kind object;
  #L4bea3a.  return v0 @kind object;
}
procedure `boolean` `tryOnError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$b` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.tryOnError:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4be9bc.  if v1 != 0 then goto L4be9cc;
  #L4be9c0.  v1:= "tryOnError called with a null Throwable." @kind object;
  #L4be9c4.  call temp:= `createNullPointerException`(v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L4be9ca.  v1:= temp @kind object;
  #L4be9cc.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.e:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4be9d2.  v1:= temp;
  #L4be9d4.  return v1;
}
