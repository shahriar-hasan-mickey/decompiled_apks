record `io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `io.reactivex.rxjava3.core.CompletableSource` `io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher.b` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher` v0 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenPublisher;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lorg/reactivestreams/Publisher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e2acc.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4e2ad2.  v0.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher.b` @type ^`io.reactivex.rxjava3.core.CompletableSource` := v1 @kind object;
  #L4e2ad6.  v0.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher.c` @type ^`org.reactivestreams.Publisher` := v2 @kind object;
  #L4e2ada.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenPublisher;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4e2aec.  v0:= v3.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher.b` @type ^`io.reactivex.rxjava3.core.CompletableSource` @kind object;
  #L4e2af0.  v1:= new `io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher$a`;
  #L4e2af4.  v2:= v3.`io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher.c` @type ^`org.reactivestreams.Publisher` @kind object;
  #L4e2af8.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenPublisher$a;.<init>:(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L4e2afe.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4e2b04.  return @kind void;
}
