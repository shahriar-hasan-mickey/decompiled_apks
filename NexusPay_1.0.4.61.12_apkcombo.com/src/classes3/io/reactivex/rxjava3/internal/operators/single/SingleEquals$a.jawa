record `io.reactivex.rxjava3.internal.operators.single.SingleEquals$a` @kind class @AccessFlag  extends `io.reactivex.rxjava3.core.SingleObserver` @kind interface {
  `int` `io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.b` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a` v0 @kind this, `int` v1 , `io.reactivex.rxjava3.disposables.CompositeDisposable` v2 @kind object, `java.lang.Object`[] v3 @kind object, `io.reactivex.rxjava3.core.SingleObserver` v4 @kind object, `java.util.concurrent.atomic.AtomicInteger` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleEquals$a;.<init>:(ILio/reactivex/rxjava3/disposables/CompositeDisposable;[Ljava/lang/Object;Lio/reactivex/rxjava3/core/SingleObserver;Ljava/util/concurrent/atomic/AtomicInteger;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L506d24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L506d2a.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.a` @type ^`int` := v1;
  #L506d2e.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.b` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v2 @kind object;
  #L506d32.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.c` @type ^`java.lang.Object`[] := v3 @kind object;
  #L506d36.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.d` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v4 @kind object;
  #L506d3a.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.e` @type ^`java.util.concurrent.atomic.AtomicInteger` := v5 @kind object;
  #L506d3e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleEquals$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L506d50.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.e` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L506d54.  v1:= -1I;
  #L506d56.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndSet:(I)I` @kind virtual;
  #L506d5c.  v0:= temp;
  #L506d5e.  if v0 == 0 then goto L506d72;
  #L506d62.  v1:= 1I;
  #L506d64.  if v0 != v1 then goto L506d6a;
  #L506d68.  goto L506d72;
  #L506d6a.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L506d70.  goto L506d86;
  #L506d72.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.b` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L506d76.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L506d7c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.d` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L506d80.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L506d86.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleEquals$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L506d98.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.b` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L506d9c.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L506da2.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleEquals$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L506db4.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.c` @type ^`java.lang.Object`[] @kind object;
  #L506db8.  v1:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.a` @type ^`int`;
  #L506dbc.  v0[v1]:= v4 @kind object;
  #L506dc0.  v4:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.e` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L506dc4.  call temp:= `incrementAndGet`(v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.incrementAndGet:()I` @kind virtual;
  #L506dca.  v4:= temp;
  #L506dcc.  v0:= 2I;
  #L506dce.  if v4 != v0 then goto L506dfc;
  #L506dd2.  v4:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.d` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L506dd6.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleEquals$a.c` @type ^`java.lang.Object`[] @kind object;
  #L506dda.  v1:= 0I;
  #L506ddc.  v1:= v0[v1] @kind object;
  #L506de0.  v2:= 1I;
  #L506de2.  v0:= v0[v2] @kind object;
  #L506de6.  call temp:= `equals`(v1, v0) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L506dec.  v0:= temp;
  #L506dee.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L506df4.  v0:= temp @kind object;
  #L506df6.  call `onSuccess`(v4, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L506dfc.  return @kind void;
}
