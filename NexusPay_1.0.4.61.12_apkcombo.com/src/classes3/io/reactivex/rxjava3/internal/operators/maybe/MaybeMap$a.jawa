record `io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4df328.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4df32e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4df332.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4df336.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4df348.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4df34c.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4df350.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4df354.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4df35a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4df308.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4df30c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4df312.  v0:= temp;
  #L4df314.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4df36c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4df370.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4df376.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4df388.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4df38c.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4df392.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4df3a4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4df3a8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4df3ae.  v0:= temp;
  #L4df3b0.  if v0 == 0 then goto L4df3c2;
  #L4df3b4.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4df3b8.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4df3bc.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4df3c2.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeMap$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4df3d4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4df3d8.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4df3de.  v2:= temp @kind object;
  #L4df3e0.  v0:= "The mapper returned a null item" @kind object;
  #L4df3e4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4df3ea.  v2:= temp @kind object;
  #L4df3ec.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4df3f0.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4df3f6.  return @kind void;
  #L4df3f8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4df3fa.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4df400.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeMap$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4df404.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4df40a.  return @kind void;
  catch `java.lang.Throwable` @[L4df3d4..L4df3ec] goto L4df3f8;
}
