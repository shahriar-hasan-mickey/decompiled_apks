record `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a` @kind class {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d.k` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `int` v2 , `io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler$Worker` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn$d;.<init>:(Lorg/reactivestreams/Subscriber;ILio/reactivex/rxjava3/internal/queue/SpscArrayQueue;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L504694.  call `<init>`(v0, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn$a;.<init>:(ILio/reactivex/rxjava3/internal/queue/SpscArrayQueue;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L50469a.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d.k` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L50469e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn$d;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5046b0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L5046b4.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L5046ba.  v0:= temp;
  #L5046bc.  if v0 == 0 then goto L5046da;
  #L5046c0.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.e` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L5046c4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d.k` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L5046c8.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L5046ce.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.a` @type ^`int`;
  #L5046d2.  v0:= (`long`) v0 @kind i2l;
  #L5046d4.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L5046da.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d` v18 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn$d;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L5046ec.  v0:= v18 @kind object;
  #L5046f0.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.j` @type ^`int`;
  #L5046f4.  v2:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.c` @type ^`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` @kind object;
  #L5046f8.  v3:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$d.k` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L5046fc.  v4:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.b` @type ^`int`;
  #L504700.  v5:= 1I;
  #L504702.  v6:= 1I;
  #L504704.  v7:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L504708.  call temp:= `get`(v7) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L50470e.  v7:= temp @kind wide;
  #L504710.  v9:= 0L;
  #L504714.  v11:= v9 @kind wide;
  #L504716.  v13:= lcmp(v11, v7);
  #L50471a.  if v13 == 0 then goto L5047b4;
  #L50471e.  v14:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.i` @type ^`boolean` @kind boolean;
  #L504722.  if v14 == 0 then goto L50472e;
  #L504726.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.clear:()V` @kind virtual;
  #L50472c.  return @kind void;
  #L50472e.  v14:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.f` @type ^`boolean` @kind boolean;
  #L504732.  if v14 == 0 then goto L504756;
  #L504736.  v15:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.g` @type ^`java.lang.Throwable` @kind object;
  #L50473a.  if v15 == 0 then goto L504756;
  #L50473e.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.clear:()V` @kind virtual;
  #L504744.  call `onError`(v3, v15) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L50474a.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L50474e.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L504754.  return @kind void;
  #L504756.  call temp:= `poll`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L50475c.  v15:= temp @kind object;
  #L50475e.  v16:= 0I;
  #L504762.  if v15 != 0 then goto L50476c;
  #L504766.  v17:= 1I;
  #L50476a.  goto L504770;
  #L50476c.  v17:= 0I;
  #L504770.  if v14 == 0 then goto L50478a;
  #L504774.  if v17 == 0 then goto L50478a;
  #L504778.  call `onComplete`(v3) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L50477e.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L504782.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L504788.  return @kind void;
  #L50478a.  if v17 == 0 then goto L504790;
  #L50478e.  goto L5047b4;
  #L504790.  call `onNext`(v3, v15) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L504796.  v13:= 1L;
  #L50479a.  v11:= v11 + v13 @kind long;
  #L50479c.  v1:= v1 + 1;
  #L5047a0.  if v1 != v4 then goto L504716;
  #L5047a4.  v13:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L5047a8.  v14:= (`long`) v1 @kind i2l;
  #L5047aa.  call `request`(v13, v14) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L5047b0.  v1:= 0I;
  #L5047b2.  goto L504716;
  #L5047b4.  if v13 != 0 then goto L50480e;
  #L5047b8.  v13:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.i` @type ^`boolean` @kind boolean;
  #L5047bc.  if v13 == 0 then goto L5047c8;
  #L5047c0.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.clear:()V` @kind virtual;
  #L5047c6.  return @kind void;
  #L5047c8.  v13:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.f` @type ^`boolean` @kind boolean;
  #L5047cc.  if v13 == 0 then goto L50480e;
  #L5047d0.  v13:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.g` @type ^`java.lang.Throwable` @kind object;
  #L5047d4.  if v13 == 0 then goto L5047f0;
  #L5047d8.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.clear:()V` @kind virtual;
  #L5047de.  call `onError`(v3, v13) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5047e4.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L5047e8.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L5047ee.  return @kind void;
  #L5047f0.  call temp:= `isEmpty`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.isEmpty:()Z` @kind virtual;
  #L5047f6.  v13:= temp;
  #L5047f8.  if v13 == 0 then goto L50480e;
  #L5047fc.  call `onComplete`(v3) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L504802.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L504806.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L50480c.  return @kind void;
  #L50480e.  v13:= lcmp(v11, v9);
  #L504812.  if v13 == 0 then goto L504834;
  #L504816.  v9:= 9223372036854775807L;
  #L504820.  v13:= lcmp(v7, v9);
  #L504824.  if v13 == 0 then goto L504834;
  #L504828.  v7:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L50482c.  v8:= -v11 @kind long;
  #L50482e.  call temp:= `addAndGet`(v7, v8) @signature `Ljava/util/concurrent/atomic/AtomicLong;.addAndGet:(J)J` @kind virtual;
  #L504834.  call temp:= `get`(v18) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L50483a.  v7:= temp;
  #L50483c.  if v7 != v6 then goto L504854;
  #L504840.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.j` @type ^`int` := v1;
  #L504844.  v6:= -v6 @kind int;
  #L504846.  call temp:= `addAndGet`(v0, v6) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L50484c.  v6:= temp;
  #L50484e.  if v6 != 0 then goto L504704;
  #L504852.  return @kind void;
  #L504854.  v6:= v7;
  #L504856.  goto L504704;
}
