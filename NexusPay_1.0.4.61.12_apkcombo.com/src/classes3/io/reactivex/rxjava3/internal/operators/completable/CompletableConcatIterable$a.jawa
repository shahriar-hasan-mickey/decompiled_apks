record `io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.CompletableObserver` @kind interface {
  `io.reactivex.rxjava3.core.CompletableObserver` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.a` @AccessFlag FINAL;
  `java.util.Iterator` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.c` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a` v0 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcatIterable$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b4884.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4b488a.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` := v1 @kind object;
  #L4b488e.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.b` @type ^`java.util.Iterator` := v2 @kind object;
  #L4b4892.  v1:= new `io.reactivex.rxjava3.internal.disposables.SequentialDisposable`;
  #L4b4896.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L4b489c.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L4b48a0.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcatIterable$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4b48b4.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4b48b8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.isDisposed:()Z` @kind virtual;
  #L4b48be.  v0:= temp;
  #L4b48c0.  if v0 == 0 then goto L4b48c6;
  #L4b48c4.  return @kind void;
  #L4b48c6.  call temp:= `getAndIncrement`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4b48cc.  v0:= temp;
  #L4b48ce.  if v0 == 0 then goto L4b48d4;
  #L4b48d2.  return @kind void;
  #L4b48d4.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.b` @type ^`java.util.Iterator` @kind object;
  #L4b48d8.  v1:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4b48dc.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.isDisposed:()Z` @kind virtual;
  #L4b48e2.  v1:= temp;
  #L4b48e4.  if v1 == 0 then goto L4b48ea;
  #L4b48e8.  return @kind void;
  #L4b48ea.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b48f0.  v1:= temp;
  #L4b48f2.  if v1 != 0 then goto L4b4902;
  #L4b48f6.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b48fa.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L4b4900.  return @kind void;
  #L4b4902.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b4908.  v1:= temp @kind object;
  #L4b490a.  v2:= "The CompletableSource returned is null" @kind object;
  #L4b490e.  call temp:= `requireNonNull`(v1, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4b4914.  v1:= temp @kind object;
  #L4b4916.  v1:= (`io.reactivex.rxjava3.core.CompletableSource`) v1 @kind object;
  #L4b491a.  call `subscribe`(v1, v3) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4b4920.  call temp:= `decrementAndGet`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4b4926.  v1:= temp;
  #L4b4928.  if v1 != 0 then goto L4b48d8;
  #L4b492c.  return @kind void;
  #L4b492e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b4930.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b4936.  v1:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b493a.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b4940.  return @kind void;
  #L4b4942.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b4944.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b494a.  v1:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b494e.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b4954.  return @kind void;
  catch `java.lang.Throwable` @[L4b48ea..L4b48f2] goto L4b4942;
  catch `java.lang.Throwable` @[L4b4902..L4b491a] goto L4b492e;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcatIterable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L4b4980.  call `a`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcatIterable$a;.a:()V` @kind virtual;
  #L4b4986.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcatIterable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b4998.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b499c.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b49a2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcatIterable$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b49b4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable$a.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4b49b8.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4b49be.  return @kind void;
}
