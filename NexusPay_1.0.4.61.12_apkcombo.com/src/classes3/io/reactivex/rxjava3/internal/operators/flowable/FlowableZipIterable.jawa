record `io.reactivex.rxjava3.internal.operators.flowable.FlowableZipIterable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `java.lang.Iterable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableZipIterable.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.flowable.FlowableZipIterable.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableZipIterable` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableZipIterable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4da374.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4da37a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableZipIterable.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L4da37e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableZipIterable.c` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v3 @kind object;
  #L4da382.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableZipIterable` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableZipIterable;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4da394.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableZipIterable.b` @type ^`java.lang.Iterable` @kind object;
  #L4da398.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4da39e.  v0:= temp @kind object;
  #L4da3a0.  v1:= "The iterator returned by other is null" @kind object;
  #L4da3a4.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4da3aa.  v0:= temp @kind object;
  #L4da3ac.  v0:= (`java.util.Iterator`) v0 @kind object;
  #L4da3b0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4da3b6.  v1:= temp;
  #L4da3b8.  if v1 != 0 then goto L4da3c4;
  #L4da3bc.  call `complete`(v5) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4da3c2.  return @kind void;
  #L4da3c4.  v1:= v4.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4da3c8.  v2:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableZipIterable$a`;
  #L4da3cc.  v3:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableZipIterable.c` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L4da3d0.  call `<init>`(v2, v5, v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableZipIterable$a;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/util/Iterator;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4da3d6.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4da3dc.  return @kind void;
  #L4da3de.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4da3e0.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4da3e6.  call `error`(v0, v5) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4da3ec.  return @kind void;
  #L4da3ee.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4da3f0.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4da3f6.  call `error`(v0, v5) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4da3fc.  return @kind void;
  catch `java.lang.Throwable` @[L4da394..L4da3b0] goto L4da3ee;
  catch `java.lang.Throwable` @[L4da3b0..L4da3b8] goto L4da3de;
}
