record `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromCallable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Maybe` @kind class, `io.reactivex.rxjava3.functions.Supplier` @kind interface {
  `java.util.concurrent.Callable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromCallable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromCallable` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4de660.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.<init>:()V` @kind direct;
  #L4de666.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromCallable.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L4de66a.  return @kind void;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromCallable` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromCallable;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4de640.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromCallable.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L4de644.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L4de64a.  v0:= temp @kind object;
  #L4de64c.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromCallable` v2 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromCallable;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4de67c.  call temp:= `b`() @signature `Lio/reactivex/rxjava3/disposables/a;.b:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L4de682.  v0:= temp @kind object;
  #L4de684.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4de68a.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4de690.  v1:= temp;
  #L4de692.  if v1 != 0 then goto L4de6e4;
  #L4de696.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromCallable.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L4de69a.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L4de6a0.  v1:= temp @kind object;
  #L4de6a2.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4de6a8.  v0:= temp;
  #L4de6aa.  if v0 != 0 then goto L4de6e4;
  #L4de6ae.  if v1 != 0 then goto L4de6ba;
  #L4de6b2.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4de6b8.  goto L4de6e4;
  #L4de6ba.  call `onSuccess`(v3, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4de6c0.  goto L4de6e4;
  #L4de6c2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4de6c4.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4de6ca.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4de6d0.  v0:= temp;
  #L4de6d2.  if v0 != 0 then goto L4de6de;
  #L4de6d6.  call `onError`(v3, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4de6dc.  goto L4de6e4;
  #L4de6de.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4de6e4.  return @kind void;
  catch `java.lang.Throwable` @[L4de696..L4de6a2] goto L4de6c2;
}
