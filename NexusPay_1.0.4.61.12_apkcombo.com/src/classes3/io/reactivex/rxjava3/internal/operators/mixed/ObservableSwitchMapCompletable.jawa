record `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Completable` @kind class {
  `io.reactivex.rxjava3.core.Observable` `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable` v0 @kind this, `io.reactivex.rxjava3.core.Observable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e5c1c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.<init>:()V` @kind direct;
  #L4e5c22.  v0.`io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable.a` @type ^`io.reactivex.rxjava3.core.Observable` := v1 @kind object;
  #L4e5c26.  v0.`io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4e5c2a.  v0.`io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable.c` @type ^`boolean` := v3 @kind boolean;
  #L4e5c2e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable` v4 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapCompletable;.subscribeActual:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e5c40.  v0:= v4.`io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable.a` @type ^`io.reactivex.rxjava3.core.Observable` @kind object;
  #L4e5c44.  v1:= v4.`io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4e5c48.  call temp:= `a`(v0, v1, v5) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/a;.a:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/CompletableObserver;)Z` @kind static;
  #L4e5c4e.  v0:= temp;
  #L4e5c50.  if v0 != 0 then goto L4e5c70;
  #L4e5c54.  v0:= v4.`io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable.a` @type ^`io.reactivex.rxjava3.core.Observable` @kind object;
  #L4e5c58.  v1:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable$a`;
  #L4e5c5c.  v2:= v4.`io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4e5c60.  v3:= v4.`io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable.c` @type ^`boolean` @kind boolean;
  #L4e5c64.  call `<init>`(v1, v5, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapCompletable$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4e5c6a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4e5c70.  return @kind void;
}
