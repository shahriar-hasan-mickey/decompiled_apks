record `io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e7b74.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e7b7a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4e7b7e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L4e7b82.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e7b94.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7b98.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e7b9e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e7b54.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7b58.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4e7b5e.  v0:= temp;
  #L4e7b60.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e7bb0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L4e7bb4.  if v0 != 0 then goto L4e7bcc;
  #L4e7bb8.  v0:= 1I;
  #L4e7bba.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4e7bbe.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4e7bc2.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L4e7bc6.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4e7bcc.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e7be0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L4e7be4.  if v0 == 0 then goto L4e7bf0;
  #L4e7be8.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4e7bee.  return @kind void;
  #L4e7bf0.  v0:= 1I;
  #L4e7bf2.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4e7bf6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4e7bfa.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e7c00.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e7c14.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` @kind boolean;
  #L4e7c18.  if v0 == 0 then goto L4e7c1e;
  #L4e7c1c.  return @kind void;
  #L4e7c1e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4e7c22.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4e7c28.  v2:= temp;
  #L4e7c2a.  if v2 == 0 then goto L4e7c4c;
  #L4e7c2e.  v2:= 1I;
  #L4e7c30.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.d` @type ^`boolean` := v2 @kind boolean;
  #L4e7c34.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7c38.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e7c3e.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4e7c42.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4e7c46.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4e7c4c.  return @kind void;
  #L4e7c4e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e7c50.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4e7c56.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7c5a.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e7c60.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4e7c66.  return @kind void;
  catch `java.lang.Throwable` @[L4e7c1e..L4e7c2a] goto L4e7c4e;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e7c84.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7c88.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e7c8e.  v0:= temp;
  #L4e7c90.  if v0 == 0 then goto L4e7ca2;
  #L4e7c94.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4e7c98.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4e7c9c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4e7ca2.  return @kind void;
}
