record `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Maybe` @kind class, `io.reactivex.rxjava3.functions.Supplier` @kind interface {
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction` v0 @kind this, `io.reactivex.rxjava3.functions.Action` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromAction;.<init>:(Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4de5ac.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.<init>:()V` @kind direct;
  #L4de5b2.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction.a` @type ^`io.reactivex.rxjava3.functions.Action` := v1 @kind object;
  #L4de5b6.  return @kind void;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromAction;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4de58c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction.a` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4de590.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4de596.  v0:= 0I;
  #L4de598.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction` v2 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromAction;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4de5c8.  call temp:= `b`() @signature `Lio/reactivex/rxjava3/disposables/a;.b:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L4de5ce.  v0:= temp @kind object;
  #L4de5d0.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4de5d6.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4de5dc.  v1:= temp;
  #L4de5de.  if v1 != 0 then goto L4de622;
  #L4de5e2.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFromAction.a` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4de5e6.  call `run`(v1) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4de5ec.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4de5f2.  v0:= temp;
  #L4de5f4.  if v0 != 0 then goto L4de622;
  #L4de5f8.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4de5fe.  goto L4de622;
  #L4de600.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4de602.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4de608.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4de60e.  v0:= temp;
  #L4de610.  if v0 != 0 then goto L4de61c;
  #L4de614.  call `onError`(v3, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4de61a.  goto L4de622;
  #L4de61c.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4de622.  return @kind void;
  catch `java.lang.Throwable` @[L4de5e2..L4de5ec] goto L4de600;
}
