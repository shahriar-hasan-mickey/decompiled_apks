record `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest.d` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleLatest;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d5220.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4d5226.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest.b` @type ^`long` := v2 @kind wide;
  #L4d522a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest.c` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L4d522e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest.d` @type ^`io.reactivex.rxjava3.core.Scheduler` := v5 @kind object;
  #L4d5232.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest.e` @type ^`boolean` := v6 @kind boolean;
  #L4d5236.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest` v9 @kind this, `org.reactivestreams.Subscriber` v10 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleLatest;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4d5248.  v0:= v9.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4d524c.  v8:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest$a`;
  #L4d5250.  v3:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest.b` @type ^`long` @kind wide;
  #L4d5254.  v5:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4d5258.  v1:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4d525c.  call temp:= `createWorker`(v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L4d5262.  v6:= temp @kind object;
  #L4d5264.  v7:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest.e` @type ^`boolean` @kind boolean;
  #L4d5268.  v1:= v8 @kind object;
  #L4d526a.  v2:= v10 @kind object;
  #L4d526c.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleLatest$a;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler$Worker;Z)V` @kind direct;
  #L4d5272.  call `subscribe`(v0, v8) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4d5278.  return @kind void;
}
