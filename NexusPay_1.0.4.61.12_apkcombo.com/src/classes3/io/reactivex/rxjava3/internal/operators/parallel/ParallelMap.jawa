record `io.reactivex.rxjava3.internal.operators.parallel.ParallelMap` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.parallel.ParallelFlowable` @kind class {
  `io.reactivex.rxjava3.parallel.ParallelFlowable` `io.reactivex.rxjava3.internal.operators.parallel.ParallelMap.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.parallel.ParallelMap.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap` v0 @kind this, `io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L503814.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.<init>:()V` @kind direct;
  #L50381a.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` := v1 @kind object;
  #L50381e.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L503822.  return @kind void;
}
procedure `int` `parallelism`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap;.parallelism:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5037f4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` @kind object;
  #L5037f8.  call temp:= `parallelism`(v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L5037fe.  v0:= temp;
  #L503800.  return v0;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap` v6 @kind this, `org.reactivestreams.Subscriber`[] v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L503834.  call temp:= `validate`(v6, v7) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.validate:([Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L50383a.  v0:= temp;
  #L50383c.  if v0 != 0 then goto L503842;
  #L503840.  return @kind void;
  #L503842.  v0:= length @variable v7;
  #L503844.  v1:= new `org.reactivestreams.Subscriber`[v0];
  #L503848.  v2:= 0I;
  #L50384a.  if v2 >= v0 then goto L50388a;
  #L50384e.  v3:= v7[v2] @kind object;
  #L503852.  v4:= instanceof @variable v3 @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind boolean;
  #L503856.  if v4 == 0 then goto L503872;
  #L50385a.  v4:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$a`;
  #L50385e.  v3:= (`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber`) v3 @kind object;
  #L503862.  v5:= v6.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L503866.  call `<init>`(v4, v3, v5) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap$a;.<init>:(Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L50386c.  v1[v2]:= v4 @kind object;
  #L503870.  goto L503884;
  #L503872.  v4:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b`;
  #L503876.  v5:= v6.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L50387a.  call `<init>`(v4, v3, v5) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L503880.  v1[v2]:= v4 @kind object;
  #L503884.  v2:= v2 + 1;
  #L503888.  goto L50384a;
  #L50388a.  v7:= v6.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` @kind object;
  #L50388e.  call `subscribe`(v7, v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L503894.  return @kind void;
}
