record `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromArray` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `java.lang.Object`[] `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromArray.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromArray` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromArray;.<init>:([Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4c5588.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4c558e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromArray.b` @type ^`java.lang.Object`[] := v1 @kind object;
  #L4c5592.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromArray` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromArray;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4c55a4.  v0:= instanceof @variable v4 @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind boolean;
  #L4c55a8.  if v0 == 0 then goto L4c55c8;
  #L4c55ac.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromArray$a`;
  #L4c55b0.  v1:= v4 @kind object;
  #L4c55b2.  v1:= (`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber`) v1 @kind object;
  #L4c55b6.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromArray.b` @type ^`java.lang.Object`[] @kind object;
  #L4c55ba.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromArray$a;.<init>:(Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;[Ljava/lang/Object;)V` @kind direct;
  #L4c55c0.  call `onSubscribe`(v4, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4c55c6.  goto L4c55dc;
  #L4c55c8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromArray$b`;
  #L4c55cc.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromArray.b` @type ^`java.lang.Object`[] @kind object;
  #L4c55d0.  call `<init>`(v0, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromArray$b;.<init>:(Lorg/reactivestreams/Subscriber;[Ljava/lang/Object;)V` @kind direct;
  #L4c55d6.  call `onSubscribe`(v4, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4c55dc.  return @kind void;
}
