record `io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class {
  `io.reactivex.rxjava3.core.SingleSource` `io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource` v1 @kind object, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleSubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L508fa8.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L508fae.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn.a` @type ^`io.reactivex.rxjava3.core.SingleSource` := v1 @kind object;
  #L508fb2.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn.b` @type ^`io.reactivex.rxjava3.core.Scheduler` := v2 @kind object;
  #L508fb6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn` v2 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleSubscribeOn;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L508fc8.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a`;
  #L508fcc.  v1:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn.a` @type ^`io.reactivex.rxjava3.core.SingleSource` @kind object;
  #L508fd0.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleSubscribeOn$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L508fd6.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L508fdc.  v3:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn.b` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L508fe0.  call temp:= `scheduleDirect`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L508fe6.  v3:= temp @kind object;
  #L508fe8.  v0:= v0.`io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn$a.b` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L508fec.  call temp:= `replace`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L508ff2.  return @kind void;
}
