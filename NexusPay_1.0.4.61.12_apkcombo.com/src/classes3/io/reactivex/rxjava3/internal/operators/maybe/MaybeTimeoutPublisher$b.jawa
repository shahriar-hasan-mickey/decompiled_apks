record `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$c` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$a` `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.d` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v1 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v2 @kind object, `io.reactivex.rxjava3.core.MaybeSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/core/MaybeSource;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4e15c4.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4e15ca.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v2 @kind object;
  #L4e15ce.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$c`;
  #L4e15d2.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$c;.<init>:(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;)V` @kind direct;
  #L4e15d8.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$c` := v0 @kind object;
  #L4e15dc.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.c` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v3 @kind object;
  #L4e15e0.  if v3 == 0 then goto L4e15f0;
  #L4e15e4.  v3:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$a`;
  #L4e15e8.  call `<init>`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind direct;
  #L4e15ee.  goto L4e15f2;
  #L4e15f0.  v3:= 0I;
  #L4e15f2.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.d` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$a` := v3 @kind object;
  #L4e15f6.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e170c.  call temp:= `dispose`(v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e1712.  v0:= temp;
  #L4e1714.  if v0 == 0 then goto L4e1740;
  #L4e1718.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.c` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4e171c.  if v0 != 0 then goto L4e1736;
  #L4e1720.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4e1724.  v1:= new `java.util.concurrent.TimeoutException`;
  #L4e1728.  call `<init>`(v1) @signature `Ljava/util/concurrent/TimeoutException;.<init>:()V` @kind direct;
  #L4e172e.  call `onError`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e1734.  goto L4e1740;
  #L4e1736.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.d` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$a` @kind object;
  #L4e173a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4e1740.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.b:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e1754.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e175a.  v0:= temp;
  #L4e175c.  if v0 == 0 then goto L4e176c;
  #L4e1760.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4e1764.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e176a.  goto L4e1772;
  #L4e176c.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4e1772.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e1608.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e160e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$c` @kind object;
  #L4e1612.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e1618.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.d` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$a` @kind object;
  #L4e161c.  if v0 == 0 then goto L4e1626;
  #L4e1620.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e1626.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e159c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e15a2.  v0:= temp @kind object;
  #L4e15a4.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4e15a8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e15ae.  v0:= temp;
  #L4e15b0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e1638.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$c` @kind object;
  #L4e163c.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e1642.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e1646.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4e164c.  v0:= temp @kind object;
  #L4e164e.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e1652.  if v0 == v1 then goto L4e1660;
  #L4e1656.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4e165a.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4e1660.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e1674.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$c` @kind object;
  #L4e1678.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e167e.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e1682.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4e1688.  v0:= temp @kind object;
  #L4e168a.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e168e.  if v0 == v1 then goto L4e169e;
  #L4e1692.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4e1696.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e169c.  goto L4e16a4;
  #L4e169e.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4e16a4.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4e16b8.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e16be.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeTimeoutPublisher$b;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e16d0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.b` @type ^`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$c` @kind object;
  #L4e16d4.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e16da.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e16de.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4e16e4.  v0:= temp @kind object;
  #L4e16e6.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e16ea.  if v0 == v1 then goto L4e16f8;
  #L4e16ee.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher$b.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4e16f2.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4e16f8.  return @kind void;
}
