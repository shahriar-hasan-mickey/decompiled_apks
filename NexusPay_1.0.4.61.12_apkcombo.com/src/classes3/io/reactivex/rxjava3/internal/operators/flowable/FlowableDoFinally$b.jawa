record `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.c` @AccessFlag ;
  `io.reactivex.rxjava3.internal.fuseable.QueueSubscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.e` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c0ff8.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription;.<init>:()V` @kind direct;
  #L4c0ffe.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4c1002.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.b` @type ^`io.reactivex.rxjava3.functions.Action` := v2 @kind object;
  #L4c1006.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c1018.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c101c.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4c1022.  call `e`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.e:()V` @kind virtual;
  #L4c1028.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c103c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.d` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L4c1040.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L4c1046.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.e:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4c1118.  v0:= 0I;
  #L4c111a.  v1:= 1I;
  #L4c111c.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z` @kind virtual;
  #L4c1122.  v0:= temp;
  #L4c1124.  if v0 == 0 then goto L4c1142;
  #L4c1128.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.b` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4c112c.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4c1132.  goto L4c1142;
  #L4c1134.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c1136.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c113c.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4c1142.  return @kind void;
  catch `java.lang.Throwable` @[L4c1128..L4c1132] goto L4c1134;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c0f68.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.d` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L4c0f6c.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.isEmpty:()Z` @kind interface;
  #L4c0f72.  v0:= temp;
  #L4c0f74.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c1058.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c105c.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4c1062.  call `e`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.e:()V` @kind virtual;
  #L4c1068.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c107c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c1080.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c1086.  call `e`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.e:()V` @kind virtual;
  #L4c108c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c10a0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c10a4.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c10aa.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c10bc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c10c0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4c10c6.  v0:= temp;
  #L4c10c8.  if v0 == 0 then goto L4c10ea;
  #L4c10cc.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L4c10d0.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind boolean;
  #L4c10d4.  if v0 == 0 then goto L4c10e0;
  #L4c10d8.  v2:= (`io.reactivex.rxjava3.internal.fuseable.QueueSubscription`) v2 @kind object;
  #L4c10dc.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.d` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` := v2 @kind object;
  #L4c10e0.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c10e4.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4c10ea.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c0fc8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.d` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L4c0fcc.  call temp:= `poll`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4c0fd2.  v0:= temp @kind object;
  #L4c0fd4.  if v0 != 0 then goto L4c0fe6;
  #L4c0fd8.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.e` @type ^`boolean` @kind boolean;
  #L4c0fdc.  if v1 == 0 then goto L4c0fe6;
  #L4c0fe0.  call `e`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.e:()V` @kind virtual;
  #L4c0fe6.  return v0 @kind object;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c10fc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c1100.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4c1106.  return @kind void;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally$b;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4c0f88.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.d` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L4c0f8c.  v1:= 0I;
  #L4c0f8e.  if v0 == 0 then goto L4c0fb4;
  #L4c0f92.  v2:= v4 ^& 4;
  #L4c0f96.  if v2 != 0 then goto L4c0fb4;
  #L4c0f9a.  call temp:= `requestFusion`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/fuseable/QueueFuseable;.requestFusion:(I)I` @kind interface;
  #L4c0fa0.  v4:= temp;
  #L4c0fa2.  if v4 == 0 then goto L4c0fb2;
  #L4c0fa6.  v0:= 1I;
  #L4c0fa8.  if v4 != v0 then goto L4c0fae;
  #L4c0fac.  v1:= 1I;
  #L4c0fae.  v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally$b.e` @type ^`boolean` := v1 @kind boolean;
  #L4c0fb2.  return v4;
  #L4c0fb4.  return v1;
}
