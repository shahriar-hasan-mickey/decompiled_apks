record `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary.b` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferBoundary;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ba230.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4ba236.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary.c` @type ^`org.reactivestreams.Publisher` := v2 @kind object;
  #L4ba23a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary.d` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L4ba23e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary.b` @type ^`io.reactivex.rxjava3.functions.Supplier` := v4 @kind object;
  #L4ba242.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferBoundary;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ba254.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary$a`;
  #L4ba258.  v1:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary.c` @type ^`org.reactivestreams.Publisher` @kind object;
  #L4ba25c.  v2:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary.d` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ba260.  v3:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4ba264.  call `<init>`(v0, v5, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferBoundary$a;.<init>:(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4ba26a.  call `onSubscribe`(v5, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4ba270.  v5:= v4.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4ba274.  call `subscribe`(v5, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4ba27a.  return @kind void;
}
