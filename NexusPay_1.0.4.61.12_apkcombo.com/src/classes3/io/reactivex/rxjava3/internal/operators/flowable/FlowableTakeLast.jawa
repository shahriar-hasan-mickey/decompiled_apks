record `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLast` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLast.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLast` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeLast;.<init>:(Lio/reactivex/rxjava3/core/Flowable;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d4620.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4d4626.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLast.b` @type ^`int` := v2;
  #L4d462a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLast` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeLast;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4d463c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4d4640.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLast$a`;
  #L4d4644.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLast.b` @type ^`int`;
  #L4d4648.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeLast$a;.<init>:(Lorg/reactivestreams/Subscriber;I)V` @kind direct;
  #L4d464e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4d4654.  return @kind void;
}
