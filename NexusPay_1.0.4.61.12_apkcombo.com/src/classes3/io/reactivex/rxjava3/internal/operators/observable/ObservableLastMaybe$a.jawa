record `io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @AccessFlag ;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f3b5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f3b62.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4f3b66.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3b78.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f3b7c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4f3b82.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4f3b86.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4f3b8a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f3b38.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f3b3c.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4f3b40.  if v0 != v1 then goto L4f3b48;
  #L4f3b44.  v0:= 1I;
  #L4f3b46.  goto L4f3b4a;
  #L4f3b48.  v0:= 0I;
  #L4f3b4a.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f3b9c.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4f3ba0.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4f3ba4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` @kind object;
  #L4f3ba8.  if v0 == 0 then goto L4f3bbe;
  #L4f3bac.  v1:= 0I;
  #L4f3bae.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L4f3bb2.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4f3bb6.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4f3bbc.  goto L4f3bc8;
  #L4f3bbe.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4f3bc2.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4f3bc8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3bdc.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4f3be0.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4f3be4.  v0:= 0I;
  #L4f3be6.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L4f3bea.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4f3bee.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f3bf4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4f3c08.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L4f3c0c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f3c20.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f3c24.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4f3c2a.  v0:= temp;
  #L4f3c2c.  if v0 == 0 then goto L4f3c3e;
  #L4f3c30.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4f3c34.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4f3c38.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4f3c3e.  return @kind void;
}
