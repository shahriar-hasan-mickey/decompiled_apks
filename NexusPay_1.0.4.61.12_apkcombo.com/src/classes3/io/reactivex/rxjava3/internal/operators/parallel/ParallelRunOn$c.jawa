record `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$c` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a` @kind class {
  `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$c.k` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$c.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$c` v0 @kind this, `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` v1 @kind object, `int` v2 , `io.reactivex.rxjava3.internal.queue.SpscArrayQueue` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler$Worker` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn$c;.<init>:(Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;ILio/reactivex/rxjava3/internal/queue/SpscArrayQueue;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5044dc.  call `<init>`(v0, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn$a;.<init>:(ILio/reactivex/rxjava3/internal/queue/SpscArrayQueue;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L5044e2.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$c.k` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` := v1 @kind object;
  #L5044e6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$c` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn$c;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5044f8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L5044fc.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L504502.  v0:= temp;
  #L504504.  if v0 == 0 then goto L504522;
  #L504508.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.e` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L50450c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$c.k` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind object;
  #L504510.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/FlowableSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L504516.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.a` @type ^`int`;
  #L50451a.  v0:= (`long`) v0 @kind i2l;
  #L50451c.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L504522.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$c` v18 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn$c;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L504534.  v0:= v18 @kind object;
  #L504538.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.j` @type ^`int`;
  #L50453c.  v2:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.c` @type ^`io.reactivex.rxjava3.internal.queue.SpscArrayQueue` @kind object;
  #L504540.  v3:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$c.k` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind object;
  #L504544.  v4:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.b` @type ^`int`;
  #L504548.  v5:= 1I;
  #L50454a.  v6:= 1I;
  #L50454c.  v7:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L504550.  call temp:= `get`(v7) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L504556.  v7:= temp @kind wide;
  #L504558.  v9:= 0L;
  #L50455c.  v11:= v9 @kind wide;
  #L50455e.  v13:= lcmp(v11, v7);
  #L504562.  if v13 == 0 then goto L504602;
  #L504566.  v14:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.i` @type ^`boolean` @kind boolean;
  #L50456a.  if v14 == 0 then goto L504576;
  #L50456e.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.clear:()V` @kind virtual;
  #L504574.  return @kind void;
  #L504576.  v14:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.f` @type ^`boolean` @kind boolean;
  #L50457a.  if v14 == 0 then goto L50459e;
  #L50457e.  v15:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.g` @type ^`java.lang.Throwable` @kind object;
  #L504582.  if v15 == 0 then goto L50459e;
  #L504586.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.clear:()V` @kind virtual;
  #L50458c.  call `onError`(v3, v15) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L504592.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L504596.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L50459c.  return @kind void;
  #L50459e.  call temp:= `poll`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L5045a4.  v15:= temp @kind object;
  #L5045a6.  v16:= 0I;
  #L5045aa.  if v15 != 0 then goto L5045b4;
  #L5045ae.  v17:= 1I;
  #L5045b2.  goto L5045b8;
  #L5045b4.  v17:= 0I;
  #L5045b8.  if v14 == 0 then goto L5045d2;
  #L5045bc.  if v17 == 0 then goto L5045d2;
  #L5045c0.  call `onComplete`(v3) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L5045c6.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L5045ca.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L5045d0.  return @kind void;
  #L5045d2.  if v17 == 0 then goto L5045d8;
  #L5045d6.  goto L504602;
  #L5045d8.  call temp:= `tryOnNext`(v3, v15) @signature `Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;.tryOnNext:(Ljava/lang/Object;)Z` @kind interface;
  #L5045de.  v13:= temp;
  #L5045e0.  if v13 == 0 then goto L5045ea;
  #L5045e4.  v13:= 1L;
  #L5045e8.  v11:= v11 + v13 @kind long;
  #L5045ea.  v1:= v1 + 1;
  #L5045ee.  if v1 != v4 then goto L50455e;
  #L5045f2.  v13:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L5045f6.  v14:= (`long`) v1 @kind i2l;
  #L5045f8.  call `request`(v13, v14) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L5045fe.  v1:= 0I;
  #L504600.  goto L50455e;
  #L504602.  if v13 != 0 then goto L50465c;
  #L504606.  v7:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.i` @type ^`boolean` @kind boolean;
  #L50460a.  if v7 == 0 then goto L504616;
  #L50460e.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.clear:()V` @kind virtual;
  #L504614.  return @kind void;
  #L504616.  v7:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.f` @type ^`boolean` @kind boolean;
  #L50461a.  if v7 == 0 then goto L50465c;
  #L50461e.  v7:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.g` @type ^`java.lang.Throwable` @kind object;
  #L504622.  if v7 == 0 then goto L50463e;
  #L504626.  call `clear`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.clear:()V` @kind virtual;
  #L50462c.  call `onError`(v3, v7) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L504632.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L504636.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L50463c.  return @kind void;
  #L50463e.  call temp:= `isEmpty`(v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.isEmpty:()Z` @kind virtual;
  #L504644.  v7:= temp;
  #L504646.  if v7 == 0 then goto L50465c;
  #L50464a.  call `onComplete`(v3) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L504650.  v1:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.d` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L504654.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L50465a.  return @kind void;
  #L50465c.  v7:= lcmp(v11, v9);
  #L504660.  if v7 == 0 then goto L50466e;
  #L504664.  v7:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.h` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L504668.  call temp:= `produced`(v7, v11) @signature `Lio/reactivex/rxjava3/internal/util/BackpressureHelper;.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L50466e.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn$a.j` @type ^`int` := v1;
  #L504672.  v6:= -v6 @kind int;
  #L504674.  call temp:= `addAndGet`(v0, v6) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L50467a.  v6:= temp;
  #L50467c.  if v6 != 0 then goto L50454c;
  #L504680.  return @kind void;
}
