record `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.observable.a` @kind class {
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.d` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.e` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.f` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.g` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed` v0 @kind this, `io.reactivex.rxjava3.core.Observable` v1 @kind object, `long` v2 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `io.reactivex.rxjava3.core.Scheduler` v7 @kind object, `long` v8 , `int` v10 , `boolean` v11 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed;.<init>:(Lio/reactivex/rxjava3/core/Observable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JIZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ffae8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4ffaee.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.a` @type ^`long` := v2 @kind wide;
  #L4ffaf2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.b` @type ^`long` := v4 @kind wide;
  #L4ffaf6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.c` @type ^`java.util.concurrent.TimeUnit` := v6 @kind object;
  #L4ffafa.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.d` @type ^`io.reactivex.rxjava3.core.Scheduler` := v7 @kind object;
  #L4ffafe.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.e` @type ^`long` := v8 @kind wide;
  #L4ffb02.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.f` @type ^`int` := v10;
  #L4ffb06.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.g` @type ^`boolean` := v11 @kind boolean;
  #L4ffb0a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed` v12 @kind this, `io.reactivex.rxjava3.core.Observer` v13 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L4ffb1c.  v0:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.a` @type ^`long` @kind wide;
  #L4ffb20.  v2:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.b` @type ^`long` @kind wide;
  #L4ffb24.  v4:= lcmp(v0, v2);
  #L4ffb28.  if v4 != 0 then goto L4ffb9e;
  #L4ffb2c.  v0:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.e` @type ^`long` @kind wide;
  #L4ffb30.  v2:= 9223372036854775807L;
  #L4ffb3a.  v4:= lcmp(v0, v2);
  #L4ffb3e.  if v4 != 0 then goto L4ffb6c;
  #L4ffb42.  v0:= v12.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4ffb46.  v8:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$c`;
  #L4ffb4a.  v3:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.a` @type ^`long` @kind wide;
  #L4ffb4e.  v5:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4ffb52.  v6:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ffb56.  v7:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.f` @type ^`int`;
  #L4ffb5a.  v1:= v8 @kind object;
  #L4ffb5c.  v2:= v13 @kind object;
  #L4ffb5e.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$c;.<init>:(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)V` @kind direct;
  #L4ffb64.  call `subscribe`(v0, v8) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4ffb6a.  return @kind void;
  #L4ffb6c.  v0:= v12.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4ffb70.  v11:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$b`;
  #L4ffb74.  v3:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.a` @type ^`long` @kind wide;
  #L4ffb78.  v5:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4ffb7c.  v6:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ffb80.  v7:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.f` @type ^`int`;
  #L4ffb84.  v8:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.e` @type ^`long` @kind wide;
  #L4ffb88.  v10:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.g` @type ^`boolean` @kind boolean;
  #L4ffb8c.  v1:= v11 @kind object;
  #L4ffb8e.  v2:= v13 @kind object;
  #L4ffb90.  call `<init>`(v1, v2, v3, v5, v6, v7, v8, v10) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IJZ)V` @kind direct;
  #L4ffb96.  call `subscribe`(v0, v11) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4ffb9c.  return @kind void;
  #L4ffb9e.  v0:= v12.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4ffba2.  v10:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$d`;
  #L4ffba6.  v3:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.a` @type ^`long` @kind wide;
  #L4ffbaa.  v5:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.b` @type ^`long` @kind wide;
  #L4ffbae.  v7:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4ffbb2.  v1:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ffbb6.  call temp:= `createWorker`(v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L4ffbbc.  v8:= temp @kind object;
  #L4ffbbe.  v9:= v12.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.f` @type ^`int`;
  #L4ffbc2.  v1:= v10 @kind object;
  #L4ffbc4.  v2:= v13 @kind object;
  #L4ffbc6.  call `<init>`(v1, v2, v3, v5, v7, v8, v9) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$d;.<init>:(Lio/reactivex/rxjava3/core/Observer;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler$Worker;I)V` @kind direct;
  #L4ffbcc.  call `subscribe`(v0, v10) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4ffbd2.  return @kind void;
}
