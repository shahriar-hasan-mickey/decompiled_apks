record `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a$c` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface {
  `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a` `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a$c.a` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a$c.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a$c` v0 @kind this, `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$a$c;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fe7b0.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4fe7b6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a$c.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a` := v1 @kind object;
  #L4fe7ba.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a$c` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$a$c;.a:()V` @AccessFlag  {
    temp;

  #L4fe7cc.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4fe7d2.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a$c` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$a$c;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe7e4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a$c.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a` @kind object;
  #L4fe7e8.  call `e`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$a;.e:()V` @kind virtual;
  #L4fe7ee.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a$c` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$a$c;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe800.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a$c.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a` @kind object;
  #L4fe804.  call `f`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$a;.f:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4fe80a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a$c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$a$c;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe81c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a$c.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a` @kind object;
  #L4fe820.  call `d`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$a;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L4fe826.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$a$c` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$a$c;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4fe838.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4fe83e.  return @kind void;
}
