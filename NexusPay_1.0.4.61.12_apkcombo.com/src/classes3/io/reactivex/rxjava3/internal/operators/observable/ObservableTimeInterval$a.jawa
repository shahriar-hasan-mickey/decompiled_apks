record `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.a` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.c` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.d` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeInterval$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fc49c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fc4a2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4fc4a6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.c` @type ^`io.reactivex.rxjava3.core.Scheduler` := v3 @kind object;
  #L4fc4aa.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.b` @type ^`java.util.concurrent.TimeUnit` := v2 @kind object;
  #L4fc4ae.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeInterval$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc4c0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fc4c4.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fc4ca.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeInterval$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc47c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fc480.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4fc486.  v0:= temp;
  #L4fc488.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeInterval$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc4dc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fc4e0.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4fc4e6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeInterval$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc4f8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fc4fc.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fc502.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeInterval$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fc514.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.c` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4fc518.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4fc51c.  call temp:= `now`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4fc522.  v0:= temp @kind wide;
  #L4fc524.  v2:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.d` @type ^`long` @kind wide;
  #L4fc528.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.d` @type ^`long` := v0 @kind wide;
  #L4fc52c.  v0:= v0 - v2 @kind long;
  #L4fc52e.  v2:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fc532.  v3:= new `io.reactivex.rxjava3.schedulers.Timed`;
  #L4fc536.  v4:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4fc53a.  call `<init>`(v3, v6, v0, v4) @signature `Lio/reactivex/rxjava3/schedulers/Timed;.<init>:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L4fc540.  call `onNext`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4fc546.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a` v2 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeInterval$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fc558.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fc55c.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4fc562.  v0:= temp;
  #L4fc564.  if v0 == 0 then goto L4fc58a;
  #L4fc568.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v3 @kind object;
  #L4fc56c.  v3:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.c` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4fc570.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4fc574.  call temp:= `now`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4fc57a.  v0:= temp @kind wide;
  #L4fc57c.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.d` @type ^`long` := v0 @kind wide;
  #L4fc580.  v3:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fc584.  call `onSubscribe`(v3, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4fc58a.  return @kind void;
}
