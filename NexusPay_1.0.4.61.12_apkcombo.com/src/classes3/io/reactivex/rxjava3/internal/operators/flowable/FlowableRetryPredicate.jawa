record `io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryPredicate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryPredicate.b` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryPredicate.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryPredicate` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `long` v2 , `io.reactivex.rxjava3.functions.Predicate` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRetryPredicate;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d07e0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4d07e6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryPredicate.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v4 @kind object;
  #L4d07ea.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryPredicate.c` @type ^`long` := v2 @kind wide;
  #L4d07ee.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryPredicate` v8 @kind this, `org.reactivestreams.Subscriber` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRetryPredicate;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4d0800.  v5:= new `io.reactivex.rxjava3.internal.subscriptions.SubscriptionArbiter`;
  #L4d0804.  v0:= 0I;
  #L4d0806.  call `<init>`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter;.<init>:(Z)V` @kind direct;
  #L4d080c.  call `onSubscribe`(v9, v5) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4d0812.  v7:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryPredicate$a`;
  #L4d0816.  v2:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryPredicate.c` @type ^`long` @kind wide;
  #L4d081a.  v4:= v8.`io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryPredicate.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4d081e.  v6:= v8.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4d0822.  v0:= v7 @kind object;
  #L4d0824.  v1:= v9 @kind object;
  #L4d0826.  call `<init>`(v0, v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRetryPredicate$a;.<init>:(Lorg/reactivestreams/Subscriber;JLio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L4d082c.  call `a`(v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRetryPredicate$a;.a:()V` @kind virtual;
  #L4d0832.  return @kind void;
}
