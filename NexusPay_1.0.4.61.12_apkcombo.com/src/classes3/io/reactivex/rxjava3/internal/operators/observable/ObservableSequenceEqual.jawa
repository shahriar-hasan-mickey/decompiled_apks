record `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiPredicate` `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual.c` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSequenceEqual;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f9d38.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4f9d3e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual.a` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v1 @kind object;
  #L4f9d42.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual.b` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v2 @kind object;
  #L4f9d46.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual.c` @type ^`io.reactivex.rxjava3.functions.BiPredicate` := v3 @kind object;
  #L4f9d4a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual.d` @type ^`int` := v4;
  #L4f9d4e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual` v7 @kind this, `io.reactivex.rxjava3.core.Observer` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSequenceEqual;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4f9d60.  v6:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual$a`;
  #L4f9d64.  v2:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual.d` @type ^`int`;
  #L4f9d68.  v3:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual.a` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4f9d6c.  v4:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual.b` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4f9d70.  v5:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual.c` @type ^`io.reactivex.rxjava3.functions.BiPredicate` @kind object;
  #L4f9d74.  v0:= v6 @kind object;
  #L4f9d76.  v1:= v8 @kind object;
  #L4f9d78.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSequenceEqual$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;ILio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L4f9d7e.  call `onSubscribe`(v8, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4f9d84.  call `d`(v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSequenceEqual$a;.d:()V` @kind virtual;
  #L4f9d8a.  return @kind void;
}
