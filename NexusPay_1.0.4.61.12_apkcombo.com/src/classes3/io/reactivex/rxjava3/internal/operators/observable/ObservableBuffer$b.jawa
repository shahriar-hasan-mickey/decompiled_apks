record `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicBoolean` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.e` @AccessFlag ;
  `java.util.ArrayDeque` `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.f` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.g` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `int` v2 , `int` v3 , `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;IILio/reactivex/rxjava3/functions/Supplier;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e811c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4e8122.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4e8126.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.b` @type ^`int` := v2;
  #L4e812a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.c` @type ^`int` := v3;
  #L4e812e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.d` @type ^`io.reactivex.rxjava3.functions.Supplier` := v4 @kind object;
  #L4e8132.  v1:= new `java.util.ArrayDeque`;
  #L4e8136.  call `<init>`(v1) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L4e813c.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.f` @type ^`java.util.ArrayDeque` := v1 @kind object;
  #L4e8140.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e8154.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e8158.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e815e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e80fc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e8100.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4e8106.  v0:= temp;
  #L4e8108.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e8170.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.f` @type ^`java.util.ArrayDeque` @kind object;
  #L4e8174.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #L4e817a.  v0:= temp;
  #L4e817c.  if v0 != 0 then goto L4e8198;
  #L4e8180.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e8184.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.f` @type ^`java.util.ArrayDeque` @kind object;
  #L4e8188.  call temp:= `poll`(v1) @signature `Ljava/util/ArrayDeque;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4e818e.  v1:= temp @kind object;
  #L4e8190.  call `onNext`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4e8196.  goto L4e8170;
  #L4e8198.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e819c.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4e81a2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e81b4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.f` @type ^`java.util.ArrayDeque` @kind object;
  #L4e81b8.  call `clear`(v0) @signature `Ljava/util/ArrayDeque;.clear:()V` @kind virtual;
  #L4e81be.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e81c2.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e81c8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4e81dc.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.g` @type ^`long` @kind wide;
  #L4e81e0.  v2:= 1L;
  #L4e81e4.  v2:= v2 + v0 @kind long;
  #L4e81e6.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.g` @type ^`long` := v2 @kind wide;
  #L4e81ea.  v2:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.c` @type ^`int`;
  #L4e81ee.  v2:= (`long`) v2 @kind i2l;
  #L4e81f0.  v0:= v0 %% v2 @kind long;
  #L4e81f2.  v2:= 0L;
  #L4e81f6.  v4:= lcmp(v0, v2);
  #L4e81fa.  if v4 != 0 then goto L4e824e;
  #L4e81fe.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.d` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4e8202.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4e8208.  v0:= temp @kind object;
  #L4e820a.  v1:= "The bufferSupplier returned a null Collection." @kind object;
  #L4e820e.  call temp:= `nullCheck`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4e8214.  v0:= temp @kind object;
  #L4e8216.  v0:= (`java.util.Collection`) v0 @kind object;
  #L4e821a.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.f` @type ^`java.util.ArrayDeque` @kind object;
  #L4e821e.  call temp:= `offer`(v1, v0) @signature `Ljava/util/ArrayDeque;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L4e8224.  goto L4e824e;
  #L4e8226.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e8228.  call `throwIfFatal`(v6) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4e822e.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.f` @type ^`java.util.ArrayDeque` @kind object;
  #L4e8232.  call `clear`(v0) @signature `Ljava/util/ArrayDeque;.clear:()V` @kind virtual;
  #L4e8238.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e823c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e8242.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e8246.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e824c.  return @kind void;
  #L4e824e.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.f` @type ^`java.util.ArrayDeque` @kind object;
  #L4e8252.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayDeque;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4e8258.  v0:= temp @kind object;
  #L4e825a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e8260.  v1:= temp;
  #L4e8262.  if v1 == 0 then goto L4e829a;
  #L4e8266.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e826c.  v1:= temp @kind object;
  #L4e826e.  v1:= (`java.util.Collection`) v1 @kind object;
  #L4e8272.  call temp:= `add`(v1, v6) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4e8278.  v2:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.b` @type ^`int`;
  #L4e827c.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L4e8282.  v3:= temp;
  #L4e8284.  if v2 > v3 then goto L4e825a;
  #L4e8288.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L4e828e.  v2:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e8292.  call `onNext`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4e8298.  goto L4e825a;
  #L4e829a.  return @kind void;
  catch `java.lang.Throwable` @[L4e81fe..L4e821a] goto L4e8226;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$b;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e82b8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e82bc.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e82c2.  v0:= temp;
  #L4e82c4.  if v0 == 0 then goto L4e82d6;
  #L4e82c8.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4e82cc.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e82d0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4e82d6.  return @kind void;
}
