record `io.reactivex.rxjava3.internal.operators.maybe.MaybeCount` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class, `io.reactivex.rxjava3.internal.fuseable.HasUpstreamMaybeSource` @kind interface {
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.maybe.MaybeCount.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount` v0 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCount;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4db694.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4db69a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v1 @kind object;
  #L4db69e.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.MaybeSource` `source`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCount;.source:()Lio/reactivex/rxjava3/core/MaybeSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4db67c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4db680.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount` v2 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCount;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4db6b0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeCount.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4db6b4.  v1:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeCount$a`;
  #L4db6b8.  call `<init>`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCount$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind direct;
  #L4db6be.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4db6c4.  return @kind void;
}
