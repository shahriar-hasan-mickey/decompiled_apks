record `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Emitter` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.c` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.e` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.f` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.g` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f14f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f14f6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4f14fa.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v2 @kind object;
  #L4f14fe.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` := v3 @kind object;
  #L4f1502.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.d` @type ^`java.lang.Object` := v4 @kind object;
  #L4f1506.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.a:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4f1530.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4f1534.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4f153a.  goto L4f154a;
  #L4f153c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f153e.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f1544.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f154a.  return @kind void;
  catch `java.lang.Throwable` @[L4f1530..L4f153a] goto L4f153c;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f1638.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.d` @type ^`java.lang.Object` @kind object;
  #L4f163c.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.e` @type ^`boolean` @kind boolean;
  #L4f1640.  v2:= 0I;
  #L4f1642.  if v1 == 0 then goto L4f1652;
  #L4f1646.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.d` @type ^`java.lang.Object` := v2 @kind object;
  #L4f164a.  call `a`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.a:(Ljava/lang/Object;)V` @kind direct;
  #L4f1650.  return @kind void;
  #L4f1652.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L4f1656.  v3:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.e` @type ^`boolean` @kind boolean;
  #L4f165a.  if v3 == 0 then goto L4f166a;
  #L4f165e.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.d` @type ^`java.lang.Object` := v2 @kind object;
  #L4f1662.  call `a`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.a:(Ljava/lang/Object;)V` @kind direct;
  #L4f1668.  return @kind void;
  #L4f166a.  v3:= 0I;
  #L4f166c.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.g` @type ^`boolean` := v3 @kind boolean;
  #L4f1670.  v3:= 1I;
  #L4f1672.  call temp:= `apply`(v1, v0, v5) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4f1678.  v0:= temp @kind object;
  #L4f167a.  v4:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.f` @type ^`boolean` @kind boolean;
  #L4f167e.  if v4 == 0 then goto L4f1656;
  #L4f1682.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.e` @type ^`boolean` := v3 @kind boolean;
  #L4f1686.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.d` @type ^`java.lang.Object` := v2 @kind object;
  #L4f168a.  call `a`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.a:(Ljava/lang/Object;)V` @kind direct;
  #L4f1690.  return @kind void;
  #L4f1692.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f1694.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f169a.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.d` @type ^`java.lang.Object` := v2 @kind object;
  #L4f169e.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.e` @type ^`boolean` := v3 @kind boolean;
  #L4f16a2.  call `onError`(v5, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f16a8.  call `a`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.a:(Ljava/lang/Object;)V` @kind direct;
  #L4f16ae.  return @kind void;
  catch `java.lang.Throwable` @[L4f1672..L4f167a] goto L4f1692;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f1518.  v0:= 1I;
  #L4f151a.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4f151e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f14d8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.e` @type ^`boolean` @kind boolean;
  #L4f14dc.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f1568.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.f` @type ^`boolean` @kind boolean;
  #L4f156c.  if v0 != 0 then goto L4f1580;
  #L4f1570.  v0:= 1I;
  #L4f1572.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.f` @type ^`boolean` := v0 @kind boolean;
  #L4f1576.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f157a.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f1580.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f1594.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.f` @type ^`boolean` @kind boolean;
  #L4f1598.  if v0 == 0 then goto L4f15a4;
  #L4f159c.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f15a2.  goto L4f15c4;
  #L4f15a4.  if v2 != 0 then goto L4f15b4;
  #L4f15a8.  v2:= "onError called with a null Throwable." @kind object;
  #L4f15ac.  call temp:= `createNullPointerException`(v2) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L4f15b2.  v2:= temp @kind object;
  #L4f15b4.  v0:= 1I;
  #L4f15b6.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.f` @type ^`boolean` := v0 @kind boolean;
  #L4f15ba.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f15be.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f15c4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f15d8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.f` @type ^`boolean` @kind boolean;
  #L4f15dc.  if v0 != 0 then goto L4f1626;
  #L4f15e0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.g` @type ^`boolean` @kind boolean;
  #L4f15e4.  if v0 == 0 then goto L4f15fe;
  #L4f15e8.  v2:= new `java.lang.IllegalStateException`;
  #L4f15ec.  v0:= "onNext already called in this generate turn" @kind object;
  #L4f15f0.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f15f6.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f15fc.  goto L4f1626;
  #L4f15fe.  if v2 != 0 then goto L4f1616;
  #L4f1602.  v2:= "onNext called with a null value." @kind object;
  #L4f1606.  call temp:= `createNullPointerException`(v2) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L4f160c.  v2:= temp @kind object;
  #L4f160e.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f1614.  goto L4f1626;
  #L4f1616.  v0:= 1I;
  #L4f1618.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.g` @type ^`boolean` := v0 @kind boolean;
  #L4f161c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f1620.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4f1626.  return @kind void;
}
