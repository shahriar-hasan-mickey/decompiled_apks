record `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c` @kind class @AccessFlag ABSTRACT extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `java.lang.Runnable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.f` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.rxjava3.core.Scheduler` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.<init>:(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4f8854.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4f885a.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4f885e.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4f8864.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.e` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4f8868.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.a` @type ^`io.reactivex.rxjava3.core.Observer` := v2 @kind object;
  #L4f886c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.b` @type ^`long` := v3 @kind wide;
  #L4f8870.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.c` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L4f8874.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.d` @type ^`io.reactivex.rxjava3.core.Scheduler` := v6 @kind object;
  #L4f8878.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.a:()V` @AccessFlag  {
    temp;
    v0;

  #L4f888c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f8890.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4f8896.  return @kind void;
}
procedure `void` `b`() @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.b:()V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `c`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.c:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4f88cc.  v0:= 0I;
  #L4f88ce.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4f88d4.  v0:= temp @kind object;
  #L4f88d6.  if v0 == 0 then goto L4f88e4;
  #L4f88da.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f88de.  call `onNext`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4f88e4.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f88a8.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.a:()V` @kind virtual;
  #L4f88ae.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f88b2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4f88b8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f8834.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f8838.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4f883e.  v0:= temp;
  #L4f8840.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L4f88f8.  call `a`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.a:()V` @kind virtual;
  #L4f88fe.  call `b`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.b:()V` @kind virtual;
  #L4f8904.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f8918.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.a:()V` @kind virtual;
  #L4f891e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f8922.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f8928.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4f893c.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4f8942.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c` v7 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed$c;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4f8954.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f8958.  call temp:= `validate`(v0, v8) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4f895e.  v0:= temp;
  #L4f8960.  if v0 == 0 then goto L4f8994;
  #L4f8964.  v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v8 @kind object;
  #L4f8968.  v8:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f896c.  call `onSubscribe`(v8, v7) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4f8972.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4f8976.  v4:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.b` @type ^`long` @kind wide;
  #L4f897a.  v6:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4f897e.  v1:= v7 @kind object;
  #L4f8980.  v2:= v4 @kind wide;
  #L4f8982.  call temp:= `schedulePeriodicallyDirect`(v0, v1, v2, v4, v6) @signature `Lio/reactivex/rxjava3/core/Scheduler;.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4f8988.  v8:= temp @kind object;
  #L4f898a.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed$c.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f898e.  call temp:= `replace`(v0, v8) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4f8994.  return @kind void;
}
