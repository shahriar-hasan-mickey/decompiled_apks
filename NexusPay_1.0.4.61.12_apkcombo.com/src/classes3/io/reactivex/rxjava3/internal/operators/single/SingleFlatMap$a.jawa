record `io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L506fac.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L506fb2.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L506fb6.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L506fba.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L506fcc.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L506fd2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L506f84.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L506f8a.  v0:= temp @kind object;
  #L506f8c.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L506f90.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L506f96.  v0:= temp;
  #L506f98.  return v0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L506fe4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L506fe8.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L506fee.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L507000.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L507006.  v1:= temp;
  #L507008.  if v1 == 0 then goto L507016;
  #L50700c.  v1:= v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L507010.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L507016.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L507028.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L50702c.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L507032.  v3:= temp @kind object;
  #L507034.  v0:= "The single returned by the mapper is null" @kind object;
  #L507038.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L50703e.  v3:= temp @kind object;
  #L507040.  v3:= (`io.reactivex.rxjava3.core.SingleSource`) v3 @kind object;
  #L507044.  call temp:= `isDisposed`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a;.isDisposed:()Z` @kind virtual;
  #L50704a.  v0:= temp;
  #L50704c.  if v0 != 0 then goto L507064;
  #L507050.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a$a`;
  #L507054.  v1:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L507058.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap$a$a;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind direct;
  #L50705e.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L507064.  return @kind void;
  #L507066.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L507068.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L50706e.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMap$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L507072.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L507078.  return @kind void;
  catch `java.lang.Throwable` @[L507028..L507044] goto L507066;
}
