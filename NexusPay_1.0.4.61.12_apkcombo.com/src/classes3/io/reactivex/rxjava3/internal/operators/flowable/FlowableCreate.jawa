record `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `io.reactivex.rxjava3.core.FlowableOnSubscribe` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.BackpressureStrategy` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate` v0 @kind this, `io.reactivex.rxjava3.core.FlowableOnSubscribe` v1 @kind object, `io.reactivex.rxjava3.core.BackpressureStrategy` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate;.<init>:(Lio/reactivex/rxjava3/core/FlowableOnSubscribe;Lio/reactivex/rxjava3/core/BackpressureStrategy;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4bf4d4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4bf4da.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.b` @type ^`io.reactivex.rxjava3.core.FlowableOnSubscribe` := v1 @kind object;
  #L4bf4de.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.c` @type ^`io.reactivex.rxjava3.core.BackpressureStrategy` := v2 @kind object;
  #L4bf4e2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4bf4f4.  v0:= `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$a.a` @type ^`int`[] @kind object;
  #L4bf4f8.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.c` @type ^`io.reactivex.rxjava3.core.BackpressureStrategy` @kind object;
  #L4bf4fc.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4bf502.  v1:= temp;
  #L4bf504.  v0:= v0[v1];
  #L4bf508.  v1:= 1I;
  #L4bf50a.  if v0 == v1 then goto L4bf558;
  #L4bf50e.  v1:= 2I;
  #L4bf510.  if v0 == v1 then goto L4bf54c;
  #L4bf514.  v1:= 3I;
  #L4bf516.  if v0 == v1 then goto L4bf540;
  #L4bf51a.  v1:= 4I;
  #L4bf51c.  if v0 == v1 then goto L4bf534;
  #L4bf520.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$c`;
  #L4bf524.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4bf52a.  v1:= temp;
  #L4bf52c.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$c;.<init>:(Lorg/reactivestreams/Subscriber;I)V` @kind direct;
  #L4bf532.  goto L4bf562;
  #L4bf534.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$f`;
  #L4bf538.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$f;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4bf53e.  goto L4bf562;
  #L4bf540.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$d`;
  #L4bf544.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$d;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4bf54a.  goto L4bf562;
  #L4bf54c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$e`;
  #L4bf550.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$e;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4bf556.  goto L4bf562;
  #L4bf558.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$g`;
  #L4bf55c.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$g;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4bf562.  call `onSubscribe`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4bf568.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.b` @type ^`io.reactivex.rxjava3.core.FlowableOnSubscribe` @kind object;
  #L4bf56c.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/FlowableOnSubscribe;.subscribe:(Lio/reactivex/rxjava3/core/FlowableEmitter;)V` @kind interface;
  #L4bf572.  goto L4bf582;
  #L4bf574.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bf576.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bf57c.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$b;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4bf582.  return @kind void;
  catch `java.lang.Throwable` @[L4bf568..L4bf572] goto L4bf574;
}
