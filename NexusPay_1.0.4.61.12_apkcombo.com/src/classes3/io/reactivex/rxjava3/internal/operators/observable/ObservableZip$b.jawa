record `io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface {
  `io.reactivex.rxjava3.internal.operators.observable.ObservableZip$a` `io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` `io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.c` @AccessFlag VOLATILE;
  `java.lang.Throwable` `io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.d` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b` v1 @kind this, `io.reactivex.rxjava3.internal.operators.observable.ObservableZip$a` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip$b;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip$a;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L500784.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50078a.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L50078e.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L500794.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L500798.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$a` := v2 @kind object;
  #L50079c.  v2:= new `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue`;
  #L5007a0.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L5007a6.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.b` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` := v2 @kind object;
  #L5007aa.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip$b;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5007bc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L5007c0.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L5007c6.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5007d8.  v0:= 1I;
  #L5007da.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.c` @type ^`boolean` := v0 @kind boolean;
  #L5007de.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$a` @kind object;
  #L5007e2.  call `e`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip$a;.e:()V` @kind virtual;
  #L5007e8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L5007fc.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.d` @type ^`java.lang.Throwable` := v1 @kind object;
  #L500800.  v1:= 1I;
  #L500802.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.c` @type ^`boolean` := v1 @kind boolean;
  #L500806.  v1:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$a` @kind object;
  #L50080a.  call `e`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip$a;.e:()V` @kind virtual;
  #L500810.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500824.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.b` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L500828.  call temp:= `offer`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L50082e.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$a` @kind object;
  #L500832.  call `e`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip$a;.e:()V` @kind virtual;
  #L500838.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip$b;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50084c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableZip$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L500850.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L500856.  return @kind void;
}
