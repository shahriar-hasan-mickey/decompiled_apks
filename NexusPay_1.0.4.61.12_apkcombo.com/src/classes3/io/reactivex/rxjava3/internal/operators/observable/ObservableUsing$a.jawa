record `io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicBoolean` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Consumer;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fda30.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4fda36.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4fda3a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L4fda3e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` := v3 @kind object;
  #L4fda42.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.d` @type ^`boolean` := v4 @kind boolean;
  #L4fda46.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4fdaa4.  v0:= 0I;
  #L4fdaa6.  v1:= 1I;
  #L4fdaa8.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4fdaae.  v0:= temp;
  #L4fdab0.  if v0 == 0 then goto L4fdad2;
  #L4fdab4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4fdab8.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.b` @type ^`java.lang.Object` @kind object;
  #L4fdabc.  call `accept`(v0, v1) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4fdac2.  goto L4fdad2;
  #L4fdac4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fdac6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4fdacc.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4fdad2.  return @kind void;
  catch `java.lang.Throwable` @[L4fdab4..L4fdac2] goto L4fdac4;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fda58.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.d` @type ^`boolean` @kind boolean;
  #L4fda5c.  if v0 == 0 then goto L4fda7a;
  #L4fda60.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.a:()V` @kind virtual;
  #L4fda66.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fda6a.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fda70.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4fda74.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4fda78.  goto L4fda92;
  #L4fda7a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fda7e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fda84.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4fda88.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4fda8c.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.a:()V` @kind virtual;
  #L4fda92.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fda14.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4fda1a.  v0:= temp;
  #L4fda1c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fdaf0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.d` @type ^`boolean` @kind boolean;
  #L4fdaf4.  if v0 == 0 then goto L4fdb42;
  #L4fdaf8.  v0:= 0I;
  #L4fdafa.  v1:= 1I;
  #L4fdafc.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4fdb02.  v0:= temp;
  #L4fdb04.  if v0 == 0 then goto L4fdb2c;
  #L4fdb08.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4fdb0c.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.b` @type ^`java.lang.Object` @kind object;
  #L4fdb10.  call `accept`(v0, v1) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4fdb16.  goto L4fdb2c;
  #L4fdb18.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fdb1a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4fdb20.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fdb24.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fdb2a.  return @kind void;
  #L4fdb2c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fdb30.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fdb36.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fdb3a.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4fdb40.  goto L4fdb5c;
  #L4fdb42.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fdb46.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4fdb4c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fdb50.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fdb56.  call `a`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.a:()V` @kind virtual;
  #L4fdb5c.  return @kind void;
  catch `java.lang.Throwable` @[L4fdb08..L4fdb16] goto L4fdb18;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fdb7c.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.d` @type ^`boolean` @kind boolean;
  #L4fdb80.  if v0 == 0 then goto L4fdbdc;
  #L4fdb84.  v0:= 0I;
  #L4fdb86.  v1:= 1I;
  #L4fdb88.  call temp:= `compareAndSet`(v5, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4fdb8e.  v2:= temp;
  #L4fdb90.  if v2 == 0 then goto L4fdbc6;
  #L4fdb94.  v2:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.c` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4fdb98.  v3:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.b` @type ^`java.lang.Object` @kind object;
  #L4fdb9c.  call `accept`(v2, v3) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4fdba2.  goto L4fdbc6;
  #L4fdba4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fdba6.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4fdbac.  v3:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4fdbb0.  v4:= 2I;
  #L4fdbb2.  v4:= new `java.lang.Throwable`[v4];
  #L4fdbb6.  v4[v0]:= v6 @kind object;
  #L4fdbba.  v4[v1]:= v2 @kind object;
  #L4fdbbe.  call `<init>`(v3, v4) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4fdbc4.  v6:= v3 @kind object;
  #L4fdbc6.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fdbca.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fdbd0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fdbd4.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fdbda.  goto L4fdbf6;
  #L4fdbdc.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fdbe0.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fdbe6.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fdbea.  call `dispose`(v6) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fdbf0.  call `a`(v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.a:()V` @kind virtual;
  #L4fdbf6.  return @kind void;
  catch `java.lang.Throwable` @[L4fdb94..L4fdba2] goto L4fdba4;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fdc14.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fdc18.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4fdc1e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fdc30.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fdc34.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4fdc3a.  v0:= temp;
  #L4fdc3c.  if v0 == 0 then goto L4fdc4e;
  #L4fdc40.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4fdc44.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableUsing$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fdc48.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4fdc4e.  return @kind void;
}
