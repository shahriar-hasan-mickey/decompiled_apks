record `io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.observers.BasicQueueDisposable` @kind class {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.a` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.e` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;[Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f0b90.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BasicQueueDisposable;.<init>:()V` @kind direct;
  #L4f0b96.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4f0b9a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.b` @type ^`java.lang.Object`[] := v2 @kind object;
  #L4f0b9e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f0be4.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.b` @type ^`java.lang.Object`[] @kind object;
  #L4f0be8.  v1:= length @variable v0;
  #L4f0bea.  v2:= 0I;
  #L4f0bec.  if v2 >= v1 then goto L4f0c56;
  #L4f0bf0.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.isDisposed:()Z` @kind virtual;
  #L4f0bf6.  v3:= temp;
  #L4f0bf8.  if v3 != 0 then goto L4f0c56;
  #L4f0bfc.  v3:= v0[v2] @kind object;
  #L4f0c00.  if v3 != 0 then goto L4f0c46;
  #L4f0c04.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f0c08.  v1:= new `java.lang.NullPointerException`;
  #L4f0c0c.  v3:= new `java.lang.StringBuilder`;
  #L4f0c10.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f0c16.  v4:= "The element at index " @kind object;
  #L4f0c1a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f0c20.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f0c26.  v2:= " is null" @kind object;
  #L4f0c2a.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f0c30.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f0c36.  v2:= temp @kind object;
  #L4f0c38.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f0c3e.  call `onError`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f0c44.  return @kind void;
  #L4f0c46.  v4:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f0c4a.  call `onNext`(v4, v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4f0c50.  v2:= v2 + 1;
  #L4f0c54.  goto L4f0bec;
  #L4f0c56.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.isDisposed:()Z` @kind virtual;
  #L4f0c5c.  v0:= temp;
  #L4f0c5e.  if v0 != 0 then goto L4f0c6c;
  #L4f0c62.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f0c66.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f0c6c.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f0bb0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.b` @type ^`java.lang.Object`[] @kind object;
  #L4f0bb4.  v0:= length @variable v0;
  #L4f0bb6.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.c` @type ^`int` := v0;
  #L4f0bba.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f0bcc.  v0:= 1I;
  #L4f0bce.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4f0bd2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f0af0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.e` @type ^`boolean` @kind boolean;
  #L4f0af4.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f0b08.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.c` @type ^`int`;
  #L4f0b0c.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.b` @type ^`java.lang.Object`[] @kind object;
  #L4f0b10.  v1:= length @variable v1;
  #L4f0b12.  if v0 != v1 then goto L4f0b1a;
  #L4f0b16.  v0:= 1I;
  #L4f0b18.  goto L4f0b1c;
  #L4f0b1a.  v0:= 0I;
  #L4f0b1c.  return v0;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f0b54.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.c` @type ^`int`;
  #L4f0b58.  v1:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.b` @type ^`java.lang.Object`[] @kind object;
  #L4f0b5c.  v2:= length @variable v1;
  #L4f0b5e.  if v0 == v2 then goto L4f0b7c;
  #L4f0b62.  v2:= v0 + 1;
  #L4f0b66.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.c` @type ^`int` := v2;
  #L4f0b6a.  v0:= v1[v0] @kind object;
  #L4f0b6e.  v1:= "The array element is null" @kind object;
  #L4f0b72.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4f0b78.  v0:= temp @kind object;
  #L4f0b7a.  return v0 @kind object;
  #L4f0b7c.  v0:= 0I;
  #L4f0b7e.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f0b30.  v0:= 1I;
  #L4f0b32.  v2:= v2 ^& v0 @kind int;
  #L4f0b34.  if v2 == 0 then goto L4f0b3e;
  #L4f0b38.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4f0b3c.  return v0;
  #L4f0b3e.  v2:= 0I;
  #L4f0b40.  return v2;
}
