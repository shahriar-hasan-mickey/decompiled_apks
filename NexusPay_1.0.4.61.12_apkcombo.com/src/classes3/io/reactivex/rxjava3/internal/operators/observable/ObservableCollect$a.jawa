record `io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiConsumer` `io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollect$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e9f98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e9f9e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4e9fa2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.b` @type ^`io.reactivex.rxjava3.functions.BiConsumer` := v3 @kind object;
  #L4e9fa6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.c` @type ^`java.lang.Object` := v2 @kind object;
  #L4e9faa.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollect$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e9fbc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e9fc0.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e9fc6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollect$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e9f78.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e9f7c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4e9f82.  v0:= temp;
  #L4e9f84.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollect$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e9fd8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.e` @type ^`boolean` @kind boolean;
  #L4e9fdc.  if v0 == 0 then goto L4e9fe2;
  #L4e9fe0.  return @kind void;
  #L4e9fe2.  v0:= 1I;
  #L4e9fe4.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4e9fe8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e9fec.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.c` @type ^`java.lang.Object` @kind object;
  #L4e9ff0.  call `onNext`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4e9ff6.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e9ffa.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4ea000.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollect$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ea014.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.e` @type ^`boolean` @kind boolean;
  #L4ea018.  if v0 == 0 then goto L4ea024;
  #L4ea01c.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4ea022.  return @kind void;
  #L4ea024.  v0:= 1I;
  #L4ea026.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4ea02a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ea02e.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ea034.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollect$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ea048.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.e` @type ^`boolean` @kind boolean;
  #L4ea04c.  if v0 == 0 then goto L4ea052;
  #L4ea050.  return @kind void;
  #L4ea052.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.b` @type ^`io.reactivex.rxjava3.functions.BiConsumer` @kind object;
  #L4ea056.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.c` @type ^`java.lang.Object` @kind object;
  #L4ea05a.  call `accept`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L4ea060.  goto L4ea07a;
  #L4ea062.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ea064.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ea06a.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ea06e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ea074.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollect$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ea07a.  return @kind void;
  catch `java.lang.Throwable` @[L4ea052..L4ea060] goto L4ea062;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollect$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ea098.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ea09c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ea0a2.  v0:= temp;
  #L4ea0a4.  if v0 == 0 then goto L4ea0b6;
  #L4ea0a8.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4ea0ac.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCollect$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ea0b0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ea0b6.  return @kind void;
}
