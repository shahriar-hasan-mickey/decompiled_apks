record `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @AccessFlag PRIVATE;
  `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a` `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a` v0 @kind this, `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableMostRecent$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableMostRecent$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e6e34.  v0.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a` := v1 @kind object;
  #L4e6e38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e6e3e.  return @kind void;
}
procedure `boolean` `hasNext`(`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableMostRecent$a$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e6d70.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a` @kind object;
  #L4e6d74.  v0:= v0.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a.b` @type ^`java.lang.Object` @kind object;
  #L4e6d78.  v1.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4e6d7c.  call temp:= `isComplete`(v0) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L4e6d82.  v0:= temp;
  #L4e6d84.  v0:= v0 ^~ 1;
  #L4e6d88.  return v0;
}
procedure `java.lang.Object` `next`(`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableMostRecent$a$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e6d9c.  v0:= 0I;
  #L4e6d9e.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4e6da2.  if v1 != 0 then goto L4e6db2;
  #L4e6da6.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.b` @type ^`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a` @kind object;
  #L4e6daa.  v1:= v1.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a.b` @type ^`java.lang.Object` @kind object;
  #L4e6dae.  v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L4e6db2.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4e6db6.  call temp:= `isComplete`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L4e6dbc.  v1:= temp;
  #L4e6dbe.  if v1 != 0 then goto L4e6dfa;
  #L4e6dc2.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4e6dc6.  call temp:= `isError`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L4e6dcc.  v1:= temp;
  #L4e6dce.  if v1 != 0 then goto L4e6de4;
  #L4e6dd2.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4e6dd6.  call temp:= `getValue`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.getValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4e6ddc.  v1:= temp @kind object;
  #L4e6dde.  v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4e6de2.  return v1 @kind object;
  #L4e6de4.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4e6de8.  call temp:= `getError`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L4e6dee.  v1:= temp @kind object;
  #L4e6df0.  call temp:= `wrapOrThrow`(v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4e6df6.  v1:= temp @kind object;
  #L4e6df8.  throw v1;
  #L4e6dfa.  v1:= new `java.util.NoSuchElementException`;
  #L4e6dfe.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4e6e04.  throw v1;
  #L4e6e06.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e6e08.  v2.`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4e6e0c.  throw v1;
  catch `java.lang.Throwable` @[L4e6d9e..L4e6dde] goto L4e6e06;
  catch `java.lang.Throwable` @[L4e6de4..L4e6e06] goto L4e6e06;
}
procedure `void` `remove`(`io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent$a$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableMostRecent$a$a;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e6e50.  v0:= new `java.lang.UnsupportedOperationException`;
  #L4e6e54.  v1:= "Read only iterator" @kind object;
  #L4e6e58.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e6e5e.  throw v0;
}
