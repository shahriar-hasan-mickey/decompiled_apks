record `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeUntil` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.observable.a` @kind class {
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeUntil.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeUntil` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeUntil;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4fbd94.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4fbd9a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeUntil.a` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v2 @kind object;
  #L4fbd9e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeUntil` v2 @kind this, `io.reactivex.rxjava3.core.Observer` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeUntil;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fbdb0.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeUntil$a`;
  #L4fbdb4.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeUntil$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4fbdba.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4fbdc0.  v3:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeUntil.a` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4fbdc4.  v1:= v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeUntil$a.c` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeUntil$a$a` @kind object;
  #L4fbdc8.  call `subscribe`(v3, v1) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4fbdce.  v3:= v2.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4fbdd2.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4fbdd8.  return @kind void;
}
