record `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.c` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.e` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4d9450.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4d9456.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4d945a.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4d9460.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4d9464.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4d9468.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4d946e.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L4d9472.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4d9476.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4d947c.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4d9480.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.a` @type ^`org.reactivestreams.Subscriber` := v2 @kind object;
  #L4d9484.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v3 @kind object;
  #L4d9488.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d956c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d9570.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d9576.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d957a.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d9580.  return @kind void;
}
procedure `boolean` `b`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.b:(Lorg/reactivestreams/Subscription;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d93c4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d93c8.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4d93ce.  v2:= temp;
  #L4d93d0.  return v2;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d949c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d94a0.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d94a6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d94aa.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d94b0.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d94c4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d94c8.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d94ce.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d94d2.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4d94d8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d94ec.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d94f0.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d94f6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d94fa.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d9500.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d9514.  call temp:= `tryOnNext`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.tryOnNext:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d951a.  v3:= temp;
  #L4d951c.  if v3 != 0 then goto L4d953a;
  #L4d9520.  v3:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d9524.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d952a.  v3:= temp @kind object;
  #L4d952c.  v3:= (`org.reactivestreams.Subscription`) v3 @kind object;
  #L4d9530.  v0:= 1L;
  #L4d9534.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4d953a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d954c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d9550.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d9554.  call temp:= `deferredSetOnce`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4d955a.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v2 @kind this, `long` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d9594.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4d9598.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4d959c.  call `deferredRequest`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V` @kind static;
  #L4d95a2.  return @kind void;
}
procedure `boolean` `tryOnNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d93e4.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4d93ea.  v0:= temp @kind object;
  #L4d93ec.  v1:= 0I;
  #L4d93ee.  if v0 == 0 then goto L4d9430;
  #L4d93f2.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L4d93f6.  call temp:= `apply`(v2, v4, v0) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4d93fc.  v4:= temp @kind object;
  #L4d93fe.  v0:= "The combiner returned a null value" @kind object;
  #L4d9402.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4d9408.  v4:= temp @kind object;
  #L4d940a.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d940e.  call `onNext`(v0, v4) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4d9414.  v4:= 1I;
  #L4d9416.  return v4;
  #L4d9418.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d941a.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d9420.  call `cancel`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom$b;.cancel:()V` @kind virtual;
  #L4d9426.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4d942a.  call `onError`(v0, v4) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d9430.  return v1;
  catch `java.lang.Throwable` @[L4d93f2..L4d940a] goto L4d9418;
}
