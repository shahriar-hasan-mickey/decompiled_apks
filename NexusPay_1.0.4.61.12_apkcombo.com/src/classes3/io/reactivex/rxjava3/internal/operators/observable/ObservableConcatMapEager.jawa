record `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.observable.a` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.ErrorMode` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager.c` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.internal.util.ErrorMode` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4eb608.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4eb60e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager.a` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4eb612.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager.b` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` := v3 @kind object;
  #L4eb616.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager.c` @type ^`int` := v4;
  #L4eb61a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager.d` @type ^`int` := v5;
  #L4eb61e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager` v8 @kind this, `io.reactivex.rxjava3.core.Observer` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapEager;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4eb630.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4eb634.  v7:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager$a`;
  #L4eb638.  v3:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4eb63c.  v4:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager.c` @type ^`int`;
  #L4eb640.  v5:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager.d` @type ^`int`;
  #L4eb644.  v6:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager.b` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4eb648.  v1:= v7 @kind object;
  #L4eb64a.  v2:= v9 @kind object;
  #L4eb64c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapEager$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4eb652.  call `subscribe`(v0, v7) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4eb658.  return @kind void;
}
