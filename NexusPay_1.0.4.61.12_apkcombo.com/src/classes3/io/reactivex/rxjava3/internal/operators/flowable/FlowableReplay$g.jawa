record `io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$g` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.functions.Supplier` @kind interface {
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$g.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$g.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$g` v0 @kind this, `int` v1 , `boolean` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$g;.<init>:(IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4cf7e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4cf7ea.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$g.a` @type ^`int` := v1;
  #L4cf7ee.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$g.b` @type ^`boolean` := v2 @kind boolean;
  #L4cf7f2.  return @kind void;
}
procedure `io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$f` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$g` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$g;.a:()Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4cf7a4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$l`;
  #L4cf7a8.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$g.a` @type ^`int`;
  #L4cf7ac.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$g.b` @type ^`boolean` @kind boolean;
  #L4cf7b0.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$l;.<init>:(IZ)V` @kind direct;
  #L4cf7b6.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$g` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$g;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4cf7c8.  call temp:= `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$g;.a:()Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$f;` @kind virtual;
  #L4cf7ce.  v0:= temp @kind object;
  #L4cf7d0.  return v0 @kind object;
}
