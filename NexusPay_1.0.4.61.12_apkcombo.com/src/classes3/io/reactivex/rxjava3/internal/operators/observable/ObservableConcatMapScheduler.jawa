record `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.observable.a` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.ErrorMode` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `io.reactivex.rxjava3.internal.util.ErrorMode` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ebe98.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4ebe9e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.a` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4ebea2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` := v4 @kind object;
  #L4ebea6.  v1:= 8I;
  #L4ebeaa.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4ebeb0.  v1:= temp;
  #L4ebeb2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.b` @type ^`int` := v1;
  #L4ebeb6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.d` @type ^`io.reactivex.rxjava3.core.Scheduler` := v5 @kind object;
  #L4ebeba.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler` v8 @kind this, `io.reactivex.rxjava3.core.Observer` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4ebecc.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4ebed0.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4ebed4.  if v0 != v1 then goto L4ebf0c;
  #L4ebed8.  v0:= new `io.reactivex.rxjava3.observers.SerializedObserver`;
  #L4ebedc.  call `<init>`(v0, v9) @signature `Lio/reactivex/rxjava3/observers/SerializedObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4ebee2.  v9:= v8.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4ebee6.  v1:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$b`;
  #L4ebeea.  v2:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ebeee.  v3:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.b` @type ^`int`;
  #L4ebef2.  v4:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ebef6.  call temp:= `createWorker`(v4) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L4ebefc.  v4:= temp @kind object;
  #L4ebefe.  call `<init>`(v1, v0, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L4ebf04.  call `subscribe`(v9, v1) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4ebf0a.  goto L4ebf4e;
  #L4ebf0c.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4ebf10.  v7:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$a`;
  #L4ebf14.  v3:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ebf18.  v4:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.b` @type ^`int`;
  #L4ebf1c.  v1:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4ebf20.  v2:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4ebf24.  if v1 != v2 then goto L4ebf2e;
  #L4ebf28.  v1:= 1I;
  #L4ebf2a.  v5:= 1I;
  #L4ebf2c.  goto L4ebf32;
  #L4ebf2e.  v1:= 0I;
  #L4ebf30.  v5:= 0I;
  #L4ebf32.  v1:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4ebf36.  call temp:= `createWorker`(v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L4ebf3c.  v6:= temp @kind object;
  #L4ebf3e.  v1:= v7 @kind object;
  #L4ebf40.  v2:= v9 @kind object;
  #L4ebf42.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;IZLio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L4ebf48.  call `subscribe`(v0, v7) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4ebf4e.  return @kind void;
}
