record `io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e741c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e7422.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4e7426.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L4e742a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e743c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7440.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e7446.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e73fc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7400.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4e7406.  v0:= temp;
  #L4e7408.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e7458.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L4e745c.  if v0 == 0 then goto L4e7462;
  #L4e7460.  return @kind void;
  #L4e7462.  v0:= 1I;
  #L4e7464.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4e7468.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4e746c.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4e7470.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4e7476.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e7488.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L4e748c.  if v0 == 0 then goto L4e7498;
  #L4e7490.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4e7496.  return @kind void;
  #L4e7498.  v0:= 1I;
  #L4e749a.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4e749e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4e74a2.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e74a8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e74bc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L4e74c0.  if v0 == 0 then goto L4e74c6;
  #L4e74c4.  return @kind void;
  #L4e74c6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4e74ca.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4e74d0.  v2:= temp;
  #L4e74d2.  if v2 != 0 then goto L4e74f4;
  #L4e74d6.  v2:= 1I;
  #L4e74d8.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` := v2 @kind boolean;
  #L4e74dc.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e74e0.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e74e6.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4e74ea.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L4e74ee.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4e74f4.  return @kind void;
  #L4e74f6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e74f8.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4e74fe.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7502.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e7508.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4e750e.  return @kind void;
  catch `java.lang.Throwable` @[L4e74c6..L4e74d2] goto L4e74f6;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e752c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7530.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e7536.  v0:= temp;
  #L4e7538.  if v0 == 0 then goto L4e754a;
  #L4e753c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4e7540.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4e7544.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4e754a.  return @kind void;
}
