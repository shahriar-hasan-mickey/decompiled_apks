record `io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @AccessFlag ;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c91e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c91ee.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4c91f2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9204.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c9208.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4c920e.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4c9212.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4c9216.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c91c4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c91c8.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4c91cc.  if v0 != v1 then goto L4c91d4;
  #L4c91d0.  v0:= 1I;
  #L4c91d2.  goto L4c91d6;
  #L4c91d4.  v0:= 0I;
  #L4c91d6.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c9228.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4c922c.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4c9230.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.c` @type ^`java.lang.Object` @kind object;
  #L4c9234.  if v0 == 0 then goto L4c924a;
  #L4c9238.  v1:= 0I;
  #L4c923a.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L4c923e.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4c9242.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4c9248.  goto L4c9254;
  #L4c924a.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4c924e.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4c9254.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9268.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4c926c.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4c9270.  v0:= 0I;
  #L4c9272.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L4c9276.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4c927a.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c9280.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4c9294.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L4c9298.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c92ac.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c92b0.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4c92b6.  v0:= temp;
  #L4c92b8.  if v0 == 0 then goto L4c92da;
  #L4c92bc.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.b` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4c92c0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4c92c4.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c92ca.  v0:= 9223372036854775807L;
  #L4c92d4.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4c92da.  return @kind void;
}
