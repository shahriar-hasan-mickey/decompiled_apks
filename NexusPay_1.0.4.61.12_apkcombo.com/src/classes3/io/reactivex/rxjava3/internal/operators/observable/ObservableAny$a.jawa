record `io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e7a00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e7a06.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4e7a0a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L4e7a0e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e7a20.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7a24.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e7a2a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e79e0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e79e4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4e79ea.  v0:= temp;
  #L4e79ec.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e7a3c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` @kind boolean;
  #L4e7a40.  if v0 != 0 then goto L4e7a62;
  #L4e7a44.  v0:= 1I;
  #L4e7a46.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4e7a4a.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e7a4e.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L4e7a52.  call `onNext`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4e7a58.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e7a5c.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4e7a62.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e7a74.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` @kind boolean;
  #L4e7a78.  if v0 == 0 then goto L4e7a84;
  #L4e7a7c.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4e7a82.  return @kind void;
  #L4e7a84.  v0:= 1I;
  #L4e7a86.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4e7a8a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e7a8e.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e7a94.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e7aa8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` @kind boolean;
  #L4e7aac.  if v0 == 0 then goto L4e7ab2;
  #L4e7ab0.  return @kind void;
  #L4e7ab2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4e7ab6.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4e7abc.  v2:= temp;
  #L4e7abe.  if v2 == 0 then goto L4e7aea;
  #L4e7ac2.  v2:= 1I;
  #L4e7ac4.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` := v2 @kind boolean;
  #L4e7ac8.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7acc.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e7ad2.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e7ad6.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4e7ada.  call `onNext`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4e7ae0.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e7ae4.  call `onComplete`(v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4e7aea.  return @kind void;
  #L4e7aec.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e7aee.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4e7af4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7af8.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e7afe.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4e7b04.  return @kind void;
  catch `java.lang.Throwable` @[L4e7ab2..L4e7abe] goto L4e7aec;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAny$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e7b24.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7b28.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e7b2e.  v0:= temp;
  #L4e7b30.  if v0 == 0 then goto L4e7b42;
  #L4e7b34.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4e7b38.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e7b3c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4e7b42.  return @kind void;
}
