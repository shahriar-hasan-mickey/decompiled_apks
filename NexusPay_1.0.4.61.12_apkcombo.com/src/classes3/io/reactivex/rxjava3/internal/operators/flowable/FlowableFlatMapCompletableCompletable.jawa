record `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Completable` @kind class, `io.reactivex.rxjava3.internal.fuseable.FuseToFlowable` @kind interface {
  `io.reactivex.rxjava3.core.Flowable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ZI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4c37d8.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.<init>:()V` @kind direct;
  #L4c37de.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.a` @type ^`io.reactivex.rxjava3.core.Flowable` := v1 @kind object;
  #L4c37e2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4c37e6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.d` @type ^`boolean` := v3 @kind boolean;
  #L4c37ea.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.c` @type ^`int` := v4;
  #L4c37ee.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fuseToFlowable`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable;.fuseToFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4c37a4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletable`;
  #L4c37a8.  v1:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4c37ac.  v2:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4c37b0.  v3:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.d` @type ^`boolean` @kind boolean;
  #L4c37b4.  v4:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.c` @type ^`int`;
  #L4c37b8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L4c37be.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4c37c4.  v0:= temp @kind object;
  #L4c37c6.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable` v5 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable;.subscribeActual:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4c3800.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4c3804.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable$a`;
  #L4c3808.  v2:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4c380c.  v3:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.d` @type ^`boolean` @kind boolean;
  #L4c3810.  v4:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable.c` @type ^`int`;
  #L4c3814.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L4c381a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4c3820.  return @kind void;
}
