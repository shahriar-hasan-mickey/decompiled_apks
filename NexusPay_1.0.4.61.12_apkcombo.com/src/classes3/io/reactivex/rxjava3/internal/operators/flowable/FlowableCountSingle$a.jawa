record `io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4be6e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4be6e6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4be6ea.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be6fc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4be700.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4be706.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4be70a.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4be70e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4be6bc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4be6c0.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4be6c4.  if v0 != v1 then goto L4be6cc;
  #L4be6c8.  v0:= 1I;
  #L4be6ca.  goto L4be6ce;
  #L4be6cc.  v0:= 0I;
  #L4be6ce.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4be720.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4be724.  v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4be728.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4be72c.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.c` @type ^`long` @kind wide;
  #L4be730.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4be736.  v1:= temp @kind object;
  #L4be738.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4be73e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be750.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4be754.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4be758.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4be75c.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4be762.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4be774.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.c` @type ^`long` @kind wide;
  #L4be778.  v2:= 1L;
  #L4be77c.  v0:= v0 + v2 @kind long;
  #L4be77e.  v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.c` @type ^`long` := v0 @kind wide;
  #L4be782.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4be794.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4be798.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4be79e.  v0:= temp;
  #L4be7a0.  if v0 == 0 then goto L4be7c2;
  #L4be7a4.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.b` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4be7a8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4be7ac.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4be7b2.  v0:= 9223372036854775807L;
  #L4be7bc.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4be7c2.  return @kind void;
}
