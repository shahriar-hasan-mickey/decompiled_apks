record `io.reactivex.rxjava3.internal.operators.single.SingleToObservable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `io.reactivex.rxjava3.core.SingleSource` `io.reactivex.rxjava3.internal.operators.single.SingleToObservable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleToObservable` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToObservable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L509984.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L50998a.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleToObservable.a` @type ^`io.reactivex.rxjava3.core.SingleSource` := v1 @kind object;
  #L50998e.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.SingleObserver` `create`(`io.reactivex.rxjava3.core.Observer` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToObservable;.create:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/SingleObserver;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L509968.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleToObservable$a`;
  #L50996c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToObservable$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L509972.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleToObservable` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToObservable;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5099a0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleToObservable.a` @type ^`io.reactivex.rxjava3.core.SingleSource` @kind object;
  #L5099a4.  call temp:= `create`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToObservable;.create:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/SingleObserver;` @kind static;
  #L5099aa.  v2:= temp @kind object;
  #L5099ac.  call `subscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L5099b2.  return @kind void;
}
