record `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscribers.SinglePostCompleteSubscriber` @kind class, `io.reactivex.rxjava3.core.SingleObserver` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.SingleSource` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a.b` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithSingle$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/core/SingleSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4be4a0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/SinglePostCompleteSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4be4a6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a.b` @type ^`io.reactivex.rxjava3.core.SingleSource` := v2 @kind object;
  #L4be4aa.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4be4ae.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4be4b4.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L4be4b8.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithSingle$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be4cc.  call `cancel`(v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/SinglePostCompleteSubscriber;.cancel:()V` @kind super;
  #L4be4d2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4be4d6.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4be4dc.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4be4f0.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4be4f4.  v2.`io.reactivex.rxjava3.internal.subscribers.SinglePostCompleteSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4be4f8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a.b` @type ^`io.reactivex.rxjava3.core.SingleSource` @kind object;
  #L4be4fc.  v1:= 0I;
  #L4be4fe.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a.b` @type ^`io.reactivex.rxjava3.core.SingleSource` := v1 @kind object;
  #L4be502.  call `subscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L4be508.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be51c.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4be520.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4be526.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4be538.  v0:= v4.`io.reactivex.rxjava3.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` @kind wide;
  #L4be53c.  v2:= 1L;
  #L4be540.  v0:= v0 + v2 @kind long;
  #L4be542.  v4.`io.reactivex.rxjava3.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` := v0 @kind wide;
  #L4be546.  v0:= v4.`io.reactivex.rxjava3.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4be54a.  call `onNext`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4be550.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithSingle$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be564.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4be568.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4be56e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithSingle$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4be580.  call `complete`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/SinglePostCompleteSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4be586.  return @kind void;
}
