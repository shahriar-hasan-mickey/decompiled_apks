record `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.b` @AccessFlag ;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.e` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5081ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5081b2.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L5081b6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5081c8.  v0:= 1I;
  #L5081ca.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.e` @type ^`boolean` := v0 @kind boolean;
  #L5081ce.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L5081d2.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L5081d8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L508194.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.e` @type ^`boolean` @kind boolean;
  #L508198.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L5081ec.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.d` @type ^`boolean` @kind boolean;
  #L5081f0.  if v0 == 0 then goto L5081f6;
  #L5081f4.  return @kind void;
  #L5081f6.  v0:= 1I;
  #L5081f8.  v3.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.d` @type ^`boolean` := v0 @kind boolean;
  #L5081fc.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.c` @type ^`java.lang.Object` @kind object;
  #L508200.  v1:= 0I;
  #L508202.  v3.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L508206.  if v0 != 0 then goto L508224;
  #L50820a.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L50820e.  v1:= new `java.util.NoSuchElementException`;
  #L508212.  v2:= "The source Publisher is empty" @kind object;
  #L508216.  call `<init>`(v1, v2) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50821c.  call `onError`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L508222.  goto L50822e;
  #L508224.  v1:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L508228.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L50822e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L508240.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.d` @type ^`boolean` @kind boolean;
  #L508244.  if v0 == 0 then goto L508250;
  #L508248.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L50824e.  return @kind void;
  #L508250.  v0:= 1I;
  #L508252.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.d` @type ^`boolean` := v0 @kind boolean;
  #L508256.  v0:= 0I;
  #L508258.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L50825c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L508260.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L508266.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L508278.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.d` @type ^`boolean` @kind boolean;
  #L50827c.  if v0 == 0 then goto L508282;
  #L508280.  return @kind void;
  #L508282.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.c` @type ^`java.lang.Object` @kind object;
  #L508286.  if v0 == 0 then goto L5082ba;
  #L50828a.  v3:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L50828e.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L508294.  v3:= 1I;
  #L508296.  v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.d` @type ^`boolean` := v3 @kind boolean;
  #L50829a.  v3:= 0I;
  #L50829c.  v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L5082a0.  v3:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L5082a4.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L5082a8.  v1:= "Too many elements in the Publisher" @kind object;
  #L5082ac.  call `<init>`(v0, v1) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5082b2.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5082b8.  goto L5082be;
  #L5082ba.  v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L5082be.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5082d0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L5082d4.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L5082da.  v0:= temp;
  #L5082dc.  if v0 == 0 then goto L5082fe;
  #L5082e0.  v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.b` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L5082e4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L5082e8.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L5082ee.  v0:= 9223372036854775807L;
  #L5082f8.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L5082fe.  return @kind void;
}
