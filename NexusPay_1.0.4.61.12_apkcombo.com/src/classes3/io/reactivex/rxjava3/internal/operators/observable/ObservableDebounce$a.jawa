record `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.c` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.d` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.e` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4ecd64.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ecd6a.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4ecd6e.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4ecd74.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4ecd78.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v2 @kind object;
  #L4ecd7c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L4ecd80.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a` v3 @kind this, `long` v4 , `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a;.a:(JLjava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4ecdbc.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.e` @type ^`long` @kind wide;
  #L4ecdc0.  v2:= lcmp(v4, v0);
  #L4ecdc4.  if v2 != 0 then goto L4ecdd2;
  #L4ecdc8.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ecdcc.  call `onNext`(v4, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4ecdd2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ecd94.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ecd98.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ecd9e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4ecda2.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4ecda8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ecd44.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ecd48.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ecd4e.  v0:= temp;
  #L4ecd50.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ecde4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.f` @type ^`boolean` @kind boolean;
  #L4ecde8.  if v0 == 0 then goto L4ecdee;
  #L4ecdec.  return @kind void;
  #L4ecdee.  v0:= 1I;
  #L4ecdf0.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.f` @type ^`boolean` := v0 @kind boolean;
  #L4ecdf4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4ecdf8.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ecdfe.  v0:= temp @kind object;
  #L4ece00.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4ece04.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ece08.  if v0 == v1 then goto L4ece2e;
  #L4ece0c.  v0:= (`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a`) v0 @kind object;
  #L4ece10.  if v0 == 0 then goto L4ece1a;
  #L4ece14.  call `a`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a$a;.a:()V` @kind virtual;
  #L4ece1a.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4ece1e.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4ece24.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ece28.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4ece2e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ece40.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4ece44.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4ece4a.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ece4e.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ece54.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ece68.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.f` @type ^`boolean` @kind boolean;
  #L4ece6c.  if v0 == 0 then goto L4ece72;
  #L4ece70.  return @kind void;
  #L4ece72.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.e` @type ^`long` @kind wide;
  #L4ece76.  v2:= 1L;
  #L4ece7a.  v0:= v0 + v2 @kind long;
  #L4ece7c.  v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.e` @type ^`long` := v0 @kind wide;
  #L4ece80.  v2:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4ece84.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ece8a.  v2:= temp @kind object;
  #L4ece8c.  v2:= (`io.reactivex.rxjava3.disposables.Disposable`) v2 @kind object;
  #L4ece90.  if v2 == 0 then goto L4ece9a;
  #L4ece94.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ece9a.  v3:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ece9e.  call temp:= `apply`(v3, v6) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ecea4.  v3:= temp @kind object;
  #L4ecea6.  v4:= "The ObservableSource supplied is null" @kind object;
  #L4eceaa.  call temp:= `requireNonNull`(v3, v4) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4eceb0.  v3:= temp @kind object;
  #L4eceb2.  v3:= (`io.reactivex.rxjava3.core.ObservableSource`) v3 @kind object;
  #L4eceb6.  v4:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a$a`;
  #L4eceba.  call `<init>`(v4, v5, v0, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a;JLjava/lang/Object;)V` @kind direct;
  #L4ecec0.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4ecec4.  call temp:= `compareAndSet`(v6, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4ececa.  v6:= temp;
  #L4ececc.  if v6 == 0 then goto L4eced6;
  #L4eced0.  call `subscribe`(v3, v4) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4eced6.  return @kind void;
  #L4eced8.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4eceda.  call `throwIfFatal`(v6) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ecee0.  call `dispose`(v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a;.dispose:()V` @kind virtual;
  #L4ecee6.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4eceea.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ecef0.  return @kind void;
  catch `java.lang.Throwable` @[L4ece9a..L4eceb6] goto L4eced8;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ecf10.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ecf14.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ecf1a.  v0:= temp;
  #L4ecf1c.  if v0 == 0 then goto L4ecf2e;
  #L4ecf20.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4ecf24.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4ecf28.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ecf2e.  return @kind void;
}
