record `io.reactivex.rxjava3.internal.operators.observable.a` @kind class @AccessFlag ABSTRACT extends `io.reactivex.rxjava3.core.Observable` @kind class, `io.reactivex.rxjava3.internal.fuseable.HasUpstreamObservableSource` @kind interface {
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.observable.a.source` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.a` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e6834.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4e683a.  v0.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v1 @kind object;
  #L4e683e.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.ObservableSource` `source`(`io.reactivex.rxjava3.internal.operators.observable.a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.source:()Lio/reactivex/rxjava3/core/ObservableSource;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4e681c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4e6820.  return v0 @kind object;
}
