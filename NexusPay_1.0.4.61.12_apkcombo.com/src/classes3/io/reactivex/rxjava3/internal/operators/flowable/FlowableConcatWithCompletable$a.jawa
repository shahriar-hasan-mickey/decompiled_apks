record `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.core.CompletableObserver` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.b` @AccessFlag ;
  `io.reactivex.rxjava3.core.CompletableSource` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.d` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithCompletable$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/core/CompletableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4be1dc.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4be1e2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4be1e6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.c` @type ^`io.reactivex.rxjava3.core.CompletableSource` := v2 @kind object;
  #L4be1ea.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithCompletable$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be1fc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4be200.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4be206.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4be20c.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithCompletable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4be220.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.d` @type ^`boolean` @kind boolean;
  #L4be224.  if v0 == 0 then goto L4be234;
  #L4be228.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4be22c.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4be232.  goto L4be252;
  #L4be234.  v0:= 1I;
  #L4be236.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4be23a.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4be23e.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4be242.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.c` @type ^`io.reactivex.rxjava3.core.CompletableSource` @kind object;
  #L4be246.  v1:= 0I;
  #L4be248.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.c` @type ^`io.reactivex.rxjava3.core.CompletableSource` := v1 @kind object;
  #L4be24c.  call `subscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4be252.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithCompletable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be264.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4be268.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4be26e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithCompletable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be280.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4be284.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4be28a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithCompletable$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4be29c.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4be2a2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithCompletable$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be2b4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4be2b8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4be2be.  v0:= temp;
  #L4be2c0.  if v0 == 0 then goto L4be2d2;
  #L4be2c4.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.b` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L4be2c8.  v2:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4be2cc.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4be2d2.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithCompletable$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4be2e4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4be2e8.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4be2ee.  return @kind void;
}
