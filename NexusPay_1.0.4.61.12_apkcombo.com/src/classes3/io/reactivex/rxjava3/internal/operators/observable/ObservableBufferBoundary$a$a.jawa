record `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a$a.a` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a$a` v0 @kind this, `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferBoundary$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferBoundary$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e8310.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4e8316.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a$a.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a` := v1 @kind object;
  #L4e831a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferBoundary$a$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4e832c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4e8332.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferBoundary$a$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e82e8.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e82ee.  v0:= temp @kind object;
  #L4e82f0.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e82f4.  if v0 != v1 then goto L4e82fc;
  #L4e82f8.  v0:= 1I;
  #L4e82fa.  goto L4e82fe;
  #L4e82fc.  v0:= 0I;
  #L4e82fe.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferBoundary$a$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e8344.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e8348.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4e834e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a$a.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a` @kind object;
  #L4e8352.  call `e`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferBoundary$a;.e:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferBoundary$a$a;)V` @kind virtual;
  #L4e8358.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferBoundary$a$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e836c.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4e8370.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4e8376.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a$a.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a` @kind object;
  #L4e837a.  call `a`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferBoundary$a;.a:(Lio/reactivex/rxjava3/disposables/Disposable;Ljava/lang/Throwable;)V` @kind virtual;
  #L4e8380.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferBoundary$a$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e8394.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a$a.a` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a` @kind object;
  #L4e8398.  call `d`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferBoundary$a;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L4e839e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary$a$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferBoundary$a$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4e83b0.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e83b6.  return @kind void;
}
