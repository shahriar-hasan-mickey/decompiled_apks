record `io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f0848.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f084e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4f0852.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4f0856.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f0868.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f086c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4f0872.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4f0876.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4f087a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f0828.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f082c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4f0832.  v0:= temp;
  #L4f0834.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f088c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f0890.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4f0894.  if v0 != v1 then goto L4f089a;
  #L4f0898.  return @kind void;
  #L4f089a.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4f089e.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f08a2.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f08a8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f08bc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f08c0.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4f08c4.  if v0 != v1 then goto L4f08d0;
  #L4f08c8.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f08ce.  return @kind void;
  #L4f08d0.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4f08d4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f08d8.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f08de.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f08f0.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f08f4.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4f08f8.  if v0 != v1 then goto L4f08fe;
  #L4f08fc.  return @kind void;
  #L4f08fe.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4f0902.  call temp:= `apply`(v0, v4) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4f0908.  v4:= temp @kind object;
  #L4f090a.  v4:= (`java.lang.Iterable`) v4 @kind object;
  #L4f090e.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4f0914.  v4:= temp @kind object;
  #L4f0916.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f091a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4f0920.  v1:= temp;
  #L4f0922.  if v1 == 0 then goto L4f095a;
  #L4f0926.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4f092c.  v1:= temp @kind object;
  #L4f092e.  v2:= "The iterator returned a null value" @kind object;
  #L4f0932.  call temp:= `requireNonNull`(v1, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4f0938.  v1:= temp @kind object;
  #L4f093a.  call `onNext`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4f0940.  goto L4f091a;
  #L4f0942.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f0944.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f094a.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f094e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4f0954.  call `onError`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f095a.  return @kind void;
  #L4f095c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f095e.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f0964.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f0968.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4f096e.  call `onError`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f0974.  return @kind void;
  #L4f0976.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f0978.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f097e.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f0982.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4f0988.  call `onError`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f098e.  return @kind void;
  catch `java.lang.Throwable` @[L4f08fe..L4f0916] goto L4f0976;
  catch `java.lang.Throwable` @[L4f091a..L4f0922] goto L4f095c;
  catch `java.lang.Throwable` @[L4f0926..L4f093a] goto L4f0942;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f09c0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f09c4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4f09ca.  v0:= temp;
  #L4f09cc.  if v0 == 0 then goto L4f09de;
  #L4f09d0.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4f09d4.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f09d8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4f09de.  return @kind void;
}
