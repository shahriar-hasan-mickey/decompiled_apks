record `io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.c` @AccessFlag ;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScan$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f91b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f91ba.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4f91be.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v2 @kind object;
  #L4f91c2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScan$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f91d4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f91d8.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4f91de.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScan$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9194.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f9198.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4f919e.  v0:= temp;
  #L4f91a0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScan$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f91f0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.e` @type ^`boolean` @kind boolean;
  #L4f91f4.  if v0 == 0 then goto L4f91fa;
  #L4f91f8.  return @kind void;
  #L4f91fa.  v0:= 1I;
  #L4f91fc.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4f9200.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f9204.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f920a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScan$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f921c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.e` @type ^`boolean` @kind boolean;
  #L4f9220.  if v0 == 0 then goto L4f922c;
  #L4f9224.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f922a.  return @kind void;
  #L4f922c.  v0:= 1I;
  #L4f922e.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4f9232.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f9236.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f923c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScan$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f9250.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.e` @type ^`boolean` @kind boolean;
  #L4f9254.  if v0 == 0 then goto L4f925a;
  #L4f9258.  return @kind void;
  #L4f925a.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f925e.  v1:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.d` @type ^`java.lang.Object` @kind object;
  #L4f9262.  if v1 != 0 then goto L4f9272;
  #L4f9266.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.d` @type ^`java.lang.Object` := v4 @kind object;
  #L4f926a.  call `onNext`(v0, v4) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4f9270.  goto L4f9294;
  #L4f9272.  v2:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L4f9276.  call temp:= `apply`(v2, v1, v4) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4f927c.  v4:= temp @kind object;
  #L4f927e.  v1:= "The value returned by the accumulator is null" @kind object;
  #L4f9282.  call temp:= `requireNonNull`(v4, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4f9288.  v4:= temp @kind object;
  #L4f928a.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.d` @type ^`java.lang.Object` := v4 @kind object;
  #L4f928e.  call `onNext`(v0, v4) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4f9294.  return @kind void;
  #L4f9296.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f9298.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f929e.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f92a2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4f92a8.  call `onError`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScan$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f92ae.  return @kind void;
  catch `java.lang.Throwable` @[L4f9272..L4f928a] goto L4f9296;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScan$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f92cc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f92d0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4f92d6.  v0:= temp;
  #L4f92d8.  if v0 == 0 then goto L4f92ea;
  #L4f92dc.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4f92e0.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableScan$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f92e4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4f92ea.  return @kind void;
}
