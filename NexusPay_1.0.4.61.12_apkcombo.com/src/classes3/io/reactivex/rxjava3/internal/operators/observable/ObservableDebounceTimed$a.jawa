record `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `java.lang.Runnable` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$b` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a.c` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a.d` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 , `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$b` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounceTimed$a;.<init>:(Ljava/lang/Object;JLio/reactivex/rxjava3/internal/operators/observable/ObservableDebounceTimed$b;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4ecf68.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4ecf6e.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L4ecf72.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4ecf78.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a.d` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L4ecf7c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a.a` @type ^`java.lang.Object` := v2 @kind object;
  #L4ecf80.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a.b` @type ^`long` := v3 @kind wide;
  #L4ecf84.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a.c` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$b` := v5 @kind object;
  #L4ecf88.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounceTimed$a;.a:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L4ecfec.  call temp:= `replace`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4ecff2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounceTimed$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4ecf9c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4ecfa2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounceTimed$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ecf40.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ecf46.  v0:= temp @kind object;
  #L4ecf48.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ecf4c.  if v0 != v1 then goto L4ecf54;
  #L4ecf50.  v0:= 1I;
  #L4ecf52.  goto L4ecf56;
  #L4ecf54.  v0:= 0I;
  #L4ecf56.  return v0;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounceTimed$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ecfb4.  v0:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a.d` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4ecfb8.  v1:= 0I;
  #L4ecfba.  v2:= 1I;
  #L4ecfbc.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4ecfc2.  v0:= temp;
  #L4ecfc4.  if v0 == 0 then goto L4ecfda;
  #L4ecfc8.  v0:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a.c` @type ^`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$b` @kind object;
  #L4ecfcc.  v1:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a.b` @type ^`long` @kind wide;
  #L4ecfd0.  v3:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed$a.a` @type ^`java.lang.Object` @kind object;
  #L4ecfd4.  call `a`(v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounceTimed$b;.a:(JLjava/lang/Object;Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounceTimed$a;)V` @kind virtual;
  #L4ecfda.  return @kind void;
}
