record `io.reactivex.rxjava3.internal.operators.single.SingleZipArray` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class {
  `io.reactivex.rxjava3.core.SingleSource`[] `io.reactivex.rxjava3.internal.operators.single.SingleZipArray.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.single.SingleZipArray.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleZipArray` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource`[] v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray;.<init>:([Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L50a0ac.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L50a0b2.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleZipArray.a` @type ^`io.reactivex.rxjava3.core.SingleSource`[] := v1 @kind object;
  #L50a0b6.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleZipArray.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L50a0ba.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleZipArray` v5 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L50a0cc.  v0:= v5.`io.reactivex.rxjava3.internal.operators.single.SingleZipArray.a` @type ^`io.reactivex.rxjava3.core.SingleSource`[] @kind object;
  #L50a0d0.  v1:= length @variable v0;
  #L50a0d2.  v2:= 0I;
  #L50a0d4.  v3:= 1I;
  #L50a0d6.  if v1 != v3 then goto L50a0fa;
  #L50a0da.  v0:= v0[v2] @kind object;
  #L50a0de.  v1:= new `io.reactivex.rxjava3.internal.operators.single.SingleMap$a`;
  #L50a0e2.  v2:= new `io.reactivex.rxjava3.internal.operators.single.SingleZipArray$a`;
  #L50a0e6.  call `<init>`(v2, v5) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray;)V` @kind direct;
  #L50a0ec.  call `<init>`(v1, v6, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleMap$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L50a0f2.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L50a0f8.  return @kind void;
  #L50a0fa.  v3:= new `io.reactivex.rxjava3.internal.operators.single.SingleZipArray$b`;
  #L50a0fe.  v4:= v5.`io.reactivex.rxjava3.internal.operators.single.SingleZipArray.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L50a102.  call `<init>`(v3, v6, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray$b;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;ILio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L50a108.  call `onSubscribe`(v6, v3) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L50a10e.  if v2 >= v1 then goto L50a152;
  #L50a112.  call temp:= `isDisposed`(v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray$b;.isDisposed:()Z` @kind virtual;
  #L50a118.  v6:= temp;
  #L50a11a.  if v6 == 0 then goto L50a120;
  #L50a11e.  return @kind void;
  #L50a120.  v6:= v0[v2] @kind object;
  #L50a124.  if v6 != 0 then goto L50a13e;
  #L50a128.  v6:= new `java.lang.NullPointerException`;
  #L50a12c.  v0:= "One of the sources is null" @kind object;
  #L50a130.  call `<init>`(v6, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50a136.  call `b`(v3, v6, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray$b;.b:(Ljava/lang/Throwable;I)V` @kind virtual;
  #L50a13c.  return @kind void;
  #L50a13e.  v4:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleZipArray$b.c` @type ^`io.reactivex.rxjava3.internal.operators.single.SingleZipArray$c`[] @kind object;
  #L50a142.  v4:= v4[v2] @kind object;
  #L50a146.  call `subscribe`(v6, v4) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L50a14c.  v2:= v2 + 1;
  #L50a150.  goto L50a10e;
  #L50a152.  return @kind void;
}
