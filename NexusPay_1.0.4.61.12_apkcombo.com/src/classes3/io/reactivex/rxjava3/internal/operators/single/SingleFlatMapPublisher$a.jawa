record `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicLong` @kind class, `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.d` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L507eec.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L507ef2.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L507ef6.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L507efa.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L507efe.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L507f04.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L507f08.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L507f1c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L507f20.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L507f26.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L507f2a.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L507f30.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L507f44.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L507f48.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L507f4e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L507f60.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L507f64.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L507f6a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L507f7c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L507f80.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L507f86.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L507f98.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L507f9c.  v1:= v0.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L507fa0.  call `onSubscribe`(v1, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L507fa6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L507fb8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L507fbc.  call temp:= `deferredSetOnce`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L507fc2.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L507fd4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L507fd8.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L507fde.  v3:= temp @kind object;
  #L507fe0.  v0:= "the mapper returned a null Publisher" @kind object;
  #L507fe4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L507fea.  v3:= temp @kind object;
  #L507fec.  v3:= (`org.reactivestreams.Publisher`) v3 @kind object;
  #L507ff0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L507ff4.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L507ffa.  v0:= temp @kind object;
  #L507ffc.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L508000.  if v0 == v1 then goto L50800a;
  #L508004.  call `subscribe`(v3, v2) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L50800a.  return @kind void;
  #L50800c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L50800e.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L508014.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L508018.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L50801e.  return @kind void;
  catch `java.lang.Throwable` @[L507fd4..L507ff0] goto L50800c;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50803c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$a.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L508040.  call `deferredRequest`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V` @kind static;
  #L508046.  return @kind void;
}
