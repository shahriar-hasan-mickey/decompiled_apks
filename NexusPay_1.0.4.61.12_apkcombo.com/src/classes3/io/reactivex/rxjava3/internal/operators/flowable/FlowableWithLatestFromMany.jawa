record `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `org.reactivestreams.Publisher`[] `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany.b` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d9a34.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4d9a3a.  v1:= 0I;
  #L4d9a3c.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany.b` @type ^`org.reactivestreams.Publisher`[] := v1 @kind object;
  #L4d9a40.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany.c` @type ^`java.lang.Iterable` := v2 @kind object;
  #L4d9a44.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany.d` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L4d9a48.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `org.reactivestreams.Publisher`[] v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany;.<init>:(Lio/reactivex/rxjava3/core/Flowable;[Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d9a5c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4d9a62.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany.b` @type ^`org.reactivestreams.Publisher`[] := v2 @kind object;
  #L4d9a66.  v1:= 0I;
  #L4d9a68.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany.c` @type ^`java.lang.Iterable` := v1 @kind object;
  #L4d9a6c.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany.d` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L4d9a70.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4d9a84.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany.b` @type ^`org.reactivestreams.Publisher`[] @kind object;
  #L4d9a88.  if v0 != 0 then goto L4d9aee;
  #L4d9a8c.  v0:= 8I;
  #L4d9a90.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L4d9a94.  v1:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany.c` @type ^`java.lang.Iterable` @kind object;
  #L4d9a98.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4d9a9e.  v1:= temp @kind object;
  #L4d9aa0.  v2:= 0I;
  #L4d9aa2.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4d9aa8.  v3:= temp;
  #L4d9aaa.  if v3 == 0 then goto L4d9af0;
  #L4d9aae.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4d9ab4.  v3:= temp @kind object;
  #L4d9ab6.  v3:= (`org.reactivestreams.Publisher`) v3 @kind object;
  #L4d9aba.  v4:= length @variable v0;
  #L4d9abc.  if v2 != v4 then goto L4d9ad2;
  #L4d9ac0.  v4:= v2 ^> 1;
  #L4d9ac4.  v4:= v4 + v2 @kind int;
  #L4d9ac6.  call temp:= `copyOf`(v0, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L4d9acc.  v0:= temp @kind object;
  #L4d9ace.  v0:= (`org.reactivestreams.Publisher`[]) v0 @kind object;
  #L4d9ad2.  v4:= v2 + 1;
  #L4d9ad6.  v0[v2]:= v3 @kind object;
  #L4d9ada.  v2:= v4;
  #L4d9adc.  goto L4d9aa2;
  #L4d9ade.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d9ae0.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4d9ae6.  call `error`(v0, v6) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4d9aec.  return @kind void;
  #L4d9aee.  v2:= length @variable v0;
  #L4d9af0.  if v2 != 0 then goto L4d9b14;
  #L4d9af4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMap`;
  #L4d9af8.  v1:= v5.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4d9afc.  v2:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$a`;
  #L4d9b00.  call `<init>`(v2, v5) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany;)V` @kind direct;
  #L4d9b06.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMap;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4d9b0c.  call `subscribeActual`(v0, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMap;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L4d9b12.  return @kind void;
  #L4d9b14.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$b`;
  #L4d9b18.  v3:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany.d` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4d9b1c.  call `<init>`(v1, v6, v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L4d9b22.  call `onSubscribe`(v6, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4d9b28.  call `e`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$b;.e:([Lorg/reactivestreams/Publisher;I)V` @kind virtual;
  #L4d9b2e.  v6:= v5.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4d9b32.  call `subscribe`(v6, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4d9b38.  return @kind void;
  catch `java.lang.Throwable` @[L4d9a94..L4d9ada] goto L4d9ade;
}
