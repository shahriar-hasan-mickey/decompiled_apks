record `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromObservable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromObservable.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromObservable` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromObservable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4c5ed0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4c5ed6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromObservable.b` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v1 @kind object;
  #L4c5eda.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromObservable` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromObservable;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4c5eec.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFromObservable.b` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4c5ef0.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromObservable$a`;
  #L4c5ef4.  call `<init>`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromObservable$a;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4c5efa.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4c5f00.  return @kind void;
}
