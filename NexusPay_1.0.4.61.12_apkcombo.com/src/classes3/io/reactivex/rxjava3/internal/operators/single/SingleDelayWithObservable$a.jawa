record `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.SingleSource` `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a.c` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithObservable$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/core/SingleSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5059b4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L5059ba.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L5059be.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a.b` @type ^`io.reactivex.rxjava3.core.SingleSource` := v2 @kind object;
  #L5059c2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithObservable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L5059d4.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L5059da.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithObservable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50598c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L505992.  v0:= temp @kind object;
  #L505994.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L505998.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L50599e.  v0:= temp;
  #L5059a0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithObservable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L5059ec.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a.c` @type ^`boolean` @kind boolean;
  #L5059f0.  if v0 == 0 then goto L5059f6;
  #L5059f4.  return @kind void;
  #L5059f6.  v0:= 1I;
  #L5059f8.  v3.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a.c` @type ^`boolean` := v0 @kind boolean;
  #L5059fc.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a.b` @type ^`io.reactivex.rxjava3.core.SingleSource` @kind object;
  #L505a00.  v1:= new `io.reactivex.rxjava3.internal.observers.ResumeSingleObserver`;
  #L505a04.  v2:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L505a08.  call `<init>`(v1, v3, v2) @signature `Lio/reactivex/rxjava3/internal/observers/ResumeSingleObserver;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind direct;
  #L505a0e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L505a14.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithObservable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L505a28.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a.c` @type ^`boolean` @kind boolean;
  #L505a2c.  if v0 == 0 then goto L505a38;
  #L505a30.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L505a36.  return @kind void;
  #L505a38.  v0:= 1I;
  #L505a3a.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a.c` @type ^`boolean` := v0 @kind boolean;
  #L505a3e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L505a42.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L505a48.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithObservable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L505a5c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L505a62.  v1:= temp @kind object;
  #L505a64.  v1:= (`io.reactivex.rxjava3.disposables.Disposable`) v1 @kind object;
  #L505a68.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L505a6e.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithObservable$a;.onComplete:()V` @kind virtual;
  #L505a74.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a` v0 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithObservable$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L505a88.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L505a8e.  v1:= temp;
  #L505a90.  if v1 == 0 then goto L505a9e;
  #L505a94.  v1:= v0.`io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L505a98.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L505a9e.  return @kind void;
}
