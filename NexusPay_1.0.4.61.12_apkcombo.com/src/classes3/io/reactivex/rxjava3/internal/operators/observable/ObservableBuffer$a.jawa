record `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.c` @AccessFlag FINAL;
  `java.util.Collection` `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.d` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.e` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `int` v2 , `io.reactivex.rxjava3.functions.Supplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;ILio/reactivex/rxjava3/functions/Supplier;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e7fdc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e7fe2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4e7fe6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.b` @type ^`int` := v2;
  #L4e7fea.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.c` @type ^`io.reactivex.rxjava3.functions.Supplier` := v3 @kind object;
  #L4e7fee.  return @kind void;
}
procedure `boolean` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$a;.a:()Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4e7f44.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.c` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4e7f48.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4e7f4e.  v0:= temp @kind object;
  #L4e7f50.  v1:= "Empty buffer supplied" @kind object;
  #L4e7f54.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4e7f5a.  v0:= temp @kind object;
  #L4e7f5c.  v0:= (`java.util.Collection`) v0 @kind object;
  #L4e7f60.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.d` @type ^`java.util.Collection` := v0 @kind object;
  #L4e7f64.  v0:= 1I;
  #L4e7f66.  return v0;
  #L4e7f68.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e7f6a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4e7f70.  v1:= 0I;
  #L4e7f72.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.d` @type ^`java.util.Collection` := v1 @kind object;
  #L4e7f76.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7f7a.  if v1 != 0 then goto L4e7f8a;
  #L4e7f7e.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e7f82.  call `error`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4e7f88.  goto L4e7f9a;
  #L4e7f8a.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e7f90.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e7f94.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e7f9a.  v0:= 0I;
  #L4e7f9c.  return v0;
  catch `java.lang.Throwable` @[L4e7f44..L4e7f60] goto L4e7f68;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e8000.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e8004.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e800a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e7fbc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e7fc0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4e7fc6.  v0:= temp;
  #L4e7fc8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e801c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.d` @type ^`java.util.Collection` @kind object;
  #L4e8020.  if v0 == 0 then goto L4e804a;
  #L4e8024.  v1:= 0I;
  #L4e8026.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.d` @type ^`java.util.Collection` := v1 @kind object;
  #L4e802a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L4e8030.  v1:= temp;
  #L4e8032.  if v1 != 0 then goto L4e8040;
  #L4e8036.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e803a.  call `onNext`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4e8040.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e8044.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4e804a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e805c.  v0:= 0I;
  #L4e805e.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.d` @type ^`java.util.Collection` := v0 @kind object;
  #L4e8062.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e8066.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e806c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e8080.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.d` @type ^`java.util.Collection` @kind object;
  #L4e8084.  if v0 == 0 then goto L4e80b8;
  #L4e8088.  call temp:= `add`(v0, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4e808e.  v3:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.e` @type ^`int`;
  #L4e8092.  v3:= v3 + 1;
  #L4e8096.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.e` @type ^`int` := v3;
  #L4e809a.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.b` @type ^`int`;
  #L4e809e.  if v3 < v1 then goto L4e80b8;
  #L4e80a2.  v3:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e80a6.  call `onNext`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4e80ac.  v3:= 0I;
  #L4e80ae.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.e` @type ^`int` := v3;
  #L4e80b2.  call temp:= `a`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$a;.a:()Z` @kind virtual;
  #L4e80b8.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e80cc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e80d0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e80d6.  v0:= temp;
  #L4e80d8.  if v0 == 0 then goto L4e80ea;
  #L4e80dc.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.f` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4e80e0.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e80e4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4e80ea.  return @kind void;
}
