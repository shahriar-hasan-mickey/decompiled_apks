record `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakePublisher` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakePublisher.b` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakePublisher.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTakePublisher` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakePublisher;.<init>:(Lorg/reactivestreams/Publisher;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d4668.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4d466e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTakePublisher.b` @type ^`org.reactivestreams.Publisher` := v1 @kind object;
  #L4d4672.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTakePublisher.c` @type ^`long` := v2 @kind wide;
  #L4d4676.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableTakePublisher` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakePublisher;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4d4688.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTakePublisher.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L4d468c.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTake$a`;
  #L4d4690.  v2:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableTakePublisher.c` @type ^`long` @kind wide;
  #L4d4694.  call `<init>`(v1, v5, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTake$a;.<init>:(Lorg/reactivestreams/Subscriber;J)V` @kind direct;
  #L4d469a.  call `subscribe`(v0, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4d46a0.  return @kind void;
}
