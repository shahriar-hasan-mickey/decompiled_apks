record `io.reactivex.rxjava3.internal.operators.single.SingleJust` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class {
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.single.SingleJust.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleJust` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleJust;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L508828.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L50882e.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleJust.a` @type ^`java.lang.Object` := v1 @kind object;
  #L508832.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleJust` v1 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleJust;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L508844.  call temp:= `a`() @signature `Lio/reactivex/rxjava3/disposables/a;.a:()Lio/reactivex/rxjava3/disposables/Disposable;` @kind static;
  #L50884a.  v0:= temp @kind object;
  #L50884c.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L508852.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleJust.a` @type ^`java.lang.Object` @kind object;
  #L508856.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L50885c.  return @kind void;
}
