record `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class, `io.reactivex.rxjava3.internal.fuseable.FuseToObservable` @kind interface {
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiPredicate` `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.c` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSequenceEqualSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f9cd4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4f9cda.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.a` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v1 @kind object;
  #L4f9cde.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.b` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v2 @kind object;
  #L4f9ce2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.c` @type ^`io.reactivex.rxjava3.functions.BiPredicate` := v3 @kind object;
  #L4f9ce6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.d` @type ^`int` := v4;
  #L4f9cea.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Observable` `fuseToObservable`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSequenceEqualSingle;.fuseToObservable:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f9ca0.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqual`;
  #L4f9ca4.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.a` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4f9ca8.  v2:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.b` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4f9cac.  v3:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.c` @type ^`io.reactivex.rxjava3.functions.BiPredicate` @kind object;
  #L4f9cb0.  v4:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.d` @type ^`int`;
  #L4f9cb4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSequenceEqual;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;I)V` @kind direct;
  #L4f9cba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4f9cc0.  v0:= temp @kind object;
  #L4f9cc2.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle` v7 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSequenceEqualSingle;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4f9cfc.  v6:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle$a`;
  #L4f9d00.  v2:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.d` @type ^`int`;
  #L4f9d04.  v3:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.a` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4f9d08.  v4:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.b` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4f9d0c.  v5:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle.c` @type ^`io.reactivex.rxjava3.functions.BiPredicate` @kind object;
  #L4f9d10.  v0:= v6 @kind object;
  #L4f9d12.  v1:= v8 @kind object;
  #L4f9d14.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSequenceEqualSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;ILio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L4f9d1a.  call `onSubscribe`(v8, v6) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4f9d20.  call `d`(v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSequenceEqualSingle$a;.d:()V` @kind virtual;
  #L4f9d26.  return @kind void;
}
