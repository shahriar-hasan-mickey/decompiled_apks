record `io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong.b` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRangeLong;.<init>:(JJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4cded4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4cdeda.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong.b` @type ^`long` := v1 @kind wide;
  #L4cdede.  v1:= v1 + v3 @kind long;
  #L4cdee0.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong.c` @type ^`long` := v1 @kind wide;
  #L4cdee4.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong` v13 @kind this, `org.reactivestreams.Subscriber` v14 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRangeLong;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L4cdef8.  v0:= instanceof @variable v14 @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind boolean;
  #L4cdefc.  if v0 == 0 then goto L4cdf22;
  #L4cdf00.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong$b`;
  #L4cdf04.  v2:= v14 @kind object;
  #L4cdf06.  v2:= (`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber`) v2 @kind object;
  #L4cdf0a.  v3:= v13.`io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong.b` @type ^`long` @kind wide;
  #L4cdf0e.  v5:= v13.`io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong.c` @type ^`long` @kind wide;
  #L4cdf12.  v1:= v0 @kind object;
  #L4cdf14.  call `<init>`(v1, v2, v3, v5) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRangeLong$b;.<init>:(Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;JJ)V` @kind direct;
  #L4cdf1a.  call `onSubscribe`(v14, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4cdf20.  goto L4cdf3e;
  #L4cdf22.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong$c`;
  #L4cdf26.  v9:= v13.`io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong.b` @type ^`long` @kind wide;
  #L4cdf2a.  v11:= v13.`io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong.c` @type ^`long` @kind wide;
  #L4cdf2e.  v7:= v0 @kind object;
  #L4cdf30.  v8:= v14 @kind object;
  #L4cdf32.  call `<init>`(v7, v8, v9, v11) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRangeLong$c;.<init>:(Lorg/reactivestreams/Subscriber;JJ)V` @kind direct;
  #L4cdf38.  call `onSubscribe`(v14, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4cdf3e.  return @kind void;
}
