record `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface {
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.c` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.d` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.e` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.f` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAt$a;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/lang/Object;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c1a48.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4c1a4e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.a` @type ^`long` := v2 @kind wide;
  #L4c1a52.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.b` @type ^`java.lang.Object` := v4 @kind object;
  #L4c1a56.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.c` @type ^`boolean` := v5 @kind boolean;
  #L4c1a5a.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAt$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c1a6c.  call `cancel`(v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L4c1a72.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c1a76.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4c1a7c.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAt$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c1a90.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` @kind boolean;
  #L4c1a94.  if v0 != 0 then goto L4c1ad6;
  #L4c1a98.  v0:= 1I;
  #L4c1a9a.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` := v0 @kind boolean;
  #L4c1a9e.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.b` @type ^`java.lang.Object` @kind object;
  #L4c1aa2.  if v0 != 0 then goto L4c1ad0;
  #L4c1aa6.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.c` @type ^`boolean` @kind boolean;
  #L4c1aaa.  if v0 == 0 then goto L4c1ac4;
  #L4c1aae.  v0:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c1ab2.  v1:= new `java.util.NoSuchElementException`;
  #L4c1ab6.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4c1abc.  call `onError`(v0, v1) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c1ac2.  goto L4c1ad6;
  #L4c1ac4.  v0:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c1ac8.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4c1ace.  goto L4c1ad6;
  #L4c1ad0.  call `complete`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4c1ad6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAt$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c1ae8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` @kind boolean;
  #L4c1aec.  if v0 == 0 then goto L4c1af8;
  #L4c1af0.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4c1af6.  return @kind void;
  #L4c1af8.  v0:= 1I;
  #L4c1afa.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` := v0 @kind boolean;
  #L4c1afe.  v0:= v1.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c1b02.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c1b08.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAt$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4c1b1c.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` @kind boolean;
  #L4c1b20.  if v0 == 0 then goto L4c1b26;
  #L4c1b24.  return @kind void;
  #L4c1b26.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.e` @type ^`long` @kind wide;
  #L4c1b2a.  v2:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.a` @type ^`long` @kind wide;
  #L4c1b2e.  v4:= lcmp(v0, v2);
  #L4c1b32.  if v4 != 0 then goto L4c1b4e;
  #L4c1b36.  v0:= 1I;
  #L4c1b38.  v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` := v0 @kind boolean;
  #L4c1b3c.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c1b40.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4c1b46.  call `complete`(v5, v6) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4c1b4c.  return @kind void;
  #L4c1b4e.  v2:= 1L;
  #L4c1b52.  v0:= v0 + v2 @kind long;
  #L4c1b54.  v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.e` @type ^`long` := v0 @kind wide;
  #L4c1b58.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAt$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c1b6c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c1b70.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4c1b76.  v0:= temp;
  #L4c1b78.  if v0 == 0 then goto L4c1b9a;
  #L4c1b7c.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt$a.d` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4c1b80.  v0:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c1b84.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4c1b8a.  v0:= 9223372036854775807L;
  #L4c1b94.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4c1b9a.  return @kind void;
}
