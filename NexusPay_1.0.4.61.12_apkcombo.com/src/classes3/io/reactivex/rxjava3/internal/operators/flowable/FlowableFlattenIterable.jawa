record `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlattenIterable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4c4fec.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4c4ff2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4c4ff6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable.c` @type ^`int` := v3;
  #L4c4ffa.  return @kind void;
}
procedure `org.reactivestreams.Subscriber` `subscribe`(`org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlattenIterable;.subscribe:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;I)Lorg/reactivestreams/Subscriber;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c4fd0.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable$a`;
  #L4c4fd4.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlattenIterable$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L4c4fda.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlattenIterable;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4c500c.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4c5010.  v1:= instanceof @variable v0 @type ^`io.reactivex.rxjava3.functions.Supplier` @kind boolean;
  #L4c5014.  if v1 == 0 then goto L4c5070;
  #L4c5018.  v0:= (`io.reactivex.rxjava3.functions.Supplier`) v0 @kind object;
  #L4c501c.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4c5022.  v0:= temp @kind object;
  #L4c5024.  if v0 != 0 then goto L4c5030;
  #L4c5028.  call `complete`(v5) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4c502e.  return @kind void;
  #L4c5030.  v1:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4c5034.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c503a.  v0:= temp @kind object;
  #L4c503c.  v0:= (`java.lang.Iterable`) v0 @kind object;
  #L4c5040.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4c5046.  v0:= temp @kind object;
  #L4c5048.  call `subscribe`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromIterable;.subscribe:(Lorg/reactivestreams/Subscriber;Ljava/util/Iterator;)V` @kind static;
  #L4c504e.  return @kind void;
  #L4c5050.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c5052.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c5058.  call `error`(v0, v5) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4c505e.  return @kind void;
  #L4c5060.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c5062.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c5068.  call `error`(v0, v5) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4c506e.  return @kind void;
  #L4c5070.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable$a`;
  #L4c5074.  v2:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4c5078.  v3:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable.c` @type ^`int`;
  #L4c507c.  call `<init>`(v1, v5, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlattenIterable$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L4c5082.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4c5088.  return @kind void;
  catch `java.lang.Throwable` @[L4c5018..L4c5024] goto L4c5060;
  catch `java.lang.Throwable` @[L4c5030..L4c5048] goto L4c5050;
}
