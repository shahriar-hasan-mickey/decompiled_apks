record `io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.a` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.c` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeInterval$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5092e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5092ea.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L5092ee.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.b` @type ^`java.util.concurrent.TimeUnit` := v2 @kind object;
  #L5092f2.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.c` @type ^`io.reactivex.rxjava3.core.Scheduler` := v3 @kind object;
  #L5092f6.  if v4 == 0 then goto L509304;
  #L5092fa.  call temp:= `now`(v3, v2) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L509300.  v1:= temp @kind wide;
  #L509302.  goto L509308;
  #L509304.  v1:= 0L;
  #L509308.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.d` @type ^`long` := v1 @kind wide;
  #L50930c.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeInterval$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L509320.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L509324.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L50932a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeInterval$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5092c4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L5092c8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L5092ce.  v0:= temp;
  #L5092d0.  return v0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeInterval$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50933c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L509340.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L509346.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeInterval$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L509358.  v0:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L50935c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L509362.  v0:= temp;
  #L509364.  if v0 == 0 then goto L509376;
  #L509368.  v1.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.e` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L50936c.  v2:= v1.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L509370.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L509376.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeInterval$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L509388.  v0:= v6.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L50938c.  v1:= new `io.reactivex.rxjava3.schedulers.Timed`;
  #L509390.  v2:= v6.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.c` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L509394.  v3:= v6.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L509398.  call temp:= `now`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L50939e.  v2:= temp @kind wide;
  #L5093a0.  v4:= v6.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.d` @type ^`long` @kind wide;
  #L5093a4.  v2:= v2 - v4 @kind long;
  #L5093a6.  v4:= v6.`io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval$a.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L5093aa.  call `<init>`(v1, v7, v2, v4) @signature `Lio/reactivex/rxjava3/schedulers/Timed;.<init>:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L5093b0.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L5093b6.  return @kind void;
}
