record `io.reactivex.rxjava3.internal.operators.single.SingleToFlowable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `io.reactivex.rxjava3.core.SingleSource` `io.reactivex.rxjava3.internal.operators.single.SingleToFlowable.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleToFlowable` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToFlowable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L509888.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L50988e.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleToFlowable.b` @type ^`io.reactivex.rxjava3.core.SingleSource` := v1 @kind object;
  #L509892.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleToFlowable` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToFlowable;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5098a4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleToFlowable.b` @type ^`io.reactivex.rxjava3.core.SingleSource` @kind object;
  #L5098a8.  v1:= new `io.reactivex.rxjava3.internal.operators.single.SingleToFlowable$a`;
  #L5098ac.  call `<init>`(v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToFlowable$a;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L5098b2.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L5098b8.  return @kind void;
}
