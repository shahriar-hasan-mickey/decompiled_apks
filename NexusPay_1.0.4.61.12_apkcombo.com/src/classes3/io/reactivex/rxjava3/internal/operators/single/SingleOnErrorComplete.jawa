record `io.reactivex.rxjava3.internal.operators.single.SingleOnErrorComplete` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Maybe` @kind class {
  `io.reactivex.rxjava3.core.Single` `io.reactivex.rxjava3.internal.operators.single.SingleOnErrorComplete.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.single.SingleOnErrorComplete.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleOnErrorComplete` v0 @kind this, `io.reactivex.rxjava3.core.Single` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleOnErrorComplete;.<init>:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L508bc8.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.<init>:()V` @kind direct;
  #L508bce.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleOnErrorComplete.a` @type ^`io.reactivex.rxjava3.core.Single` := v1 @kind object;
  #L508bd2.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleOnErrorComplete.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L508bd6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleOnErrorComplete` v3 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleOnErrorComplete;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L508be8.  v0:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleOnErrorComplete.a` @type ^`io.reactivex.rxjava3.core.Single` @kind object;
  #L508bec.  v1:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeOnErrorComplete$OnErrorCompleteMultiObserver`;
  #L508bf0.  v2:= v3.`io.reactivex.rxjava3.internal.operators.single.SingleOnErrorComplete.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L508bf4.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeOnErrorComplete$OnErrorCompleteMultiObserver;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L508bfa.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L508c00.  return @kind void;
}
