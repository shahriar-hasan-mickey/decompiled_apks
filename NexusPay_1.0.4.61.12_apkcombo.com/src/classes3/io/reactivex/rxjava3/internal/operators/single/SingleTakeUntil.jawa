record `io.reactivex.rxjava3.internal.operators.single.SingleTakeUntil` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class {
  `io.reactivex.rxjava3.core.SingleSource` `io.reactivex.rxjava3.internal.operators.single.SingleTakeUntil.a` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.rxjava3.internal.operators.single.SingleTakeUntil.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.single.SingleTakeUntil` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTakeUntil;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lorg/reactivestreams/Publisher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L509268.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L50926e.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTakeUntil.a` @type ^`io.reactivex.rxjava3.core.SingleSource` := v1 @kind object;
  #L509272.  v0.`io.reactivex.rxjava3.internal.operators.single.SingleTakeUntil.b` @type ^`org.reactivestreams.Publisher` := v2 @kind object;
  #L509276.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.single.SingleTakeUntil` v2 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTakeUntil;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L509288.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleTakeUntil$a`;
  #L50928c.  call `<init>`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTakeUntil$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind direct;
  #L509292.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L509298.  v3:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleTakeUntil.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L50929c.  v1:= v0.`io.reactivex.rxjava3.internal.operators.single.SingleTakeUntil$a.b` @type ^`io.reactivex.rxjava3.internal.operators.single.SingleTakeUntil$b` @kind object;
  #L5092a0.  call `subscribe`(v3, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L5092a6.  v3:= v2.`io.reactivex.rxjava3.internal.operators.single.SingleTakeUntil.a` @type ^`io.reactivex.rxjava3.core.SingleSource` @kind object;
  #L5092aa.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/SingleSource;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind interface;
  #L5092b0.  return @kind void;
}
