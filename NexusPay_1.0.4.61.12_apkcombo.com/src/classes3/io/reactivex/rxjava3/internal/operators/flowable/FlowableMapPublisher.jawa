record `io.reactivex.rxjava3.internal.operators.flowable.FlowableMapPublisher` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.rxjava3.internal.operators.flowable.FlowableMapPublisher.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableMapPublisher.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableMapPublisher` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMapPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4c9954.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4c995a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableMapPublisher.b` @type ^`org.reactivestreams.Publisher` := v1 @kind object;
  #L4c995e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableMapPublisher.c` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4c9962.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableMapPublisher` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMapPublisher;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4c9974.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableMapPublisher.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L4c9978.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMap$b`;
  #L4c997c.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableMapPublisher.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4c9980.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMap$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4c9986.  call `subscribe`(v0, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4c998c.  return @kind void;
}
