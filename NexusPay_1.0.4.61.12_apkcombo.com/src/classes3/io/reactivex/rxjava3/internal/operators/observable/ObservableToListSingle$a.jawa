record `io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.a` @AccessFlag FINAL;
  `java.util.Collection` `io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.b` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableToListSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fd648.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fd64e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4fd652.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.b` @type ^`java.util.Collection` := v2 @kind object;
  #L4fd656.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableToListSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd668.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fd66c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fd672.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableToListSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd628.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fd62c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4fd632.  v0:= temp;
  #L4fd634.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableToListSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fd684.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.b` @type ^`java.util.Collection` @kind object;
  #L4fd688.  v1:= 0I;
  #L4fd68a.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.b` @type ^`java.util.Collection` := v1 @kind object;
  #L4fd68e.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4fd692.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4fd698.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableToListSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd6ac.  v0:= 0I;
  #L4fd6ae.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.b` @type ^`java.util.Collection` := v0 @kind object;
  #L4fd6b2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4fd6b6.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fd6bc.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableToListSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd6d0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.b` @type ^`java.util.Collection` @kind object;
  #L4fd6d4.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fd6da.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableToListSingle$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd6ec.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fd6f0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4fd6f6.  v0:= temp;
  #L4fd6f8.  if v0 == 0 then goto L4fd70a;
  #L4fd6fc.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4fd700.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4fd704.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4fd70a.  return @kind void;
}
