record `io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @AccessFlag ;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduceSeedSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Lio/reactivex/rxjava3/functions/BiFunction;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ce364.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ce36a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4ce36e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L4ce372.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v2 @kind object;
  #L4ce376.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduceSeedSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ce388.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4ce38c.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4ce392.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4ce396.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4ce39a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduceSeedSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ce340.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4ce344.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4ce348.  if v0 != v1 then goto L4ce350;
  #L4ce34c.  v0:= 1I;
  #L4ce34e.  goto L4ce352;
  #L4ce350.  v0:= 0I;
  #L4ce352.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduceSeedSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ce3ac.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L4ce3b0.  if v0 == 0 then goto L4ce3cc;
  #L4ce3b4.  v1:= 0I;
  #L4ce3b6.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L4ce3ba.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4ce3be.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L4ce3c2.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4ce3c6.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4ce3cc.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduceSeedSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ce3e0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L4ce3e4.  if v0 == 0 then goto L4ce402;
  #L4ce3e8.  v0:= 0I;
  #L4ce3ea.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L4ce3ee.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4ce3f2.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4ce3f6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4ce3fa.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ce400.  goto L4ce408;
  #L4ce402.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4ce408.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduceSeedSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ce41c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L4ce420.  if v0 == 0 then goto L4ce45a;
  #L4ce424.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.b` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L4ce428.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/rxjava3/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ce42e.  v3:= temp @kind object;
  #L4ce430.  v0:= "The reducer returned a null value" @kind object;
  #L4ce434.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ce43a.  v3:= temp @kind object;
  #L4ce43c.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L4ce440.  goto L4ce45a;
  #L4ce442.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ce444.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ce44a.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4ce44e.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4ce454.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduceSeedSingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ce45a.  return @kind void;
  catch `java.lang.Throwable` @[L4ce424..L4ce440] goto L4ce442;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduceSeedSingle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ce478.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4ce47c.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4ce482.  v0:= temp;
  #L4ce484.  if v0 == 0 then goto L4ce4a6;
  #L4ce488.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.d` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4ce48c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4ce490.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ce496.  v0:= 9223372036854775807L;
  #L4ce4a0.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4ce4a6.  return @kind void;
}
