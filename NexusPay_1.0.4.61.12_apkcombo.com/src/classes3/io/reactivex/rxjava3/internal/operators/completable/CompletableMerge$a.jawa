record `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.CompletableObserver` `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.AtomicThrowable` `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.f` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v0 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b5cb4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4b5cba.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` := v1 @kind object;
  #L4b5cbe.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.b` @type ^`int` := v2;
  #L4b5cc2.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.c` @type ^`boolean` := v3 @kind boolean;
  #L4b5cc6.  v1:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L4b5cca.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4b5cd0.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v1 @kind object;
  #L4b5cd4.  v1:= new `io.reactivex.rxjava3.internal.util.AtomicThrowable`;
  #L4b5cd8.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L4b5cde.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` := v1 @kind object;
  #L4b5ce2.  v1:= 1I;
  #L4b5ce4.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L4b5cea.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v2 @kind this, `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a$a` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.a:(Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a$a;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4b5d2c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4b5d30.  call temp:= `delete`(v0, v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4b5d36.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4b5d3c.  v3:= temp;
  #L4b5d3e.  if v3 != 0 then goto L4b5d52;
  #L4b5d42.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b5d46.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b5d4a.  call `tryTerminateConsumer`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4b5d50.  goto L4b5d6e;
  #L4b5d52.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.b` @type ^`int`;
  #L4b5d56.  v0:= 2147483647I;
  #L4b5d5c.  if v3 == v0 then goto L4b5d6e;
  #L4b5d60.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.f` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b5d64.  v0:= 1L;
  #L4b5d68.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4b5d6e.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v2 @kind this, `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a$a` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.b:(Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a$a;Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4b5d80.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4b5d84.  call temp:= `delete`(v0, v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4b5d8a.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.c` @type ^`boolean` @kind boolean;
  #L4b5d8e.  if v3 != 0 then goto L4b5dd4;
  #L4b5d92.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.f` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b5d96.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4b5d9c.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4b5da0.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4b5da6.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b5daa.  call temp:= `tryAddThrowableOrReport`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4b5db0.  v3:= temp;
  #L4b5db2.  if v3 == 0 then goto L4b5e1c;
  #L4b5db6.  v3:= 0I;
  #L4b5db8.  call temp:= `getAndSet`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndSet:(I)I` @kind virtual;
  #L4b5dbe.  v3:= temp;
  #L4b5dc0.  if v3 <= 0 then goto L4b5e1c;
  #L4b5dc4.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b5dc8.  v4:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b5dcc.  call `tryTerminateConsumer`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4b5dd2.  goto L4b5e1c;
  #L4b5dd4.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b5dd8.  call temp:= `tryAddThrowableOrReport`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4b5dde.  v3:= temp;
  #L4b5de0.  if v3 == 0 then goto L4b5e1c;
  #L4b5de4.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4b5dea.  v3:= temp;
  #L4b5dec.  if v3 != 0 then goto L4b5e00;
  #L4b5df0.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b5df4.  v4:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b5df8.  call `tryTerminateConsumer`(v3, v4) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4b5dfe.  goto L4b5e1c;
  #L4b5e00.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.b` @type ^`int`;
  #L4b5e04.  v4:= 2147483647I;
  #L4b5e0a.  if v3 == v4 then goto L4b5e1c;
  #L4b5e0e.  v3:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.f` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b5e12.  v0:= 1L;
  #L4b5e16.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4b5e1c.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v2 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.c:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b5ed8.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4b5ede.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a$a`;
  #L4b5ee2.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;)V` @kind direct;
  #L4b5ee8.  v1:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4b5eec.  call temp:= `add`(v1, v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4b5ef2.  call `subscribe`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4b5ef8.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b5cfc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.f` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b5d00.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4b5d06.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4b5d0a.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4b5d10.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b5d14.  call `tryTerminateAndReport`(v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateAndReport:()V` @kind virtual;
  #L4b5d1a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b5c94.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4b5c98.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L4b5c9e.  v0:= temp;
  #L4b5ca0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b5e30.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4b5e36.  v0:= temp;
  #L4b5e38.  if v0 != 0 then goto L4b5e4a;
  #L4b5e3c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b5e40.  v1:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b5e44.  call `tryTerminateConsumer`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4b5e4a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b5e5c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.c` @type ^`boolean` @kind boolean;
  #L4b5e60.  if v0 != 0 then goto L4b5e9c;
  #L4b5e64.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.e` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4b5e68.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4b5e6e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b5e72.  call temp:= `tryAddThrowableOrReport`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4b5e78.  v2:= temp;
  #L4b5e7a.  if v2 == 0 then goto L4b5ec6;
  #L4b5e7e.  v2:= 0I;
  #L4b5e80.  call temp:= `getAndSet`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndSet:(I)I` @kind virtual;
  #L4b5e86.  v2:= temp;
  #L4b5e88.  if v2 <= 0 then goto L4b5ec6;
  #L4b5e8c.  v2:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b5e90.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b5e94.  call `tryTerminateConsumer`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4b5e9a.  goto L4b5ec6;
  #L4b5e9c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b5ea0.  call temp:= `tryAddThrowableOrReport`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4b5ea6.  v2:= temp;
  #L4b5ea8.  if v2 == 0 then goto L4b5ec6;
  #L4b5eac.  call temp:= `decrementAndGet`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4b5eb2.  v2:= temp;
  #L4b5eb4.  if v2 != 0 then goto L4b5ec6;
  #L4b5eb8.  v2:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.d` @type ^`io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind object;
  #L4b5ebc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b5ec0.  call `tryTerminateConsumer`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4b5ec6.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b5f0c.  v1:= (`io.reactivex.rxjava3.core.CompletableSource`) v1 @kind object;
  #L4b5f10.  call `c`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.c:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind virtual;
  #L4b5f16.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b5f28.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.f` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b5f2c.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4b5f32.  v0:= temp;
  #L4b5f34.  if v0 == 0 then goto L4b5f6e;
  #L4b5f38.  v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.f` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4b5f3c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b5f40.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b5f46.  v0:= v2.`io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$a.b` @type ^`int`;
  #L4b5f4a.  v1:= 2147483647I;
  #L4b5f50.  if v0 != v1 then goto L4b5f66;
  #L4b5f54.  v0:= 9223372036854775807L;
  #L4b5f5e.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4b5f64.  goto L4b5f6e;
  #L4b5f66.  v0:= (`long`) v0 @kind i2l;
  #L4b5f68.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4b5f6e.  return @kind void;
}
