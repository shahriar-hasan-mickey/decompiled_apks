record `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorNext$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f54ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f54b2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4f54b6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4f54ba.  v1:= new `io.reactivex.rxjava3.internal.disposables.SequentialDisposable`;
  #L4f54be.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L4f54c4.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L4f54c8.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorNext$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f54dc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.e` @type ^`boolean` @kind boolean;
  #L4f54e0.  if v0 == 0 then goto L4f54e6;
  #L4f54e4.  return @kind void;
  #L4f54e6.  v0:= 1I;
  #L4f54e8.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4f54ec.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4f54f0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f54f4.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f54fa.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a` v6 @kind this, `java.lang.Throwable` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorNext$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4f550c.  v0:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.d` @type ^`boolean` @kind boolean;
  #L4f5510.  if v0 == 0 then goto L4f5530;
  #L4f5514.  v0:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.e` @type ^`boolean` @kind boolean;
  #L4f5518.  if v0 == 0 then goto L4f5524;
  #L4f551c.  call `onError`(v7) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f5522.  return @kind void;
  #L4f5524.  v0:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f5528.  call `onError`(v0, v7) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f552e.  return @kind void;
  #L4f5530.  v0:= 1I;
  #L4f5532.  v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4f5536.  v1:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4f553a.  call temp:= `apply`(v1, v7) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4f5540.  v1:= temp @kind object;
  #L4f5542.  v1:= (`io.reactivex.rxjava3.core.ObservableSource`) v1 @kind object;
  #L4f5546.  if v1 != 0 then goto L4f556a;
  #L4f554a.  v0:= new `java.lang.NullPointerException`;
  #L4f554e.  v1:= "Observable is null" @kind object;
  #L4f5552.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f5558.  call temp:= `initCause`(v0, v7) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L4f555e.  v7:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f5562.  call `onError`(v7, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f5568.  return @kind void;
  #L4f556a.  call `subscribe`(v1, v6) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4f5570.  return @kind void;
  #L4f5572.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f5574.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f557a.  v2:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f557e.  v3:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4f5582.  v4:= 2I;
  #L4f5584.  v4:= new `java.lang.Throwable`[v4];
  #L4f5588.  v5:= 0I;
  #L4f558a.  v4[v5]:= v7 @kind object;
  #L4f558e.  v4[v0]:= v1 @kind object;
  #L4f5592.  call `<init>`(v3, v4) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4f5598.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f559e.  return @kind void;
  catch `java.lang.Throwable` @[L4f5536..L4f5546] goto L4f5572;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorNext$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f55bc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.e` @type ^`boolean` @kind boolean;
  #L4f55c0.  if v0 == 0 then goto L4f55c6;
  #L4f55c4.  return @kind void;
  #L4f55c6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f55ca.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4f55d0.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorNext$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f55e4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext$a.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4f55e8.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4f55ee.  return @kind void;
}
