record `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.observable.a` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.util.ErrorMode` `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `io.reactivex.rxjava3.internal.util.ErrorMode` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ebf60.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/a;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4ebf66.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap.a` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4ebf6a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` := v4 @kind object;
  #L4ebf6e.  v1:= 8I;
  #L4ebf72.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4ebf78.  v1:= temp;
  #L4ebf7a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap.b` @type ^`int` := v1;
  #L4ebf7e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap` v6 @kind this, `io.reactivex.rxjava3.core.Observer` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMap;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4ebf90.  v0:= v6.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4ebf94.  v1:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ebf98.  call temp:= `tryScalarXMapSubscribe`(v0, v7, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap;.tryScalarXMapSubscribe:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;)Z` @kind static;
  #L4ebf9e.  v0:= temp;
  #L4ebfa0.  if v0 == 0 then goto L4ebfa6;
  #L4ebfa4.  return @kind void;
  #L4ebfa6.  v0:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4ebfaa.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4ebfae.  if v0 != v1 then goto L4ebfda;
  #L4ebfb2.  v0:= new `io.reactivex.rxjava3.observers.SerializedObserver`;
  #L4ebfb6.  call `<init>`(v0, v7) @signature `Lio/reactivex/rxjava3/observers/SerializedObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4ebfbc.  v7:= v6.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4ebfc0.  v1:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap$b`;
  #L4ebfc4.  v2:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ebfc8.  v3:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap.b` @type ^`int`;
  #L4ebfcc.  call `<init>`(v1, v0, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMap$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L4ebfd2.  call `subscribe`(v7, v1) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4ebfd8.  goto L4ec008;
  #L4ebfda.  v0:= v6.`io.reactivex.rxjava3.internal.operators.observable.a.source` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4ebfde.  v1:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap$a`;
  #L4ebfe2.  v2:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ebfe6.  v3:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap.b` @type ^`int`;
  #L4ebfea.  v4:= v6.`io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap.c` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4ebfee.  v5:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4ebff2.  if v4 != v5 then goto L4ebffa;
  #L4ebff6.  v4:= 1I;
  #L4ebff8.  goto L4ebffc;
  #L4ebffa.  v4:= 0I;
  #L4ebffc.  call `<init>`(v1, v7, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMap$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4ec002.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4ec008.  return @kind void;
}
