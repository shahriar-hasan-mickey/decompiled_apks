record `io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class, `io.reactivex.rxjava3.functions.Supplier` @kind interface {
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier` v0 @kind this, `io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromSupplier;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f1404.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4f140a.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier.a` @type ^`io.reactivex.rxjava3.functions.Supplier` := v1 @kind object;
  #L4f140e.  return @kind void;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromSupplier;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f13d8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier.a` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4f13dc.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4f13e2.  v0:= temp @kind object;
  #L4f13e4.  v1:= "The supplier returned a null value." @kind object;
  #L4f13e8.  call temp:= `nullCheck`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4f13ee.  v0:= temp @kind object;
  #L4f13f0.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier` v3 @kind this, `io.reactivex.rxjava3.core.Observer` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromSupplier;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f1420.  v0:= new `io.reactivex.rxjava3.internal.observers.DeferredScalarDisposable`;
  #L4f1424.  call `<init>`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4f142a.  call `onSubscribe`(v4, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4f1430.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.isDisposed:()Z` @kind virtual;
  #L4f1436.  v1:= temp;
  #L4f1438.  if v1 == 0 then goto L4f143e;
  #L4f143c.  return @kind void;
  #L4f143e.  v1:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier.a` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4f1442.  call temp:= `get`(v1) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4f1448.  v1:= temp @kind object;
  #L4f144a.  v2:= "Supplier returned a null value." @kind object;
  #L4f144e.  call temp:= `nullCheck`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4f1454.  v4:= temp @kind object;
  #L4f1456.  call `complete`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4f145c.  return @kind void;
  #L4f145e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f1460.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4f1466.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/DeferredScalarDisposable;.isDisposed:()Z` @kind virtual;
  #L4f146c.  v0:= temp;
  #L4f146e.  if v0 != 0 then goto L4f147a;
  #L4f1472.  call `onError`(v4, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f1478.  goto L4f1480;
  #L4f147a.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4f1480.  return @kind void;
  catch `java.lang.Throwable` @[L4f143e..L4f1456] goto L4f145e;
}
