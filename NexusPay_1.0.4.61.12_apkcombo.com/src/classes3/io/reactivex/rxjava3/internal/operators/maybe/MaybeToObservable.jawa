record `io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class, `io.reactivex.rxjava3.internal.fuseable.HasUpstreamMaybeSource` @kind interface {
  `io.reactivex.rxjava3.core.MaybeSource` `io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable` v0 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e1b88.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4e1b8e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` := v1 @kind object;
  #L4e1b92.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.MaybeObserver` `create`(`io.reactivex.rxjava3.core.Observer` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable;.create:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/MaybeObserver;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4e1b54.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable$a`;
  #L4e1b58.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4e1b5e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.MaybeSource` `source`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable;.source:()Lio/reactivex/rxjava3/core/MaybeSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e1b70.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4e1b74.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4e1ba4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable.a` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4e1ba8.  call temp:= `create`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable;.create:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/MaybeObserver;` @kind static;
  #L4e1bae.  v2:= temp @kind object;
  #L4e1bb0.  call `subscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4e1bb6.  return @kind void;
}
