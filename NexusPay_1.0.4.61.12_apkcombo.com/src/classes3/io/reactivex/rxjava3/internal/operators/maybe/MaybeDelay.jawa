record `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.maybe.a` @kind class {
  `long` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay.a` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay` v0 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4dc21c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/a;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L4dc222.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay.a` @type ^`long` := v2 @kind wide;
  #L4dc226.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay.b` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L4dc22a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay.c` @type ^`io.reactivex.rxjava3.core.Scheduler` := v5 @kind object;
  #L4dc22e.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay.d` @type ^`boolean` := v6 @kind boolean;
  #L4dc232.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay` v9 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v10 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay;.subscribeActual:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4dc244.  v0:= v9.`io.reactivex.rxjava3.internal.operators.maybe.a.source` @type ^`io.reactivex.rxjava3.core.MaybeSource` @kind object;
  #L4dc248.  v8:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay$a`;
  #L4dc24c.  v3:= v9.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay.a` @type ^`long` @kind wide;
  #L4dc250.  v5:= v9.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4dc254.  v6:= v9.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay.c` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4dc258.  v7:= v9.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDelay.d` @type ^`boolean` @kind boolean;
  #L4dc25c.  v1:= v8 @kind object;
  #L4dc25e.  v2:= v10 @kind object;
  #L4dc260.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelay$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L4dc266.  call `subscribe`(v0, v8) @signature `Lio/reactivex/rxjava3/core/MaybeSource;.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind interface;
  #L4dc26c.  return @kind void;
}
