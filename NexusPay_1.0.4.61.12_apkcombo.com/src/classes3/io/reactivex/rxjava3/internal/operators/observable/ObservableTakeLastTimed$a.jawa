record `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicBoolean` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.b` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.c` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.f` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.g` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.h` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.i` @AccessFlag VOLATILE;
  `java.lang.Throwable` `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.j` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `long` v2 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `io.reactivex.rxjava3.core.Scheduler` v7 @kind object, `int` v8 , `boolean` v9 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastTimed$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fb6c4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4fb6ca.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4fb6ce.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.b` @type ^`long` := v2 @kind wide;
  #L4fb6d2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.c` @type ^`long` := v4 @kind wide;
  #L4fb6d6.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.d` @type ^`java.util.concurrent.TimeUnit` := v6 @kind object;
  #L4fb6da.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.e` @type ^`io.reactivex.rxjava3.core.Scheduler` := v7 @kind object;
  #L4fb6de.  v1:= new `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue`;
  #L4fb6e2.  call `<init>`(v1, v8) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L4fb6e8.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.f` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` := v1 @kind object;
  #L4fb6ec.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.g` @type ^`boolean` := v9 @kind boolean;
  #L4fb6f0.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a` v11 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastTimed$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4fb748.  v0:= 0I;
  #L4fb74a.  v1:= 1I;
  #L4fb74c.  call temp:= `compareAndSet`(v11, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4fb752.  v2:= temp;
  #L4fb754.  if v2 != 0 then goto L4fb75a;
  #L4fb758.  return @kind void;
  #L4fb75a.  v2:= v11.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fb75e.  v3:= v11.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.f` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4fb762.  v4:= v11.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.g` @type ^`boolean` @kind boolean;
  #L4fb766.  v5:= v11.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.e` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4fb76a.  v6:= v11.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4fb76e.  call temp:= `now`(v5, v6) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4fb774.  v5:= temp @kind wide;
  #L4fb776.  v7:= v11.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.c` @type ^`long` @kind wide;
  #L4fb77a.  v5:= v5 - v7 @kind long;
  #L4fb77c.  v7:= v11.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.i` @type ^`boolean` @kind boolean;
  #L4fb780.  if v7 == 0 then goto L4fb78c;
  #L4fb784.  call `clear`(v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4fb78a.  return @kind void;
  #L4fb78c.  if v4 != 0 then goto L4fb7a6;
  #L4fb790.  v7:= v11.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.j` @type ^`java.lang.Throwable` @kind object;
  #L4fb794.  if v7 == 0 then goto L4fb7a6;
  #L4fb798.  call `clear`(v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4fb79e.  call `onError`(v2, v7) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fb7a4.  return @kind void;
  #L4fb7a6.  call temp:= `poll`(v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4fb7ac.  v7:= temp @kind object;
  #L4fb7ae.  if v7 != 0 then goto L4fb7b6;
  #L4fb7b2.  v8:= 1I;
  #L4fb7b4.  goto L4fb7b8;
  #L4fb7b6.  v8:= 0I;
  #L4fb7b8.  if v8 == 0 then goto L4fb7d4;
  #L4fb7bc.  v0:= v11.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.j` @type ^`java.lang.Throwable` @kind object;
  #L4fb7c0.  if v0 == 0 then goto L4fb7cc;
  #L4fb7c4.  call `onError`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fb7ca.  goto L4fb7d2;
  #L4fb7cc.  call `onComplete`(v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4fb7d2.  return @kind void;
  #L4fb7d4.  call temp:= `poll`(v3) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4fb7da.  v8:= temp @kind object;
  #L4fb7dc.  v7:= (`java.lang.Long`) v7 @kind object;
  #L4fb7e0.  call temp:= `longValue`(v7) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4fb7e6.  v9:= temp @kind wide;
  #L4fb7e8.  v7:= lcmp(v9, v5);
  #L4fb7ec.  if v7 >= 0 then goto L4fb7f2;
  #L4fb7f0.  goto L4fb77c;
  #L4fb7f2.  call `onNext`(v2, v8) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4fb7f8.  goto L4fb77c;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastTimed$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fb704.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.i` @type ^`boolean` @kind boolean;
  #L4fb708.  if v0 != 0 then goto L4fb734;
  #L4fb70c.  v0:= 1I;
  #L4fb70e.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.i` @type ^`boolean` := v0 @kind boolean;
  #L4fb712.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.h` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fb716.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fb71c.  v1:= 0I;
  #L4fb71e.  call temp:= `compareAndSet`(v2, v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4fb724.  v0:= temp;
  #L4fb726.  if v0 == 0 then goto L4fb734;
  #L4fb72a.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.f` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4fb72e.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L4fb734.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastTimed$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb6ac.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.i` @type ^`boolean` @kind boolean;
  #L4fb6b0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastTimed$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L4fb80c.  call `a`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastTimed$a;.a:()V` @kind virtual;
  #L4fb812.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastTimed$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L4fb824.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.j` @type ^`java.lang.Throwable` := v1 @kind object;
  #L4fb828.  call `a`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastTimed$a;.a:()V` @kind virtual;
  #L4fb82e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a` v13 @kind this, `java.lang.Object` v14 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastTimed$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L4fb840.  v0:= v13.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.f` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L4fb844.  v1:= v13.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.e` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4fb848.  v2:= v13.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4fb84c.  call temp:= `now`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L4fb852.  v1:= temp @kind wide;
  #L4fb854.  v3:= v13.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.c` @type ^`long` @kind wide;
  #L4fb858.  v5:= v13.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.b` @type ^`long` @kind wide;
  #L4fb85c.  v7:= 1I;
  #L4fb85e.  v8:= 9223372036854775807L;
  #L4fb868.  v10:= lcmp(v5, v8);
  #L4fb86c.  if v10 != 0 then goto L4fb874;
  #L4fb870.  v8:= 1I;
  #L4fb872.  goto L4fb876;
  #L4fb874.  v8:= 0I;
  #L4fb876.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4fb87c.  v9:= temp @kind object;
  #L4fb87e.  call temp:= `offer`(v0, v9, v14) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4fb884.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.isEmpty:()Z` @kind virtual;
  #L4fb88a.  v14:= temp;
  #L4fb88c.  if v14 != 0 then goto L4fb8d6;
  #L4fb890.  call temp:= `peek`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.peek:()Ljava/lang/Object;` @kind virtual;
  #L4fb896.  v14:= temp @kind object;
  #L4fb898.  v14:= (`java.lang.Long`) v14 @kind object;
  #L4fb89c.  call temp:= `longValue`(v14) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4fb8a2.  v9:= temp @kind wide;
  #L4fb8a4.  v11:= v1 - v3 @kind long;
  #L4fb8a8.  v14:= lcmp(v9, v11);
  #L4fb8ac.  if v14 <= 0 then goto L4fb8c8;
  #L4fb8b0.  if v8 != 0 then goto L4fb8d6;
  #L4fb8b4.  call temp:= `size`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.size:()I` @kind virtual;
  #L4fb8ba.  v14:= temp;
  #L4fb8bc.  v14:= v14 ^> v7 @kind int;
  #L4fb8be.  v9:= (`long`) v14 @kind i2l;
  #L4fb8c0.  v14:= lcmp(v9, v5);
  #L4fb8c4.  if v14 <= 0 then goto L4fb8d6;
  #L4fb8c8.  call temp:= `poll`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4fb8ce.  call temp:= `poll`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4fb8d4.  goto L4fb884;
  #L4fb8d6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastTimed$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb8e8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.h` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4fb8ec.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4fb8f2.  v0:= temp;
  #L4fb8f4.  if v0 == 0 then goto L4fb906;
  #L4fb8f8.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.h` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4fb8fc.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fb900.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4fb906.  return @kind void;
}
