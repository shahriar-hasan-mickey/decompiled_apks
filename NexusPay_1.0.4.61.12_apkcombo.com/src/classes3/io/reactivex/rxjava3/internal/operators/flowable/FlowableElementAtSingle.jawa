record `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Single` @kind class, `io.reactivex.rxjava3.internal.fuseable.FuseToFlowable` @kind interface {
  `io.reactivex.rxjava3.core.Flowable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4c1fb4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @kind direct;
  #L4c1fba.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` := v1 @kind object;
  #L4c1fbe.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle.b` @type ^`long` := v2 @kind wide;
  #L4c1fc2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle.c` @type ^`java.lang.Object` := v4 @kind object;
  #L4c1fc6.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fuseToFlowable`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle` v7 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle;.fuseToFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4c1f80.  v6:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAt`;
  #L4c1f84.  v1:= v7.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4c1f88.  v2:= v7.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle.b` @type ^`long` @kind wide;
  #L4c1f8c.  v4:= v7.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle.c` @type ^`java.lang.Object` @kind object;
  #L4c1f90.  v5:= 1I;
  #L4c1f92.  v0:= v6 @kind object;
  #L4c1f94.  call `<init>`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAt;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/lang/Object;Z)V` @kind direct;
  #L4c1f9a.  call temp:= `onAssembly`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4c1fa0.  v0:= temp @kind object;
  #L4c1fa2.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle` v5 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4c1fd8.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle.a` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4c1fdc.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a`;
  #L4c1fe0.  v2:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle.b` @type ^`long` @kind wide;
  #L4c1fe4.  v4:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle.c` @type ^`java.lang.Object` @kind object;
  #L4c1fe8.  call `<init>`(v1, v6, v2, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;JLjava/lang/Object;)V` @kind direct;
  #L4c1fee.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4c1ff4.  return @kind void;
}
