record `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5038a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5038ae.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L5038b2.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.b` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` := v2 @kind object;
  #L5038b6.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5038c8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.b` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` @kind object;
  #L5038cc.  v0:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.i` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L5038d0.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L5038d6.  goto L5038e6;
  #L5038d8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5038da.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L5038e0.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L5038e6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L5038ea.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L5038f0.  return @kind void;
  catch `java.lang.Throwable` @[L5038c8..L5038d6] goto L5038d8;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L503910.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.d` @type ^`boolean` @kind boolean;
  #L503914.  if v0 != 0 then goto L503968;
  #L503918.  v0:= 1I;
  #L50391a.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.d` @type ^`boolean` := v0 @kind boolean;
  #L50391e.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.b` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` @kind object;
  #L503922.  v0:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.e` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L503926.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L50392c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L503930.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L503936.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.b` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` @kind object;
  #L50393a.  v0:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.f` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L50393e.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L503944.  goto L503968;
  #L503946.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L503948.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L50394e.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L503954.  goto L503968;
  #L503956.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L503958.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L50395e.  v1:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L503962.  call `onError`(v1, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L503968.  return @kind void;
  catch `java.lang.Throwable` @[L50391e..L50392c] goto L503956;
  catch `java.lang.Throwable` @[L503936..L503944] goto L503946;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L503994.  v0:= v5.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.d` @type ^`boolean` @kind boolean;
  #L503998.  if v0 == 0 then goto L5039a4;
  #L50399c.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L5039a2.  return @kind void;
  #L5039a4.  v0:= 1I;
  #L5039a6.  v5.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.d` @type ^`boolean` := v0 @kind boolean;
  #L5039aa.  v1:= v5.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.b` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` @kind object;
  #L5039ae.  v1:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.d` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L5039b2.  call `accept`(v1, v6) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L5039b8.  goto L5039de;
  #L5039ba.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5039bc.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L5039c2.  v2:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L5039c6.  v3:= 2I;
  #L5039c8.  v3:= new `java.lang.Throwable`[v3];
  #L5039cc.  v4:= 0I;
  #L5039ce.  v3[v4]:= v6 @kind object;
  #L5039d2.  v3[v0]:= v1 @kind object;
  #L5039d6.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L5039dc.  v6:= v2 @kind object;
  #L5039de.  v0:= v5.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L5039e2.  call `onError`(v0, v6) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5039e8.  v6:= v5.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.b` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` @kind object;
  #L5039ec.  v6:= v6.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.f` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L5039f0.  call `run`(v6) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L5039f6.  goto L503a06;
  #L5039f8.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5039fa.  call `throwIfFatal`(v6) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L503a00.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L503a06.  return @kind void;
  catch `java.lang.Throwable` @[L5039aa..L5039b8] goto L5039ba;
  catch `java.lang.Throwable` @[L5039e8..L5039f6] goto L5039f8;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503a30.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.d` @type ^`boolean` @kind boolean;
  #L503a34.  if v0 != 0 then goto L503a7e;
  #L503a38.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.b` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` @kind object;
  #L503a3c.  v0:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L503a40.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L503a46.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L503a4a.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L503a50.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.b` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` @kind object;
  #L503a54.  v0:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.c` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L503a58.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L503a5e.  goto L503a7e;
  #L503a60.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L503a62.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L503a68.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L503a6e.  goto L503a7e;
  #L503a70.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L503a72.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L503a78.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L503a7e.  return @kind void;
  catch `java.lang.Throwable` @[L503a38..L503a46] goto L503a70;
  catch `java.lang.Throwable` @[L503a50..L503a5e] goto L503a60;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L503aa8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L503aac.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L503ab2.  v0:= temp;
  #L503ab4.  if v0 == 0 then goto L503af8;
  #L503ab8.  v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.c` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L503abc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.b` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` @kind object;
  #L503ac0.  v0:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.g` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L503ac4.  call `accept`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L503aca.  v3:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L503ace.  call `onSubscribe`(v3, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L503ad4.  goto L503af8;
  #L503ad6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L503ad8.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L503ade.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L503ae4.  v3:= v2.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L503ae8.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.EmptySubscription.INSTANCE` @type ^`io.reactivex.rxjava3.internal.subscriptions.EmptySubscription` @kind object;
  #L503aec.  call `onSubscribe`(v3, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L503af2.  call `onError`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L503af8.  return @kind void;
  catch `java.lang.Throwable` @[L503abc..L503aca] goto L503ad6;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503b18.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.b` @type ^`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek` @kind object;
  #L503b1c.  v0:= v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek.h` @type ^`io.reactivex.rxjava3.functions.LongConsumer` @kind object;
  #L503b20.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/LongConsumer;.accept:(J)V` @kind interface;
  #L503b26.  goto L503b36;
  #L503b28.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L503b2a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L503b30.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L503b36.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L503b3a.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L503b40.  return @kind void;
  catch `java.lang.Throwable` @[L503b18..L503b26] goto L503b28;
}
