record `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$g` @kind class @AccessFlag FINAL extends `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$g.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$g.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$g.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$g` v0 @kind this, `java.lang.Object` v1 @kind object, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$g;.<init>:(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4bcfd4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4bcfda.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$g.b` @type ^`java.lang.Object` := v1 @kind object;
  #L4bcfde.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$g.a` @type ^`org.reactivestreams.Subscriber` := v2 @kind object;
  #L4bcfe2.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$g` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$g;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L4bcff4.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$g` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$g;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4bd008.  v0:= 0L;
  #L4bd00c.  v2:= lcmp(v4, v0);
  #L4bd010.  if v2 <= 0 then goto L4bd036;
  #L4bd014.  v4:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$g.c` @type ^`boolean` @kind boolean;
  #L4bd018.  if v4 != 0 then goto L4bd036;
  #L4bd01c.  v4:= 1I;
  #L4bd01e.  v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$g.c` @type ^`boolean` := v4 @kind boolean;
  #L4bd022.  v4:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$g.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4bd026.  v5:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$g.b` @type ^`java.lang.Object` @kind object;
  #L4bd02a.  call `onNext`(v4, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4bd030.  call `onComplete`(v4) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4bd036.  return @kind void;
}
