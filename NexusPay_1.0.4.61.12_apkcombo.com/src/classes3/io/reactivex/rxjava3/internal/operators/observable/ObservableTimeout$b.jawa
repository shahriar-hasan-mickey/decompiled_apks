record `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$d` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.disposables.SequentialDisposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.ObservableSource` `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.f` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fc748.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4fc74e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4fc752.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4fc756.  v1:= new `io.reactivex.rxjava3.internal.disposables.SequentialDisposable`;
  #L4fc75a.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L4fc760.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L4fc764.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.f` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v3 @kind object;
  #L4fc768.  v1:= new `java.util.concurrent.atomic.AtomicLong`;
  #L4fc76c.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L4fc772.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` := v1 @kind object;
  #L4fc776.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4fc77a.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4fc780.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L4fc784.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v3 @kind this, `long` v4 , `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.a:(JLjava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fc9c4.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4fc9c8.  v1:= 9223372036854775807L;
  #L4fc9d2.  call temp:= `compareAndSet`(v0, v4, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4fc9d8.  v4:= temp;
  #L4fc9da.  if v4 == 0 then goto L4fc9f0;
  #L4fc9de.  call temp:= `dispose`(v3) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4fc9e4.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fc9e8.  call `onError`(v4, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fc9ee.  goto L4fc9f6;
  #L4fc9f0.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4fc9f6.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.b:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fc970.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4fc974.  v1:= 9223372036854775807L;
  #L4fc97e.  call temp:= `compareAndSet`(v0, v4, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4fc984.  v4:= temp;
  #L4fc986.  if v4 == 0 then goto L4fc9b2;
  #L4fc98a.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4fc98e.  call temp:= `dispose`(v4) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4fc994.  v4:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.f` @type ^`io.reactivex.rxjava3.core.ObservableSource` @kind object;
  #L4fc998.  v5:= 0I;
  #L4fc99a.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.f` @type ^`io.reactivex.rxjava3.core.ObservableSource` := v5 @kind object;
  #L4fc99e.  v5:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed$a`;
  #L4fc9a2.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fc9a6.  call `<init>`(v5, v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/concurrent/atomic/AtomicReference;)V` @kind direct;
  #L4fc9ac.  call `subscribe`(v4, v5) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4fc9b2.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v3 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.c:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4fca08.  if v4 == 0 then goto L4fca30;
  #L4fca0c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$a`;
  #L4fca10.  v1:= 0L;
  #L4fca14.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$a;.<init>:(JLio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$d;)V` @kind direct;
  #L4fca1a.  v1:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4fca1e.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4fca24.  v1:= temp;
  #L4fca26.  if v1 == 0 then goto L4fca30;
  #L4fca2a.  call `subscribe`(v4, v0) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4fca30.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc798.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4fc79c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4fc7a2.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4fc7a8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4fc7ac.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4fc7b2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc720.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4fc726.  v0:= temp @kind object;
  #L4fc728.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4fc72c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4fc732.  v0:= temp;
  #L4fc734.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fc7c4.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4fc7c8.  v1:= 9223372036854775807L;
  #L4fc7d2.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4fc7d8.  v3:= temp @kind wide;
  #L4fc7da.  v0:= lcmp(v3, v1);
  #L4fc7de.  if v0 == 0 then goto L4fc800;
  #L4fc7e2.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4fc7e6.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4fc7ec.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fc7f0.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4fc7f6.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4fc7fa.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4fc800.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fc814.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4fc818.  v1:= 9223372036854775807L;
  #L4fc822.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4fc828.  v3:= temp @kind wide;
  #L4fc82a.  v0:= lcmp(v3, v1);
  #L4fc82e.  if v0 == 0 then goto L4fc852;
  #L4fc832.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4fc836.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4fc83c.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fc840.  call `onError`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fc846.  v6:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4fc84a.  call `dispose`(v6) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4fc850.  goto L4fc858;
  #L4fc852.  call `onError`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4fc858.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4fc86c.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4fc870.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4fc876.  v0:= temp @kind wide;
  #L4fc878.  v2:= 9223372036854775807L;
  #L4fc882.  v4:= lcmp(v0, v2);
  #L4fc886.  if v4 == 0 then goto L4fc936;
  #L4fc88a.  v4:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4fc88e.  v5:= 1L;
  #L4fc892.  v5:= v5 + v0 @kind long;
  #L4fc894.  call temp:= `compareAndSet`(v4, v0, v5) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4fc89a.  v0:= temp;
  #L4fc89c.  if v0 != 0 then goto L4fc8a2;
  #L4fc8a0.  goto L4fc936;
  #L4fc8a2.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4fc8a6.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4fc8ac.  v0:= temp @kind object;
  #L4fc8ae.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4fc8b2.  if v0 == 0 then goto L4fc8bc;
  #L4fc8b6.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fc8bc.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fc8c0.  call `onNext`(v0, v8) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4fc8c6.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4fc8ca.  call temp:= `apply`(v0, v8) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fc8d0.  v8:= temp @kind object;
  #L4fc8d2.  v0:= "The itemTimeoutIndicator returned a null ObservableSource." @kind object;
  #L4fc8d6.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4fc8dc.  v8:= temp @kind object;
  #L4fc8de.  v8:= (`io.reactivex.rxjava3.core.ObservableSource`) v8 @kind object;
  #L4fc8e2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$a`;
  #L4fc8e6.  call `<init>`(v0, v5, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$a;.<init>:(JLio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$d;)V` @kind direct;
  #L4fc8ec.  v1:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.rxjava3.internal.disposables.SequentialDisposable` @kind object;
  #L4fc8f0.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4fc8f6.  v1:= temp;
  #L4fc8f8.  if v1 == 0 then goto L4fc902;
  #L4fc8fc.  call `subscribe`(v8, v0) @signature `Lio/reactivex/rxjava3/core/ObservableSource;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind interface;
  #L4fc902.  return @kind void;
  #L4fc904.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fc906.  call `throwIfFatal`(v8) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4fc90c.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4fc910.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4fc916.  v0:= temp @kind object;
  #L4fc918.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4fc91c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4fc922.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4fc926.  call temp:= `getAndSet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4fc92c.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4fc930.  call `onError`(v0, v8) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4fc936.  return @kind void;
  catch `java.lang.Throwable` @[L4fc8c6..L4fc8e2] goto L4fc904;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout$b;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc954.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4fc958.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4fc95e.  return @kind void;
}
