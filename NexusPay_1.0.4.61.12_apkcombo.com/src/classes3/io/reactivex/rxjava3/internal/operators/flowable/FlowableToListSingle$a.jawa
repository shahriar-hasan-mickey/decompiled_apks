record `io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.b` @AccessFlag ;
  `java.util.Collection` `io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d6488.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d648e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4d6492.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.c` @type ^`java.util.Collection` := v2 @kind object;
  #L4d6496.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d64a8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4d64ac.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4d64b2.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4d64b6.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4d64ba.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d6464.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4d6468.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4d646c.  if v0 != v1 then goto L4d6474;
  #L4d6470.  v0:= 1I;
  #L4d6472.  goto L4d6476;
  #L4d6474.  v0:= 0I;
  #L4d6476.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d64cc.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4d64d0.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4d64d4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d64d8.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.c` @type ^`java.util.Collection` @kind object;
  #L4d64dc.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4d64e2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d64f4.  v0:= 0I;
  #L4d64f6.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.c` @type ^`java.util.Collection` := v0 @kind object;
  #L4d64fa.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4d64fe.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4d6502.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d6506.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4d650c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d6520.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.c` @type ^`java.util.Collection` @kind object;
  #L4d6524.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4d652a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d653c.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4d6540.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4d6546.  v0:= temp;
  #L4d6548.  if v0 == 0 then goto L4d656a;
  #L4d654c.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.b` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4d6550.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4d6554.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4d655a.  v0:= 9223372036854775807L;
  #L4d6564.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4d656a.  return @kind void;
}
