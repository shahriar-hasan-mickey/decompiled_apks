record `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `java.util.Collection` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c$a` v0 @kind this, `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed$c$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed$c;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4badf4.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c$a.b` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c` := v1 @kind object;
  #L4badf8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4badfe.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c$a.a` @type ^`java.util.Collection` := v2 @kind object;
  #L4bae02.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c$a` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed$c$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4bae14.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c$a.b` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c` @kind object;
  #L4bae18.  @monitorenter v0
  #L4bae1a.  v1:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c$a.b` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c` @kind object;
  #L4bae1e.  v1:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c.h` @type ^`java.util.List` @kind object;
  #L4bae22.  v2:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c$a.a` @type ^`java.util.Collection` @kind object;
  #L4bae26.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L4bae2c.  @monitorexit v0
  #L4bae2e.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c$a.b` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c` @kind object;
  #L4bae32.  v1:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c$a.a` @type ^`java.util.Collection` @kind object;
  #L4bae36.  v2:= 0I;
  #L4bae38.  v3:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c.g` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4bae3c.  call `b`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed$c;.b:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed$c;Ljava/lang/Object;ZLio/reactivex/rxjava3/disposables/Disposable;)V` @kind static;
  #L4bae42.  return @kind void;
  #L4bae44.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bae46.  @monitorexit v0
  #L4bae48.  throw v1;
  catch `java.lang.Throwable` @[L4bae1a..L4bae2e] goto L4bae44;
  catch `java.lang.Throwable` @[L4bae46..L4bae48] goto L4bae44;
}
