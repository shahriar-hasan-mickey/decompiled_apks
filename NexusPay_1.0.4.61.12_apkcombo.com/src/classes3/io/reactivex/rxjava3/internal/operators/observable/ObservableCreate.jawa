record `io.reactivex.rxjava3.internal.operators.observable.ObservableCreate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `io.reactivex.rxjava3.core.ObservableOnSubscribe` `io.reactivex.rxjava3.internal.operators.observable.ObservableCreate.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCreate` v0 @kind this, `io.reactivex.rxjava3.core.ObservableOnSubscribe` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCreate;.<init>:(Lio/reactivex/rxjava3/core/ObservableOnSubscribe;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ecbe8.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4ecbee.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableCreate.a` @type ^`io.reactivex.rxjava3.core.ObservableOnSubscribe` := v1 @kind object;
  #L4ecbf2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.observable.ObservableCreate` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCreate;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4ecc04.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCreate$a`;
  #L4ecc08.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCreate$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4ecc0e.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ecc14.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableCreate.a` @type ^`io.reactivex.rxjava3.core.ObservableOnSubscribe` @kind object;
  #L4ecc18.  call `subscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/ObservableOnSubscribe;.subscribe:(Lio/reactivex/rxjava3/core/ObservableEmitter;)V` @kind interface;
  #L4ecc1e.  goto L4ecc2e;
  #L4ecc20.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ecc22.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ecc28.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCreate$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ecc2e.  return @kind void;
  catch `java.lang.Throwable` @[L4ecc14..L4ecc1e] goto L4ecc20;
}
