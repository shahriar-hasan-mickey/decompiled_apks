record `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `int` v2 , `int` v3 , `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBuffer;.<init>:(Lio/reactivex/rxjava3/core/Flowable;IILio/reactivex/rxjava3/functions/Supplier;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4bb340.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4bb346.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.b` @type ^`int` := v2;
  #L4bb34a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.c` @type ^`int` := v3;
  #L4bb34e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.d` @type ^`io.reactivex.rxjava3.functions.Supplier` := v4 @kind object;
  #L4bb352.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBuffer;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4bb364.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.b` @type ^`int`;
  #L4bb368.  v1:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.c` @type ^`int`;
  #L4bb36c.  if v0 != v1 then goto L4bb38a;
  #L4bb370.  v1:= v5.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4bb374.  v2:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer$a`;
  #L4bb378.  v3:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.d` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4bb37c.  call `<init>`(v2, v6, v0, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBuffer$a;.<init>:(Lorg/reactivestreams/Subscriber;ILio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4bb382.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4bb388.  goto L4bb3d0;
  #L4bb38a.  if v1 <= v0 then goto L4bb3b0;
  #L4bb38e.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4bb392.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer$c`;
  #L4bb396.  v2:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.b` @type ^`int`;
  #L4bb39a.  v3:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.c` @type ^`int`;
  #L4bb39e.  v4:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.d` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4bb3a2.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBuffer$c;.<init>:(Lorg/reactivestreams/Subscriber;IILio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4bb3a8.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4bb3ae.  goto L4bb3d0;
  #L4bb3b0.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4bb3b4.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer$b`;
  #L4bb3b8.  v2:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.b` @type ^`int`;
  #L4bb3bc.  v3:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.c` @type ^`int`;
  #L4bb3c0.  v4:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.d` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4bb3c4.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBuffer$b;.<init>:(Lorg/reactivestreams/Subscriber;IILio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4bb3ca.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4bb3d0.  return @kind void;
}
