record `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.CompletableObserver` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.b` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a$a` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.e` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.f` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.g` @AccessFlag ;
  `io.reactivex.rxjava3.internal.fuseable.SimpleQueue` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.h` @AccessFlag ;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.i` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.j` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.k` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v0 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b43d4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4b43da.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` := v1 @kind object;
  #L4b43de.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.b` @type ^`int` := v2;
  #L4b43e2.  v1:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a$a`;
  #L4b43e6.  call `<init>`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;)V` @kind direct;
  #L4b43ec.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.d` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a$a` := v1 @kind object;
  #L4b43f0.  v1:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L4b43f4.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4b43fa.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v1 @kind object;
  #L4b43fe.  v1:= v2 ^> 2;
  #L4b4402.  v2:= v2 - v1 @kind int;
  #L4b4404.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.c` @type ^`int` := v2;
  #L4b4408.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b4444.  call temp:= `getAndIncrement`(v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L4b444a.  v0:= temp;
  #L4b444c.  if v0 == 0 then goto L4b4452;
  #L4b4450.  return @kind void;
  #L4b4452.  call temp:= `isDisposed`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.isDisposed:()Z` @kind virtual;
  #L4b4458.  v0:= temp;
  #L4b445a.  if v0 == 0 then goto L4b4460;
  #L4b445e.  return @kind void;
  #L4b4460.  v0:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.k` @type ^`boolean` @kind boolean;
  #L4b4464.  if v0 != 0 then goto L4b44c6;
  #L4b4468.  v0:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.j` @type ^`boolean` @kind boolean;
  #L4b446c.  v1:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.h` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` @kind object;
  #L4b4470.  call temp:= `poll`(v1) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4b4476.  v1:= temp @kind object;
  #L4b4478.  v1:= (`io.reactivex.rxjava3.core.CompletableSource`) v1 @kind object;
  #L4b447c.  v2:= 1I;
  #L4b447e.  if v1 != 0 then goto L4b4486;
  #L4b4482.  v3:= 1I;
  #L4b4484.  goto L4b4488;
  #L4b4486.  v3:= 0I;
  #L4b4488.  if v0 == 0 then goto L4b449c;
  #L4b448c.  if v3 == 0 then goto L4b449c;
  #L4b4490.  v0:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b4494.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L4b449a.  return @kind void;
  #L4b449c.  if v3 != 0 then goto L4b44c6;
  #L4b44a0.  v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.k` @type ^`boolean` := v2 @kind boolean;
  #L4b44a4.  v0:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.d` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a$a` @kind object;
  #L4b44a8.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4b44ae.  call `e`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.e:()V` @kind virtual;
  #L4b44b4.  goto L4b44c6;
  #L4b44b6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b44b8.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b44be.  call `c`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.c:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b44c4.  return @kind void;
  #L4b44c6.  call temp:= `decrementAndGet`(v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L4b44cc.  v0:= temp;
  #L4b44ce.  if v0 != 0 then goto L4b4452;
  #L4b44d2.  return @kind void;
  catch `java.lang.Throwable` @[L4b446c..L4b447c] goto L4b44b6;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.b:()V` @AccessFlag  {
    temp;
    v0;

  #L4b44f0.  v0:= 0I;
  #L4b44f2.  v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.k` @type ^`boolean` := v0 @kind boolean;
  #L4b44f6.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.a:()V` @kind virtual;
  #L4b44fc.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.c:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4b4510.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4b4514.  v1:= 0I;
  #L4b4516.  v2:= 1I;
  #L4b4518.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4b451e.  v0:= temp;
  #L4b4520.  if v0 == 0 then goto L4b453a;
  #L4b4524.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.i` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b4528.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4b452e.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b4532.  call `onError`(v0, v4) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b4538.  goto L4b4540;
  #L4b453a.  call `onError`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b4540.  return @kind void;
}
procedure `void` `d`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.d:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b45b8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.f` @type ^`int`;
  #L4b45bc.  if v0 != 0 then goto L4b45e2;
  #L4b45c0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.h` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` @kind object;
  #L4b45c4.  call temp:= `offer`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4b45ca.  v2:= temp;
  #L4b45cc.  if v2 != 0 then goto L4b45e2;
  #L4b45d0.  v2:= new `io.reactivex.rxjava3.exceptions.MissingBackpressureException`;
  #L4b45d4.  call `<init>`(v2) @signature `Lio/reactivex/rxjava3/exceptions/MissingBackpressureException;.<init>:()V` @kind direct;
  #L4b45da.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b45e0.  return @kind void;
  #L4b45e2.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.a:()V` @kind virtual;
  #L4b45e8.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b441c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.i` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b4420.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4b4426.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.d` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a$a` @kind object;
  #L4b442a.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b4430.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.e:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b46f8.  v0:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.f` @type ^`int`;
  #L4b46fc.  v1:= 1I;
  #L4b46fe.  if v0 == v1 then goto L4b4728;
  #L4b4702.  v0:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.g` @type ^`int`;
  #L4b4706.  v0:= v0 + v1 @kind int;
  #L4b4708.  v1:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.c` @type ^`int`;
  #L4b470c.  if v0 != v1 then goto L4b4724;
  #L4b4710.  v1:= 0I;
  #L4b4712.  v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.g` @type ^`int` := v1;
  #L4b4716.  v1:= v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.i` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b471a.  v2:= (`long`) v0 @kind i2l;
  #L4b471c.  call `request`(v1, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4b4722.  goto L4b4728;
  #L4b4724.  v4.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.g` @type ^`int` := v0;
  #L4b4728.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b43a8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.d` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a$a` @kind object;
  #L4b43ac.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b43b2.  v0:= temp @kind object;
  #L4b43b4.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4b43b8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b43be.  v0:= temp;
  #L4b43c0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b4554.  v0:= 1I;
  #L4b4556.  v1.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.j` @type ^`boolean` := v0 @kind boolean;
  #L4b455a.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.a:()V` @kind virtual;
  #L4b4560.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b4574.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4b4578.  v1:= 0I;
  #L4b457a.  v2:= 1I;
  #L4b457c.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4b4582.  v0:= temp;
  #L4b4584.  if v0 == 0 then goto L4b459e;
  #L4b4588.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.d` @type ^`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a$a` @kind object;
  #L4b458c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b4592.  v0:= v3.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b4596.  call `onError`(v0, v4) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b459c.  goto L4b45a4;
  #L4b459e.  call `onError`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b45a4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b45fc.  v1:= (`io.reactivex.rxjava3.core.CompletableSource`) v1 @kind object;
  #L4b4600.  call `d`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.d:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind virtual;
  #L4b4606.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a` v6 @kind this, `org.reactivestreams.Subscription` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4b4618.  v0:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.i` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b461c.  call temp:= `validate`(v0, v7) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4b4622.  v0:= temp;
  #L4b4624.  if v0 == 0 then goto L4b46e6;
  #L4b4628.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.i` @type ^`org.reactivestreams.Subscription` := v7 @kind object;
  #L4b462c.  v0:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.b` @type ^`int`;
  #L4b4630.  v1:= 2147483647I;
  #L4b4636.  if v0 != v1 then goto L4b4646;
  #L4b463a.  v2:= 9223372036854775807L;
  #L4b4644.  goto L4b4648;
  #L4b4646.  v2:= (`long`) v0 @kind i2l;
  #L4b4648.  v0:= instanceof @variable v7 @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind boolean;
  #L4b464c.  if v0 == 0 then goto L4b46a4;
  #L4b4650.  v0:= v7 @kind object;
  #L4b4652.  v0:= (`io.reactivex.rxjava3.internal.fuseable.QueueSubscription`) v0 @kind object;
  #L4b4656.  v4:= 3I;
  #L4b4658.  call temp:= `requestFusion`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/fuseable/QueueFuseable;.requestFusion:(I)I` @kind interface;
  #L4b465e.  v4:= temp;
  #L4b4660.  v5:= 1I;
  #L4b4662.  if v4 != v5 then goto L4b4684;
  #L4b4666.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.f` @type ^`int` := v4;
  #L4b466a.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.h` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L4b466e.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.j` @type ^`boolean` := v5 @kind boolean;
  #L4b4672.  v7:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b4676.  call `onSubscribe`(v7, v6) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b467c.  call `a`(v6) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$a;.a:()V` @kind virtual;
  #L4b4682.  return @kind void;
  #L4b4684.  v5:= 2I;
  #L4b4686.  if v4 != v5 then goto L4b46a4;
  #L4b468a.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.f` @type ^`int` := v4;
  #L4b468e.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.h` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L4b4692.  v0:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b4696.  call `onSubscribe`(v0, v6) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b469c.  call `request`(v7, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4b46a2.  return @kind void;
  #L4b46a4.  v0:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.b` @type ^`int`;
  #L4b46a8.  if v0 != v1 then goto L4b46c4;
  #L4b46ac.  v0:= new `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue`;
  #L4b46b0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4b46b6.  v1:= temp;
  #L4b46b8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L4b46be.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.h` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L4b46c2.  goto L4b46d6;
  #L4b46c4.  v0:= new `io.reactivex.rxjava3.internal.queue.SpscArrayQueue`;
  #L4b46c8.  v1:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.b` @type ^`int`;
  #L4b46cc.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.<init>:(I)V` @kind direct;
  #L4b46d2.  v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.h` @type ^`io.reactivex.rxjava3.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L4b46d6.  v0:= v6.`io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$a.a` @type ^`io.reactivex.rxjava3.core.CompletableObserver` @kind object;
  #L4b46da.  call `onSubscribe`(v0, v6) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b46e0.  call `request`(v7, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4b46e6.  return @kind void;
}
