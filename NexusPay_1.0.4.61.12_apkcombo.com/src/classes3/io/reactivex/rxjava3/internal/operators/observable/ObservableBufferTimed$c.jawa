record `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.observers.QueueDrainObserver` @kind class, `java.lang.Runnable` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.b` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.c` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.d` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler$Worker` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.f` @AccessFlag FINAL;
  `java.util.List` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.g` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.h` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object, `io.reactivex.rxjava3.functions.Supplier` v3 @kind object, `long` v4 , `long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object, `io.reactivex.rxjava3.core.Scheduler$Worker` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Supplier;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4e9604.  v0:= new `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue`;
  #L4e9608.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.<init>:()V` @kind direct;
  #L4e960e.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/internal/observers/QueueDrainObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/internal/fuseable/SimplePlainQueue;)V` @kind direct;
  #L4e9614.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.b` @type ^`io.reactivex.rxjava3.functions.Supplier` := v3 @kind object;
  #L4e9618.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.c` @type ^`long` := v4 @kind wide;
  #L4e961c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.d` @type ^`long` := v6 @kind wide;
  #L4e9620.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.e` @type ^`java.util.concurrent.TimeUnit` := v8 @kind object;
  #L4e9624.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.f` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` := v9 @kind object;
  #L4e9628.  v2:= new `java.util.LinkedList`;
  #L4e962c.  call `<init>`(v2) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L4e9632.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.g` @type ^`java.util.List` := v2 @kind object;
  #L4e9636.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` v0 @kind object, `java.lang.Object` v1 @kind object, `boolean` v2 , `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.b:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;Ljava/lang/Object;ZLio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4e967c.  call `fastPathOrderedEmit`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/observers/QueueDrainObserver;.fastPathOrderedEmit:(Ljava/lang/Object;ZLio/reactivex/rxjava3/disposables/Disposable;)V` @kind virtual;
  #L4e9682.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` v0 @kind object, `java.lang.Object` v1 @kind object, `boolean` v2 , `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.c:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;Ljava/lang/Object;ZLio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4e9694.  call `fastPathOrderedEmit`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/observers/QueueDrainObserver;.fastPathOrderedEmit:(Ljava/lang/Object;ZLio/reactivex/rxjava3/disposables/Disposable;)V` @kind virtual;
  #L4e969a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.a:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;

  #L4e9664.  call `onNext`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4e966a.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.accept:(Lio/reactivex/rxjava3/core/Observer;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4e9648.  v2:= (`java.util.Collection`) v2 @kind object;
  #L4e964c.  call `a`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.a:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/Collection;)V` @kind virtual;
  #L4e9652.  return @kind void;
}
procedure `void` `d`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.d:()V` @AccessFlag  {
    temp;
    v0;

  #L4e96ac.  @monitorenter v1
  #L4e96ae.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.g` @type ^`java.util.List` @kind object;
  #L4e96b2.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4e96b8.  @monitorexit v1
  #L4e96ba.  return @kind void;
  #L4e96bc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e96be.  @monitorexit v1
  #L4e96c0.  throw v0;
  catch `java.lang.Throwable` @[L4e96ae..L4e96c0] goto L4e96bc;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e96e0.  v0:= v1.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.cancelled` @type ^`boolean` @kind boolean;
  #L4e96e4.  if v0 != 0 then goto L4e9708;
  #L4e96e8.  v0:= 1I;
  #L4e96ea.  v1.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.cancelled` @type ^`boolean` := v0 @kind boolean;
  #L4e96ee.  call `d`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.d:()V` @kind virtual;
  #L4e96f4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.h` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e96f8.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e96fe.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.f` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4e9702.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e9708.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e95ec.  v0:= v1.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.cancelled` @type ^`boolean` @kind boolean;
  #L4e95f0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e971c.  @monitorenter v4
  #L4e971e.  v0:= new `java.util.ArrayList`;
  #L4e9722.  v1:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.g` @type ^`java.util.List` @kind object;
  #L4e9726.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4e972c.  v1:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.g` @type ^`java.util.List` @kind object;
  #L4e9730.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4e9736.  @monitorexit v4
  #L4e9738.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4e973e.  v0:= temp @kind object;
  #L4e9740.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e9746.  v1:= temp;
  #L4e9748.  if v1 == 0 then goto L4e9764;
  #L4e974c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e9752.  v1:= temp @kind object;
  #L4e9754.  v1:= (`java.util.Collection`) v1 @kind object;
  #L4e9758.  v2:= v4.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.queue` @type ^`io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind object;
  #L4e975c.  call temp:= `offer`(v2, v1) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4e9762.  goto L4e9740;
  #L4e9764.  v0:= 1I;
  #L4e9766.  v4.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L4e976a.  call temp:= `enter`(v4) @signature `Lio/reactivex/rxjava3/internal/observers/QueueDrainObserver;.enter:()Z` @kind virtual;
  #L4e9770.  v0:= temp;
  #L4e9772.  if v0 == 0 then goto L4e978a;
  #L4e9776.  v0:= v4.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.queue` @type ^`io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind object;
  #L4e977a.  v1:= v4.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e977e.  v2:= 0I;
  #L4e9780.  v3:= v4.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.f` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4e9784.  call `drainLoop`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.drainLoop:(Lio/reactivex/rxjava3/internal/fuseable/SimplePlainQueue;Lio/reactivex/rxjava3/core/Observer;ZLio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;)V` @kind static;
  #L4e978a.  return @kind void;
  #L4e978c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e978e.  @monitorexit v4
  #L4e9790.  throw v0;
  catch `java.lang.Throwable` @[L4e971e..L4e9738] goto L4e978c;
  catch `java.lang.Throwable` @[L4e978e..L4e9790] goto L4e978c;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e97b8.  v0:= 1I;
  #L4e97ba.  v1.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L4e97be.  call `d`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.d:()V` @kind virtual;
  #L4e97c4.  v0:= v1.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e97c8.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e97ce.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.f` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4e97d2.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e97d8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e97ec.  @monitorenter v2
  #L4e97ee.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.g` @type ^`java.util.List` @kind object;
  #L4e97f2.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4e97f8.  v0:= temp @kind object;
  #L4e97fa.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e9800.  v1:= temp;
  #L4e9802.  if v1 == 0 then goto L4e981a;
  #L4e9806.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e980c.  v1:= temp @kind object;
  #L4e980e.  v1:= (`java.util.Collection`) v1 @kind object;
  #L4e9812.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4e9818.  goto L4e97fa;
  #L4e981a.  @monitorexit v2
  #L4e981c.  return @kind void;
  #L4e981e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e9820.  @monitorexit v2
  #L4e9822.  throw v3;
  catch `java.lang.Throwable` @[L4e97ee..L4e9822] goto L4e981e;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` v8 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4e9840.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.h` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e9844.  call temp:= `validate`(v0, v9) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e984a.  v0:= temp;
  #L4e984c.  if v0 == 0 then goto L4e98da;
  #L4e9850.  v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.h` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v9 @kind object;
  #L4e9854.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4e9858.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4e985e.  v0:= temp @kind object;
  #L4e9860.  v1:= "The buffer supplied is null" @kind object;
  #L4e9864.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4e986a.  v0:= temp @kind object;
  #L4e986c.  v0:= (`java.util.Collection`) v0 @kind object;
  #L4e9870.  v9:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.g` @type ^`java.util.List` @kind object;
  #L4e9874.  call temp:= `add`(v9, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4e987a.  v9:= v8.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e987e.  call `onSubscribe`(v9, v8) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4e9884.  v1:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.f` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4e9888.  v5:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.d` @type ^`long` @kind wide;
  #L4e988c.  v7:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.e` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4e9890.  v2:= v8 @kind object;
  #L4e9892.  v3:= v5 @kind wide;
  #L4e9894.  call temp:= `schedulePeriodically`(v1, v2, v3, v5, v7) @signature `Lio/reactivex/rxjava3/core/Scheduler$Worker;.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4e989a.  v9:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.f` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4e989e.  v1:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c$b`;
  #L4e98a2.  call `<init>`(v1, v8, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c$b;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;Ljava/util/Collection;)V` @kind direct;
  #L4e98a8.  v2:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.c` @type ^`long` @kind wide;
  #L4e98ac.  v0:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.e` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4e98b0.  call temp:= `schedule`(v9, v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Scheduler$Worker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4e98b6.  goto L4e98da;
  #L4e98b8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e98ba.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4e98c0.  call `dispose`(v9) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e98c6.  v9:= v8.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e98ca.  call `error`(v0, v9) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4e98d0.  v9:= v8.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.f` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4e98d4.  call `dispose`(v9) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e98da.  return @kind void;
  catch `java.lang.Throwable` @[L4e9854..L4e9870] goto L4e98b8;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4e98f8.  v0:= v5.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.cancelled` @type ^`boolean` @kind boolean;
  #L4e98fc.  if v0 == 0 then goto L4e9902;
  #L4e9900.  return @kind void;
  #L4e9902.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4e9906.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4e990c.  v0:= temp @kind object;
  #L4e990e.  v1:= "The bufferSupplier returned a null buffer" @kind object;
  #L4e9912.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4e9918.  v0:= temp @kind object;
  #L4e991a.  v0:= (`java.util.Collection`) v0 @kind object;
  #L4e991e.  @monitorenter v5
  #L4e9920.  v1:= v5.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.cancelled` @type ^`boolean` @kind boolean;
  #L4e9924.  if v1 == 0 then goto L4e992c;
  #L4e9928.  @monitorexit v5
  #L4e992a.  return @kind void;
  #L4e992c.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.g` @type ^`java.util.List` @kind object;
  #L4e9930.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4e9936.  @monitorexit v5
  #L4e9938.  v1:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.f` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4e993c.  v2:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c$a`;
  #L4e9940.  call `<init>`(v2, v5, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c$a;.<init>:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;Ljava/util/Collection;)V` @kind direct;
  #L4e9946.  v3:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.c` @type ^`long` @kind wide;
  #L4e994a.  v0:= v5.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$c.e` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4e994e.  call temp:= `schedule`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Scheduler$Worker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4e9954.  return @kind void;
  #L4e9956.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e9958.  @monitorexit v5
  #L4e995a.  throw v0;
  #L4e995c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e995e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4e9964.  v1:= v5.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e9968.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e996e.  call `dispose`(v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$c;.dispose:()V` @kind virtual;
  #L4e9974.  return @kind void;
  catch `java.lang.Throwable` @[L4e9902..L4e991e] goto L4e995c;
  catch `java.lang.Throwable` @[L4e9920..L4e9938] goto L4e9956;
  catch `java.lang.Throwable` @[L4e9958..L4e995a] goto L4e9956;
}
