record `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiConsumer` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4dc88c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dc892.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4dc896.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.rxjava3.functions.BiConsumer` := v2 @kind object;
  #L4dc89a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dc8ac.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dc8b0.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4dc8b6.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4dc8ba.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4dc8be.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dc86c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dc870.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4dc876.  v0:= temp;
  #L4dc878.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dc8d0.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4dc8d4.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4dc8d8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.rxjava3.functions.BiConsumer` @kind object;
  #L4dc8dc.  v1:= 0I;
  #L4dc8de.  call `accept`(v0, v1, v1) @signature `Lio/reactivex/rxjava3/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L4dc8e4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dc8e8.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4dc8ee.  return @kind void;
  #L4dc8f0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4dc8f2.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4dc8f8.  v1:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dc8fc.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dc902.  return @kind void;
  catch `java.lang.Throwable` @[L4dc8d8..L4dc8e4] goto L4dc8f0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4dc920.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4dc924.  v4.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4dc928.  v0:= v4.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.rxjava3.functions.BiConsumer` @kind object;
  #L4dc92c.  v1:= 0I;
  #L4dc92e.  call `accept`(v0, v1, v5) @signature `Lio/reactivex/rxjava3/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L4dc934.  goto L4dc95c;
  #L4dc936.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4dc938.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4dc93e.  v1:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4dc942.  v2:= 2I;
  #L4dc944.  v2:= new `java.lang.Throwable`[v2];
  #L4dc948.  v3:= 0I;
  #L4dc94a.  v2[v3]:= v5 @kind object;
  #L4dc94e.  v5:= 1I;
  #L4dc950.  v2[v5]:= v0 @kind object;
  #L4dc954.  call `<init>`(v1, v2) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4dc95a.  v5:= v1 @kind object;
  #L4dc95c.  v0:= v4.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dc960.  call `onError`(v0, v5) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dc966.  return @kind void;
  catch `java.lang.Throwable` @[L4dc928..L4dc934] goto L4dc936;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dc984.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dc988.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4dc98e.  v0:= temp;
  #L4dc990.  if v0 == 0 then goto L4dc9a2;
  #L4dc994.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4dc998.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dc99c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4dc9a2.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnEvent$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dc9b4.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4dc9b8.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4dc9bc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.rxjava3.functions.BiConsumer` @kind object;
  #L4dc9c0.  v1:= 0I;
  #L4dc9c2.  call `accept`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L4dc9c8.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dc9cc.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4dc9d2.  return @kind void;
  #L4dc9d4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4dc9d6.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4dc9dc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dc9e0.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dc9e6.  return @kind void;
  catch `java.lang.Throwable` @[L4dc9bc..L4dc9c8] goto L4dc9d4;
}
