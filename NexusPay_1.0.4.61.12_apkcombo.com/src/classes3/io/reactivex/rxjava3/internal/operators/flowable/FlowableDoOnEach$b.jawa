record `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` @kind class {
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Action` v4 @kind object, `io.reactivex.rxjava3.functions.Action` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnEach$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c1624.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4c162a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.a` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L4c162e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v3 @kind object;
  #L4c1632.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.c` @type ^`io.reactivex.rxjava3.functions.Action` := v4 @kind object;
  #L4c1636.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.d` @type ^`io.reactivex.rxjava3.functions.Action` := v5 @kind object;
  #L4c163a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnEach$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c164c.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L4c1650.  if v0 == 0 then goto L4c1656;
  #L4c1654.  return @kind void;
  #L4c1656.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.c` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4c165a.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4c1660.  v0:= 1I;
  #L4c1662.  v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L4c1666.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c166a.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4c1670.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.d` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4c1674.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4c167a.  goto L4c168a;
  #L4c167c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c167e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c1684.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4c168a.  return @kind void;
  #L4c168c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c168e.  call `fail`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4c1694.  return @kind void;
  catch `java.lang.Throwable` @[L4c1656..L4c1660] goto L4c168c;
  catch `java.lang.Throwable` @[L4c1670..L4c167a] goto L4c167c;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b` v6 @kind this, `java.lang.Throwable` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnEach$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4c16c0.  v0:= v6.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L4c16c4.  if v0 == 0 then goto L4c16d0;
  #L4c16c8.  call `onError`(v7) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4c16ce.  return @kind void;
  #L4c16d0.  v0:= 1I;
  #L4c16d2.  v6.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L4c16d6.  v1:= 0I;
  #L4c16d8.  v2:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4c16dc.  call `accept`(v2, v7) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4c16e2.  goto L4c1710;
  #L4c16e4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c16e6.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c16ec.  v3:= v6.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c16f0.  v4:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4c16f4.  v5:= 2I;
  #L4c16f6.  v5:= new `java.lang.Throwable`[v5];
  #L4c16fa.  v5[v1]:= v7 @kind object;
  #L4c16fe.  v5[v0]:= v2 @kind object;
  #L4c1702.  call `<init>`(v4, v5) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4c1708.  call `onError`(v3, v4) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c170e.  v0:= 0I;
  #L4c1710.  if v0 == 0 then goto L4c171e;
  #L4c1714.  v0:= v6.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c1718.  call `onError`(v0, v7) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c171e.  v7:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.d` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4c1722.  call `run`(v7) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4c1728.  goto L4c1738;
  #L4c172a.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c172c.  call `throwIfFatal`(v7) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c1732.  call `onError`(v7) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4c1738.  return @kind void;
  catch `java.lang.Throwable` @[L4c16d8..L4c16e2] goto L4c16e4;
  catch `java.lang.Throwable` @[L4c171e..L4c1728] goto L4c172a;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnEach$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c1764.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L4c1768.  if v0 == 0 then goto L4c176e;
  #L4c176c.  return @kind void;
  #L4c176e.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int`;
  #L4c1772.  if v0 == 0 then goto L4c1784;
  #L4c1776.  v2:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c177a.  v0:= 0I;
  #L4c177c.  call `onNext`(v2, v0) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c1782.  return @kind void;
  #L4c1784.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.a` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4c1788.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4c178e.  v0:= v1.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4c1792.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4c1798.  return @kind void;
  #L4c179a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c179c.  call `fail`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4c17a2.  return @kind void;
  catch `java.lang.Throwable` @[L4c1784..L4c178e] goto L4c179a;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b` v6 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnEach$b;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4c1508.  v0:= 0I;
  #L4c150a.  v1:= 2I;
  #L4c150c.  v2:= 1I;
  #L4c150e.  v3:= v6.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L4c1512.  call temp:= `poll`(v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4c1518.  v3:= temp @kind object;
  #L4c151a.  if v3 == 0 then goto L4c157e;
  #L4c151e.  v4:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.a` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4c1522.  call `accept`(v4, v3) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4c1528.  v0:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.d` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4c152c.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4c1532.  goto L4c159a;
  #L4c1534.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c1536.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c153c.  v4:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4c1540.  call `accept`(v4, v3) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4c1546.  call temp:= `throwIfThrowable`(v3) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.throwIfThrowable:(Ljava/lang/Throwable;)Ljava/lang/Exception;` @kind static;
  #L4c154c.  v0:= temp @kind object;
  #L4c154e.  throw v0;
  #L4c1550.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c1552.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c1558.  v5:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4c155c.  v1:= new `java.lang.Throwable`[v1];
  #L4c1560.  v1[v0]:= v3 @kind object;
  #L4c1564.  v1[v2]:= v4 @kind object;
  #L4c1568.  call `<init>`(v5, v1) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4c156e.  throw v5;
  #L4c1570.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c1572.  v1:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.d` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4c1576.  call `run`(v1) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4c157c.  throw v0;
  #L4c157e.  v0:= v6.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int`;
  #L4c1582.  if v0 != v2 then goto L4c159a;
  #L4c1586.  v0:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.c` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4c158a.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4c1590.  v0:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.d` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4c1594.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4c159a.  return v3 @kind object;
  #L4c159c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c159e.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c15a4.  v4:= v6.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4c15a8.  call `accept`(v4, v3) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4c15ae.  call temp:= `throwIfThrowable`(v3) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.throwIfThrowable:(Ljava/lang/Throwable;)Ljava/lang/Exception;` @kind static;
  #L4c15b4.  v0:= temp @kind object;
  #L4c15b6.  throw v0;
  #L4c15b8.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c15ba.  call `throwIfFatal`(v4) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c15c0.  v5:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4c15c4.  v1:= new `java.lang.Throwable`[v1];
  #L4c15c8.  v1[v0]:= v3 @kind object;
  #L4c15cc.  v1[v2]:= v4 @kind object;
  #L4c15d0.  call `<init>`(v5, v1) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4c15d6.  throw v5;
  catch `java.lang.Throwable` @[L4c150e..L4c151a] goto L4c159c;
  catch `java.lang.Throwable` @[L4c151e..L4c1528] goto L4c1534;
  catch `java.lang.Throwable` @[L4c1536..L4c153c] goto L4c1570;
  catch `java.lang.Throwable` @[L4c153c..L4c1546] goto L4c1550;
  catch `java.lang.Throwable` @[L4c1546..L4c1570] goto L4c1570;
  catch `java.lang.Throwable` @[L4c15a4..L4c15ae] goto L4c15b8;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach$b` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnEach$b;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L4c14ec.  call temp:= `transitiveBoundaryFusion`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.transitiveBoundaryFusion:(I)I` @kind virtual;
  #L4c14f2.  v1:= temp;
  #L4c14f4.  return v1;
}
