record `io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L50312c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L503132.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L503136.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L50313a.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap$b;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50314c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L503150.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L503156.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503168.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.d` @type ^`boolean` @kind boolean;
  #L50316c.  if v0 == 0 then goto L503172;
  #L503170.  return @kind void;
  #L503172.  v0:= 1I;
  #L503174.  v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.d` @type ^`boolean` := v0 @kind boolean;
  #L503178.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L50317c.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L503182.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503194.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.d` @type ^`boolean` @kind boolean;
  #L503198.  if v0 == 0 then goto L5031a4;
  #L50319c.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L5031a2.  return @kind void;
  #L5031a4.  v0:= 1I;
  #L5031a6.  v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.d` @type ^`boolean` := v0 @kind boolean;
  #L5031aa.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L5031ae.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5031b4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5031c8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.d` @type ^`boolean` @kind boolean;
  #L5031cc.  if v0 == 0 then goto L5031d2;
  #L5031d0.  return @kind void;
  #L5031d2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L5031d6.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5031dc.  v2:= temp @kind object;
  #L5031de.  v0:= "The mapper returned a null value" @kind object;
  #L5031e2.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L5031e8.  v2:= temp @kind object;
  #L5031ea.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L5031ee.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L5031f4.  return @kind void;
  #L5031f6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5031f8.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L5031fe.  call `cancel`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap$b;.cancel:()V` @kind virtual;
  #L503204.  call `onError`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap$b;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L50320a.  return @kind void;
  catch `java.lang.Throwable` @[L5031d2..L5031ea] goto L5031f6;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap$b;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503228.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L50322c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L503232.  v0:= temp;
  #L503234.  if v0 == 0 then goto L503246;
  #L503238.  v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L50323c.  v2:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L503240.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L503246.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap$b;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503258.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L50325c.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L503262.  return @kind void;
}
