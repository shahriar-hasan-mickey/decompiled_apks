record `io.reactivex.rxjava3.internal.operators.flowable.FlowableDefer` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.flowable.FlowableDefer.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDefer` v0 @kind this, `io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDefer;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4bfca4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4bfcaa.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDefer.b` @type ^`io.reactivex.rxjava3.functions.Supplier` := v1 @kind object;
  #L4bfcae.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableDefer` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDefer;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4bfcc0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableDefer.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4bfcc4.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4bfcca.  v0:= temp @kind object;
  #L4bfccc.  v1:= "The publisher supplied is null" @kind object;
  #L4bfcd0.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4bfcd6.  v0:= temp @kind object;
  #L4bfcd8.  v0:= (`org.reactivestreams.Publisher`) v0 @kind object;
  #L4bfcdc.  call `subscribe`(v0, v3) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4bfce2.  return @kind void;
  #L4bfce4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bfce6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bfcec.  call `error`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4bfcf2.  return @kind void;
  catch `java.lang.Throwable` @[L4bfcc0..L4bfcdc] goto L4bfce4;
}
