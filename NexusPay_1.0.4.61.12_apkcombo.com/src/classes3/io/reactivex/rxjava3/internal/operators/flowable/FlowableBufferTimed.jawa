record `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.b` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.c` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.f` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.g` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.h` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `long` v2 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `io.reactivex.rxjava3.core.Scheduler` v7 @kind object, `io.reactivex.rxjava3.functions.Supplier` v8 @kind object, `int` v9 , `boolean` v10 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4bb228.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4bb22e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.b` @type ^`long` := v2 @kind wide;
  #L4bb232.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.c` @type ^`long` := v4 @kind wide;
  #L4bb236.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.d` @type ^`java.util.concurrent.TimeUnit` := v6 @kind object;
  #L4bb23a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.e` @type ^`io.reactivex.rxjava3.core.Scheduler` := v7 @kind object;
  #L4bb23e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.f` @type ^`io.reactivex.rxjava3.functions.Supplier` := v8 @kind object;
  #L4bb242.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.g` @type ^`int` := v9;
  #L4bb246.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.h` @type ^`boolean` := v10 @kind boolean;
  #L4bb24a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed` v11 @kind this, `org.reactivestreams.Subscriber` v12 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4bb25c.  v0:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.b` @type ^`long` @kind wide;
  #L4bb260.  v2:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.c` @type ^`long` @kind wide;
  #L4bb264.  v4:= lcmp(v0, v2);
  #L4bb268.  if v4 != 0 then goto L4bb2ac;
  #L4bb26c.  v0:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.g` @type ^`int`;
  #L4bb270.  v1:= 2147483647I;
  #L4bb276.  if v0 != v1 then goto L4bb2ac;
  #L4bb27a.  v0:= v11.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4bb27e.  v8:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$b`;
  #L4bb282.  v2:= new `io.reactivex.rxjava3.subscribers.SerializedSubscriber`;
  #L4bb286.  call `<init>`(v2, v12) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4bb28c.  v3:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.f` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4bb290.  v4:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.b` @type ^`long` @kind wide;
  #L4bb294.  v6:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4bb298.  v7:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.e` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4bb29c.  v1:= v8 @kind object;
  #L4bb29e.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Supplier;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4bb2a4.  call `subscribe`(v0, v8) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4bb2aa.  return @kind void;
  #L4bb2ac.  v0:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.e` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L4bb2b0.  call temp:= `createWorker`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @kind virtual;
  #L4bb2b6.  v9:= temp @kind object;
  #L4bb2b8.  v0:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.b` @type ^`long` @kind wide;
  #L4bb2bc.  v2:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.c` @type ^`long` @kind wide;
  #L4bb2c0.  v4:= lcmp(v0, v2);
  #L4bb2c4.  if v4 != 0 then goto L4bb2fe;
  #L4bb2c8.  v0:= v11.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4bb2cc.  v10:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$a`;
  #L4bb2d0.  v2:= new `io.reactivex.rxjava3.subscribers.SerializedSubscriber`;
  #L4bb2d4.  call `<init>`(v2, v12) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4bb2da.  v3:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.f` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4bb2de.  v4:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.b` @type ^`long` @kind wide;
  #L4bb2e2.  v6:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4bb2e6.  v7:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.g` @type ^`int`;
  #L4bb2ea.  v8:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.h` @type ^`boolean` @kind boolean;
  #L4bb2ee.  v1:= v10 @kind object;
  #L4bb2f0.  call `<init>`(v1, v2, v3, v4, v6, v7, v8, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Supplier;JLjava/util/concurrent/TimeUnit;IZLio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L4bb2f6.  call `subscribe`(v0, v10) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4bb2fc.  return @kind void;
  #L4bb2fe.  v0:= v11.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4bb302.  v10:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$c`;
  #L4bb306.  v2:= new `io.reactivex.rxjava3.subscribers.SerializedSubscriber`;
  #L4bb30a.  call `<init>`(v2, v12) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4bb310.  v3:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.f` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4bb314.  v4:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.b` @type ^`long` @kind wide;
  #L4bb318.  v6:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.c` @type ^`long` @kind wide;
  #L4bb31c.  v8:= v11.`io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4bb320.  v1:= v10 @kind object;
  #L4bb322.  call `<init>`(v1, v2, v3, v4, v6, v8, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed$c;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Supplier;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @kind direct;
  #L4bb328.  call `subscribe`(v0, v10) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4bb32e.  return @kind void;
}
