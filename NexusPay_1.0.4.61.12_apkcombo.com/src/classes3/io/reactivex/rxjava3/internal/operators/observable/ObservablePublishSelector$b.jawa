record `io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.b` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$b;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f5bac.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4f5bb2.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4f5bb6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f5bc8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f5bcc.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4f5bd2.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4f5bd8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f5b8c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f5b90.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4f5b96.  v0:= temp;
  #L4f5b98.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f5bec.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4f5bf2.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f5bf6.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4f5bfc.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f5c10.  call temp:= `dispose`(v1) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4f5c16.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f5c1a.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4f5c20.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f5c34.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f5c38.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4f5c3e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$b;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f5c50.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4f5c54.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4f5c5a.  v0:= temp;
  #L4f5c5c.  if v0 == 0 then goto L4f5c6e;
  #L4f5c60.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4f5c64.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$b.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4f5c68.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4f5c6e.  return @kind void;
}
