record `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.SingleObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Predicate` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilterSingle$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4dd29c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dd2a2.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4dd2a6.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` := v2 @kind object;
  #L4dd2aa.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilterSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dd2bc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dd2c0.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4dd2c4.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4dd2c8.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4dd2ce.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilterSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd27c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dd280.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4dd286.  v0:= temp;
  #L4dd288.  return v0;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilterSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd2e0.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dd2e4.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dd2ea.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilterSingle$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd2fc.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dd300.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4dd306.  v0:= temp;
  #L4dd308.  if v0 == 0 then goto L4dd31a;
  #L4dd30c.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4dd310.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dd314.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4dd31a.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilterSingle$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dd32c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.b` @type ^`io.reactivex.rxjava3.functions.Predicate` @kind object;
  #L4dd330.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4dd336.  v0:= temp;
  #L4dd338.  if v0 == 0 then goto L4dd348;
  #L4dd33c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dd340.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4dd346.  goto L4dd352;
  #L4dd348.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dd34c.  call `onComplete`(v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4dd352.  return @kind void;
  #L4dd354.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4dd356.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4dd35c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dd360.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dd366.  return @kind void;
  catch `java.lang.Throwable` @[L4dd32c..L4dd338] goto L4dd354;
}
