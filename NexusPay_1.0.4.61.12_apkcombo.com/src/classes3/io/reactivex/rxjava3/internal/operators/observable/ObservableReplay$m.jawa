record `io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$m` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$a` @kind class {
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$m.d` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$m.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$m` v0 @kind this, `int` v1 , `boolean` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay$m;.<init>:(IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f7c48.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay$a;.<init>:(Z)V` @kind direct;
  #L4f7c4e.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$m.d` @type ^`int` := v1;
  #L4f7c52.  return @kind void;
}
procedure `void` `k`(`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$m` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay$m;.k:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4f7c64.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$a.b` @type ^`int`;
  #L4f7c68.  v1:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableReplay$m.d` @type ^`int`;
  #L4f7c6c.  if v0 <= v1 then goto L4f7c76;
  #L4f7c70.  call `h`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay$a;.h:()V` @kind virtual;
  #L4f7c76.  return @kind void;
}
