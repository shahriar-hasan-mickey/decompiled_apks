record `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface {
  `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$b` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.c` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c` v0 @kind this, `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$b` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$c;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$b;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d9964.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4d996a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.a` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$b` := v1 @kind object;
  #L4d996e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.b` @type ^`int` := v2;
  #L4d9972.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$c;.a:()V` @AccessFlag  {
    temp;

  #L4d9984.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4d998a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$c;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d999c.  v0:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.a` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$b` @kind object;
  #L4d99a0.  v1:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.b` @type ^`int`;
  #L4d99a4.  v2:= v3.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.c` @type ^`boolean` @kind boolean;
  #L4d99a8.  call `b`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$b;.b:(IZ)V` @kind virtual;
  #L4d99ae.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$c;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d99c0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.a` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$b` @kind object;
  #L4d99c4.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.b` @type ^`int`;
  #L4d99c8.  call `c`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$b;.c:(ILjava/lang/Throwable;)V` @kind virtual;
  #L4d99ce.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$c;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d99e0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.c` @type ^`boolean` @kind boolean;
  #L4d99e4.  if v0 != 0 then goto L4d99ee;
  #L4d99e8.  v0:= 1I;
  #L4d99ea.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.c` @type ^`boolean` := v0 @kind boolean;
  #L4d99ee.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.a` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$b` @kind object;
  #L4d99f2.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c.b` @type ^`int`;
  #L4d99f6.  call `d`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$b;.d:(ILjava/lang/Object;)V` @kind virtual;
  #L4d99fc.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$c` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$c;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d9a10.  v0:= 9223372036854775807L;
  #L4d9a1a.  call temp:= `setOnce`(v2, v3, v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;J)Z` @kind static;
  #L4d9a20.  return @kind void;
}
