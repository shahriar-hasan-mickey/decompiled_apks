record `io.reactivex.rxjava3.internal.operators.completable.CompletableAmb` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Completable` @kind class {
  `io.reactivex.rxjava3.core.CompletableSource`[] `io.reactivex.rxjava3.internal.operators.completable.CompletableAmb.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Iterable` `io.reactivex.rxjava3.internal.operators.completable.CompletableAmb.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.completable.CompletableAmb` v0 @kind this, `io.reactivex.rxjava3.core.CompletableSource`[] v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableAmb;.<init>:([Lio/reactivex/rxjava3/core/CompletableSource;Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b3d8c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.<init>:()V` @kind direct;
  #L4b3d92.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableAmb.a` @type ^`io.reactivex.rxjava3.core.CompletableSource`[] := v1 @kind object;
  #L4b3d96.  v0.`io.reactivex.rxjava3.internal.operators.completable.CompletableAmb.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L4b3d9a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.completable.CompletableAmb` v9 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v10 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableAmb;.subscribeActual:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4b3dac.  v0:= v9.`io.reactivex.rxjava3.internal.operators.completable.CompletableAmb.a` @type ^`io.reactivex.rxjava3.core.CompletableSource`[] @kind object;
  #L4b3db0.  v1:= "One of the sources is null" @kind object;
  #L4b3db4.  v2:= 0I;
  #L4b3db6.  if v0 != 0 then goto L4b3e32;
  #L4b3dba.  v0:= 8I;
  #L4b3dbe.  v0:= new `io.reactivex.rxjava3.core.CompletableSource`[v0];
  #L4b3dc2.  v3:= v9.`io.reactivex.rxjava3.internal.operators.completable.CompletableAmb.b` @type ^`java.lang.Iterable` @kind object;
  #L4b3dc6.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b3dcc.  v3:= temp @kind object;
  #L4b3dce.  v4:= 0I;
  #L4b3dd0.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b3dd6.  v5:= temp;
  #L4b3dd8.  if v5 == 0 then goto L4b3e34;
  #L4b3ddc.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b3de2.  v5:= temp @kind object;
  #L4b3de4.  v5:= (`io.reactivex.rxjava3.core.CompletableSource`) v5 @kind object;
  #L4b3de8.  if v5 != 0 then goto L4b3dfe;
  #L4b3dec.  v0:= new `java.lang.NullPointerException`;
  #L4b3df0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b3df6.  call `error`(v0, v10) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind static;
  #L4b3dfc.  return @kind void;
  #L4b3dfe.  v6:= length @variable v0;
  #L4b3e00.  if v4 != v6 then goto L4b3e16;
  #L4b3e04.  v6:= v4 ^> 2;
  #L4b3e08.  v6:= v6 + v4 @kind int;
  #L4b3e0a.  v6:= new `io.reactivex.rxjava3.core.CompletableSource`[v6];
  #L4b3e0e.  call `arraycopy`(v0, v2, v6, v2, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4b3e14.  v0:= v6 @kind object;
  #L4b3e16.  v6:= v4 + 1;
  #L4b3e1a.  v0[v4]:= v5 @kind object;
  #L4b3e1e.  v4:= v6;
  #L4b3e20.  goto L4b3dd0;
  #L4b3e22.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b3e24.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3e2a.  call `error`(v0, v10) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind static;
  #L4b3e30.  return @kind void;
  #L4b3e32.  v4:= length @variable v0;
  #L4b3e34.  v3:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L4b3e38.  call `<init>`(v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4b3e3e.  call `onSubscribe`(v10, v3) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b3e44.  v5:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L4b3e48.  call `<init>`(v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L4b3e4e.  v6:= 0I;
  #L4b3e50.  if v6 >= v4 then goto L4b3eae;
  #L4b3e54.  v7:= v0[v6] @kind object;
  #L4b3e58.  call temp:= `isDisposed`(v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L4b3e5e.  v8:= temp;
  #L4b3e60.  if v8 == 0 then goto L4b3e66;
  #L4b3e64.  return @kind void;
  #L4b3e66.  if v7 != 0 then goto L4b3e98;
  #L4b3e6a.  v0:= new `java.lang.NullPointerException`;
  #L4b3e6e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b3e74.  v1:= 1I;
  #L4b3e76.  call temp:= `compareAndSet`(v5, v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L4b3e7c.  v1:= temp;
  #L4b3e7e.  if v1 == 0 then goto L4b3e90;
  #L4b3e82.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L4b3e88.  call `onError`(v10, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b3e8e.  goto L4b3e96;
  #L4b3e90.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b3e96.  return @kind void;
  #L4b3e98.  v8:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableAmb$a`;
  #L4b3e9c.  call `<init>`(v8, v5, v3, v10) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableAmb$a;.<init>:(Ljava/util/concurrent/atomic/AtomicBoolean;Lio/reactivex/rxjava3/disposables/CompositeDisposable;Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind direct;
  #L4b3ea2.  call `subscribe`(v7, v8) @signature `Lio/reactivex/rxjava3/core/CompletableSource;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind interface;
  #L4b3ea8.  v6:= v6 + 1;
  #L4b3eac.  goto L4b3e50;
  #L4b3eae.  if v4 != 0 then goto L4b3eb8;
  #L4b3eb2.  call `onComplete`(v10) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L4b3eb8.  return @kind void;
  catch `java.lang.Throwable` @[L4b3dc2..L4b3e1e] goto L4b3e22;
}
