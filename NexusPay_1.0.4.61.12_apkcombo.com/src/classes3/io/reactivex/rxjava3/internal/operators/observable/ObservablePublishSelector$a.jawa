record `io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface {
  `io.reactivex.rxjava3.subjects.PublishSubject` `io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$a.a` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$a` v0 @kind this, `io.reactivex.rxjava3.subjects.PublishSubject` v1 @kind object, `java.util.concurrent.atomic.AtomicReference` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$a;.<init>:(Lio/reactivex/rxjava3/subjects/PublishSubject;Ljava/util/concurrent/atomic/AtomicReference;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f5afc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f5b02.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$a.a` @type ^`io.reactivex.rxjava3.subjects.PublishSubject` := v1 @kind object;
  #L4f5b06.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$a.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v2 @kind object;
  #L4f5b0a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f5b1c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$a.a` @type ^`io.reactivex.rxjava3.subjects.PublishSubject` @kind object;
  #L4f5b20.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject;.onComplete:()V` @kind virtual;
  #L4f5b26.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f5b38.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$a.a` @type ^`io.reactivex.rxjava3.subjects.PublishSubject` @kind object;
  #L4f5b3c.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4f5b42.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f5b54.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$a.a` @type ^`io.reactivex.rxjava3.subjects.PublishSubject` @kind object;
  #L4f5b58.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L4f5b5e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f5b70.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector$a.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4f5b74.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4f5b7a.  return @kind void;
}
