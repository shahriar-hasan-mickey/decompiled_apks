record `io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ed9c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ed9ca.  v0.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4ed9ce.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ed9e0.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ed9e4.  v1:= `@@io.reactivex.rxjava3.internal.util.EmptyComponent.INSTANCE` @type ^`io.reactivex.rxjava3.internal.util.EmptyComponent` @kind object;
  #L4ed9e8.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4ed9ec.  call temp:= `asObserver`() @signature `Lio/reactivex/rxjava3/internal/util/EmptyComponent;.asObserver:()Lio/reactivex/rxjava3/core/Observer;` @kind static;
  #L4ed9f2.  v1:= temp @kind object;
  #L4ed9f4.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4ed9f8.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ed9fe.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ed9a4.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4ed9a8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4ed9ae.  v0:= temp;
  #L4ed9b0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4eda10.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4eda14.  v1:= `@@io.reactivex.rxjava3.internal.util.EmptyComponent.INSTANCE` @type ^`io.reactivex.rxjava3.internal.util.EmptyComponent` @kind object;
  #L4eda18.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4eda1c.  call temp:= `asObserver`() @signature `Lio/reactivex/rxjava3/internal/util/EmptyComponent;.asObserver:()Lio/reactivex/rxjava3/core/Observer;` @kind static;
  #L4eda22.  v1:= temp @kind object;
  #L4eda24.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4eda28.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4eda2e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4eda40.  v0:= v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4eda44.  v1:= `@@io.reactivex.rxjava3.internal.util.EmptyComponent.INSTANCE` @type ^`io.reactivex.rxjava3.internal.util.EmptyComponent` @kind object;
  #L4eda48.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4eda4c.  call temp:= `asObserver`() @signature `Lio/reactivex/rxjava3/internal/util/EmptyComponent;.asObserver:()Lio/reactivex/rxjava3/core/Observer;` @kind static;
  #L4eda52.  v1:= temp @kind object;
  #L4eda54.  v2.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4eda58.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4eda5e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eda70.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4eda74.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4eda7a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eda8c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4eda90.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4eda96.  v0:= temp;
  #L4eda98.  if v0 == 0 then goto L4edaaa;
  #L4eda9c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.b` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4edaa0.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableDetach$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4edaa4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4edaaa.  return @kind void;
}
