record `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.MaybeObserver` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.MaybeObserver` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Consumer` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Action` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` v0 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle$a;.<init>:(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4dca6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dca72.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` := v1 @kind object;
  #L4dca76.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` := v2 @kind object;
  #L4dca7a.  v0.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.c` @type ^`io.reactivex.rxjava3.functions.Action` := v3 @kind object;
  #L4dca7e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dca90.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.c` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4dca94.  call `run`(v0) @signature `Lio/reactivex/rxjava3/functions/Action;.run:()V` @kind interface;
  #L4dca9a.  goto L4dcaaa;
  #L4dca9c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4dca9e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4dcaa4.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4dcaaa.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dcaae.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4dcab4.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4dcab8.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v0 @kind object;
  #L4dcabc.  return @kind void;
  catch `java.lang.Throwable` @[L4dca90..L4dca9a] goto L4dca9c;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dca4c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dca50.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4dca56.  v0:= temp;
  #L4dca58.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dcadc.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dcae0.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4dcae4.  if v0 == v1 then goto L4dcaf6;
  #L4dcae8.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4dcaec.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dcaf0.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L4dcaf6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dcb08.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dcb0c.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4dcb10.  if v0 == v1 then goto L4dcb24;
  #L4dcb14.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4dcb18.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dcb1c.  call `onError`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4dcb22.  goto L4dcb2a;
  #L4dcb24.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4dcb2a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dcb3c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.b` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4dcb40.  call `accept`(v0, v2) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4dcb46.  v0:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dcb4a.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4dcb50.  v0:= temp;
  #L4dcb52.  if v0 == 0 then goto L4dcb64;
  #L4dcb56.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4dcb5a.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dcb5e.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4dcb64.  return @kind void;
  #L4dcb66.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4dcb68.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4dcb6e.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4dcb74.  v2:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4dcb78.  v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4dcb7c.  v2:= v1.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dcb80.  call `error`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/MaybeObserver;)V` @kind static;
  #L4dcb86.  return @kind void;
  catch `java.lang.Throwable` @[L4dcb3c..L4dcb46] goto L4dcb66;
}
procedure `void` `onSuccess`(`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDoOnLifecycle$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dcba4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4dcba8.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4dcbac.  if v0 == v1 then goto L4dcbbe;
  #L4dcbb0.  v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.d` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v1 @kind object;
  #L4dcbb4.  v0:= v2.`io.reactivex.rxjava3.internal.operators.maybe.MaybeDoOnLifecycle$a.a` @type ^`io.reactivex.rxjava3.core.MaybeObserver` @kind object;
  #L4dcbb8.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4dcbbe.  return @kind void;
}
