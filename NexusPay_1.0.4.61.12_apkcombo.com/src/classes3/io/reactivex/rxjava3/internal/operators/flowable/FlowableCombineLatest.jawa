record `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `org.reactivestreams.Publisher`[] `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.b` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.d` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;.<init>:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4bc370.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4bc376.  v0:= 0I;
  #L4bc378.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.b` @type ^`org.reactivestreams.Publisher`[] := v0 @kind object;
  #L4bc37c.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.c` @type ^`java.lang.Iterable` := v2 @kind object;
  #L4bc380.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.d` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L4bc384.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.e` @type ^`int` := v4;
  #L4bc388.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.f` @type ^`boolean` := v5 @kind boolean;
  #L4bc38c.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest` v0 @kind this, `org.reactivestreams.Publisher`[] v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;.<init>:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4bc3a0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4bc3a6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.b` @type ^`org.reactivestreams.Publisher`[] := v1 @kind object;
  #L4bc3aa.  v1:= 0I;
  #L4bc3ac.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.c` @type ^`java.lang.Iterable` := v1 @kind object;
  #L4bc3b0.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.d` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4bc3b4.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.e` @type ^`int` := v3;
  #L4bc3b8.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.f` @type ^`boolean` := v4 @kind boolean;
  #L4bc3bc.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest` v9 @kind this, `org.reactivestreams.Subscriber` v10 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4bc3d0.  v0:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.b` @type ^`org.reactivestreams.Publisher`[] @kind object;
  #L4bc3d4.  v1:= 0I;
  #L4bc3d6.  if v0 != 0 then goto L4bc44c;
  #L4bc3da.  v0:= 8I;
  #L4bc3de.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L4bc3e2.  v2:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.c` @type ^`java.lang.Iterable` @kind object;
  #L4bc3e6.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4bc3ec.  v2:= temp @kind object;
  #L4bc3ee.  v3:= 0I;
  #L4bc3f0.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4bc3f6.  v4:= temp;
  #L4bc3f8.  if v4 == 0 then goto L4bc44e;
  #L4bc3fc.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4bc402.  v4:= temp @kind object;
  #L4bc404.  v4:= (`org.reactivestreams.Publisher`) v4 @kind object;
  #L4bc408.  v5:= length @variable v0;
  #L4bc40a.  if v3 != v5 then goto L4bc420;
  #L4bc40e.  v5:= v3 ^> 2;
  #L4bc412.  v5:= v5 + v3 @kind int;
  #L4bc414.  v5:= new `org.reactivestreams.Publisher`[v5];
  #L4bc418.  call `arraycopy`(v0, v1, v5, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4bc41e.  v0:= v5 @kind object;
  #L4bc420.  v5:= v3 + 1;
  #L4bc424.  v6:= "The Iterator returned a null Publisher" @kind object;
  #L4bc428.  call temp:= `requireNonNull`(v4, v6) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4bc42e.  v4:= temp @kind object;
  #L4bc430.  v4:= (`org.reactivestreams.Publisher`) v4 @kind object;
  #L4bc434.  v0[v3]:= v4 @kind object;
  #L4bc438.  v3:= v5;
  #L4bc43a.  goto L4bc3f0;
  #L4bc43c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4bc43e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4bc444.  call `error`(v0, v10) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4bc44a.  return @kind void;
  #L4bc44c.  v3:= length @variable v0;
  #L4bc44e.  v8:= v3;
  #L4bc450.  if v8 != 0 then goto L4bc45c;
  #L4bc454.  call `complete`(v10) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4bc45a.  return @kind void;
  #L4bc45c.  v2:= 1I;
  #L4bc45e.  if v8 != v2 then goto L4bc482;
  #L4bc462.  v0:= v0[v1] @kind object;
  #L4bc466.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMap$b`;
  #L4bc46a.  v2:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$c`;
  #L4bc46e.  call `<init>`(v2, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$c;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;)V` @kind direct;
  #L4bc474.  call `<init>`(v1, v10, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMap$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4bc47a.  call `subscribe`(v0, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4bc480.  return @kind void;
  #L4bc482.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest$a`;
  #L4bc486.  v4:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.d` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4bc48a.  v6:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.e` @type ^`int`;
  #L4bc48e.  v7:= v9.`io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest.f` @type ^`boolean` @kind boolean;
  #L4bc492.  v2:= v1 @kind object;
  #L4bc494.  v3:= v10 @kind object;
  #L4bc496.  v5:= v8;
  #L4bc498.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;IIZ)V` @kind direct;
  #L4bc49e.  call `onSubscribe`(v10, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4bc4a4.  call `l`(v1, v0, v8) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest$a;.l:([Lorg/reactivestreams/Publisher;I)V` @kind virtual;
  #L4bc4aa.  return @kind void;
  catch `java.lang.Throwable` @[L4bc3e2..L4bc438] goto L4bc43c;
}
