record `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.c` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.e` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;JLjava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c1e10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c1e16.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4c1e1a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.b` @type ^`long` := v2 @kind wide;
  #L4c1e1e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.c` @type ^`java.lang.Object` := v4 @kind object;
  #L4c1e22.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c1e34.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c1e38.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4c1e3e.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4c1e42.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4c1e46.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c1dec.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c1df0.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4c1df4.  if v0 != v1 then goto L4c1dfc;
  #L4c1df8.  v0:= 1I;
  #L4c1dfa.  goto L4c1dfe;
  #L4c1dfc.  v0:= 0I;
  #L4c1dfe.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c1e58.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4c1e5c.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4c1e60.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.f` @type ^`boolean` @kind boolean;
  #L4c1e64.  if v0 != 0 then goto L4c1e96;
  #L4c1e68.  v0:= 1I;
  #L4c1e6a.  v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.f` @type ^`boolean` := v0 @kind boolean;
  #L4c1e6e.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L4c1e72.  if v0 == 0 then goto L4c1e82;
  #L4c1e76.  v1:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4c1e7a.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4c1e80.  goto L4c1e96;
  #L4c1e82.  v0:= v2.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4c1e86.  v1:= new `java.util.NoSuchElementException`;
  #L4c1e8a.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4c1e90.  call `onError`(v0, v1) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c1e96.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c1ea8.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.f` @type ^`boolean` @kind boolean;
  #L4c1eac.  if v0 == 0 then goto L4c1eb8;
  #L4c1eb0.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4c1eb6.  return @kind void;
  #L4c1eb8.  v0:= 1I;
  #L4c1eba.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.f` @type ^`boolean` := v0 @kind boolean;
  #L4c1ebe.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4c1ec2.  v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4c1ec6.  v0:= v1.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4c1eca.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c1ed0.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4c1ee4.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.f` @type ^`boolean` @kind boolean;
  #L4c1ee8.  if v0 == 0 then goto L4c1eee;
  #L4c1eec.  return @kind void;
  #L4c1eee.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.e` @type ^`long` @kind wide;
  #L4c1ef2.  v2:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.b` @type ^`long` @kind wide;
  #L4c1ef6.  v4:= lcmp(v0, v2);
  #L4c1efa.  if v4 != 0 then goto L4c1f22;
  #L4c1efe.  v0:= 1I;
  #L4c1f00.  v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.f` @type ^`boolean` := v0 @kind boolean;
  #L4c1f04.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c1f08.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4c1f0e.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4c1f12.  v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4c1f16.  v0:= v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4c1f1a.  call `onSuccess`(v0, v6) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4c1f20.  return @kind void;
  #L4c1f22.  v2:= 1L;
  #L4c1f26.  v0:= v0 + v2 @kind long;
  #L4c1f28.  v5.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.e` @type ^`long` := v0 @kind wide;
  #L4c1f2c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a` v4 @kind this, `org.reactivestreams.Subscription` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4c1f40.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4c1f44.  call temp:= `validate`(v0, v5) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4c1f4a.  v0:= temp;
  #L4c1f4c.  if v0 == 0 then goto L4c1f6e;
  #L4c1f50.  v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.d` @type ^`org.reactivestreams.Subscription` := v5 @kind object;
  #L4c1f54.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4c1f58.  call `onSubscribe`(v0, v4) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4c1f5e.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle$a.b` @type ^`long` @kind wide;
  #L4c1f62.  v2:= 1L;
  #L4c1f66.  v0:= v0 + v2 @kind long;
  #L4c1f68.  call `request`(v5, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4c1f6e.  return @kind void;
}
