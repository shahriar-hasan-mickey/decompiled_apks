record `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.observers.QueueDrainObserver` @kind class, `java.lang.Runnable` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.b` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.c` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.d` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.f` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler$Worker` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.g` @AccessFlag FINAL;
  `java.util.Collection` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.h` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.i` @AccessFlag ;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.j` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.k` @AccessFlag ;
  `long` `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.l` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object, `io.reactivex.rxjava3.functions.Supplier` v3 @kind object, `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `int` v7 , `boolean` v8 , `io.reactivex.rxjava3.core.Scheduler$Worker` v9 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Supplier;JLjava/util/concurrent/TimeUnit;IZLio/reactivex/rxjava3/core/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4e8e10.  v0:= new `io.reactivex.rxjava3.internal.queue.MpscLinkedQueue`;
  #L4e8e14.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;.<init>:()V` @kind direct;
  #L4e8e1a.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/internal/observers/QueueDrainObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/internal/fuseable/SimplePlainQueue;)V` @kind direct;
  #L4e8e20.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.b` @type ^`io.reactivex.rxjava3.functions.Supplier` := v3 @kind object;
  #L4e8e24.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.c` @type ^`long` := v4 @kind wide;
  #L4e8e28.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.d` @type ^`java.util.concurrent.TimeUnit` := v6 @kind object;
  #L4e8e2c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.e` @type ^`int` := v7;
  #L4e8e30.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.f` @type ^`boolean` := v8 @kind boolean;
  #L4e8e34.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.g` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` := v9 @kind object;
  #L4e8e38.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$a;.a:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;

  #L4e8e68.  call `onNext`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4e8e6e.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$a;.accept:(Lio/reactivex/rxjava3/core/Observer;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4e8e4c.  v2:= (`java.util.Collection`) v2 @kind object;
  #L4e8e50.  call `a`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$a;.a:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/Collection;)V` @kind virtual;
  #L4e8e56.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e8e80.  v0:= v1.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.cancelled` @type ^`boolean` @kind boolean;
  #L4e8e84.  if v0 != 0 then goto L4e8eb4;
  #L4e8e88.  v0:= 1I;
  #L4e8e8a.  v1.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.cancelled` @type ^`boolean` := v0 @kind boolean;
  #L4e8e8e.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.j` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e8e92.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e8e98.  v0:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.g` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4e8e9c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e8ea2.  @monitorenter v1
  #L4e8ea4.  v0:= 0I;
  #L4e8ea6.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.h` @type ^`java.util.Collection` := v0 @kind object;
  #L4e8eaa.  @monitorexit v1
  #L4e8eac.  goto L4e8eb4;
  #L4e8eae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e8eb0.  @monitorexit v1
  #L4e8eb2.  throw v0;
  #L4e8eb4.  return @kind void;
  catch `java.lang.Throwable` @[L4e8ea6..L4e8eb2] goto L4e8eae;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e8df8.  v0:= v1.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.cancelled` @type ^`boolean` @kind boolean;
  #L4e8dfc.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4e8ed4.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.g` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4e8ed8.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e8ede.  @monitorenter v3
  #L4e8ee0.  v0:= v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.h` @type ^`java.util.Collection` @kind object;
  #L4e8ee4.  v1:= 0I;
  #L4e8ee6.  v3.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.h` @type ^`java.util.Collection` := v1 @kind object;
  #L4e8eea.  @monitorexit v3
  #L4e8eec.  if v0 == 0 then goto L4e8f1c;
  #L4e8ef0.  v1:= v3.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.queue` @type ^`io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind object;
  #L4e8ef4.  call temp:= `offer`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L4e8efa.  v0:= 1I;
  #L4e8efc.  v3.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L4e8f00.  call temp:= `enter`(v3) @signature `Lio/reactivex/rxjava3/internal/observers/QueueDrainObserver;.enter:()Z` @kind virtual;
  #L4e8f06.  v0:= temp;
  #L4e8f08.  if v0 == 0 then goto L4e8f1c;
  #L4e8f0c.  v0:= v3.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.queue` @type ^`io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` @kind object;
  #L4e8f10.  v1:= v3.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e8f14.  v2:= 0I;
  #L4e8f16.  call `drainLoop`(v0, v1, v2, v3, v3) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.drainLoop:(Lio/reactivex/rxjava3/internal/fuseable/SimplePlainQueue;Lio/reactivex/rxjava3/core/Observer;ZLio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;)V` @kind static;
  #L4e8f1c.  return @kind void;
  #L4e8f1e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e8f20.  @monitorexit v3
  #L4e8f22.  throw v0;
  catch `java.lang.Throwable` @[L4e8ee0..L4e8eec] goto L4e8f1e;
  catch `java.lang.Throwable` @[L4e8f20..L4e8f22] goto L4e8f1e;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e8f48.  @monitorenter v1
  #L4e8f4a.  v0:= 0I;
  #L4e8f4c.  v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.h` @type ^`java.util.Collection` := v0 @kind object;
  #L4e8f50.  @monitorexit v1
  #L4e8f52.  v0:= v1.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e8f56.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e8f5c.  v2:= v1.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.g` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4e8f60.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e8f66.  return @kind void;
  #L4e8f68.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e8f6a.  @monitorexit v1
  #L4e8f6c.  throw v2;
  catch `java.lang.Throwable` @[L4e8f4c..L4e8f52] goto L4e8f68;
  catch `java.lang.Throwable` @[L4e8f6a..L4e8f6c] goto L4e8f68;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4e8f94.  @monitorenter v7
  #L4e8f96.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.h` @type ^`java.util.Collection` @kind object;
  #L4e8f9a.  if v0 != 0 then goto L4e8fa2;
  #L4e8f9e.  @monitorexit v7
  #L4e8fa0.  return @kind void;
  #L4e8fa2.  call temp:= `add`(v0, v8) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4e8fa8.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L4e8fae.  v8:= temp;
  #L4e8fb0.  v1:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.e` @type ^`int`;
  #L4e8fb4.  if v8 >= v1 then goto L4e8fbc;
  #L4e8fb8.  @monitorexit v7
  #L4e8fba.  return @kind void;
  #L4e8fbc.  v8:= 0I;
  #L4e8fbe.  v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.h` @type ^`java.util.Collection` := v8 @kind object;
  #L4e8fc2.  v1:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.k` @type ^`long` @kind wide;
  #L4e8fc6.  v3:= 1L;
  #L4e8fca.  v1:= v1 + v3 @kind long;
  #L4e8fcc.  v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.k` @type ^`long` := v1 @kind wide;
  #L4e8fd0.  @monitorexit v7
  #L4e8fd2.  v8:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.f` @type ^`boolean` @kind boolean;
  #L4e8fd6.  if v8 == 0 then goto L4e8fe4;
  #L4e8fda.  v8:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.i` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e8fde.  call `dispose`(v8) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e8fe4.  v8:= 0I;
  #L4e8fe6.  call `fastPathOrderedEmit`(v7, v0, v8, v7) @signature `Lio/reactivex/rxjava3/internal/observers/QueueDrainObserver;.fastPathOrderedEmit:(Ljava/lang/Object;ZLio/reactivex/rxjava3/disposables/Disposable;)V` @kind virtual;
  #L4e8fec.  v8:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4e8ff0.  call temp:= `get`(v8) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4e8ff6.  v8:= temp @kind object;
  #L4e8ff8.  v0:= "The buffer supplied is null" @kind object;
  #L4e8ffc.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4e9002.  v8:= temp @kind object;
  #L4e9004.  v8:= (`java.util.Collection`) v8 @kind object;
  #L4e9008.  @monitorenter v7
  #L4e900a.  v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.h` @type ^`java.util.Collection` := v8 @kind object;
  #L4e900e.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.l` @type ^`long` @kind wide;
  #L4e9012.  v0:= v0 + v3 @kind long;
  #L4e9014.  v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.l` @type ^`long` := v0 @kind wide;
  #L4e9018.  @monitorexit v7
  #L4e901a.  v8:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.f` @type ^`boolean` @kind boolean;
  #L4e901e.  if v8 == 0 then goto L4e903e;
  #L4e9022.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.g` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4e9026.  v4:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.c` @type ^`long` @kind wide;
  #L4e902a.  v6:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4e902e.  v1:= v7 @kind object;
  #L4e9030.  v2:= v4 @kind wide;
  #L4e9032.  call temp:= `schedulePeriodically`(v0, v1, v2, v4, v6) @signature `Lio/reactivex/rxjava3/core/Scheduler$Worker;.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4e9038.  v8:= temp @kind object;
  #L4e903a.  v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.i` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v8 @kind object;
  #L4e903e.  return @kind void;
  #L4e9040.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e9042.  @monitorexit v7
  #L4e9044.  throw v8;
  #L4e9046.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e9048.  call `throwIfFatal`(v8) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4e904e.  v0:= v7.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e9052.  call `onError`(v0, v8) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e9058.  call `dispose`(v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$a;.dispose:()V` @kind virtual;
  #L4e905e.  return @kind void;
  #L4e9060.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e9062.  @monitorexit v7
  #L4e9064.  throw v8;
  catch `java.lang.Throwable` @[L4e8f96..L4e8fd2] goto L4e9060;
  catch `java.lang.Throwable` @[L4e8fec..L4e9008] goto L4e9046;
  catch `java.lang.Throwable` @[L4e900a..L4e901a] goto L4e9040;
  catch `java.lang.Throwable` @[L4e9042..L4e9044] goto L4e9040;
  catch `java.lang.Throwable` @[L4e9062..L4e9064] goto L4e9060;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a` v7 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4e90a8.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.j` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4e90ac.  call temp:= `validate`(v0, v8) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4e90b2.  v0:= temp;
  #L4e90b4.  if v0 == 0 then goto L4e9126;
  #L4e90b8.  v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.j` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v8 @kind object;
  #L4e90bc.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4e90c0.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4e90c6.  v0:= temp @kind object;
  #L4e90c8.  v1:= "The buffer supplied is null" @kind object;
  #L4e90cc.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4e90d2.  v0:= temp @kind object;
  #L4e90d4.  v0:= (`java.util.Collection`) v0 @kind object;
  #L4e90d8.  v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.h` @type ^`java.util.Collection` := v0 @kind object;
  #L4e90dc.  v8:= v7.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e90e0.  call `onSubscribe`(v8, v7) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4e90e6.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.g` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4e90ea.  v4:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.c` @type ^`long` @kind wide;
  #L4e90ee.  v6:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4e90f2.  v1:= v7 @kind object;
  #L4e90f4.  v2:= v4 @kind wide;
  #L4e90f6.  call temp:= `schedulePeriodically`(v0, v1, v2, v4, v6) @signature `Lio/reactivex/rxjava3/core/Scheduler$Worker;.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4e90fc.  v8:= temp @kind object;
  #L4e90fe.  v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.i` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v8 @kind object;
  #L4e9102.  goto L4e9126;
  #L4e9104.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e9106.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4e910c.  call `dispose`(v8) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e9112.  v8:= v7.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e9116.  call `error`(v0, v8) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4e911c.  v8:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.g` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4e9120.  call `dispose`(v8) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4e9126.  return @kind void;
  catch `java.lang.Throwable` @[L4e90bc..L4e90d8] goto L4e9104;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a` v7 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4e9144.  v0:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L4e9148.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4e914e.  v0:= temp @kind object;
  #L4e9150.  v1:= "The bufferSupplier returned a null buffer" @kind object;
  #L4e9154.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4e915a.  v0:= temp @kind object;
  #L4e915c.  v0:= (`java.util.Collection`) v0 @kind object;
  #L4e9160.  @monitorenter v7
  #L4e9162.  v1:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.h` @type ^`java.util.Collection` @kind object;
  #L4e9166.  if v1 == 0 then goto L4e918c;
  #L4e916a.  v2:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.k` @type ^`long` @kind wide;
  #L4e916e.  v4:= v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.l` @type ^`long` @kind wide;
  #L4e9172.  v6:= lcmp(v2, v4);
  #L4e9176.  if v6 == 0 then goto L4e917c;
  #L4e917a.  goto L4e918c;
  #L4e917c.  v7.`io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$a.h` @type ^`java.util.Collection` := v0 @kind object;
  #L4e9180.  @monitorexit v7
  #L4e9182.  v0:= 0I;
  #L4e9184.  call `fastPathOrderedEmit`(v7, v1, v0, v7) @signature `Lio/reactivex/rxjava3/internal/observers/QueueDrainObserver;.fastPathOrderedEmit:(Ljava/lang/Object;ZLio/reactivex/rxjava3/disposables/Disposable;)V` @kind virtual;
  #L4e918a.  return @kind void;
  #L4e918c.  @monitorexit v7
  #L4e918e.  return @kind void;
  #L4e9190.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e9192.  @monitorexit v7
  #L4e9194.  throw v0;
  #L4e9196.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e9198.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4e919e.  call `dispose`(v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$a;.dispose:()V` @kind virtual;
  #L4e91a4.  v1:= v7.`io.reactivex.rxjava3.internal.observers.QueueDrainObserver.downstream` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4e91a8.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4e91ae.  return @kind void;
  catch `java.lang.Throwable` @[L4e9144..L4e9160] goto L4e9196;
  catch `java.lang.Throwable` @[L4e9162..L4e9182] goto L4e9190;
  catch `java.lang.Throwable` @[L4e918c..L4e9194] goto L4e9190;
}
