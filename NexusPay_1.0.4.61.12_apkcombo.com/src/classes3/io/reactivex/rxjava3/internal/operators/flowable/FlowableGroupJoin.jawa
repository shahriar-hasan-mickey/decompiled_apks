record `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin.d` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Function` v4 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupJoin;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4c79c4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4c79ca.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin.b` @type ^`org.reactivestreams.Publisher` := v2 @kind object;
  #L4c79ce.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin.c` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L4c79d2.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin.d` @type ^`io.reactivex.rxjava3.functions.Function` := v4 @kind object;
  #L4c79d6.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin.e` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v5 @kind object;
  #L4c79da.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupJoin;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4c79ec.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin$a`;
  #L4c79f0.  v1:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4c79f4.  v2:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin.d` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4c79f8.  v3:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin.e` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L4c79fc.  call `<init>`(v0, v5, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupJoin$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4c7a02.  call `onSubscribe`(v5, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4c7a08.  v5:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin$d`;
  #L4c7a0c.  v1:= 1I;
  #L4c7a0e.  call `<init>`(v5, v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupJoin$d;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupJoin$b;Z)V` @kind direct;
  #L4c7a14.  v1:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin$a.d` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4c7a18.  call temp:= `add`(v1, v5) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4c7a1e.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin$d`;
  #L4c7a22.  v2:= 0I;
  #L4c7a24.  call `<init>`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupJoin$d;.<init>:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupJoin$b;Z)V` @kind direct;
  #L4c7a2a.  v0:= v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin$a.d` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L4c7a2e.  call temp:= `add`(v0, v1) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4c7a34.  v0:= v4.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4c7a38.  call `subscribe`(v0, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4c7a3e.  v5:= v4.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L4c7a42.  call `subscribe`(v5, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4c7a48.  return @kind void;
}
