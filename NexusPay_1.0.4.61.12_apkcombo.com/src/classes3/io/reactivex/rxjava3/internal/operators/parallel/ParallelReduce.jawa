record `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.parallel.ParallelFlowable` @kind class {
  `io.reactivex.rxjava3.parallel.ParallelFlowable` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Supplier` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.BiFunction` `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce` v0 @kind this, `io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind object, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L50422c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.<init>:()V` @kind direct;
  #L504232.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` := v1 @kind object;
  #L504236.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce.b` @type ^`io.reactivex.rxjava3.functions.Supplier` := v2 @kind object;
  #L50423a.  v0.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce.c` @type ^`io.reactivex.rxjava3.functions.BiFunction` := v3 @kind object;
  #L50423e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce` v3 @kind this, `org.reactivestreams.Subscriber`[] v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce;.a:([Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L504250.  v0:= length @variable v4;
  #L504252.  v1:= 0I;
  #L504254.  if v1 >= v0 then goto L504268;
  #L504258.  v2:= v4[v1] @kind object;
  #L50425c.  call `error`(v5, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L504262.  v1:= v1 + 1;
  #L504266.  goto L504254;
  #L504268.  return @kind void;
}
procedure `int` `parallelism`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce;.parallelism:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50420c.  v0:= v1.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` @kind object;
  #L504210.  call temp:= `parallelism`(v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L504216.  v0:= temp;
  #L504218.  return v0;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce` v7 @kind this, `org.reactivestreams.Subscriber`[] v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L50427c.  call temp:= `validate`(v7, v8) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.validate:([Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L504282.  v0:= temp;
  #L504284.  if v0 != 0 then goto L50428a;
  #L504288.  return @kind void;
  #L50428a.  v0:= length @variable v8;
  #L50428c.  v1:= new `org.reactivestreams.Subscriber`[v0];
  #L504290.  v2:= 0I;
  #L504292.  if v2 >= v0 then goto L5042da;
  #L504296.  v3:= v7.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce.b` @type ^`io.reactivex.rxjava3.functions.Supplier` @kind object;
  #L50429a.  call temp:= `get`(v3) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L5042a0.  v3:= temp @kind object;
  #L5042a2.  v4:= "The initialSupplier returned a null value" @kind object;
  #L5042a6.  call temp:= `requireNonNull`(v3, v4) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L5042ac.  v3:= temp @kind object;
  #L5042ae.  v4:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce$a`;
  #L5042b2.  v5:= v8[v2] @kind object;
  #L5042b6.  v6:= v7.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce.c` @type ^`io.reactivex.rxjava3.functions.BiFunction` @kind object;
  #L5042ba.  call `<init>`(v4, v5, v3, v6) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce$a;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L5042c0.  v1[v2]:= v4 @kind object;
  #L5042c4.  v2:= v2 + 1;
  #L5042c8.  goto L504292;
  #L5042ca.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5042cc.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L5042d2.  call `a`(v7, v8, v0) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce;.a:([Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V` @kind virtual;
  #L5042d8.  return @kind void;
  #L5042da.  v8:= v7.`io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` @kind object;
  #L5042de.  call `subscribe`(v8, v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L5042e4.  return @kind void;
  catch `java.lang.Throwable` @[L504296..L5042ae] goto L5042ca;
}
