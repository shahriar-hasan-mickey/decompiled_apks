record `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.internal.operators.flowable.a` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.c` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.d` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.e` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 , `boolean` v5 , `io.reactivex.rxjava3.functions.Function` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;IZLio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4c7068.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/a;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4c706e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4c7072.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.c` @type ^`io.reactivex.rxjava3.functions.Function` := v3 @kind object;
  #L4c7076.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.d` @type ^`int` := v4;
  #L4c707a.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.e` @type ^`boolean` := v5 @kind boolean;
  #L4c707e.  v0.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.f` @type ^`io.reactivex.rxjava3.functions.Function` := v6 @kind object;
  #L4c7082.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy` v10 @kind this, `org.reactivestreams.Subscriber` v11 @kind object) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4c7094.  v0:= v10.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.f` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4c7098.  if v0 != 0 then goto L4c70ae;
  #L4c709c.  v0:= 0I;
  #L4c709e.  v1:= new `java.util.concurrent.ConcurrentHashMap`;
  #L4c70a2.  call `<init>`(v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L4c70a8.  v9:= v0 @kind object;
  #L4c70aa.  v8:= v1 @kind object;
  #L4c70ac.  goto L4c70d4;
  #L4c70ae.  v0:= new `java.util.concurrent.ConcurrentLinkedQueue`;
  #L4c70b2.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V` @kind direct;
  #L4c70b8.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy$a`;
  #L4c70bc.  call `<init>`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy$a;.<init>:(Ljava/util/Queue;)V` @kind direct;
  #L4c70c2.  v2:= v10.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.f` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4c70c6.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c70cc.  v1:= temp @kind object;
  #L4c70ce.  v1:= (`java.util.Map`) v1 @kind object;
  #L4c70d2.  goto L4c70a8;
  #L4c70d4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber`;
  #L4c70d8.  v4:= v10.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4c70dc.  v5:= v10.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4c70e0.  v6:= v10.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.d` @type ^`int`;
  #L4c70e4.  v7:= v10.`io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.e` @type ^`boolean` @kind boolean;
  #L4c70e8.  v2:= v0 @kind object;
  #L4c70ea.  v3:= v11 @kind object;
  #L4c70ec.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy$GroupBySubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;IZLjava/util/Map;Ljava/util/Queue;)V` @kind direct;
  #L4c70f2.  v11:= v10.`io.reactivex.rxjava3.internal.operators.flowable.a.source` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4c70f6.  call `subscribe`(v11, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4c70fc.  return @kind void;
  #L4c70fe.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4c7100.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4c7106.  v1:= `@@io.reactivex.rxjava3.internal.util.EmptyComponent.INSTANCE` @type ^`io.reactivex.rxjava3.internal.util.EmptyComponent` @kind object;
  #L4c710a.  call `onSubscribe`(v11, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4c7110.  call `onError`(v11, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4c7116.  return @kind void;
  catch `java.lang.Throwable` @[L4c7094..L4c70d2] goto L4c70fe;
}
