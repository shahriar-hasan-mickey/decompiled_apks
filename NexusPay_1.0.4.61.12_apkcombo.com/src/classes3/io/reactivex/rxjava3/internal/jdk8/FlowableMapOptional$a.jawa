record `io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber` @kind class {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a` v0 @kind this, `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$a;.<init>:(Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ae868.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableConditionalSubscriber;.<init>:(Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;)V` @kind direct;
  #L4ae86e.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a.a` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4ae872.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae884.  call temp:= `tryOnNext`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$a;.tryOnNext:(Ljava/lang/Object;)Z` @kind virtual;
  #L4ae88a.  v3:= temp;
  #L4ae88c.  if v3 != 0 then goto L4ae89e;
  #L4ae890.  v3:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4ae894.  v0:= 1L;
  #L4ae898.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4ae89e.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ae7f8.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L4ae7fc.  call temp:= `poll`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4ae802.  v0:= temp @kind object;
  #L4ae804.  if v0 != 0 then goto L4ae80c;
  #L4ae808.  v0:= 0I;
  #L4ae80a.  return v0 @kind object;
  #L4ae80c.  v1:= v3.`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ae810.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ae816.  v0:= temp @kind object;
  #L4ae818.  v1:= "The mapper returned a null Optional" @kind object;
  #L4ae81c.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ae822.  v0:= temp @kind object;
  #L4ae824.  v0:= (`java.util.Optional`) v0 @kind object;
  #L4ae828.  call temp:= `isPresent`(v0) @signature `Ljava/util/Optional;.isPresent:()Z` @kind virtual;
  #L4ae82e.  v1:= temp;
  #L4ae830.  if v1 == 0 then goto L4ae83e;
  #L4ae834.  call temp:= `get`(v0) @signature `Ljava/util/Optional;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ae83a.  v0:= temp @kind object;
  #L4ae83c.  return v0 @kind object;
  #L4ae83e.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.sourceMode` @type ^`int`;
  #L4ae842.  v1:= 2I;
  #L4ae844.  if v0 != v1 then goto L4ae7f8;
  #L4ae848.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L4ae84c.  v1:= 1L;
  #L4ae850.  call `request`(v0, v1) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4ae856.  goto L4ae7f8;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L4ae7dc.  call temp:= `transitiveBoundaryFusion`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableConditionalSubscriber;.transitiveBoundaryFusion:(I)I` @kind virtual;
  #L4ae7e2.  v1:= temp;
  #L4ae7e4.  return v1;
}
procedure `boolean` `tryOnNext`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$a;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae750.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.done` @type ^`boolean` @kind boolean;
  #L4ae754.  v1:= 1I;
  #L4ae756.  if v0 == 0 then goto L4ae75c;
  #L4ae75a.  return v1;
  #L4ae75c.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.sourceMode` @type ^`int`;
  #L4ae760.  if v0 == 0 then goto L4ae772;
  #L4ae764.  v3:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.downstream` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind object;
  #L4ae768.  v0:= 0I;
  #L4ae76a.  call `onNext`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4ae770.  return v1;
  #L4ae772.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$a.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ae776.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ae77c.  v3:= temp @kind object;
  #L4ae77e.  v0:= "The mapper returned a null Optional" @kind object;
  #L4ae782.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ae788.  v3:= temp @kind object;
  #L4ae78a.  v3:= (`java.util.Optional`) v3 @kind object;
  #L4ae78e.  call temp:= `isPresent`(v3) @signature `Ljava/util/Optional;.isPresent:()Z` @kind virtual;
  #L4ae794.  v0:= temp;
  #L4ae796.  if v0 == 0 then goto L4ae7b0;
  #L4ae79a.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableConditionalSubscriber.downstream` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind object;
  #L4ae79e.  call temp:= `get`(v3) @signature `Ljava/util/Optional;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ae7a4.  v3:= temp @kind object;
  #L4ae7a6.  call temp:= `tryOnNext`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;.tryOnNext:(Ljava/lang/Object;)Z` @kind interface;
  #L4ae7ac.  v3:= temp;
  #L4ae7ae.  return v3;
  #L4ae7b0.  v3:= 0I;
  #L4ae7b2.  return v3;
  #L4ae7b4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ae7b6.  call `fail`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableConditionalSubscriber;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ae7bc.  return v1;
  catch `java.lang.Throwable` @[L4ae772..L4ae78e] goto L4ae7b4;
}
