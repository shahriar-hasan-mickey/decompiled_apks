record `io.reactivex.rxjava3.internal.jdk8.ObservableFromStream` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `java.util.stream.Stream` `io.reactivex.rxjava3.internal.jdk8.ObservableFromStream.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.ObservableFromStream` v0 @kind this, `java.util.stream.Stream` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.<init>:(Ljava/util/stream/Stream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b01c4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4b01ca.  v0.`io.reactivex.rxjava3.internal.jdk8.ObservableFromStream.a` @type ^`java.util.stream.Stream` := v1 @kind object;
  #L4b01ce.  return @kind void;
}
procedure `void` `a`(`java.lang.AutoCloseable` v0 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.a:(Ljava/lang/AutoCloseable;)V` @AccessFlag STATIC {
    temp;

  #L4b01e0.  call `close`(v0) @signature `Ljava/lang/AutoCloseable;.close:()V` @kind interface;
  #L4b01e6.  goto L4b01f6;
  #L4b01e8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b01ea.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b01f0.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b01f6.  return @kind void;
  catch `java.lang.Throwable` @[L4b01e0..L4b01e6] goto L4b01e8;
}
procedure `void` `subscribeStream`(`io.reactivex.rxjava3.core.Observer` v2 @kind object, `java.util.stream.Stream` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.subscribeStream:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/stream/Stream;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4b0230.  call temp:= `iterator`(v3) @signature `Ljava/util/stream/Stream;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b0236.  v0:= temp @kind object;
  #L4b0238.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b023e.  v1:= temp;
  #L4b0240.  if v1 != 0 then goto L4b0252;
  #L4b0244.  call `complete`(v2) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4b024a.  call `a`(v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.a:(Ljava/lang/AutoCloseable;)V` @kind static;
  #L4b0250.  return @kind void;
  #L4b0252.  v1:= new `io.reactivex.rxjava3.internal.jdk8.ObservableFromStream$a`;
  #L4b0256.  call `<init>`(v1, v2, v0, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/Iterator;Ljava/lang/AutoCloseable;)V` @kind direct;
  #L4b025c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4b0262.  call `a`(v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream$a;.a:()V` @kind virtual;
  #L4b0268.  return @kind void;
  #L4b026a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b026c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b0272.  call `error`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4b0278.  call `a`(v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.a:(Ljava/lang/AutoCloseable;)V` @kind static;
  #L4b027e.  return @kind void;
  catch `java.lang.Throwable` @[L4b0230..L4b0250] goto L4b026a;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.jdk8.ObservableFromStream` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4b0214.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ObservableFromStream.a` @type ^`java.util.stream.Stream` @kind object;
  #L4b0218.  call `subscribeStream`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.subscribeStream:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/stream/Stream;)V` @kind static;
  #L4b021e.  return @kind void;
}
