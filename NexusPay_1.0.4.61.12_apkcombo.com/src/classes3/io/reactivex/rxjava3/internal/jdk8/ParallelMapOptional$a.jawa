record `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v0 @kind this, `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.<init>:(Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b0bf4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b0bfa.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.a` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` := v1 @kind object;
  #L4b0bfe.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4b0c02.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b0c14.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b0c18.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4b0c1e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b0c30.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.d` @type ^`boolean` @kind boolean;
  #L4b0c34.  if v0 == 0 then goto L4b0c3a;
  #L4b0c38.  return @kind void;
  #L4b0c3a.  v0:= 1I;
  #L4b0c3c.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4b0c40.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.a` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind object;
  #L4b0c44.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4b0c4a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b0c5c.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.d` @type ^`boolean` @kind boolean;
  #L4b0c60.  if v0 == 0 then goto L4b0c6c;
  #L4b0c64.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b0c6a.  return @kind void;
  #L4b0c6c.  v0:= 1I;
  #L4b0c6e.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4b0c72.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.a` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind object;
  #L4b0c76.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b0c7c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b0c90.  call temp:= `tryOnNext`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.tryOnNext:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b0c96.  v3:= temp;
  #L4b0c98.  if v3 != 0 then goto L4b0caa;
  #L4b0c9c.  v3:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b0ca0.  v0:= 1L;
  #L4b0ca4.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4b0caa.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b0cbc.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b0cc0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4b0cc6.  v0:= temp;
  #L4b0cc8.  if v0 == 0 then goto L4b0cda;
  #L4b0ccc.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L4b0cd0.  v2:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.a` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind object;
  #L4b0cd4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/FlowableSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4b0cda.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b0cec.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b0cf0.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4b0cf6.  return @kind void;
}
procedure `boolean` `tryOnNext`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b0b70.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.d` @type ^`boolean` @kind boolean;
  #L4b0b74.  v1:= 0I;
  #L4b0b76.  if v0 == 0 then goto L4b0b7c;
  #L4b0b7a.  return v1;
  #L4b0b7c.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4b0b80.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4b0b86.  v3:= temp @kind object;
  #L4b0b88.  v0:= "The mapper returned a null value" @kind object;
  #L4b0b8c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4b0b92.  v3:= temp @kind object;
  #L4b0b94.  v3:= (`java.util.Optional`) v3 @kind object;
  #L4b0b98.  call temp:= `isPresent`(v3) @signature `Ljava/util/Optional;.isPresent:()Z` @kind virtual;
  #L4b0b9e.  v0:= temp;
  #L4b0ba0.  if v0 == 0 then goto L4b0bbe;
  #L4b0ba4.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a.a` @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind object;
  #L4b0ba8.  call temp:= `get`(v3) @signature `Ljava/util/Optional;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b0bae.  v3:= temp @kind object;
  #L4b0bb0.  call temp:= `tryOnNext`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;.tryOnNext:(Ljava/lang/Object;)Z` @kind interface;
  #L4b0bb6.  v3:= temp;
  #L4b0bb8.  if v3 == 0 then goto L4b0bbe;
  #L4b0bbc.  v1:= 1I;
  #L4b0bbe.  return v1;
  #L4b0bc0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b0bc2.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b0bc8.  call `cancel`(v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.cancel:()V` @kind virtual;
  #L4b0bce.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b0bd4.  return v1;
  catch `java.lang.Throwable` @[L4b0b7c..L4b0b98] goto L4b0bc0;
}
