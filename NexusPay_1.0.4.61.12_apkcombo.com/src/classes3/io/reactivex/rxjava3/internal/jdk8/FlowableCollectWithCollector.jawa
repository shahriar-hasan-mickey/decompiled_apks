record `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `io.reactivex.rxjava3.core.Flowable` `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector.b` @AccessFlag FINAL;
  `java.util.stream.Collector` `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `java.util.stream.Collector` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollector;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/util/stream/Collector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ad9d4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4ad9da.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector.b` @type ^`io.reactivex.rxjava3.core.Flowable` := v1 @kind object;
  #L4ad9de.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector.c` @type ^`java.util.stream.Collector` := v2 @kind object;
  #L4ad9e2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollector;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ad9f4.  v0:= v5.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector.c` @type ^`java.util.stream.Collector` @kind object;
  #L4ad9f8.  call temp:= `supplier`(v0) @signature `Ljava/util/stream/Collector;.supplier:()Ljava/util/function/Supplier;` @kind interface;
  #L4ad9fe.  v0:= temp @kind object;
  #L4ada00.  call temp:= `get`(v0) @signature `Ljava/util/function/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4ada06.  v0:= temp @kind object;
  #L4ada08.  v1:= v5.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector.c` @type ^`java.util.stream.Collector` @kind object;
  #L4ada0c.  call temp:= `accumulator`(v1) @signature `Ljava/util/stream/Collector;.accumulator:()Ljava/util/function/BiConsumer;` @kind interface;
  #L4ada12.  v1:= temp @kind object;
  #L4ada14.  v2:= v5.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector.c` @type ^`java.util.stream.Collector` @kind object;
  #L4ada18.  call temp:= `finisher`(v2) @signature `Ljava/util/stream/Collector;.finisher:()Ljava/util/function/Function;` @kind interface;
  #L4ada1e.  v2:= temp @kind object;
  #L4ada20.  v3:= v5.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector.b` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4ada24.  v4:= new `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a`;
  #L4ada28.  call `<init>`(v4, v6, v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollector$a;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Ljava/util/function/BiConsumer;Ljava/util/function/Function;)V` @kind direct;
  #L4ada2e.  call `subscribe`(v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L4ada34.  return @kind void;
  #L4ada36.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ada38.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ada3e.  call `error`(v0, v6) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4ada44.  return @kind void;
  catch `java.lang.Throwable` @[L4ad9f4..L4ada20] goto L4ada36;
}
