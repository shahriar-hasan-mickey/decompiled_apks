record `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b0d88.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b0d8e.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4b0d92.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4b0d96.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$b;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b0da8.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b0dac.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4b0db2.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b0dc4.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.d` @type ^`boolean` @kind boolean;
  #L4b0dc8.  if v0 == 0 then goto L4b0dce;
  #L4b0dcc.  return @kind void;
  #L4b0dce.  v0:= 1I;
  #L4b0dd0.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.d` @type ^`boolean` := v0 @kind boolean;
  #L4b0dd4.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4b0dd8.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4b0dde.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b0df0.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.d` @type ^`boolean` @kind boolean;
  #L4b0df4.  if v0 == 0 then goto L4b0e00;
  #L4b0df8.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b0dfe.  return @kind void;
  #L4b0e00.  v0:= 1I;
  #L4b0e02.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.d` @type ^`boolean` := v0 @kind boolean;
  #L4b0e06.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4b0e0a.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4b0e10.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b0e24.  call temp:= `tryOnNext`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$b;.tryOnNext:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b0e2a.  v3:= temp;
  #L4b0e2c.  if v3 != 0 then goto L4b0e3e;
  #L4b0e30.  v3:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b0e34.  v0:= 1L;
  #L4b0e38.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4b0e3e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$b;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b0e50.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b0e54.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4b0e5a.  v0:= temp;
  #L4b0e5c.  if v0 == 0 then goto L4b0e6e;
  #L4b0e60.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L4b0e64.  v2:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4b0e68.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4b0e6e.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$b;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b0e80.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4b0e84.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4b0e8a.  return @kind void;
}
procedure `boolean` `tryOnNext`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$b;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b0d08.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.d` @type ^`boolean` @kind boolean;
  #L4b0d0c.  v1:= 1I;
  #L4b0d0e.  if v0 == 0 then goto L4b0d14;
  #L4b0d12.  return v1;
  #L4b0d14.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4b0d18.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4b0d1e.  v3:= temp @kind object;
  #L4b0d20.  v0:= "The mapper returned a null Optional" @kind object;
  #L4b0d24.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4b0d2a.  v3:= temp @kind object;
  #L4b0d2c.  v3:= (`java.util.Optional`) v3 @kind object;
  #L4b0d30.  call temp:= `isPresent`(v3) @signature `Ljava/util/Optional;.isPresent:()Z` @kind virtual;
  #L4b0d36.  v0:= temp;
  #L4b0d38.  if v0 == 0 then goto L4b0d50;
  #L4b0d3c.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4b0d40.  call temp:= `get`(v3) @signature `Ljava/util/Optional;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b0d46.  v3:= temp @kind object;
  #L4b0d48.  call `onNext`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4b0d4e.  return v1;
  #L4b0d50.  v3:= 0I;
  #L4b0d52.  return v3;
  #L4b0d54.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b0d56.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b0d5c.  call `cancel`(v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$b;.cancel:()V` @kind virtual;
  #L4b0d62.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$b;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b0d68.  return v1;
  catch `java.lang.Throwable` @[L4b0d14..L4b0d30] goto L4b0d54;
}
