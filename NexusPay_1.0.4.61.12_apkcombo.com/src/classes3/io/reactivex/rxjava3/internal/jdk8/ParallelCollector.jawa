record `io.reactivex.rxjava3.internal.jdk8.ParallelCollector` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `io.reactivex.rxjava3.parallel.ParallelFlowable` `io.reactivex.rxjava3.internal.jdk8.ParallelCollector.b` @AccessFlag FINAL;
  `java.util.stream.Collector` `io.reactivex.rxjava3.internal.jdk8.ParallelCollector.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.ParallelCollector` v0 @kind this, `io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind object, `java.util.stream.Collector` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Ljava/util/stream/Collector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b0a5c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4b0a62.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector.b` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` := v1 @kind object;
  #L4b0a66.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector.c` @type ^`java.util.stream.Collector` := v2 @kind object;
  #L4b0a6a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.jdk8.ParallelCollector` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4b0a7c.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$b`;
  #L4b0a80.  v1:= v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector.b` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` @kind object;
  #L4b0a84.  call temp:= `parallelism`(v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L4b0a8a.  v1:= temp;
  #L4b0a8c.  v2:= v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector.c` @type ^`java.util.stream.Collector` @kind object;
  #L4b0a90.  call `<init>`(v0, v4, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$b;.<init>:(Lorg/reactivestreams/Subscriber;ILjava/util/stream/Collector;)V` @kind direct;
  #L4b0a96.  call `onSubscribe`(v4, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4b0a9c.  v4:= v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector.b` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` @kind object;
  #L4b0aa0.  v0:= v0.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$b.a` @type ^`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a`[] @kind object;
  #L4b0aa4.  call `subscribe`(v4, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L4b0aaa.  return @kind void;
  #L4b0aac.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b0aae.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b0ab4.  call `error`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4b0aba.  return @kind void;
  catch `java.lang.Throwable` @[L4b0a7c..L4b0a96] goto L4b0aac;
}
