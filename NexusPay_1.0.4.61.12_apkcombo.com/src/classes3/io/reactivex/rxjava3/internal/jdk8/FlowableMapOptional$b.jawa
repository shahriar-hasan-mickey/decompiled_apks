record `io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber` @kind class, `io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind interface {
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ae9c4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4ae9ca.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b.a` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4ae9ce.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae9e0.  call temp:= `tryOnNext`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$b;.tryOnNext:(Ljava/lang/Object;)Z` @kind virtual;
  #L4ae9e6.  v3:= temp;
  #L4ae9e8.  if v3 != 0 then goto L4ae9fa;
  #L4ae9ec.  v3:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4ae9f0.  v0:= 1L;
  #L4ae9f4.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4ae9fa.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$b;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ae954.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L4ae958.  call temp:= `poll`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4ae95e.  v0:= temp @kind object;
  #L4ae960.  if v0 != 0 then goto L4ae968;
  #L4ae964.  v0:= 0I;
  #L4ae966.  return v0 @kind object;
  #L4ae968.  v1:= v3.`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ae96c.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ae972.  v0:= temp @kind object;
  #L4ae974.  v1:= "The mapper returned a null Optional" @kind object;
  #L4ae978.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ae97e.  v0:= temp @kind object;
  #L4ae980.  v0:= (`java.util.Optional`) v0 @kind object;
  #L4ae984.  call temp:= `isPresent`(v0) @signature `Ljava/util/Optional;.isPresent:()Z` @kind virtual;
  #L4ae98a.  v1:= temp;
  #L4ae98c.  if v1 == 0 then goto L4ae99a;
  #L4ae990.  call temp:= `get`(v0) @signature `Ljava/util/Optional;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ae996.  v0:= temp @kind object;
  #L4ae998.  return v0 @kind object;
  #L4ae99a.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int`;
  #L4ae99e.  v1:= 2I;
  #L4ae9a0.  if v0 != v1 then goto L4ae954;
  #L4ae9a4.  v0:= v3.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.rxjava3.internal.fuseable.QueueSubscription` @kind object;
  #L4ae9a8.  v1:= 1L;
  #L4ae9ac.  call `request`(v0, v1) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4ae9b2.  goto L4ae954;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$b;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L4ae938.  call temp:= `transitiveBoundaryFusion`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.transitiveBoundaryFusion:(I)I` @kind virtual;
  #L4ae93e.  v1:= temp;
  #L4ae940.  return v1;
}
procedure `boolean` `tryOnNext`(`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional$b;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae8b0.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L4ae8b4.  v1:= 1I;
  #L4ae8b6.  if v0 == 0 then goto L4ae8bc;
  #L4ae8ba.  return v1;
  #L4ae8bc.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int`;
  #L4ae8c0.  if v0 == 0 then goto L4ae8d2;
  #L4ae8c4.  v3:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4ae8c8.  v0:= 0I;
  #L4ae8ca.  call `onNext`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4ae8d0.  return v1;
  #L4ae8d2.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional$b.a` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ae8d6.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ae8dc.  v3:= temp @kind object;
  #L4ae8de.  v0:= "The mapper returned a null Optional" @kind object;
  #L4ae8e2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ae8e8.  v3:= temp @kind object;
  #L4ae8ea.  v3:= (`java.util.Optional`) v3 @kind object;
  #L4ae8ee.  call temp:= `isPresent`(v3) @signature `Ljava/util/Optional;.isPresent:()Z` @kind virtual;
  #L4ae8f4.  v0:= temp;
  #L4ae8f6.  if v0 == 0 then goto L4ae90e;
  #L4ae8fa.  v0:= v2.`io.reactivex.rxjava3.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4ae8fe.  call temp:= `get`(v3) @signature `Ljava/util/Optional;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ae904.  v3:= temp @kind object;
  #L4ae906.  call `onNext`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4ae90c.  return v1;
  #L4ae90e.  v3:= 0I;
  #L4ae910.  return v3;
  #L4ae912.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ae914.  call `fail`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/subscribers/BasicFuseableSubscriber;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ae91a.  return v1;
  catch `java.lang.Throwable` @[L4ae8d2..L4ae8ee] goto L4ae912;
}
