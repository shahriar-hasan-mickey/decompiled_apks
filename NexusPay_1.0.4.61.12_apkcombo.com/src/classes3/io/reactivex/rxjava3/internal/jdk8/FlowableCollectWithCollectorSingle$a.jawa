record `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.SingleObserver` `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.a` @AccessFlag FINAL;
  `java.util.function.BiConsumer` `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.b` @AccessFlag FINAL;
  `java.util.function.Function` `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.c` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.e` @AccessFlag ;
  `java.lang.Object` `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.function.BiConsumer` v3 @kind object, `java.util.function.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollectorSingle$a;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;Ljava/lang/Object;Ljava/util/function/BiConsumer;Ljava/util/function/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ad78c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ad792.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` := v1 @kind object;
  #L4ad796.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.f` @type ^`java.lang.Object` := v2 @kind object;
  #L4ad79a.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.b` @type ^`java.util.function.BiConsumer` := v3 @kind object;
  #L4ad79e.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.c` @type ^`java.util.function.Function` := v4 @kind object;
  #L4ad7a2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollectorSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad7b4.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4ad7b8.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4ad7be.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4ad7c2.  v1.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4ad7c6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollectorSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad768.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4ad76c.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4ad770.  if v0 != v1 then goto L4ad778;
  #L4ad774.  v0:= 1I;
  #L4ad776.  goto L4ad77a;
  #L4ad778.  v0:= 0I;
  #L4ad77a.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollectorSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad7d8.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.e` @type ^`boolean` @kind boolean;
  #L4ad7dc.  if v0 == 0 then goto L4ad7e2;
  #L4ad7e0.  return @kind void;
  #L4ad7e2.  v0:= 1I;
  #L4ad7e4.  v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4ad7e8.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4ad7ec.  v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4ad7f0.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.f` @type ^`java.lang.Object` @kind object;
  #L4ad7f4.  v1:= 0I;
  #L4ad7f6.  v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.f` @type ^`java.lang.Object` := v1 @kind object;
  #L4ad7fa.  v1:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.c` @type ^`java.util.function.Function` @kind object;
  #L4ad7fe.  call temp:= `apply`(v1, v0) @signature `Ljava/util/function/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ad804.  v0:= temp @kind object;
  #L4ad806.  v1:= "The finisher returned a null value" @kind object;
  #L4ad80a.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ad810.  v0:= temp @kind object;
  #L4ad812.  v1:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4ad816.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4ad81c.  return @kind void;
  #L4ad81e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ad820.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ad826.  v1:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4ad82a.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ad830.  return @kind void;
  catch `java.lang.Throwable` @[L4ad7fa..L4ad812] goto L4ad81e;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollectorSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad850.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.e` @type ^`boolean` @kind boolean;
  #L4ad854.  if v0 == 0 then goto L4ad860;
  #L4ad858.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4ad85e.  goto L4ad87e;
  #L4ad860.  v0:= 1I;
  #L4ad862.  v1.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4ad866.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4ad86a.  v1.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.d` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4ad86e.  v0:= 0I;
  #L4ad870.  v1.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.f` @type ^`java.lang.Object` := v0 @kind object;
  #L4ad874.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4ad878.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ad87e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollectorSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad890.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.e` @type ^`boolean` @kind boolean;
  #L4ad894.  if v0 == 0 then goto L4ad89a;
  #L4ad898.  return @kind void;
  #L4ad89a.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.b` @type ^`java.util.function.BiConsumer` @kind object;
  #L4ad89e.  v1:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.f` @type ^`java.lang.Object` @kind object;
  #L4ad8a2.  call `accept`(v0, v1, v3) @signature `Ljava/util/function/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L4ad8a8.  goto L4ad8c2;
  #L4ad8aa.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ad8ac.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ad8b2.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4ad8b6.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4ad8bc.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollectorSingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ad8c2.  return @kind void;
  catch `java.lang.Throwable` @[L4ad89a..L4ad8a8] goto L4ad8aa;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollectorSingle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad8e0.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4ad8e4.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4ad8ea.  v0:= temp;
  #L4ad8ec.  if v0 == 0 then goto L4ad90e;
  #L4ad8f0.  v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.d` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4ad8f4.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle$a.a` @type ^`io.reactivex.rxjava3.core.SingleObserver` @kind object;
  #L4ad8f8.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4ad8fe.  v0:= 9223372036854775807L;
  #L4ad908.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4ad90e.  return @kind void;
}
