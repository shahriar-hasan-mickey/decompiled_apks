record `io.reactivex.rxjava3.internal.jdk8.b` @kind class @AccessFlag ABSTRACT extends `java.util.concurrent.CompletableFuture` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.jdk8.b.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.jdk8.b.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4b05a0.  call `<init>`(v1) @signature `Ljava/util/concurrent/CompletableFuture;.<init>:()V` @kind direct;
  #L4b05a6.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4b05aa.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4b05b0.  v1.`io.reactivex.rxjava3.internal.jdk8.b.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4b05b4.  return @kind void;
}
procedure `boolean` `cancel`(`io.reactivex.rxjava3.internal.jdk8.b` v0 @kind this, `boolean` v1 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.cancel:(Z)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4b0540.  call `disposeUpstream`(v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.disposeUpstream:()V` @kind virtual;
  #L4b0546.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/CompletableFuture;.cancel:(Z)Z` @kind super;
  #L4b054c.  v1:= temp;
  #L4b054e.  return v1;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.jdk8.b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.clear:()V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L4b05c8.  v0:= 0I;
  #L4b05ca.  v2.`io.reactivex.rxjava3.internal.jdk8.b.b` @type ^`java.lang.Object` := v0 @kind object;
  #L4b05ce.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.b.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4b05d2.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4b05d6.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4b05dc.  return @kind void;
}
procedure `boolean` `complete`(`io.reactivex.rxjava3.internal.jdk8.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.complete:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4b0560.  call `disposeUpstream`(v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.disposeUpstream:()V` @kind virtual;
  #L4b0566.  call temp:= `complete`(v0, v1) @signature `Ljava/util/concurrent/CompletableFuture;.complete:(Ljava/lang/Object;)Z` @kind super;
  #L4b056c.  v1:= temp;
  #L4b056e.  return v1;
}
procedure `boolean` `completeExceptionally`(`io.reactivex.rxjava3.internal.jdk8.b` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.completeExceptionally:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4b0580.  call `disposeUpstream`(v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.disposeUpstream:()V` @kind virtual;
  #L4b0586.  call temp:= `completeExceptionally`(v0, v1) @signature `Ljava/util/concurrent/CompletableFuture;.completeExceptionally:(Ljava/lang/Throwable;)Z` @kind super;
  #L4b058c.  v1:= temp;
  #L4b058e.  return v1;
}
procedure `void` `disposeUpstream`(`io.reactivex.rxjava3.internal.jdk8.b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.disposeUpstream:()V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L4b05f0.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.b.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4b05f4.  call temp:= `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b05fa.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.jdk8.b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4b060c.  call `clear`(v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.clear:()V` @kind virtual;
  #L4b0612.  call temp:= `completeExceptionally`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.completeExceptionally:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L4b0618.  v0:= temp;
  #L4b061a.  if v0 != 0 then goto L4b0624;
  #L4b061e.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b0624.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.jdk8.b` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/b;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4b0638.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.b.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4b063c.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4b0642.  return @kind void;
}
