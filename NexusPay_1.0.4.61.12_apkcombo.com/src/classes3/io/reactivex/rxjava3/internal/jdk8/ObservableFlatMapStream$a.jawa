record `io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.disposables.Disposable` `io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.d` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.e` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFlatMapStream$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4afb98.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L4afb9e.  v0.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L4afba2.  v0.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4afba6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFlatMapStream$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4afbb8.  v0:= 1I;
  #L4afbba.  v1.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4afbbe.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4afbc2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4afbc8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFlatMapStream$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4afb80.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.d` @type ^`boolean` @kind boolean;
  #L4afb84.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFlatMapStream$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4afbdc.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.e` @type ^`boolean` @kind boolean;
  #L4afbe0.  if v0 != 0 then goto L4afbf4;
  #L4afbe4.  v0:= 1I;
  #L4afbe6.  v1.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4afbea.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4afbee.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L4afbf4.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFlatMapStream$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4afc08.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.e` @type ^`boolean` @kind boolean;
  #L4afc0c.  if v0 == 0 then goto L4afc18;
  #L4afc10.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4afc16.  goto L4afc28;
  #L4afc18.  v0:= 1I;
  #L4afc1a.  v1.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4afc1e.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4afc22.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4afc28.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFlatMapStream$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4afc3c.  v0:= v4.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.e` @type ^`boolean` @kind boolean;
  #L4afc40.  if v0 == 0 then goto L4afc46;
  #L4afc44.  return @kind void;
  #L4afc46.  v0:= v4.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4afc4a.  call temp:= `apply`(v0, v5) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4afc50.  v5:= temp @kind object;
  #L4afc52.  v0:= "The mapper returned a null Stream" @kind object;
  #L4afc56.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4afc5c.  v5:= temp @kind object;
  #L4afc5e.  v5:= (`java.util.stream.Stream`) v5 @kind object;
  #L4afc62.  call temp:= `iterator`(v5) @signature `Ljava/util/stream/Stream;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4afc68.  v0:= temp @kind object;
  #L4afc6a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4afc70.  v1:= temp;
  #L4afc72.  if v1 == 0 then goto L4afcbe;
  #L4afc76.  v1:= v4.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.d` @type ^`boolean` @kind boolean;
  #L4afc7a.  v2:= 1I;
  #L4afc7c.  if v1 == 0 then goto L4afc86;
  #L4afc80.  v4.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.e` @type ^`boolean` := v2 @kind boolean;
  #L4afc84.  goto L4afcbe;
  #L4afc86.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4afc8c.  v1:= temp @kind object;
  #L4afc8e.  v3:= "The Stream's Iterator.next returned a null value" @kind object;
  #L4afc92.  call temp:= `requireNonNull`(v1, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4afc98.  v1:= temp @kind object;
  #L4afc9a.  v3:= v4.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.d` @type ^`boolean` @kind boolean;
  #L4afc9e.  if v3 == 0 then goto L4afca8;
  #L4afca2.  v4.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.e` @type ^`boolean` := v2 @kind boolean;
  #L4afca6.  goto L4afcbe;
  #L4afca8.  v3:= v4.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4afcac.  call `onNext`(v3, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4afcb2.  v1:= v4.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.d` @type ^`boolean` @kind boolean;
  #L4afcb6.  if v1 == 0 then goto L4afc6a;
  #L4afcba.  v4.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.e` @type ^`boolean` := v2 @kind boolean;
  #L4afcbe.  if v5 == 0 then goto L4afcfe;
  #L4afcc2.  call `close`(v5) @signature `Ljava/util/stream/Stream;.close:()V` @kind interface;
  #L4afcc8.  goto L4afcfe;
  #L4afcca.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4afccc.  throw v0;
  #L4afcce.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4afcd0.  if v5 == 0 then goto L4afce4;
  #L4afcd4.  call `close`(v5) @signature `Ljava/util/stream/Stream;.close:()V` @kind interface;
  #L4afcda.  goto L4afce4;
  #L4afcdc.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4afcde.  call `addSuppressed`(v0, v5) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4afce4.  throw v1;
  #L4afce6.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4afce8.  call `throwIfFatal`(v5) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4afcee.  v0:= v4.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4afcf2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4afcf8.  call `onError`(v4, v5) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFlatMapStream$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4afcfe.  return @kind void;
  catch `java.lang.Throwable` @[L4afc46..L4afc62] goto L4afce6;
  catch `java.lang.Throwable` @[L4afc62..L4afcbe] goto L4afcca;
  catch `java.lang.Throwable` @[L4afcc2..L4afcc8] goto L4afce6;
  catch `java.lang.Throwable` @[L4afccc..L4afcce] goto L4afcce;
  catch `java.lang.Throwable` @[L4afcd4..L4afcda] goto L4afcdc;
  catch `java.lang.Throwable` @[L4afcde..L4afce6] goto L4afce6;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFlatMapStream$a;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4afd4c.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` @kind object;
  #L4afd50.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind static;
  #L4afd56.  v0:= temp;
  #L4afd58.  if v0 == 0 then goto L4afd6a;
  #L4afd5c.  v1.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.c` @type ^`io.reactivex.rxjava3.disposables.Disposable` := v2 @kind object;
  #L4afd60.  v2:= v1.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L4afd64.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4afd6a.  return @kind void;
}
