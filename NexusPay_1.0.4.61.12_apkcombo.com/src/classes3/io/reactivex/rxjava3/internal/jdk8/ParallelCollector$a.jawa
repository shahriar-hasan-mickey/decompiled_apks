record `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface {
  `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$b` `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.a` @AccessFlag FINAL;
  `java.util.function.BiConsumer` `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.b` @AccessFlag FINAL;
  `java.util.function.BinaryOperator` `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.c` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.e` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a` v0 @kind this, `io.reactivex.rxjava3.internal.jdk8.ParallelCollector$b` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.function.BiConsumer` v3 @kind object, `java.util.function.BinaryOperator` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$a;.<init>:(Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$b;Ljava/lang/Object;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b0654.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4b065a.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.a` @type ^`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$b` := v1 @kind object;
  #L4b065e.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.b` @type ^`java.util.function.BiConsumer` := v3 @kind object;
  #L4b0662.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.c` @type ^`java.util.function.BinaryOperator` := v4 @kind object;
  #L4b0666.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.d` @type ^`java.lang.Object` := v2 @kind object;
  #L4b066a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$a;.a:()V` @AccessFlag  {
    temp;

  #L4b067c.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4b0682.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b0694.  v0:= v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.e` @type ^`boolean` @kind boolean;
  #L4b0698.  if v0 != 0 then goto L4b06ba;
  #L4b069c.  v0:= v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.d` @type ^`java.lang.Object` @kind object;
  #L4b06a0.  v1:= 0I;
  #L4b06a2.  v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.d` @type ^`java.lang.Object` := v1 @kind object;
  #L4b06a6.  v1:= 1I;
  #L4b06a8.  v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.e` @type ^`boolean` := v1 @kind boolean;
  #L4b06ac.  v1:= v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.a` @type ^`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$b` @kind object;
  #L4b06b0.  v2:= v3.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.c` @type ^`java.util.function.BinaryOperator` @kind object;
  #L4b06b4.  call `f`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$b;.f:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)V` @kind virtual;
  #L4b06ba.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b06cc.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.e` @type ^`boolean` @kind boolean;
  #L4b06d0.  if v0 == 0 then goto L4b06dc;
  #L4b06d4.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4b06da.  return @kind void;
  #L4b06dc.  v0:= 0I;
  #L4b06de.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.d` @type ^`java.lang.Object` := v0 @kind object;
  #L4b06e2.  v0:= 1I;
  #L4b06e4.  v1.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4b06e8.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.a` @type ^`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$b` @kind object;
  #L4b06ec.  call `a`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$b;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b06f2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b0704.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.e` @type ^`boolean` @kind boolean;
  #L4b0708.  if v0 != 0 then goto L4b073c;
  #L4b070c.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.b` @type ^`java.util.function.BiConsumer` @kind object;
  #L4b0710.  v1:= v2.`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a.d` @type ^`java.lang.Object` @kind object;
  #L4b0714.  call `accept`(v0, v1, v3) @signature `Ljava/util/function/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L4b071a.  goto L4b073c;
  #L4b071c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b071e.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4b0724.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4b072a.  v0:= temp @kind object;
  #L4b072c.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L4b0730.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4b0736.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4b073c.  return @kind void;
  catch `java.lang.Throwable` @[L4b070c..L4b071a] goto L4b071c;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.jdk8.ParallelCollector$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b075c.  v0:= 9223372036854775807L;
  #L4b0766.  call temp:= `setOnce`(v2, v3, v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;J)Z` @kind static;
  #L4b076c.  return @kind void;
}
