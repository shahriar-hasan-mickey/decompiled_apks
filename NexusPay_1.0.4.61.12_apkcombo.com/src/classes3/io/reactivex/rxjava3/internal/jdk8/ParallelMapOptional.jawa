record `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.parallel.ParallelFlowable` @kind class {
  `io.reactivex.rxjava3.parallel.ParallelFlowable` `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional` v0 @kind this, `io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b0ebc.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.<init>:()V` @kind direct;
  #L4b0ec2.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` := v1 @kind object;
  #L4b0ec6.  v0.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4b0eca.  return @kind void;
}
procedure `int` `parallelism`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional;.parallelism:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b0e9c.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` @kind object;
  #L4b0ea0.  call temp:= `parallelism`(v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L4b0ea6.  v0:= temp;
  #L4b0ea8.  return v0;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional` v6 @kind this, `org.reactivestreams.Subscriber`[] v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4b0edc.  call temp:= `validate`(v6, v7) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.validate:([Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L4b0ee2.  v0:= temp;
  #L4b0ee4.  if v0 != 0 then goto L4b0eea;
  #L4b0ee8.  return @kind void;
  #L4b0eea.  v0:= length @variable v7;
  #L4b0eec.  v1:= new `org.reactivestreams.Subscriber`[v0];
  #L4b0ef0.  v2:= 0I;
  #L4b0ef2.  if v2 >= v0 then goto L4b0f32;
  #L4b0ef6.  v3:= v7[v2] @kind object;
  #L4b0efa.  v4:= instanceof @variable v3 @type ^`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber` @kind boolean;
  #L4b0efe.  if v4 == 0 then goto L4b0f1a;
  #L4b0f02.  v4:= new `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$a`;
  #L4b0f06.  v3:= (`io.reactivex.rxjava3.internal.fuseable.ConditionalSubscriber`) v3 @kind object;
  #L4b0f0a.  v5:= v6.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4b0f0e.  call `<init>`(v4, v3, v5) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$a;.<init>:(Lio/reactivex/rxjava3/internal/fuseable/ConditionalSubscriber;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4b0f14.  v1[v2]:= v4 @kind object;
  #L4b0f18.  goto L4b0f2c;
  #L4b0f1a.  v4:= new `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional$b`;
  #L4b0f1e.  v5:= v6.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4b0f22.  call `<init>`(v4, v3, v5) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4b0f28.  v1[v2]:= v4 @kind object;
  #L4b0f2c.  v2:= v2 + 1;
  #L4b0f30.  goto L4b0ef2;
  #L4b0f32.  v7:= v6.`io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional.a` @type ^`io.reactivex.rxjava3.parallel.ParallelFlowable` @kind object;
  #L4b0f36.  call `subscribe`(v7, v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L4b0f3c.  return @kind void;
}
