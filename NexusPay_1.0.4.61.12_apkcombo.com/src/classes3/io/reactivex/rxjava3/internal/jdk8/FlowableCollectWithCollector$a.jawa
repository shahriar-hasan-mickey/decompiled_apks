record `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription` @kind class, `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface {
  `java.util.function.BiConsumer` `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.a` @AccessFlag FINAL;
  `java.util.function.Function` `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.d` @AccessFlag ;
  `java.lang.Object` `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.e` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.function.BiConsumer` v3 @kind object, `java.util.function.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollector$a;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Ljava/util/function/BiConsumer;Ljava/util/function/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ad5dc.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4ad5e2.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.e` @type ^`java.lang.Object` := v2 @kind object;
  #L4ad5e6.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.a` @type ^`java.util.function.BiConsumer` := v3 @kind object;
  #L4ad5ea.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.b` @type ^`java.util.function.Function` := v4 @kind object;
  #L4ad5ee.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollector$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad600.  call `cancel`(v1) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L4ad606.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4ad60a.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4ad610.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollector$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad624.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.d` @type ^`boolean` @kind boolean;
  #L4ad628.  if v0 == 0 then goto L4ad62e;
  #L4ad62c.  return @kind void;
  #L4ad62e.  v0:= 1I;
  #L4ad630.  v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4ad634.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4ad638.  v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4ad63c.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.e` @type ^`java.lang.Object` @kind object;
  #L4ad640.  v1:= 0I;
  #L4ad642.  v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.e` @type ^`java.lang.Object` := v1 @kind object;
  #L4ad646.  v1:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.b` @type ^`java.util.function.Function` @kind object;
  #L4ad64a.  call temp:= `apply`(v1, v0) @signature `Ljava/util/function/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ad650.  v0:= temp @kind object;
  #L4ad652.  v1:= "The finisher returned a null value" @kind object;
  #L4ad656.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ad65c.  v0:= temp @kind object;
  #L4ad65e.  call `complete`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4ad664.  return @kind void;
  #L4ad666.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ad668.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ad66e.  v1:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4ad672.  call `onError`(v1, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ad678.  return @kind void;
  catch `java.lang.Throwable` @[L4ad646..L4ad65e] goto L4ad666;
}
procedure `void` `onError`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollector$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad698.  v0:= v1.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.d` @type ^`boolean` @kind boolean;
  #L4ad69c.  if v0 == 0 then goto L4ad6a8;
  #L4ad6a0.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4ad6a6.  goto L4ad6c6;
  #L4ad6a8.  v0:= 1I;
  #L4ad6aa.  v1.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.d` @type ^`boolean` := v0 @kind boolean;
  #L4ad6ae.  v0:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4ad6b2.  v1.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4ad6b6.  v0:= 0I;
  #L4ad6b8.  v1.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.e` @type ^`java.lang.Object` := v0 @kind object;
  #L4ad6bc.  v0:= v1.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4ad6c0.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ad6c6.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollector$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad6d8.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.d` @type ^`boolean` @kind boolean;
  #L4ad6dc.  if v0 == 0 then goto L4ad6e2;
  #L4ad6e0.  return @kind void;
  #L4ad6e2.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.a` @type ^`java.util.function.BiConsumer` @kind object;
  #L4ad6e6.  v1:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.e` @type ^`java.lang.Object` @kind object;
  #L4ad6ea.  call `accept`(v0, v1, v3) @signature `Ljava/util/function/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L4ad6f0.  goto L4ad70a;
  #L4ad6f2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ad6f4.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ad6fa.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4ad6fe.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L4ad704.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollector$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4ad70a.  return @kind void;
  catch `java.lang.Throwable` @[L4ad6e2..L4ad6f0] goto L4ad6f2;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollector$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad728.  v0:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4ad72c.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L4ad732.  v0:= temp;
  #L4ad734.  if v0 == 0 then goto L4ad756;
  #L4ad738.  v2.`io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector$a.c` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L4ad73c.  v0:= v2.`io.reactivex.rxjava3.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4ad740.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4ad746.  v0:= 9223372036854775807L;
  #L4ad750.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4ad756.  return @kind void;
}
