record `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a` @kind class {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c.e` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `java.util.Iterator` v2 @kind object, `java.lang.AutoCloseable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$c;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/util/Iterator;Ljava/lang/AutoCloseable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ae4a8.  call `<init>`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.<init>:(Ljava/util/Iterator;Ljava/lang/AutoCloseable;)V` @kind direct;
  #L4ae4ae.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c.e` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4ae4b2.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c` v9 @kind this, `long` v10 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$c;.a:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4ae4c4.  v0:= v9.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.a` @type ^`java.util.Iterator` @kind object;
  #L4ae4c8.  v1:= v9.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$c.e` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4ae4cc.  v2:= 0L;
  #L4ae4d0.  v4:= v2 @kind wide;
  #L4ae4d2.  v6:= v9.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.c` @type ^`boolean` @kind boolean;
  #L4ae4d6.  if v6 == 0 then goto L4ae4e2;
  #L4ae4da.  call `clear`(v9) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream$a;.clear:()V` @kind virtual;
  #L4ae4e0.  goto L4ae54c;
  #L4ae4e2.  v6:= 1I;
  #L4ae4e4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ae4ea.  v7:= temp @kind object;
  #L4ae4ec.  v8:= "The Stream's Iterator returned a null value" @kind object;
  #L4ae4f0.  call temp:= `requireNonNull`(v7, v8) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ae4f6.  v7:= temp @kind object;
  #L4ae4f8.  call `onNext`(v1, v7) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4ae4fe.  v7:= v9.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.c` @type ^`boolean` @kind boolean;
  #L4ae502.  if v7 == 0 then goto L4ae508;
  #L4ae506.  goto L4ae4d2;
  #L4ae508.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ae50e.  v7:= temp;
  #L4ae510.  if v7 != 0 then goto L4ae520;
  #L4ae514.  call `onComplete`(v1) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4ae51a.  v9.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.c` @type ^`boolean` := v6 @kind boolean;
  #L4ae51e.  goto L4ae4d2;
  #L4ae520.  v6:= 1L;
  #L4ae524.  v4:= v4 + v6 @kind long;
  #L4ae526.  v6:= lcmp(v4, v10);
  #L4ae52a.  if v6 == 0 then goto L4ae530;
  #L4ae52e.  goto L4ae4d2;
  #L4ae530.  call temp:= `get`(v9) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4ae536.  v10:= temp @kind wide;
  #L4ae538.  v6:= lcmp(v4, v10);
  #L4ae53c.  if v6 != 0 then goto L4ae4d2;
  #L4ae540.  call temp:= `compareAndSet`(v9, v10, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4ae546.  v10:= temp;
  #L4ae548.  if v10 == 0 then goto L4ae54e;
  #L4ae54c.  return @kind void;
  #L4ae54e.  call temp:= `get`(v9) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L4ae554.  v10:= temp @kind wide;
  #L4ae556.  goto L4ae4d2;
  #L4ae558.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ae55a.  call `throwIfFatal`(v7) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ae560.  call `onError`(v1, v7) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ae566.  v9.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.c` @type ^`boolean` := v6 @kind boolean;
  #L4ae56a.  goto L4ae4d2;
  #L4ae56c.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ae56e.  call `throwIfFatal`(v7) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ae574.  call `onError`(v1, v7) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4ae57a.  v9.`io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$a.c` @type ^`boolean` := v6 @kind boolean;
  #L4ae57e.  goto L4ae4d2;
  catch `java.lang.Throwable` @[L4ae4e4..L4ae4f8] goto L4ae56c;
  catch `java.lang.Throwable` @[L4ae508..L4ae51e] goto L4ae558;
}
