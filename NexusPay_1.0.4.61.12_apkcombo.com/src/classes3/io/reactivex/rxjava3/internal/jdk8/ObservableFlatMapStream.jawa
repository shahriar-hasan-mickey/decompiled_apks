record `io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `io.reactivex.rxjava3.core.Observable` `io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream` v0 @kind this, `io.reactivex.rxjava3.core.Observable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFlatMapStream;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4afd7c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L4afd82.  v0.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.a` @type ^`io.reactivex.rxjava3.core.Observable` := v1 @kind object;
  #L4afd86.  v0.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.b` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4afd8a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream` v3 @kind this, `io.reactivex.rxjava3.core.Observer` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFlatMapStream;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4afd9c.  v0:= v3.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.a` @type ^`io.reactivex.rxjava3.core.Observable` @kind object;
  #L4afda0.  v1:= instanceof @variable v0 @type ^`io.reactivex.rxjava3.functions.Supplier` @kind boolean;
  #L4afda4.  if v1 == 0 then goto L4afdfc;
  #L4afda8.  v1:= 0I;
  #L4afdaa.  v0:= (`io.reactivex.rxjava3.functions.Supplier`) v0 @kind object;
  #L4afdae.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4afdb4.  v0:= temp @kind object;
  #L4afdb6.  if v0 == 0 then goto L4afdd8;
  #L4afdba.  v1:= v3.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4afdbe.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4afdc4.  v0:= temp @kind object;
  #L4afdc6.  v1:= "The mapper returned a null Stream" @kind object;
  #L4afdca.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4afdd0.  v0:= temp @kind object;
  #L4afdd2.  v1:= v0 @kind object;
  #L4afdd4.  v1:= (`java.util.stream.Stream`) v1 @kind object;
  #L4afdd8.  if v1 == 0 then goto L4afde4;
  #L4afddc.  call `subscribeStream`(v4, v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.subscribeStream:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/stream/Stream;)V` @kind static;
  #L4afde2.  goto L4afe10;
  #L4afde4.  call `complete`(v4) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4afdea.  goto L4afe10;
  #L4afdec.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4afdee.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4afdf4.  call `error`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4afdfa.  return @kind void;
  #L4afdfc.  v1:= new `io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream$a`;
  #L4afe00.  v2:= v3.`io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.b` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4afe04.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFlatMapStream$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4afe0a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4afe10.  return @kind void;
  catch `java.lang.Throwable` @[L4afdaa..L4afdd8] goto L4afdec;
}
