record `io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `java.util.concurrent.CompletionStage` `io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage` v0 @kind this, `java.util.concurrent.CompletionStage` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromCompletionStage;.<init>:(Ljava/util/concurrent/CompletionStage;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ae19c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4ae1a2.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage.b` @type ^`java.util.concurrent.CompletionStage` := v1 @kind object;
  #L4ae1a6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromCompletionStage;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4ae1b8.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$a`;
  #L4ae1bc.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromCompletionStage$a;.<init>:()V` @kind direct;
  #L4ae1c2.  v1:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage$b`;
  #L4ae1c6.  call `<init>`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromCompletionStage$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/internal/jdk8/FlowableFromCompletionStage$a;)V` @kind direct;
  #L4ae1cc.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L4ae1d2.  call `onSubscribe`(v3, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4ae1d8.  v3:= v2.`io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage.b` @type ^`java.util.concurrent.CompletionStage` @kind object;
  #L4ae1dc.  call temp:= `whenComplete`(v3, v0) @signature `Ljava/util/concurrent/CompletionStage;.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;` @kind interface;
  #L4ae1e2.  return @kind void;
}
