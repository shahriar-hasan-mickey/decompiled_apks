record `io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Flowable` @kind class {
  `io.reactivex.rxjava3.core.Flowable` `io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream.b` @AccessFlag FINAL;
  `io.reactivex.rxjava3.functions.Function` `io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream.c` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream` v0 @kind this, `io.reactivex.rxjava3.core.Flowable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFlatMapStream;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4adfe4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @kind direct;
  #L4adfea.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream.b` @type ^`io.reactivex.rxjava3.core.Flowable` := v1 @kind object;
  #L4adfee.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream.c` @type ^`io.reactivex.rxjava3.functions.Function` := v2 @kind object;
  #L4adff2.  v0.`io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream.d` @type ^`int` := v3;
  #L4adff6.  return @kind void;
}
procedure `org.reactivestreams.Subscriber` `subscribe`(`org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFlatMapStream;.subscribe:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;I)Lorg/reactivestreams/Subscriber;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4adfc8.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream$a`;
  #L4adfcc.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFlatMapStream$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L4adfd2.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFlatMapStream;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4ae008.  v0:= v3.`io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream.b` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L4ae00c.  v1:= instanceof @variable v0 @type ^`io.reactivex.rxjava3.functions.Supplier` @kind boolean;
  #L4ae010.  if v1 == 0 then goto L4ae068;
  #L4ae014.  v1:= 0I;
  #L4ae016.  v0:= (`io.reactivex.rxjava3.functions.Supplier`) v0 @kind object;
  #L4ae01a.  call temp:= `get`(v0) @signature `Lio/reactivex/rxjava3/functions/Supplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4ae020.  v0:= temp @kind object;
  #L4ae022.  if v0 == 0 then goto L4ae044;
  #L4ae026.  v1:= v3.`io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ae02a.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/rxjava3/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ae030.  v0:= temp @kind object;
  #L4ae032.  v1:= "The mapper returned a null Stream" @kind object;
  #L4ae036.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ae03c.  v0:= temp @kind object;
  #L4ae03e.  v1:= v0 @kind object;
  #L4ae040.  v1:= (`java.util.stream.Stream`) v1 @kind object;
  #L4ae044.  if v1 == 0 then goto L4ae050;
  #L4ae048.  call `subscribeStream`(v4, v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream;.subscribeStream:(Lorg/reactivestreams/Subscriber;Ljava/util/stream/Stream;)V` @kind static;
  #L4ae04e.  goto L4ae07e;
  #L4ae050.  call `complete`(v4) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4ae056.  goto L4ae07e;
  #L4ae058.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ae05a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4ae060.  call `error`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4ae066.  return @kind void;
  #L4ae068.  v1:= v3.`io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream.c` @type ^`io.reactivex.rxjava3.functions.Function` @kind object;
  #L4ae06c.  v2:= v3.`io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream.d` @type ^`int`;
  #L4ae070.  call temp:= `subscribe`(v4, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFlatMapStream;.subscribe:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;I)Lorg/reactivestreams/Subscriber;` @kind static;
  #L4ae076.  v4:= temp @kind object;
  #L4ae078.  call `subscribe`(v0, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L4ae07e.  return @kind void;
  catch `java.lang.Throwable` @[L4ae016..L4ae044] goto L4ae058;
}
