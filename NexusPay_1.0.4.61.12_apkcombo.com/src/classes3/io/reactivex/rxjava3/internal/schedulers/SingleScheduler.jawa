record `io.reactivex.rxjava3.internal.schedulers.SingleScheduler` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.Scheduler` @kind class {
  `java.util.concurrent.ThreadFactory` `io.reactivex.rxjava3.internal.schedulers.SingleScheduler.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @AccessFlag FINAL;
}
global `io.reactivex.rxjava3.internal.schedulers.RxThreadFactory` `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.d` @AccessFlag STATIC_FINAL;
global `java.util.concurrent.ScheduledExecutorService` `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.e` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L50da40.  v0:= 0I;
  #L50da42.  call temp:= `newScheduledThreadPool`(v0) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(I)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L50da48.  v0:= temp @kind object;
  #L50da4a.  `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.e` @type ^`java.util.concurrent.ScheduledExecutorService` := v0 @kind object;
  #L50da4e.  call `shutdown`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L50da54.  v0:= "rx3.single-priority" @kind object;
  #L50da58.  v1:= 5I;
  #L50da5a.  call temp:= `getInteger`(v0, v1) @signature `Ljava/lang/Integer;.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L50da60.  v0:= temp @kind object;
  #L50da62.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L50da68.  v0:= temp;
  #L50da6a.  v1:= 10I;
  #L50da6e.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L50da74.  v0:= temp;
  #L50da76.  v1:= 1I;
  #L50da78.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L50da7e.  v0:= temp;
  #L50da80.  v2:= new `io.reactivex.rxjava3.internal.schedulers.RxThreadFactory`;
  #L50da84.  v3:= "RxSingleScheduler" @kind object;
  #L50da88.  call `<init>`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/RxThreadFactory;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L50da8e.  `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.d` @type ^`io.reactivex.rxjava3.internal.schedulers.RxThreadFactory` := v2 @kind object;
  #L50da92.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.SingleScheduler` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L50daa4.  v0:= `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.d` @type ^`io.reactivex.rxjava3.internal.schedulers.RxThreadFactory` @kind object;
  #L50daa8.  call `<init>`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L50daae.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.SingleScheduler` v1 @kind this, `java.util.concurrent.ThreadFactory` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L50dac0.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.<init>:()V` @kind direct;
  #L50dac6.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L50daca.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L50dad0.  v1.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L50dad4.  v1.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.b` @type ^`java.util.concurrent.ThreadFactory` := v2 @kind object;
  #L50dad8.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.b:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L50dade.  v2:= temp @kind object;
  #L50dae0.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L50dae6.  return @kind void;
}
procedure `java.util.concurrent.ScheduledExecutorService` `b`(`java.util.concurrent.ThreadFactory` v0 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.b:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag STATIC {
    temp;

  #L50da24.  call temp:= `create`(v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/SchedulerPoolFactory;.create:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L50da2a.  v0:= temp @kind object;
  #L50da2c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Scheduler$Worker` `createWorker`(`io.reactivex.rxjava3.internal.schedulers.SingleScheduler` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50d8a4.  v0:= new `io.reactivex.rxjava3.internal.schedulers.SingleScheduler$a`;
  #L50d8a8.  v1:= v2.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50d8ac.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L50d8b2.  v1:= temp @kind object;
  #L50d8b4.  v1:= (`java.util.concurrent.ScheduledExecutorService`) v1 @kind object;
  #L50d8b8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler$a;.<init>:(Ljava/util/concurrent/ScheduledExecutorService;)V` @kind direct;
  #L50d8be.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `scheduleDirect`(`io.reactivex.rxjava3.internal.schedulers.SingleScheduler` v3 @kind this, `java.lang.Runnable` v4 @kind object, `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L50d8d0.  v0:= new `io.reactivex.rxjava3.internal.schedulers.ScheduledDirectTask`;
  #L50d8d4.  call temp:= `onSchedule`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L50d8da.  v4:= temp @kind object;
  #L50d8dc.  call `<init>`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/schedulers/ScheduledDirectTask;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L50d8e2.  v1:= 0L;
  #L50d8e6.  v4:= lcmp(v5, v1);
  #L50d8ea.  if v4 > 0 then goto L50d908;
  #L50d8ee.  v4:= v3.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50d8f2.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L50d8f8.  v4:= temp @kind object;
  #L50d8fa.  v4:= (`java.util.concurrent.ScheduledExecutorService`) v4 @kind object;
  #L50d8fe.  call temp:= `submit`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L50d904.  v4:= temp @kind object;
  #L50d906.  goto L50d920;
  #L50d908.  v4:= v3.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50d90c.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L50d912.  v4:= temp @kind object;
  #L50d914.  v4:= (`java.util.concurrent.ScheduledExecutorService`) v4 @kind object;
  #L50d918.  call temp:= `schedule`(v4, v0, v5, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L50d91e.  v4:= temp @kind object;
  #L50d920.  call `setFuture`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/schedulers/a;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L50d926.  return v0 @kind object;
  #L50d928.  v4:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L50d92a.  call `onError`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L50d930.  v4:= `@@io.reactivex.rxjava3.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.rxjava3.internal.disposables.EmptyDisposable` @kind object;
  #L50d934.  return v4 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L50d8ee..L50d926] goto L50d928;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `schedulePeriodicallyDirect`(`io.reactivex.rxjava3.internal.schedulers.SingleScheduler` v8 @kind this, `java.lang.Runnable` v9 @kind object, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L50d958.  call temp:= `onSchedule`(v9) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L50d95e.  v9:= temp @kind object;
  #L50d960.  v0:= 0L;
  #L50d964.  v2:= lcmp(v12, v0);
  #L50d968.  if v2 > 0 then goto L50d9b6;
  #L50d96c.  v12:= v8.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50d970.  call temp:= `get`(v12) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L50d976.  v12:= temp @kind object;
  #L50d978.  v12:= (`java.util.concurrent.ScheduledExecutorService`) v12 @kind object;
  #L50d97c.  v13:= new `io.reactivex.rxjava3.internal.schedulers.c`;
  #L50d980.  call `<init>`(v13, v9, v12) @signature `Lio/reactivex/rxjava3/internal/schedulers/c;.<init>:(Ljava/lang/Runnable;Ljava/util/concurrent/ExecutorService;)V` @kind direct;
  #L50d986.  v9:= lcmp(v10, v0);
  #L50d98a.  if v9 > 0 then goto L50d998;
  #L50d98e.  call temp:= `submit`(v12, v13) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L50d994.  v9:= temp @kind object;
  #L50d996.  goto L50d9a0;
  #L50d998.  call temp:= `schedule`(v12, v13, v10, v14) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L50d99e.  v9:= temp @kind object;
  #L50d9a0.  call `b`(v13, v9) @signature `Lio/reactivex/rxjava3/internal/schedulers/c;.b:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L50d9a6.  return v13 @kind object;
  #L50d9a8.  v9:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L50d9aa.  call `onError`(v9) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L50d9b0.  v9:= `@@io.reactivex.rxjava3.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.rxjava3.internal.disposables.EmptyDisposable` @kind object;
  #L50d9b4.  return v9 @kind object;
  #L50d9b6.  v7:= new `io.reactivex.rxjava3.internal.schedulers.ScheduledDirectPeriodicTask`;
  #L50d9ba.  call `<init>`(v7, v9) @signature `Lio/reactivex/rxjava3/internal/schedulers/ScheduledDirectPeriodicTask;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L50d9c0.  v9:= v8.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50d9c4.  call temp:= `get`(v9) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L50d9ca.  v9:= temp @kind object;
  #L50d9cc.  v0:= v9 @kind object;
  #L50d9ce.  v0:= (`java.util.concurrent.ScheduledExecutorService`) v0 @kind object;
  #L50d9d2.  v1:= v7 @kind object;
  #L50d9d4.  v2:= v10 @kind wide;
  #L50d9d6.  v4:= v12 @kind wide;
  #L50d9d8.  v6:= v14 @kind object;
  #L50d9da.  call temp:= `scheduleAtFixedRate`(v0, v1, v2, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L50d9e0.  v9:= temp @kind object;
  #L50d9e2.  call `setFuture`(v7, v9) @signature `Lio/reactivex/rxjava3/internal/schedulers/a;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L50d9e8.  return v7 @kind object;
  #L50d9ea.  v9:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L50d9ec.  call `onError`(v9) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L50d9f2.  v9:= `@@io.reactivex.rxjava3.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.rxjava3.internal.disposables.EmptyDisposable` @kind object;
  #L50d9f6.  return v9 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L50d98e..L50d9a6] goto L50d9a8;
  catch `java.util.concurrent.RejectedExecutionException` @[L50d9c0..L50d9e8] goto L50d9ea;
}
procedure `void` `shutdown`(`io.reactivex.rxjava3.internal.schedulers.SingleScheduler` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.shutdown:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50daf8.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50dafc.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.e` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L50db00.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L50db06.  v0:= temp @kind object;
  #L50db08.  v0:= (`java.util.concurrent.ScheduledExecutorService`) v0 @kind object;
  #L50db0c.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.e` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L50db10.  if v0 == v1 then goto L50db1a;
  #L50db14.  call temp:= `shutdownNow`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L50db1a.  return @kind void;
}
procedure `void` `start`(`io.reactivex.rxjava3.internal.schedulers.SingleScheduler` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.start:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L50db2c.  v0:= 0I;
  #L50db2e.  v1:= v3.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50db32.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L50db38.  v1:= temp @kind object;
  #L50db3a.  v1:= (`java.util.concurrent.ScheduledExecutorService`) v1 @kind object;
  #L50db3e.  v2:= `@@io.reactivex.rxjava3.internal.schedulers.SingleScheduler.e` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L50db42.  if v1 == v2 then goto L50db52;
  #L50db46.  if v0 == 0 then goto L50db50;
  #L50db4a.  call `shutdown`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L50db50.  return @kind void;
  #L50db52.  if v0 != 0 then goto L50db62;
  #L50db56.  v0:= v3.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.b` @type ^`java.util.concurrent.ThreadFactory` @kind object;
  #L50db5a.  call temp:= `b`(v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/SingleScheduler;.b:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L50db60.  v0:= temp @kind object;
  #L50db62.  v2:= v3.`io.reactivex.rxjava3.internal.schedulers.SingleScheduler.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L50db66.  call temp:= `compareAndSet`(v2, v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L50db6c.  v1:= temp;
  #L50db6e.  if v1 == 0 then goto L50db2e;
  #L50db72.  return @kind void;
}
