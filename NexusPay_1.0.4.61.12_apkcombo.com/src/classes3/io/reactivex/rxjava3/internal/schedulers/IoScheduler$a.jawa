record `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `long` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentLinkedQueue` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.c` @AccessFlag FINAL;
  `java.util.concurrent.ScheduledExecutorService` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.d` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Future` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.e` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ThreadFactory` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `java.util.concurrent.ThreadFactory` v11 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.<init>:(JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L50c2d8.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50c2de.  if v10 == 0 then goto L50c2ec;
  #L50c2e2.  call temp:= `toNanos`(v10, v8) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L50c2e8.  v8:= temp @kind wide;
  #L50c2ea.  goto L50c2f0;
  #L50c2ec.  v8:= 0L;
  #L50c2f0.  v7.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.a` @type ^`long` := v8 @kind wide;
  #L50c2f4.  v8:= new `java.util.concurrent.ConcurrentLinkedQueue`;
  #L50c2f8.  call `<init>`(v8) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V` @kind direct;
  #L50c2fe.  v7.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` := v8 @kind object;
  #L50c302.  v8:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L50c306.  call `<init>`(v8) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L50c30c.  v7.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v8 @kind object;
  #L50c310.  v7.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.f` @type ^`java.util.concurrent.ThreadFactory` := v11 @kind object;
  #L50c314.  v8:= 0I;
  #L50c316.  if v10 == 0 then goto L50c340;
  #L50c31a.  v8:= 1I;
  #L50c31c.  v9:= `@@io.reactivex.rxjava3.internal.schedulers.IoScheduler.e` @type ^`io.reactivex.rxjava3.internal.schedulers.RxThreadFactory` @kind object;
  #L50c320.  call temp:= `newScheduledThreadPool`(v8, v9) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L50c326.  v8:= temp @kind object;
  #L50c328.  v4:= v7.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.a` @type ^`long` @kind wide;
  #L50c32c.  v6:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L50c330.  v0:= v8 @kind object;
  #L50c332.  v1:= v7 @kind object;
  #L50c334.  v2:= v4 @kind wide;
  #L50c336.  call temp:= `scheduleWithFixedDelay`(v0, v1, v2, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L50c33c.  v9:= temp @kind object;
  #L50c33e.  goto L50c342;
  #L50c340.  v9:= v8 @kind object;
  #L50c342.  v7.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.d` @type ^`java.util.concurrent.ScheduledExecutorService` := v8 @kind object;
  #L50c346.  v7.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.e` @type ^`java.util.concurrent.Future` := v9 @kind object;
  #L50c34a.  return @kind void;
}
procedure `void` `a`(`java.util.concurrent.ConcurrentLinkedQueue` v7 @kind object, `io.reactivex.rxjava3.disposables.CompositeDisposable` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.a:(Ljava/util/concurrent/ConcurrentLinkedQueue;Lio/reactivex/rxjava3/disposables/CompositeDisposable;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L50c35c.  call temp:= `isEmpty`(v7) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L50c362.  v0:= temp;
  #L50c364.  if v0 != 0 then goto L50c3b4;
  #L50c368.  call temp:= `c`() @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.c:()J` @kind static;
  #L50c36e.  v0:= temp @kind wide;
  #L50c370.  call temp:= `iterator`(v7) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L50c376.  v2:= temp @kind object;
  #L50c378.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L50c37e.  v3:= temp;
  #L50c380.  if v3 == 0 then goto L50c3b4;
  #L50c384.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L50c38a.  v3:= temp @kind object;
  #L50c38c.  v3:= (`io.reactivex.rxjava3.internal.schedulers.IoScheduler$c`) v3 @kind object;
  #L50c390.  call temp:= `a`(v3) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$c;.a:()J` @kind virtual;
  #L50c396.  v4:= temp @kind wide;
  #L50c398.  v6:= lcmp(v4, v0);
  #L50c39c.  if v6 > 0 then goto L50c3b4;
  #L50c3a0.  call temp:= `remove`(v7, v3) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L50c3a6.  v4:= temp;
  #L50c3a8.  if v4 == 0 then goto L50c378;
  #L50c3ac.  call temp:= `remove`(v8, v3) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.remove:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L50c3b2.  goto L50c378;
  #L50c3b4.  return @kind void;
}
procedure `long` `c`() @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.c:()J` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L50c2bc.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L50c2c2.  v0:= temp @kind wide;
  #L50c2c4.  return v0 @kind wide;
}
procedure `io.reactivex.rxjava3.internal.schedulers.IoScheduler$c` `b`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.b:()Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$c;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L50c254.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L50c258.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L50c25e.  v0:= temp;
  #L50c260.  if v0 == 0 then goto L50c26a;
  #L50c264.  v0:= `@@io.reactivex.rxjava3.internal.schedulers.IoScheduler.h` @type ^`io.reactivex.rxjava3.internal.schedulers.IoScheduler$c` @kind object;
  #L50c268.  return v0 @kind object;
  #L50c26a.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L50c26e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L50c274.  v0:= temp;
  #L50c276.  if v0 != 0 then goto L50c290;
  #L50c27a.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L50c27e.  call temp:= `poll`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L50c284.  v0:= temp @kind object;
  #L50c286.  v0:= (`io.reactivex.rxjava3.internal.schedulers.IoScheduler$c`) v0 @kind object;
  #L50c28a.  if v0 == 0 then goto L50c26a;
  #L50c28e.  return v0 @kind object;
  #L50c290.  v0:= new `io.reactivex.rxjava3.internal.schedulers.IoScheduler$c`;
  #L50c294.  v1:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.f` @type ^`java.util.concurrent.ThreadFactory` @kind object;
  #L50c298.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$c;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L50c29e.  v1:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L50c2a2.  call temp:= `add`(v1, v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L50c2a8.  return v0 @kind object;
}
procedure `void` `d`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` v4 @kind this, `io.reactivex.rxjava3.internal.schedulers.IoScheduler$c` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.d:(Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$c;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L50c3c8.  call temp:= `c`() @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.c:()J` @kind static;
  #L50c3ce.  v0:= temp @kind wide;
  #L50c3d0.  v2:= v4.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.a` @type ^`long` @kind wide;
  #L50c3d4.  v0:= v0 + v2 @kind long;
  #L50c3d6.  call `b`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$c;.b:(J)V` @kind virtual;
  #L50c3dc.  v0:= v4.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L50c3e0.  call temp:= `offer`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L50c3e6.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.e:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L50c418.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L50c41c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L50c422.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.e` @type ^`java.util.concurrent.Future` @kind object;
  #L50c426.  if v0 == 0 then goto L50c432;
  #L50c42a.  v1:= 1I;
  #L50c42c.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L50c432.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.d` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L50c436.  if v0 == 0 then goto L50c440;
  #L50c43a.  call temp:= `shutdownNow`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L50c440.  return @kind void;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50c3f8.  v0:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L50c3fc.  v1:= v2.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L50c400.  call `a`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.a:(Ljava/util/concurrent/ConcurrentLinkedQueue;Lio/reactivex/rxjava3/disposables/CompositeDisposable;)V` @kind static;
  #L50c406.  return @kind void;
}
