record `io.reactivex.rxjava3.internal.schedulers.IoScheduler$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Scheduler$Worker` @kind class {
  `io.reactivex.rxjava3.disposables.CompositeDisposable` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.internal.schedulers.IoScheduler$c` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b` v1 @kind this, `io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$b;.<init>:(Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L50c4b4.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/core/Scheduler$Worker;.<init>:()V` @kind direct;
  #L50c4ba.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L50c4be.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L50c4c4.  v1.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.d` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L50c4c8.  v1.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.b` @type ^`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` := v2 @kind object;
  #L50c4cc.  v0:= new `io.reactivex.rxjava3.disposables.CompositeDisposable`;
  #L50c4d0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L50c4d6.  v1.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.a` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` := v0 @kind object;
  #L50c4da.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.b:()Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$c;` @kind virtual;
  #L50c4e0.  v2:= temp @kind object;
  #L50c4e2.  v1.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.c` @type ^`io.reactivex.rxjava3.internal.schedulers.IoScheduler$c` := v2 @kind object;
  #L50c4e6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L50c4f8.  v0:= v3.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.d` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L50c4fc.  v1:= 0I;
  #L50c4fe.  v2:= 1I;
  #L50c500.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L50c506.  v0:= temp;
  #L50c508.  if v0 == 0 then goto L50c524;
  #L50c50c.  v0:= v3.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.a` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L50c510.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L50c516.  v0:= v3.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.b` @type ^`io.reactivex.rxjava3.internal.schedulers.IoScheduler$a` @kind object;
  #L50c51a.  v1:= v3.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.c` @type ^`io.reactivex.rxjava3.internal.schedulers.IoScheduler$c` @kind object;
  #L50c51e.  call `d`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$a;.d:(Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$c;)V` @kind virtual;
  #L50c524.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50c454.  v0:= v1.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.d` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L50c458.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L50c45e.  v0:= temp;
  #L50c460.  return v0;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `schedule`(`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b` v6 @kind this, `java.lang.Runnable` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$b;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L50c474.  v0:= v6.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.a` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L50c478.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L50c47e.  v0:= temp;
  #L50c480.  if v0 == 0 then goto L50c48a;
  #L50c484.  v7:= `@@io.reactivex.rxjava3.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.rxjava3.internal.disposables.EmptyDisposable` @kind object;
  #L50c488.  return v7 @kind object;
  #L50c48a.  v0:= v6.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.c` @type ^`io.reactivex.rxjava3.internal.schedulers.IoScheduler$c` @kind object;
  #L50c48e.  v5:= v6.`io.reactivex.rxjava3.internal.schedulers.IoScheduler$b.a` @type ^`io.reactivex.rxjava3.disposables.CompositeDisposable` @kind object;
  #L50c492.  v1:= v7 @kind object;
  #L50c494.  v2:= v8 @kind wide;
  #L50c496.  v4:= v10 @kind object;
  #L50c498.  call temp:= `scheduleActual`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/internal/schedulers/NewThreadWorker;.scheduleActual:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/disposables/DisposableContainer;)Lio/reactivex/rxjava3/internal/schedulers/ScheduledRunnable;` @kind virtual;
  #L50c49e.  v7:= temp @kind object;
  #L50c4a0.  return v7 @kind object;
}
