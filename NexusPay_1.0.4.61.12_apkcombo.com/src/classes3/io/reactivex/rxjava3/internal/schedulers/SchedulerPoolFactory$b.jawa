record `io.reactivex.rxjava3.internal.schedulers.SchedulerPoolFactory$b` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.functions.Function` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.SchedulerPoolFactory$b` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/SchedulerPoolFactory$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L50d0b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50d0ba.  return @kind void;
}
procedure `java.lang.String` `a`(`io.reactivex.rxjava3.internal.schedulers.SchedulerPoolFactory$b` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/SchedulerPoolFactory$b;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L50d098.  call temp:= `getProperty`(v1) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L50d09e.  v1:= temp @kind object;
  #L50d0a0.  return v1 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.rxjava3.internal.schedulers.SchedulerPoolFactory$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/SchedulerPoolFactory$b;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L50d078.  v1:= (`java.lang.String`) v1 @kind object;
  #L50d07c.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/SchedulerPoolFactory$b;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L50d082.  v1:= temp @kind object;
  #L50d084.  return v1 @kind object;
}
