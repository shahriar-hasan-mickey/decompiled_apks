record `io.reactivex.rxjava3.internal.util.AtomicThrowable` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class {
}
global `long` `@@io.reactivex.rxjava3.internal.util.AtomicThrowable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L510f74.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L510f7a.  return @kind void;
}
procedure `boolean` `isTerminated`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.isTerminated:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L510ee8.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L510eee.  v0:= temp @kind object;
  #L510ef0.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L510ef4.  if v0 != v1 then goto L510efc;
  #L510ef8.  v0:= 1I;
  #L510efa.  goto L510efe;
  #L510efc.  v0:= 0I;
  #L510efe.  return v0;
}
procedure `java.lang.Throwable` `terminate`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510f58.  call temp:= `terminate`(v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.terminate:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Throwable;` @kind static;
  #L510f5e.  v0:= temp @kind object;
  #L510f60.  return v0 @kind object;
}
procedure `boolean` `tryAddThrowable`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowable:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;

  #L510f10.  call temp:= `addThrowable`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.addThrowable:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Throwable;)Z` @kind static;
  #L510f16.  v1:= temp;
  #L510f18.  return v1;
}
procedure `boolean` `tryAddThrowableOrReport`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510f2c.  call temp:= `tryAddThrowable`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryAddThrowable:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L510f32.  v0:= temp;
  #L510f34.  if v0 == 0 then goto L510f3c;
  #L510f38.  v2:= 1I;
  #L510f3a.  return v2;
  #L510f3c.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L510f42.  v2:= 0I;
  #L510f44.  return v2;
}
procedure `void` `tryTerminateAndReport`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateAndReport:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L510f8c.  call temp:= `terminate`(v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L510f92.  v0:= temp @kind object;
  #L510f94.  if v0 == 0 then goto L510fa6;
  #L510f98.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L510f9c.  if v0 == v1 then goto L510fa6;
  #L510fa0.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L510fa6.  return @kind void;
}
procedure `void` `tryTerminateConsumer`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L510fb8.  call temp:= `terminate`(v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L510fbe.  v0:= temp @kind object;
  #L510fc0.  if v0 != 0 then goto L510fcc;
  #L510fc4.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onComplete:()V` @kind interface;
  #L510fca.  goto L510fda;
  #L510fcc.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L510fd0.  if v0 == v1 then goto L510fda;
  #L510fd4.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L510fda.  return @kind void;
}
procedure `void` `tryTerminateConsumer`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this, `io.reactivex.rxjava3.core.Emitter` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Emitter;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L510fec.  call temp:= `terminate`(v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L510ff2.  v0:= temp @kind object;
  #L510ff4.  if v0 != 0 then goto L511000;
  #L510ff8.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/Emitter;.onComplete:()V` @kind interface;
  #L510ffe.  goto L51100e;
  #L511000.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L511004.  if v0 == v1 then goto L51100e;
  #L511008.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Emitter;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L51100e.  return @kind void;
}
procedure `void` `tryTerminateConsumer`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this, `io.reactivex.rxjava3.core.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/MaybeObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L511020.  call temp:= `terminate`(v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L511026.  v0:= temp @kind object;
  #L511028.  if v0 != 0 then goto L511034;
  #L51102c.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onComplete:()V` @kind interface;
  #L511032.  goto L511042;
  #L511034.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L511038.  if v0 == v1 then goto L511042;
  #L51103c.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/core/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L511042.  return @kind void;
}
procedure `void` `tryTerminateConsumer`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this, `io.reactivex.rxjava3.core.Observer` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L511054.  call temp:= `terminate`(v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L51105a.  v0:= temp @kind object;
  #L51105c.  if v0 != 0 then goto L511068;
  #L511060.  call `onComplete`(v3) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L511066.  goto L511076;
  #L511068.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L51106c.  if v0 == v1 then goto L511076;
  #L511070.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L511076.  return @kind void;
}
procedure `void` `tryTerminateConsumer`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L511088.  call temp:= `terminate`(v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L51108e.  v0:= temp @kind object;
  #L511090.  if v0 == 0 then goto L5110a2;
  #L511094.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L511098.  if v0 == v1 then goto L5110a2;
  #L51109c.  call `onError`(v3, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5110a2.  return @kind void;
}
procedure `void` `tryTerminateConsumer`(`io.reactivex.rxjava3.internal.util.AtomicThrowable` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5110b4.  call temp:= `terminate`(v2) @signature `Lio/reactivex/rxjava3/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L5110ba.  v0:= temp @kind object;
  #L5110bc.  if v0 != 0 then goto L5110c8;
  #L5110c0.  call `onComplete`(v3) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L5110c6.  goto L5110d6;
  #L5110c8.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L5110cc.  if v0 == v1 then goto L5110d6;
  #L5110d0.  call `onError`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5110d6.  return @kind void;
}
