record `io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface {
  `java.util.ArrayList` `io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L513238.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L51323e.  v0:= new `java.util.ArrayList`;
  #L513242.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L513248.  v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` := v0 @kind object;
  #L51324c.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L513260.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L513266.  v0:= new `java.util.ArrayList`;
  #L51326a.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L513270.  v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` := v0 @kind object;
  #L513274.  return @kind void;
}
procedure `void` `add`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L513288.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L51328c.  call `add`(v0, v2, v3) @signature `Ljava/util/ArrayList;.add:(ILjava/lang/Object;)V` @kind virtual;
  #L513292.  v2:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L513296.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L51329c.  v2:= temp;
  #L51329e.  call `lazySet`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L5132a4.  return @kind void;
}
procedure `boolean` `add`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L512eac.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L512eb0.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L512eb6.  v2:= temp;
  #L512eb8.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L512ebc.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L512ec2.  v0:= temp;
  #L512ec4.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L512eca.  return v2;
}
procedure `boolean` `addAll`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.util.Collection` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L512edc.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L512ee0.  call temp:= `addAll`(v0, v2, v3) @signature `Ljava/util/ArrayList;.addAll:(ILjava/util/Collection;)Z` @kind virtual;
  #L512ee6.  v2:= temp;
  #L512ee8.  v3:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L512eec.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L512ef2.  v3:= temp;
  #L512ef4.  call `lazySet`(v1, v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L512efa.  return v2;
}
procedure `boolean` `addAll`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L512f0c.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L512f10.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L512f16.  v2:= temp;
  #L512f18.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L512f1c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L512f22.  v0:= temp;
  #L512f24.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L512f2a.  return v2;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5132b8.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L5132bc.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L5132c2.  v0:= 0I;
  #L5132c4.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L5132ca.  return @kind void;
}
procedure `boolean` `contains`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L512f3c.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L512f40.  call temp:= `contains`(v0, v2) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L512f46.  v2:= temp;
  #L512f48.  return v2;
}
procedure `boolean` `containsAll`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L512f5c.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L512f60.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/ArrayList;.containsAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L512f66.  v2:= temp;
  #L512f68.  return v2;
}
procedure `boolean` `equals`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L512f7c.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` @kind boolean;
  #L512f80.  if v0 == 0 then goto L512f9a;
  #L512f84.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L512f88.  v2:= (`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList`) v2 @kind object;
  #L512f8c.  v2:= v2.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L512f90.  call temp:= `equals`(v0, v2) @signature `Ljava/util/ArrayList;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L512f96.  v2:= temp;
  #L512f98.  return v2;
  #L512f9a.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L512f9e.  call temp:= `equals`(v0, v2) @signature `Ljava/util/ArrayList;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L512fa4.  v2:= temp;
  #L512fa6.  return v2;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5130e8.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L5130ec.  call temp:= `get`(v0, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L5130f2.  v2:= temp @kind object;
  #L5130f4.  return v2 @kind object;
}
procedure `int` `hashCode`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51306c.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L513070.  call temp:= `hashCode`(v0) @signature `Ljava/util/ArrayList;.hashCode:()I` @kind virtual;
  #L513076.  v0:= temp;
  #L513078.  return v0;
}
procedure `int` `indexOf`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51308c.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L513090.  call temp:= `indexOf`(v0, v2) @signature `Ljava/util/ArrayList;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L513096.  v2:= temp;
  #L513098.  return v2;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L512fb8.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L512fbe.  v0:= temp;
  #L512fc0.  if v0 != 0 then goto L512fc8;
  #L512fc4.  v0:= 1I;
  #L512fc6.  goto L512fca;
  #L512fc8.  v0:= 0I;
  #L512fca.  return v0;
}
procedure `java.util.Iterator` `iterator`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5131b8.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L5131bc.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L5131c2.  v0:= temp @kind object;
  #L5131c4.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5130ac.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L5130b0.  call temp:= `lastIndexOf`(v0, v2) @signature `Ljava/util/ArrayList;.lastIndexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L5130b6.  v2:= temp;
  #L5130b8.  return v2;
}
procedure `java.util.ListIterator` `listIterator`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5131f8.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L5131fc.  call temp:= `listIterator`(v0) @signature `Ljava/util/ArrayList;.listIterator:()Ljava/util/ListIterator;` @kind virtual;
  #L513202.  v0:= temp @kind object;
  #L513204.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L513218.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L51321c.  call temp:= `listIterator`(v0, v2) @signature `Ljava/util/ArrayList;.listIterator:(I)Ljava/util/ListIterator;` @kind virtual;
  #L513222.  v2:= temp @kind object;
  #L513224.  return v2 @kind object;
}
procedure `java.lang.Object` `remove`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L513108.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L51310c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L513112.  v2:= temp @kind object;
  #L513114.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L513118.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L51311e.  v0:= temp;
  #L513120.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L513126.  return v2 @kind object;
}
procedure `boolean` `remove`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L512fdc.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L512fe0.  call temp:= `remove`(v0, v2) @signature `Ljava/util/ArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L512fe6.  v2:= temp;
  #L512fe8.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L512fec.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L512ff2.  v0:= temp;
  #L512ff4.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L512ffa.  return v2;
}
procedure `boolean` `removeAll`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51300c.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L513010.  call temp:= `removeAll`(v0, v2) @signature `Ljava/util/ArrayList;.removeAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L513016.  v2:= temp;
  #L513018.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L51301c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L513022.  v0:= temp;
  #L513024.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L51302a.  return v2;
}
procedure `boolean` `retainAll`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51303c.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L513040.  call temp:= `retainAll`(v0, v2) @signature `Ljava/util/ArrayList;.retainAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L513046.  v2:= temp;
  #L513048.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L51304c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L513052.  v0:= temp;
  #L513054.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L51305a.  return v2;
}
procedure `java.lang.Object` `set`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L513138.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L51313c.  call temp:= `set`(v0, v2, v3) @signature `Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L513142.  v2:= temp @kind object;
  #L513144.  return v2 @kind object;
}
procedure `int` `size`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5130cc.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L5130d2.  v0:= temp;
  #L5130d4.  return v0;
}
procedure `java.util.List` `subList`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5131d8.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L5131dc.  call temp:= `subList`(v0, v2, v3) @signature `Ljava/util/ArrayList;.subList:(II)Ljava/util/List;` @kind virtual;
  #L5131e2.  v2:= temp @kind object;
  #L5131e4.  return v2 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L513158.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L51315c.  call temp:= `toArray`(v0) @signature `Ljava/util/ArrayList;.toArray:()[Ljava/lang/Object;` @kind virtual;
  #L513162.  v0:= temp @kind object;
  #L513164.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L513178.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L51317c.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L513182.  v2:= temp @kind object;
  #L513184.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/VolatileSizeArrayList;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L513198.  v0:= v1.`io.reactivex.rxjava3.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L51319c.  call temp:= `toString`(v0) @signature `Ljava/util/ArrayList;.toString:()Ljava/lang/String;` @kind virtual;
  #L5131a2.  v0:= temp @kind object;
  #L5131a4.  return v0 @kind object;
}
