record `io.reactivex.rxjava3.internal.util.HashMapSupplier` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.rxjava3.functions.Supplier` @kind interface {
}
global `io.reactivex.rxjava3.internal.util.HashMapSupplier`[] `@@io.reactivex.rxjava3.internal.util.HashMapSupplier.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.rxjava3.internal.util.HashMapSupplier` `@@io.reactivex.rxjava3.internal.util.HashMapSupplier.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L511dc0.  v0:= new `io.reactivex.rxjava3.internal.util.HashMapSupplier`;
  #L511dc4.  v1:= "INSTANCE" @kind object;
  #L511dc8.  v2:= 0I;
  #L511dca.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L511dd0.  `@@io.reactivex.rxjava3.internal.util.HashMapSupplier.INSTANCE` @type ^`io.reactivex.rxjava3.internal.util.HashMapSupplier` := v0 @kind object;
  #L511dd4.  v1:= 1I;
  #L511dd6.  v1:= new `io.reactivex.rxjava3.internal.util.HashMapSupplier`[v1];
  #L511dda.  v1[v2]:= v0 @kind object;
  #L511dde.  `@@io.reactivex.rxjava3.internal.util.HashMapSupplier.$VALUES` @type ^`io.reactivex.rxjava3.internal.util.HashMapSupplier`[] := v1 @kind object;
  #L511de2.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.util.HashMapSupplier` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L511df4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L511dfa.  return @kind void;
}
procedure `io.reactivex.rxjava3.functions.Supplier` `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L511d28.  v0:= `@@io.reactivex.rxjava3.internal.util.HashMapSupplier.INSTANCE` @type ^`io.reactivex.rxjava3.internal.util.HashMapSupplier` @kind object;
  #L511d2c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.internal.util.HashMapSupplier` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.valueOf:(Ljava/lang/String;)Lio/reactivex/rxjava3/internal/util/HashMapSupplier;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L511d40.  v0:= constclass @type ^`io.reactivex.rxjava3.internal.util.HashMapSupplier` @kind object;
  #L511d44.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L511d4a.  v1:= temp @kind object;
  #L511d4c.  v1:= (`io.reactivex.rxjava3.internal.util.HashMapSupplier`) v1 @kind object;
  #L511d50.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.internal.util.HashMapSupplier`[] `values`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.values:()[Lio/reactivex/rxjava3/internal/util/HashMapSupplier;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L511d64.  v0:= `@@io.reactivex.rxjava3.internal.util.HashMapSupplier.$VALUES` @type ^`io.reactivex.rxjava3.internal.util.HashMapSupplier`[] @kind object;
  #L511d68.  call temp:= `clone`(v0) @signature `[Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.clone:()Ljava/lang/Object;` @kind virtual;
  #L511d6e.  v0:= temp @kind object;
  #L511d70.  v0:= (`io.reactivex.rxjava3.internal.util.HashMapSupplier`[]) v0 @kind object;
  #L511d74.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`io.reactivex.rxjava3.internal.util.HashMapSupplier` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L511d88.  call temp:= `get`(v1) @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.get:()Ljava/util/Map;` @kind virtual;
  #L511d8e.  v0:= temp @kind object;
  #L511d90.  return v0 @kind object;
}
procedure `java.util.Map` `get`(`io.reactivex.rxjava3.internal.util.HashMapSupplier` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.get:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L511da4.  v0:= new `java.util.HashMap`;
  #L511da8.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L511dae.  return v0 @kind object;
}
