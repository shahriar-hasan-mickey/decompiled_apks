record `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind class @AccessFlag PUBLIC {
  `int` `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.a` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.b` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.c` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L510c94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L510c9a.  v0.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.a` @type ^`int` := v1;
  #L510c9e.  v1:= v1 + 1;
  #L510ca2.  v1:= new `java.lang.Object`[v1];
  #L510ca6.  v0.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.b` @type ^`java.lang.Object`[] := v1 @kind object;
  #L510caa.  v0.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.c` @type ^`java.lang.Object`[] := v1 @kind object;
  #L510cae.  return @kind void;
}
procedure `boolean` `accept`(`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` v4 @kind this, `io.reactivex.rxjava3.core.Observer` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.accept:(Lio/reactivex/rxjava3/core/Observer;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L510bf4.  v0:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.b` @type ^`java.lang.Object`[] @kind object;
  #L510bf8.  v1:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.a` @type ^`int`;
  #L510bfc.  v2:= 0I;
  #L510bfe.  if v0 == 0 then goto L510c30;
  #L510c02.  if v2 >= v1 then goto L510c26;
  #L510c06.  v3:= v0[v2] @kind object;
  #L510c0a.  if v3 != 0 then goto L510c10;
  #L510c0e.  goto L510c26;
  #L510c10.  call temp:= `acceptFull`(v3, v5) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.acceptFull:(Ljava/lang/Object;Lio/reactivex/rxjava3/core/Observer;)Z` @kind static;
  #L510c16.  v3:= temp;
  #L510c18.  if v3 == 0 then goto L510c20;
  #L510c1c.  v5:= 1I;
  #L510c1e.  return v5;
  #L510c20.  v2:= v2 + 1;
  #L510c24.  goto L510c02;
  #L510c26.  v0:= v0[v1] @kind object;
  #L510c2a.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L510c2e.  goto L510bfc;
  #L510c30.  return v2;
}
procedure `boolean` `accept`(`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.accept:(Lorg/reactivestreams/Subscriber;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L510c44.  v0:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.b` @type ^`java.lang.Object`[] @kind object;
  #L510c48.  v1:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.a` @type ^`int`;
  #L510c4c.  v2:= 0I;
  #L510c4e.  if v0 == 0 then goto L510c80;
  #L510c52.  if v2 >= v1 then goto L510c76;
  #L510c56.  v3:= v0[v2] @kind object;
  #L510c5a.  if v3 != 0 then goto L510c60;
  #L510c5e.  goto L510c76;
  #L510c60.  call temp:= `acceptFull`(v3, v5) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.acceptFull:(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z` @kind static;
  #L510c66.  v3:= temp;
  #L510c68.  if v3 == 0 then goto L510c70;
  #L510c6c.  v5:= 1I;
  #L510c6e.  return v5;
  #L510c70.  v2:= v2 + 1;
  #L510c74.  goto L510c52;
  #L510c76.  v0:= v0[v1] @kind object;
  #L510c7a.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L510c7e.  goto L510c4c;
  #L510c80.  return v2;
}
procedure `void` `add`(`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L510cc0.  v0:= v3.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.a` @type ^`int`;
  #L510cc4.  v1:= v3.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.d` @type ^`int`;
  #L510cc8.  if v1 != v0 then goto L510ce2;
  #L510ccc.  v1:= v0 + 1;
  #L510cd0.  v1:= new `java.lang.Object`[v1];
  #L510cd4.  v2:= v3.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.c` @type ^`java.lang.Object`[] @kind object;
  #L510cd8.  v2[v0]:= v1 @kind object;
  #L510cdc.  v3.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.c` @type ^`java.lang.Object`[] := v1 @kind object;
  #L510ce0.  v1:= 0I;
  #L510ce2.  v0:= v3.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.c` @type ^`java.lang.Object`[] @kind object;
  #L510ce6.  v0[v1]:= v4 @kind object;
  #L510cea.  v1:= v1 + 1;
  #L510cee.  v3.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.d` @type ^`int` := v1;
  #L510cf2.  return @kind void;
}
procedure `void` `forEachWhile`(`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` v4 @kind this, `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList$NonThrowingPredicate` v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.forEachWhile:(Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList$NonThrowingPredicate;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L510d04.  v0:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.b` @type ^`java.lang.Object`[] @kind object;
  #L510d08.  v1:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.a` @type ^`int`;
  #L510d0c.  if v0 == 0 then goto L510d3e;
  #L510d10.  v2:= 0I;
  #L510d12.  if v2 >= v1 then goto L510d34;
  #L510d16.  v3:= v0[v2] @kind object;
  #L510d1a.  if v3 != 0 then goto L510d20;
  #L510d1e.  goto L510d34;
  #L510d20.  call temp:= `test`(v5, v3) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList$NonThrowingPredicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L510d26.  v3:= temp;
  #L510d28.  if v3 == 0 then goto L510d2e;
  #L510d2c.  return @kind void;
  #L510d2e.  v2:= v2 + 1;
  #L510d32.  goto L510d12;
  #L510d34.  v0:= v0[v1] @kind object;
  #L510d38.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L510d3c.  goto L510d0c;
  #L510d3e.  return @kind void;
}
procedure `void` `forEachWhile`(`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` v4 @kind this, `java.lang.Object` v5 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.forEachWhile:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L510d50.  v0:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.b` @type ^`java.lang.Object`[] @kind object;
  #L510d54.  v1:= v4.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.a` @type ^`int`;
  #L510d58.  v2:= 0I;
  #L510d5a.  if v2 >= v1 then goto L510d7c;
  #L510d5e.  v3:= v0[v2] @kind object;
  #L510d62.  if v3 != 0 then goto L510d68;
  #L510d66.  return @kind void;
  #L510d68.  call temp:= `test`(v6, v5, v3) @signature `Lio/reactivex/rxjava3/functions/BiPredicate;.test:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind interface;
  #L510d6e.  v3:= temp;
  #L510d70.  if v3 == 0 then goto L510d76;
  #L510d74.  return @kind void;
  #L510d76.  v2:= v2 + 1;
  #L510d7a.  goto L510d5a;
  #L510d7c.  v0:= v0[v1] @kind object;
  #L510d80.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L510d84.  goto L510d58;
}
procedure `void` `setFirst`(`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.setFirst:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L510d98.  v0:= v2.`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList.b` @type ^`java.lang.Object`[] @kind object;
  #L510d9c.  v1:= 0I;
  #L510d9e.  v0[v1]:= v3 @kind object;
  #L510da2.  return @kind void;
}
