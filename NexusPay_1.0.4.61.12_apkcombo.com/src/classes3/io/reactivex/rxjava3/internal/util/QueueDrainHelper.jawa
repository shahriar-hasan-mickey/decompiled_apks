record `io.reactivex.rxjava3.internal.util.QueueDrainHelper` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.util.QueueDrainHelper` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L512c0c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L512c12.  v0:= new `java.lang.IllegalStateException`;
  #L512c16.  v1:= "No instances!" @kind object;
  #L512c1a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L512c20.  throw v0;
}
procedure `boolean` `a`(`io.reactivex.rxjava3.functions.BooleanSupplier` v0 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.a:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Z` @AccessFlag STATIC {
    temp;

  #L512a7c.  call temp:= `getAsBoolean`(v0) @signature `Lio/reactivex/rxjava3/functions/BooleanSupplier;.getAsBoolean:()Z` @kind interface;
  #L512a82.  v0:= temp;
  #L512a84.  return v0;
  #L512a86.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L512a88.  call `throwIfFatal`(v0) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L512a8e.  v0:= 1I;
  #L512a90.  return v0;
  catch `java.lang.Throwable` @[L512a7c..L512a84] goto L512a86;
}
procedure `boolean` `b`(`long` v9 , `org.reactivestreams.Subscriber` v11 @kind object, `java.util.Queue` v12 @kind object, `java.util.concurrent.atomic.AtomicLong` v13 @kind object, `io.reactivex.rxjava3.functions.BooleanSupplier` v14 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.b:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/rxjava3/functions/BooleanSupplier;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L512ab0.  v0:= -9223372036854775808L;
  #L512ab4.  v2:= v9 ^& v0 @kind long;
  #L512ab8.  v4:= 1I;
  #L512aba.  v5:= lcmp(v2, v9);
  #L512abe.  if v5 == 0 then goto L512af2;
  #L512ac2.  call temp:= `a`(v14) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.a:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Z` @kind static;
  #L512ac8.  v5:= temp;
  #L512aca.  if v5 == 0 then goto L512ad0;
  #L512ace.  return v4;
  #L512ad0.  call temp:= `poll`(v12) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L512ad6.  v5:= temp @kind object;
  #L512ad8.  if v5 != 0 then goto L512ae4;
  #L512adc.  call `onComplete`(v11) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L512ae2.  return v4;
  #L512ae4.  call `onNext`(v11, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L512aea.  v4:= 1L;
  #L512aee.  v2:= v2 + v4 @kind long;
  #L512af0.  goto L512ab8;
  #L512af2.  call temp:= `a`(v14) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.a:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Z` @kind static;
  #L512af8.  v9:= temp;
  #L512afa.  if v9 == 0 then goto L512b00;
  #L512afe.  return v4;
  #L512b00.  call temp:= `isEmpty`(v12) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L512b06.  v9:= temp;
  #L512b08.  if v9 == 0 then goto L512b14;
  #L512b0c.  call `onComplete`(v11) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L512b12.  return v4;
  #L512b14.  call temp:= `get`(v13) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L512b1a.  v9:= temp @kind wide;
  #L512b1c.  v4:= lcmp(v9, v2);
  #L512b20.  if v4 != 0 then goto L512ab8;
  #L512b24.  v9:= 9223372036854775807L;
  #L512b2e.  v2:= v2 ^& v9 @kind long;
  #L512b30.  v2:= -v2 @kind long;
  #L512b32.  call temp:= `addAndGet`(v13, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.addAndGet:(J)J` @kind virtual;
  #L512b38.  v2:= temp @kind wide;
  #L512b3a.  v9:= v9 ^& v2 @kind long;
  #L512b3c.  v4:= 0L;
  #L512b40.  v6:= lcmp(v9, v4);
  #L512b44.  if v6 != 0 then goto L512b4c;
  #L512b48.  v9:= 0I;
  #L512b4a.  return v9;
  #L512b4c.  v9:= v2 ^& v0 @kind long;
  #L512b50.  v7:= v9 @kind wide;
  #L512b52.  v9:= v2 @kind wide;
  #L512b54.  v2:= v7 @kind wide;
  #L512b56.  goto L512ab8;
}
procedure `boolean` `checkTerminated`(`boolean` v2 , `boolean` v3 , `io.reactivex.rxjava3.core.Observer` v4 @kind object, `boolean` v5 , `io.reactivex.rxjava3.internal.fuseable.SimpleQueue` v6 @kind object, `io.reactivex.rxjava3.disposables.Disposable` v7 @kind object, `io.reactivex.rxjava3.internal.util.ObservableQueueDrain` v8 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.checkTerminated:(ZZLio/reactivex/rxjava3/core/Observer;ZLio/reactivex/rxjava3/internal/fuseable/SimpleQueue;Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L512968.  call temp:= `cancelled`(v8) @signature `Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;.cancelled:()Z` @kind interface;
  #L51296e.  v0:= temp;
  #L512970.  v1:= 1I;
  #L512972.  if v0 == 0 then goto L512984;
  #L512976.  call `clear`(v6) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L51297c.  call `dispose`(v7) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L512982.  return v1;
  #L512984.  if v2 == 0 then goto L5129f0;
  #L512988.  if v5 == 0 then goto L5129b6;
  #L51298c.  if v3 == 0 then goto L5129f0;
  #L512990.  if v7 == 0 then goto L51299a;
  #L512994.  call `dispose`(v7) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L51299a.  call temp:= `error`(v8) @signature `Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;.error:()Ljava/lang/Throwable;` @kind interface;
  #L5129a0.  v2:= temp @kind object;
  #L5129a2.  if v2 == 0 then goto L5129ae;
  #L5129a6.  call `onError`(v4, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5129ac.  goto L5129b4;
  #L5129ae.  call `onComplete`(v4) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L5129b4.  return v1;
  #L5129b6.  call temp:= `error`(v8) @signature `Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;.error:()Ljava/lang/Throwable;` @kind interface;
  #L5129bc.  v2:= temp @kind object;
  #L5129be.  if v2 == 0 then goto L5129da;
  #L5129c2.  call `clear`(v6) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L5129c8.  if v7 == 0 then goto L5129d2;
  #L5129cc.  call `dispose`(v7) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L5129d2.  call `onError`(v4, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5129d8.  return v1;
  #L5129da.  if v3 == 0 then goto L5129f0;
  #L5129de.  if v7 == 0 then goto L5129e8;
  #L5129e2.  call `dispose`(v7) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L5129e8.  call `onComplete`(v4) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L5129ee.  return v1;
  #L5129f0.  v2:= 0I;
  #L5129f2.  return v2;
}
procedure `boolean` `checkTerminated`(`boolean` v2 , `boolean` v3 , `org.reactivestreams.Subscriber` v4 @kind object, `boolean` v5 , `io.reactivex.rxjava3.internal.fuseable.SimpleQueue` v6 @kind object, `io.reactivex.rxjava3.internal.util.QueueDrain` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.checkTerminated:(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/rxjava3/internal/fuseable/SimpleQueue;Lio/reactivex/rxjava3/internal/util/QueueDrain;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L512a04.  call temp:= `cancelled`(v7) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrain;.cancelled:()Z` @kind interface;
  #L512a0a.  v0:= temp;
  #L512a0c.  v1:= 1I;
  #L512a0e.  if v0 == 0 then goto L512a1a;
  #L512a12.  call `clear`(v6) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L512a18.  return v1;
  #L512a1a.  if v2 == 0 then goto L512a68;
  #L512a1e.  if v5 == 0 then goto L512a42;
  #L512a22.  if v3 == 0 then goto L512a68;
  #L512a26.  call temp:= `error`(v7) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrain;.error:()Ljava/lang/Throwable;` @kind interface;
  #L512a2c.  v2:= temp @kind object;
  #L512a2e.  if v2 == 0 then goto L512a3a;
  #L512a32.  call `onError`(v4, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L512a38.  goto L512a40;
  #L512a3a.  call `onComplete`(v4) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L512a40.  return v1;
  #L512a42.  call temp:= `error`(v7) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrain;.error:()Ljava/lang/Throwable;` @kind interface;
  #L512a48.  v2:= temp @kind object;
  #L512a4a.  if v2 == 0 then goto L512a5c;
  #L512a4e.  call `clear`(v6) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L512a54.  call `onError`(v4, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L512a5a.  return v1;
  #L512a5c.  if v3 == 0 then goto L512a68;
  #L512a60.  call `onComplete`(v4) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L512a66.  return v1;
  #L512a68.  v2:= 0I;
  #L512a6a.  return v2;
}
procedure `io.reactivex.rxjava3.internal.fuseable.SimpleQueue` `createQueue`(`int` v1 ) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.createQueue:(I)Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L512bdc.  if v1 >= 0 then goto L512bee;
  #L512be0.  v0:= new `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue`;
  #L512be4.  v1:= -v1 @kind int;
  #L512be6.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L512bec.  return v0 @kind object;
  #L512bee.  v0:= new `io.reactivex.rxjava3.internal.queue.SpscArrayQueue`;
  #L512bf2.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/queue/SpscArrayQueue;.<init>:(I)V` @kind direct;
  #L512bf8.  return v0 @kind object;
}
procedure `void` `drainLoop`(`io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` v11 @kind object, `io.reactivex.rxjava3.core.Observer` v12 @kind object, `boolean` v13 , `io.reactivex.rxjava3.disposables.Disposable` v14 @kind object, `io.reactivex.rxjava3.internal.util.ObservableQueueDrain` v15 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.drainLoop:(Lio/reactivex/rxjava3/internal/fuseable/SimplePlainQueue;Lio/reactivex/rxjava3/core/Observer;ZLio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L512c34.  v0:= 1I;
  #L512c36.  v1:= 1I;
  #L512c38.  call temp:= `done`(v15) @signature `Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;.done:()Z` @kind interface;
  #L512c3e.  v2:= temp;
  #L512c40.  call temp:= `isEmpty`(v11) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.isEmpty:()Z` @kind interface;
  #L512c46.  v3:= temp;
  #L512c48.  v4:= v12 @kind object;
  #L512c4a.  v5:= v13;
  #L512c4c.  v6:= v11 @kind object;
  #L512c4e.  v7:= v14 @kind object;
  #L512c50.  v8:= v15 @kind object;
  #L512c52.  call temp:= `checkTerminated`(v2, v3, v4, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.checkTerminated:(ZZLio/reactivex/rxjava3/core/Observer;ZLio/reactivex/rxjava3/internal/fuseable/SimpleQueue;Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;)Z` @kind static;
  #L512c58.  v2:= temp;
  #L512c5a.  if v2 == 0 then goto L512c60;
  #L512c5e.  return @kind void;
  #L512c60.  call temp:= `done`(v15) @signature `Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;.done:()Z` @kind interface;
  #L512c66.  v3:= temp;
  #L512c68.  call temp:= `poll`(v11) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimplePlainQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L512c6e.  v2:= temp @kind object;
  #L512c70.  if v2 != 0 then goto L512c78;
  #L512c74.  v10:= 1I;
  #L512c76.  goto L512c7c;
  #L512c78.  v4:= 0I;
  #L512c7a.  v10:= 0I;
  #L512c7c.  v4:= v10;
  #L512c7e.  v5:= v12 @kind object;
  #L512c80.  v6:= v13;
  #L512c82.  v7:= v11 @kind object;
  #L512c84.  v8:= v14 @kind object;
  #L512c86.  v9:= v15 @kind object;
  #L512c88.  call temp:= `checkTerminated`(v3, v4, v5, v6, v7, v8, v9) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.checkTerminated:(ZZLio/reactivex/rxjava3/core/Observer;ZLio/reactivex/rxjava3/internal/fuseable/SimpleQueue;Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;)Z` @kind static;
  #L512c8e.  v3:= temp;
  #L512c90.  if v3 == 0 then goto L512c96;
  #L512c94.  return @kind void;
  #L512c96.  if v10 == 0 then goto L512caa;
  #L512c9a.  v1:= -v1 @kind int;
  #L512c9c.  call temp:= `leave`(v15, v1) @signature `Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;.leave:(I)I` @kind interface;
  #L512ca2.  v1:= temp;
  #L512ca4.  if v1 != 0 then goto L512c38;
  #L512ca8.  return @kind void;
  #L512caa.  call `accept`(v15, v12, v2) @signature `Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;.accept:(Lio/reactivex/rxjava3/core/Observer;Ljava/lang/Object;)V` @kind interface;
  #L512cb0.  goto L512c60;
}
procedure `void` `drainMaxLoop`(`io.reactivex.rxjava3.internal.fuseable.SimplePlainQueue` v10 @kind object, `org.reactivestreams.Subscriber` v11 @kind object, `boolean` v12 , `io.reactivex.rxjava3.disposables.Disposable` v13 @kind object, `io.reactivex.rxjava3.internal.util.QueueDrain` v14 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.drainMaxLoop:(Lio/reactivex/rxjava3/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/internal/util/QueueDrain;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L512cc4.  v0:= 1I;
  #L512cc6.  v1:= 1I;
  #L512cc8.  call temp:= `done`(v14) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrain;.done:()Z` @kind interface;
  #L512cce.  v2:= temp;
  #L512cd0.  call temp:= `poll`(v10) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimplePlainQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L512cd6.  v8:= temp @kind object;
  #L512cd8.  if v8 != 0 then goto L512ce0;
  #L512cdc.  v9:= 1I;
  #L512cde.  goto L512ce4;
  #L512ce0.  v3:= 0I;
  #L512ce2.  v9:= 0I;
  #L512ce4.  v3:= v9;
  #L512ce6.  v4:= v11 @kind object;
  #L512ce8.  v5:= v12;
  #L512cea.  v6:= v10 @kind object;
  #L512cec.  v7:= v14 @kind object;
  #L512cee.  call temp:= `checkTerminated`(v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.checkTerminated:(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/rxjava3/internal/fuseable/SimpleQueue;Lio/reactivex/rxjava3/internal/util/QueueDrain;)Z` @kind static;
  #L512cf4.  v2:= temp;
  #L512cf6.  if v2 == 0 then goto L512d06;
  #L512cfa.  if v13 == 0 then goto L512d04;
  #L512cfe.  call `dispose`(v13) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L512d04.  return @kind void;
  #L512d06.  if v9 == 0 then goto L512d1a;
  #L512d0a.  v1:= -v1 @kind int;
  #L512d0c.  call temp:= `leave`(v14, v1) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrain;.leave:(I)I` @kind interface;
  #L512d12.  v1:= temp;
  #L512d14.  if v1 != 0 then goto L512cc8;
  #L512d18.  return @kind void;
  #L512d1a.  call temp:= `requested`(v14) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrain;.requested:()J` @kind interface;
  #L512d20.  v2:= temp @kind wide;
  #L512d22.  v4:= 0L;
  #L512d26.  v6:= lcmp(v2, v4);
  #L512d2a.  if v6 == 0 then goto L512d58;
  #L512d2e.  call temp:= `accept`(v14, v11, v8) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrain;.accept:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)Z` @kind interface;
  #L512d34.  v4:= temp;
  #L512d36.  if v4 == 0 then goto L512cc8;
  #L512d3a.  v4:= 9223372036854775807L;
  #L512d44.  v6:= lcmp(v2, v4);
  #L512d48.  if v6 == 0 then goto L512cc8;
  #L512d4c.  v2:= 1L;
  #L512d50.  call temp:= `produced`(v14, v2) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrain;.produced:(J)J` @kind interface;
  #L512d56.  goto L512cc8;
  #L512d58.  call `clear`(v10) @signature `Lio/reactivex/rxjava3/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L512d5e.  if v13 == 0 then goto L512d68;
  #L512d62.  call `dispose`(v13) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L512d68.  v10:= new `io.reactivex.rxjava3.exceptions.MissingBackpressureException`;
  #L512d6c.  v12:= "Could not emit value due to lack of requests." @kind object;
  #L512d70.  call `<init>`(v10, v12) @signature `Lio/reactivex/rxjava3/exceptions/MissingBackpressureException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L512d76.  call `onError`(v11, v10) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L512d7c.  return @kind void;
}
procedure `void` `postComplete`(`org.reactivestreams.Subscriber` v15 @kind object, `java.util.Queue` v16 @kind object, `java.util.concurrent.atomic.AtomicLong` v17 @kind object, `io.reactivex.rxjava3.functions.BooleanSupplier` v18 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.postComplete:(Lorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/rxjava3/functions/BooleanSupplier;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L512d90.  call temp:= `isEmpty`(v16) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L512d96.  v0:= temp;
  #L512d98.  if v0 == 0 then goto L512da4;
  #L512d9c.  call `onComplete`(v15) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L512da2.  return @kind void;
  #L512da4.  call temp:= `get`(v17) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L512daa.  v1:= temp @kind wide;
  #L512dac.  v3:= v15 @kind object;
  #L512dae.  v4:= v16 @kind object;
  #L512db2.  v5:= v17 @kind object;
  #L512db6.  v6:= v18 @kind object;
  #L512dba.  call temp:= `b`(v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.b:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/rxjava3/functions/BooleanSupplier;)Z` @kind static;
  #L512dc0.  v0:= temp;
  #L512dc2.  if v0 == 0 then goto L512dc8;
  #L512dc6.  return @kind void;
  #L512dc8.  call temp:= `get`(v17) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L512dce.  v0:= temp @kind wide;
  #L512dd0.  v2:= -9223372036854775808L;
  #L512dd4.  v4:= v0 ^& v2 @kind long;
  #L512dd8.  v6:= 0L;
  #L512ddc.  v8:= lcmp(v4, v6);
  #L512de0.  if v8 == 0 then goto L512de6;
  #L512de4.  return @kind void;
  #L512de6.  v9:= v0 ^| v2 @kind long;
  #L512dea.  v2:= v17 @kind object;
  #L512dee.  call temp:= `compareAndSet`(v2, v0, v9) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L512df4.  v3:= temp;
  #L512df6.  if v3 == 0 then goto L512dc8;
  #L512dfa.  v3:= lcmp(v0, v6);
  #L512dfe.  if v3 == 0 then goto L512e16;
  #L512e02.  v11:= v15 @kind object;
  #L512e04.  v12:= v16 @kind object;
  #L512e08.  v13:= v17 @kind object;
  #L512e0c.  v14:= v18 @kind object;
  #L512e10.  call temp:= `b`(v9, v11, v12, v13, v14) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.b:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/rxjava3/functions/BooleanSupplier;)Z` @kind static;
  #L512e16.  return @kind void;
}
procedure `boolean` `postCompleteRequest`(`long` v14 , `org.reactivestreams.Subscriber` v16 @kind object, `java.util.Queue` v17 @kind object, `java.util.concurrent.atomic.AtomicLong` v18 @kind object, `io.reactivex.rxjava3.functions.BooleanSupplier` v19 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.postCompleteRequest:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/rxjava3/functions/BooleanSupplier;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L512b68.  v0:= v14 @kind wide;
  #L512b6a.  call temp:= `get`(v18) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L512b70.  v2:= temp @kind wide;
  #L512b72.  v4:= 9223372036854775807L;
  #L512b7c.  v4:= v4 ^& v2 @kind long;
  #L512b7e.  v6:= -9223372036854775808L;
  #L512b82.  v8:= v2 ^& v6 @kind long;
  #L512b86.  call temp:= `addCap`(v4, v14) @signature `Lio/reactivex/rxjava3/internal/util/BackpressureHelper;.addCap:(JJ)J` @kind static;
  #L512b8c.  v4:= temp @kind wide;
  #L512b8e.  v4:= v4 ^| v8 @kind long;
  #L512b90.  v12:= v18 @kind object;
  #L512b94.  call temp:= `compareAndSet`(v12, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L512b9a.  v4:= temp;
  #L512b9c.  if v4 == 0 then goto L512b6a;
  #L512ba0.  v4:= lcmp(v2, v6);
  #L512ba4.  if v4 != 0 then goto L512bc6;
  #L512ba8.  v8:= v0 ^| v6 @kind long;
  #L512bac.  v10:= v16 @kind object;
  #L512bb0.  v11:= v17 @kind object;
  #L512bb4.  v12:= v18 @kind object;
  #L512bb8.  v13:= v19 @kind object;
  #L512bbc.  call temp:= `b`(v8, v10, v11, v12, v13) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.b:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/rxjava3/functions/BooleanSupplier;)Z` @kind static;
  #L512bc2.  v0:= 1I;
  #L512bc4.  return v0;
  #L512bc6.  v0:= 0I;
  #L512bc8.  return v0;
}
procedure `void` `request`(`org.reactivestreams.Subscription` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/internal/util/QueueDrainHelper;.request:(Lorg/reactivestreams/Subscription;I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L512e28.  if v3 >= 0 then goto L512e38;
  #L512e2c.  v0:= 9223372036854775807L;
  #L512e36.  goto L512e3a;
  #L512e38.  v0:= (`long`) v3 @kind i2l;
  #L512e3a.  call `request`(v2, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L512e40.  return @kind void;
}
