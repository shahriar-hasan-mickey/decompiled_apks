record `io.reactivex.rxjava3.internal.util.ExceptionHelper` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.Throwable` `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L511b80.  v0:= new `io.reactivex.rxjava3.internal.util.ExceptionHelper$a`;
  #L511b84.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper$a;.<init>:()V` @kind direct;
  #L511b8a.  `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` := v0 @kind object;
  #L511b8e.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.util.ExceptionHelper` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L511ba0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L511ba6.  v0:= new `java.lang.IllegalStateException`;
  #L511baa.  v1:= "No instances!" @kind object;
  #L511bae.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L511bb4.  throw v0;
}
procedure `boolean` `addThrowable`(`java.util.concurrent.atomic.AtomicReference` v5 @kind object, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.addThrowable:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L511940.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L511946.  v0:= temp @kind object;
  #L511948.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L51194c.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L511950.  v2:= 0I;
  #L511952.  if v0 != v1 then goto L511958;
  #L511956.  return v2;
  #L511958.  v1:= 1I;
  #L51195a.  if v0 != 0 then goto L511962;
  #L51195e.  v3:= v6 @kind object;
  #L511960.  goto L51197a;
  #L511962.  v3:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L511966.  v4:= 2I;
  #L511968.  v4:= new `java.lang.Throwable`[v4];
  #L51196c.  v4[v2]:= v0 @kind object;
  #L511970.  v4[v1]:= v6 @kind object;
  #L511974.  call `<init>`(v3, v4) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L51197a.  call temp:= `compareAndSet`(v5, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L511980.  v0:= temp;
  #L511982.  if v0 == 0 then goto L511940;
  #L511986.  return v1;
}
procedure `java.lang.NullPointerException` `createNullPointerException`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L5119b8.  v0:= new `java.lang.NullPointerException`;
  #L5119bc.  call temp:= `nullWarning`(v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullWarning:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L5119c2.  v1:= temp @kind object;
  #L5119c4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5119ca.  return v0 @kind object;
}
procedure `java.util.List` `flatten`(`java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.flatten:(Ljava/lang/Throwable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L511afc.  v0:= new `java.util.ArrayList`;
  #L511b00.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L511b06.  v1:= new `java.util.ArrayDeque`;
  #L511b0a.  call `<init>`(v1) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L511b10.  call temp:= `offer`(v1, v4) @signature `Ljava/util/ArrayDeque;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L511b16.  call temp:= `isEmpty`(v1) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #L511b1c.  v4:= temp;
  #L511b1e.  if v4 != 0 then goto L511b6e;
  #L511b22.  call temp:= `removeFirst`(v1) @signature `Ljava/util/ArrayDeque;.removeFirst:()Ljava/lang/Object;` @kind virtual;
  #L511b28.  v4:= temp @kind object;
  #L511b2a.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L511b2e.  v2:= instanceof @variable v4 @type ^`io.reactivex.rxjava3.exceptions.CompositeException` @kind boolean;
  #L511b32.  if v2 == 0 then goto L511b66;
  #L511b36.  v4:= (`io.reactivex.rxjava3.exceptions.CompositeException`) v4 @kind object;
  #L511b3a.  call temp:= `getExceptions`(v4) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.getExceptions:()Ljava/util/List;` @kind virtual;
  #L511b40.  v4:= temp @kind object;
  #L511b42.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L511b48.  v2:= temp;
  #L511b4a.  v2:= v2 + -1;
  #L511b4e.  if v2 < 0 then goto L511b16;
  #L511b52.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L511b58.  v3:= temp @kind object;
  #L511b5a.  call temp:= `offerFirst`(v1, v3) @signature `Ljava/util/ArrayDeque;.offerFirst:(Ljava/lang/Object;)Z` @kind virtual;
  #L511b60.  v2:= v2 + -1;
  #L511b64.  goto L511b4e;
  #L511b66.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L511b6c.  goto L511b16;
  #L511b6e.  return v0 @kind object;
}
procedure `java.lang.Object` `nullCheck`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5119dc.  if v0 == 0 then goto L5119e2;
  #L5119e0.  return v0 @kind object;
  #L5119e2.  call temp:= `createNullPointerException`(v1) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L5119e8.  v0:= temp @kind object;
  #L5119ea.  throw v0;
}
procedure `java.lang.String` `nullWarning`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullWarning:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L511a34.  v0:= new `java.lang.StringBuilder`;
  #L511a38.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L511a3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L511a44.  v1:= " Null values are generally not allowed in 3.x operators and sources." @kind object;
  #L511a48.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L511a4e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L511a54.  v1:= temp @kind object;
  #L511a56.  return v1 @kind object;
}
procedure `java.lang.Throwable` `terminate`(`java.util.concurrent.atomic.AtomicReference` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.terminate:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L511ac8.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L511ace.  v0:= temp @kind object;
  #L511ad0.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L511ad4.  v1:= `@@io.reactivex.rxjava3.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L511ad8.  if v0 == v1 then goto L511aea;
  #L511adc.  call temp:= `getAndSet`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L511ae2.  v2:= temp @kind object;
  #L511ae4.  v0:= v2 @kind object;
  #L511ae6.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L511aea.  return v0 @kind object;
}
procedure `java.lang.Exception` `throwIfThrowable`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.throwIfThrowable:(Ljava/lang/Throwable;)Ljava/lang/Exception;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L511998.  v0:= instanceof @variable v1 @type ^`java.lang.Exception` @kind boolean;
  #L51199c.  if v0 == 0 then goto L5119a6;
  #L5119a0.  v1:= (`java.lang.Exception`) v1 @kind object;
  #L5119a4.  return v1 @kind object;
  #L5119a6.  throw v1;
}
procedure `java.lang.String` `timeoutMessage`(`long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.timeoutMessage:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L511a68.  v0:= new `java.lang.StringBuilder`;
  #L511a6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L511a72.  v1:= "The source did not signal an event for " @kind object;
  #L511a76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L511a7c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L511a82.  v2:= " " @kind object;
  #L511a86.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L511a8c.  call temp:= `toString`(v4) @signature `Ljava/util/concurrent/TimeUnit;.toString:()Ljava/lang/String;` @kind virtual;
  #L511a92.  v2:= temp @kind object;
  #L511a94.  call temp:= `toLowerCase`(v2) @signature `Ljava/lang/String;.toLowerCase:()Ljava/lang/String;` @kind virtual;
  #L511a9a.  v2:= temp @kind object;
  #L511a9c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L511aa2.  v2:= " and has been terminated." @kind object;
  #L511aa6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L511aac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L511ab2.  v2:= temp @kind object;
  #L511ab4.  return v2 @kind object;
}
procedure `java.lang.RuntimeException` `wrapOrThrow`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L5119fc.  v0:= instanceof @variable v1 @type ^`java.lang.Error` @kind boolean;
  #L511a00.  if v0 != 0 then goto L511a1e;
  #L511a04.  v0:= instanceof @variable v1 @type ^`java.lang.RuntimeException` @kind boolean;
  #L511a08.  if v0 == 0 then goto L511a12;
  #L511a0c.  v1:= (`java.lang.RuntimeException`) v1 @kind object;
  #L511a10.  return v1 @kind object;
  #L511a12.  v0:= new `java.lang.RuntimeException`;
  #L511a16.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L511a1c.  return v0 @kind object;
  #L511a1e.  v1:= (`java.lang.Error`) v1 @kind object;
  #L511a22.  throw v1;
}
