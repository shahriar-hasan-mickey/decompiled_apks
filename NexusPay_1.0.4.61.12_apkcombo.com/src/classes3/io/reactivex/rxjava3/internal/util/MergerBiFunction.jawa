record `io.reactivex.rxjava3.internal.util.MergerBiFunction` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.functions.BiFunction` @kind interface {
  `java.util.Comparator` `io.reactivex.rxjava3.internal.util.MergerBiFunction.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.util.MergerBiFunction` v0 @kind this, `java.util.Comparator` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/MergerBiFunction;.<init>:(Ljava/util/Comparator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L51216c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L512172.  v0.`io.reactivex.rxjava3.internal.util.MergerBiFunction.a` @type ^`java.util.Comparator` := v1 @kind object;
  #L512176.  return @kind void;
}
procedure `java.lang.Object` `apply`(`io.reactivex.rxjava3.internal.util.MergerBiFunction` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/MergerBiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L51202c.  v1:= (`java.util.List`) v1 @kind object;
  #L512030.  v2:= (`java.util.List`) v2 @kind object;
  #L512034.  call temp:= `apply`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/util/MergerBiFunction;.apply:(Ljava/util/List;Ljava/util/List;)Ljava/util/List;` @kind virtual;
  #L51203a.  v1:= temp @kind object;
  #L51203c.  return v1 @kind object;
}
procedure `java.util.List` `apply`(`io.reactivex.rxjava3.internal.util.MergerBiFunction` v5 @kind this, `java.util.List` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/MergerBiFunction;.apply:(Ljava/util/List;Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L512050.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L512056.  v0:= temp;
  #L512058.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L51205e.  v1:= temp;
  #L512060.  v0:= v0 + v1 @kind int;
  #L512062.  if v0 != 0 then goto L512072;
  #L512066.  v6:= new `java.util.ArrayList`;
  #L51206a.  call `<init>`(v6) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L512070.  return v6 @kind object;
  #L512072.  v1:= new `java.util.ArrayList`;
  #L512076.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L51207c.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L512082.  v6:= temp @kind object;
  #L512084.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L51208a.  v7:= temp @kind object;
  #L51208c.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L512092.  v0:= temp;
  #L512094.  v2:= 0I;
  #L512096.  if v0 == 0 then goto L5120a4;
  #L51209a.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5120a0.  v0:= temp @kind object;
  #L5120a2.  goto L5120a6;
  #L5120a4.  v0:= v2 @kind object;
  #L5120a6.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5120ac.  v3:= temp;
  #L5120ae.  if v3 == 0 then goto L5120bc;
  #L5120b2.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5120b8.  v3:= temp @kind object;
  #L5120ba.  goto L5120be;
  #L5120bc.  v3:= v2 @kind object;
  #L5120be.  if v0 == 0 then goto L512112;
  #L5120c2.  if v3 == 0 then goto L512112;
  #L5120c6.  v4:= v5.`io.reactivex.rxjava3.internal.util.MergerBiFunction.a` @type ^`java.util.Comparator` @kind object;
  #L5120ca.  call temp:= `compare`(v4, v0, v3) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L5120d0.  v4:= temp;
  #L5120d2.  if v4 >= 0 then goto L5120f6;
  #L5120d6.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L5120dc.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5120e2.  v0:= temp;
  #L5120e4.  if v0 == 0 then goto L5120f2;
  #L5120e8.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5120ee.  v0:= temp @kind object;
  #L5120f0.  goto L5120be;
  #L5120f2.  v0:= v2 @kind object;
  #L5120f4.  goto L5120be;
  #L5120f6.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L5120fc.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L512102.  v3:= temp;
  #L512104.  if v3 == 0 then goto L5120bc;
  #L512108.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L51210e.  v3:= temp @kind object;
  #L512110.  goto L5120be;
  #L512112.  if v0 == 0 then goto L512138;
  #L512116.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L51211c.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L512122.  v7:= temp;
  #L512124.  if v7 == 0 then goto L51215a;
  #L512128.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L51212e.  v7:= temp @kind object;
  #L512130.  call temp:= `add`(v1, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L512136.  goto L51211c;
  #L512138.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L51213e.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L512144.  v6:= temp;
  #L512146.  if v6 == 0 then goto L51215a;
  #L51214a.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L512150.  v6:= temp @kind object;
  #L512152.  call temp:= `add`(v1, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L512158.  goto L51213e;
  #L51215a.  return v1 @kind object;
}
