record `io.reactivex.rxjava3.internal.disposables.ArrayCompositeDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReferenceArray` @kind class, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
}
global `long` `@@io.reactivex.rxjava3.internal.disposables.ArrayCompositeDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.disposables.ArrayCompositeDisposable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/internal/disposables/ArrayCompositeDisposable;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ab24c.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L4ab252.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.disposables.ArrayCompositeDisposable` v4 @kind this) @signature `Lio/reactivex/rxjava3/internal/disposables/ArrayCompositeDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ab264.  v0:= 0I;
  #L4ab266.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4ab26c.  v1:= temp @kind object;
  #L4ab26e.  v2:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab272.  if v1 == v2 then goto L4ab2ba;
  #L4ab276.  call temp:= `length`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L4ab27c.  v1:= temp;
  #L4ab27e.  if v0 >= v1 then goto L4ab2ba;
  #L4ab282.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4ab288.  v2:= temp @kind object;
  #L4ab28a.  v2:= (`io.reactivex.rxjava3.disposables.Disposable`) v2 @kind object;
  #L4ab28e.  v3:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab292.  if v2 == v3 then goto L4ab2b4;
  #L4ab296.  call temp:= `getAndSet`(v4, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.getAndSet:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4ab29c.  v2:= temp @kind object;
  #L4ab29e.  v2:= (`io.reactivex.rxjava3.disposables.Disposable`) v2 @kind object;
  #L4ab2a2.  v3:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab2a6.  if v2 == v3 then goto L4ab2b4;
  #L4ab2aa.  if v2 == 0 then goto L4ab2b4;
  #L4ab2ae.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab2b4.  v0:= v0 + 1;
  #L4ab2b8.  goto L4ab27e;
  #L4ab2ba.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.disposables.ArrayCompositeDisposable` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/disposables/ArrayCompositeDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ab1a0.  v0:= 0I;
  #L4ab1a2.  call temp:= `get`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4ab1a8.  v1:= temp @kind object;
  #L4ab1aa.  v2:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab1ae.  if v1 != v2 then goto L4ab1b4;
  #L4ab1b2.  v0:= 1I;
  #L4ab1b4.  return v0;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `replaceResource`(`io.reactivex.rxjava3.internal.disposables.ArrayCompositeDisposable` v2 @kind this, `int` v3 , `io.reactivex.rxjava3.disposables.Disposable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/ArrayCompositeDisposable;.replaceResource:(ILio/reactivex/rxjava3/disposables/Disposable;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ab210.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4ab216.  v0:= temp @kind object;
  #L4ab218.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4ab21c.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab220.  if v0 != v1 then goto L4ab22e;
  #L4ab224.  call `dispose`(v4) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab22a.  v3:= 0I;
  #L4ab22c.  return v3 @kind object;
  #L4ab22e.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4ab234.  v1:= temp;
  #L4ab236.  if v1 == 0 then goto L4ab210;
  #L4ab23a.  return v0 @kind object;
}
procedure `boolean` `setResource`(`io.reactivex.rxjava3.internal.disposables.ArrayCompositeDisposable` v2 @kind this, `int` v3 , `io.reactivex.rxjava3.disposables.Disposable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/ArrayCompositeDisposable;.setResource:(ILio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ab1c8.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4ab1ce.  v0:= temp @kind object;
  #L4ab1d0.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4ab1d4.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab1d8.  if v0 != v1 then goto L4ab1e6;
  #L4ab1dc.  call `dispose`(v4) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab1e2.  v3:= 0I;
  #L4ab1e4.  return v3;
  #L4ab1e6.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4ab1ec.  v1:= temp;
  #L4ab1ee.  if v1 == 0 then goto L4ab1c8;
  #L4ab1f2.  if v0 == 0 then goto L4ab1fc;
  #L4ab1f6.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab1fc.  v3:= 1I;
  #L4ab1fe.  return v3;
}
