record `io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
}
global `io.reactivex.rxjava3.internal.disposables.DisposableHelper`[] `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.rxjava3.internal.disposables.DisposableHelper` `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4ab57c.  v0:= new `io.reactivex.rxjava3.internal.disposables.DisposableHelper`;
  #L4ab580.  v1:= "DISPOSED" @kind object;
  #L4ab584.  v2:= 0I;
  #L4ab586.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4ab58c.  `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` := v0 @kind object;
  #L4ab590.  v1:= 1I;
  #L4ab592.  v1:= new `io.reactivex.rxjava3.internal.disposables.DisposableHelper`[v1];
  #L4ab596.  v1[v2]:= v0 @kind object;
  #L4ab59a.  `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.$VALUES` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper`[] := v1 @kind object;
  #L4ab59e.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.disposables.DisposableHelper` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4ab5b0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4ab5b6.  return @kind void;
}
procedure `boolean` `dispose`(`java.util.concurrent.atomic.AtomicReference` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4ab35c.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ab362.  v0:= temp @kind object;
  #L4ab364.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4ab368.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab36c.  if v0 == v1 then goto L4ab38e;
  #L4ab370.  call temp:= `getAndSet`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4ab376.  v2:= temp @kind object;
  #L4ab378.  v2:= (`io.reactivex.rxjava3.disposables.Disposable`) v2 @kind object;
  #L4ab37c.  if v2 == v1 then goto L4ab38e;
  #L4ab380.  if v2 == 0 then goto L4ab38a;
  #L4ab384.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab38a.  v2:= 1I;
  #L4ab38c.  return v2;
  #L4ab38e.  v2:= 0I;
  #L4ab390.  return v2;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ab3b8.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab3bc.  if v1 != v0 then goto L4ab3c4;
  #L4ab3c0.  v1:= 1I;
  #L4ab3c2.  goto L4ab3c6;
  #L4ab3c4.  v1:= 0I;
  #L4ab3c6.  return v1;
}
procedure `boolean` `replace`(`java.util.concurrent.atomic.AtomicReference` v2 @kind object, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4ab3d8.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ab3de.  v0:= temp @kind object;
  #L4ab3e0.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4ab3e4.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab3e8.  if v0 != v1 then goto L4ab3fa;
  #L4ab3ec.  if v3 == 0 then goto L4ab3f6;
  #L4ab3f0.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab3f6.  v2:= 0I;
  #L4ab3f8.  return v2;
  #L4ab3fa.  call temp:= `compareAndSet`(v2, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4ab400.  v0:= temp;
  #L4ab402.  if v0 == 0 then goto L4ab3d8;
  #L4ab406.  v2:= 1I;
  #L4ab408.  return v2;
}
procedure `void` `reportDisposableSet`() @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.reportDisposableSet:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4ab5dc.  v0:= new `io.reactivex.rxjava3.exceptions.ProtocolViolationException`;
  #L4ab5e0.  v1:= "Disposable already set!" @kind object;
  #L4ab5e4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/exceptions/ProtocolViolationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ab5ea.  call `onError`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4ab5f0.  return @kind void;
}
procedure `boolean` `set`(`java.util.concurrent.atomic.AtomicReference` v2 @kind object, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4ab41c.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ab422.  v0:= temp @kind object;
  #L4ab424.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4ab428.  v1:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab42c.  if v0 != v1 then goto L4ab43e;
  #L4ab430.  if v3 == 0 then goto L4ab43a;
  #L4ab434.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab43a.  v2:= 0I;
  #L4ab43c.  return v2;
  #L4ab43e.  call temp:= `compareAndSet`(v2, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4ab444.  v1:= temp;
  #L4ab446.  if v1 == 0 then goto L4ab41c;
  #L4ab44a.  if v0 == 0 then goto L4ab454;
  #L4ab44e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab454.  v2:= 1I;
  #L4ab456.  return v2;
}
procedure `boolean` `setOnce`(`java.util.concurrent.atomic.AtomicReference` v1 @kind object, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ab468.  v0:= "d is null" @kind object;
  #L4ab46c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ab472.  v0:= 0I;
  #L4ab474.  call temp:= `compareAndSet`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4ab47a.  v0:= temp;
  #L4ab47c.  if v0 != 0 then goto L4ab4a0;
  #L4ab480.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab486.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ab48c.  v1:= temp @kind object;
  #L4ab48e.  v2:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab492.  if v1 == v2 then goto L4ab49c;
  #L4ab496.  call `reportDisposableSet`() @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.reportDisposableSet:()V` @kind static;
  #L4ab49c.  v1:= 0I;
  #L4ab49e.  return v1;
  #L4ab4a0.  v1:= 1I;
  #L4ab4a2.  return v1;
}
procedure `boolean` `trySet`(`java.util.concurrent.atomic.AtomicReference` v1 @kind object, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.trySet:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ab4b4.  v0:= 0I;
  #L4ab4b6.  call temp:= `compareAndSet`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L4ab4bc.  v0:= temp;
  #L4ab4be.  if v0 != 0 then goto L4ab4dc;
  #L4ab4c2.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4ab4c8.  v1:= temp @kind object;
  #L4ab4ca.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab4ce.  if v1 != v0 then goto L4ab4d8;
  #L4ab4d2.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab4d8.  v1:= 0I;
  #L4ab4da.  return v1;
  #L4ab4dc.  v1:= 1I;
  #L4ab4de.  return v1;
}
procedure `boolean` `validate`(`io.reactivex.rxjava3.disposables.Disposable` v1 @kind object, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ab4f0.  v0:= 0I;
  #L4ab4f2.  if v2 != 0 then goto L4ab50c;
  #L4ab4f6.  v1:= new `java.lang.NullPointerException`;
  #L4ab4fa.  v2:= "next is null" @kind object;
  #L4ab4fe.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ab504.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4ab50a.  return v0;
  #L4ab50c.  if v1 == 0 then goto L4ab51e;
  #L4ab510.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab516.  call `reportDisposableSet`() @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.reportDisposableSet:()V` @kind static;
  #L4ab51c.  return v0;
  #L4ab51e.  v1:= 1I;
  #L4ab520.  return v1;
}
procedure `io.reactivex.rxjava3.internal.disposables.DisposableHelper` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.valueOf:(Ljava/lang/String;)Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ab534.  v0:= constclass @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper` @kind object;
  #L4ab538.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L4ab53e.  v1:= temp @kind object;
  #L4ab540.  v1:= (`io.reactivex.rxjava3.internal.disposables.DisposableHelper`) v1 @kind object;
  #L4ab544.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.internal.disposables.DisposableHelper`[] `values`() @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.values:()[Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ab558.  v0:= `@@io.reactivex.rxjava3.internal.disposables.DisposableHelper.$VALUES` @type ^`io.reactivex.rxjava3.internal.disposables.DisposableHelper`[] @kind object;
  #L4ab55c.  call temp:= `clone`(v0) @signature `[Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4ab562.  v0:= temp @kind object;
  #L4ab564.  v0:= (`io.reactivex.rxjava3.internal.disposables.DisposableHelper`[]) v0 @kind object;
  #L4ab568.  return v0 @kind object;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.disposables.DisposableHelper` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4ab5c8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.disposables.DisposableHelper` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab3a4.  v0:= 1I;
  #L4ab3a6.  return v0;
}
