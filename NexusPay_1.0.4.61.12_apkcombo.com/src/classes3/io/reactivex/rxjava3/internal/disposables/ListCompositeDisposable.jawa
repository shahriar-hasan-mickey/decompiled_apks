record `io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `io.reactivex.rxjava3.disposables.DisposableContainer` @kind interface {
  `java.util.List` `io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.a` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.b` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` v0 @kind this) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4aba30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aba36.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.<init>:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4abaa0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4abaa6.  v0:= "resources is null" @kind object;
  #L4abaaa.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4abab0.  v0:= new `java.util.LinkedList`;
  #L4abab4.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L4ababa.  v2.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` := v0 @kind object;
  #L4ababe.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4abac4.  v3:= temp @kind object;
  #L4abac6.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4abacc.  v0:= temp;
  #L4abace.  if v0 == 0 then goto L4abaf4;
  #L4abad2.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4abad8.  v0:= temp @kind object;
  #L4abada.  v0:= (`io.reactivex.rxjava3.disposables.Disposable`) v0 @kind object;
  #L4abade.  v1:= "Disposable item is null" @kind object;
  #L4abae2.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4abae8.  v1:= v2.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` @kind object;
  #L4abaec.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4abaf2.  goto L4abac6;
  #L4abaf4.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` v4 @kind this, `io.reactivex.rxjava3.disposables.Disposable`[] v5 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.<init>:([Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4aba48.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4aba4e.  v0:= "resources is null" @kind object;
  #L4aba52.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aba58.  v0:= new `java.util.LinkedList`;
  #L4aba5c.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L4aba62.  v4.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` := v0 @kind object;
  #L4aba66.  v0:= length @variable v5;
  #L4aba68.  v1:= 0I;
  #L4aba6a.  if v1 >= v0 then goto L4aba8c;
  #L4aba6e.  v2:= v5[v1] @kind object;
  #L4aba72.  v3:= "Disposable item is null" @kind object;
  #L4aba76.  call temp:= `requireNonNull`(v2, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aba7c.  v3:= v4.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` @kind object;
  #L4aba80.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4aba86.  v1:= v1 + 1;
  #L4aba8a.  goto L4aba6a;
  #L4aba8c.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.a:(Ljava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4abbbc.  if v3 != 0 then goto L4abbc2;
  #L4abbc0.  return @kind void;
  #L4abbc2.  v0:= 0I;
  #L4abbc4.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4abbca.  v3:= temp @kind object;
  #L4abbcc.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4abbd2.  v1:= temp;
  #L4abbd4.  if v1 == 0 then goto L4abc0a;
  #L4abbd8.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4abbde.  v1:= temp @kind object;
  #L4abbe0.  v1:= (`io.reactivex.rxjava3.disposables.Disposable`) v1 @kind object;
  #L4abbe4.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4abbea.  goto L4abbcc;
  #L4abbec.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4abbee.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4abbf4.  if v0 != 0 then goto L4abc02;
  #L4abbf8.  v0:= new `java.util.ArrayList`;
  #L4abbfc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4abc02.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4abc08.  goto L4abbcc;
  #L4abc0a.  if v0 == 0 then goto L4abc40;
  #L4abc0e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4abc14.  v3:= temp;
  #L4abc16.  v1:= 1I;
  #L4abc18.  if v3 != v1 then goto L4abc34;
  #L4abc1c.  v3:= 0I;
  #L4abc1e.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4abc24.  v3:= temp @kind object;
  #L4abc26.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L4abc2a.  call temp:= `wrapOrThrow`(v3) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4abc30.  v3:= temp @kind object;
  #L4abc32.  throw v3;
  #L4abc34.  v3:= new `io.reactivex.rxjava3.exceptions.CompositeException`;
  #L4abc38.  call `<init>`(v3, v0) @signature `Lio/reactivex/rxjava3/exceptions/CompositeException;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L4abc3e.  throw v3;
  #L4abc40.  return @kind void;
  catch `java.lang.Throwable` @[L4abbe4..L4abbea] goto L4abbec;
}
procedure `boolean` `add`(`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab878.  v0:= "d is null" @kind object;
  #L4ab87c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ab882.  v0:= v1.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4ab886.  if v0 != 0 then goto L4ab8c0;
  #L4ab88a.  @monitorenter v1
  #L4ab88c.  v0:= v1.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4ab890.  if v0 != 0 then goto L4ab8b6;
  #L4ab894.  v0:= v1.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` @kind object;
  #L4ab898.  if v0 != 0 then goto L4ab8aa;
  #L4ab89c.  v0:= new `java.util.LinkedList`;
  #L4ab8a0.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L4ab8a6.  v1.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` := v0 @kind object;
  #L4ab8aa.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4ab8b0.  v2:= 1I;
  #L4ab8b2.  @monitorexit v1
  #L4ab8b4.  return v2;
  #L4ab8b6.  @monitorexit v1
  #L4ab8b8.  goto L4ab8c0;
  #L4ab8ba.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ab8bc.  @monitorexit v1
  #L4ab8be.  throw v2;
  #L4ab8c0.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab8c6.  v2:= 0I;
  #L4ab8c8.  return v2;
  catch `java.lang.Throwable` @[L4ab88c..L4ab8be] goto L4ab8ba;
}
procedure `boolean` `addAll`(`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` v5 @kind this, `io.reactivex.rxjava3.disposables.Disposable`[] v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.addAll:([Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ab8e8.  v0:= "ds is null" @kind object;
  #L4ab8ec.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ab8f2.  v0:= v5.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4ab8f6.  v1:= 0I;
  #L4ab8f8.  if v0 != 0 then goto L4ab94c;
  #L4ab8fc.  @monitorenter v5
  #L4ab8fe.  v0:= v5.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4ab902.  if v0 != 0 then goto L4ab942;
  #L4ab906.  v0:= v5.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` @kind object;
  #L4ab90a.  if v0 != 0 then goto L4ab91c;
  #L4ab90e.  v0:= new `java.util.LinkedList`;
  #L4ab912.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L4ab918.  v5.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` := v0 @kind object;
  #L4ab91c.  v2:= length @variable v6;
  #L4ab91e.  if v1 >= v2 then goto L4ab93c;
  #L4ab922.  v3:= v6[v1] @kind object;
  #L4ab926.  v4:= "d is null" @kind object;
  #L4ab92a.  call temp:= `requireNonNull`(v3, v4) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ab930.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4ab936.  v1:= v1 + 1;
  #L4ab93a.  goto L4ab91e;
  #L4ab93c.  @monitorexit v5
  #L4ab93e.  v6:= 1I;
  #L4ab940.  return v6;
  #L4ab942.  @monitorexit v5
  #L4ab944.  goto L4ab94c;
  #L4ab946.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ab948.  @monitorexit v5
  #L4ab94a.  throw v6;
  #L4ab94c.  v0:= length @variable v6;
  #L4ab94e.  v2:= 0I;
  #L4ab950.  if v2 >= v0 then goto L4ab964;
  #L4ab954.  v3:= v6[v2] @kind object;
  #L4ab958.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4ab95e.  v2:= v2 + 1;
  #L4ab962.  goto L4ab950;
  #L4ab964.  return v1;
  catch `java.lang.Throwable` @[L4ab8fe..L4ab94a] goto L4ab946;
}
procedure `void` `clear`(`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4abb08.  v0:= v2.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4abb0c.  if v0 == 0 then goto L4abb12;
  #L4abb10.  return @kind void;
  #L4abb12.  @monitorenter v2
  #L4abb14.  v0:= v2.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4abb18.  if v0 == 0 then goto L4abb20;
  #L4abb1c.  @monitorexit v2
  #L4abb1e.  return @kind void;
  #L4abb20.  v0:= v2.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` @kind object;
  #L4abb24.  v1:= 0I;
  #L4abb26.  v2.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` := v1 @kind object;
  #L4abb2a.  @monitorexit v2
  #L4abb2c.  call `a`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.a:(Ljava/util/List;)V` @kind virtual;
  #L4abb32.  return @kind void;
  #L4abb34.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4abb36.  @monitorexit v2
  #L4abb38.  throw v0;
  catch `java.lang.Throwable` @[L4abb14..L4abb2c] goto L4abb34;
  catch `java.lang.Throwable` @[L4abb36..L4abb38] goto L4abb34;
}
procedure `boolean` `delete`(`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` v2 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ab984.  v0:= "Disposable item is null" @kind object;
  #L4ab988.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ab98e.  v0:= v2.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4ab992.  v1:= 0I;
  #L4ab994.  if v0 == 0 then goto L4ab99a;
  #L4ab998.  return v1;
  #L4ab99a.  @monitorenter v2
  #L4ab99c.  v0:= v2.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4ab9a0.  if v0 == 0 then goto L4ab9a8;
  #L4ab9a4.  @monitorexit v2
  #L4ab9a6.  return v1;
  #L4ab9a8.  v0:= v2.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` @kind object;
  #L4ab9ac.  if v0 == 0 then goto L4ab9c4;
  #L4ab9b0.  call temp:= `remove`(v0, v3) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L4ab9b6.  v3:= temp;
  #L4ab9b8.  if v3 != 0 then goto L4ab9be;
  #L4ab9bc.  goto L4ab9c4;
  #L4ab9be.  @monitorexit v2
  #L4ab9c0.  v3:= 1I;
  #L4ab9c2.  return v3;
  #L4ab9c4.  @monitorexit v2
  #L4ab9c6.  return v1;
  #L4ab9c8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4ab9ca.  @monitorexit v2
  #L4ab9cc.  throw v3;
  catch `java.lang.Throwable` @[L4ab99c..L4ab9cc] goto L4ab9c8;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4abb60.  v0:= v2.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4abb64.  if v0 == 0 then goto L4abb6a;
  #L4abb68.  return @kind void;
  #L4abb6a.  @monitorenter v2
  #L4abb6c.  v0:= v2.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4abb70.  if v0 == 0 then goto L4abb78;
  #L4abb74.  @monitorexit v2
  #L4abb76.  return @kind void;
  #L4abb78.  v0:= 1I;
  #L4abb7a.  v2.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` := v0 @kind boolean;
  #L4abb7e.  v0:= v2.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` @kind object;
  #L4abb82.  v1:= 0I;
  #L4abb84.  v2.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` := v1 @kind object;
  #L4abb88.  @monitorexit v2
  #L4abb8a.  call `a`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.a:(Ljava/util/List;)V` @kind virtual;
  #L4abb90.  return @kind void;
  #L4abb92.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4abb94.  @monitorexit v2
  #L4abb96.  throw v0;
  catch `java.lang.Throwable` @[L4abb6c..L4abb8a] goto L4abb92;
  catch `java.lang.Throwable` @[L4abb94..L4abb96] goto L4abb92;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ab9ec.  v0:= v1.`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4ab9f0.  return v0;
}
procedure `boolean` `remove`(`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.remove:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aba04.  call temp:= `delete`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L4aba0a.  v0:= temp;
  #L4aba0c.  if v0 == 0 then goto L4aba1a;
  #L4aba10.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4aba16.  v2:= 1I;
  #L4aba18.  return v2;
  #L4aba1a.  v2:= 0I;
  #L4aba1c.  return v2;
}
