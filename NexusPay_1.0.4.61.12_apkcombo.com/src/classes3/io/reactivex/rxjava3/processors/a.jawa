record `io.reactivex.rxjava3.processors.a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.processors.FlowableProcessor` @kind class {
  `io.reactivex.rxjava3.processors.FlowableProcessor` `io.reactivex.rxjava3.processors.a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.processors.a.c` @AccessFlag ;
  `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` `io.reactivex.rxjava3.processors.a.d` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.processors.a.e` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.processors.a` v0 @kind this, `io.reactivex.rxjava3.processors.FlowableProcessor` v1 @kind object) @signature `Lio/reactivex/rxjava3/processors/a;.<init>:(Lio/reactivex/rxjava3/processors/FlowableProcessor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L520e38.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/processors/FlowableProcessor;.<init>:()V` @kind direct;
  #L520e3e.  v0.`io.reactivex.rxjava3.processors.a.b` @type ^`io.reactivex.rxjava3.processors.FlowableProcessor` := v1 @kind object;
  #L520e42.  return @kind void;
}
procedure `void` `e`(`io.reactivex.rxjava3.processors.a` v2 @kind this) @signature `Lio/reactivex/rxjava3/processors/a;.e:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L520e54.  @monitorenter v2
  #L520e56.  v0:= v2.`io.reactivex.rxjava3.processors.a.d` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L520e5a.  if v0 != 0 then goto L520e68;
  #L520e5e.  v0:= 0I;
  #L520e60.  v2.`io.reactivex.rxjava3.processors.a.c` @type ^`boolean` := v0 @kind boolean;
  #L520e64.  @monitorexit v2
  #L520e66.  return @kind void;
  #L520e68.  v1:= 0I;
  #L520e6a.  v2.`io.reactivex.rxjava3.processors.a.d` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v1 @kind object;
  #L520e6e.  @monitorexit v2
  #L520e70.  v1:= v2.`io.reactivex.rxjava3.processors.a.b` @type ^`io.reactivex.rxjava3.processors.FlowableProcessor` @kind object;
  #L520e74.  call temp:= `accept`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.accept:(Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L520e7a.  goto L520e54;
  #L520e7c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L520e7e.  @monitorexit v2
  #L520e80.  throw v0;
  catch `java.lang.Throwable` @[L520e56..L520e70] goto L520e7c;
  catch `java.lang.Throwable` @[L520e7e..L520e80] goto L520e7c;
}
procedure `java.lang.Throwable` `getThrowable`(`io.reactivex.rxjava3.processors.a` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/a;.getThrowable:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L520e18.  v0:= v1.`io.reactivex.rxjava3.processors.a.b` @type ^`io.reactivex.rxjava3.processors.FlowableProcessor` @kind object;
  #L520e1c.  call temp:= `getThrowable`(v0) @signature `Lio/reactivex/rxjava3/processors/FlowableProcessor;.getThrowable:()Ljava/lang/Throwable;` @kind virtual;
  #L520e22.  v0:= temp @kind object;
  #L520e24.  return v0 @kind object;
}
procedure `boolean` `hasComplete`(`io.reactivex.rxjava3.processors.a` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/a;.hasComplete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L520db8.  v0:= v1.`io.reactivex.rxjava3.processors.a.b` @type ^`io.reactivex.rxjava3.processors.FlowableProcessor` @kind object;
  #L520dbc.  call temp:= `hasComplete`(v0) @signature `Lio/reactivex/rxjava3/processors/FlowableProcessor;.hasComplete:()Z` @kind virtual;
  #L520dc2.  v0:= temp;
  #L520dc4.  return v0;
}
procedure `boolean` `hasSubscribers`(`io.reactivex.rxjava3.processors.a` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/a;.hasSubscribers:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L520dd8.  v0:= v1.`io.reactivex.rxjava3.processors.a.b` @type ^`io.reactivex.rxjava3.processors.FlowableProcessor` @kind object;
  #L520ddc.  call temp:= `hasSubscribers`(v0) @signature `Lio/reactivex/rxjava3/processors/FlowableProcessor;.hasSubscribers:()Z` @kind virtual;
  #L520de2.  v0:= temp;
  #L520de4.  return v0;
}
procedure `boolean` `hasThrowable`(`io.reactivex.rxjava3.processors.a` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/a;.hasThrowable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L520df8.  v0:= v1.`io.reactivex.rxjava3.processors.a.b` @type ^`io.reactivex.rxjava3.processors.FlowableProcessor` @kind object;
  #L520dfc.  call temp:= `hasThrowable`(v0) @signature `Lio/reactivex/rxjava3/processors/FlowableProcessor;.hasThrowable:()Z` @kind virtual;
  #L520e02.  v0:= temp;
  #L520e04.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.processors.a` v2 @kind this) @signature `Lio/reactivex/rxjava3/processors/a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L520ea8.  v0:= v2.`io.reactivex.rxjava3.processors.a.e` @type ^`boolean` @kind boolean;
  #L520eac.  if v0 == 0 then goto L520eb2;
  #L520eb0.  return @kind void;
  #L520eb2.  @monitorenter v2
  #L520eb4.  v0:= v2.`io.reactivex.rxjava3.processors.a.e` @type ^`boolean` @kind boolean;
  #L520eb8.  if v0 == 0 then goto L520ec0;
  #L520ebc.  @monitorexit v2
  #L520ebe.  return @kind void;
  #L520ec0.  v0:= 1I;
  #L520ec2.  v2.`io.reactivex.rxjava3.processors.a.e` @type ^`boolean` := v0 @kind boolean;
  #L520ec6.  v1:= v2.`io.reactivex.rxjava3.processors.a.c` @type ^`boolean` @kind boolean;
  #L520eca.  if v1 == 0 then goto L520ef8;
  #L520ece.  v0:= v2.`io.reactivex.rxjava3.processors.a.d` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L520ed2.  if v0 != 0 then goto L520ee6;
  #L520ed6.  v0:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L520eda.  v1:= 4I;
  #L520edc.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L520ee2.  v2.`io.reactivex.rxjava3.processors.a.d` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L520ee6.  call temp:= `complete`() @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.complete:()Ljava/lang/Object;` @kind static;
  #L520eec.  v1:= temp @kind object;
  #L520eee.  call `add`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L520ef4.  @monitorexit v2
  #L520ef6.  return @kind void;
  #L520ef8.  v2.`io.reactivex.rxjava3.processors.a.c` @type ^`boolean` := v0 @kind boolean;
  #L520efc.  @monitorexit v2
  #L520efe.  v0:= v2.`io.reactivex.rxjava3.processors.a.b` @type ^`io.reactivex.rxjava3.processors.FlowableProcessor` @kind object;
  #L520f02.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L520f08.  return @kind void;
  #L520f0a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L520f0c.  @monitorexit v2
  #L520f0e.  throw v0;
  catch `java.lang.Throwable` @[L520eb4..L520efe] goto L520f0a;
  catch `java.lang.Throwable` @[L520f0c..L520f0e] goto L520f0a;
}
procedure `void` `onError`(`io.reactivex.rxjava3.processors.a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/processors/a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L520f34.  v0:= v2.`io.reactivex.rxjava3.processors.a.e` @type ^`boolean` @kind boolean;
  #L520f38.  if v0 == 0 then goto L520f44;
  #L520f3c.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L520f42.  return @kind void;
  #L520f44.  @monitorenter v2
  #L520f46.  v0:= v2.`io.reactivex.rxjava3.processors.a.e` @type ^`boolean` @kind boolean;
  #L520f4a.  v1:= 1I;
  #L520f4c.  if v0 == 0 then goto L520f52;
  #L520f50.  goto L520f90;
  #L520f52.  v2.`io.reactivex.rxjava3.processors.a.e` @type ^`boolean` := v1 @kind boolean;
  #L520f56.  v0:= v2.`io.reactivex.rxjava3.processors.a.c` @type ^`boolean` @kind boolean;
  #L520f5a.  if v0 == 0 then goto L520f88;
  #L520f5e.  v0:= v2.`io.reactivex.rxjava3.processors.a.d` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L520f62.  if v0 != 0 then goto L520f76;
  #L520f66.  v0:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L520f6a.  v1:= 4I;
  #L520f6c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L520f72.  v2.`io.reactivex.rxjava3.processors.a.d` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L520f76.  call temp:= `error`(v3) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L520f7c.  v3:= temp @kind object;
  #L520f7e.  call `setFirst`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.setFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L520f84.  @monitorexit v2
  #L520f86.  return @kind void;
  #L520f88.  v0:= 0I;
  #L520f8a.  v2.`io.reactivex.rxjava3.processors.a.c` @type ^`boolean` := v1 @kind boolean;
  #L520f8e.  v1:= 0I;
  #L520f90.  @monitorexit v2
  #L520f92.  if v1 == 0 then goto L520f9e;
  #L520f96.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L520f9c.  return @kind void;
  #L520f9e.  v0:= v2.`io.reactivex.rxjava3.processors.a.b` @type ^`io.reactivex.rxjava3.processors.FlowableProcessor` @kind object;
  #L520fa2.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L520fa8.  return @kind void;
  #L520faa.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L520fac.  @monitorexit v2
  #L520fae.  throw v3;
  catch `java.lang.Throwable` @[L520f46..L520f92] goto L520faa;
  catch `java.lang.Throwable` @[L520fac..L520fae] goto L520faa;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.processors.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/processors/a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L520fd4.  v0:= v2.`io.reactivex.rxjava3.processors.a.e` @type ^`boolean` @kind boolean;
  #L520fd8.  if v0 == 0 then goto L520fde;
  #L520fdc.  return @kind void;
  #L520fde.  @monitorenter v2
  #L520fe0.  v0:= v2.`io.reactivex.rxjava3.processors.a.e` @type ^`boolean` @kind boolean;
  #L520fe4.  if v0 == 0 then goto L520fec;
  #L520fe8.  @monitorexit v2
  #L520fea.  return @kind void;
  #L520fec.  v0:= v2.`io.reactivex.rxjava3.processors.a.c` @type ^`boolean` @kind boolean;
  #L520ff0.  if v0 == 0 then goto L52101e;
  #L520ff4.  v0:= v2.`io.reactivex.rxjava3.processors.a.d` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L520ff8.  if v0 != 0 then goto L52100c;
  #L520ffc.  v0:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L521000.  v1:= 4I;
  #L521002.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L521008.  v2.`io.reactivex.rxjava3.processors.a.d` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L52100c.  call temp:= `next`(v3) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L521012.  v3:= temp @kind object;
  #L521014.  call `add`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L52101a.  @monitorexit v2
  #L52101c.  return @kind void;
  #L52101e.  v0:= 1I;
  #L521020.  v2.`io.reactivex.rxjava3.processors.a.c` @type ^`boolean` := v0 @kind boolean;
  #L521024.  @monitorexit v2
  #L521026.  v0:= v2.`io.reactivex.rxjava3.processors.a.b` @type ^`io.reactivex.rxjava3.processors.FlowableProcessor` @kind object;
  #L52102a.  call `onNext`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L521030.  call `e`(v2) @signature `Lio/reactivex/rxjava3/processors/a;.e:()V` @kind virtual;
  #L521036.  return @kind void;
  #L521038.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52103a.  @monitorexit v2
  #L52103c.  throw v3;
  catch `java.lang.Throwable` @[L520fe0..L521026] goto L521038;
  catch `java.lang.Throwable` @[L52103a..L52103c] goto L521038;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.processors.a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/processors/a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L521064.  v0:= v2.`io.reactivex.rxjava3.processors.a.e` @type ^`boolean` @kind boolean;
  #L521068.  v1:= 1I;
  #L52106a.  if v0 != 0 then goto L5210be;
  #L52106e.  @monitorenter v2
  #L521070.  v0:= v2.`io.reactivex.rxjava3.processors.a.e` @type ^`boolean` @kind boolean;
  #L521074.  if v0 == 0 then goto L52107a;
  #L521078.  goto L5210b4;
  #L52107a.  v0:= v2.`io.reactivex.rxjava3.processors.a.c` @type ^`boolean` @kind boolean;
  #L52107e.  if v0 == 0 then goto L5210ac;
  #L521082.  v0:= v2.`io.reactivex.rxjava3.processors.a.d` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L521086.  if v0 != 0 then goto L52109a;
  #L52108a.  v0:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L52108e.  v1:= 4I;
  #L521090.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L521096.  v2.`io.reactivex.rxjava3.processors.a.d` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L52109a.  call temp:= `subscription`(v3) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.subscription:(Lorg/reactivestreams/Subscription;)Ljava/lang/Object;` @kind static;
  #L5210a0.  v3:= temp @kind object;
  #L5210a2.  call `add`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L5210a8.  @monitorexit v2
  #L5210aa.  return @kind void;
  #L5210ac.  v2.`io.reactivex.rxjava3.processors.a.c` @type ^`boolean` := v1 @kind boolean;
  #L5210b0.  v0:= 0I;
  #L5210b2.  v1:= 0I;
  #L5210b4.  @monitorexit v2
  #L5210b6.  goto L5210be;
  #L5210b8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5210ba.  @monitorexit v2
  #L5210bc.  throw v3;
  #L5210be.  if v1 == 0 then goto L5210ca;
  #L5210c2.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L5210c8.  goto L5210da;
  #L5210ca.  v0:= v2.`io.reactivex.rxjava3.processors.a.b` @type ^`io.reactivex.rxjava3.processors.FlowableProcessor` @kind object;
  #L5210ce.  call `onSubscribe`(v0, v3) @signature `Lio/reactivex/rxjava3/core/FlowableSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L5210d4.  call `e`(v2) @signature `Lio/reactivex/rxjava3/processors/a;.e:()V` @kind virtual;
  #L5210da.  return @kind void;
  catch `java.lang.Throwable` @[L521070..L5210bc] goto L5210b8;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.processors.a` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/processors/a;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L5210f8.  v0:= v1.`io.reactivex.rxjava3.processors.a.b` @type ^`io.reactivex.rxjava3.processors.FlowableProcessor` @kind object;
  #L5210fc.  call `subscribe`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L521102.  return @kind void;
}
