record `io.reactivex.rxjava3.processors.ReplayProcessor$c` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.processors.ReplayProcessor$c.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.processors.ReplayProcessor` `io.reactivex.rxjava3.processors.ReplayProcessor$c.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.processors.ReplayProcessor$c.d` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @AccessFlag VOLATILE;
  `long` `io.reactivex.rxjava3.processors.ReplayProcessor$c.f` @AccessFlag ;
}
global `long` `@@io.reactivex.rxjava3.processors.ReplayProcessor$c.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.processors.ReplayProcessor$c` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.rxjava3.processors.ReplayProcessor` v2 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$c;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/processors/ReplayProcessor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L51fc5c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L51fc62.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$c.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L51fc66.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$c.b` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor` := v2 @kind object;
  #L51fc6a.  v1:= new `java.util.concurrent.atomic.AtomicLong`;
  #L51fc6e.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L51fc74.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$c.d` @type ^`java.util.concurrent.atomic.AtomicLong` := v1 @kind object;
  #L51fc78.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.processors.ReplayProcessor$c` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$c;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51fc8c.  v0:= v1.`io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @type ^`boolean` @kind boolean;
  #L51fc90.  if v0 != 0 then goto L51fca4;
  #L51fc94.  v0:= 1I;
  #L51fc96.  v1.`io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @type ^`boolean` := v0 @kind boolean;
  #L51fc9a.  v0:= v1.`io.reactivex.rxjava3.processors.ReplayProcessor$c.b` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor` @kind object;
  #L51fc9e.  call `f`(v0, v1) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor;.f:(Lio/reactivex/rxjava3/processors/ReplayProcessor$c;)V` @kind virtual;
  #L51fca4.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.processors.ReplayProcessor$c` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$c;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51fcb8.  call temp:= `validate`(v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L51fcbe.  v0:= temp;
  #L51fcc0.  if v0 == 0 then goto L51fcdc;
  #L51fcc4.  v0:= v1.`io.reactivex.rxjava3.processors.ReplayProcessor$c.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L51fcc8.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/BackpressureHelper;.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L51fcce.  v2:= v1.`io.reactivex.rxjava3.processors.ReplayProcessor$c.b` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor` @kind object;
  #L51fcd2.  v2:= v2.`io.reactivex.rxjava3.processors.ReplayProcessor.b` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$b` @kind object;
  #L51fcd6.  call `f`(v2, v1) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$b;.f:(Lio/reactivex/rxjava3/processors/ReplayProcessor$c;)V` @kind interface;
  #L51fcdc.  return @kind void;
}
