record `io.reactivex.rxjava3.processors.ReplayProcessor$d` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.processors.ReplayProcessor$b` @kind interface {
  `int` `io.reactivex.rxjava3.processors.ReplayProcessor$d.a` @AccessFlag FINAL;
  `long` `io.reactivex.rxjava3.processors.ReplayProcessor$d.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.rxjava3.processors.ReplayProcessor$d.c` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `io.reactivex.rxjava3.processors.ReplayProcessor$d.d` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @AccessFlag ;
  `io.reactivex.rxjava3.processors.ReplayProcessor$f` `io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @AccessFlag VOLATILE;
  `io.reactivex.rxjava3.processors.ReplayProcessor$f` `io.reactivex.rxjava3.processors.ReplayProcessor$d.g` @AccessFlag ;
  `java.lang.Throwable` `io.reactivex.rxjava3.processors.ReplayProcessor$d.h` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.processors.ReplayProcessor$d.i` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v0 @kind this, `int` v1 , `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.<init>:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L51feb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L51feb6.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.a` @type ^`int` := v1;
  #L51feba.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.b` @type ^`long` := v2 @kind wide;
  #L51febe.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.c` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L51fec2.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.d` @type ^`io.reactivex.rxjava3.core.Scheduler` := v5 @kind object;
  #L51fec6.  v1:= new `io.reactivex.rxjava3.processors.ReplayProcessor$f`;
  #L51feca.  v2:= 0I;
  #L51fecc.  v3:= 0L;
  #L51fed0.  call `<init>`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$f;.<init>:(Ljava/lang/Object;J)V` @kind direct;
  #L51fed6.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.g` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v1 @kind object;
  #L51feda.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v1 @kind object;
  #L51fede.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L51ff10.  call `j`(v0) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.j:()V` @kind virtual;
  #L51ff16.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.h` @type ^`java.lang.Throwable` := v1 @kind object;
  #L51ff1a.  v1:= 1I;
  #L51ff1c.  v0.`io.reactivex.rxjava3.processors.ReplayProcessor$d.i` @type ^`boolean` := v1 @kind boolean;
  #L51ff20.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.b:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L51ff34.  v0:= new `io.reactivex.rxjava3.processors.ReplayProcessor$f`;
  #L51ff38.  v1:= v3.`io.reactivex.rxjava3.processors.ReplayProcessor$d.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L51ff3c.  v2:= v3.`io.reactivex.rxjava3.processors.ReplayProcessor$d.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L51ff40.  call temp:= `now`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L51ff46.  v1:= temp @kind wide;
  #L51ff48.  call `<init>`(v0, v4, v1) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$f;.<init>:(Ljava/lang/Object;J)V` @kind direct;
  #L51ff4e.  v4:= v3.`io.reactivex.rxjava3.processors.ReplayProcessor$d.g` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L51ff52.  v3.`io.reactivex.rxjava3.processors.ReplayProcessor$d.g` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v0 @kind object;
  #L51ff56.  v1:= v3.`io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @type ^`int`;
  #L51ff5a.  v1:= v1 + 1;
  #L51ff5e.  v3.`io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @type ^`int` := v1;
  #L51ff62.  call `set`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L51ff68.  call `i`(v3) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.i:()V` @kind virtual;
  #L51ff6e.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v4 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5201c4.  v0:= v4.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L5201c8.  v0:= v0.`io.reactivex.rxjava3.processors.ReplayProcessor$f.a` @type ^`java.lang.Object` @kind object;
  #L5201cc.  if v0 == 0 then goto L5201f6;
  #L5201d0.  v0:= new `io.reactivex.rxjava3.processors.ReplayProcessor$f`;
  #L5201d4.  v1:= 0I;
  #L5201d6.  v2:= 0L;
  #L5201da.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$f;.<init>:(Ljava/lang/Object;J)V` @kind direct;
  #L5201e0.  v1:= v4.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L5201e4.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L5201ea.  v1:= temp @kind object;
  #L5201ec.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L5201f2.  v4.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v0 @kind object;
  #L5201f6.  return @kind void;
}
procedure `void` `complete`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.complete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51fef0.  call `j`(v1) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.j:()V` @kind virtual;
  #L51fef6.  v0:= 1I;
  #L51fef8.  v1.`io.reactivex.rxjava3.processors.ReplayProcessor$d.i` @type ^`boolean` := v0 @kind boolean;
  #L51fefc.  return @kind void;
}
procedure `java.lang.Object`[] `d`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v5 @kind this, `java.lang.Object`[] v6 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.d:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L51fe18.  call temp:= `g`(v5) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.g:()Lio/reactivex/rxjava3/processors/ReplayProcessor$f;` @kind virtual;
  #L51fe1e.  v0:= temp @kind object;
  #L51fe20.  call temp:= `h`(v5, v0) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.h:(Lio/reactivex/rxjava3/processors/ReplayProcessor$f;)I` @kind virtual;
  #L51fe26.  v1:= temp;
  #L51fe28.  v2:= 0I;
  #L51fe2a.  v3:= 0I;
  #L51fe2c.  if v1 != 0 then goto L51fe3c;
  #L51fe30.  v0:= length @variable v6;
  #L51fe32.  if v0 == 0 then goto L51fe86;
  #L51fe36.  v6[v3]:= v2 @kind object;
  #L51fe3a.  goto L51fe86;
  #L51fe3c.  v4:= length @variable v6;
  #L51fe3e.  if v4 >= v1 then goto L51fe5e;
  #L51fe42.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L51fe48.  v6:= temp @kind object;
  #L51fe4a.  call temp:= `getComponentType`(v6) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L51fe50.  v6:= temp @kind object;
  #L51fe52.  call temp:= `newInstance`(v6, v1) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L51fe58.  v6:= temp @kind object;
  #L51fe5a.  v6:= (`java.lang.Object`[]) v6 @kind object;
  #L51fe5e.  if v3 == v1 then goto L51fe7c;
  #L51fe62.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L51fe68.  v0:= temp @kind object;
  #L51fe6a.  v0:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v0 @kind object;
  #L51fe6e.  v4:= v0.`io.reactivex.rxjava3.processors.ReplayProcessor$f.a` @type ^`java.lang.Object` @kind object;
  #L51fe72.  v6[v3]:= v4 @kind object;
  #L51fe76.  v3:= v3 + 1;
  #L51fe7a.  goto L51fe5e;
  #L51fe7c.  v0:= length @variable v6;
  #L51fe7e.  if v0 <= v1 then goto L51fe86;
  #L51fe82.  v6[v1]:= v2 @kind object;
  #L51fe86.  return v6 @kind object;
}
procedure `java.lang.Throwable` `e`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.e:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51fe98.  v0:= v1.`io.reactivex.rxjava3.processors.ReplayProcessor$d.h` @type ^`java.lang.Throwable` @kind object;
  #L51fe9c.  return v0 @kind object;
}
procedure `void` `f`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v13 @kind this, `io.reactivex.rxjava3.processors.ReplayProcessor$c` v14 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.f:(Lio/reactivex/rxjava3/processors/ReplayProcessor$c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L51ff80.  call temp:= `getAndIncrement`(v14) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L51ff86.  v0:= temp;
  #L51ff88.  if v0 == 0 then goto L51ff8e;
  #L51ff8c.  return @kind void;
  #L51ff8e.  v0:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L51ff92.  v1:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` @kind object;
  #L51ff96.  v1:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v1 @kind object;
  #L51ff9a.  if v1 != 0 then goto L51ffa6;
  #L51ff9e.  call temp:= `g`(v13) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.g:()Lio/reactivex/rxjava3/processors/ReplayProcessor$f;` @kind virtual;
  #L51ffa4.  v1:= temp @kind object;
  #L51ffa6.  v2:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.f` @type ^`long` @kind wide;
  #L51ffaa.  v4:= 1I;
  #L51ffac.  v5:= 1I;
  #L51ffae.  v6:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L51ffb2.  call temp:= `get`(v6) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L51ffb8.  v6:= temp @kind wide;
  #L51ffba.  v8:= 0I;
  #L51ffbc.  v9:= lcmp(v2, v6);
  #L51ffc0.  if v9 == 0 then goto L52002e;
  #L51ffc4.  v10:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @type ^`boolean` @kind boolean;
  #L51ffc8.  if v10 == 0 then goto L51ffd2;
  #L51ffcc.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v8 @kind object;
  #L51ffd0.  return @kind void;
  #L51ffd2.  v10:= v13.`io.reactivex.rxjava3.processors.ReplayProcessor$d.i` @type ^`boolean` @kind boolean;
  #L51ffd6.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L51ffdc.  v11:= temp @kind object;
  #L51ffde.  v11:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v11 @kind object;
  #L51ffe2.  if v11 != 0 then goto L51ffea;
  #L51ffe6.  v12:= 1I;
  #L51ffe8.  goto L51ffec;
  #L51ffea.  v12:= 0I;
  #L51ffec.  if v10 == 0 then goto L520014;
  #L51fff0.  if v12 == 0 then goto L520014;
  #L51fff4.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v8 @kind object;
  #L51fff8.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @type ^`boolean` := v4 @kind boolean;
  #L51fffc.  v14:= v13.`io.reactivex.rxjava3.processors.ReplayProcessor$d.h` @type ^`java.lang.Throwable` @kind object;
  #L520000.  if v14 != 0 then goto L52000c;
  #L520004.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L52000a.  goto L520012;
  #L52000c.  call `onError`(v0, v14) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L520012.  return @kind void;
  #L520014.  if v12 == 0 then goto L52001a;
  #L520018.  goto L52002e;
  #L52001a.  v1:= v11.`io.reactivex.rxjava3.processors.ReplayProcessor$f.a` @type ^`java.lang.Object` @kind object;
  #L52001e.  call `onNext`(v0, v1) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L520024.  v8:= 1L;
  #L520028.  v2:= v2 + v8 @kind long;
  #L52002a.  v1:= v11 @kind object;
  #L52002c.  goto L51ffba;
  #L52002e.  if v9 != 0 then goto L520074;
  #L520032.  v6:= v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @type ^`boolean` @kind boolean;
  #L520036.  if v6 == 0 then goto L520040;
  #L52003a.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v8 @kind object;
  #L52003e.  return @kind void;
  #L520040.  v6:= v13.`io.reactivex.rxjava3.processors.ReplayProcessor$d.i` @type ^`boolean` @kind boolean;
  #L520044.  if v6 == 0 then goto L520074;
  #L520048.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L52004e.  v6:= temp @kind object;
  #L520050.  if v6 != 0 then goto L520074;
  #L520054.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v8 @kind object;
  #L520058.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.e` @type ^`boolean` := v4 @kind boolean;
  #L52005c.  v14:= v13.`io.reactivex.rxjava3.processors.ReplayProcessor$d.h` @type ^`java.lang.Throwable` @kind object;
  #L520060.  if v14 != 0 then goto L52006c;
  #L520064.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L52006a.  goto L520072;
  #L52006c.  call `onError`(v0, v14) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L520072.  return @kind void;
  #L520074.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.c` @type ^`java.lang.Object` := v1 @kind object;
  #L520078.  v14.`io.reactivex.rxjava3.processors.ReplayProcessor$c.f` @type ^`long` := v2 @kind wide;
  #L52007c.  v5:= -v5 @kind int;
  #L52007e.  call temp:= `addAndGet`(v14, v5) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L520084.  v5:= temp;
  #L520086.  if v5 != 0 then goto L51ffae;
  #L52008a.  return @kind void;
}
procedure `io.reactivex.rxjava3.processors.ReplayProcessor$f` `g`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v8 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.g:()Lio/reactivex/rxjava3/processors/ReplayProcessor$f;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L51fd64.  v0:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L51fd68.  v1:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L51fd6c.  v2:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L51fd70.  call temp:= `now`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L51fd76.  v1:= temp @kind wide;
  #L51fd78.  v3:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.b` @type ^`long` @kind wide;
  #L51fd7c.  v1:= v1 - v3 @kind long;
  #L51fd7e.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L51fd84.  v3:= temp @kind object;
  #L51fd86.  v3:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v3 @kind object;
  #L51fd8a.  v7:= v3 @kind object;
  #L51fd8c.  v3:= v0 @kind object;
  #L51fd8e.  v0:= v7 @kind object;
  #L51fd90.  if v0 == 0 then goto L51fdb0;
  #L51fd94.  v4:= v0.`io.reactivex.rxjava3.processors.ReplayProcessor$f.b` @type ^`long` @kind wide;
  #L51fd98.  v6:= lcmp(v4, v1);
  #L51fd9c.  if v6 <= 0 then goto L51fda2;
  #L51fda0.  goto L51fdb0;
  #L51fda2.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L51fda8.  v3:= temp @kind object;
  #L51fdaa.  v3:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v3 @kind object;
  #L51fdae.  goto L51fd8a;
  #L51fdb0.  return v3 @kind object;
}
procedure `java.lang.Object` `getValue`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v6 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L51fdc4.  v0:= v6.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L51fdc8.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L51fdce.  v1:= temp @kind object;
  #L51fdd0.  v1:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v1 @kind object;
  #L51fdd4.  if v1 != 0 then goto L51fe04;
  #L51fdd8.  v1:= v6.`io.reactivex.rxjava3.processors.ReplayProcessor$d.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L51fddc.  v2:= v6.`io.reactivex.rxjava3.processors.ReplayProcessor$d.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L51fde0.  call temp:= `now`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L51fde6.  v1:= temp @kind wide;
  #L51fde8.  v3:= v6.`io.reactivex.rxjava3.processors.ReplayProcessor$d.b` @type ^`long` @kind wide;
  #L51fdec.  v1:= v1 - v3 @kind long;
  #L51fdee.  v3:= v0.`io.reactivex.rxjava3.processors.ReplayProcessor$f.b` @type ^`long` @kind wide;
  #L51fdf2.  v5:= lcmp(v3, v1);
  #L51fdf6.  if v5 >= 0 then goto L51fdfe;
  #L51fdfa.  v0:= 0I;
  #L51fdfc.  return v0 @kind object;
  #L51fdfe.  v0:= v0.`io.reactivex.rxjava3.processors.ReplayProcessor$f.a` @type ^`java.lang.Object` @kind object;
  #L51fe02.  return v0 @kind object;
  #L51fe04.  v0:= v1 @kind object;
  #L51fe06.  goto L51fdc8;
}
procedure `int` `h`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v2 @kind this, `io.reactivex.rxjava3.processors.ReplayProcessor$f` v3 @kind object) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.h:(Lio/reactivex/rxjava3/processors/ReplayProcessor$f;)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L51fd2c.  v0:= 0I;
  #L51fd2e.  v1:= 2147483647I;
  #L51fd34.  if v0 == v1 then goto L51fd50;
  #L51fd38.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L51fd3e.  v3:= temp @kind object;
  #L51fd40.  v3:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v3 @kind object;
  #L51fd44.  if v3 != 0 then goto L51fd4a;
  #L51fd48.  goto L51fd50;
  #L51fd4a.  v0:= v0 + 1;
  #L51fd4e.  goto L51fd2e;
  #L51fd50.  return v0;
}
procedure `void` `i`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v8 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.i:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L52009c.  v0:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @type ^`int`;
  #L5200a0.  v1:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.a` @type ^`int`;
  #L5200a4.  v2:= 1I;
  #L5200a6.  if v0 <= v1 then goto L5200c4;
  #L5200aa.  v0:= v0 - v2 @kind int;
  #L5200ac.  v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @type ^`int` := v0;
  #L5200b0.  v0:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L5200b4.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L5200ba.  v0:= temp @kind object;
  #L5200bc.  v0:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v0 @kind object;
  #L5200c0.  v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v0 @kind object;
  #L5200c4.  v0:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L5200c8.  v1:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L5200cc.  call temp:= `now`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L5200d2.  v0:= temp @kind wide;
  #L5200d4.  v3:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.b` @type ^`long` @kind wide;
  #L5200d8.  v0:= v0 - v3 @kind long;
  #L5200da.  v3:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L5200de.  v4:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @type ^`int`;
  #L5200e2.  if v4 > v2 then goto L5200ec;
  #L5200e6.  v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v3 @kind object;
  #L5200ea.  goto L520108;
  #L5200ec.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L5200f2.  v4:= temp @kind object;
  #L5200f4.  v4:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v4 @kind object;
  #L5200f8.  v5:= v4.`io.reactivex.rxjava3.processors.ReplayProcessor$f.b` @type ^`long` @kind wide;
  #L5200fc.  v7:= lcmp(v5, v0);
  #L520100.  if v7 <= 0 then goto L52010a;
  #L520104.  v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v3 @kind object;
  #L520108.  return @kind void;
  #L52010a.  v3:= v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @type ^`int`;
  #L52010e.  v3:= v3 - v2 @kind int;
  #L520110.  v8.`io.reactivex.rxjava3.processors.ReplayProcessor$d.e` @type ^`int` := v3;
  #L520114.  v3:= v4 @kind object;
  #L520116.  goto L5200de;
}
procedure `boolean` `isDone`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51fcf0.  v0:= v1.`io.reactivex.rxjava3.processors.ReplayProcessor$d.i` @type ^`boolean` @kind boolean;
  #L51fcf4.  return v0;
}
procedure `void` `j`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v10 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.j:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L520128.  v0:= v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L52012c.  v1:= v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L520130.  call temp:= `now`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Scheduler;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L520136.  v0:= temp @kind wide;
  #L520138.  v2:= v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.b` @type ^`long` @kind wide;
  #L52013c.  v0:= v0 - v2 @kind long;
  #L52013e.  v2:= v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` @kind object;
  #L520142.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L520148.  v3:= temp @kind object;
  #L52014a.  v3:= (`io.reactivex.rxjava3.processors.ReplayProcessor$f`) v3 @kind object;
  #L52014e.  v4:= 0L;
  #L520152.  v6:= 0I;
  #L520154.  if v3 != 0 then goto L520176;
  #L520158.  v0:= v2.`io.reactivex.rxjava3.processors.ReplayProcessor$f.a` @type ^`java.lang.Object` @kind object;
  #L52015c.  if v0 == 0 then goto L520170;
  #L520160.  v0:= new `io.reactivex.rxjava3.processors.ReplayProcessor$f`;
  #L520164.  call `<init>`(v0, v6, v4) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$f;.<init>:(Ljava/lang/Object;J)V` @kind direct;
  #L52016a.  v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v0 @kind object;
  #L52016e.  goto L5201ac;
  #L520170.  v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v2 @kind object;
  #L520174.  goto L5201ac;
  #L520176.  v7:= v3.`io.reactivex.rxjava3.processors.ReplayProcessor$f.b` @type ^`long` @kind wide;
  #L52017a.  v9:= lcmp(v7, v0);
  #L52017e.  if v9 <= 0 then goto L5201ae;
  #L520182.  v0:= v2.`io.reactivex.rxjava3.processors.ReplayProcessor$f.a` @type ^`java.lang.Object` @kind object;
  #L520186.  if v0 == 0 then goto L5201a8;
  #L52018a.  v0:= new `io.reactivex.rxjava3.processors.ReplayProcessor$f`;
  #L52018e.  call `<init>`(v0, v6, v4) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$f;.<init>:(Ljava/lang/Object;J)V` @kind direct;
  #L520194.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L52019a.  v1:= temp @kind object;
  #L52019c.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L5201a2.  v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v0 @kind object;
  #L5201a6.  goto L5201ac;
  #L5201a8.  v10.`io.reactivex.rxjava3.processors.ReplayProcessor$d.f` @type ^`io.reactivex.rxjava3.processors.ReplayProcessor$f` := v2 @kind object;
  #L5201ac.  return @kind void;
  #L5201ae.  v2:= v3 @kind object;
  #L5201b0.  goto L520142;
}
procedure `int` `size`(`io.reactivex.rxjava3.processors.ReplayProcessor$d` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51fd08.  call temp:= `g`(v1) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.g:()Lio/reactivex/rxjava3/processors/ReplayProcessor$f;` @kind virtual;
  #L51fd0e.  v0:= temp @kind object;
  #L51fd10.  call temp:= `h`(v1, v0) @signature `Lio/reactivex/rxjava3/processors/ReplayProcessor$d;.h:(Lio/reactivex/rxjava3/processors/ReplayProcessor$f;)I` @kind virtual;
  #L51fd16.  v0:= temp;
  #L51fd18.  return v0;
}
