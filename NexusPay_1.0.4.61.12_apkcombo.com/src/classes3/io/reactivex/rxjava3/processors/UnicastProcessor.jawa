record `io.reactivex.rxjava3.processors.UnicastProcessor` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.processors.FlowableProcessor` @kind class {
  `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` `io.reactivex.rxjava3.processors.UnicastProcessor.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.processors.UnicastProcessor.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.processors.UnicastProcessor.d` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.processors.UnicastProcessor.e` @AccessFlag VOLATILE;
  `java.lang.Throwable` `io.reactivex.rxjava3.processors.UnicastProcessor.f` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.processors.UnicastProcessor.g` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.processors.UnicastProcessor.h` @AccessFlag VOLATILE;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.rxjava3.processors.UnicastProcessor.i` @AccessFlag FINAL;
  `io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription` `io.reactivex.rxjava3.processors.UnicastProcessor.j` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.processors.UnicastProcessor.k` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.processors.UnicastProcessor.l` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.processors.UnicastProcessor` v1 @kind this, `int` v2 , `java.lang.Runnable` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.<init>:(ILjava/lang/Runnable;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L52145c.  call `<init>`(v1) @signature `Lio/reactivex/rxjava3/processors/FlowableProcessor;.<init>:()V` @kind direct;
  #L521462.  v0:= new `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue`;
  #L521466.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.<init>:(I)V` @kind direct;
  #L52146c.  v1.`io.reactivex.rxjava3.processors.UnicastProcessor.b` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` := v0 @kind object;
  #L521470.  v2:= new `java.util.concurrent.atomic.AtomicReference`;
  #L521474.  call `<init>`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L52147a.  v1.`io.reactivex.rxjava3.processors.UnicastProcessor.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v2 @kind object;
  #L52147e.  v1.`io.reactivex.rxjava3.processors.UnicastProcessor.d` @type ^`boolean` := v4 @kind boolean;
  #L521482.  v2:= new `java.util.concurrent.atomic.AtomicReference`;
  #L521486.  call `<init>`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L52148c.  v1.`io.reactivex.rxjava3.processors.UnicastProcessor.g` @type ^`java.util.concurrent.atomic.AtomicReference` := v2 @kind object;
  #L521490.  v2:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L521494.  call `<init>`(v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L52149a.  v1.`io.reactivex.rxjava3.processors.UnicastProcessor.i` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v2 @kind object;
  #L52149e.  v2:= new `io.reactivex.rxjava3.processors.UnicastProcessor$a`;
  #L5214a2.  call `<init>`(v2, v1) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor$a;.<init>:(Lio/reactivex/rxjava3/processors/UnicastProcessor;)V` @kind direct;
  #L5214a8.  v1.`io.reactivex.rxjava3.processors.UnicastProcessor.j` @type ^`io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription` := v2 @kind object;
  #L5214ac.  v2:= new `java.util.concurrent.atomic.AtomicLong`;
  #L5214b0.  call `<init>`(v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L5214b6.  v1.`io.reactivex.rxjava3.processors.UnicastProcessor.k` @type ^`java.util.concurrent.atomic.AtomicLong` := v2 @kind object;
  #L5214ba.  return @kind void;
}
procedure `io.reactivex.rxjava3.processors.UnicastProcessor` `create`() @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.create:()Lio/reactivex/rxjava3/processors/UnicastProcessor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L521370.  v0:= new `io.reactivex.rxjava3.processors.UnicastProcessor`;
  #L521374.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L52137a.  v1:= temp;
  #L52137c.  v2:= 0I;
  #L52137e.  v3:= 1I;
  #L521380.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.<init>:(ILjava/lang/Runnable;Z)V` @kind direct;
  #L521386.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.processors.UnicastProcessor` `create`(`int` v3 ) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.create:(I)Lio/reactivex/rxjava3/processors/UnicastProcessor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L5213c0.  v0:= "capacityHint" @kind object;
  #L5213c4.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L5213ca.  v0:= new `io.reactivex.rxjava3.processors.UnicastProcessor`;
  #L5213ce.  v1:= 0I;
  #L5213d0.  v2:= 1I;
  #L5213d2.  call `<init>`(v0, v3, v1, v2) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.<init>:(ILjava/lang/Runnable;Z)V` @kind direct;
  #L5213d8.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.processors.UnicastProcessor` `create`(`int` v1 , `java.lang.Runnable` v2 @kind object) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/processors/UnicastProcessor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L5213ec.  v0:= 1I;
  #L5213ee.  call temp:= `create`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.create:(ILjava/lang/Runnable;Z)Lio/reactivex/rxjava3/processors/UnicastProcessor;` @kind static;
  #L5213f4.  v1:= temp @kind object;
  #L5213f6.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.processors.UnicastProcessor` `create`(`int` v1 , `java.lang.Runnable` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.create:(ILjava/lang/Runnable;Z)Lio/reactivex/rxjava3/processors/UnicastProcessor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L521408.  v0:= "onTerminate" @kind object;
  #L52140c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L521412.  v0:= "capacityHint" @kind object;
  #L521416.  call temp:= `verifyPositive`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L52141c.  v0:= new `io.reactivex.rxjava3.processors.UnicastProcessor`;
  #L521420.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.<init>:(ILjava/lang/Runnable;Z)V` @kind direct;
  #L521426.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.processors.UnicastProcessor` `create`(`boolean` v3 ) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.create:(Z)Lio/reactivex/rxjava3/processors/UnicastProcessor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L521398.  v0:= new `io.reactivex.rxjava3.processors.UnicastProcessor`;
  #L52139c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L5213a2.  v1:= temp;
  #L5213a4.  v2:= 0I;
  #L5213a6.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.<init>:(ILjava/lang/Runnable;Z)V` @kind direct;
  #L5213ac.  return v0 @kind object;
}
procedure `boolean` `e`(`io.reactivex.rxjava3.processors.UnicastProcessor` v3 @kind this, `boolean` v4 , `boolean` v5 , `boolean` v6 , `org.reactivestreams.Subscriber` v7 @kind object, `io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` v8 @kind object) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.e:(ZZZLorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L521274.  v0:= v3.`io.reactivex.rxjava3.processors.UnicastProcessor.h` @type ^`boolean` @kind boolean;
  #L521278.  v1:= 1I;
  #L52127a.  v2:= 0I;
  #L52127c.  if v0 == 0 then goto L521292;
  #L521280.  call `clear`(v8) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L521286.  v4:= v3.`io.reactivex.rxjava3.processors.UnicastProcessor.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L52128a.  call `lazySet`(v4, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L521290.  return v1;
  #L521292.  if v5 == 0 then goto L5212e4;
  #L521296.  if v4 == 0 then goto L5212be;
  #L52129a.  v4:= v3.`io.reactivex.rxjava3.processors.UnicastProcessor.f` @type ^`java.lang.Throwable` @kind object;
  #L52129e.  if v4 == 0 then goto L5212be;
  #L5212a2.  call `clear`(v8) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L5212a8.  v4:= v3.`io.reactivex.rxjava3.processors.UnicastProcessor.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L5212ac.  call `lazySet`(v4, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L5212b2.  v4:= v3.`io.reactivex.rxjava3.processors.UnicastProcessor.f` @type ^`java.lang.Throwable` @kind object;
  #L5212b6.  call `onError`(v7, v4) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5212bc.  return v1;
  #L5212be.  if v6 == 0 then goto L5212e4;
  #L5212c2.  v4:= v3.`io.reactivex.rxjava3.processors.UnicastProcessor.f` @type ^`java.lang.Throwable` @kind object;
  #L5212c6.  v5:= v3.`io.reactivex.rxjava3.processors.UnicastProcessor.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L5212ca.  call `lazySet`(v5, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L5212d0.  if v4 == 0 then goto L5212dc;
  #L5212d4.  call `onError`(v7, v4) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5212da.  goto L5212e2;
  #L5212dc.  call `onComplete`(v7) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L5212e2.  return v1;
  #L5212e4.  v4:= 0I;
  #L5212e6.  return v4;
}
procedure `void` `f`(`io.reactivex.rxjava3.processors.UnicastProcessor` v2 @kind this) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.f:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L5214cc.  v0:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L5214d0.  v1:= 0I;
  #L5214d2.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L5214d8.  v0:= temp @kind object;
  #L5214da.  v0:= (`java.lang.Runnable`) v0 @kind object;
  #L5214de.  if v0 == 0 then goto L5214e8;
  #L5214e2.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L5214e8.  return @kind void;
}
procedure `void` `g`(`io.reactivex.rxjava3.processors.UnicastProcessor` v2 @kind this) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.g:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L5214fc.  v0:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor.j` @type ^`io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription` @kind object;
  #L521500.  call temp:= `getAndIncrement`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L521506.  v0:= temp;
  #L521508.  if v0 == 0 then goto L52150e;
  #L52150c.  return @kind void;
  #L52150e.  v0:= 1I;
  #L521510.  v1:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L521514.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L52151a.  v1:= temp @kind object;
  #L52151c.  v1:= (`org.reactivestreams.Subscriber`) v1 @kind object;
  #L521520.  if v1 == 0 then goto L52153c;
  #L521524.  v0:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor.l` @type ^`boolean` @kind boolean;
  #L521528.  if v0 == 0 then goto L521534;
  #L52152c.  call `h`(v2, v1) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.h:(Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L521532.  goto L52153a;
  #L521534.  call `i`(v2, v1) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.i:(Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L52153a.  return @kind void;
  #L52153c.  v1:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor.j` @type ^`io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription` @kind object;
  #L521540.  v0:= -v0 @kind int;
  #L521542.  call temp:= `addAndGet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L521548.  v0:= temp;
  #L52154a.  if v0 != 0 then goto L521550;
  #L52154e.  return @kind void;
  #L521550.  v1:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L521554.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L52155a.  v1:= temp @kind object;
  #L52155c.  v1:= (`org.reactivestreams.Subscriber`) v1 @kind object;
  #L521560.  goto L521520;
}
procedure `java.lang.Throwable` `getThrowable`(`io.reactivex.rxjava3.processors.UnicastProcessor` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.getThrowable:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L521438.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor.e` @type ^`boolean` @kind boolean;
  #L52143c.  if v0 == 0 then goto L521446;
  #L521440.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor.f` @type ^`java.lang.Throwable` @kind object;
  #L521444.  return v0 @kind object;
  #L521446.  v0:= 0I;
  #L521448.  return v0 @kind object;
}
procedure `void` `h`(`io.reactivex.rxjava3.processors.UnicastProcessor` v6 @kind this, `org.reactivestreams.Subscriber` v7 @kind object) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.h:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L521574.  v0:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.b` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L521578.  v1:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.d` @type ^`boolean` @kind boolean;
  #L52157c.  v2:= 1I;
  #L52157e.  v1:= v1 ^~ v2 @kind int;
  #L521580.  v3:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.h` @type ^`boolean` @kind boolean;
  #L521584.  v4:= 0I;
  #L521586.  if v3 == 0 then goto L521596;
  #L52158a.  v7:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L52158e.  call `lazySet`(v7, v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L521594.  return @kind void;
  #L521596.  v3:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.e` @type ^`boolean` @kind boolean;
  #L52159a.  if v1 == 0 then goto L5215c6;
  #L52159e.  if v3 == 0 then goto L5215c6;
  #L5215a2.  v5:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.f` @type ^`java.lang.Throwable` @kind object;
  #L5215a6.  if v5 == 0 then goto L5215c6;
  #L5215aa.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L5215b0.  v0:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L5215b4.  call `lazySet`(v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L5215ba.  v0:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.f` @type ^`java.lang.Throwable` @kind object;
  #L5215be.  call `onError`(v7, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5215c4.  return @kind void;
  #L5215c6.  call `onNext`(v7, v4) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L5215cc.  if v3 == 0 then goto L5215f2;
  #L5215d0.  v0:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L5215d4.  call `lazySet`(v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L5215da.  v0:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.f` @type ^`java.lang.Throwable` @kind object;
  #L5215de.  if v0 == 0 then goto L5215ea;
  #L5215e2.  call `onError`(v7, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5215e8.  goto L5215f0;
  #L5215ea.  call `onComplete`(v7) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L5215f0.  return @kind void;
  #L5215f2.  v3:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.j` @type ^`io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription` @kind object;
  #L5215f6.  v2:= -v2 @kind int;
  #L5215f8.  call temp:= `addAndGet`(v3, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L5215fe.  v2:= temp;
  #L521600.  if v2 != 0 then goto L521580;
  #L521604.  return @kind void;
}
procedure `boolean` `hasComplete`(`io.reactivex.rxjava3.processors.UnicastProcessor` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.hasComplete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5212f8.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor.e` @type ^`boolean` @kind boolean;
  #L5212fc.  if v0 == 0 then goto L52130c;
  #L521300.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor.f` @type ^`java.lang.Throwable` @kind object;
  #L521304.  if v0 != 0 then goto L52130c;
  #L521308.  v0:= 1I;
  #L52130a.  goto L52130e;
  #L52130c.  v0:= 0I;
  #L52130e.  return v0;
}
procedure `boolean` `hasSubscribers`(`io.reactivex.rxjava3.processors.UnicastProcessor` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.hasSubscribers:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L521320.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L521324.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L52132a.  v0:= temp @kind object;
  #L52132c.  if v0 == 0 then goto L521334;
  #L521330.  v0:= 1I;
  #L521332.  goto L521336;
  #L521334.  v0:= 0I;
  #L521336.  return v0;
}
procedure `boolean` `hasThrowable`(`io.reactivex.rxjava3.processors.UnicastProcessor` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.hasThrowable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L521348.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor.e` @type ^`boolean` @kind boolean;
  #L52134c.  if v0 == 0 then goto L52135c;
  #L521350.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor.f` @type ^`java.lang.Throwable` @kind object;
  #L521354.  if v0 == 0 then goto L52135c;
  #L521358.  v0:= 1I;
  #L52135a.  goto L52135e;
  #L52135c.  v0:= 0I;
  #L52135e.  return v0;
}
procedure `void` `i`(`io.reactivex.rxjava3.processors.UnicastProcessor` v17 @kind this, `org.reactivestreams.Subscriber` v18 @kind object) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.i:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L521618.  v6:= v17 @kind object;
  #L52161c.  v7:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.b` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L521620.  v0:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.d` @type ^`boolean` @kind boolean;
  #L521624.  v8:= 1I;
  #L521626.  v9:= v0 ^~ 1;
  #L52162a.  v10:= 1I;
  #L52162c.  v0:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.k` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L521630.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L521636.  v11:= temp @kind wide;
  #L521638.  v4:= 0L;
  #L52163c.  v15:= lcmp(v11, v4);
  #L521640.  if v15 == 0 then goto L52169e;
  #L521644.  v2:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.e` @type ^`boolean` @kind boolean;
  #L521648.  call temp:= `poll`(v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L52164e.  v3:= temp @kind object;
  #L521650.  if v3 != 0 then goto L52165a;
  #L521654.  v16:= 1I;
  #L521658.  goto L521660;
  #L52165a.  v0:= 0I;
  #L52165c.  v16:= 0I;
  #L521660.  v0:= v17 @kind object;
  #L521664.  v1:= v9;
  #L521666.  v8:= v3 @kind object;
  #L521668.  v3:= v16;
  #L52166c.  v13:= v4 @kind wide;
  #L52166e.  v4:= v18 @kind object;
  #L521672.  v5:= v7 @kind object;
  #L521674.  call temp:= `e`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.e:(ZZZLorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;)Z` @kind virtual;
  #L52167a.  v0:= temp;
  #L52167c.  if v0 == 0 then goto L521682;
  #L521680.  return @kind void;
  #L521682.  if v16 == 0 then goto L521688;
  #L521686.  goto L5216a0;
  #L521688.  v5:= v18 @kind object;
  #L52168c.  call `onNext`(v5, v8) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L521692.  v0:= 1L;
  #L521696.  v0:= v0 + v13 @kind long;
  #L521698.  v4:= v0 @kind wide;
  #L52169a.  v8:= 1I;
  #L52169c.  goto L52163c;
  #L52169e.  v13:= v4 @kind wide;
  #L5216a0.  v5:= v18 @kind object;
  #L5216a4.  if v15 != 0 then goto L5216ce;
  #L5216a8.  v2:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.e` @type ^`boolean` @kind boolean;
  #L5216ac.  call temp:= `isEmpty`(v7) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.isEmpty:()Z` @kind virtual;
  #L5216b2.  v3:= temp;
  #L5216b4.  v0:= v17 @kind object;
  #L5216b8.  v1:= v9;
  #L5216ba.  v4:= v18 @kind object;
  #L5216be.  v5:= v7 @kind object;
  #L5216c0.  call temp:= `e`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.e:(ZZZLorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;)Z` @kind virtual;
  #L5216c6.  v0:= temp;
  #L5216c8.  if v0 == 0 then goto L5216ce;
  #L5216cc.  return @kind void;
  #L5216ce.  v0:= 0L;
  #L5216d2.  v2:= lcmp(v13, v0);
  #L5216d6.  if v2 == 0 then goto L5216f8;
  #L5216da.  v0:= 9223372036854775807L;
  #L5216e4.  v2:= lcmp(v11, v0);
  #L5216e8.  if v2 == 0 then goto L5216f8;
  #L5216ec.  v0:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.k` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L5216f0.  v1:= -v13 @kind long;
  #L5216f2.  call temp:= `addAndGet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.addAndGet:(J)J` @kind virtual;
  #L5216f8.  v0:= v6.`io.reactivex.rxjava3.processors.UnicastProcessor.j` @type ^`io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription` @kind object;
  #L5216fc.  v1:= -v10 @kind int;
  #L5216fe.  call temp:= `addAndGet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L521704.  v10:= temp;
  #L521706.  if v10 != 0 then goto L52170c;
  #L52170a.  return @kind void;
  #L52170c.  v8:= 1I;
  #L52170e.  goto L52162c;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.processors.UnicastProcessor` v1 @kind this) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L521720.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor.e` @type ^`boolean` @kind boolean;
  #L521724.  if v0 != 0 then goto L521744;
  #L521728.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor.h` @type ^`boolean` @kind boolean;
  #L52172c.  if v0 == 0 then goto L521732;
  #L521730.  goto L521744;
  #L521732.  v0:= 1I;
  #L521734.  v1.`io.reactivex.rxjava3.processors.UnicastProcessor.e` @type ^`boolean` := v0 @kind boolean;
  #L521738.  call `f`(v1) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.f:()V` @kind virtual;
  #L52173e.  call `g`(v1) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.g:()V` @kind virtual;
  #L521744.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.rxjava3.processors.UnicastProcessor` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L521758.  v0:= "onError called with a null Throwable." @kind object;
  #L52175c.  call temp:= `nullCheck`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L521762.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor.e` @type ^`boolean` @kind boolean;
  #L521766.  if v0 != 0 then goto L52178c;
  #L52176a.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor.h` @type ^`boolean` @kind boolean;
  #L52176e.  if v0 == 0 then goto L521774;
  #L521772.  goto L52178c;
  #L521774.  v1.`io.reactivex.rxjava3.processors.UnicastProcessor.f` @type ^`java.lang.Throwable` := v2 @kind object;
  #L521778.  v2:= 1I;
  #L52177a.  v1.`io.reactivex.rxjava3.processors.UnicastProcessor.e` @type ^`boolean` := v2 @kind boolean;
  #L52177e.  call `f`(v1) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.f:()V` @kind virtual;
  #L521784.  call `g`(v1) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.g:()V` @kind virtual;
  #L52178a.  return @kind void;
  #L52178c.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L521792.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.processors.UnicastProcessor` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5217a4.  v0:= "onNext called with a null value." @kind object;
  #L5217a8.  call temp:= `nullCheck`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L5217ae.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor.e` @type ^`boolean` @kind boolean;
  #L5217b2.  if v0 != 0 then goto L5217d0;
  #L5217b6.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor.h` @type ^`boolean` @kind boolean;
  #L5217ba.  if v0 == 0 then goto L5217c0;
  #L5217be.  goto L5217d0;
  #L5217c0.  v0:= v1.`io.reactivex.rxjava3.processors.UnicastProcessor.b` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L5217c4.  call temp:= `offer`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L5217ca.  call `g`(v1) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.g:()V` @kind virtual;
  #L5217d0.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.processors.UnicastProcessor` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5217e4.  v0:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor.e` @type ^`boolean` @kind boolean;
  #L5217e8.  if v0 != 0 then goto L521808;
  #L5217ec.  v0:= v2.`io.reactivex.rxjava3.processors.UnicastProcessor.h` @type ^`boolean` @kind boolean;
  #L5217f0.  if v0 == 0 then goto L5217f6;
  #L5217f4.  goto L521808;
  #L5217f6.  v0:= 9223372036854775807L;
  #L521800.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L521806.  goto L52180e;
  #L521808.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L52180e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.processors.UnicastProcessor` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L521820.  v0:= v3.`io.reactivex.rxjava3.processors.UnicastProcessor.i` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L521824.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L52182a.  v0:= temp;
  #L52182c.  if v0 != 0 then goto L521876;
  #L521830.  v0:= v3.`io.reactivex.rxjava3.processors.UnicastProcessor.i` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L521834.  v1:= 0I;
  #L521836.  v2:= 1I;
  #L521838.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L52183e.  v0:= temp;
  #L521840.  if v0 == 0 then goto L521876;
  #L521844.  v0:= v3.`io.reactivex.rxjava3.processors.UnicastProcessor.j` @type ^`io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription` @kind object;
  #L521848.  call `onSubscribe`(v4, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L52184e.  v0:= v3.`io.reactivex.rxjava3.processors.UnicastProcessor.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L521852.  call `set`(v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L521858.  v4:= v3.`io.reactivex.rxjava3.processors.UnicastProcessor.h` @type ^`boolean` @kind boolean;
  #L52185c.  if v4 == 0 then goto L52186e;
  #L521860.  v4:= v3.`io.reactivex.rxjava3.processors.UnicastProcessor.g` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L521864.  v0:= 0I;
  #L521866.  call `lazySet`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L52186c.  goto L52188a;
  #L52186e.  call `g`(v3) @signature `Lio/reactivex/rxjava3/processors/UnicastProcessor;.g:()V` @kind virtual;
  #L521874.  goto L52188a;
  #L521876.  v0:= new `java.lang.IllegalStateException`;
  #L52187a.  v1:= "This processor allows only a single Subscriber" @kind object;
  #L52187e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L521884.  call `error`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L52188a.  return @kind void;
}
