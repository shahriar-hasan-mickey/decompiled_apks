record `io.reactivex.rxjava3.parallel.ParallelFailureHandling` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.rxjava3.functions.BiFunction` @kind interface {
}
global `io.reactivex.rxjava3.parallel.ParallelFailureHandling`[] `@@io.reactivex.rxjava3.parallel.ParallelFailureHandling.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.rxjava3.parallel.ParallelFailureHandling` `@@io.reactivex.rxjava3.parallel.ParallelFailureHandling.ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.rxjava3.parallel.ParallelFailureHandling` `@@io.reactivex.rxjava3.parallel.ParallelFailureHandling.RETRY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.rxjava3.parallel.ParallelFailureHandling` `@@io.reactivex.rxjava3.parallel.ParallelFailureHandling.SKIP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.rxjava3.parallel.ParallelFailureHandling` `@@io.reactivex.rxjava3.parallel.ParallelFailureHandling.STOP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L51c43c.  v0:= new `io.reactivex.rxjava3.parallel.ParallelFailureHandling`;
  #L51c440.  v1:= "STOP" @kind object;
  #L51c444.  v2:= 0I;
  #L51c446.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L51c44c.  `@@io.reactivex.rxjava3.parallel.ParallelFailureHandling.STOP` @type ^`io.reactivex.rxjava3.parallel.ParallelFailureHandling` := v0 @kind object;
  #L51c450.  v0:= new `io.reactivex.rxjava3.parallel.ParallelFailureHandling`;
  #L51c454.  v1:= "ERROR" @kind object;
  #L51c458.  v3:= 1I;
  #L51c45a.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L51c460.  `@@io.reactivex.rxjava3.parallel.ParallelFailureHandling.ERROR` @type ^`io.reactivex.rxjava3.parallel.ParallelFailureHandling` := v0 @kind object;
  #L51c464.  v0:= new `io.reactivex.rxjava3.parallel.ParallelFailureHandling`;
  #L51c468.  v1:= "SKIP" @kind object;
  #L51c46c.  v4:= 2I;
  #L51c46e.  call `<init>`(v0, v1, v4) @signature `Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L51c474.  `@@io.reactivex.rxjava3.parallel.ParallelFailureHandling.SKIP` @type ^`io.reactivex.rxjava3.parallel.ParallelFailureHandling` := v0 @kind object;
  #L51c478.  v0:= new `io.reactivex.rxjava3.parallel.ParallelFailureHandling`;
  #L51c47c.  v1:= "RETRY" @kind object;
  #L51c480.  v5:= 3I;
  #L51c482.  call `<init>`(v0, v1, v5) @signature `Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L51c488.  `@@io.reactivex.rxjava3.parallel.ParallelFailureHandling.RETRY` @type ^`io.reactivex.rxjava3.parallel.ParallelFailureHandling` := v0 @kind object;
  #L51c48c.  v1:= 4I;
  #L51c48e.  v1:= new `io.reactivex.rxjava3.parallel.ParallelFailureHandling`[v1];
  #L51c492.  v6:= `@@io.reactivex.rxjava3.parallel.ParallelFailureHandling.STOP` @type ^`io.reactivex.rxjava3.parallel.ParallelFailureHandling` @kind object;
  #L51c496.  v1[v2]:= v6 @kind object;
  #L51c49a.  v2:= `@@io.reactivex.rxjava3.parallel.ParallelFailureHandling.ERROR` @type ^`io.reactivex.rxjava3.parallel.ParallelFailureHandling` @kind object;
  #L51c49e.  v1[v3]:= v2 @kind object;
  #L51c4a2.  v2:= `@@io.reactivex.rxjava3.parallel.ParallelFailureHandling.SKIP` @type ^`io.reactivex.rxjava3.parallel.ParallelFailureHandling` @kind object;
  #L51c4a6.  v1[v4]:= v2 @kind object;
  #L51c4aa.  v1[v5]:= v0 @kind object;
  #L51c4ae.  `@@io.reactivex.rxjava3.parallel.ParallelFailureHandling.$VALUES` @type ^`io.reactivex.rxjava3.parallel.ParallelFailureHandling`[] := v1 @kind object;
  #L51c4b2.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.parallel.ParallelFailureHandling` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L51c4c4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L51c4ca.  return @kind void;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFailureHandling` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;.valueOf:(Ljava/lang/String;)Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L51c3d0.  v0:= constclass @type ^`io.reactivex.rxjava3.parallel.ParallelFailureHandling` @kind object;
  #L51c3d4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L51c3da.  v1:= temp @kind object;
  #L51c3dc.  v1:= (`io.reactivex.rxjava3.parallel.ParallelFailureHandling`) v1 @kind object;
  #L51c3e0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFailureHandling`[] `values`() @signature `Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;.values:()[Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L51c3f4.  v0:= `@@io.reactivex.rxjava3.parallel.ParallelFailureHandling.$VALUES` @type ^`io.reactivex.rxjava3.parallel.ParallelFailureHandling`[] @kind object;
  #L51c3f8.  call temp:= `clone`(v0) @signature `[Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;.clone:()Ljava/lang/Object;` @kind virtual;
  #L51c3fe.  v0:= temp @kind object;
  #L51c400.  v0:= (`io.reactivex.rxjava3.parallel.ParallelFailureHandling`[]) v0 @kind object;
  #L51c404.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFailureHandling` `apply`(`io.reactivex.rxjava3.parallel.ParallelFailureHandling` v0 @kind this, `java.lang.Long` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;.apply:(Ljava/lang/Long;Ljava/lang/Throwable;)Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;` @AccessFlag PUBLIC {
    temp;

  #L51c3bc.  return v0 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.rxjava3.parallel.ParallelFailureHandling` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L51c418.  v1:= (`java.lang.Long`) v1 @kind object;
  #L51c41c.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L51c420.  call temp:= `apply`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;.apply:(Ljava/lang/Long;Ljava/lang/Throwable;)Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;` @kind virtual;
  #L51c426.  v1:= temp @kind object;
  #L51c428.  return v1 @kind object;
}
