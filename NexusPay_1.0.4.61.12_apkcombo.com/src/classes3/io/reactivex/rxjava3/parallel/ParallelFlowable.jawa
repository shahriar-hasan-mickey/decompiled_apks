record `io.reactivex.rxjava3.parallel.ParallelFlowable` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v0 @kind this) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L51d120.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L51d126.  return @kind void;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `from`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.from:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L51ce40.  call temp:= `getRuntime`() @signature `Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;` @kind static;
  #L51ce46.  v0:= temp @kind object;
  #L51ce48.  call temp:= `availableProcessors`(v0) @signature `Ljava/lang/Runtime;.availableProcessors:()I` @kind virtual;
  #L51ce4e.  v0:= temp;
  #L51ce50.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L51ce56.  v1:= temp;
  #L51ce58.  call temp:= `from`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.from:(Lorg/reactivestreams/Publisher;II)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51ce5e.  v2:= temp @kind object;
  #L51ce60.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `from`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.from:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L51ce74.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L51ce7a.  v0:= temp;
  #L51ce7c.  call temp:= `from`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.from:(Lorg/reactivestreams/Publisher;II)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51ce82.  v1:= temp @kind object;
  #L51ce84.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `from`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.from:(Lorg/reactivestreams/Publisher;II)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L51ce98.  v0:= "source is null" @kind object;
  #L51ce9c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cea2.  v0:= "parallelism" @kind object;
  #L51cea6.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L51ceac.  v0:= "prefetch" @kind object;
  #L51ceb0.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L51ceb6.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelFromPublisher`;
  #L51ceba.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;II)V` @kind direct;
  #L51cec0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cec6.  v1:= temp @kind object;
  #L51cec8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `fromArray`(`org.reactivestreams.Publisher`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.fromArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L51cedc.  v0:= "publishers is null" @kind object;
  #L51cee0.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cee6.  v0:= length @variable v1;
  #L51cee8.  if v0 == 0 then goto L51cf00;
  #L51ceec.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelFromArray`;
  #L51cef0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelFromArray;.<init>:([Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L51cef6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cefc.  v1:= temp @kind object;
  #L51cefe.  return v1 @kind object;
  #L51cf00.  v1:= new `java.lang.IllegalArgumentException`;
  #L51cf04.  v0:= "Zero publishers not supported" @kind object;
  #L51cf08.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L51cf0e.  throw v1;
}
procedure `io.reactivex.rxjava3.core.Flowable` `collect`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `java.util.stream.Collector` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.collect:(Ljava/util/stream/Collector;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51c564.  v0:= "collector is null" @kind object;
  #L51c568.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51c56e.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ParallelCollector`;
  #L51c572.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelCollector;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Ljava/util/stream/Collector;)V` @kind direct;
  #L51c578.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L51c57e.  v2:= temp @kind object;
  #L51c580.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `collect`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51c794.  v0:= "collectionSupplier is null" @kind object;
  #L51c798.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51c79e.  v0:= "collector is null" @kind object;
  #L51c7a2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51c7a8.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelCollect`;
  #L51c7ac.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelCollect;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @kind direct;
  #L51c7b2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51c7b8.  v2:= temp @kind object;
  #L51c7ba.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `compose`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.parallel.ParallelTransformer` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.compose:(Lio/reactivex/rxjava3/parallel/ParallelTransformer;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51c7cc.  v0:= "composer is null" @kind object;
  #L51c7d0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51c7d6.  v2:= temp @kind object;
  #L51c7d8.  v2:= (`io.reactivex.rxjava3.parallel.ParallelTransformer`) v2 @kind object;
  #L51c7dc.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelTransformer;.apply:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind interface;
  #L51c7e2.  v2:= temp @kind object;
  #L51c7e4.  call temp:= `onAssembly`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51c7ea.  v2:= temp @kind object;
  #L51c7ec.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `concatMap`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51c800.  v0:= 2I;
  #L51c802.  call temp:= `concatMap`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind virtual;
  #L51c808.  v2:= temp @kind object;
  #L51c80a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `concatMap`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L51c81c.  v0:= "mapper is null" @kind object;
  #L51c820.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51c826.  v0:= "prefetch" @kind object;
  #L51c82a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L51c830.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelConcatMap`;
  #L51c834.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L51c838.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelConcatMap;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L51c83e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51c844.  v3:= temp @kind object;
  #L51c846.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `concatMapDelayError`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;IZ)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51c874.  v0:= "mapper is null" @kind object;
  #L51c878.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51c87e.  v0:= "prefetch" @kind object;
  #L51c882.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L51c888.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelConcatMap`;
  #L51c88c.  if v4 == 0 then goto L51c896;
  #L51c890.  v4:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L51c894.  goto L51c89a;
  #L51c896.  v4:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L51c89a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelConcatMap;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L51c8a0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51c8a6.  v2:= temp @kind object;
  #L51c8a8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `concatMapDelayError`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51c858.  v0:= 2I;
  #L51c85a.  call temp:= `concatMapDelayError`(v1, v2, v0, v3) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;IZ)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind virtual;
  #L51c860.  v2:= temp @kind object;
  #L51c862.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `doAfterNext`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v11 @kind this, `io.reactivex.rxjava3.functions.Consumer` v12 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.doAfterNext:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L51c8bc.  v0:= "onAfterNext is null" @kind object;
  #L51c8c0.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51c8c6.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek`;
  #L51c8ca.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51c8d0.  v3:= temp @kind object;
  #L51c8d2.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51c8d8.  v5:= temp @kind object;
  #L51c8da.  v7:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51c8de.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51c8e4.  v8:= temp @kind object;
  #L51c8e6.  v9:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_LONG_CONSUMER` @type ^`io.reactivex.rxjava3.functions.LongConsumer` @kind object;
  #L51c8ea.  v10:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51c8ee.  v1:= v0 @kind object;
  #L51c8f0.  v2:= v11 @kind object;
  #L51c8f2.  v4:= v12 @kind object;
  #L51c8f4.  v6:= v7 @kind object;
  #L51c8f6.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L51c8fc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51c902.  v12:= temp @kind object;
  #L51c904.  return v12 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `doAfterTerminated`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v11 @kind this, `io.reactivex.rxjava3.functions.Action` v12 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.doAfterTerminated:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L51c918.  v0:= "onAfterTerminate is null" @kind object;
  #L51c91c.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51c922.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek`;
  #L51c926.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51c92c.  v3:= temp @kind object;
  #L51c92e.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51c934.  v4:= temp @kind object;
  #L51c936.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51c93c.  v5:= temp @kind object;
  #L51c93e.  v6:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51c942.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51c948.  v8:= temp @kind object;
  #L51c94a.  v9:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_LONG_CONSUMER` @type ^`io.reactivex.rxjava3.functions.LongConsumer` @kind object;
  #L51c94e.  v10:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51c952.  v1:= v0 @kind object;
  #L51c954.  v2:= v11 @kind object;
  #L51c956.  v7:= v12 @kind object;
  #L51c958.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L51c95e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51c964.  v12:= temp @kind object;
  #L51c966.  return v12 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `doOnCancel`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v11 @kind this, `io.reactivex.rxjava3.functions.Action` v12 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.doOnCancel:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L51c978.  v0:= "onCancel is null" @kind object;
  #L51c97c.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51c982.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek`;
  #L51c986.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51c98c.  v3:= temp @kind object;
  #L51c98e.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51c994.  v4:= temp @kind object;
  #L51c996.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51c99c.  v5:= temp @kind object;
  #L51c99e.  v7:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51c9a2.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51c9a8.  v8:= temp @kind object;
  #L51c9aa.  v9:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_LONG_CONSUMER` @type ^`io.reactivex.rxjava3.functions.LongConsumer` @kind object;
  #L51c9ae.  v1:= v0 @kind object;
  #L51c9b0.  v2:= v11 @kind object;
  #L51c9b2.  v6:= v7 @kind object;
  #L51c9b4.  v10:= v12 @kind object;
  #L51c9b6.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L51c9bc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51c9c2.  v12:= temp @kind object;
  #L51c9c4.  return v12 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `doOnComplete`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v11 @kind this, `io.reactivex.rxjava3.functions.Action` v12 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.doOnComplete:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L51c9d8.  v0:= "onComplete is null" @kind object;
  #L51c9dc.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51c9e2.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek`;
  #L51c9e6.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51c9ec.  v3:= temp @kind object;
  #L51c9ee.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51c9f4.  v4:= temp @kind object;
  #L51c9f6.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51c9fc.  v5:= temp @kind object;
  #L51c9fe.  v7:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51ca02.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51ca08.  v8:= temp @kind object;
  #L51ca0a.  v9:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_LONG_CONSUMER` @type ^`io.reactivex.rxjava3.functions.LongConsumer` @kind object;
  #L51ca0e.  v10:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51ca12.  v1:= v0 @kind object;
  #L51ca14.  v2:= v11 @kind object;
  #L51ca16.  v6:= v12 @kind object;
  #L51ca18.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L51ca1e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51ca24.  v12:= temp @kind object;
  #L51ca26.  return v12 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `doOnError`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v11 @kind this, `io.reactivex.rxjava3.functions.Consumer` v12 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.doOnError:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L51ca38.  v0:= "onError is null" @kind object;
  #L51ca3c.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51ca42.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek`;
  #L51ca46.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51ca4c.  v3:= temp @kind object;
  #L51ca4e.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51ca54.  v4:= temp @kind object;
  #L51ca56.  v7:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51ca5a.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51ca60.  v8:= temp @kind object;
  #L51ca62.  v9:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_LONG_CONSUMER` @type ^`io.reactivex.rxjava3.functions.LongConsumer` @kind object;
  #L51ca66.  v10:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51ca6a.  v1:= v0 @kind object;
  #L51ca6c.  v2:= v11 @kind object;
  #L51ca6e.  v5:= v12 @kind object;
  #L51ca70.  v6:= v7 @kind object;
  #L51ca72.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L51ca78.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51ca7e.  v12:= temp @kind object;
  #L51ca80.  return v12 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `doOnNext`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v11 @kind this, `io.reactivex.rxjava3.functions.Consumer` v12 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.doOnNext:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L51ca94.  v0:= "onNext is null" @kind object;
  #L51ca98.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51ca9e.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek`;
  #L51caa2.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51caa8.  v4:= temp @kind object;
  #L51caaa.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51cab0.  v5:= temp @kind object;
  #L51cab2.  v7:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51cab6.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51cabc.  v8:= temp @kind object;
  #L51cabe.  v9:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_LONG_CONSUMER` @type ^`io.reactivex.rxjava3.functions.LongConsumer` @kind object;
  #L51cac2.  v10:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51cac6.  v1:= v0 @kind object;
  #L51cac8.  v2:= v11 @kind object;
  #L51caca.  v3:= v12 @kind object;
  #L51cacc.  v6:= v7 @kind object;
  #L51cace.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L51cad4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cada.  v12:= temp @kind object;
  #L51cadc.  return v12 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `doOnNext`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.doOnNext:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51caf0.  v0:= "onNext is null" @kind object;
  #L51caf4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cafa.  v0:= "errorHandler is null" @kind object;
  #L51cafe.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cb04.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelDoOnNextTry`;
  #L51cb08.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelDoOnNextTry;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L51cb0e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cb14.  v2:= temp @kind object;
  #L51cb16.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `doOnNext`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.parallel.ParallelFailureHandling` v3 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.doOnNext:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51cb28.  v0:= "onNext is null" @kind object;
  #L51cb2c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cb32.  v0:= "errorHandler is null" @kind object;
  #L51cb36.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cb3c.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelDoOnNextTry`;
  #L51cb40.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelDoOnNextTry;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L51cb46.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cb4c.  v2:= temp @kind object;
  #L51cb4e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `doOnRequest`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v11 @kind this, `io.reactivex.rxjava3.functions.LongConsumer` v12 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.doOnRequest:(Lio/reactivex/rxjava3/functions/LongConsumer;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L51cb60.  v0:= "onRequest is null" @kind object;
  #L51cb64.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cb6a.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek`;
  #L51cb6e.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51cb74.  v3:= temp @kind object;
  #L51cb76.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51cb7c.  v4:= temp @kind object;
  #L51cb7e.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51cb84.  v5:= temp @kind object;
  #L51cb86.  v7:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51cb8a.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51cb90.  v8:= temp @kind object;
  #L51cb92.  v10:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51cb96.  v1:= v0 @kind object;
  #L51cb98.  v2:= v11 @kind object;
  #L51cb9a.  v6:= v7 @kind object;
  #L51cb9c.  v9:= v12 @kind object;
  #L51cb9e.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L51cba4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cbaa.  v12:= temp @kind object;
  #L51cbac.  return v12 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `doOnSubscribe`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v11 @kind this, `io.reactivex.rxjava3.functions.Consumer` v12 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.doOnSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L51cbc0.  v0:= "onSubscribe is null" @kind object;
  #L51cbc4.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cbca.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelPeek`;
  #L51cbce.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51cbd4.  v3:= temp @kind object;
  #L51cbd6.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51cbdc.  v4:= temp @kind object;
  #L51cbde.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L51cbe4.  v5:= temp @kind object;
  #L51cbe6.  v7:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51cbea.  v9:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_LONG_CONSUMER` @type ^`io.reactivex.rxjava3.functions.LongConsumer` @kind object;
  #L51cbee.  v10:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L51cbf2.  v1:= v0 @kind object;
  #L51cbf4.  v2:= v11 @kind object;
  #L51cbf6.  v6:= v7 @kind object;
  #L51cbf8.  v8:= v12 @kind object;
  #L51cbfa.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelPeek;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L51cc00.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cc06.  v12:= temp @kind object;
  #L51cc08.  return v12 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `filter`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51cc1c.  v0:= "predicate is null" @kind object;
  #L51cc20.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cc26.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelFilter`;
  #L51cc2a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelFilter;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L51cc30.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cc36.  v2:= temp @kind object;
  #L51cc38.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `filter`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.filter:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51cc4c.  v0:= "predicate is null" @kind object;
  #L51cc50.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cc56.  v0:= "errorHandler is null" @kind object;
  #L51cc5a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cc60.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelFilterTry`;
  #L51cc64.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelFilterTry;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L51cc6a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cc70.  v2:= temp @kind object;
  #L51cc72.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `filter`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object, `io.reactivex.rxjava3.parallel.ParallelFailureHandling` v3 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.filter:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51cc84.  v0:= "predicate is null" @kind object;
  #L51cc88.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cc8e.  v0:= "errorHandler is null" @kind object;
  #L51cc92.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cc98.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelFilterTry`;
  #L51cc9c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelFilterTry;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L51cca2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cca8.  v2:= temp @kind object;
  #L51ccaa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `flatMap`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v3 @kind this, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L51ccbc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L51ccc2.  v0:= temp;
  #L51ccc4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L51ccca.  v1:= temp;
  #L51cccc.  v2:= 0I;
  #L51ccce.  call temp:= `flatMap`(v3, v4, v2, v0, v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind virtual;
  #L51ccd4.  v4:= temp @kind object;
  #L51ccd6.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `flatMap`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L51cce8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L51ccee.  v0:= temp;
  #L51ccf0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L51ccf6.  v1:= temp;
  #L51ccf8.  call temp:= `flatMap`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind virtual;
  #L51ccfe.  v3:= temp @kind object;
  #L51cd00.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `flatMap`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51cd14.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L51cd1a.  v0:= temp;
  #L51cd1c.  call temp:= `flatMap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind virtual;
  #L51cd22.  v2:= temp @kind object;
  #L51cd24.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `flatMap`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `int` v11 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L51cd38.  v0:= "mapper is null" @kind object;
  #L51cd3c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cd42.  v0:= "maxConcurrency" @kind object;
  #L51cd46.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L51cd4c.  v0:= "prefetch" @kind object;
  #L51cd50.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L51cd56.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelFlatMap`;
  #L51cd5a.  v1:= v0 @kind object;
  #L51cd5c.  v2:= v7 @kind object;
  #L51cd5e.  v3:= v8 @kind object;
  #L51cd60.  v4:= v9;
  #L51cd62.  v5:= v10;
  #L51cd64.  v6:= v11;
  #L51cd66.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelFlatMap;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Function;ZII)V` @kind direct;
  #L51cd6c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cd72.  v8:= temp @kind object;
  #L51cd74.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `flatMapIterable`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51cd88.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L51cd8e.  v0:= temp;
  #L51cd90.  call temp:= `flatMapIterable`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind virtual;
  #L51cd96.  v2:= temp @kind object;
  #L51cd98.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `flatMapIterable`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51cdac.  v0:= "mapper is null" @kind object;
  #L51cdb0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cdb6.  v0:= "bufferSize" @kind object;
  #L51cdba.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L51cdc0.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelFlatMapIterable`;
  #L51cdc4.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelFlatMapIterable;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L51cdca.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cdd0.  v2:= temp @kind object;
  #L51cdd2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `flatMapStream`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51cde4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L51cdea.  v0:= temp;
  #L51cdec.  call temp:= `flatMapStream`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind virtual;
  #L51cdf2.  v2:= temp @kind object;
  #L51cdf4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `flatMapStream`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51ce08.  v0:= "mapper is null" @kind object;
  #L51ce0c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51ce12.  v0:= "prefetch" @kind object;
  #L51ce16.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L51ce1c.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream`;
  #L51ce20.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelFlatMapStream;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L51ce26.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51ce2c.  v2:= temp @kind object;
  #L51ce2e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `map`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51cf20.  v0:= "mapper is null" @kind object;
  #L51cf24.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cf2a.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelMap`;
  #L51cf2e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMap;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L51cf34.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cf3a.  v2:= temp @kind object;
  #L51cf3c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `map`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.map:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51cf50.  v0:= "mapper is null" @kind object;
  #L51cf54.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cf5a.  v0:= "errorHandler is null" @kind object;
  #L51cf5e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cf64.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelMapTry`;
  #L51cf68.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMapTry;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L51cf6e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cf74.  v2:= temp @kind object;
  #L51cf76.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `map`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.parallel.ParallelFailureHandling` v3 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.map:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51cf88.  v0:= "mapper is null" @kind object;
  #L51cf8c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cf92.  v0:= "errorHandler is null" @kind object;
  #L51cf96.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cf9c.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelMapTry`;
  #L51cfa0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelMapTry;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L51cfa6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cfac.  v2:= temp @kind object;
  #L51cfae.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `mapOptional`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.mapOptional:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51cfc0.  v0:= "mapper is null" @kind object;
  #L51cfc4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cfca.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional`;
  #L51cfce.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapOptional;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L51cfd4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51cfda.  v2:= temp @kind object;
  #L51cfdc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `mapOptional`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.mapOptional:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51cff0.  v0:= "mapper is null" @kind object;
  #L51cff4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51cffa.  v0:= "errorHandler is null" @kind object;
  #L51cffe.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51d004.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional`;
  #L51d008.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L51d00e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51d014.  v2:= temp @kind object;
  #L51d016.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `mapOptional`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.parallel.ParallelFailureHandling` v3 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.mapOptional:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/parallel/ParallelFailureHandling;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51d028.  v0:= "mapper is null" @kind object;
  #L51d02c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51d032.  v0:= "errorHandler is null" @kind object;
  #L51d036.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51d03c.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional`;
  #L51d040.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L51d046.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51d04c.  v2:= temp @kind object;
  #L51d04e.  return v2 @kind object;
}
procedure `int` `parallelism`() @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.parallelism:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.reactivex.rxjava3.core.Flowable` `reduce`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.reduce:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51c594.  v0:= "reducer is null" @kind object;
  #L51c598.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51c59e.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduceFull`;
  #L51c5a2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduceFull;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L51c5a8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L51c5ae.  v2:= temp @kind object;
  #L51c5b0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `reduce`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.reduce:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51d060.  v0:= "initialSupplier is null" @kind object;
  #L51d064.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51d06a.  v0:= "reducer is null" @kind object;
  #L51d06e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51d074.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelReduce`;
  #L51d078.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelReduce;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L51d07e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51d084.  v2:= temp @kind object;
  #L51d086.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `runOn`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.runOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51d098.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L51d09e.  v0:= temp;
  #L51d0a0.  call temp:= `runOn`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.runOn:(Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind virtual;
  #L51d0a6.  v2:= temp @kind object;
  #L51d0a8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `runOn`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.runOn:(Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51d0bc.  v0:= "scheduler is null" @kind object;
  #L51d0c0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51d0c6.  v0:= "prefetch" @kind object;
  #L51d0ca.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L51d0d0.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelRunOn`;
  #L51d0d4.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelRunOn;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Lio/reactivex/rxjava3/core/Scheduler;I)V` @kind direct;
  #L51d0da.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L51d0e0.  v2:= temp @kind object;
  #L51d0e2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sequential`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.sequential:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51c5c4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L51c5ca.  v0:= temp;
  #L51c5cc.  call temp:= `sequential`(v1, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.sequential:(I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L51c5d2.  v0:= temp @kind object;
  #L51c5d4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sequential`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.sequential:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L51c5e8.  v0:= "prefetch" @kind object;
  #L51c5ec.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L51c5f2.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelJoin`;
  #L51c5f6.  v1:= 0I;
  #L51c5f8.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelJoin;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;IZ)V` @kind direct;
  #L51c5fe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L51c604.  v3:= temp @kind object;
  #L51c606.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sequentialDelayError`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.sequentialDelayError:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51c618.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L51c61e.  v0:= temp;
  #L51c620.  call temp:= `sequentialDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.sequentialDelayError:(I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L51c626.  v0:= temp @kind object;
  #L51c628.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sequentialDelayError`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.sequentialDelayError:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L51c63c.  v0:= "prefetch" @kind object;
  #L51c640.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L51c646.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelJoin`;
  #L51c64a.  v1:= 1I;
  #L51c64c.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelJoin;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;IZ)V` @kind direct;
  #L51c652.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L51c658.  v3:= temp @kind object;
  #L51c65a.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sorted`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.sorted:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51c66c.  v0:= 16I;
  #L51c670.  call temp:= `sorted`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.sorted:(Ljava/util/Comparator;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L51c676.  v2:= temp @kind object;
  #L51c678.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sorted`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `java.util.Comparator` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.sorted:(Ljava/util/Comparator;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51c68c.  v0:= "comparator is null" @kind object;
  #L51c690.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51c696.  v0:= "capacityHint" @kind object;
  #L51c69a.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L51c6a0.  call temp:= `parallelism`(v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L51c6a6.  v0:= temp;
  #L51c6a8.  v3:= v3 / v0 @kind int;
  #L51c6aa.  v3:= v3 + 1;
  #L51c6ae.  call temp:= `createArrayList`(v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createArrayList:(I)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L51c6b4.  v3:= temp @kind object;
  #L51c6b6.  call temp:= `instance`() @signature `Lio/reactivex/rxjava3/internal/util/ListAddBiConsumer;.instance:()Lio/reactivex/rxjava3/functions/BiFunction;` @kind static;
  #L51c6bc.  v0:= temp @kind object;
  #L51c6be.  call temp:= `reduce`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.reduce:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind virtual;
  #L51c6c4.  v3:= temp @kind object;
  #L51c6c6.  v0:= new `io.reactivex.rxjava3.internal.util.SorterFunction`;
  #L51c6ca.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/SorterFunction;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L51c6d0.  call temp:= `map`(v3, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind virtual;
  #L51c6d6.  v3:= temp @kind object;
  #L51c6d8.  v0:= new `io.reactivex.rxjava3.internal.operators.parallel.ParallelSortedJoin`;
  #L51c6dc.  call `<init>`(v0, v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/parallel/ParallelSortedJoin;.<init>:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;Ljava/util/Comparator;)V` @kind direct;
  #L51c6e2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L51c6e8.  v2:= temp @kind object;
  #L51c6ea.  return v2 @kind object;
}
procedure `void` `subscribe`(`org.reactivestreams.Subscriber`[] v0 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `to`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `io.reactivex.rxjava3.parallel.ParallelFlowableConverter` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.to:(Lio/reactivex/rxjava3/parallel/ParallelFlowableConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51d0f4.  v0:= "converter is null" @kind object;
  #L51d0f8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51d0fe.  v2:= temp @kind object;
  #L51d100.  v2:= (`io.reactivex.rxjava3.parallel.ParallelFlowableConverter`) v2 @kind object;
  #L51d104.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowableConverter;.apply:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;)Ljava/lang/Object;` @kind interface;
  #L51d10a.  v2:= temp @kind object;
  #L51d10c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `toSortedList`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51c6fc.  v0:= 16I;
  #L51c700.  call temp:= `toSortedList`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L51c706.  v2:= temp @kind object;
  #L51c708.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `toSortedList`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v1 @kind this, `java.util.Comparator` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51c71c.  v0:= "comparator is null" @kind object;
  #L51c720.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51c726.  v0:= "capacityHint" @kind object;
  #L51c72a.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L51c730.  call temp:= `parallelism`(v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L51c736.  v0:= temp;
  #L51c738.  v3:= v3 / v0 @kind int;
  #L51c73a.  v3:= v3 + 1;
  #L51c73e.  call temp:= `createArrayList`(v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createArrayList:(I)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L51c744.  v3:= temp @kind object;
  #L51c746.  call temp:= `instance`() @signature `Lio/reactivex/rxjava3/internal/util/ListAddBiConsumer;.instance:()Lio/reactivex/rxjava3/functions/BiFunction;` @kind static;
  #L51c74c.  v0:= temp @kind object;
  #L51c74e.  call temp:= `reduce`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.reduce:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind virtual;
  #L51c754.  v3:= temp @kind object;
  #L51c756.  v0:= new `io.reactivex.rxjava3.internal.util.SorterFunction`;
  #L51c75a.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/SorterFunction;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L51c760.  call temp:= `map`(v3, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind virtual;
  #L51c766.  v3:= temp @kind object;
  #L51c768.  v0:= new `io.reactivex.rxjava3.internal.util.MergerBiFunction`;
  #L51c76c.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/MergerBiFunction;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L51c772.  call temp:= `reduce`(v3, v0) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.reduce:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L51c778.  v2:= temp @kind object;
  #L51c77a.  call temp:= `onAssembly`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L51c780.  v2:= temp @kind object;
  #L51c782.  return v2 @kind object;
}
procedure `boolean` `validate`(`io.reactivex.rxjava3.parallel.ParallelFlowable` v5 @kind this, `org.reactivestreams.Subscriber`[] v6 @kind object) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.validate:([Lorg/reactivestreams/Subscriber;)Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L51c4dc.  v0:= "subscribers is null" @kind object;
  #L51c4e0.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L51c4e6.  call temp:= `parallelism`(v5) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L51c4ec.  v0:= temp;
  #L51c4ee.  v1:= length @variable v6;
  #L51c4f0.  if v1 == v0 then goto L51c54e;
  #L51c4f4.  v1:= new `java.lang.IllegalArgumentException`;
  #L51c4f8.  v2:= new `java.lang.StringBuilder`;
  #L51c4fc.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L51c502.  v3:= "parallelism = " @kind object;
  #L51c506.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L51c50c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L51c512.  v0:= ", subscribers = " @kind object;
  #L51c516.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L51c51c.  v0:= length @variable v6;
  #L51c51e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L51c524.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L51c52a.  v0:= temp @kind object;
  #L51c52c.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L51c532.  v0:= length @variable v6;
  #L51c534.  v2:= 0I;
  #L51c536.  v3:= 0I;
  #L51c538.  if v3 >= v0 then goto L51c54c;
  #L51c53c.  v4:= v6[v3] @kind object;
  #L51c540.  call `error`(v1, v4) @signature `Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L51c546.  v3:= v3 + 1;
  #L51c54a.  goto L51c538;
  #L51c54c.  return v2;
  #L51c54e.  v6:= 1I;
  #L51c550.  return v6;
}
