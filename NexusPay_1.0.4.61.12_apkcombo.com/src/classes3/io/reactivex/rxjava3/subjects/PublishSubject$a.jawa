record `io.reactivex.rxjava3.subjects.PublishSubject$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicBoolean` @kind class, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.subjects.PublishSubject$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.subjects.PublishSubject` `io.reactivex.rxjava3.subjects.PublishSubject$a.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.subjects.PublishSubject$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.subjects.PublishSubject$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.subjects.PublishSubject` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/subjects/PublishSubject;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5236d8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L5236de.  v0.`io.reactivex.rxjava3.subjects.PublishSubject$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L5236e2.  v0.`io.reactivex.rxjava3.subjects.PublishSubject$a.b` @type ^`io.reactivex.rxjava3.subjects.PublishSubject` := v2 @kind object;
  #L5236e6.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.subjects.PublishSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject$a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L523724.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L52372a.  v0:= temp;
  #L52372c.  if v0 != 0 then goto L52373a;
  #L523730.  v0:= v1.`io.reactivex.rxjava3.subjects.PublishSubject$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L523734.  call `onComplete`(v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L52373a.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.subjects.PublishSubject$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject$a;.b:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52374c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L523752.  v0:= temp;
  #L523754.  if v0 == 0 then goto L523760;
  #L523758.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52375e.  goto L52376a;
  #L523760.  v0:= v1.`io.reactivex.rxjava3.subjects.PublishSubject$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L523764.  call `onError`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L52376a.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.subjects.PublishSubject$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject$a;.c:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52377c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L523782.  v0:= temp;
  #L523784.  if v0 != 0 then goto L523792;
  #L523788.  v0:= v1.`io.reactivex.rxjava3.subjects.PublishSubject$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L52378c.  call `onNext`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L523792.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.subjects.PublishSubject$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5236f8.  v0:= 0I;
  #L5236fa.  v1:= 1I;
  #L5236fc.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L523702.  v0:= temp;
  #L523704.  if v0 == 0 then goto L523712;
  #L523708.  v0:= v2.`io.reactivex.rxjava3.subjects.PublishSubject$a.b` @type ^`io.reactivex.rxjava3.subjects.PublishSubject` @kind object;
  #L52370c.  call `b`(v0, v2) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject;.b:(Lio/reactivex/rxjava3/subjects/PublishSubject$a;)V` @kind virtual;
  #L523712.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.subjects.PublishSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/PublishSubject$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5236bc.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L5236c2.  v0:= temp;
  #L5236c4.  return v0;
}
