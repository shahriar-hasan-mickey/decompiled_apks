record `io.reactivex.rxjava3.subjects.Subject` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.Observable` @kind class, `io.reactivex.rxjava3.core.Observer` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.subjects.Subject` v0 @kind this) @signature `Lio/reactivex/rxjava3/subjects/Subject;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L52540c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L525412.  return @kind void;
}
procedure `java.lang.Throwable` `getThrowable`() @signature `Lio/reactivex/rxjava3/subjects/Subject;.getThrowable:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasComplete`() @signature `Lio/reactivex/rxjava3/subjects/Subject;.hasComplete:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasObservers`() @signature `Lio/reactivex/rxjava3/subjects/Subject;.hasObservers:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasThrowable`() @signature `Lio/reactivex/rxjava3/subjects/Subject;.hasThrowable:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.reactivex.rxjava3.subjects.Subject` `toSerialized`(`io.reactivex.rxjava3.subjects.Subject` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/Subject;.toSerialized:()Lio/reactivex/rxjava3/subjects/Subject;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L5253e4.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.subjects.a` @kind boolean;
  #L5253e8.  if v0 == 0 then goto L5253ee;
  #L5253ec.  return v1 @kind object;
  #L5253ee.  v0:= new `io.reactivex.rxjava3.subjects.a`;
  #L5253f2.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/subjects/a;.<init>:(Lio/reactivex/rxjava3/subjects/Subject;)V` @kind direct;
  #L5253f8.  return v0 @kind object;
}
