record `io.reactivex.rxjava3.subjects.UnicastSubject$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.internal.observers.BasicIntQueueDisposable` @kind class {
  `io.reactivex.rxjava3.subjects.UnicastSubject` `io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @AccessFlag FINAL_SYNTHETIC;
}
global `long` `@@io.reactivex.rxjava3.subjects.UnicastSubject$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.subjects.UnicastSubject$a` v0 @kind this, `io.reactivex.rxjava3.subjects.UnicastSubject` v1 @kind object) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject$a;.<init>:(Lio/reactivex/rxjava3/subjects/UnicastSubject;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5254b0.  v0.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` := v1 @kind object;
  #L5254b4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BasicIntQueueDisposable;.<init>:()V` @kind direct;
  #L5254ba.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.rxjava3.subjects.UnicastSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject$a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5254cc.  v0:= v1.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L5254d0.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.a` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L5254d4.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L5254da.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.subjects.UnicastSubject$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5254ec.  v0:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L5254f0.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.e` @type ^`boolean` @kind boolean;
  #L5254f4.  if v0 != 0 then goto L525554;
  #L5254f8.  v0:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L5254fc.  v1:= 1I;
  #L5254fe.  v0.`io.reactivex.rxjava3.subjects.UnicastSubject.e` @type ^`boolean` := v1 @kind boolean;
  #L525502.  v0:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L525506.  call `a`(v0) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject;.a:()V` @kind virtual;
  #L52550c.  v0:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L525510.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L525514.  v1:= 0I;
  #L525516.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L52551c.  v0:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L525520.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.i` @type ^`io.reactivex.rxjava3.internal.observers.BasicIntQueueDisposable` @kind object;
  #L525524.  call temp:= `getAndIncrement`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L52552a.  v0:= temp;
  #L52552c.  if v0 != 0 then goto L525554;
  #L525530.  v0:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L525534.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L525538.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L52553e.  v0:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L525542.  v1:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.j` @type ^`boolean` @kind boolean;
  #L525546.  if v1 != 0 then goto L525554;
  #L52554a.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.a` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L52554e.  call `clear`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.clear:()V` @kind virtual;
  #L525554.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.subjects.UnicastSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L525424.  v0:= v1.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L525428.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.e` @type ^`boolean` @kind boolean;
  #L52542c.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.rxjava3.subjects.UnicastSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject$a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L525440.  v0:= v1.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L525444.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.a` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L525448.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.isEmpty:()Z` @kind virtual;
  #L52544e.  v0:= temp;
  #L525450.  return v0;
}
procedure `java.lang.Object` `poll`(`io.reactivex.rxjava3.subjects.UnicastSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52548c.  v0:= v1.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L525490.  v0:= v0.`io.reactivex.rxjava3.subjects.UnicastSubject.a` @type ^`io.reactivex.rxjava3.internal.queue.SpscLinkedArrayQueue` @kind object;
  #L525494.  call temp:= `poll`(v0) @signature `Lio/reactivex/rxjava3/internal/queue/SpscLinkedArrayQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L52549a.  v0:= temp @kind object;
  #L52549c.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.rxjava3.subjects.UnicastSubject$a` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/rxjava3/subjects/UnicastSubject$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L525464.  v0:= 2I;
  #L525466.  v3:= v3 ^& v0 @kind int;
  #L525468.  if v3 == 0 then goto L525478;
  #L52546c.  v3:= v2.`io.reactivex.rxjava3.subjects.UnicastSubject$a.a` @type ^`io.reactivex.rxjava3.subjects.UnicastSubject` @kind object;
  #L525470.  v1:= 1I;
  #L525472.  v3.`io.reactivex.rxjava3.subjects.UnicastSubject.j` @type ^`boolean` := v1 @kind boolean;
  #L525476.  return v0;
  #L525478.  v3:= 0I;
  #L52547a.  return v3;
}
