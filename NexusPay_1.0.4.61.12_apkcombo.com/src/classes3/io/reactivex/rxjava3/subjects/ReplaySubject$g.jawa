record `io.reactivex.rxjava3.subjects.ReplaySubject$g` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.subjects.ReplaySubject$b` @kind interface {
  `java.util.List` `io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.subjects.ReplaySubject$g.b` @AccessFlag VOLATILE;
  `int` `io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @AccessFlag VOLATILE;
}
global `long` `@@io.reactivex.rxjava3.subjects.ReplaySubject$g.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L52453c.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L524542.  v0:= new `java.util.ArrayList`;
  #L524546.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L52454c.  v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @type ^`java.util.List` := v0 @kind object;
  #L524550.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52458c.  v0:= v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @type ^`java.util.List` @kind object;
  #L524590.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L524596.  call `c`(v1) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.c:()V` @kind virtual;
  #L52459c.  v2:= v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L5245a0.  v0:= 1I;
  #L5245a2.  v2:= v2 + v0 @kind int;
  #L5245a4.  v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int` := v2;
  #L5245a8.  v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.b` @type ^`boolean` := v0 @kind boolean;
  #L5245ac.  return @kind void;
}
procedure `void` `add`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L524564.  v0:= v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @type ^`java.util.List` @kind object;
  #L524568.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L52456e.  v2:= v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L524572.  v2:= v2 + 1;
  #L524576.  v1.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int` := v2;
  #L52457a.  return @kind void;
}
procedure `void` `b`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v9 @kind this, `io.reactivex.rxjava3.subjects.ReplaySubject$c` v10 @kind object) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.b:(Lio/reactivex/rxjava3/subjects/ReplaySubject$c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L5245c0.  call temp:= `getAndIncrement`(v10) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L5245c6.  v0:= temp;
  #L5245c8.  if v0 == 0 then goto L5245ce;
  #L5245cc.  return @kind void;
  #L5245ce.  v0:= v9.`io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @type ^`java.util.List` @kind object;
  #L5245d2.  v1:= v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L5245d6.  v2:= v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.c` @type ^`java.lang.Object` @kind object;
  #L5245da.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L5245de.  v3:= 0I;
  #L5245e0.  v4:= 1I;
  #L5245e2.  if v2 == 0 then goto L5245f0;
  #L5245e6.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L5245ec.  v3:= temp;
  #L5245ee.  goto L5245fc;
  #L5245f0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L5245f6.  v2:= temp @kind object;
  #L5245f8.  v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.c` @type ^`java.lang.Object` := v2 @kind object;
  #L5245fc.  v2:= 1I;
  #L5245fe.  v5:= v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.d` @type ^`boolean` @kind boolean;
  #L524602.  v6:= 0I;
  #L524604.  if v5 == 0 then goto L52460e;
  #L524608.  v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.c` @type ^`java.lang.Object` := v6 @kind object;
  #L52460c.  return @kind void;
  #L52460e.  v5:= v9.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L524612.  if v5 == v3 then goto L52467c;
  #L524616.  v7:= v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.d` @type ^`boolean` @kind boolean;
  #L52461a.  if v7 == 0 then goto L524624;
  #L52461e.  v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.c` @type ^`java.lang.Object` := v6 @kind object;
  #L524622.  return @kind void;
  #L524624.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L52462a.  v7:= temp @kind object;
  #L52462c.  v8:= v9.`io.reactivex.rxjava3.subjects.ReplaySubject$g.b` @type ^`boolean` @kind boolean;
  #L524630.  if v8 == 0 then goto L524670;
  #L524634.  v8:= v3 + 1;
  #L524638.  if v8 != v5 then goto L524670;
  #L52463c.  v5:= v9.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L524640.  if v8 != v5 then goto L524670;
  #L524644.  call temp:= `isComplete`(v7) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L52464a.  v0:= temp;
  #L52464c.  if v0 == 0 then goto L524658;
  #L524650.  call `onComplete`(v1) @signature `Lio/reactivex/rxjava3/core/Observer;.onComplete:()V` @kind interface;
  #L524656.  goto L524666;
  #L524658.  call temp:= `getError`(v7) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L52465e.  v0:= temp @kind object;
  #L524660.  call `onError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L524666.  v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.c` @type ^`java.lang.Object` := v6 @kind object;
  #L52466a.  v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.d` @type ^`boolean` := v4 @kind boolean;
  #L52466e.  return @kind void;
  #L524670.  call `onNext`(v1, v7) @signature `Lio/reactivex/rxjava3/core/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L524676.  v3:= v3 + 1;
  #L52467a.  goto L524612;
  #L52467c.  v5:= v9.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L524680.  if v3 == v5 then goto L524686;
  #L524684.  goto L5245fe;
  #L524686.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L52468c.  v5:= temp @kind object;
  #L52468e.  v10.`io.reactivex.rxjava3.subjects.ReplaySubject$c.c` @type ^`java.lang.Object` := v5 @kind object;
  #L524692.  v2:= -v2 @kind int;
  #L524694.  call temp:= `addAndGet`(v10, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L52469a.  v2:= temp;
  #L52469c.  if v2 != 0 then goto L5245fe;
  #L5246a0.  return @kind void;
}
procedure `void` `c`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v0 @kind this) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.c:()V` @AccessFlag PUBLIC {
    temp;

  #L5246b4.  return @kind void;
}
procedure `java.lang.Object`[] `d`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v6 @kind this, `java.lang.Object`[] v7 @kind object) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.d:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L524494.  v0:= v6.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L524498.  v1:= 0I;
  #L52449a.  v2:= 0I;
  #L52449c.  if v0 != 0 then goto L5244ac;
  #L5244a0.  v0:= length @variable v7;
  #L5244a2.  if v0 == 0 then goto L5244aa;
  #L5244a6.  v7[v2]:= v1 @kind object;
  #L5244aa.  return v7 @kind object;
  #L5244ac.  v3:= v6.`io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @type ^`java.util.List` @kind object;
  #L5244b0.  v4:= v0 + -1;
  #L5244b4.  call temp:= `get`(v3, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L5244ba.  v4:= temp @kind object;
  #L5244bc.  call temp:= `isComplete`(v4) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L5244c2.  v5:= temp;
  #L5244c4.  if v5 != 0 then goto L5244d4;
  #L5244c8.  call temp:= `isError`(v4) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L5244ce.  v4:= temp;
  #L5244d0.  if v4 == 0 then goto L5244e8;
  #L5244d4.  v0:= v0 + -1;
  #L5244d8.  if v0 != 0 then goto L5244e8;
  #L5244dc.  v0:= length @variable v7;
  #L5244de.  if v0 == 0 then goto L5244e6;
  #L5244e2.  v7[v2]:= v1 @kind object;
  #L5244e6.  return v7 @kind object;
  #L5244e8.  v4:= length @variable v7;
  #L5244ea.  if v4 >= v0 then goto L52450a;
  #L5244ee.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L5244f4.  v7:= temp @kind object;
  #L5244f6.  call temp:= `getComponentType`(v7) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L5244fc.  v7:= temp @kind object;
  #L5244fe.  call temp:= `newInstance`(v7, v0) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L524504.  v7:= temp @kind object;
  #L524506.  v7:= (`java.lang.Object`[]) v7 @kind object;
  #L52450a.  if v2 >= v0 then goto L524520;
  #L52450e.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L524514.  v4:= temp @kind object;
  #L524516.  v7[v2]:= v4 @kind object;
  #L52451a.  v2:= v2 + 1;
  #L52451e.  goto L52450a;
  #L524520.  v2:= length @variable v7;
  #L524522.  if v2 <= v0 then goto L52452a;
  #L524526.  v7[v0]:= v1 @kind object;
  #L52452a.  return v7 @kind object;
}
procedure `java.lang.Object` `getValue`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v5 @kind this) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L524434.  v0:= v5.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L524438.  v1:= 0I;
  #L52443a.  if v0 == 0 then goto L524480;
  #L52443e.  v2:= v5.`io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @type ^`java.util.List` @kind object;
  #L524442.  v3:= v0 + -1;
  #L524446.  call temp:= `get`(v2, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L52444c.  v3:= temp @kind object;
  #L52444e.  call temp:= `isComplete`(v3) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L524454.  v4:= temp;
  #L524456.  if v4 != 0 then goto L52446a;
  #L52445a.  call temp:= `isError`(v3) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L524460.  v4:= temp;
  #L524462.  if v4 == 0 then goto L524468;
  #L524466.  goto L52446a;
  #L524468.  return v3 @kind object;
  #L52446a.  v3:= 1I;
  #L52446c.  if v0 != v3 then goto L524472;
  #L524470.  return v1 @kind object;
  #L524472.  v0:= v0 + -2;
  #L524476.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L52447c.  v0:= temp @kind object;
  #L52447e.  return v0 @kind object;
  #L524480.  return v1 @kind object;
}
procedure `int` `size`(`io.reactivex.rxjava3.subjects.ReplaySubject$g` v4 @kind this) @signature `Lio/reactivex/rxjava3/subjects/ReplaySubject$g;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5243e8.  v0:= v4.`io.reactivex.rxjava3.subjects.ReplaySubject$g.c` @type ^`int`;
  #L5243ec.  if v0 == 0 then goto L52441e;
  #L5243f0.  v1:= v4.`io.reactivex.rxjava3.subjects.ReplaySubject$g.a` @type ^`java.util.List` @kind object;
  #L5243f4.  v2:= v0 + -1;
  #L5243f8.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L5243fe.  v1:= temp @kind object;
  #L524400.  call temp:= `isComplete`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L524406.  v3:= temp;
  #L524408.  if v3 != 0 then goto L52441c;
  #L52440c.  call temp:= `isError`(v1) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L524412.  v1:= temp;
  #L524414.  if v1 == 0 then goto L52441a;
  #L524418.  goto L52441c;
  #L52441a.  return v0;
  #L52441c.  return v2;
  #L52441e.  v0:= 0I;
  #L524420.  return v0;
}
