record `io.reactivex.rxjava3.subjects.BehaviorSubject$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList$NonThrowingPredicate` @kind interface {
  `io.reactivex.rxjava3.core.Observer` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.subjects.BehaviorSubject` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.d` @AccessFlag ;
  `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.e` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.f` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @AccessFlag VOLATILE;
  `long` `io.reactivex.rxjava3.subjects.BehaviorSubject$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.subjects.BehaviorSubject$a` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object, `io.reactivex.rxjava3.subjects.BehaviorSubject` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.<init>:(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/subjects/BehaviorSubject;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L52273c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L522742.  v0.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.a` @type ^`io.reactivex.rxjava3.core.Observer` := v1 @kind object;
  #L522746.  v0.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.b` @type ^`io.reactivex.rxjava3.subjects.BehaviorSubject` := v2 @kind object;
  #L52274a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.subjects.BehaviorSubject$a` v4 @kind this) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L522788.  v0:= v4.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L52278c.  if v0 == 0 then goto L522792;
  #L522790.  return @kind void;
  #L522792.  @monitorenter v4
  #L522794.  v0:= v4.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L522798.  if v0 == 0 then goto L5227a0;
  #L52279c.  @monitorexit v4
  #L52279e.  return @kind void;
  #L5227a0.  v0:= v4.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.c` @type ^`boolean` @kind boolean;
  #L5227a4.  if v0 == 0 then goto L5227ac;
  #L5227a8.  @monitorexit v4
  #L5227aa.  return @kind void;
  #L5227ac.  v0:= v4.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.b` @type ^`io.reactivex.rxjava3.subjects.BehaviorSubject` @kind object;
  #L5227b0.  v1:= v0.`io.reactivex.rxjava3.subjects.BehaviorSubject.d` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L5227b4.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L5227ba.  v2:= v0.`io.reactivex.rxjava3.subjects.BehaviorSubject.g` @type ^`long` @kind wide;
  #L5227be.  v4.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.h` @type ^`long` := v2 @kind wide;
  #L5227c2.  v0:= v0.`io.reactivex.rxjava3.subjects.BehaviorSubject.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L5227c6.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L5227cc.  v0:= temp @kind object;
  #L5227ce.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L5227d4.  v1:= 1I;
  #L5227d6.  if v0 == 0 then goto L5227de;
  #L5227da.  v2:= 1I;
  #L5227dc.  goto L5227e0;
  #L5227de.  v2:= 0I;
  #L5227e0.  v4.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.d` @type ^`boolean` := v2 @kind boolean;
  #L5227e4.  v4.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.c` @type ^`boolean` := v1 @kind boolean;
  #L5227e8.  @monitorexit v4
  #L5227ea.  if v0 == 0 then goto L522802;
  #L5227ee.  call temp:= `test`(v4, v0) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.test:(Ljava/lang/Object;)Z` @kind virtual;
  #L5227f4.  v0:= temp;
  #L5227f6.  if v0 == 0 then goto L5227fc;
  #L5227fa.  return @kind void;
  #L5227fc.  call `b`(v4) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.b:()V` @kind virtual;
  #L522802.  return @kind void;
  #L522804.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L522806.  @monitorexit v4
  #L522808.  throw v0;
  catch `java.lang.Throwable` @[L522794..L5227ea] goto L522804;
  catch `java.lang.Throwable` @[L522806..L522808] goto L522804;
}
procedure `void` `b`(`io.reactivex.rxjava3.subjects.BehaviorSubject$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L522830.  v0:= v2.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L522834.  if v0 == 0 then goto L52283a;
  #L522838.  return @kind void;
  #L52283a.  @monitorenter v2
  #L52283c.  v0:= v2.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L522840.  if v0 != 0 then goto L52284e;
  #L522844.  v0:= 0I;
  #L522846.  v2.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.d` @type ^`boolean` := v0 @kind boolean;
  #L52284a.  @monitorexit v2
  #L52284c.  return @kind void;
  #L52284e.  v1:= 0I;
  #L522850.  v2.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v1 @kind object;
  #L522854.  @monitorexit v2
  #L522856.  call `forEachWhile`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.forEachWhile:(Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList$NonThrowingPredicate;)V` @kind virtual;
  #L52285c.  goto L522830;
  #L52285e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L522860.  @monitorexit v2
  #L522862.  throw v0;
  catch `java.lang.Throwable` @[L52283c..L522856] goto L52285e;
  catch `java.lang.Throwable` @[L522860..L522862] goto L52285e;
}
procedure `void` `c`(`io.reactivex.rxjava3.subjects.BehaviorSubject$a` v3 @kind this, `java.lang.Object` v4 @kind object, `long` v5 ) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.c:(Ljava/lang/Object;J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L522888.  v0:= v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L52288c.  if v0 == 0 then goto L522892;
  #L522890.  return @kind void;
  #L522892.  v0:= v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.f` @type ^`boolean` @kind boolean;
  #L522896.  if v0 != 0 then goto L5228f6;
  #L52289a.  @monitorenter v3
  #L52289c.  v0:= v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L5228a0.  if v0 == 0 then goto L5228a8;
  #L5228a4.  @monitorexit v3
  #L5228a6.  return @kind void;
  #L5228a8.  v0:= v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.h` @type ^`long` @kind wide;
  #L5228ac.  v2:= lcmp(v0, v5);
  #L5228b0.  if v2 != 0 then goto L5228b8;
  #L5228b4.  @monitorexit v3
  #L5228b6.  return @kind void;
  #L5228b8.  v5:= v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.d` @type ^`boolean` @kind boolean;
  #L5228bc.  if v5 == 0 then goto L5228e2;
  #L5228c0.  v5:= v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L5228c4.  if v5 != 0 then goto L5228d8;
  #L5228c8.  v5:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L5228cc.  v6:= 4I;
  #L5228ce.  call `<init>`(v5, v6) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L5228d4.  v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v5 @kind object;
  #L5228d8.  call `add`(v5, v4) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L5228de.  @monitorexit v3
  #L5228e0.  return @kind void;
  #L5228e2.  v5:= 1I;
  #L5228e4.  v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.c` @type ^`boolean` := v5 @kind boolean;
  #L5228e8.  @monitorexit v3
  #L5228ea.  v3.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.f` @type ^`boolean` := v5 @kind boolean;
  #L5228ee.  goto L5228f6;
  #L5228f0.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5228f2.  @monitorexit v3
  #L5228f4.  throw v4;
  #L5228f6.  call temp:= `test`(v3, v4) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.test:(Ljava/lang/Object;)Z` @kind virtual;
  #L5228fc.  return @kind void;
  catch `java.lang.Throwable` @[L52289c..L5228ea] goto L5228f0;
  catch `java.lang.Throwable` @[L5228f2..L5228f4] goto L5228f0;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.subjects.BehaviorSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52275c.  v0:= v1.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L522760.  if v0 != 0 then goto L522774;
  #L522764.  v0:= 1I;
  #L522766.  v1.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` := v0 @kind boolean;
  #L52276a.  v0:= v1.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.b` @type ^`io.reactivex.rxjava3.subjects.BehaviorSubject` @kind object;
  #L52276e.  call `b`(v0, v1) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject;.b:(Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;)V` @kind virtual;
  #L522774.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.subjects.BehaviorSubject$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5226f0.  v0:= v1.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L5226f4.  return v0;
}
procedure `boolean` `test`(`io.reactivex.rxjava3.subjects.BehaviorSubject$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/subjects/BehaviorSubject$a;.test:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L522708.  v0:= v1.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L52270c.  if v0 != 0 then goto L522726;
  #L522710.  v0:= v1.`io.reactivex.rxjava3.subjects.BehaviorSubject$a.a` @type ^`io.reactivex.rxjava3.core.Observer` @kind object;
  #L522714.  call temp:= `accept`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.accept:(Ljava/lang/Object;Lio/reactivex/rxjava3/core/Observer;)Z` @kind static;
  #L52271a.  v2:= temp;
  #L52271c.  if v2 == 0 then goto L522722;
  #L522720.  goto L522726;
  #L522722.  v2:= 0I;
  #L522724.  goto L522728;
  #L522726.  v2:= 1I;
  #L522728.  return v2;
}
