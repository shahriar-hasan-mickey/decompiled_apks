record `io.reactivex.rxjava3.kotlin.MaybeKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `io.reactivex.rxjava3.core.Maybe` `cast`(`io.reactivex.rxjava3.core.Maybe` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/MaybeKt;.cast:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L515d00.  v0:= "$this$cast" @kind object;
  #L515d04.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L515d0a.  v0:= 4I;
  #L515d0c.  v1:= "R" @kind object;
  #L515d10.  call `reifiedOperationMarker`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L515d16.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L515d1a.  call temp:= `cast`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L515d20.  v2:= temp @kind object;
  #L515d22.  v0:= "cast(R::class.java)" @kind object;
  #L515d26.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L515d2c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatAll`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/MaybeKt;.concatAll:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L515c9c.  v0:= "$this$concatAll" @kind object;
  #L515ca0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L515ca6.  call temp:= `concat`(v1) @signature `Lio/reactivex/rxjava3/core/Maybe;.concat:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L515cac.  v1:= temp @kind object;
  #L515cae.  v0:= "Maybe.concat(this)" @kind object;
  #L515cb2.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L515cb8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeAllMaybes`(`io.reactivex.rxjava3.core.Flowable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/MaybeKt;.mergeAllMaybes:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L515ccc.  v0:= "$this$mergeAllMaybes" @kind object;
  #L515cd0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L515cd6.  v0:= `@@io.reactivex.rxjava3.kotlin.MaybeKt$b.a` @type ^`io.reactivex.rxjava3.kotlin.MaybeKt$b` @kind object;
  #L515cda.  call temp:= `flatMapMaybe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L515ce0.  v1:= temp @kind object;
  #L515ce2.  v0:= "flatMapMaybe { it }" @kind object;
  #L515ce6.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L515cec.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeAllMaybes`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/MaybeKt;.mergeAllMaybes:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L515d80.  v0:= "$this$mergeAllMaybes" @kind object;
  #L515d84.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L515d8a.  v0:= `@@io.reactivex.rxjava3.kotlin.MaybeKt$a.a` @type ^`io.reactivex.rxjava3.kotlin.MaybeKt$a` @kind object;
  #L515d8e.  call temp:= `flatMapMaybe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L515d94.  v1:= temp @kind object;
  #L515d96.  v0:= "flatMapMaybe { it }" @kind object;
  #L515d9a.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L515da0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `ofType`(`io.reactivex.rxjava3.core.Maybe` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/MaybeKt;.ofType:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L515d40.  v0:= "$this$ofType" @kind object;
  #L515d44.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L515d4a.  v0:= 4I;
  #L515d4c.  v1:= "R" @kind object;
  #L515d50.  call `reifiedOperationMarker`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L515d56.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L515d5a.  call temp:= `ofType`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.ofType:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L515d60.  v2:= temp @kind object;
  #L515d62.  v0:= "ofType(R::class.java)" @kind object;
  #L515d66.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L515d6c.  return v2 @kind object;
}
