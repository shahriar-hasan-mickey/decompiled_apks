record `io.reactivex.rxjava3.kotlin.FlowablesKt$withLatestFrom$1` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.functions.BiFunction` @kind interface {
  `kotlin.jvm.functions.Function2` `io.reactivex.rxjava3.kotlin.FlowablesKt$withLatestFrom$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.kotlin.FlowablesKt$withLatestFrom$1` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/FlowablesKt$withLatestFrom$1;.<init>:(Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L514d0c.  v0.`io.reactivex.rxjava3.kotlin.FlowablesKt$withLatestFrom$1.a` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L514d10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L514d16.  return @kind void;
}
procedure `java.lang.Object` `apply`(`io.reactivex.rxjava3.kotlin.FlowablesKt$withLatestFrom$1` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/FlowablesKt$withLatestFrom$1;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L514cd8.  v0:= v2.`io.reactivex.rxjava3.kotlin.FlowablesKt$withLatestFrom$1.a` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L514cdc.  v1:= "t" @kind object;
  #L514ce0.  call `checkNotNullExpressionValue`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L514ce6.  v1:= "u" @kind object;
  #L514cea.  call `checkNotNullExpressionValue`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L514cf0.  call temp:= `invoke`(v0, v3, v4) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L514cf6.  v3:= temp @kind object;
  #L514cf8.  return v3 @kind object;
}
