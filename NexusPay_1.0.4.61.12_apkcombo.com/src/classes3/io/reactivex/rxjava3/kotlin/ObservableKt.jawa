record `io.reactivex.rxjava3.kotlin.ObservableKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Iterable` `a`(`java.util.Iterator` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.a:(Ljava/util/Iterator;)Ljava/lang/Iterable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L5174e0.  v0:= new `io.reactivex.rxjava3.kotlin.ObservableKt$toIterable$1`;
  #L5174e4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt$toIterable$1;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L5174ea.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `cast`(`io.reactivex.rxjava3.core.Observable` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.cast:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L516e94.  v0:= "$this$cast" @kind object;
  #L516e98.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516e9e.  v0:= 4I;
  #L516ea0.  v1:= "R" @kind object;
  #L516ea4.  call `reifiedOperationMarker`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L516eaa.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L516eae.  call temp:= `cast`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L516eb4.  v2:= temp @kind object;
  #L516eb6.  v0:= "cast(R::class.java)" @kind object;
  #L516eba.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516ec0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`java.lang.Iterable` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.combineLatest:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L516ed4.  v0:= "$this$combineLatest" @kind object;
  #L516ed8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516ede.  v0:= "combineFunction" @kind object;
  #L516ee2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516ee8.  v0:= new `io.reactivex.rxjava3.kotlin.ObservableKt$combineLatest$1`;
  #L516eec.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt$combineLatest$1;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L516ef2.  call temp:= `combineLatest`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L516ef8.  v1:= temp @kind object;
  #L516efa.  v2:= "Observable.combineLatestâ€¦List().map { it as T }) }" @kind object;
  #L516efe.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516f04.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatAll`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.concatAll:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L516f18.  v0:= "$this$concatAll" @kind object;
  #L516f1c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516f22.  v0:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$a.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$a` @kind object;
  #L516f26.  call temp:= `concatMap`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L516f2c.  v1:= temp @kind object;
  #L516f2e.  v0:= "concatMap { it }" @kind object;
  #L516f32.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516f38.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatAll`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.concatAll:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L516f4c.  v0:= "$this$concatAll" @kind object;
  #L516f50.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516f56.  call temp:= `concat`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L516f5c.  v1:= temp @kind object;
  #L516f5e.  v0:= "Observable.concat(this)" @kind object;
  #L516f62.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516f68.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapIterable`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.concatMapIterable:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L516f7c.  v0:= "$this$concatMapIterable" @kind object;
  #L516f80.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516f86.  v0:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$b.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$b` @kind object;
  #L516f8a.  call temp:= `concatMapIterable`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L516f90.  v1:= temp @kind object;
  #L516f92.  v0:= "concatMapIterable { it }" @kind object;
  #L516f96.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516f9c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapIterable`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.flatMapIterable:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L516fb0.  v0:= "$this$flatMapIterable" @kind object;
  #L516fb4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516fba.  v0:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$c.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$c` @kind object;
  #L516fbe.  call temp:= `flatMapIterable`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L516fc4.  v1:= temp @kind object;
  #L516fc6.  v0:= "flatMapIterable { it }" @kind object;
  #L516fca.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516fd0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapSequence`(`io.reactivex.rxjava3.core.Observable` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.flatMapSequence:(Lio/reactivex/rxjava3/core/Observable;Lkotlin/jvm/functions/Function1;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L516fe4.  v0:= "$this$flatMapSequence" @kind object;
  #L516fe8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516fee.  v0:= "body" @kind object;
  #L516ff2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L516ff8.  v0:= new `io.reactivex.rxjava3.kotlin.ObservableKt$flatMapSequence$1`;
  #L516ffc.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt$flatMapSequence$1;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L517002.  call temp:= `flatMap`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L517008.  v1:= temp @kind object;
  #L51700a.  v2:= "flatMap { body(it).toObservable() }" @kind object;
  #L51700e.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L517014.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.merge:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L517028.  v0:= "$this$merge" @kind object;
  #L51702c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L517032.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L517038.  v1:= temp @kind object;
  #L51703a.  call temp:= `merge`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L517040.  v1:= temp @kind object;
  #L517042.  v0:= "Observable.merge(this.toObservable())" @kind object;
  #L517046.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51704c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeAll`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.mergeAll:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L517060.  v0:= "$this$mergeAll" @kind object;
  #L517064.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51706a.  v0:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$d.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$d` @kind object;
  #L51706e.  call temp:= `flatMap`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L517074.  v1:= temp @kind object;
  #L517076.  v0:= "flatMap { it }" @kind object;
  #L51707a.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L517080.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L517094.  v0:= "$this$mergeDelayError" @kind object;
  #L517098.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51709e.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L5170a4.  v1:= temp @kind object;
  #L5170a6.  call temp:= `mergeDelayError`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L5170ac.  v1:= temp @kind object;
  #L5170ae.  v0:= "Observable.mergeDelayError(this.toObservable())" @kind object;
  #L5170b2.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5170b8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `ofType`(`io.reactivex.rxjava3.core.Observable` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.ofType:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L5170cc.  v0:= "$this$ofType" @kind object;
  #L5170d0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5170d6.  v0:= 4I;
  #L5170d8.  v1:= "R" @kind object;
  #L5170dc.  call `reifiedOperationMarker`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L5170e2.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L5170e6.  call temp:= `ofType`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.ofType:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L5170ec.  v2:= temp @kind object;
  #L5170ee.  v0:= "ofType(R::class.java)" @kind object;
  #L5170f2.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5170f8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchLatest`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.switchLatest:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L51710c.  v0:= "$this$switchLatest" @kind object;
  #L517110.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L517116.  v0:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$e.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$e` @kind object;
  #L51711a.  call temp:= `switchMap`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L517120.  v1:= temp @kind object;
  #L517122.  v0:= "switchMap { it }" @kind object;
  #L517126.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51712c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchOnNext`(`io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.switchOnNext:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L517140.  v0:= "$this$switchOnNext" @kind object;
  #L517144.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51714a.  call temp:= `switchOnNext`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.switchOnNext:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L517150.  v1:= temp @kind object;
  #L517152.  v0:= "Observable.switchOnNext(this)" @kind object;
  #L517156.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51715c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMap`(`io.reactivex.rxjava3.core.Observable` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toMap:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L517470.  v0:= "$this$toMap" @kind object;
  #L517474.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51747a.  v0:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$f.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$f` @kind object;
  #L51747e.  v1:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$g.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$g` @kind object;
  #L517482.  call temp:= `toMap`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.toMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L517488.  v2:= temp @kind object;
  #L51748a.  v0:= "toMap({ it.first }, { it.second })" @kind object;
  #L51748e.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L517494.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Observable` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toMultimap:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L5174a8.  v0:= "$this$toMultimap" @kind object;
  #L5174ac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5174b2.  v0:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$h.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$h` @kind object;
  #L5174b6.  v1:= `@@io.reactivex.rxjava3.kotlin.ObservableKt$i.a` @type ^`io.reactivex.rxjava3.kotlin.ObservableKt$i` @kind object;
  #L5174ba.  call temp:= `toMultimap`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L5174c0.  v2:= temp @kind object;
  #L5174c2.  v0:= "toMultimap({ it.first }, { it.second })" @kind object;
  #L5174c6.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5174cc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L517278.  v0:= "$this$toObservable" @kind object;
  #L51727c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L517282.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L517288.  v1:= temp @kind object;
  #L51728a.  v0:= "Observable.fromIterable(this)" @kind object;
  #L51728e.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L517294.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`java.util.Iterator` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/util/Iterator;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5172e0.  v0:= "$this$toObservable" @kind object;
  #L5172e4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5172ea.  call temp:= `a`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.a:(Ljava/util/Iterator;)Ljava/lang/Iterable;` @kind static;
  #L5172f0.  v1:= temp @kind object;
  #L5172f2.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L5172f8.  v1:= temp @kind object;
  #L5172fa.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`kotlin.ranges.IntProgression` v6 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Lkotlin/ranges/IntProgression;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L51730c.  v0:= "$this$toObservable" @kind object;
  #L517310.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L517316.  call temp:= `getStep`(v6) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L51731c.  v0:= temp;
  #L51731e.  v1:= 1I;
  #L517320.  if v0 != v1 then goto L517384;
  #L517324.  call temp:= `getLast`(v6) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L51732a.  v0:= temp;
  #L51732c.  v2:= (`long`) v0 @kind i2l;
  #L51732e.  call temp:= `getFirst`(v6) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L517334.  v0:= temp;
  #L517336.  v4:= (`long`) v0 @kind i2l;
  #L517338.  v2:= v2 - v4 @kind long;
  #L51733a.  v0:= 2147483647I;
  #L517340.  v4:= (`long`) v0 @kind i2l;
  #L517342.  v0:= lcmp(v2, v4);
  #L517346.  if v0 >= 0 then goto L517384;
  #L51734a.  call temp:= `getFirst`(v6) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L517350.  v0:= temp;
  #L517352.  v2:= 0I;
  #L517354.  call temp:= `getLast`(v6) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L51735a.  v3:= temp;
  #L51735c.  call temp:= `getFirst`(v6) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L517362.  v6:= temp;
  #L517364.  v3:= v3 - v6 @kind int;
  #L517366.  v3:= v3 + v1 @kind int;
  #L517368.  call temp:= `max`(v2, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L51736e.  v6:= temp;
  #L517370.  call temp:= `range`(v0, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.range:(II)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L517376.  v6:= temp @kind object;
  #L517378.  v0:= "Observable.range(first, â€¦max(0, last - first + 1))" @kind object;
  #L51737c.  call `checkNotNullExpressionValue`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L517382.  goto L517396;
  #L517384.  call temp:= `fromIterable`(v6) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L51738a.  v6:= temp @kind object;
  #L51738c.  v0:= "Observable.fromIterable(this)" @kind object;
  #L517390.  call `checkNotNullExpressionValue`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L517396.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Lkotlin/sequences/Sequence;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5173a8.  v0:= "$this$toObservable" @kind object;
  #L5173ac.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5173b2.  call temp:= `asIterable`(v1) @signature `Lkotlin/sequences/SequencesKt;.asIterable:(Lkotlin/sequences/Sequence;)Ljava/lang/Iterable;` @kind static;
  #L5173b8.  v1:= temp @kind object;
  #L5173ba.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L5173c0.  v1:= temp @kind object;
  #L5173c2.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`byte`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([B)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L51719c.  v0:= "$this$toObservable" @kind object;
  #L5171a0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5171a6.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([B)Ljava/lang/Iterable;` @kind static;
  #L5171ac.  v1:= temp @kind object;
  #L5171ae.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L5171b4.  v1:= temp @kind object;
  #L5171b6.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`char`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([C)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5171c8.  v0:= "$this$toObservable" @kind object;
  #L5171cc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5171d2.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([C)Ljava/lang/Iterable;` @kind static;
  #L5171d8.  v1:= temp @kind object;
  #L5171da.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L5171e0.  v1:= temp @kind object;
  #L5171e2.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`double`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([D)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5171f4.  v0:= "$this$toObservable" @kind object;
  #L5171f8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5171fe.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([D)Ljava/lang/Iterable;` @kind static;
  #L517204.  v1:= temp @kind object;
  #L517206.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L51720c.  v1:= temp @kind object;
  #L51720e.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`float`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([F)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L517220.  v0:= "$this$toObservable" @kind object;
  #L517224.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51722a.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([F)Ljava/lang/Iterable;` @kind static;
  #L517230.  v1:= temp @kind object;
  #L517232.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L517238.  v1:= temp @kind object;
  #L51723a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`int`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L51724c.  v0:= "$this$toObservable" @kind object;
  #L517250.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L517256.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([I)Ljava/lang/Iterable;` @kind static;
  #L51725c.  v1:= temp @kind object;
  #L51725e.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L517264.  v1:= temp @kind object;
  #L517266.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`long`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5173d4.  v0:= "$this$toObservable" @kind object;
  #L5173d8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5173de.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([J)Ljava/lang/Iterable;` @kind static;
  #L5173e4.  v1:= temp @kind object;
  #L5173e6.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L5173ec.  v1:= temp @kind object;
  #L5173ee.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`java.lang.Object`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5172a8.  v0:= "$this$toObservable" @kind object;
  #L5172ac.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5172b2.  v0:= length @variable v1;
  #L5172b4.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L5172ba.  v1:= temp @kind object;
  #L5172bc.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L5172c2.  v1:= temp @kind object;
  #L5172c4.  v0:= "Observable.fromArray(*this)" @kind object;
  #L5172c8.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5172ce.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`short`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([S)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L517400.  v0:= "$this$toObservable" @kind object;
  #L517404.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51740a.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([S)Ljava/lang/Iterable;` @kind static;
  #L517410.  v1:= temp @kind object;
  #L517412.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L517418.  v1:= temp @kind object;
  #L51741a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`boolean`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:([Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L517170.  v0:= "$this$toObservable" @kind object;
  #L517174.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51717a.  call temp:= `asIterable`(v1) @signature `Lkotlin/collections/ArraysKt;.asIterable:([Z)Ljava/lang/Iterable;` @kind static;
  #L517180.  v1:= temp @kind object;
  #L517182.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.toObservable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L517188.  v1:= temp @kind object;
  #L51718a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`java.lang.Iterable` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt;.zip:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L51742c.  v0:= "$this$zip" @kind object;
  #L517430.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L517436.  v0:= "zipFunction" @kind object;
  #L51743a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L517440.  v0:= new `io.reactivex.rxjava3.kotlin.ObservableKt$zip$1`;
  #L517444.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt$zip$1;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L51744a.  call temp:= `zip`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L517450.  v1:= temp @kind object;
  #L517452.  v2:= "Observable.zip(this) { zâ€¦List().map { it as T }) }" @kind object;
  #L517456.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51745c.  return v1 @kind object;
}
