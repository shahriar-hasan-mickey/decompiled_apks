record `io.reactivex.rxjava3.kotlin.ObservableKt$toIterable$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Iterable` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `java.util.Iterator` `io.reactivex.rxjava3.kotlin.ObservableKt$toIterable$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.kotlin.ObservableKt$toIterable$1` v0 @kind this, `java.util.Iterator` v1 @kind object) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt$toIterable$1;.<init>:(Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L516bec.  v0.`io.reactivex.rxjava3.kotlin.ObservableKt$toIterable$1.a` @type ^`java.util.Iterator` := v1 @kind object;
  #L516bf0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L516bf6.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`io.reactivex.rxjava3.kotlin.ObservableKt$toIterable$1` v1 @kind this) @signature `Lio/reactivex/rxjava3/kotlin/ObservableKt$toIterable$1;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L516bd4.  v0:= v1.`io.reactivex.rxjava3.kotlin.ObservableKt$toIterable$1.a` @type ^`java.util.Iterator` @kind object;
  #L516bd8.  return v0 @kind object;
}
