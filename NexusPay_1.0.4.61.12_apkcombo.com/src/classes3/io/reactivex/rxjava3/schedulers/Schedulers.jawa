record `io.reactivex.rxjava3.schedulers.Schedulers` @kind class @AccessFlag PUBLIC_FINAL {
}
global `io.reactivex.rxjava3.core.Scheduler` `@@io.reactivex.rxjava3.schedulers.Schedulers.a` @AccessFlag STATIC_FINAL;
global `io.reactivex.rxjava3.core.Scheduler` `@@io.reactivex.rxjava3.schedulers.Schedulers.b` @AccessFlag STATIC_FINAL;
global `io.reactivex.rxjava3.core.Scheduler` `@@io.reactivex.rxjava3.schedulers.Schedulers.c` @AccessFlag STATIC_FINAL;
global `io.reactivex.rxjava3.core.Scheduler` `@@io.reactivex.rxjava3.schedulers.Schedulers.d` @AccessFlag STATIC_FINAL;
global `io.reactivex.rxjava3.core.Scheduler` `@@io.reactivex.rxjava3.schedulers.Schedulers.e` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L521b40.  v0:= new `io.reactivex.rxjava3.schedulers.Schedulers$h`;
  #L521b44.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers$h;.<init>:()V` @kind direct;
  #L521b4a.  call temp:= `initSingleScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.initSingleScheduler:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521b50.  v0:= temp @kind object;
  #L521b52.  `@@io.reactivex.rxjava3.schedulers.Schedulers.a` @type ^`io.reactivex.rxjava3.core.Scheduler` := v0 @kind object;
  #L521b56.  v0:= new `io.reactivex.rxjava3.schedulers.Schedulers$b`;
  #L521b5a.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers$b;.<init>:()V` @kind direct;
  #L521b60.  call temp:= `initComputationScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.initComputationScheduler:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521b66.  v0:= temp @kind object;
  #L521b68.  `@@io.reactivex.rxjava3.schedulers.Schedulers.b` @type ^`io.reactivex.rxjava3.core.Scheduler` := v0 @kind object;
  #L521b6c.  v0:= new `io.reactivex.rxjava3.schedulers.Schedulers$c`;
  #L521b70.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers$c;.<init>:()V` @kind direct;
  #L521b76.  call temp:= `initIoScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.initIoScheduler:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521b7c.  v0:= temp @kind object;
  #L521b7e.  `@@io.reactivex.rxjava3.schedulers.Schedulers.c` @type ^`io.reactivex.rxjava3.core.Scheduler` := v0 @kind object;
  #L521b82.  call temp:= `instance`() @signature `Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler;.instance:()Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler;` @kind static;
  #L521b88.  v0:= temp @kind object;
  #L521b8a.  `@@io.reactivex.rxjava3.schedulers.Schedulers.d` @type ^`io.reactivex.rxjava3.core.Scheduler` := v0 @kind object;
  #L521b8e.  v0:= new `io.reactivex.rxjava3.schedulers.Schedulers$f`;
  #L521b92.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers$f;.<init>:()V` @kind direct;
  #L521b98.  call temp:= `initNewThreadScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.initNewThreadScheduler:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521b9e.  v0:= temp @kind object;
  #L521ba0.  `@@io.reactivex.rxjava3.schedulers.Schedulers.e` @type ^`io.reactivex.rxjava3.core.Scheduler` := v0 @kind object;
  #L521ba4.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.schedulers.Schedulers` v2 @kind this) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L521bb8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L521bbe.  v0:= new `java.lang.IllegalStateException`;
  #L521bc2.  v1:= "No instances!" @kind object;
  #L521bc6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L521bcc.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L521a4c.  v0:= `@@io.reactivex.rxjava3.schedulers.Schedulers.b` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L521a50.  call temp:= `onComputationScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onComputationScheduler:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521a56.  v0:= temp @kind object;
  #L521a58.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `from`(`java.util.concurrent.Executor` v2 @kind object) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.from:(Ljava/util/concurrent/Executor;)Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L521a6c.  v0:= new `io.reactivex.rxjava3.internal.schedulers.ExecutorScheduler`;
  #L521a70.  v1:= 0I;
  #L521a72.  call `<init>`(v0, v2, v1, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/ExecutorScheduler;.<init>:(Ljava/util/concurrent/Executor;ZZ)V` @kind direct;
  #L521a78.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `from`(`java.util.concurrent.Executor` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.from:(Ljava/util/concurrent/Executor;Z)Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L521a8c.  v0:= new `io.reactivex.rxjava3.internal.schedulers.ExecutorScheduler`;
  #L521a90.  v1:= 0I;
  #L521a92.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/ExecutorScheduler;.<init>:(Ljava/util/concurrent/Executor;ZZ)V` @kind direct;
  #L521a98.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `from`(`java.util.concurrent.Executor` v1 @kind object, `boolean` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.from:(Ljava/util/concurrent/Executor;ZZ)Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L521aac.  v0:= new `io.reactivex.rxjava3.internal.schedulers.ExecutorScheduler`;
  #L521ab0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/schedulers/ExecutorScheduler;.<init>:(Ljava/util/concurrent/Executor;ZZ)V` @kind direct;
  #L521ab6.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `io`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.io:()Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L521ac8.  v0:= `@@io.reactivex.rxjava3.schedulers.Schedulers.c` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L521acc.  call temp:= `onIoScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onIoScheduler:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521ad2.  v0:= temp @kind object;
  #L521ad4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `newThread`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.newThread:()Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L521ae8.  v0:= `@@io.reactivex.rxjava3.schedulers.Schedulers.e` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L521aec.  call temp:= `onNewThreadScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onNewThreadScheduler:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521af2.  v0:= temp @kind object;
  #L521af4.  return v0 @kind object;
}
procedure `void` `shutdown`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.shutdown:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L521be0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521be6.  v0:= temp @kind object;
  #L521be8.  call `shutdown`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.shutdown:()V` @kind virtual;
  #L521bee.  call temp:= `io`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.io:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521bf4.  v0:= temp @kind object;
  #L521bf6.  call `shutdown`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.shutdown:()V` @kind virtual;
  #L521bfc.  call temp:= `newThread`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.newThread:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521c02.  v0:= temp @kind object;
  #L521c04.  call `shutdown`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.shutdown:()V` @kind virtual;
  #L521c0a.  call temp:= `single`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.single:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521c10.  v0:= temp @kind object;
  #L521c12.  call `shutdown`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.shutdown:()V` @kind virtual;
  #L521c18.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521c1e.  v0:= temp @kind object;
  #L521c20.  call `shutdown`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.shutdown:()V` @kind virtual;
  #L521c26.  call `shutdown`() @signature `Lio/reactivex/rxjava3/internal/schedulers/SchedulerPoolFactory;.shutdown:()V` @kind static;
  #L521c2c.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `single`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.single:()Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L521b08.  v0:= `@@io.reactivex.rxjava3.schedulers.Schedulers.a` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L521b0c.  call temp:= `onSingleScheduler`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSingleScheduler:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521b12.  v0:= temp @kind object;
  #L521b14.  return v0 @kind object;
}
procedure `void` `start`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.start:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L521c40.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521c46.  v0:= temp @kind object;
  #L521c48.  call `start`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.start:()V` @kind virtual;
  #L521c4e.  call temp:= `io`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.io:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521c54.  v0:= temp @kind object;
  #L521c56.  call `start`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.start:()V` @kind virtual;
  #L521c5c.  call temp:= `newThread`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.newThread:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521c62.  v0:= temp @kind object;
  #L521c64.  call `start`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.start:()V` @kind virtual;
  #L521c6a.  call temp:= `single`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.single:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521c70.  v0:= temp @kind object;
  #L521c72.  call `start`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.start:()V` @kind virtual;
  #L521c78.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L521c7e.  v0:= temp @kind object;
  #L521c80.  call `start`(v0) @signature `Lio/reactivex/rxjava3/core/Scheduler;.start:()V` @kind virtual;
  #L521c86.  call `start`() @signature `Lio/reactivex/rxjava3/internal/schedulers/SchedulerPoolFactory;.start:()V` @kind static;
  #L521c8c.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Scheduler` `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L521b28.  v0:= `@@io.reactivex.rxjava3.schedulers.Schedulers.d` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L521b2c.  return v0 @kind object;
}
