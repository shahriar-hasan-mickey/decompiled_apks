record `io.reactivex.rxjava3.core.Flowable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.reactivestreams.Publisher` @kind interface {
}
global `int` `@@io.reactivex.rxjava3.core.Flowable.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/core/Flowable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L49d414.  v0:= "rx3.buffer-size" @kind object;
  #L49d418.  v1:= 128I;
  #L49d41c.  call temp:= `getInteger`(v0, v1) @signature `Ljava/lang/Integer;.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L49d422.  v0:= temp @kind object;
  #L49d424.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L49d42a.  v0:= temp;
  #L49d42c.  v1:= 1I;
  #L49d42e.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L49d434.  v0:= temp;
  #L49d436.  `@@io.reactivex.rxjava3.core.Flowable.a` @type ^`int` := v0;
  #L49d43a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49d44c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49d452.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `a`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Consumer` v8 @kind object, `io.reactivex.rxjava3.functions.Consumer` v9 @kind object, `io.reactivex.rxjava3.functions.Action` v10 @kind object, `io.reactivex.rxjava3.functions.Action` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L497f80.  v0:= "onNext is null" @kind object;
  #L497f84.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497f8a.  v0:= "onError is null" @kind object;
  #L497f8e.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497f94.  v0:= "onComplete is null" @kind object;
  #L497f98.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497f9e.  v0:= "onAfterTerminate is null" @kind object;
  #L497fa2.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497fa8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach`;
  #L497fac.  v1:= v0 @kind object;
  #L497fae.  v2:= v7 @kind object;
  #L497fb0.  v3:= v8 @kind object;
  #L497fb2.  v4:= v9 @kind object;
  #L497fb4.  v5:= v10 @kind object;
  #L497fb6.  v6:= v11 @kind object;
  #L497fb8.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnEach;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L497fbe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497fc4.  v8:= temp @kind object;
  #L497fc6.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.amb:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L496368.  v0:= "sources is null" @kind object;
  #L49636c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496372.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableAmb`;
  #L496376.  v1:= 0I;
  #L496378.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAmb;.<init>:([Lorg/reactivestreams/Publisher;Ljava/lang/Iterable;)V` @kind direct;
  #L49637e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496384.  v2:= temp @kind object;
  #L496386.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `ambArray`(`org.reactivestreams.Publisher`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.ambArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L496398.  v0:= "sources is null" @kind object;
  #L49639c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4963a2.  v0:= length @variable v2;
  #L4963a4.  if v0 != 0 then goto L4963b2;
  #L4963a8.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4963ae.  v2:= temp @kind object;
  #L4963b0.  return v2 @kind object;
  #L4963b2.  v1:= 1I;
  #L4963b4.  if v0 != v1 then goto L4963c8;
  #L4963b8.  v0:= 0I;
  #L4963ba.  v2:= v2[v0] @kind object;
  #L4963be.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4963c4.  v2:= temp @kind object;
  #L4963c6.  return v2 @kind object;
  #L4963c8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableAmb`;
  #L4963cc.  v1:= 0I;
  #L4963ce.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAmb;.<init>:([Lorg/reactivestreams/Publisher;Ljava/lang/Iterable;)V` @kind direct;
  #L4963d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4963da.  v2:= temp @kind object;
  #L4963dc.  return v2 @kind object;
}
procedure `int` `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L496194.  v0:= `@@io.reactivex.rxjava3.core.Flowable.a` @type ^`int`;
  #L496198.  return v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `c`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `org.reactivestreams.Publisher` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.c:(JLjava/util/concurrent/TimeUnit;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49b544.  v0:= "unit is null" @kind object;
  #L49b548.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b54e.  v0:= "scheduler is null" @kind object;
  #L49b552.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b558.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeoutTimed`;
  #L49b55c.  v1:= v0 @kind object;
  #L49b55e.  v2:= v8 @kind object;
  #L49b560.  v3:= v9 @kind wide;
  #L49b562.  v5:= v11 @kind object;
  #L49b564.  v6:= v13 @kind object;
  #L49b566.  v7:= v12 @kind object;
  #L49b568.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeoutTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L49b56e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b574.  v9:= temp @kind object;
  #L49b576.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`java.lang.Iterable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49681c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L496822.  v0:= temp;
  #L496824.  call temp:= `combineLatest`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49682a.  v1:= temp @kind object;
  #L49682c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L496840.  v0:= "sources is null" @kind object;
  #L496844.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49684a.  v0:= "combiner is null" @kind object;
  #L49684e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496854.  v0:= "bufferSize" @kind object;
  #L496858.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49685e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest`;
  #L496862.  v1:= 0I;
  #L496864.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;.<init>:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L49686a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496870.  v2:= temp @kind object;
  #L496872.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L496884.  v0:= "source1 is null" @kind object;
  #L496888.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49688e.  v0:= "source2 is null" @kind object;
  #L496892.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496898.  v0:= "combiner is null" @kind object;
  #L49689c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4968a2.  v0:= 2I;
  #L4968a4.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L4968a8.  v1:= 0I;
  #L4968aa.  v0[v1]:= v2 @kind object;
  #L4968ae.  v2:= 1I;
  #L4968b0.  v0[v2]:= v3 @kind object;
  #L4968b4.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4968ba.  v2:= temp @kind object;
  #L4968bc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4968c2.  v3:= temp;
  #L4968c4.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4968ca.  v2:= temp @kind object;
  #L4968cc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `io.reactivex.rxjava3.functions.Function3` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4968e0.  v0:= "source1 is null" @kind object;
  #L4968e4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4968ea.  v0:= "source2 is null" @kind object;
  #L4968ee.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4968f4.  v0:= "source3 is null" @kind object;
  #L4968f8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4968fe.  v0:= "combiner is null" @kind object;
  #L496902.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496908.  v0:= 3I;
  #L49690a.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L49690e.  v1:= 0I;
  #L496910.  v0[v1]:= v2 @kind object;
  #L496914.  v2:= 1I;
  #L496916.  v0[v2]:= v3 @kind object;
  #L49691a.  v2:= 2I;
  #L49691c.  v0[v2]:= v4 @kind object;
  #L496920.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L496926.  v2:= temp @kind object;
  #L496928.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49692e.  v3:= temp;
  #L496930.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496936.  v2:= temp @kind object;
  #L496938.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `io.reactivex.rxjava3.functions.Function4` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L49694c.  v0:= "source1 is null" @kind object;
  #L496950.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496956.  v0:= "source2 is null" @kind object;
  #L49695a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496960.  v0:= "source3 is null" @kind object;
  #L496964.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49696a.  v0:= "source4 is null" @kind object;
  #L49696e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496974.  v0:= "combiner is null" @kind object;
  #L496978.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49697e.  v0:= 4I;
  #L496980.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L496984.  v1:= 0I;
  #L496986.  v0[v1]:= v2 @kind object;
  #L49698a.  v2:= 1I;
  #L49698c.  v0[v2]:= v3 @kind object;
  #L496990.  v2:= 2I;
  #L496992.  v0[v2]:= v4 @kind object;
  #L496996.  v2:= 3I;
  #L496998.  v0[v2]:= v5 @kind object;
  #L49699c.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4969a2.  v2:= temp @kind object;
  #L4969a4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4969aa.  v3:= temp;
  #L4969ac.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4969b2.  v2:= temp @kind object;
  #L4969b4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `io.reactivex.rxjava3.functions.Function5` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4969c8.  v0:= "source1 is null" @kind object;
  #L4969cc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4969d2.  v0:= "source2 is null" @kind object;
  #L4969d6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4969dc.  v0:= "source3 is null" @kind object;
  #L4969e0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4969e6.  v0:= "source4 is null" @kind object;
  #L4969ea.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4969f0.  v0:= "source5 is null" @kind object;
  #L4969f4.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4969fa.  v0:= "combiner is null" @kind object;
  #L4969fe.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496a04.  v0:= 5I;
  #L496a06.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L496a0a.  v1:= 0I;
  #L496a0c.  v0[v1]:= v2 @kind object;
  #L496a10.  v2:= 1I;
  #L496a12.  v0[v2]:= v3 @kind object;
  #L496a16.  v2:= 2I;
  #L496a18.  v0[v2]:= v4 @kind object;
  #L496a1c.  v2:= 3I;
  #L496a1e.  v0[v2]:= v5 @kind object;
  #L496a22.  v2:= 4I;
  #L496a24.  v0[v2]:= v6 @kind object;
  #L496a28.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L496a2e.  v2:= temp @kind object;
  #L496a30.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L496a36.  v3:= temp;
  #L496a38.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496a3e.  v2:= temp @kind object;
  #L496a40.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `io.reactivex.rxjava3.functions.Function6` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L496a54.  v0:= "source1 is null" @kind object;
  #L496a58.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496a5e.  v0:= "source2 is null" @kind object;
  #L496a62.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496a68.  v0:= "source3 is null" @kind object;
  #L496a6c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496a72.  v0:= "source4 is null" @kind object;
  #L496a76.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496a7c.  v0:= "source5 is null" @kind object;
  #L496a80.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496a86.  v0:= "source6 is null" @kind object;
  #L496a8a.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496a90.  v0:= "combiner is null" @kind object;
  #L496a94.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496a9a.  v0:= 6I;
  #L496a9c.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L496aa0.  v1:= 0I;
  #L496aa2.  v0[v1]:= v2 @kind object;
  #L496aa6.  v2:= 1I;
  #L496aa8.  v0[v2]:= v3 @kind object;
  #L496aac.  v2:= 2I;
  #L496aae.  v0[v2]:= v4 @kind object;
  #L496ab2.  v2:= 3I;
  #L496ab4.  v0[v2]:= v5 @kind object;
  #L496ab8.  v2:= 4I;
  #L496aba.  v0[v2]:= v6 @kind object;
  #L496abe.  v2:= 5I;
  #L496ac0.  v0[v2]:= v7 @kind object;
  #L496ac4.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L496aca.  v2:= temp @kind object;
  #L496acc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L496ad2.  v3:= temp;
  #L496ad4.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496ada.  v2:= temp @kind object;
  #L496adc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `org.reactivestreams.Publisher` v8 @kind object, `io.reactivex.rxjava3.functions.Function7` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L496af0.  v0:= "source1 is null" @kind object;
  #L496af4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496afa.  v0:= "source2 is null" @kind object;
  #L496afe.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496b04.  v0:= "source3 is null" @kind object;
  #L496b08.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496b0e.  v0:= "source4 is null" @kind object;
  #L496b12.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496b18.  v0:= "source5 is null" @kind object;
  #L496b1c.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496b22.  v0:= "source6 is null" @kind object;
  #L496b26.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496b2c.  v0:= "source7 is null" @kind object;
  #L496b30.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496b36.  v0:= "combiner is null" @kind object;
  #L496b3a.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496b40.  v0:= 7I;
  #L496b42.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L496b46.  v1:= 0I;
  #L496b48.  v0[v1]:= v2 @kind object;
  #L496b4c.  v2:= 1I;
  #L496b4e.  v0[v2]:= v3 @kind object;
  #L496b52.  v2:= 2I;
  #L496b54.  v0[v2]:= v4 @kind object;
  #L496b58.  v2:= 3I;
  #L496b5a.  v0[v2]:= v5 @kind object;
  #L496b5e.  v2:= 4I;
  #L496b60.  v0[v2]:= v6 @kind object;
  #L496b64.  v2:= 5I;
  #L496b66.  v0[v2]:= v7 @kind object;
  #L496b6a.  v2:= 6I;
  #L496b6c.  v0[v2]:= v8 @kind object;
  #L496b70.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L496b76.  v2:= temp @kind object;
  #L496b78.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L496b7e.  v3:= temp;
  #L496b80.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496b86.  v2:= temp @kind object;
  #L496b88.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `org.reactivestreams.Publisher` v8 @kind object, `org.reactivestreams.Publisher` v9 @kind object, `io.reactivex.rxjava3.functions.Function8` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L496b9c.  v0:= "source1 is null" @kind object;
  #L496ba0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496ba6.  v0:= "source2 is null" @kind object;
  #L496baa.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496bb0.  v0:= "source3 is null" @kind object;
  #L496bb4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496bba.  v0:= "source4 is null" @kind object;
  #L496bbe.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496bc4.  v0:= "source5 is null" @kind object;
  #L496bc8.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496bce.  v0:= "source6 is null" @kind object;
  #L496bd2.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496bd8.  v0:= "source7 is null" @kind object;
  #L496bdc.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496be2.  v0:= "source8 is null" @kind object;
  #L496be6.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496bec.  v0:= "combiner is null" @kind object;
  #L496bf0.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496bf6.  v0:= 8I;
  #L496bfa.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L496bfe.  v1:= 0I;
  #L496c00.  v0[v1]:= v2 @kind object;
  #L496c04.  v2:= 1I;
  #L496c06.  v0[v2]:= v3 @kind object;
  #L496c0a.  v2:= 2I;
  #L496c0c.  v0[v2]:= v4 @kind object;
  #L496c10.  v2:= 3I;
  #L496c12.  v0[v2]:= v5 @kind object;
  #L496c16.  v2:= 4I;
  #L496c18.  v0[v2]:= v6 @kind object;
  #L496c1c.  v2:= 5I;
  #L496c1e.  v0[v2]:= v7 @kind object;
  #L496c22.  v2:= 6I;
  #L496c24.  v0[v2]:= v8 @kind object;
  #L496c28.  v2:= 7I;
  #L496c2a.  v0[v2]:= v9 @kind object;
  #L496c2e.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L496c34.  v2:= temp @kind object;
  #L496c36.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L496c3c.  v3:= temp;
  #L496c3e.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496c44.  v2:= temp @kind object;
  #L496c46.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatest`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `org.reactivestreams.Publisher` v8 @kind object, `org.reactivestreams.Publisher` v9 @kind object, `org.reactivestreams.Publisher` v10 @kind object, `io.reactivex.rxjava3.functions.Function9` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatest:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L496c58.  v0:= "source1 is null" @kind object;
  #L496c5c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496c62.  v0:= "source2 is null" @kind object;
  #L496c66.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496c6c.  v0:= "source3 is null" @kind object;
  #L496c70.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496c76.  v0:= "source4 is null" @kind object;
  #L496c7a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496c80.  v0:= "source5 is null" @kind object;
  #L496c84.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496c8a.  v0:= "source6 is null" @kind object;
  #L496c8e.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496c94.  v0:= "source7 is null" @kind object;
  #L496c98.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496c9e.  v0:= "source8 is null" @kind object;
  #L496ca2.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496ca8.  v0:= "source9 is null" @kind object;
  #L496cac.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496cb2.  v0:= "combiner is null" @kind object;
  #L496cb6.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496cbc.  v0:= 9I;
  #L496cc0.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L496cc4.  v1:= 0I;
  #L496cc6.  v0[v1]:= v2 @kind object;
  #L496cca.  v2:= 1I;
  #L496ccc.  v0[v2]:= v3 @kind object;
  #L496cd0.  v2:= 2I;
  #L496cd2.  v0[v2]:= v4 @kind object;
  #L496cd6.  v2:= 3I;
  #L496cd8.  v0[v2]:= v5 @kind object;
  #L496cdc.  v2:= 4I;
  #L496cde.  v0[v2]:= v6 @kind object;
  #L496ce2.  v2:= 5I;
  #L496ce4.  v0[v2]:= v7 @kind object;
  #L496ce8.  v2:= 6I;
  #L496cea.  v0[v2]:= v8 @kind object;
  #L496cee.  v2:= 7I;
  #L496cf0.  v0[v2]:= v9 @kind object;
  #L496cf4.  v2:= 8I;
  #L496cf8.  v0[v2]:= v10 @kind object;
  #L496cfc.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L496d02.  v2:= temp @kind object;
  #L496d04.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L496d0a.  v3:= temp;
  #L496d0c.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496d12.  v2:= temp @kind object;
  #L496d14.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatestArray`(`org.reactivestreams.Publisher`[] v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L496d28.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L496d2e.  v0:= temp;
  #L496d30.  call temp:= `combineLatestArray`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496d36.  v1:= temp @kind object;
  #L496d38.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatestArray`(`org.reactivestreams.Publisher`[] v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArray:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L496d4c.  v0:= "sources is null" @kind object;
  #L496d50.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496d56.  v0:= length @variable v2;
  #L496d58.  if v0 != 0 then goto L496d66;
  #L496d5c.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496d62.  v2:= temp @kind object;
  #L496d64.  return v2 @kind object;
  #L496d66.  v0:= "combiner is null" @kind object;
  #L496d6a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496d70.  v0:= "bufferSize" @kind object;
  #L496d74.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L496d7a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest`;
  #L496d7e.  v1:= 0I;
  #L496d80.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;.<init>:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L496d86.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496d8c.  v2:= temp @kind object;
  #L496d8e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatestArrayDelayError`(`org.reactivestreams.Publisher`[] v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArrayDelayError:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L496da0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L496da6.  v0:= temp;
  #L496da8.  call temp:= `combineLatestArrayDelayError`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArrayDelayError:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496dae.  v1:= temp @kind object;
  #L496db0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatestArrayDelayError`(`org.reactivestreams.Publisher`[] v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestArrayDelayError:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L496dc4.  v0:= "sources is null" @kind object;
  #L496dc8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496dce.  v0:= "combiner is null" @kind object;
  #L496dd2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496dd8.  v0:= "bufferSize" @kind object;
  #L496ddc.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L496de2.  v0:= length @variable v2;
  #L496de4.  if v0 != 0 then goto L496df2;
  #L496de8.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496dee.  v2:= temp @kind object;
  #L496df0.  return v2 @kind object;
  #L496df2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest`;
  #L496df6.  v1:= 1I;
  #L496df8.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;.<init>:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L496dfe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496e04.  v2:= temp @kind object;
  #L496e06.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatestDelayError`(`java.lang.Iterable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L496e18.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L496e1e.  v0:= temp;
  #L496e20.  call temp:= `combineLatestDelayError`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496e26.  v1:= temp @kind object;
  #L496e28.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `combineLatestDelayError`(`java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L496e3c.  v0:= "sources is null" @kind object;
  #L496e40.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496e46.  v0:= "combiner is null" @kind object;
  #L496e4a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496e50.  v0:= "bufferSize" @kind object;
  #L496e54.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L496e5a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCombineLatest`;
  #L496e5e.  v1:= 1I;
  #L496e60.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCombineLatest;.<init>:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L496e66.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496e6c.  v2:= temp @kind object;
  #L496e6e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L496eb4.  v0:= "sources is null" @kind object;
  #L496eb8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496ebe.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496ec4.  v3:= temp @kind object;
  #L496ec6.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L496ecc.  v0:= temp @kind object;
  #L496ece.  v1:= 0I;
  #L496ed0.  v2:= 2I;
  #L496ed2.  call temp:= `concatMapDelayError`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L496ed8.  v3:= temp @kind object;
  #L496eda.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L496eec.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L496ef2.  v0:= temp;
  #L496ef4.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496efa.  v1:= temp @kind object;
  #L496efc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L496f10.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496f16.  v1:= temp @kind object;
  #L496f18.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L496f1e.  v0:= temp @kind object;
  #L496f20.  call temp:= `concatMap`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L496f26.  v1:= temp @kind object;
  #L496f28.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L496f3c.  v0:= "source1 is null" @kind object;
  #L496f40.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496f46.  v0:= "source2 is null" @kind object;
  #L496f4a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496f50.  v0:= 2I;
  #L496f52.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L496f56.  v1:= 0I;
  #L496f58.  v0[v1]:= v2 @kind object;
  #L496f5c.  v2:= 1I;
  #L496f5e.  v0[v2]:= v3 @kind object;
  #L496f62.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496f68.  v2:= temp @kind object;
  #L496f6a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L496f7c.  v0:= "source1 is null" @kind object;
  #L496f80.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496f86.  v0:= "source2 is null" @kind object;
  #L496f8a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496f90.  v0:= "source3 is null" @kind object;
  #L496f94.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496f9a.  v0:= 3I;
  #L496f9c.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L496fa0.  v1:= 0I;
  #L496fa2.  v0[v1]:= v2 @kind object;
  #L496fa6.  v2:= 1I;
  #L496fa8.  v0[v2]:= v3 @kind object;
  #L496fac.  v2:= 2I;
  #L496fae.  v0[v2]:= v4 @kind object;
  #L496fb2.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496fb8.  v2:= temp @kind object;
  #L496fba.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L496fcc.  v0:= "source1 is null" @kind object;
  #L496fd0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496fd6.  v0:= "source2 is null" @kind object;
  #L496fda.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496fe0.  v0:= "source3 is null" @kind object;
  #L496fe4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496fea.  v0:= "source4 is null" @kind object;
  #L496fee.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496ff4.  v0:= 4I;
  #L496ff6.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L496ffa.  v1:= 0I;
  #L496ffc.  v0[v1]:= v2 @kind object;
  #L497000.  v2:= 1I;
  #L497002.  v0[v2]:= v3 @kind object;
  #L497006.  v2:= 2I;
  #L497008.  v0[v2]:= v4 @kind object;
  #L49700c.  v2:= 3I;
  #L49700e.  v0[v2]:= v5 @kind object;
  #L497012.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497018.  v2:= temp @kind object;
  #L49701a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArray`(`org.reactivestreams.Publisher`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49702c.  v0:= "sources is null" @kind object;
  #L497030.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497036.  v0:= length @variable v3;
  #L497038.  if v0 != 0 then goto L497046;
  #L49703c.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497042.  v3:= temp @kind object;
  #L497044.  return v3 @kind object;
  #L497046.  v0:= length @variable v3;
  #L497048.  v1:= 1I;
  #L49704a.  v2:= 0I;
  #L49704c.  if v0 != v1 then goto L49705e;
  #L497050.  v3:= v3[v2] @kind object;
  #L497054.  call temp:= `fromPublisher`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49705a.  v3:= temp @kind object;
  #L49705c.  return v3 @kind object;
  #L49705e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatArray`;
  #L497062.  call `<init>`(v0, v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatArray;.<init>:([Lorg/reactivestreams/Publisher;Z)V` @kind direct;
  #L497068.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49706e.  v3:= temp @kind object;
  #L497070.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayDelayError`(`org.reactivestreams.Publisher`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArrayDelayError:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L497084.  v0:= "sources is null" @kind object;
  #L497088.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49708e.  v0:= length @variable v2;
  #L497090.  if v0 != 0 then goto L49709e;
  #L497094.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49709a.  v2:= temp @kind object;
  #L49709c.  return v2 @kind object;
  #L49709e.  v0:= length @variable v2;
  #L4970a0.  v1:= 1I;
  #L4970a2.  if v0 != v1 then goto L4970b6;
  #L4970a6.  v0:= 0I;
  #L4970a8.  v2:= v2[v0] @kind object;
  #L4970ac.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4970b2.  v2:= temp @kind object;
  #L4970b4.  return v2 @kind object;
  #L4970b6.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatArray`;
  #L4970ba.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatArray;.<init>:([Lorg/reactivestreams/Publisher;Z)V` @kind direct;
  #L4970c0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4970c6.  v2:= temp @kind object;
  #L4970c8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayEager`(`int` v7 , `int` v8 , `org.reactivestreams.Publisher`[] v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArrayEager:(II[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4970dc.  v0:= "sources is null" @kind object;
  #L4970e0.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4970e6.  v0:= "maxConcurrency" @kind object;
  #L4970ea.  call temp:= `verifyPositive`(v7, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4970f0.  v0:= "prefetch" @kind object;
  #L4970f4.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4970fa.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEager`;
  #L4970fe.  v2:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromArray`;
  #L497102.  call `<init>`(v2, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromArray;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L497108.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49710e.  v3:= temp @kind object;
  #L497110.  v6:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L497114.  v1:= v0 @kind object;
  #L497116.  v4:= v7;
  #L497118.  v5:= v8;
  #L49711a.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L497120.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497126.  v7:= temp @kind object;
  #L497128.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayEager`(`org.reactivestreams.Publisher`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArrayEager:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L49713c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L497142.  v0:= temp;
  #L497144.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49714a.  v1:= temp;
  #L49714c.  call temp:= `concatArrayEager`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArrayEager:(II[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497152.  v2:= temp @kind object;
  #L497154.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayEagerDelayError`(`int` v2 , `int` v3 , `org.reactivestreams.Publisher`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArrayEagerDelayError:(II[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L497168.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49716e.  v4:= temp @kind object;
  #L497170.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L497176.  v0:= temp @kind object;
  #L497178.  v1:= 1I;
  #L49717a.  call temp:= `concatMapEagerDelayError`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497180.  v2:= temp @kind object;
  #L497182.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayEagerDelayError`(`org.reactivestreams.Publisher`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArrayEagerDelayError:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L497194.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49719a.  v0:= temp;
  #L49719c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4971a2.  v1:= temp;
  #L4971a4.  call temp:= `concatArrayEagerDelayError`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArrayEagerDelayError:(II[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4971aa.  v2:= temp @kind object;
  #L4971ac.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4971c0.  v0:= "sources is null" @kind object;
  #L4971c4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4971ca.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4971d0.  v1:= temp @kind object;
  #L4971d2.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4971d8.  v0:= temp @kind object;
  #L4971da.  call temp:= `concatMapDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4971e0.  v1:= temp @kind object;
  #L4971e2.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4971f4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4971fa.  v0:= temp;
  #L4971fc.  v1:= 1I;
  #L4971fe.  call temp:= `concatDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatDelayError:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497204.  v2:= temp @kind object;
  #L497206.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatDelayError:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L497218.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49721e.  v1:= temp @kind object;
  #L497220.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L497226.  v0:= temp @kind object;
  #L497228.  call temp:= `concatMapDelayError`(v1, v0, v3, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49722e.  v1:= temp @kind object;
  #L497230.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEager:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L497244.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49724a.  v0:= temp;
  #L49724c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L497252.  v1:= temp;
  #L497254.  call temp:= `concatEager`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEager:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49725a.  v2:= temp @kind object;
  #L49725c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`java.lang.Iterable` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEager:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L497270.  v0:= "sources is null" @kind object;
  #L497274.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49727a.  v0:= "maxConcurrency" @kind object;
  #L49727e.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L497284.  v0:= "prefetch" @kind object;
  #L497288.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49728e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEager`;
  #L497292.  v2:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable`;
  #L497296.  call `<init>`(v2, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L49729c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4972a2.  v3:= temp @kind object;
  #L4972a4.  v6:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4972a8.  v1:= v0 @kind object;
  #L4972aa.  v4:= v8;
  #L4972ac.  v5:= v9;
  #L4972ae.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4972b4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4972ba.  v7:= temp @kind object;
  #L4972bc.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEager:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4972d0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4972d6.  v0:= temp;
  #L4972d8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4972de.  v1:= temp;
  #L4972e0.  call temp:= `concatEager`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEager:(Lorg/reactivestreams/Publisher;II)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4972e6.  v2:= temp @kind object;
  #L4972e8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`org.reactivestreams.Publisher` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEager:(Lorg/reactivestreams/Publisher;II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4972fc.  v0:= "sources is null" @kind object;
  #L497300.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497306.  v0:= "maxConcurrency" @kind object;
  #L49730a.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L497310.  v0:= "prefetch" @kind object;
  #L497314.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49731a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEagerPublisher`;
  #L49731e.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L497324.  v3:= temp @kind object;
  #L497326.  v6:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L49732a.  v1:= v0 @kind object;
  #L49732c.  v2:= v7 @kind object;
  #L49732e.  v4:= v8;
  #L497330.  v5:= v9;
  #L497332.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEagerPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L497338.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49733e.  v7:= temp @kind object;
  #L497340.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEagerDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L497354.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49735a.  v0:= temp;
  #L49735c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L497362.  v1:= temp;
  #L497364.  call temp:= `concatEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEagerDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49736a.  v2:= temp @kind object;
  #L49736c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`java.lang.Iterable` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEagerDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L497380.  v0:= "sources is null" @kind object;
  #L497384.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49738a.  v0:= "maxConcurrency" @kind object;
  #L49738e.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L497394.  v0:= "prefetch" @kind object;
  #L497398.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49739e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEager`;
  #L4973a2.  v2:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable`;
  #L4973a6.  call `<init>`(v2, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L4973ac.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4973b2.  v3:= temp @kind object;
  #L4973b4.  v6:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4973b8.  v1:= v0 @kind object;
  #L4973ba.  v4:= v8;
  #L4973bc.  v5:= v9;
  #L4973be.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4973c4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4973ca.  v7:= temp @kind object;
  #L4973cc.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEagerDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4973e0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4973e6.  v0:= temp;
  #L4973e8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4973ee.  v1:= temp;
  #L4973f0.  call temp:= `concatEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEagerDelayError:(Lorg/reactivestreams/Publisher;II)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4973f6.  v2:= temp @kind object;
  #L4973f8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`org.reactivestreams.Publisher` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatEagerDelayError:(Lorg/reactivestreams/Publisher;II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49740c.  v0:= "sources is null" @kind object;
  #L497410.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497416.  v0:= "maxConcurrency" @kind object;
  #L49741a.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L497420.  v0:= "prefetch" @kind object;
  #L497424.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49742a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEagerPublisher`;
  #L49742e.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L497434.  v3:= temp @kind object;
  #L497436.  v6:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L49743a.  v1:= v0 @kind object;
  #L49743c.  v2:= v7 @kind object;
  #L49743e.  v4:= v8;
  #L497440.  v5:= v9;
  #L497442.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEagerPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L497448.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49744e.  v7:= temp @kind object;
  #L497450.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `create`(`io.reactivex.rxjava3.core.FlowableOnSubscribe` v1 @kind object, `io.reactivex.rxjava3.core.BackpressureStrategy` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.create:(Lio/reactivex/rxjava3/core/FlowableOnSubscribe;Lio/reactivex/rxjava3/core/BackpressureStrategy;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L497a4c.  v0:= "source is null" @kind object;
  #L497a50.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497a56.  v0:= "mode is null" @kind object;
  #L497a5a.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497a60.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate`;
  #L497a64.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCreate;.<init>:(Lio/reactivex/rxjava3/core/FlowableOnSubscribe;Lio/reactivex/rxjava3/core/BackpressureStrategy;)V` @kind direct;
  #L497a6a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497a70.  v1:= temp @kind object;
  #L497a72.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `d`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.d:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L49b588.  v0:= "itemTimeoutIndicator is null" @kind object;
  #L49b58c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b592.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeout`;
  #L49b596.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeout;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L49b59c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b5a2.  v2:= temp @kind object;
  #L49b5a4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `defer`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.defer:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L497b48.  v0:= "supplier is null" @kind object;
  #L497b4c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497b52.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDefer`;
  #L497b56.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDefer;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L497b5c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497b62.  v1:= temp @kind object;
  #L497b64.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498128.  v0:= `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableEmpty.INSTANCE` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L49812c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498132.  v0:= temp @kind object;
  #L498134.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `error`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498148.  v0:= "supplier is null" @kind object;
  #L49814c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498152.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableError`;
  #L498156.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableError;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L49815c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498162.  v1:= temp @kind object;
  #L498164.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.error:(Ljava/lang/Throwable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498178.  v0:= "throwable is null" @kind object;
  #L49817c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498182.  call temp:= `justSupplier`(v1) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justSupplier:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L498188.  v1:= temp @kind object;
  #L49818a.  call temp:= `error`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498190.  v1:= temp @kind object;
  #L498192.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromAction`(`io.reactivex.rxjava3.functions.Action` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromAction:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498688.  v0:= "action is null" @kind object;
  #L49868c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498692.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromAction`;
  #L498696.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromAction;.<init>:(Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L49869c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4986a2.  v1:= temp @kind object;
  #L4986a4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromArray`(`java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4986b8.  v0:= "items is null" @kind object;
  #L4986bc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4986c2.  v0:= length @variable v2;
  #L4986c4.  if v0 != 0 then goto L4986d2;
  #L4986c8.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4986ce.  v2:= temp @kind object;
  #L4986d0.  return v2 @kind object;
  #L4986d2.  v0:= length @variable v2;
  #L4986d4.  v1:= 1I;
  #L4986d6.  if v0 != v1 then goto L4986ea;
  #L4986da.  v0:= 0I;
  #L4986dc.  v2:= v2[v0] @kind object;
  #L4986e0.  call temp:= `just`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4986e6.  v2:= temp @kind object;
  #L4986e8.  return v2 @kind object;
  #L4986ea.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromArray`;
  #L4986ee.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromArray;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L4986f4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4986fa.  v2:= temp @kind object;
  #L4986fc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498710.  v0:= "callable is null" @kind object;
  #L498714.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49871a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromCallable`;
  #L49871e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L498724.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49872a.  v1:= temp @kind object;
  #L49872c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromCompletable`(`io.reactivex.rxjava3.core.CompletableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromCompletable:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498740.  v0:= "completableSource is null" @kind object;
  #L498744.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49874a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromCompletable`;
  #L49874e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromCompletable;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L498754.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49875a.  v1:= temp @kind object;
  #L49875c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromCompletionStage`(`java.util.concurrent.CompletionStage` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromCompletionStage:(Ljava/util/concurrent/CompletionStage;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498770.  v0:= "stage is null" @kind object;
  #L498774.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49877a.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFromCompletionStage`;
  #L49877e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromCompletionStage;.<init>:(Ljava/util/concurrent/CompletionStage;)V` @kind direct;
  #L498784.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49878a.  v1:= temp @kind object;
  #L49878c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromFuture`(`java.util.concurrent.Future` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4987a0.  v0:= "future is null" @kind object;
  #L4987a4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4987aa.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromFuture`;
  #L4987ae.  v1:= 0L;
  #L4987b2.  v3:= 0I;
  #L4987b4.  call `<init>`(v0, v4, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L4987ba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4987c0.  v4:= temp @kind object;
  #L4987c2.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4987d4.  v0:= "future is null" @kind object;
  #L4987d8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4987de.  v0:= "unit is null" @kind object;
  #L4987e2.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4987e8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromFuture`;
  #L4987ec.  call `<init>`(v0, v1, v2, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L4987f2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4987f8.  v1:= temp @kind object;
  #L4987fa.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromIterable`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49880c.  v0:= "source is null" @kind object;
  #L498810.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498816.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable`;
  #L49881a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L498820.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498826.  v1:= temp @kind object;
  #L498828.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromMaybe`(`io.reactivex.rxjava3.core.MaybeSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromMaybe:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49883c.  v0:= "maybe is null" @kind object;
  #L498840.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498846.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToFlowable`;
  #L49884a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToFlowable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L498850.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498856.  v1:= temp @kind object;
  #L498858.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromObservable`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.BackpressureStrategy` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromObservable:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/BackpressureStrategy;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49886c.  v0:= "source is null" @kind object;
  #L498870.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498876.  v0:= "strategy is null" @kind object;
  #L49887a.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498880.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromObservable`;
  #L498884.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromObservable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L49888a.  v1:= `@@io.reactivex.rxjava3.core.Flowable$a.a` @type ^`int`[] @kind object;
  #L49888e.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L498894.  v2:= temp;
  #L498896.  v1:= v1[v2];
  #L49889a.  v2:= 1I;
  #L49889c.  if v1 == v2 then goto L4988dc;
  #L4988a0.  v2:= 2I;
  #L4988a2.  if v1 == v2 then goto L4988d2;
  #L4988a6.  v2:= 3I;
  #L4988a8.  if v1 == v2 then goto L4988d0;
  #L4988ac.  v2:= 4I;
  #L4988ae.  if v1 == v2 then goto L4988bc;
  #L4988b2.  call temp:= `onBackpressureBuffer`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4988b8.  v1:= temp @kind object;
  #L4988ba.  return v1 @kind object;
  #L4988bc.  v1:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureError`;
  #L4988c0.  call `<init>`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureError;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4988c6.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4988cc.  v1:= temp @kind object;
  #L4988ce.  return v1 @kind object;
  #L4988d0.  return v0 @kind object;
  #L4988d2.  call temp:= `onBackpressureLatest`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureLatest:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4988d8.  v1:= temp @kind object;
  #L4988da.  return v1 @kind object;
  #L4988dc.  call temp:= `onBackpressureDrop`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureDrop:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4988e2.  v1:= temp @kind object;
  #L4988e4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromOptional`(`java.util.Optional` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromOptional:(Ljava/util/Optional;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4988f8.  v0:= "optional is null" @kind object;
  #L4988fc.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498902.  v0:= `@@io.reactivex.rxjava3.core.d.a` @type ^`io.reactivex.rxjava3.core.d` @kind object;
  #L498906.  call temp:= `map`(v1, v0) @signature `Ljava/util/Optional;.map:(Ljava/util/function/Function;)Ljava/util/Optional;` @kind virtual;
  #L49890c.  v1:= temp @kind object;
  #L49890e.  v0:= `@@io.reactivex.rxjava3.core.e.a` @type ^`io.reactivex.rxjava3.core.e` @kind object;
  #L498912.  call temp:= `orElseGet`(v1, v0) @signature `Ljava/util/Optional;.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;` @kind virtual;
  #L498918.  v1:= temp @kind object;
  #L49891a.  v1:= (`io.reactivex.rxjava3.core.Flowable`) v1 @kind object;
  #L49891e.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498930.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Flowable` @kind boolean;
  #L498934.  if v0 == 0 then goto L498946;
  #L498938.  v1:= (`io.reactivex.rxjava3.core.Flowable`) v1 @kind object;
  #L49893c.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498942.  v1:= temp @kind object;
  #L498944.  return v1 @kind object;
  #L498946.  v0:= "publisher is null" @kind object;
  #L49894a.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498950.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromPublisher`;
  #L498954.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L49895a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498960.  v1:= temp @kind object;
  #L498962.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromRunnable`(`java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromRunnable:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498974.  v0:= "run is null" @kind object;
  #L498978.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49897e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromRunnable`;
  #L498982.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromRunnable;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L498988.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49898e.  v1:= temp @kind object;
  #L498990.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromSingle`(`io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromSingle:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4989a4.  v0:= "source is null" @kind object;
  #L4989a8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4989ae.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleToFlowable`;
  #L4989b2.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToFlowable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4989b8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4989be.  v1:= temp @kind object;
  #L4989c0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromStream`(`java.util.stream.Stream` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromStream:(Ljava/util/stream/Stream;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4989d4.  v0:= "stream is null" @kind object;
  #L4989d8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4989de.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFromStream`;
  #L4989e2.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFromStream;.<init>:(Ljava/util/stream/Stream;)V` @kind direct;
  #L4989e8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4989ee.  v1:= temp @kind object;
  #L4989f0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `fromSupplier`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromSupplier:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498a04.  v0:= "supplier is null" @kind object;
  #L498a08.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498a0e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromSupplier`;
  #L498a12.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromSupplier;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L498a18.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498a1e.  v1:= temp @kind object;
  #L498a20.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `generate`(`io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L498a34.  v0:= "generator is null" @kind object;
  #L498a38.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498a3e.  call temp:= `nullSupplier`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.nullSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L498a44.  v0:= temp @kind object;
  #L498a46.  call temp:= `simpleGenerator`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.simpleGenerator:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/BiFunction;` @kind static;
  #L498a4c.  v2:= temp @kind object;
  #L498a4e.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L498a54.  v1:= temp @kind object;
  #L498a56.  call temp:= `generate`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498a5c.  v2:= temp @kind object;
  #L498a5e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498a70.  v0:= "generator is null" @kind object;
  #L498a74.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498a7a.  call temp:= `simpleBiGenerator`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.simpleBiGenerator:(Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/functions/BiFunction;` @kind static;
  #L498a80.  v2:= temp @kind object;
  #L498a82.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L498a88.  v0:= temp @kind object;
  #L498a8a.  call temp:= `generate`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498a90.  v1:= temp @kind object;
  #L498a92.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498aa4.  v0:= "generator is null" @kind object;
  #L498aa8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498aae.  call temp:= `simpleBiGenerator`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.simpleBiGenerator:(Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/functions/BiFunction;` @kind static;
  #L498ab4.  v2:= temp @kind object;
  #L498ab6.  call temp:= `generate`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498abc.  v1:= temp @kind object;
  #L498abe.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498ad0.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L498ad6.  v0:= temp @kind object;
  #L498ad8.  call temp:= `generate`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498ade.  v1:= temp @kind object;
  #L498ae0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498af4.  v0:= "initialState is null" @kind object;
  #L498af8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498afe.  v0:= "generator is null" @kind object;
  #L498b02.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498b08.  v0:= "disposeState is null" @kind object;
  #L498b0c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498b12.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGenerate`;
  #L498b16.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGenerate;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L498b1c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498b22.  v1:= temp @kind object;
  #L498b24.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `interval`(`long` v6 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.interval:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L498d4c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L498d52.  v5:= temp @kind object;
  #L498d54.  v0:= v6 @kind wide;
  #L498d56.  v2:= v8 @kind wide;
  #L498d58.  v4:= v10 @kind object;
  #L498d5a.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498d60.  v6:= temp @kind object;
  #L498d62.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `interval`(`long` v8 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L498d74.  v0:= "unit is null" @kind object;
  #L498d78.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498d7e.  v0:= "scheduler is null" @kind object;
  #L498d82.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498d88.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableInterval`;
  #L498d8c.  v1:= 0L;
  #L498d90.  call temp:= `max`(v1, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L498d96.  v8:= temp @kind wide;
  #L498d98.  call temp:= `max`(v1, v10) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L498d9e.  v4:= temp @kind wide;
  #L498da0.  v1:= v0 @kind object;
  #L498da2.  v2:= v8 @kind wide;
  #L498da4.  v6:= v12 @kind object;
  #L498da6.  v7:= v13 @kind object;
  #L498da8.  call `<init>`(v1, v2, v4, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInterval;.<init>:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L498dae.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498db4.  v8:= temp @kind object;
  #L498db6.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `interval`(`long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.interval:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L498d00.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L498d06.  v5:= temp @kind object;
  #L498d08.  v0:= v6 @kind wide;
  #L498d0a.  v2:= v6 @kind wide;
  #L498d0c.  v4:= v8 @kind object;
  #L498d0e.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498d14.  v6:= temp @kind object;
  #L498d16.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `interval`(`long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object, `io.reactivex.rxjava3.core.Scheduler` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.interval:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L498d28.  v0:= v6 @kind wide;
  #L498d2a.  v2:= v6 @kind wide;
  #L498d2c.  v4:= v8 @kind object;
  #L498d2e.  v5:= v9 @kind object;
  #L498d30.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498d36.  v6:= temp @kind object;
  #L498d38.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `intervalRange`(`long` v10 , `long` v12 , `long` v14 , `long` v16 , `java.util.concurrent.TimeUnit` v18 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L498dc8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L498dce.  v9:= temp @kind object;
  #L498dd0.  v0:= v10 @kind wide;
  #L498dd2.  v2:= v12 @kind wide;
  #L498dd4.  v4:= v14 @kind wide;
  #L498dd6.  v6:= v16 @kind wide;
  #L498dda.  v8:= v18 @kind object;
  #L498dde.  call temp:= `intervalRange`(v0, v2, v4, v6, v8, v9) @signature `Lio/reactivex/rxjava3/core/Flowable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498de4.  v0:= temp @kind object;
  #L498de6.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `intervalRange`(`long` v16 , `long` v18 , `long` v20 , `long` v22 , `java.util.concurrent.TimeUnit` v24 @kind object, `io.reactivex.rxjava3.core.Scheduler` v25 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L498df8.  v0:= v18 @kind wide;
  #L498dfc.  v2:= v20 @kind wide;
  #L498e00.  v9:= v24 @kind object;
  #L498e04.  v10:= v25 @kind object;
  #L498e08.  v4:= 0L;
  #L498e0c.  v6:= lcmp(v0, v4);
  #L498e10.  if v6 < 0 then goto L498ea6;
  #L498e14.  if v6 != 0 then goto L498e2a;
  #L498e18.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498e1e.  v0:= temp @kind object;
  #L498e20.  call temp:= `delay`(v0, v2, v9, v10) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L498e26.  v0:= temp @kind object;
  #L498e28.  return v0 @kind object;
  #L498e2a.  v6:= 1L;
  #L498e2e.  v0:= v0 - v6 @kind long;
  #L498e30.  v6:= v16 + v0 @kind long;
  #L498e34.  v0:= lcmp(v16, v4);
  #L498e38.  if v0 <= 0 then goto L498e56;
  #L498e3c.  v0:= lcmp(v6, v4);
  #L498e40.  if v0 < 0 then goto L498e46;
  #L498e44.  goto L498e56;
  #L498e46.  v0:= new `java.lang.IllegalArgumentException`;
  #L498e4a.  v1:= "Overflow! start + count is bigger than Long.MAX_VALUE" @kind object;
  #L498e4e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L498e54.  throw v0;
  #L498e56.  v0:= "unit is null" @kind object;
  #L498e5a.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498e60.  v0:= "scheduler is null" @kind object;
  #L498e64.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498e6a.  v11:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableIntervalRange`;
  #L498e6e.  call temp:= `max`(v4, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L498e74.  v12:= temp @kind wide;
  #L498e76.  v0:= v22 @kind wide;
  #L498e7a.  call temp:= `max`(v4, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L498e80.  v14:= temp @kind wide;
  #L498e82.  v0:= v11 @kind object;
  #L498e84.  v1:= v16 @kind wide;
  #L498e88.  v3:= v6 @kind wide;
  #L498e8a.  v5:= v12 @kind wide;
  #L498e8c.  v7:= v14 @kind wide;
  #L498e8e.  v9:= v24 @kind object;
  #L498e92.  v10:= v25 @kind object;
  #L498e96.  call `<init>`(v0, v1, v3, v5, v7, v9, v10) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableIntervalRange;.<init>:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L498e9c.  call temp:= `onAssembly`(v11) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498ea2.  v0:= temp @kind object;
  #L498ea4.  return v0 @kind object;
  #L498ea6.  v2:= new `java.lang.IllegalArgumentException`;
  #L498eaa.  v3:= new `java.lang.StringBuilder`;
  #L498eae.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L498eb4.  v4:= "count >= 0 required but it was " @kind object;
  #L498eb8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L498ebe.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L498ec4.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L498eca.  v0:= temp @kind object;
  #L498ecc.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L498ed2.  throw v2;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L498f3c.  v0:= "item is null" @kind object;
  #L498f40.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498f46.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableJust`;
  #L498f4a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableJust;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L498f50.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498f56.  v1:= temp @kind object;
  #L498f58.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L498f6c.  v0:= "item1 is null" @kind object;
  #L498f70.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498f76.  v0:= "item2 is null" @kind object;
  #L498f7a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498f80.  v0:= 2I;
  #L498f82.  v0:= new `java.lang.Object`[v0];
  #L498f86.  v1:= 0I;
  #L498f88.  v0[v1]:= v2 @kind object;
  #L498f8c.  v2:= 1I;
  #L498f8e.  v0[v2]:= v3 @kind object;
  #L498f92.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498f98.  v2:= temp @kind object;
  #L498f9a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L498fac.  v0:= "item1 is null" @kind object;
  #L498fb0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498fb6.  v0:= "item2 is null" @kind object;
  #L498fba.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498fc0.  v0:= "item3 is null" @kind object;
  #L498fc4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498fca.  v0:= 3I;
  #L498fcc.  v0:= new `java.lang.Object`[v0];
  #L498fd0.  v1:= 0I;
  #L498fd2.  v0[v1]:= v2 @kind object;
  #L498fd6.  v2:= 1I;
  #L498fd8.  v0[v2]:= v3 @kind object;
  #L498fdc.  v2:= 2I;
  #L498fde.  v0[v2]:= v4 @kind object;
  #L498fe2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498fe8.  v2:= temp @kind object;
  #L498fea.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L498ffc.  v0:= "item1 is null" @kind object;
  #L499000.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499006.  v0:= "item2 is null" @kind object;
  #L49900a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499010.  v0:= "item3 is null" @kind object;
  #L499014.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49901a.  v0:= "item4 is null" @kind object;
  #L49901e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499024.  v0:= 4I;
  #L499026.  v0:= new `java.lang.Object`[v0];
  #L49902a.  v1:= 0I;
  #L49902c.  v0[v1]:= v2 @kind object;
  #L499030.  v2:= 1I;
  #L499032.  v0[v2]:= v3 @kind object;
  #L499036.  v2:= 2I;
  #L499038.  v0[v2]:= v4 @kind object;
  #L49903c.  v2:= 3I;
  #L49903e.  v0[v2]:= v5 @kind object;
  #L499042.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499048.  v2:= temp @kind object;
  #L49904a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L49905c.  v0:= "item1 is null" @kind object;
  #L499060.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499066.  v0:= "item2 is null" @kind object;
  #L49906a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499070.  v0:= "item3 is null" @kind object;
  #L499074.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49907a.  v0:= "item4 is null" @kind object;
  #L49907e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499084.  v0:= "item5 is null" @kind object;
  #L499088.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49908e.  v0:= 5I;
  #L499090.  v0:= new `java.lang.Object`[v0];
  #L499094.  v1:= 0I;
  #L499096.  v0[v1]:= v2 @kind object;
  #L49909a.  v2:= 1I;
  #L49909c.  v0[v2]:= v3 @kind object;
  #L4990a0.  v2:= 2I;
  #L4990a2.  v0[v2]:= v4 @kind object;
  #L4990a6.  v2:= 3I;
  #L4990a8.  v0[v2]:= v5 @kind object;
  #L4990ac.  v2:= 4I;
  #L4990ae.  v0[v2]:= v6 @kind object;
  #L4990b2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4990b8.  v2:= temp @kind object;
  #L4990ba.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4990cc.  v0:= "item1 is null" @kind object;
  #L4990d0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4990d6.  v0:= "item2 is null" @kind object;
  #L4990da.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4990e0.  v0:= "item3 is null" @kind object;
  #L4990e4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4990ea.  v0:= "item4 is null" @kind object;
  #L4990ee.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4990f4.  v0:= "item5 is null" @kind object;
  #L4990f8.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4990fe.  v0:= "item6 is null" @kind object;
  #L499102.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499108.  v0:= 6I;
  #L49910a.  v0:= new `java.lang.Object`[v0];
  #L49910e.  v1:= 0I;
  #L499110.  v0[v1]:= v2 @kind object;
  #L499114.  v2:= 1I;
  #L499116.  v0[v2]:= v3 @kind object;
  #L49911a.  v2:= 2I;
  #L49911c.  v0[v2]:= v4 @kind object;
  #L499120.  v2:= 3I;
  #L499122.  v0[v2]:= v5 @kind object;
  #L499126.  v2:= 4I;
  #L499128.  v0[v2]:= v6 @kind object;
  #L49912c.  v2:= 5I;
  #L49912e.  v0[v2]:= v7 @kind object;
  #L499132.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499138.  v2:= temp @kind object;
  #L49913a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L49914c.  v0:= "item1 is null" @kind object;
  #L499150.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499156.  v0:= "item2 is null" @kind object;
  #L49915a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499160.  v0:= "item3 is null" @kind object;
  #L499164.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49916a.  v0:= "item4 is null" @kind object;
  #L49916e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499174.  v0:= "item5 is null" @kind object;
  #L499178.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49917e.  v0:= "item6 is null" @kind object;
  #L499182.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499188.  v0:= "item7 is null" @kind object;
  #L49918c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499192.  v0:= 7I;
  #L499194.  v0:= new `java.lang.Object`[v0];
  #L499198.  v1:= 0I;
  #L49919a.  v0[v1]:= v2 @kind object;
  #L49919e.  v2:= 1I;
  #L4991a0.  v0[v2]:= v3 @kind object;
  #L4991a4.  v2:= 2I;
  #L4991a6.  v0[v2]:= v4 @kind object;
  #L4991aa.  v2:= 3I;
  #L4991ac.  v0[v2]:= v5 @kind object;
  #L4991b0.  v2:= 4I;
  #L4991b2.  v0[v2]:= v6 @kind object;
  #L4991b6.  v2:= 5I;
  #L4991b8.  v0[v2]:= v7 @kind object;
  #L4991bc.  v2:= 6I;
  #L4991be.  v0[v2]:= v8 @kind object;
  #L4991c2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4991c8.  v2:= temp @kind object;
  #L4991ca.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4991dc.  v0:= "item1 is null" @kind object;
  #L4991e0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4991e6.  v0:= "item2 is null" @kind object;
  #L4991ea.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4991f0.  v0:= "item3 is null" @kind object;
  #L4991f4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4991fa.  v0:= "item4 is null" @kind object;
  #L4991fe.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499204.  v0:= "item5 is null" @kind object;
  #L499208.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49920e.  v0:= "item6 is null" @kind object;
  #L499212.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499218.  v0:= "item7 is null" @kind object;
  #L49921c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499222.  v0:= "item8 is null" @kind object;
  #L499226.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49922c.  v0:= 8I;
  #L499230.  v0:= new `java.lang.Object`[v0];
  #L499234.  v1:= 0I;
  #L499236.  v0[v1]:= v2 @kind object;
  #L49923a.  v2:= 1I;
  #L49923c.  v0[v2]:= v3 @kind object;
  #L499240.  v2:= 2I;
  #L499242.  v0[v2]:= v4 @kind object;
  #L499246.  v2:= 3I;
  #L499248.  v0[v2]:= v5 @kind object;
  #L49924c.  v2:= 4I;
  #L49924e.  v0[v2]:= v6 @kind object;
  #L499252.  v2:= 5I;
  #L499254.  v0[v2]:= v7 @kind object;
  #L499258.  v2:= 6I;
  #L49925a.  v0[v2]:= v8 @kind object;
  #L49925e.  v2:= 7I;
  #L499260.  v0[v2]:= v9 @kind object;
  #L499264.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49926a.  v2:= temp @kind object;
  #L49926c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L499280.  v0:= "item1 is null" @kind object;
  #L499284.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49928a.  v0:= "item2 is null" @kind object;
  #L49928e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499294.  v0:= "item3 is null" @kind object;
  #L499298.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49929e.  v0:= "item4 is null" @kind object;
  #L4992a2.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4992a8.  v0:= "item5 is null" @kind object;
  #L4992ac.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4992b2.  v0:= "item6 is null" @kind object;
  #L4992b6.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4992bc.  v0:= "item7 is null" @kind object;
  #L4992c0.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4992c6.  v0:= "item8 is null" @kind object;
  #L4992ca.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4992d0.  v0:= "item9 is null" @kind object;
  #L4992d4.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4992da.  v0:= 9I;
  #L4992de.  v0:= new `java.lang.Object`[v0];
  #L4992e2.  v1:= 0I;
  #L4992e4.  v0[v1]:= v2 @kind object;
  #L4992e8.  v2:= 1I;
  #L4992ea.  v0[v2]:= v3 @kind object;
  #L4992ee.  v2:= 2I;
  #L4992f0.  v0[v2]:= v4 @kind object;
  #L4992f4.  v2:= 3I;
  #L4992f6.  v0[v2]:= v5 @kind object;
  #L4992fa.  v2:= 4I;
  #L4992fc.  v0[v2]:= v6 @kind object;
  #L499300.  v2:= 5I;
  #L499302.  v0[v2]:= v7 @kind object;
  #L499306.  v2:= 6I;
  #L499308.  v0[v2]:= v8 @kind object;
  #L49930c.  v2:= 7I;
  #L49930e.  v0[v2]:= v9 @kind object;
  #L499312.  v2:= 8I;
  #L499316.  v0[v2]:= v10 @kind object;
  #L49931a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499320.  v2:= temp @kind object;
  #L499322.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `java.lang.Object` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L499334.  v0:= "item1 is null" @kind object;
  #L499338.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49933e.  v0:= "item2 is null" @kind object;
  #L499342.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499348.  v0:= "item3 is null" @kind object;
  #L49934c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499352.  v0:= "item4 is null" @kind object;
  #L499356.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49935c.  v0:= "item5 is null" @kind object;
  #L499360.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499366.  v0:= "item6 is null" @kind object;
  #L49936a.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499370.  v0:= "item7 is null" @kind object;
  #L499374.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49937a.  v0:= "item8 is null" @kind object;
  #L49937e.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499384.  v0:= "item9 is null" @kind object;
  #L499388.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49938e.  v0:= "item10 is null" @kind object;
  #L499392.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499398.  v0:= 10I;
  #L49939c.  v0:= new `java.lang.Object`[v0];
  #L4993a0.  v1:= 0I;
  #L4993a2.  v0[v1]:= v2 @kind object;
  #L4993a6.  v2:= 1I;
  #L4993a8.  v0[v2]:= v3 @kind object;
  #L4993ac.  v2:= 2I;
  #L4993ae.  v0[v2]:= v4 @kind object;
  #L4993b2.  v2:= 3I;
  #L4993b4.  v0[v2]:= v5 @kind object;
  #L4993b8.  v2:= 4I;
  #L4993ba.  v0[v2]:= v6 @kind object;
  #L4993be.  v2:= 5I;
  #L4993c0.  v0[v2]:= v7 @kind object;
  #L4993c4.  v2:= 6I;
  #L4993c6.  v0[v2]:= v8 @kind object;
  #L4993ca.  v2:= 7I;
  #L4993cc.  v0[v2]:= v9 @kind object;
  #L4993d0.  v2:= 8I;
  #L4993d4.  v0[v2]:= v10 @kind object;
  #L4993d8.  v2:= 9I;
  #L4993dc.  v0[v2]:= v11 @kind object;
  #L4993e0.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4993e6.  v2:= temp @kind object;
  #L4993e8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4994b0.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4994b6.  v1:= temp @kind object;
  #L4994b8.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4994be.  v0:= temp @kind object;
  #L4994c0.  call temp:= `flatMap`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4994c6.  v1:= temp @kind object;
  #L4994c8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`java.lang.Iterable` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Ljava/lang/Iterable;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4994dc.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4994e2.  v1:= temp @kind object;
  #L4994e4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4994ea.  v0:= temp @kind object;
  #L4994ec.  call temp:= `flatMap`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4994f2.  v1:= temp @kind object;
  #L4994f4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L499508.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49950e.  v2:= temp @kind object;
  #L499510.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L499516.  v0:= temp @kind object;
  #L499518.  v1:= 0I;
  #L49951a.  call temp:= `flatMap`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499520.  v2:= temp @kind object;
  #L499522.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L499534.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49953a.  v0:= temp;
  #L49953c.  call temp:= `merge`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499542.  v1:= temp @kind object;
  #L499544.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L499558.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49955e.  v1:= temp @kind object;
  #L499560.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L499566.  v0:= temp @kind object;
  #L499568.  call temp:= `flatMap`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49956e.  v1:= temp @kind object;
  #L499570.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L499584.  v0:= "source1 is null" @kind object;
  #L499588.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49958e.  v0:= "source2 is null" @kind object;
  #L499592.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499598.  v0:= 2I;
  #L49959a.  v1:= new `org.reactivestreams.Publisher`[v0];
  #L49959e.  v2:= 0I;
  #L4995a0.  v1[v2]:= v3 @kind object;
  #L4995a4.  v3:= 1I;
  #L4995a6.  v1[v3]:= v4 @kind object;
  #L4995aa.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4995b0.  v3:= temp @kind object;
  #L4995b2.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4995b8.  v4:= temp @kind object;
  #L4995ba.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4995c0.  v3:= temp @kind object;
  #L4995c2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4995d4.  v0:= "source1 is null" @kind object;
  #L4995d8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4995de.  v0:= "source2 is null" @kind object;
  #L4995e2.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4995e8.  v0:= "source3 is null" @kind object;
  #L4995ec.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4995f2.  v0:= 3I;
  #L4995f4.  v1:= new `org.reactivestreams.Publisher`[v0];
  #L4995f8.  v2:= 0I;
  #L4995fa.  v1[v2]:= v3 @kind object;
  #L4995fe.  v3:= 1I;
  #L499600.  v1[v3]:= v4 @kind object;
  #L499604.  v3:= 2I;
  #L499606.  v1[v3]:= v5 @kind object;
  #L49960a.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499610.  v3:= temp @kind object;
  #L499612.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L499618.  v4:= temp @kind object;
  #L49961a.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499620.  v3:= temp @kind object;
  #L499622.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L499634.  v0:= "source1 is null" @kind object;
  #L499638.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49963e.  v0:= "source2 is null" @kind object;
  #L499642.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499648.  v0:= "source3 is null" @kind object;
  #L49964c.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499652.  v0:= "source4 is null" @kind object;
  #L499656.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49965c.  v0:= 4I;
  #L49965e.  v1:= new `org.reactivestreams.Publisher`[v0];
  #L499662.  v2:= 0I;
  #L499664.  v1[v2]:= v3 @kind object;
  #L499668.  v3:= 1I;
  #L49966a.  v1[v3]:= v4 @kind object;
  #L49966e.  v3:= 2I;
  #L499670.  v1[v3]:= v5 @kind object;
  #L499674.  v3:= 3I;
  #L499676.  v1[v3]:= v6 @kind object;
  #L49967a.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499680.  v3:= temp @kind object;
  #L499682.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L499688.  v4:= temp @kind object;
  #L49968a.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499690.  v3:= temp @kind object;
  #L499692.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeArray`(`int` v2 , `int` v3 , `org.reactivestreams.Publisher`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeArray:(II[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4996a4.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4996aa.  v4:= temp @kind object;
  #L4996ac.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4996b2.  v0:= temp @kind object;
  #L4996b4.  v1:= 0I;
  #L4996b6.  call temp:= `flatMap`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4996bc.  v2:= temp @kind object;
  #L4996be.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeArray`(`org.reactivestreams.Publisher`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4996d0.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4996d6.  v0:= temp @kind object;
  #L4996d8.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4996de.  v1:= temp @kind object;
  #L4996e0.  v2:= length @variable v2;
  #L4996e2.  call temp:= `flatMap`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4996e8.  v2:= temp @kind object;
  #L4996ea.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeArrayDelayError`(`int` v2 , `int` v3 , `org.reactivestreams.Publisher`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeArrayDelayError:(II[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4996fc.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499702.  v4:= temp @kind object;
  #L499704.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49970a.  v0:= temp @kind object;
  #L49970c.  v1:= 1I;
  #L49970e.  call temp:= `flatMap`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499714.  v2:= temp @kind object;
  #L499716.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeArrayDelayError`(`org.reactivestreams.Publisher`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeArrayDelayError:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L499728.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49972e.  v0:= temp @kind object;
  #L499730.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L499736.  v1:= temp @kind object;
  #L499738.  v3:= length @variable v3;
  #L49973a.  v2:= 1I;
  #L49973c.  call temp:= `flatMap`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499742.  v3:= temp @kind object;
  #L499744.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L499758.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49975e.  v2:= temp @kind object;
  #L499760.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L499766.  v0:= temp @kind object;
  #L499768.  v1:= 1I;
  #L49976a.  call temp:= `flatMap`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499770.  v2:= temp @kind object;
  #L499772.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Ljava/lang/Iterable;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L499784.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49978a.  v2:= temp @kind object;
  #L49978c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L499792.  v0:= temp @kind object;
  #L499794.  v1:= 1I;
  #L499796.  call temp:= `flatMap`(v2, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49979c.  v2:= temp @kind object;
  #L49979e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4997b0.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4997b6.  v2:= temp @kind object;
  #L4997b8.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4997be.  v0:= temp @kind object;
  #L4997c0.  v1:= 1I;
  #L4997c2.  call temp:= `flatMap`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4997c8.  v2:= temp @kind object;
  #L4997ca.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4997dc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4997e2.  v0:= temp;
  #L4997e4.  call temp:= `mergeDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4997ea.  v1:= temp @kind object;
  #L4997ec.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L499800.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499806.  v2:= temp @kind object;
  #L499808.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49980e.  v0:= temp @kind object;
  #L499810.  v1:= 1I;
  #L499812.  call temp:= `flatMap`(v2, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499818.  v2:= temp @kind object;
  #L49981a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49982c.  v0:= "source1 is null" @kind object;
  #L499830.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499836.  v0:= "source2 is null" @kind object;
  #L49983a.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499840.  v0:= 2I;
  #L499842.  v1:= new `org.reactivestreams.Publisher`[v0];
  #L499846.  v2:= 0I;
  #L499848.  v1[v2]:= v3 @kind object;
  #L49984c.  v3:= 1I;
  #L49984e.  v1[v3]:= v4 @kind object;
  #L499852.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499858.  v4:= temp @kind object;
  #L49985a.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L499860.  v1:= temp @kind object;
  #L499862.  call temp:= `flatMap`(v4, v1, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499868.  v3:= temp @kind object;
  #L49986a.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49987c.  v0:= "source1 is null" @kind object;
  #L499880.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499886.  v0:= "source2 is null" @kind object;
  #L49988a.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499890.  v0:= "source3 is null" @kind object;
  #L499894.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49989a.  v0:= 3I;
  #L49989c.  v1:= new `org.reactivestreams.Publisher`[v0];
  #L4998a0.  v2:= 0I;
  #L4998a2.  v1[v2]:= v3 @kind object;
  #L4998a6.  v3:= 1I;
  #L4998a8.  v1[v3]:= v4 @kind object;
  #L4998ac.  v4:= 2I;
  #L4998ae.  v1[v4]:= v5 @kind object;
  #L4998b2.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4998b8.  v4:= temp @kind object;
  #L4998ba.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4998c0.  v5:= temp @kind object;
  #L4998c2.  call temp:= `flatMap`(v4, v5, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4998c8.  v3:= temp @kind object;
  #L4998ca.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeDelayError:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4998dc.  v0:= "source1 is null" @kind object;
  #L4998e0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4998e6.  v0:= "source2 is null" @kind object;
  #L4998ea.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4998f0.  v0:= "source3 is null" @kind object;
  #L4998f4.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4998fa.  v0:= "source4 is null" @kind object;
  #L4998fe.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499904.  v0:= 4I;
  #L499906.  v1:= new `org.reactivestreams.Publisher`[v0];
  #L49990a.  v2:= 0I;
  #L49990c.  v1[v2]:= v3 @kind object;
  #L499910.  v3:= 1I;
  #L499912.  v1[v3]:= v4 @kind object;
  #L499916.  v4:= 2I;
  #L499918.  v1[v4]:= v5 @kind object;
  #L49991c.  v4:= 3I;
  #L49991e.  v1[v4]:= v6 @kind object;
  #L499922.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499928.  v4:= temp @kind object;
  #L49992a.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L499930.  v5:= temp @kind object;
  #L499932.  call temp:= `flatMap`(v4, v5, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499938.  v3:= temp @kind object;
  #L49993a.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `never`() @signature `Lio/reactivex/rxjava3/core/Flowable;.never:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L499a00.  v0:= `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableNever.INSTANCE` @type ^`io.reactivex.rxjava3.core.Flowable` @kind object;
  #L499a04.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499a0a.  v0:= temp @kind object;
  #L499a0c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `range`(`int` v5 , `int` v6 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.range:(II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L499e40.  if v6 < 0 then goto L499ea6;
  #L499e44.  if v6 != 0 then goto L499e52;
  #L499e48.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499e4e.  v5:= temp @kind object;
  #L499e50.  return v5 @kind object;
  #L499e52.  v0:= 1I;
  #L499e54.  if v6 != v0 then goto L499e6a;
  #L499e58.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L499e5e.  v5:= temp @kind object;
  #L499e60.  call temp:= `just`(v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499e66.  v5:= temp @kind object;
  #L499e68.  return v5 @kind object;
  #L499e6a.  v0:= (`long`) v5 @kind i2l;
  #L499e6c.  v2:= v6 + -1;
  #L499e70.  v2:= (`long`) v2 @kind i2l;
  #L499e72.  v0:= v0 + v2 @kind long;
  #L499e74.  v2:= 2147483647L;
  #L499e7a.  v4:= lcmp(v0, v2);
  #L499e7e.  if v4 > 0 then goto L499e96;
  #L499e82.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRange`;
  #L499e86.  call `<init>`(v0, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRange;.<init>:(II)V` @kind direct;
  #L499e8c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499e92.  v5:= temp @kind object;
  #L499e94.  return v5 @kind object;
  #L499e96.  v5:= new `java.lang.IllegalArgumentException`;
  #L499e9a.  v6:= "Integer overflow" @kind object;
  #L499e9e.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L499ea4.  throw v5;
  #L499ea6.  v5:= new `java.lang.IllegalArgumentException`;
  #L499eaa.  v0:= new `java.lang.StringBuilder`;
  #L499eae.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L499eb4.  v1:= "count >= 0 required but it was " @kind object;
  #L499eb8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L499ebe.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L499ec4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L499eca.  v6:= temp @kind object;
  #L499ecc.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L499ed2.  throw v5;
}
procedure `io.reactivex.rxjava3.core.Flowable` `rangeLong`(`long` v5 , `long` v7 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.rangeLong:(JJ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L499ee4.  v0:= 0L;
  #L499ee8.  v2:= lcmp(v7, v0);
  #L499eec.  if v2 < 0 then goto L499f58;
  #L499ef0.  if v2 != 0 then goto L499efe;
  #L499ef4.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499efa.  v5:= temp @kind object;
  #L499efc.  return v5 @kind object;
  #L499efe.  v2:= 1L;
  #L499f02.  v4:= lcmp(v7, v2);
  #L499f06.  if v4 != 0 then goto L499f1c;
  #L499f0a.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L499f10.  v5:= temp @kind object;
  #L499f12.  call temp:= `just`(v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499f18.  v5:= temp @kind object;
  #L499f1a.  return v5 @kind object;
  #L499f1c.  v2:= v7 - v2 @kind long;
  #L499f20.  v2:= v2 + v5 @kind long;
  #L499f22.  v4:= lcmp(v5, v0);
  #L499f26.  if v4 <= 0 then goto L499f44;
  #L499f2a.  v4:= lcmp(v2, v0);
  #L499f2e.  if v4 < 0 then goto L499f34;
  #L499f32.  goto L499f44;
  #L499f34.  v5:= new `java.lang.IllegalArgumentException`;
  #L499f38.  v6:= "Overflow! start + count is bigger than Long.MAX_VALUE" @kind object;
  #L499f3c.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L499f42.  throw v5;
  #L499f44.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong`;
  #L499f48.  call `<init>`(v0, v5, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRangeLong;.<init>:(JJ)V` @kind direct;
  #L499f4e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499f54.  v5:= temp @kind object;
  #L499f56.  return v5 @kind object;
  #L499f58.  v5:= new `java.lang.IllegalArgumentException`;
  #L499f5c.  v6:= new `java.lang.StringBuilder`;
  #L499f60.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L499f66.  v0:= "count >= 0 required but it was " @kind object;
  #L499f6a.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L499f70.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L499f76.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L499f7c.  v6:= temp @kind object;
  #L499f7e.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L499f84.  throw v5;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.sequenceEqual:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L49c85c.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L49c862.  v0:= temp @kind object;
  #L49c864.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49c86a.  v1:= temp;
  #L49c86c.  call temp:= `sequenceEqual`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.sequenceEqual:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c872.  v2:= temp @kind object;
  #L49c874.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`org.reactivestreams.Publisher` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.sequenceEqual:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49c888.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L49c88e.  v0:= temp @kind object;
  #L49c890.  call temp:= `sequenceEqual`(v1, v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.sequenceEqual:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c896.  v1:= temp @kind object;
  #L49c898.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`org.reactivestreams.Publisher` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.sequenceEqual:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49c8ac.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49c8b2.  v0:= temp;
  #L49c8b4.  call temp:= `sequenceEqual`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.sequenceEqual:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c8ba.  v1:= temp @kind object;
  #L49c8bc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`org.reactivestreams.Publisher` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.sequenceEqual:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49c8d0.  v0:= "source1 is null" @kind object;
  #L49c8d4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c8da.  v0:= "source2 is null" @kind object;
  #L49c8de.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c8e4.  v0:= "isEqual is null" @kind object;
  #L49c8e8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c8ee.  v0:= "bufferSize" @kind object;
  #L49c8f2.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49c8f8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSequenceEqualSingle`;
  #L49c8fc.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSequenceEqualSingle;.<init>:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiPredicate;I)V` @kind direct;
  #L49c902.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c908.  v1:= temp @kind object;
  #L49c90a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchOnNext`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchOnNext:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49ad58.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ad5e.  v1:= temp @kind object;
  #L49ad60.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49ad66.  v0:= temp @kind object;
  #L49ad68.  call temp:= `switchMap`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49ad6e.  v1:= temp @kind object;
  #L49ad70.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchOnNext`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchOnNext:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49ad84.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ad8a.  v1:= temp @kind object;
  #L49ad8c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49ad92.  v0:= temp @kind object;
  #L49ad94.  call temp:= `switchMap`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49ad9a.  v1:= temp @kind object;
  #L49ad9c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchOnNextDelayError`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchOnNextDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49adb0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49adb6.  v0:= temp;
  #L49adb8.  call temp:= `switchOnNextDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchOnNextDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49adbe.  v1:= temp @kind object;
  #L49adc0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchOnNextDelayError`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchOnNextDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49add4.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49adda.  v1:= temp @kind object;
  #L49addc.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49ade2.  v0:= temp @kind object;
  #L49ade4.  call temp:= `switchMapDelayError`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapDelayError:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49adea.  v1:= temp @kind object;
  #L49adec.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49b5b8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b5be.  v0:= temp @kind object;
  #L49b5c0.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b5c6.  v1:= temp @kind object;
  #L49b5c8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timer`(`long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.rxjava3.core.Scheduler` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49b5dc.  v0:= "unit is null" @kind object;
  #L49b5e0.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b5e6.  v0:= "scheduler is null" @kind object;
  #L49b5ea.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b5f0.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimer`;
  #L49b5f4.  v1:= 0L;
  #L49b5f8.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L49b5fe.  v3:= temp @kind wide;
  #L49b600.  call `<init>`(v0, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L49b606.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b60c.  v3:= temp @kind object;
  #L49b60e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `unsafeCreate`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.unsafeCreate:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49b6c4.  v0:= "onSubscribe is null" @kind object;
  #L49b6c8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b6ce.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Flowable` @kind boolean;
  #L49b6d2.  if v0 != 0 then goto L49b6ea;
  #L49b6d6.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromPublisher`;
  #L49b6da.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L49b6e0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b6e6.  v1:= temp @kind object;
  #L49b6e8.  return v1 @kind object;
  #L49b6ea.  v1:= new `java.lang.IllegalArgumentException`;
  #L49b6ee.  v0:= "unsafeCreate(Flowable) should be upgraded" @kind object;
  #L49b6f2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49b6f8.  throw v1;
}
procedure `io.reactivex.rxjava3.core.Flowable` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49b73c.  v0:= 1I;
  #L49b73e.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b744.  v1:= temp @kind object;
  #L49b746.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49b758.  v0:= "resourceSupplier is null" @kind object;
  #L49b75c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b762.  v0:= "sourceSupplier is null" @kind object;
  #L49b766.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b76c.  v0:= "resourceCleanup is null" @kind object;
  #L49b770.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b776.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableUsing`;
  #L49b77a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableUsing;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)V` @kind direct;
  #L49b780.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b786.  v1:= temp @kind object;
  #L49b788.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`java.lang.Iterable` v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49bd24.  v0:= "zipper is null" @kind object;
  #L49bd28.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bd2e.  v0:= "sources is null" @kind object;
  #L49bd32.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bd38.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableZip`;
  #L49bd3c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49bd42.  v5:= temp;
  #L49bd44.  v2:= 0I;
  #L49bd46.  v6:= 0I;
  #L49bd48.  v1:= v0 @kind object;
  #L49bd4a.  v3:= v7 @kind object;
  #L49bd4c.  v4:= v8 @kind object;
  #L49bd4e.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableZip;.<init>:([Lorg/reactivestreams/Publisher;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L49bd54.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49bd5a.  v7:= temp @kind object;
  #L49bd5c.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`java.lang.Iterable` v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49bd70.  v0:= "zipper is null" @kind object;
  #L49bd74.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bd7a.  v0:= "sources is null" @kind object;
  #L49bd7e.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bd84.  v0:= "bufferSize" @kind object;
  #L49bd88.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49bd8e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableZip`;
  #L49bd92.  v2:= 0I;
  #L49bd94.  v1:= v0 @kind object;
  #L49bd96.  v3:= v7 @kind object;
  #L49bd98.  v4:= v8 @kind object;
  #L49bd9a.  v5:= v10;
  #L49bd9c.  v6:= v9;
  #L49bd9e.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableZip;.<init>:([Lorg/reactivestreams/Publisher;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L49bda4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49bdaa.  v7:= temp @kind object;
  #L49bdac.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49bdc0.  v0:= "source1 is null" @kind object;
  #L49bdc4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bdca.  v0:= "source2 is null" @kind object;
  #L49bdce.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bdd4.  v0:= "zipper is null" @kind object;
  #L49bdd8.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bdde.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49bde4.  v5:= temp @kind object;
  #L49bde6.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49bdec.  v0:= temp;
  #L49bdee.  v1:= 2I;
  #L49bdf0.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L49bdf4.  v2:= 0I;
  #L49bdf6.  v1[v2]:= v3 @kind object;
  #L49bdfa.  v3:= 1I;
  #L49bdfc.  v1[v3]:= v4 @kind object;
  #L49be00.  call temp:= `zipArray`(v5, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49be06.  v3:= temp @kind object;
  #L49be08.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49be1c.  v0:= "source1 is null" @kind object;
  #L49be20.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49be26.  v0:= "source2 is null" @kind object;
  #L49be2a.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49be30.  v0:= "zipper is null" @kind object;
  #L49be34.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49be3a.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49be40.  v5:= temp @kind object;
  #L49be42.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49be48.  v0:= temp;
  #L49be4a.  v1:= 2I;
  #L49be4c.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L49be50.  v2:= 0I;
  #L49be52.  v1[v2]:= v3 @kind object;
  #L49be56.  v3:= 1I;
  #L49be58.  v1[v3]:= v4 @kind object;
  #L49be5c.  call temp:= `zipArray`(v5, v6, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49be62.  v3:= temp @kind object;
  #L49be64.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v4 @kind object, `boolean` v5 , `int` v6 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L49be78.  v0:= "source1 is null" @kind object;
  #L49be7c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49be82.  v0:= "source2 is null" @kind object;
  #L49be86.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49be8c.  v0:= "zipper is null" @kind object;
  #L49be90.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49be96.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49be9c.  v4:= temp @kind object;
  #L49be9e.  v0:= 2I;
  #L49bea0.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L49bea4.  v1:= 0I;
  #L49bea6.  v0[v1]:= v2 @kind object;
  #L49beaa.  v2:= 1I;
  #L49beac.  v0[v2]:= v3 @kind object;
  #L49beb0.  call temp:= `zipArray`(v4, v5, v6, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49beb6.  v2:= temp @kind object;
  #L49beb8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `io.reactivex.rxjava3.functions.Function3` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49becc.  v0:= "source1 is null" @kind object;
  #L49bed0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bed6.  v0:= "source2 is null" @kind object;
  #L49beda.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bee0.  v0:= "source3 is null" @kind object;
  #L49bee4.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49beea.  v0:= "zipper is null" @kind object;
  #L49beee.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bef4.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49befa.  v6:= temp @kind object;
  #L49befc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49bf02.  v0:= temp;
  #L49bf04.  v1:= 3I;
  #L49bf06.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L49bf0a.  v2:= 0I;
  #L49bf0c.  v1[v2]:= v3 @kind object;
  #L49bf10.  v3:= 1I;
  #L49bf12.  v1[v3]:= v4 @kind object;
  #L49bf16.  v3:= 2I;
  #L49bf18.  v1[v3]:= v5 @kind object;
  #L49bf1c.  call temp:= `zipArray`(v6, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49bf22.  v3:= temp @kind object;
  #L49bf24.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `io.reactivex.rxjava3.functions.Function4` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49bf38.  v0:= "source1 is null" @kind object;
  #L49bf3c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bf42.  v0:= "source2 is null" @kind object;
  #L49bf46.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bf4c.  v0:= "source3 is null" @kind object;
  #L49bf50.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bf56.  v0:= "source4 is null" @kind object;
  #L49bf5a.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bf60.  v0:= "zipper is null" @kind object;
  #L49bf64.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bf6a.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49bf70.  v7:= temp @kind object;
  #L49bf72.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49bf78.  v0:= temp;
  #L49bf7a.  v1:= 4I;
  #L49bf7c.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L49bf80.  v2:= 0I;
  #L49bf82.  v1[v2]:= v3 @kind object;
  #L49bf86.  v3:= 1I;
  #L49bf88.  v1[v3]:= v4 @kind object;
  #L49bf8c.  v3:= 2I;
  #L49bf8e.  v1[v3]:= v5 @kind object;
  #L49bf92.  v3:= 3I;
  #L49bf94.  v1[v3]:= v6 @kind object;
  #L49bf98.  call temp:= `zipArray`(v7, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49bf9e.  v3:= temp @kind object;
  #L49bfa0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `io.reactivex.rxjava3.functions.Function5` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49bfb4.  v0:= "source1 is null" @kind object;
  #L49bfb8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bfbe.  v0:= "source2 is null" @kind object;
  #L49bfc2.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bfc8.  v0:= "source3 is null" @kind object;
  #L49bfcc.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bfd2.  v0:= "source4 is null" @kind object;
  #L49bfd6.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bfdc.  v0:= "source5 is null" @kind object;
  #L49bfe0.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bfe6.  v0:= "zipper is null" @kind object;
  #L49bfea.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bff0.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49bff6.  v8:= temp @kind object;
  #L49bff8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49bffe.  v0:= temp;
  #L49c000.  v1:= 5I;
  #L49c002.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L49c006.  v2:= 0I;
  #L49c008.  v1[v2]:= v3 @kind object;
  #L49c00c.  v3:= 1I;
  #L49c00e.  v1[v3]:= v4 @kind object;
  #L49c012.  v3:= 2I;
  #L49c014.  v1[v3]:= v5 @kind object;
  #L49c018.  v3:= 3I;
  #L49c01a.  v1[v3]:= v6 @kind object;
  #L49c01e.  v3:= 4I;
  #L49c020.  v1[v3]:= v7 @kind object;
  #L49c024.  call temp:= `zipArray`(v8, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49c02a.  v3:= temp @kind object;
  #L49c02c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `org.reactivestreams.Publisher` v8 @kind object, `io.reactivex.rxjava3.functions.Function6` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49c040.  v0:= "source1 is null" @kind object;
  #L49c044.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c04a.  v0:= "source2 is null" @kind object;
  #L49c04e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c054.  v0:= "source3 is null" @kind object;
  #L49c058.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c05e.  v0:= "source4 is null" @kind object;
  #L49c062.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c068.  v0:= "source5 is null" @kind object;
  #L49c06c.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c072.  v0:= "source6 is null" @kind object;
  #L49c076.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c07c.  v0:= "zipper is null" @kind object;
  #L49c080.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c086.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49c08c.  v9:= temp @kind object;
  #L49c08e.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49c094.  v0:= temp;
  #L49c096.  v1:= 6I;
  #L49c098.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L49c09c.  v2:= 0I;
  #L49c09e.  v1[v2]:= v3 @kind object;
  #L49c0a2.  v3:= 1I;
  #L49c0a4.  v1[v3]:= v4 @kind object;
  #L49c0a8.  v3:= 2I;
  #L49c0aa.  v1[v3]:= v5 @kind object;
  #L49c0ae.  v3:= 3I;
  #L49c0b0.  v1[v3]:= v6 @kind object;
  #L49c0b4.  v3:= 4I;
  #L49c0b6.  v1[v3]:= v7 @kind object;
  #L49c0ba.  v3:= 5I;
  #L49c0bc.  v1[v3]:= v8 @kind object;
  #L49c0c0.  call temp:= `zipArray`(v9, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49c0c6.  v3:= temp @kind object;
  #L49c0c8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `org.reactivestreams.Publisher` v8 @kind object, `org.reactivestreams.Publisher` v9 @kind object, `io.reactivex.rxjava3.functions.Function7` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49c0dc.  v0:= "source1 is null" @kind object;
  #L49c0e0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c0e6.  v0:= "source2 is null" @kind object;
  #L49c0ea.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c0f0.  v0:= "source3 is null" @kind object;
  #L49c0f4.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c0fa.  v0:= "source4 is null" @kind object;
  #L49c0fe.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c104.  v0:= "source5 is null" @kind object;
  #L49c108.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c10e.  v0:= "source6 is null" @kind object;
  #L49c112.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c118.  v0:= "source7 is null" @kind object;
  #L49c11c.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c122.  v0:= "zipper is null" @kind object;
  #L49c126.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c12c.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49c132.  v10:= temp @kind object;
  #L49c134.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49c13a.  v0:= temp;
  #L49c13c.  v1:= 7I;
  #L49c13e.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L49c142.  v2:= 0I;
  #L49c144.  v1[v2]:= v3 @kind object;
  #L49c148.  v3:= 1I;
  #L49c14a.  v1[v3]:= v4 @kind object;
  #L49c14e.  v3:= 2I;
  #L49c150.  v1[v3]:= v5 @kind object;
  #L49c154.  v3:= 3I;
  #L49c156.  v1[v3]:= v6 @kind object;
  #L49c15a.  v3:= 4I;
  #L49c15c.  v1[v3]:= v7 @kind object;
  #L49c160.  v3:= 5I;
  #L49c162.  v1[v3]:= v8 @kind object;
  #L49c166.  v3:= 6I;
  #L49c168.  v1[v3]:= v9 @kind object;
  #L49c16c.  call temp:= `zipArray`(v10, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49c172.  v3:= temp @kind object;
  #L49c174.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `org.reactivestreams.Publisher` v8 @kind object, `org.reactivestreams.Publisher` v9 @kind object, `org.reactivestreams.Publisher` v10 @kind object, `io.reactivex.rxjava3.functions.Function8` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49c188.  v0:= "source1 is null" @kind object;
  #L49c18c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c192.  v0:= "source2 is null" @kind object;
  #L49c196.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c19c.  v0:= "source3 is null" @kind object;
  #L49c1a0.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c1a6.  v0:= "source4 is null" @kind object;
  #L49c1aa.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c1b0.  v0:= "source5 is null" @kind object;
  #L49c1b4.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c1ba.  v0:= "source6 is null" @kind object;
  #L49c1be.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c1c4.  v0:= "source7 is null" @kind object;
  #L49c1c8.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c1ce.  v0:= "source8 is null" @kind object;
  #L49c1d2.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c1d8.  v0:= "zipper is null" @kind object;
  #L49c1dc.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c1e2.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49c1e8.  v11:= temp @kind object;
  #L49c1ea.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49c1f0.  v0:= temp;
  #L49c1f2.  v1:= 8I;
  #L49c1f6.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L49c1fa.  v2:= 0I;
  #L49c1fc.  v1[v2]:= v3 @kind object;
  #L49c200.  v3:= 1I;
  #L49c202.  v1[v3]:= v4 @kind object;
  #L49c206.  v3:= 2I;
  #L49c208.  v1[v3]:= v5 @kind object;
  #L49c20c.  v3:= 3I;
  #L49c20e.  v1[v3]:= v6 @kind object;
  #L49c212.  v3:= 4I;
  #L49c214.  v1[v3]:= v7 @kind object;
  #L49c218.  v3:= 5I;
  #L49c21a.  v1[v3]:= v8 @kind object;
  #L49c21e.  v3:= 6I;
  #L49c220.  v1[v3]:= v9 @kind object;
  #L49c224.  v3:= 7I;
  #L49c226.  v1[v3]:= v10 @kind object;
  #L49c22a.  call temp:= `zipArray`(v11, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49c230.  v3:= temp @kind object;
  #L49c232.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zip`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `org.reactivestreams.Publisher` v7 @kind object, `org.reactivestreams.Publisher` v8 @kind object, `org.reactivestreams.Publisher` v9 @kind object, `org.reactivestreams.Publisher` v10 @kind object, `org.reactivestreams.Publisher` v11 @kind object, `io.reactivex.rxjava3.functions.Function9` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49c244.  v0:= "source1 is null" @kind object;
  #L49c248.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c24e.  v0:= "source2 is null" @kind object;
  #L49c252.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c258.  v0:= "source3 is null" @kind object;
  #L49c25c.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c262.  v0:= "source4 is null" @kind object;
  #L49c266.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c26c.  v0:= "source5 is null" @kind object;
  #L49c270.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c276.  v0:= "source6 is null" @kind object;
  #L49c27a.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c280.  v0:= "source7 is null" @kind object;
  #L49c284.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c28a.  v0:= "source8 is null" @kind object;
  #L49c28e.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c294.  v0:= "source9 is null" @kind object;
  #L49c298.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c29e.  v0:= "zipper is null" @kind object;
  #L49c2a2.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c2a8.  call temp:= `toFunction`(v12) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49c2ae.  v12:= temp @kind object;
  #L49c2b0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49c2b6.  v0:= temp;
  #L49c2b8.  v1:= 9I;
  #L49c2bc.  v1:= new `org.reactivestreams.Publisher`[v1];
  #L49c2c0.  v2:= 0I;
  #L49c2c2.  v1[v2]:= v3 @kind object;
  #L49c2c6.  v3:= 1I;
  #L49c2c8.  v1[v3]:= v4 @kind object;
  #L49c2cc.  v3:= 2I;
  #L49c2ce.  v1[v3]:= v5 @kind object;
  #L49c2d2.  v3:= 3I;
  #L49c2d4.  v1[v3]:= v6 @kind object;
  #L49c2d8.  v3:= 4I;
  #L49c2da.  v1[v3]:= v7 @kind object;
  #L49c2de.  v3:= 5I;
  #L49c2e0.  v1[v3]:= v8 @kind object;
  #L49c2e4.  v3:= 6I;
  #L49c2e6.  v1[v3]:= v9 @kind object;
  #L49c2ea.  v3:= 7I;
  #L49c2ec.  v1[v3]:= v10 @kind object;
  #L49c2f0.  v3:= 8I;
  #L49c2f4.  v1[v3]:= v11 @kind object;
  #L49c2f8.  call temp:= `zipArray`(v12, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49c2fe.  v3:= temp @kind object;
  #L49c300.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zipArray`(`io.reactivex.rxjava3.functions.Function` v7 @kind object, `boolean` v8 , `int` v9 , `org.reactivestreams.Publisher`[] v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49c314.  v0:= "sources is null" @kind object;
  #L49c318.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c31e.  v0:= length @variable v10;
  #L49c320.  if v0 != 0 then goto L49c32e;
  #L49c324.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49c32a.  v7:= temp @kind object;
  #L49c32c.  return v7 @kind object;
  #L49c32e.  v0:= "zipper is null" @kind object;
  #L49c332.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c338.  v0:= "bufferSize" @kind object;
  #L49c33c.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49c342.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableZip`;
  #L49c346.  v3:= 0I;
  #L49c348.  v1:= v0 @kind object;
  #L49c34a.  v2:= v10 @kind object;
  #L49c34c.  v4:= v7 @kind object;
  #L49c34e.  v5:= v9;
  #L49c350.  v6:= v8;
  #L49c352.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableZip;.<init>:([Lorg/reactivestreams/Publisher;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L49c358.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49c35e.  v7:= temp @kind object;
  #L49c360.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `all`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.all:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c524.  v0:= "predicate is null" @kind object;
  #L49c528.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c52e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableAllSingle`;
  #L49c532.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAllSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L49c538.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c53e.  v2:= temp @kind object;
  #L49c540.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `ambWith`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.ambWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4963f0.  v0:= "other is null" @kind object;
  #L4963f4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4963fa.  v0:= 2I;
  #L4963fc.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L496400.  v1:= 0I;
  #L496402.  v0[v1]:= v2 @kind object;
  #L496406.  v1:= 1I;
  #L496408.  v0[v1]:= v3 @kind object;
  #L49640c.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.ambArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496412.  v3:= temp @kind object;
  #L496414.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `any`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.any:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c554.  v0:= "predicate is null" @kind object;
  #L49c558.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c55e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableAnySingle`;
  #L49c562.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableAnySingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L49c568.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c56e.  v2:= temp @kind object;
  #L49c570.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `b`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.b:(Lio/reactivex/rxjava3/functions/Function;IZ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag  {
    temp;
    v0;

  #L49abf0.  v0:= "mapper is null" @kind object;
  #L49abf4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49abfa.  v0:= "bufferSize" @kind object;
  #L49abfe.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49ac04.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L49ac08.  if v0 == 0 then goto L49ac32;
  #L49ac0c.  v3:= v1 @kind object;
  #L49ac0e.  v3:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v3 @kind object;
  #L49ac12.  call temp:= `get`(v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L49ac18.  v3:= temp @kind object;
  #L49ac1a.  if v3 != 0 then goto L49ac28;
  #L49ac1e.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ac24.  v2:= temp @kind object;
  #L49ac26.  return v2 @kind object;
  #L49ac28.  call temp:= `scalarXMap`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ac2e.  v2:= temp @kind object;
  #L49ac30.  return v2 @kind object;
  #L49ac32.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap`;
  #L49ac36.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L49ac3c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ac42.  v2:= temp @kind object;
  #L49ac44.  return v2 @kind object;
}
procedure `java.lang.Object` `blockingFirst`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingFirst:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d0f0.  v0:= new `io.reactivex.rxjava3.internal.subscribers.BlockingFirstSubscriber`;
  #L49d0f4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingFirstSubscriber;.<init>:()V` @kind direct;
  #L49d0fa.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L49d100.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingBaseSubscriber;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L49d106.  v0:= temp @kind object;
  #L49d108.  if v0 == 0 then goto L49d10e;
  #L49d10c.  return v0 @kind object;
  #L49d10e.  v0:= new `java.util.NoSuchElementException`;
  #L49d112.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L49d118.  throw v0;
}
procedure `java.lang.Object` `blockingFirst`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingFirst:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d12c.  v0:= "defaultItem is null" @kind object;
  #L49d130.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49d136.  v0:= new `io.reactivex.rxjava3.internal.subscribers.BlockingFirstSubscriber`;
  #L49d13a.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingFirstSubscriber;.<init>:()V` @kind direct;
  #L49d140.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L49d146.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingBaseSubscriber;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L49d14c.  v0:= temp @kind object;
  #L49d14e.  if v0 == 0 then goto L49d154;
  #L49d152.  v2:= v0 @kind object;
  #L49d154.  return v2 @kind object;
}
procedure `void` `blockingForEach`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingForEach:(Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d464.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49d46a.  v0:= temp;
  #L49d46c.  call `blockingForEach`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingForEach:(Lio/reactivex/rxjava3/functions/Consumer;I)V` @kind virtual;
  #L49d472.  return @kind void;
}
procedure `void` `blockingForEach`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingForEach:(Lio/reactivex/rxjava3/functions/Consumer;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d484.  v0:= "onNext is null" @kind object;
  #L49d488.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49d48e.  call temp:= `blockingIterable`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L49d494.  v3:= temp @kind object;
  #L49d496.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L49d49c.  v3:= temp @kind object;
  #L49d49e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L49d4a4.  v0:= temp;
  #L49d4a6.  if v0 == 0 then goto L49d4d6;
  #L49d4aa.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L49d4b0.  v0:= temp @kind object;
  #L49d4b2.  call `accept`(v2, v0) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L49d4b8.  goto L49d49e;
  #L49d4ba.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49d4bc.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L49d4c2.  v3:= (`io.reactivex.rxjava3.disposables.Disposable`) v3 @kind object;
  #L49d4c6.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L49d4cc.  call temp:= `wrapOrThrow`(v2) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L49d4d2.  v2:= temp @kind object;
  #L49d4d4.  throw v2;
  #L49d4d6.  return @kind void;
  catch `java.lang.Throwable` @[L49d4aa..L49d4b8] goto L49d4ba;
}
procedure `java.lang.Iterable` `blockingIterable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingIterable:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d044.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49d04a.  v0:= temp;
  #L49d04c.  call temp:= `blockingIterable`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L49d052.  v0:= temp @kind object;
  #L49d054.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingIterable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingIterable:(I)Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d068.  v0:= "bufferSize" @kind object;
  #L49d06c.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49d072.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableIterable`;
  #L49d076.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableIterable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;I)V` @kind direct;
  #L49d07c.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingLast`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingLast:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d168.  v0:= new `io.reactivex.rxjava3.internal.subscribers.BlockingLastSubscriber`;
  #L49d16c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingLastSubscriber;.<init>:()V` @kind direct;
  #L49d172.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L49d178.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingBaseSubscriber;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L49d17e.  v0:= temp @kind object;
  #L49d180.  if v0 == 0 then goto L49d186;
  #L49d184.  return v0 @kind object;
  #L49d186.  v0:= new `java.util.NoSuchElementException`;
  #L49d18a.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L49d190.  throw v0;
}
procedure `java.lang.Object` `blockingLast`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingLast:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d1a4.  v0:= "defaultItem is null" @kind object;
  #L49d1a8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49d1ae.  v0:= new `io.reactivex.rxjava3.internal.subscribers.BlockingLastSubscriber`;
  #L49d1b2.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingLastSubscriber;.<init>:()V` @kind direct;
  #L49d1b8.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L49d1be.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/BlockingBaseSubscriber;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L49d1c4.  v0:= temp @kind object;
  #L49d1c6.  if v0 == 0 then goto L49d1cc;
  #L49d1ca.  v2:= v0 @kind object;
  #L49d1cc.  return v2 @kind object;
}
procedure `java.lang.Iterable` `blockingLatest`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingLatest:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d090.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableLatest`;
  #L49d094.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableLatest;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L49d09a.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingMostRecent`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingMostRecent:(Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d0ac.  v0:= "initialItem is null" @kind object;
  #L49d0b0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49d0b6.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableMostRecent`;
  #L49d0ba.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableMostRecent;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Object;)V` @kind direct;
  #L49d0c0.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingNext`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingNext:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d0d4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableNext`;
  #L49d0d8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableNext;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L49d0de.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingSingle`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSingle:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d1e0.  call temp:= `singleOrError`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.singleOrError:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49d1e6.  v0:= temp @kind object;
  #L49d1e8.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L49d1ee.  v0:= temp @kind object;
  #L49d1f0.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingSingle`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSingle:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49d204.  call temp:= `single`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.single:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49d20a.  v1:= temp @kind object;
  #L49d20c.  call temp:= `blockingGet`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L49d212.  v1:= temp @kind object;
  #L49d214.  return v1 @kind object;
}
procedure `java.util.stream.Stream` `blockingStream`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingStream:()Ljava/util/stream/Stream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d384.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49d38a.  v0:= temp;
  #L49d38c.  call temp:= `blockingStream`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingStream:(I)Ljava/util/stream/Stream;` @kind virtual;
  #L49d392.  v0:= temp @kind object;
  #L49d394.  return v0 @kind object;
}
procedure `java.util.stream.Stream` `blockingStream`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingStream:(I)Ljava/util/stream/Stream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49d3a8.  call temp:= `blockingIterable`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L49d3ae.  v3:= temp @kind object;
  #L49d3b0.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L49d3b6.  v3:= temp @kind object;
  #L49d3b8.  v0:= 0I;
  #L49d3ba.  call temp:= `spliteratorUnknownSize`(v3, v0) @signature `Ljava/util/Spliterators;.spliteratorUnknownSize:(Ljava/util/Iterator;I)Ljava/util/Spliterator;` @kind static;
  #L49d3c0.  v1:= temp @kind object;
  #L49d3c2.  call temp:= `stream`(v1, v0) @signature `Ljava/util/stream/StreamSupport;.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;` @kind static;
  #L49d3c8.  v0:= temp @kind object;
  #L49d3ca.  v3:= (`io.reactivex.rxjava3.disposables.Disposable`) v3 @kind object;
  #L49d3ce.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L49d3d4.  v1:= new `io.reactivex.rxjava3.core.f`;
  #L49d3d8.  call `<init>`(v1, v3) @signature `Lio/reactivex/rxjava3/core/f;.<init>:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind direct;
  #L49d3de.  call temp:= `onClose`(v0, v1) @signature `Ljava/util/stream/Stream;.onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;` @kind interface;
  #L49d3e4.  v3:= temp @kind object;
  #L49d3e6.  v3:= (`java.util.stream.Stream`) v3 @kind object;
  #L49d3ea.  return v3 @kind object;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49d4f4.  call `subscribe`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;)V` @kind static;
  #L49d4fa.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49d50c.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L49d510.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L49d514.  call `subscribe`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind static;
  #L49d51a.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49d52c.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L49d530.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L49d534.  call `subscribe`(v2, v3, v0, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;I)V` @kind static;
  #L49d53a.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d54c.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L49d550.  call `subscribe`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind static;
  #L49d556.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d568.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L49d56c.  call `subscribe`(v1, v2, v3, v0, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;I)V` @kind static;
  #L49d572.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `io.reactivex.rxjava3.functions.Consumer` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49d584.  call `subscribe`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind static;
  #L49d58a.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `io.reactivex.rxjava3.functions.Consumer` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49d59c.  call `subscribe`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;I)V` @kind static;
  #L49d5a2.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.blockingSubscribe:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d5b4.  v0:= "subscriber is null" @kind object;
  #L49d5b8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49d5be.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L49d5c4.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L496428.  call temp:= `buffer`(v0, v1, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(II)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49642e.  v1:= temp @kind object;
  #L496430.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L496444.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49644a.  v0:= temp @kind object;
  #L49644c.  call temp:= `buffer`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(IILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L496452.  v2:= temp @kind object;
  #L496454.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 , `int` v3 , `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(IILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L496468.  v0:= "count" @kind object;
  #L49646c.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L496472.  v0:= "skip" @kind object;
  #L496476.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49647c.  v0:= "bufferSupplier is null" @kind object;
  #L496480.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496486.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer`;
  #L49648a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBuffer;.<init>:(Lio/reactivex/rxjava3/core/Flowable;IILio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L496490.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496496.  v2:= temp @kind object;
  #L496498.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `int` v1 , `io.reactivex.rxjava3.functions.Supplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(ILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4964ac.  call temp:= `buffer`(v0, v1, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(IILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4964b2.  v1:= temp @kind object;
  #L4964b4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4965f0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4965f6.  v6:= temp @kind object;
  #L4965f8.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4965fe.  v7:= temp @kind object;
  #L496600.  v0:= v8 @kind object;
  #L496602.  v1:= v9 @kind wide;
  #L496604.  v3:= v11 @kind wide;
  #L496606.  v5:= v13 @kind object;
  #L496608.  call temp:= `buffer`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49660e.  v9:= temp @kind object;
  #L496610.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.rxjava3.core.Scheduler` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L496624.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49662a.  v7:= temp @kind object;
  #L49662c.  v0:= v8 @kind object;
  #L49662e.  v1:= v9 @kind wide;
  #L496630.  v3:= v11 @kind wide;
  #L496632.  v5:= v13 @kind object;
  #L496634.  v6:= v14 @kind object;
  #L496636.  call temp:= `buffer`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49663c.  v9:= temp @kind object;
  #L49663e.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v12 @kind this, `long` v13 , `long` v15 , `java.util.concurrent.TimeUnit` v17 @kind object, `io.reactivex.rxjava3.core.Scheduler` v18 @kind object, `io.reactivex.rxjava3.functions.Supplier` v19 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L496650.  v0:= "unit is null" @kind object;
  #L496654.  v7:= v17 @kind object;
  #L496658.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49665e.  v0:= "scheduler is null" @kind object;
  #L496662.  v8:= v18 @kind object;
  #L496666.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49666c.  v0:= "bufferSupplier is null" @kind object;
  #L496670.  v9:= v19 @kind object;
  #L496674.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49667a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed`;
  #L49667e.  v10:= 2147483647I;
  #L496684.  v11:= 0I;
  #L496686.  v1:= v0 @kind object;
  #L496688.  v2:= v12 @kind object;
  #L49668a.  v3:= v13 @kind wide;
  #L49668c.  v5:= v15 @kind wide;
  #L49668e.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;IZ)V` @kind direct;
  #L496694.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49669a.  v0:= temp @kind object;
  #L49669c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4964c8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4964ce.  v4:= temp @kind object;
  #L4964d0.  v5:= 2147483647I;
  #L4964d6.  v0:= v6 @kind object;
  #L4964d8.  v1:= v7 @kind wide;
  #L4964da.  v3:= v9 @kind object;
  #L4964dc.  call temp:= `buffer`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4964e2.  v7:= temp @kind object;
  #L4964e4.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4964f8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4964fe.  v4:= temp @kind object;
  #L496500.  v0:= v6 @kind object;
  #L496502.  v1:= v7 @kind wide;
  #L496504.  v3:= v9 @kind object;
  #L496506.  v5:= v10;
  #L496508.  call temp:= `buffer`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49650e.  v7:= temp @kind object;
  #L496510.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L496524.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49652a.  v6:= temp @kind object;
  #L49652c.  v5:= 2147483647I;
  #L496532.  v7:= 0I;
  #L496534.  v0:= v8 @kind object;
  #L496536.  v1:= v9 @kind wide;
  #L496538.  v3:= v11 @kind object;
  #L49653a.  v4:= v12 @kind object;
  #L49653c.  call temp:= `buffer`(v0, v1, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ILio/reactivex/rxjava3/functions/Supplier;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L496542.  v9:= temp @kind object;
  #L496544.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `int` v13 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L496558.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49655e.  v6:= temp @kind object;
  #L496560.  v7:= 0I;
  #L496562.  v0:= v8 @kind object;
  #L496564.  v1:= v9 @kind wide;
  #L496566.  v3:= v11 @kind object;
  #L496568.  v4:= v12 @kind object;
  #L49656a.  v5:= v13;
  #L49656c.  call temp:= `buffer`(v0, v1, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ILio/reactivex/rxjava3/functions/Supplier;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L496572.  v9:= temp @kind object;
  #L496574.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v12 @kind this, `long` v13 , `java.util.concurrent.TimeUnit` v15 @kind object, `io.reactivex.rxjava3.core.Scheduler` v16 @kind object, `int` v17 , `io.reactivex.rxjava3.functions.Supplier` v18 @kind object, `boolean` v19 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ILio/reactivex/rxjava3/functions/Supplier;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L496588.  v0:= "unit is null" @kind object;
  #L49658c.  v7:= v15 @kind object;
  #L49658e.  call temp:= `requireNonNull`(v15, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496594.  v0:= "scheduler is null" @kind object;
  #L496598.  v8:= v16 @kind object;
  #L49659c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4965a2.  v0:= "bufferSupplier is null" @kind object;
  #L4965a6.  v9:= v18 @kind object;
  #L4965aa.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4965b0.  v0:= "count" @kind object;
  #L4965b4.  v10:= v17;
  #L4965b8.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4965be.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed`;
  #L4965c2.  v1:= v0 @kind object;
  #L4965c4.  v2:= v12 @kind object;
  #L4965c6.  v3:= v13 @kind wide;
  #L4965c8.  v5:= v13 @kind wide;
  #L4965ca.  v11:= v19;
  #L4965ce.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;IZ)V` @kind direct;
  #L4965d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4965da.  v0:= temp @kind object;
  #L4965dc.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4966b0.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4966b6.  v0:= temp @kind object;
  #L4966b8.  call temp:= `buffer`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4966be.  v2:= temp @kind object;
  #L4966c0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4966d4.  v0:= "initialCapacity" @kind object;
  #L4966d8.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4966de.  call temp:= `createArrayList`(v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createArrayList:(I)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4966e4.  v3:= temp @kind object;
  #L4966e6.  call temp:= `buffer`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4966ec.  v2:= temp @kind object;
  #L4966ee.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L496700.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L496706.  v0:= temp @kind object;
  #L496708.  call temp:= `buffer`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49670e.  v2:= temp @kind object;
  #L496710.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L496724.  v0:= "openingIndicator is null" @kind object;
  #L496728.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49672e.  v0:= "closingIndicator is null" @kind object;
  #L496732.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496738.  v0:= "bufferSupplier is null" @kind object;
  #L49673c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496742.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary`;
  #L496746.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferBoundary;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L49674c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496752.  v2:= temp @kind object;
  #L496754.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `buffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Supplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.buffer:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L496768.  v0:= "boundaryIndicator is null" @kind object;
  #L49676c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496772.  v0:= "bufferSupplier is null" @kind object;
  #L496776.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49677c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary`;
  #L496780.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferExactBoundary;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L496786.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49678c.  v2:= temp @kind object;
  #L49678e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `cache`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.cache:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4967a0.  v0:= 16I;
  #L4967a4.  call temp:= `cacheWithInitialCapacity`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.cacheWithInitialCapacity:(I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4967aa.  v0:= temp @kind object;
  #L4967ac.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `cacheWithInitialCapacity`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.cacheWithInitialCapacity:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4967c0.  v0:= "initialCapacity" @kind object;
  #L4967c4.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4967ca.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCache`;
  #L4967ce.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCache;.<init>:(Lio/reactivex/rxjava3/core/Flowable;I)V` @kind direct;
  #L4967d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4967da.  v2:= temp @kind object;
  #L4967dc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `cast`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4967f0.  v0:= "clazz is null" @kind object;
  #L4967f4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4967fa.  call temp:= `castFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.castFunction:(Ljava/lang/Class;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L496800.  v2:= temp @kind object;
  #L496802.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L496808.  v2:= temp @kind object;
  #L49680a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `collect`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c584.  v0:= "initialItemSupplier is null" @kind object;
  #L49c588.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c58e.  v0:= "collector is null" @kind object;
  #L49c592.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c598.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCollectSingle`;
  #L49c59c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCollectSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @kind direct;
  #L49c5a2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c5a8.  v2:= temp @kind object;
  #L49c5aa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `collect`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.stream.Collector` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.collect:(Ljava/util/stream/Collector;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c5bc.  v0:= "collector is null" @kind object;
  #L49c5c0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c5c6.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollectorSingle`;
  #L49c5ca.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableCollectWithCollectorSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/util/stream/Collector;)V` @kind direct;
  #L49c5d0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c5d6.  v2:= temp @kind object;
  #L49c5d8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `collectInto`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.collectInto:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c5ec.  v0:= "initialItem is null" @kind object;
  #L49c5f0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c5f6.  call temp:= `justSupplier`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justSupplier:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49c5fc.  v2:= temp @kind object;
  #L49c5fe.  call temp:= `collect`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49c604.  v2:= temp @kind object;
  #L49c606.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `compose`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.FlowableTransformer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.compose:(Lio/reactivex/rxjava3/core/FlowableTransformer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L496e80.  v0:= "composer is null" @kind object;
  #L496e84.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496e8a.  v2:= temp @kind object;
  #L496e8c.  v2:= (`io.reactivex.rxjava3.core.FlowableTransformer`) v2 @kind object;
  #L496e90.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/FlowableTransformer;.apply:(Lio/reactivex/rxjava3/core/Flowable;)Lorg/reactivestreams/Publisher;` @kind interface;
  #L496e96.  v2:= temp @kind object;
  #L496e98.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L496e9e.  v2:= temp @kind object;
  #L496ea0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497464.  v0:= 2I;
  #L497466.  call temp:= `concatMap`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49746c.  v2:= temp @kind object;
  #L49746e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMap`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L497480.  v0:= "mapper is null" @kind object;
  #L497484.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49748a.  v0:= "prefetch" @kind object;
  #L49748e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L497494.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L497498.  if v0 == 0 then goto L4974c2;
  #L49749c.  v4:= v2 @kind object;
  #L49749e.  v4:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v4 @kind object;
  #L4974a2.  call temp:= `get`(v4) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4974a8.  v4:= temp @kind object;
  #L4974aa.  if v4 != 0 then goto L4974b8;
  #L4974ae.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4974b4.  v3:= temp @kind object;
  #L4974b6.  return v3 @kind object;
  #L4974b8.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4974be.  v3:= temp @kind object;
  #L4974c0.  return v3 @kind object;
  #L4974c2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap`;
  #L4974c6.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4974ca.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4974d0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4974d6.  v3:= temp @kind object;
  #L4974d8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMap`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4974ec.  v0:= "mapper is null" @kind object;
  #L4974f0.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4974f6.  v0:= "prefetch" @kind object;
  #L4974fa.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L497500.  v0:= "scheduler is null" @kind object;
  #L497504.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49750a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler`;
  #L49750e.  v5:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L497512.  v1:= v0 @kind object;
  #L497514.  v2:= v7 @kind object;
  #L497516.  v3:= v8 @kind object;
  #L497518.  v4:= v9;
  #L49751a.  v6:= v10 @kind object;
  #L49751c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapScheduler;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L497522.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497528.  v8:= temp @kind object;
  #L49752a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4961ac.  v0:= 2I;
  #L4961ae.  call temp:= `concatMapCompletable`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L4961b4.  v2:= temp @kind object;
  #L4961b6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletable`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4961c8.  v0:= "mapper is null" @kind object;
  #L4961cc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4961d2.  v0:= "prefetch" @kind object;
  #L4961d6.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4961dc.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable`;
  #L4961e0.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4961e4.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4961ea.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4961f0.  v3:= temp @kind object;
  #L4961f2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletableDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L496204.  v0:= 1I;
  #L496206.  v1:= 2I;
  #L496208.  call temp:= `concatMapCompletableDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L49620e.  v3:= temp @kind object;
  #L496210.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletableDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L496224.  v0:= 2I;
  #L496226.  call temp:= `concatMapCompletableDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L49622c.  v2:= temp @kind object;
  #L49622e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletableDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L496240.  v0:= "mapper is null" @kind object;
  #L496244.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49624a.  v0:= "prefetch" @kind object;
  #L49624e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L496254.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapCompletable`;
  #L496258.  if v3 == 0 then goto L496262;
  #L49625c.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L496260.  goto L496266;
  #L496262.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L496266.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L49626c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L496272.  v2:= temp @kind object;
  #L496274.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49753c.  v0:= 1I;
  #L49753e.  v1:= 2I;
  #L497540.  call temp:= `concatMapDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497546.  v3:= temp @kind object;
  #L497548.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49755c.  v0:= "mapper is null" @kind object;
  #L497560.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497566.  v0:= "prefetch" @kind object;
  #L49756a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L497570.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L497574.  if v0 == 0 then goto L49759e;
  #L497578.  v3:= v1 @kind object;
  #L49757a.  v3:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v3 @kind object;
  #L49757e.  call temp:= `get`(v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L497584.  v3:= temp @kind object;
  #L497586.  if v3 != 0 then goto L497594;
  #L49758a.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497590.  v2:= temp @kind object;
  #L497592.  return v2 @kind object;
  #L497594.  call temp:= `scalarXMap`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49759a.  v2:= temp @kind object;
  #L49759c.  return v2 @kind object;
  #L49759e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap`;
  #L4975a2.  if v3 == 0 then goto L4975ac;
  #L4975a6.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4975aa.  goto L4975b0;
  #L4975ac.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4975b0.  call `<init>`(v0, v1, v2, v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4975b6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4975bc.  v2:= temp @kind object;
  #L4975be.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapDelayError`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZILio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4975d0.  v0:= "mapper is null" @kind object;
  #L4975d4.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4975da.  v0:= "prefetch" @kind object;
  #L4975de.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4975e4.  v0:= "scheduler is null" @kind object;
  #L4975e8.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4975ee.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler`;
  #L4975f2.  if v9 == 0 then goto L4975fc;
  #L4975f6.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4975fa.  goto L497600;
  #L4975fc.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L497600.  v5:= v9 @kind object;
  #L497602.  v1:= v0 @kind object;
  #L497604.  v2:= v7 @kind object;
  #L497606.  v3:= v8 @kind object;
  #L497608.  v4:= v10;
  #L49760a.  v6:= v11 @kind object;
  #L49760c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapScheduler;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L497612.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497618.  v8:= temp @kind object;
  #L49761a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapEager`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49762c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L497632.  v0:= temp;
  #L497634.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49763a.  v1:= temp;
  #L49763c.  call temp:= `concatMapEager`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;II)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497642.  v3:= temp @kind object;
  #L497644.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapEager`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;II)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L497658.  v0:= "mapper is null" @kind object;
  #L49765c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497662.  v0:= "maxConcurrency" @kind object;
  #L497666.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49766c.  v0:= "prefetch" @kind object;
  #L497670.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L497676.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEager`;
  #L49767a.  v6:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L49767e.  v1:= v0 @kind object;
  #L497680.  v2:= v7 @kind object;
  #L497682.  v3:= v8 @kind object;
  #L497684.  v4:= v9;
  #L497686.  v5:= v10;
  #L497688.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L49768e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497694.  v8:= temp @kind object;
  #L497696.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapEagerDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4976a8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4976ae.  v0:= temp;
  #L4976b0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4976b6.  v1:= temp;
  #L4976b8.  call temp:= `concatMapEagerDelayError`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4976be.  v3:= temp @kind object;
  #L4976c0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapEagerDelayError`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `int` v11 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4976d4.  v0:= "mapper is null" @kind object;
  #L4976d8.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4976de.  v0:= "maxConcurrency" @kind object;
  #L4976e2.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4976e8.  v0:= "prefetch" @kind object;
  #L4976ec.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4976f2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEager`;
  #L4976f6.  if v9 == 0 then goto L497700;
  #L4976fa.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4976fe.  goto L497704;
  #L497700.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L497704.  v6:= v9 @kind object;
  #L497706.  v1:= v0 @kind object;
  #L497708.  v2:= v7 @kind object;
  #L49770a.  v3:= v8 @kind object;
  #L49770c.  v4:= v10;
  #L49770e.  v5:= v11;
  #L497710.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L497716.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49771c.  v8:= temp @kind object;
  #L49771e.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapIterable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497730.  v0:= 2I;
  #L497732.  call temp:= `concatMapIterable`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapIterable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497738.  v2:= temp @kind object;
  #L49773a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapIterable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapIterable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49774c.  v0:= "mapper is null" @kind object;
  #L497750.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497756.  v0:= "prefetch" @kind object;
  #L49775a.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L497760.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable`;
  #L497764.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlattenIterable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L49776a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497770.  v2:= temp @kind object;
  #L497772.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapMaybe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497784.  v0:= 2I;
  #L497786.  call temp:= `concatMapMaybe`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49778c.  v2:= temp @kind object;
  #L49778e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapMaybe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4977a0.  v0:= "mapper is null" @kind object;
  #L4977a4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4977aa.  v0:= "prefetch" @kind object;
  #L4977ae.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4977b4.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapMaybe`;
  #L4977b8.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4977bc.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4977c2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4977c8.  v3:= temp @kind object;
  #L4977ca.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapMaybeDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4977dc.  v0:= 1I;
  #L4977de.  v1:= 2I;
  #L4977e0.  call temp:= `concatMapMaybeDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4977e6.  v3:= temp @kind object;
  #L4977e8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapMaybeDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4977fc.  v0:= 2I;
  #L4977fe.  call temp:= `concatMapMaybeDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497804.  v2:= temp @kind object;
  #L497806.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapMaybeDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497818.  v0:= "mapper is null" @kind object;
  #L49781c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497822.  v0:= "prefetch" @kind object;
  #L497826.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49782c.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapMaybe`;
  #L497830.  if v3 == 0 then goto L49783a;
  #L497834.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L497838.  goto L49783e;
  #L49783a.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L49783e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L497844.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49784a.  v2:= temp @kind object;
  #L49784c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapSingle`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497860.  v0:= 2I;
  #L497862.  call temp:= `concatMapSingle`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingle:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497868.  v2:= temp @kind object;
  #L49786a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapSingle`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingle:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49787c.  v0:= "mapper is null" @kind object;
  #L497880.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497886.  v0:= "prefetch" @kind object;
  #L49788a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L497890.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSingle`;
  #L497894.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L497898.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L49789e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4978a4.  v3:= temp @kind object;
  #L4978a6.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapSingleDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4978b8.  v0:= 1I;
  #L4978ba.  v1:= 2I;
  #L4978bc.  call temp:= `concatMapSingleDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4978c2.  v3:= temp @kind object;
  #L4978c4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapSingleDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4978d8.  v0:= 2I;
  #L4978da.  call temp:= `concatMapSingleDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4978e0.  v2:= temp @kind object;
  #L4978e2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapSingleDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4978f4.  v0:= "mapper is null" @kind object;
  #L4978f8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4978fe.  v0:= "prefetch" @kind object;
  #L497902.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L497908.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSingle`;
  #L49790c.  if v3 == 0 then goto L497916;
  #L497910.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L497914.  goto L49791a;
  #L497916.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L49791a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L497920.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497926.  v2:= temp @kind object;
  #L497928.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapStream`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapStream:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49793c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L497942.  v0:= temp;
  #L497944.  call temp:= `flatMapStream`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49794a.  v2:= temp @kind object;
  #L49794c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatMapStream`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapStream:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497960.  v0:= "mapper is null" @kind object;
  #L497964.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49796a.  v0:= "prefetch" @kind object;
  #L49796e.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L497974.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream`;
  #L497978.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFlatMapStream;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L49797e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497984.  v2:= temp @kind object;
  #L497986.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497998.  v0:= "other is null" @kind object;
  #L49799c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4979a2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithCompletable`;
  #L4979a6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L4979ac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4979b2.  v2:= temp @kind object;
  #L4979b4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4979c8.  v0:= "other is null" @kind object;
  #L4979cc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4979d2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithMaybe`;
  #L4979d6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L4979dc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4979e2.  v2:= temp @kind object;
  #L4979e4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4979f8.  v0:= "other is null" @kind object;
  #L4979fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497a02.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatWithSingle`;
  #L497a06.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatWithSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L497a0c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497a12.  v2:= temp @kind object;
  #L497a14.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497a28.  v0:= "other is null" @kind object;
  #L497a2c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497a32.  call temp:= `concat`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497a38.  v2:= temp @kind object;
  #L497a3a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `contains`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.contains:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c618.  v0:= "item is null" @kind object;
  #L49c61c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c622.  call temp:= `equalsWith`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.equalsWith:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L49c628.  v2:= temp @kind object;
  #L49c62a.  call temp:= `any`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.any:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49c630.  v2:= temp @kind object;
  #L49c632.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `count`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.count:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c644.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableCountSingle`;
  #L49c648.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableCountSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L49c64e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c654.  v0:= temp @kind object;
  #L49c656.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `debounce`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.debounce:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497ab4.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L497aba.  v0:= temp @kind object;
  #L497abc.  call temp:= `debounce`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497ac2.  v2:= temp @kind object;
  #L497ac4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `debounce`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L497ad8.  v0:= "unit is null" @kind object;
  #L497adc.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497ae2.  v0:= "scheduler is null" @kind object;
  #L497ae6.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497aec.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounceTimed`;
  #L497af0.  v1:= v0 @kind object;
  #L497af2.  v2:= v7 @kind object;
  #L497af4.  v3:= v8 @kind wide;
  #L497af6.  v5:= v10 @kind object;
  #L497af8.  v6:= v11 @kind object;
  #L497afa.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDebounceTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L497b00.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497b06.  v8:= temp @kind object;
  #L497b08.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `debounce`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.debounce:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497a84.  v0:= "debounceIndicator is null" @kind object;
  #L497a88.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497a8e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDebounce`;
  #L497a92.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDebounce;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L497a98.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497a9e.  v2:= temp @kind object;
  #L497aa0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `defaultIfEmpty`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.defaultIfEmpty:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497b1c.  v0:= "defaultItem is null" @kind object;
  #L497b20.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497b26.  call temp:= `just`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497b2c.  v2:= temp @kind object;
  #L497b2e.  call temp:= `switchIfEmpty`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchIfEmpty:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497b34.  v2:= temp @kind object;
  #L497b36.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delay`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L497ba4.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L497baa.  v4:= temp @kind object;
  #L497bac.  v5:= 0I;
  #L497bae.  v0:= v6 @kind object;
  #L497bb0.  v1:= v7 @kind wide;
  #L497bb2.  v3:= v9 @kind object;
  #L497bb4.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497bba.  v7:= temp @kind object;
  #L497bbc.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delay`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L497bfc.  v5:= 0I;
  #L497bfe.  v0:= v6 @kind object;
  #L497c00.  v1:= v7 @kind wide;
  #L497c02.  v3:= v9 @kind object;
  #L497c04.  v4:= v10 @kind object;
  #L497c06.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497c0c.  v7:= temp @kind object;
  #L497c0e.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delay`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L497c20.  v0:= "unit is null" @kind object;
  #L497c24.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497c2a.  v0:= "scheduler is null" @kind object;
  #L497c2e.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497c34.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelay`;
  #L497c38.  v1:= 0L;
  #L497c3c.  call temp:= `max`(v1, v9) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L497c42.  v3:= temp @kind wide;
  #L497c44.  v1:= v0 @kind object;
  #L497c46.  v2:= v8 @kind object;
  #L497c48.  v5:= v11 @kind object;
  #L497c4a.  v6:= v12 @kind object;
  #L497c4c.  v7:= v13;
  #L497c4e.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelay;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L497c54.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497c5a.  v9:= temp @kind object;
  #L497c5c.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delay`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L497bd0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L497bd6.  v4:= temp @kind object;
  #L497bd8.  v0:= v6 @kind object;
  #L497bda.  v1:= v7 @kind wide;
  #L497bdc.  v3:= v9 @kind object;
  #L497bde.  v5:= v10;
  #L497be0.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497be6.  v7:= temp @kind object;
  #L497be8.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497b78.  v0:= "itemDelayIndicator is null" @kind object;
  #L497b7c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497b82.  call temp:= `itemDelay`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.itemDelay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L497b88.  v2:= temp @kind object;
  #L497b8a.  call temp:= `flatMap`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497b90.  v2:= temp @kind object;
  #L497b92.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delay`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L497c70.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.delaySubscription:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497c76.  v1:= temp @kind object;
  #L497c78.  call temp:= `delay`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.delay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497c7e.  v1:= temp @kind object;
  #L497c80.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delaySubscription`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497c94.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L497c9a.  v0:= temp @kind object;
  #L497c9c.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497ca2.  v2:= temp @kind object;
  #L497ca4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delaySubscription`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L497cb8.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497cbe.  v1:= temp @kind object;
  #L497cc0.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.delaySubscription:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497cc6.  v1:= temp @kind object;
  #L497cc8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `delaySubscription`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.delaySubscription:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497cdc.  v0:= "subscriptionIndicator is null" @kind object;
  #L497ce0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497ce6.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther`;
  #L497cea.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther;.<init>:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L497cf0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497cf6.  v2:= temp @kind object;
  #L497cf8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `dematerialize`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.dematerialize:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497d0c.  v0:= "selector is null" @kind object;
  #L497d10.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497d16.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDematerialize`;
  #L497d1a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDematerialize;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L497d20.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497d26.  v2:= temp @kind object;
  #L497d28.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `distinct`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinct:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L497d3c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L497d42.  v0:= temp @kind object;
  #L497d44.  call temp:= `createHashSet`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createHashSet:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L497d4a.  v1:= temp @kind object;
  #L497d4c.  call temp:= `distinct`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinct:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497d52.  v0:= temp @kind object;
  #L497d54.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `distinct`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinct:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497d68.  call temp:= `createHashSet`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createHashSet:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L497d6e.  v0:= temp @kind object;
  #L497d70.  call temp:= `distinct`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinct:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497d76.  v2:= temp @kind object;
  #L497d78.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `distinct`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Supplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinct:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497d8c.  v0:= "keySelector is null" @kind object;
  #L497d90.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497d96.  v0:= "collectionSupplier is null" @kind object;
  #L497d9a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497da0.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinct`;
  #L497da4.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDistinct;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L497daa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497db0.  v2:= temp @kind object;
  #L497db2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `distinctUntilChanged`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinctUntilChanged:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497dc4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L497dca.  v0:= temp @kind object;
  #L497dcc.  call temp:= `distinctUntilChanged`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinctUntilChanged:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497dd2.  v0:= temp @kind object;
  #L497dd4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `distinctUntilChanged`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinctUntilChanged:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L497de8.  v0:= "comparer is null" @kind object;
  #L497dec.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497df2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged`;
  #L497df6.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L497dfc.  v1:= temp @kind object;
  #L497dfe.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDistinctUntilChanged;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L497e04.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497e0a.  v3:= temp @kind object;
  #L497e0c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `distinctUntilChanged`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.distinctUntilChanged:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L497e20.  v0:= "keySelector is null" @kind object;
  #L497e24.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497e2a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged`;
  #L497e2e.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L497e34.  v1:= temp @kind object;
  #L497e36.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDistinctUntilChanged;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L497e3c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497e42.  v3:= temp @kind object;
  #L497e44.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doAfterNext`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doAfterNext:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497e58.  v0:= "onAfterNext is null" @kind object;
  #L497e5c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497e62.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoAfterNext`;
  #L497e66.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoAfterNext;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L497e6c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497e72.  v2:= temp @kind object;
  #L497e74.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doAfterTerminate`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doAfterTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L497e88.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L497e8e.  v0:= temp @kind object;
  #L497e90.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L497e96.  v1:= temp @kind object;
  #L497e98.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L497e9c.  call temp:= `a`(v3, v0, v1, v2, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L497ea2.  v4:= temp @kind object;
  #L497ea4.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doFinally`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doFinally:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L497eb8.  v0:= "onFinally is null" @kind object;
  #L497ebc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497ec2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoFinally`;
  #L497ec6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoFinally;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L497ecc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L497ed2.  v2:= temp @kind object;
  #L497ed4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnCancel`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnCancel:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L497ee8.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L497eee.  v0:= temp @kind object;
  #L497ef0.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_LONG_CONSUMER` @type ^`io.reactivex.rxjava3.functions.LongConsumer` @kind object;
  #L497ef4.  call temp:= `doOnLifecycle`(v2, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L497efa.  v3:= temp @kind object;
  #L497efc.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnComplete`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnComplete:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L497f10.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L497f16.  v0:= temp @kind object;
  #L497f18.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L497f1e.  v1:= temp @kind object;
  #L497f20.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L497f24.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L497f2a.  v4:= temp @kind object;
  #L497f2c.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnEach`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnEach:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L497f40.  v0:= "onNotification is null" @kind object;
  #L497f44.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497f4a.  call temp:= `notificationOnNext`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.notificationOnNext:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L497f50.  v0:= temp @kind object;
  #L497f52.  call temp:= `notificationOnError`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.notificationOnError:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L497f58.  v1:= temp @kind object;
  #L497f5a.  call temp:= `notificationOnComplete`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.notificationOnComplete:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/Action;` @kind static;
  #L497f60.  v4:= temp @kind object;
  #L497f62.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L497f66.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L497f6c.  v4:= temp @kind object;
  #L497f6e.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnEach`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnEach:(Lorg/reactivestreams/Subscriber;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L497fd8.  v0:= "subscriber is null" @kind object;
  #L497fdc.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L497fe2.  call temp:= `subscriberOnNext`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.subscriberOnNext:(Lorg/reactivestreams/Subscriber;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L497fe8.  v0:= temp @kind object;
  #L497fea.  call temp:= `subscriberOnError`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.subscriberOnError:(Lorg/reactivestreams/Subscriber;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L497ff0.  v1:= temp @kind object;
  #L497ff2.  call temp:= `subscriberOnComplete`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.subscriberOnComplete:(Lorg/reactivestreams/Subscriber;)Lio/reactivex/rxjava3/functions/Action;` @kind static;
  #L497ff8.  v4:= temp @kind object;
  #L497ffa.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L497ffe.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L498004.  v4:= temp @kind object;
  #L498006.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnError:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L498018.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L49801e.  v0:= temp @kind object;
  #L498020.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L498024.  call temp:= `a`(v2, v0, v3, v1, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L49802a.  v3:= temp @kind object;
  #L49802c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnLifecycle`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.LongConsumer` v3 @kind object, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L498040.  v0:= "onSubscribe is null" @kind object;
  #L498044.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49804a.  v0:= "onRequest is null" @kind object;
  #L49804e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498054.  v0:= "onCancel is null" @kind object;
  #L498058.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49805e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle`;
  #L498062.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDoOnLifecycle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L498068.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49806e.  v2:= temp @kind object;
  #L498070.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnNext`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnNext:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L498084.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L49808a.  v0:= temp @kind object;
  #L49808c.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L498090.  call temp:= `a`(v2, v3, v0, v1, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L498096.  v3:= temp @kind object;
  #L498098.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnRequest`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.LongConsumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnRequest:(Lio/reactivex/rxjava3/functions/LongConsumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4980ac.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4980b2.  v0:= temp @kind object;
  #L4980b4.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4980b8.  call temp:= `doOnLifecycle`(v2, v0, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4980be.  v3:= temp @kind object;
  #L4980c0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnSubscribe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4980d4.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_LONG_CONSUMER` @type ^`io.reactivex.rxjava3.functions.LongConsumer` @kind object;
  #L4980d8.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4980dc.  call temp:= `doOnLifecycle`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/LongConsumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4980e2.  v3:= temp @kind object;
  #L4980e4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `doOnTerminate`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.doOnTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4980f8.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4980fe.  v0:= temp @kind object;
  #L498100.  call temp:= `actionConsumer`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.actionConsumer:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L498106.  v1:= temp @kind object;
  #L498108.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L49810c.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L498112.  v4:= temp @kind object;
  #L498114.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `elementAt`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.elementAt:(J)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L49c408.  v0:= 0L;
  #L49c40c.  v2:= lcmp(v4, v0);
  #L49c410.  if v2 < 0 then goto L49c428;
  #L49c414.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtMaybe`;
  #L49c418.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;J)V` @kind direct;
  #L49c41e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L49c424.  v4:= temp @kind object;
  #L49c426.  return v4 @kind object;
  #L49c428.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L49c42c.  v1:= new `java.lang.StringBuilder`;
  #L49c430.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49c436.  v2:= "index >= 0 required but it was " @kind object;
  #L49c43a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49c440.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L49c446.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49c44c.  v4:= temp @kind object;
  #L49c44e.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49c454.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Single` `elementAt`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `long` v4 , `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.elementAt:(JLjava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L49c668.  v0:= 0L;
  #L49c66c.  v2:= lcmp(v4, v0);
  #L49c670.  if v2 < 0 then goto L49c692;
  #L49c674.  v0:= "defaultItem is null" @kind object;
  #L49c678.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c67e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle`;
  #L49c682.  call `<init>`(v0, v3, v4, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/lang/Object;)V` @kind direct;
  #L49c688.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c68e.  v4:= temp @kind object;
  #L49c690.  return v4 @kind object;
  #L49c692.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L49c696.  v0:= new `java.lang.StringBuilder`;
  #L49c69a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49c6a0.  v1:= "index >= 0 required but it was " @kind object;
  #L49c6a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49c6aa.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L49c6b0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49c6b6.  v4:= temp @kind object;
  #L49c6b8.  call `<init>`(v6, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49c6be.  throw v6;
}
procedure `io.reactivex.rxjava3.core.Single` `elementAtOrError`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.elementAtOrError:(J)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L49c6d0.  v0:= 0L;
  #L49c6d4.  v2:= lcmp(v4, v0);
  #L49c6d8.  if v2 < 0 then goto L49c6f2;
  #L49c6dc.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableElementAtSingle`;
  #L49c6e0.  v1:= 0I;
  #L49c6e2.  call `<init>`(v0, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableElementAtSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/lang/Object;)V` @kind direct;
  #L49c6e8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c6ee.  v4:= temp @kind object;
  #L49c6f0.  return v4 @kind object;
  #L49c6f2.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L49c6f6.  v1:= new `java.lang.StringBuilder`;
  #L49c6fa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49c700.  v2:= "index >= 0 required but it was " @kind object;
  #L49c704.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49c70a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L49c710.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49c716.  v4:= temp @kind object;
  #L49c718.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49c71e.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `filter`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4981a4.  v0:= "predicate is null" @kind object;
  #L4981a8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4981ae.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFilter`;
  #L4981b2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFilter;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4981b8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4981be.  v2:= temp @kind object;
  #L4981c0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `first`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.first:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49c730.  v0:= 0L;
  #L49c734.  call temp:= `elementAt`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.elementAt:(JLjava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49c73a.  v3:= temp @kind object;
  #L49c73c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `firstElement`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.firstElement:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49c468.  v0:= 0L;
  #L49c46c.  call temp:= `elementAt`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.elementAt:(J)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L49c472.  v0:= temp @kind object;
  #L49c474.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `firstOrError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.firstOrError:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49c750.  v0:= 0L;
  #L49c754.  call temp:= `elementAtOrError`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.elementAtOrError:(J)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49c75a.  v0:= temp @kind object;
  #L49c75c.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `firstOrErrorStage`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.firstOrErrorStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L49d254.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFirstStageSubscriber`;
  #L49d258.  v1:= 0I;
  #L49d25a.  v2:= 0I;
  #L49d25c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFirstStageSubscriber;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L49d262.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind virtual;
  #L49d268.  v0:= temp @kind object;
  #L49d26a.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L49d26e.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `firstStage`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.firstStage:(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49d280.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFirstStageSubscriber`;
  #L49d284.  v1:= 1I;
  #L49d286.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFirstStageSubscriber;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L49d28c.  call temp:= `subscribeWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind virtual;
  #L49d292.  v3:= temp @kind object;
  #L49d294.  v3:= (`java.util.concurrent.CompletionStage`) v3 @kind object;
  #L49d298.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4981d4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4981da.  v0:= temp;
  #L4981dc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4981e2.  v1:= temp;
  #L4981e4.  v2:= 0I;
  #L4981e6.  call temp:= `flatMap`(v3, v4, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4981ec.  v4:= temp @kind object;
  #L4981ee.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4982cc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4982d2.  v0:= temp;
  #L4982d4.  v1:= 0I;
  #L4982d6.  call temp:= `flatMap`(v2, v3, v1, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4982dc.  v3:= temp @kind object;
  #L4982de.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4982f0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4982f6.  v4:= temp;
  #L4982f8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4982fe.  v5:= temp;
  #L498300.  v3:= 0I;
  #L498302.  v0:= v6 @kind object;
  #L498304.  v1:= v7 @kind object;
  #L498306.  v2:= v8 @kind object;
  #L498308.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49830e.  v7:= temp @kind object;
  #L498310.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4983d0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4983d6.  v5:= temp;
  #L4983d8.  v3:= 0I;
  #L4983da.  v0:= v6 @kind object;
  #L4983dc.  v1:= v7 @kind object;
  #L4983de.  v2:= v8 @kind object;
  #L4983e0.  v4:= v9;
  #L4983e2.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4983e8.  v7:= temp @kind object;
  #L4983ea.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object, `boolean` v9 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L498324.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49832a.  v4:= temp;
  #L49832c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L498332.  v5:= temp;
  #L498334.  v0:= v6 @kind object;
  #L498336.  v1:= v7 @kind object;
  #L498338.  v2:= v8 @kind object;
  #L49833a.  v3:= v9;
  #L49833c.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L498342.  v7:= temp @kind object;
  #L498344.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L498358.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49835e.  v5:= temp;
  #L498360.  v0:= v6 @kind object;
  #L498362.  v1:= v7 @kind object;
  #L498364.  v2:= v8 @kind object;
  #L498366.  v3:= v9;
  #L498368.  v4:= v10;
  #L49836a.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L498370.  v7:= temp @kind object;
  #L498372.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L498384.  v0:= "mapper is null" @kind object;
  #L498388.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49838e.  v0:= "combiner is null" @kind object;
  #L498392.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498398.  v0:= "maxConcurrency" @kind object;
  #L49839c.  call temp:= `verifyPositive`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4983a2.  v0:= "bufferSize" @kind object;
  #L4983a6.  call temp:= `verifyPositive`(v6, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4983ac.  call temp:= `flatMapWithCombiner`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.flatMapWithCombiner:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4983b2.  v2:= temp @kind object;
  #L4983b4.  call temp:= `flatMap`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4983ba.  v2:= temp @kind object;
  #L4983bc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4983fc.  v0:= "onNextMapper is null" @kind object;
  #L498400.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498406.  v0:= "onErrorMapper is null" @kind object;
  #L49840a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498410.  v0:= "onCompleteSupplier is null" @kind object;
  #L498414.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49841a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMapNotification`;
  #L49841e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMapNotification;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L498424.  call temp:= `merge`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49842a.  v2:= temp @kind object;
  #L49842c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object, `int` v5 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L498440.  v0:= "onNextMapper is null" @kind object;
  #L498444.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49844a.  v0:= "onErrorMapper is null" @kind object;
  #L49844e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498454.  v0:= "onCompleteSupplier is null" @kind object;
  #L498458.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49845e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMapNotification`;
  #L498462.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMapNotification;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L498468.  call temp:= `merge`(v0, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49846e.  v2:= temp @kind object;
  #L498470.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L498200.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L498206.  v0:= temp;
  #L498208.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49820e.  v1:= temp;
  #L498210.  call temp:= `flatMap`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L498216.  v3:= temp @kind object;
  #L498218.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49822c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L498232.  v0:= temp;
  #L498234.  call temp:= `flatMap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49823a.  v2:= temp @kind object;
  #L49823c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMap`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `int` v11 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L498250.  v0:= "mapper is null" @kind object;
  #L498254.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49825a.  v0:= "maxConcurrency" @kind object;
  #L49825e.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L498264.  v0:= "bufferSize" @kind object;
  #L498268.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49826e.  v0:= instanceof @variable v7 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L498272.  if v0 == 0 then goto L49829c;
  #L498276.  v9:= v7 @kind object;
  #L498278.  v9:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v9 @kind object;
  #L49827c.  call temp:= `get`(v9) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L498282.  v9:= temp @kind object;
  #L498284.  if v9 != 0 then goto L498292;
  #L498288.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49828e.  v8:= temp @kind object;
  #L498290.  return v8 @kind object;
  #L498292.  call temp:= `scalarXMap`(v9, v8) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498298.  v8:= temp @kind object;
  #L49829a.  return v8 @kind object;
  #L49829c.  v6:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap`;
  #L4982a0.  v0:= v6 @kind object;
  #L4982a2.  v1:= v7 @kind object;
  #L4982a4.  v2:= v8 @kind object;
  #L4982a6.  v3:= v9;
  #L4982a8.  v4:= v10;
  #L4982aa.  v5:= v11;
  #L4982ac.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ZII)V` @kind direct;
  #L4982b2.  call temp:= `onAssembly`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4982b8.  v8:= temp @kind object;
  #L4982ba.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `flatMapCompletable`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L496288.  v0:= 0I;
  #L49628a.  v1:= 2147483647I;
  #L496290.  call temp:= `flatMapCompletable`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L496296.  v3:= temp @kind object;
  #L496298.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `flatMapCompletable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4962ac.  v0:= "mapper is null" @kind object;
  #L4962b0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4962b6.  v0:= "maxConcurrency" @kind object;
  #L4962ba.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4962c0.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable`;
  #L4962c4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L4962ca.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4962d0.  v2:= temp @kind object;
  #L4962d2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapIterable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L498484.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49848a.  v0:= temp;
  #L49848c.  call temp:= `flatMapIterable`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L498492.  v2:= temp @kind object;
  #L498494.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapIterable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4984a8.  v0:= "mapper is null" @kind object;
  #L4984ac.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4984b2.  v0:= "bufferSize" @kind object;
  #L4984b6.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4984bc.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlattenIterable`;
  #L4984c0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlattenIterable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L4984c6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4984cc.  v2:= temp @kind object;
  #L4984ce.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapIterable`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4984e0.  v0:= "mapper is null" @kind object;
  #L4984e4.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4984ea.  v0:= "combiner is null" @kind object;
  #L4984ee.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4984f4.  call temp:= `flatMapIntoIterable`(v8) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.flatMapIntoIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4984fa.  v2:= temp @kind object;
  #L4984fc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L498502.  v5:= temp;
  #L498504.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49850a.  v6:= temp;
  #L49850c.  v4:= 0I;
  #L49850e.  v1:= v7 @kind object;
  #L498510.  v3:= v9 @kind object;
  #L498512.  call temp:= `flatMap`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L498518.  v8:= temp @kind object;
  #L49851a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapIterable`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v9 @kind object, `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49852c.  v0:= "mapper is null" @kind object;
  #L498530.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498536.  v0:= "combiner is null" @kind object;
  #L49853a.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498540.  call temp:= `flatMapIntoIterable`(v8) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.flatMapIntoIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L498546.  v2:= temp @kind object;
  #L498548.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49854e.  v5:= temp;
  #L498550.  v4:= 0I;
  #L498552.  v1:= v7 @kind object;
  #L498554.  v3:= v9 @kind object;
  #L498556.  v6:= v10;
  #L498558.  call temp:= `flatMap`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49855e.  v8:= temp @kind object;
  #L498560.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapMaybe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L498574.  v0:= 0I;
  #L498576.  v1:= 2147483647I;
  #L49857c.  call temp:= `flatMapMaybe`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L498582.  v3:= temp @kind object;
  #L498584.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapMaybe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L498598.  v0:= "mapper is null" @kind object;
  #L49859c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4985a2.  v0:= "maxConcurrency" @kind object;
  #L4985a6.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4985ac.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapMaybe`;
  #L4985b0.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L4985b6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4985bc.  v2:= temp @kind object;
  #L4985be.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapSingle`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4985d0.  v0:= 0I;
  #L4985d2.  v1:= 2147483647I;
  #L4985d8.  call temp:= `flatMapSingle`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4985de.  v3:= temp @kind object;
  #L4985e0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapSingle`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4985f4.  v0:= "mapper is null" @kind object;
  #L4985f8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4985fe.  v0:= "maxConcurrency" @kind object;
  #L498602.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L498608.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapSingle`;
  #L49860c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L498612.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498618.  v2:= temp @kind object;
  #L49861a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapStream`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49862c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L498632.  v0:= temp;
  #L498634.  call temp:= `flatMapStream`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49863a.  v2:= temp @kind object;
  #L49863c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapStream`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L498650.  v0:= "mapper is null" @kind object;
  #L498654.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49865a.  v0:= "prefetch" @kind object;
  #L49865e.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L498664.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableFlatMapStream`;
  #L498668.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableFlatMapStream;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L49866e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498674.  v2:= temp @kind object;
  #L498676.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEach`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `io.reactivex.rxjava3.functions.Consumer` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.forEach:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49cc2c.  call temp:= `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L49cc32.  v1:= temp @kind object;
  #L49cc34.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEachWhile`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49cc48.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L49cc4c.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L49cc50.  call temp:= `forEachWhile`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L49cc56.  v3:= temp @kind object;
  #L49cc58.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEachWhile`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cc6c.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L49cc70.  call temp:= `forEachWhile`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L49cc76.  v2:= temp @kind object;
  #L49cc78.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEachWhile`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cc8c.  v0:= "onNext is null" @kind object;
  #L49cc90.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cc96.  v0:= "onError is null" @kind object;
  #L49cc9a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cca0.  v0:= "onComplete is null" @kind object;
  #L49cca4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ccaa.  v0:= new `io.reactivex.rxjava3.internal.subscribers.ForEachWhileSubscriber`;
  #L49ccae.  call `<init>`(v0, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/subscribers/ForEachWhileSubscriber;.<init>:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L49ccb4.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L49ccba.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `groupBy`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L498b38.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L498b3e.  v0:= temp @kind object;
  #L498b40.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L498b46.  v1:= temp;
  #L498b48.  v2:= 0I;
  #L498b4a.  call temp:= `groupBy`(v3, v4, v0, v2, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L498b50.  v4:= temp @kind object;
  #L498b52.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `groupBy`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L498b90.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L498b96.  v0:= temp;
  #L498b98.  v1:= 0I;
  #L498b9a.  call temp:= `groupBy`(v2, v3, v4, v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L498ba0.  v3:= temp @kind object;
  #L498ba2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `groupBy`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L498bb4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L498bba.  v0:= temp;
  #L498bbc.  call temp:= `groupBy`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L498bc2.  v2:= temp @kind object;
  #L498bc4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `groupBy`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `io.reactivex.rxjava3.functions.Function` v10 @kind object, `boolean` v11 , `int` v12 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L498bd8.  v0:= "keySelector is null" @kind object;
  #L498bdc.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498be2.  v0:= "valueSelector is null" @kind object;
  #L498be6.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498bec.  v0:= "bufferSize" @kind object;
  #L498bf0.  call temp:= `verifyPositive`(v12, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L498bf6.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy`;
  #L498bfa.  v7:= 0I;
  #L498bfc.  v1:= v0 @kind object;
  #L498bfe.  v2:= v8 @kind object;
  #L498c00.  v3:= v9 @kind object;
  #L498c02.  v4:= v10 @kind object;
  #L498c04.  v5:= v12;
  #L498c06.  v6:= v11;
  #L498c08.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;IZLio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L498c0e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498c14.  v9:= temp @kind object;
  #L498c16.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `groupBy`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `io.reactivex.rxjava3.functions.Function` v10 @kind object, `boolean` v11 , `int` v12 , `io.reactivex.rxjava3.functions.Function` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZILio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L498c28.  v0:= "keySelector is null" @kind object;
  #L498c2c.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498c32.  v0:= "valueSelector is null" @kind object;
  #L498c36.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498c3c.  v0:= "bufferSize" @kind object;
  #L498c40.  call temp:= `verifyPositive`(v12, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L498c46.  v0:= "evictingMapFactory is null" @kind object;
  #L498c4a.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498c50.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy`;
  #L498c54.  v1:= v0 @kind object;
  #L498c56.  v2:= v8 @kind object;
  #L498c58.  v3:= v9 @kind object;
  #L498c5a.  v4:= v10 @kind object;
  #L498c5c.  v5:= v12;
  #L498c5e.  v6:= v11;
  #L498c60.  v7:= v13 @kind object;
  #L498c62.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;IZLio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L498c68.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498c6e.  v9:= temp @kind object;
  #L498c70.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `groupBy`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L498b64.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L498b6a.  v0:= temp @kind object;
  #L498b6c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L498b72.  v1:= temp;
  #L498b74.  call temp:= `groupBy`(v2, v3, v0, v4, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L498b7a.  v3:= temp @kind object;
  #L498b7c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `groupJoin`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `org.reactivestreams.Publisher` v8 @kind object, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `io.reactivex.rxjava3.functions.Function` v10 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.groupJoin:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L498c84.  v0:= "other is null" @kind object;
  #L498c88.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498c8e.  v0:= "leftEnd is null" @kind object;
  #L498c92.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498c98.  v0:= "rightEnd is null" @kind object;
  #L498c9c.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498ca2.  v0:= "resultSelector is null" @kind object;
  #L498ca6.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498cac.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupJoin`;
  #L498cb0.  v1:= v0 @kind object;
  #L498cb2.  v2:= v7 @kind object;
  #L498cb4.  v3:= v8 @kind object;
  #L498cb6.  v4:= v9 @kind object;
  #L498cb8.  v5:= v10 @kind object;
  #L498cba.  v6:= v11 @kind object;
  #L498cbc.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupJoin;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L498cc2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498cc8.  v8:= temp @kind object;
  #L498cca.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `hide`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.hide:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L498cdc.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableHide`;
  #L498ce0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableHide;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L498ce6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498cec.  v0:= temp @kind object;
  #L498cee.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `ignoreElements`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.ignoreElements:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4962e4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableIgnoreElementsCompletable`;
  #L4962e8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableIgnoreElementsCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4962ee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4962f4.  v0:= temp @kind object;
  #L4962f6.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `isEmpty`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.isEmpty:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c770.  call temp:= `alwaysFalse`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysFalse:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L49c776.  v0:= temp @kind object;
  #L49c778.  call temp:= `all`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.all:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49c77e.  v0:= temp @kind object;
  #L49c780.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `join`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `org.reactivestreams.Publisher` v8 @kind object, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `io.reactivex.rxjava3.functions.Function` v10 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.join:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L498ee4.  v0:= "other is null" @kind object;
  #L498ee8.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498eee.  v0:= "leftEnd is null" @kind object;
  #L498ef2.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498ef8.  v0:= "rightEnd is null" @kind object;
  #L498efc.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498f02.  v0:= "resultSelector is null" @kind object;
  #L498f06.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L498f0c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableJoin`;
  #L498f10.  v1:= v0 @kind object;
  #L498f12.  v2:= v7 @kind object;
  #L498f14.  v3:= v8 @kind object;
  #L498f16.  v4:= v9 @kind object;
  #L498f18.  v5:= v10 @kind object;
  #L498f1a.  v6:= v11 @kind object;
  #L498f1c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableJoin;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L498f22.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L498f28.  v8:= temp @kind object;
  #L498f2a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `last`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.last:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c794.  v0:= "defaultItem is null" @kind object;
  #L49c798.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c79e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableLastSingle`;
  #L49c7a2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastSingle;.<init>:(Lorg/reactivestreams/Publisher;Ljava/lang/Object;)V` @kind direct;
  #L49c7a8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c7ae.  v2:= temp @kind object;
  #L49c7b0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `lastElement`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.lastElement:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c488.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableLastMaybe`;
  #L49c48c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastMaybe;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L49c492.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L49c498.  v0:= temp @kind object;
  #L49c49a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `lastOrError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.lastOrError:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49c7c4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableLastSingle`;
  #L49c7c8.  v1:= 0I;
  #L49c7ca.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLastSingle;.<init>:(Lorg/reactivestreams/Publisher;Ljava/lang/Object;)V` @kind direct;
  #L49c7d0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c7d6.  v0:= temp @kind object;
  #L49c7d8.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `lastOrErrorStage`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.lastOrErrorStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L49d2ac.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableLastStageSubscriber`;
  #L49d2b0.  v1:= 0I;
  #L49d2b2.  v2:= 0I;
  #L49d2b4.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableLastStageSubscriber;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L49d2ba.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind virtual;
  #L49d2c0.  v0:= temp @kind object;
  #L49d2c2.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L49d2c6.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `lastStage`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.lastStage:(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49d2d8.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableLastStageSubscriber`;
  #L49d2dc.  v1:= 1I;
  #L49d2de.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableLastStageSubscriber;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L49d2e4.  call temp:= `subscribeWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind virtual;
  #L49d2ea.  v3:= temp @kind object;
  #L49d2ec.  v3:= (`java.util.concurrent.CompletionStage`) v3 @kind object;
  #L49d2f0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `lift`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.FlowableOperator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.lift:(Lio/reactivex/rxjava3/core/FlowableOperator;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4993fc.  v0:= "lifter is null" @kind object;
  #L499400.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499406.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableLift`;
  #L49940a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableLift;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/FlowableOperator;)V` @kind direct;
  #L499410.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499416.  v2:= temp @kind object;
  #L499418.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `map`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49942c.  v0:= "mapper is null" @kind object;
  #L499430.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499436.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMap`;
  #L49943a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMap;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L499440.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499446.  v2:= temp @kind object;
  #L499448.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mapOptional`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mapOptional:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49945c.  v0:= "mapper is null" @kind object;
  #L499460.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499466.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableMapOptional`;
  #L49946a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableMapOptional;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L499470.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499476.  v2:= temp @kind object;
  #L499478.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `materialize`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.materialize:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49948c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMaterialize`;
  #L499490.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMaterialize;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L499496.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49949c.  v0:= temp @kind object;
  #L49949e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49994c.  v0:= "other is null" @kind object;
  #L499950.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499956.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithCompletable`;
  #L49995a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L499960.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499966.  v2:= temp @kind object;
  #L499968.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49997c.  v0:= "other is null" @kind object;
  #L499980.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499986.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithMaybe`;
  #L49998a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L499990.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499996.  v2:= temp @kind object;
  #L499998.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4999ac.  v0:= "other is null" @kind object;
  #L4999b0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4999b6.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithSingle`;
  #L4999ba.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4999c0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4999c6.  v2:= temp @kind object;
  #L4999c8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.mergeWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4999dc.  v0:= "other is null" @kind object;
  #L4999e0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4999e6.  call temp:= `merge`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.merge:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4999ec.  v2:= temp @kind object;
  #L4999ee.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `observeOn`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L499a20.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L499a26.  v0:= temp;
  #L499a28.  v1:= 0I;
  #L499a2a.  call temp:= `observeOn`(v2, v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499a30.  v3:= temp @kind object;
  #L499a32.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `observeOn`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499a44.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L499a4a.  v0:= temp;
  #L499a4c.  call temp:= `observeOn`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499a52.  v2:= temp @kind object;
  #L499a54.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `observeOn`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499a68.  v0:= "scheduler is null" @kind object;
  #L499a6c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499a72.  v0:= "bufferSize" @kind object;
  #L499a76.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L499a7c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableObserveOn`;
  #L499a80.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableObserveOn;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/Scheduler;ZI)V` @kind direct;
  #L499a86.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499a8c.  v2:= temp @kind object;
  #L499a8e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `ofType`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.ofType:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499aa0.  v0:= "clazz is null" @kind object;
  #L499aa4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499aaa.  call temp:= `isInstanceOf`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.isInstanceOf:(Ljava/lang/Class;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L499ab0.  v0:= temp @kind object;
  #L499ab2.  call temp:= `filter`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499ab8.  v0:= temp @kind object;
  #L499aba.  call temp:= `cast`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499ac0.  v2:= temp @kind object;
  #L499ac2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L499ad4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L499ada.  v0:= temp;
  #L499adc.  v1:= 0I;
  #L499ade.  v2:= 1I;
  #L499ae0.  call temp:= `onBackpressureBuffer`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499ae6.  v0:= temp @kind object;
  #L499ae8.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499b20.  v0:= 0I;
  #L499b22.  call temp:= `onBackpressureBuffer`(v1, v2, v0, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499b28.  v2:= temp @kind object;
  #L499b2a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 , `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(ILio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499bd8.  v0:= 0I;
  #L499bda.  call temp:= `onBackpressureBuffer`(v1, v2, v0, v0, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZZLio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499be0.  v2:= temp @kind object;
  #L499be2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499b3c.  v0:= 0I;
  #L499b3e.  call temp:= `onBackpressureBuffer`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499b44.  v2:= temp @kind object;
  #L499b46.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `int` v8 , `boolean` v9 , `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZZ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L499b58.  v0:= "capacity" @kind object;
  #L499b5c.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L499b62.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBuffer`;
  #L499b66.  v6:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L499b6a.  v1:= v0 @kind object;
  #L499b6c.  v2:= v7 @kind object;
  #L499b6e.  v3:= v8;
  #L499b70.  v4:= v10;
  #L499b72.  v5:= v9;
  #L499b74.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureBuffer;.<init>:(Lio/reactivex/rxjava3/core/Flowable;IZZLio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L499b7a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499b80.  v8:= temp @kind object;
  #L499b82.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `int` v8 , `boolean` v9 , `boolean` v10 , `io.reactivex.rxjava3.functions.Action` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZZLio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L499b94.  v0:= "onOverflow is null" @kind object;
  #L499b98.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499b9e.  v0:= "capacity" @kind object;
  #L499ba2.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L499ba8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBuffer`;
  #L499bac.  v1:= v0 @kind object;
  #L499bae.  v2:= v7 @kind object;
  #L499bb0.  v3:= v8;
  #L499bb2.  v4:= v10;
  #L499bb4.  v5:= v9;
  #L499bb6.  v6:= v11 @kind object;
  #L499bb8.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureBuffer;.<init>:(Lio/reactivex/rxjava3/core/Flowable;IZZLio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L499bbe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499bc4.  v8:= temp @kind object;
  #L499bc6.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `io.reactivex.rxjava3.functions.Action` v10 @kind object, `io.reactivex.rxjava3.core.BackpressureOverflowStrategy` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(JLio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/core/BackpressureOverflowStrategy;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L499bf4.  v0:= "overflowStrategy is null" @kind object;
  #L499bf8.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499bfe.  v0:= "capacity" @kind object;
  #L499c02.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L499c08.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBufferStrategy`;
  #L499c0c.  v1:= v0 @kind object;
  #L499c0e.  v2:= v7 @kind object;
  #L499c10.  v3:= v8 @kind wide;
  #L499c12.  v5:= v10 @kind object;
  #L499c14.  v6:= v11 @kind object;
  #L499c16.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureBufferStrategy;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/core/BackpressureOverflowStrategy;)V` @kind direct;
  #L499c1c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499c22.  v8:= temp @kind object;
  #L499c24.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureBuffer`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L499afc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L499b02.  v0:= temp;
  #L499b04.  v1:= 1I;
  #L499b06.  call temp:= `onBackpressureBuffer`(v2, v0, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:(IZZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499b0c.  v3:= temp @kind object;
  #L499b0e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureDrop`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureDrop:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499c38.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureDrop`;
  #L499c3c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureDrop;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L499c42.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499c48.  v0:= temp @kind object;
  #L499c4a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureDrop`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureDrop:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499c5c.  v0:= "onDrop is null" @kind object;
  #L499c60.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499c66.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureDrop`;
  #L499c6a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureDrop;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L499c70.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499c76.  v2:= temp @kind object;
  #L499c78.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onBackpressureLatest`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureLatest:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499c8c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureLatest`;
  #L499c90.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureLatest;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L499c96.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499c9c.  v0:= temp @kind object;
  #L499c9e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onErrorComplete`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorComplete:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499cb0.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L499cb6.  v0:= temp @kind object;
  #L499cb8.  call temp:= `onErrorComplete`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499cbe.  v0:= temp @kind object;
  #L499cc0.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onErrorComplete`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499cd4.  v0:= "predicate is null" @kind object;
  #L499cd8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499cde.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete`;
  #L499ce2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorComplete;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L499ce8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499cee.  v2:= temp @kind object;
  #L499cf0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onErrorResumeNext`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499d04.  v0:= "fallbackSupplier is null" @kind object;
  #L499d08.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499d0e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorNext`;
  #L499d12.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorNext;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L499d18.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499d1e.  v2:= temp @kind object;
  #L499d20.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onErrorResumeWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorResumeWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499d34.  v0:= "fallback is null" @kind object;
  #L499d38.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499d3e.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L499d44.  v2:= temp @kind object;
  #L499d46.  call temp:= `onErrorResumeNext`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499d4c.  v2:= temp @kind object;
  #L499d4e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onErrorReturn`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorReturn:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499d60.  v0:= "itemSupplier is null" @kind object;
  #L499d64.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499d6a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorReturn`;
  #L499d6e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnErrorReturn;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L499d74.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499d7a.  v2:= temp @kind object;
  #L499d7c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onErrorReturnItem`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorReturnItem:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499d90.  v0:= "item is null" @kind object;
  #L499d94.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499d9a.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L499da0.  v2:= temp @kind object;
  #L499da2.  call temp:= `onErrorReturn`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.onErrorReturn:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499da8.  v2:= temp @kind object;
  #L499daa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `onTerminateDetach`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.onTerminateDetach:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499dbc.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableDetach`;
  #L499dc0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDetach;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L499dc6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499dcc.  v0:= temp @kind object;
  #L499dce.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `parallel`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.parallel:()Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cf7c.  call temp:= `from`(v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.from:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L49cf82.  v0:= temp @kind object;
  #L49cf84.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `parallel`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.parallel:(I)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49cf98.  call temp:= `from`(v0, v1) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.from:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L49cf9e.  v1:= temp @kind object;
  #L49cfa0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.parallel.ParallelFlowable` `parallel`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.parallel:(II)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49cfb4.  call temp:= `from`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/parallel/ParallelFlowable;.from:(Lorg/reactivestreams/Publisher;II)Lio/reactivex/rxjava3/parallel/ParallelFlowable;` @kind static;
  #L49cfba.  v1:= temp @kind object;
  #L49cfbc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `publish`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.publish:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L499de0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L499de6.  v0:= temp;
  #L499de8.  call temp:= `publish`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.publish:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499dee.  v2:= temp @kind object;
  #L499df0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `publish`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.publish:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L499e04.  v0:= "selector is null" @kind object;
  #L499e08.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L499e0e.  v0:= "prefetch" @kind object;
  #L499e12.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L499e18.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowablePublishMulticast`;
  #L499e1c.  v1:= 0I;
  #L499e1e.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublishMulticast;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L499e24.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499e2a.  v3:= temp @kind object;
  #L499e2c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `publish`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.publish:()Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cd80.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49cd86.  v0:= temp;
  #L49cd88.  call temp:= `publish`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.publish:(I)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind virtual;
  #L49cd8e.  v0:= temp @kind object;
  #L49cd90.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `publish`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.publish:(I)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cda4.  v0:= "bufferSize" @kind object;
  #L49cda8.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49cdae.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowablePublish`;
  #L49cdb2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish;.<init>:(Lorg/reactivestreams/Publisher;I)V` @kind direct;
  #L49cdb8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/flowables/ConnectableFlowable;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L49cdbe.  v2:= temp @kind object;
  #L49cdc0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `rebatchRequests`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.rebatchRequests:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L499f98.  v0:= `@@io.reactivex.rxjava3.internal.schedulers.ImmediateThinScheduler.INSTANCE` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L499f9c.  v1:= 1I;
  #L499f9e.  call temp:= `observeOn`(v2, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499fa4.  v3:= temp @kind object;
  #L499fa6.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `reduce`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.reduce:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c4ac.  v0:= "reducer is null" @kind object;
  #L49c4b0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c4b6.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceMaybe`;
  #L49c4ba.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduceMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L49c4c0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L49c4c6.  v2:= temp @kind object;
  #L49c4c8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `reduce`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.reduce:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c7ec.  v0:= "seed is null" @kind object;
  #L49c7f0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c7f6.  v0:= "reducer is null" @kind object;
  #L49c7fa.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c800.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceSeedSingle`;
  #L49c804.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduceSeedSingle;.<init>:(Lorg/reactivestreams/Publisher;Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L49c80a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c810.  v2:= temp @kind object;
  #L49c812.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `reduceWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.reduceWith:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c824.  v0:= "seedSupplier is null" @kind object;
  #L49c828.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c82e.  v0:= "reducer is null" @kind object;
  #L49c832.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c838.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceWithSingle`;
  #L49c83c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReduceWithSingle;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L49c842.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c848.  v2:= temp @kind object;
  #L49c84a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeat`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeat:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L499fb8.  v0:= 9223372036854775807L;
  #L499fc2.  call temp:= `repeat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeat:(J)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499fc8.  v0:= temp @kind object;
  #L499fca.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeat`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeat:(J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L499fdc.  v0:= 0L;
  #L499fe0.  v2:= lcmp(v4, v0);
  #L499fe4.  if v2 < 0 then goto L49a00a;
  #L499fe8.  if v2 != 0 then goto L499ff6;
  #L499fec.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L499ff2.  v4:= temp @kind object;
  #L499ff4.  return v4 @kind object;
  #L499ff6.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeat`;
  #L499ffa.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRepeat;.<init>:(Lio/reactivex/rxjava3/core/Flowable;J)V` @kind direct;
  #L49a000.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a006.  v4:= temp @kind object;
  #L49a008.  return v4 @kind object;
  #L49a00a.  v0:= new `java.lang.IllegalArgumentException`;
  #L49a00e.  v1:= new `java.lang.StringBuilder`;
  #L49a012.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49a018.  v2:= "times >= 0 required but it was " @kind object;
  #L49a01c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49a022.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L49a028.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49a02e.  v4:= temp @kind object;
  #L49a030.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49a036.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeatUntil`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeatUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a048.  v0:= "stop is null" @kind object;
  #L49a04c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a052.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatUntil`;
  #L49a056.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRepeatUntil;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/BooleanSupplier;)V` @kind direct;
  #L49a05c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a062.  v2:= temp @kind object;
  #L49a064.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeatWhen`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeatWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a078.  v0:= "handler is null" @kind object;
  #L49a07c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a082.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatWhen`;
  #L49a086.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRepeatWhen;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L49a08c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a092.  v2:= temp @kind object;
  #L49a094.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a0a8.  v0:= "selector is null" @kind object;
  #L49a0ac.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a0b2.  call temp:= `replaySupplier`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49a0b8.  v0:= temp @kind object;
  #L49a0ba.  call temp:= `multicastSelector`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a0c0.  v2:= temp @kind object;
  #L49a0c2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a0d4.  v0:= "selector is null" @kind object;
  #L49a0d8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a0de.  v0:= "bufferSize" @kind object;
  #L49a0e2.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49a0e8.  v0:= 0I;
  #L49a0ea.  call temp:= `replaySupplier`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Flowable;IZ)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49a0f0.  v3:= temp @kind object;
  #L49a0f2.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a0f8.  v2:= temp @kind object;
  #L49a0fa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49a144.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49a14a.  v6:= temp @kind object;
  #L49a14c.  v0:= v7 @kind object;
  #L49a14e.  v1:= v8 @kind object;
  #L49a150.  v2:= v9;
  #L49a152.  v3:= v10 @kind wide;
  #L49a154.  v5:= v12 @kind object;
  #L49a156.  call temp:= `replay`(v0, v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a15c.  v8:= temp @kind object;
  #L49a15e.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `int` v10 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.rxjava3.core.Scheduler` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49a170.  v0:= "selector is null" @kind object;
  #L49a174.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a17a.  v0:= "unit is null" @kind object;
  #L49a17e.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a184.  v0:= "bufferSize" @kind object;
  #L49a188.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49a18e.  v0:= "scheduler is null" @kind object;
  #L49a192.  call temp:= `requireNonNull`(v14, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a198.  v7:= 0I;
  #L49a19a.  v1:= v8 @kind object;
  #L49a19c.  v2:= v10;
  #L49a19e.  v3:= v11 @kind wide;
  #L49a1a0.  v5:= v13 @kind object;
  #L49a1a2.  v6:= v14 @kind object;
  #L49a1a4.  call temp:= `replaySupplier`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Flowable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49a1aa.  v10:= temp @kind object;
  #L49a1ac.  call temp:= `multicastSelector`(v10, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a1b2.  v9:= temp @kind object;
  #L49a1b4.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `boolean` v14 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49a1c8.  v0:= "selector is null" @kind object;
  #L49a1cc.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a1d2.  v0:= "unit is null" @kind object;
  #L49a1d6.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a1dc.  v0:= "bufferSize" @kind object;
  #L49a1e0.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49a1e6.  v0:= "scheduler is null" @kind object;
  #L49a1ea.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a1f0.  v0:= v7 @kind object;
  #L49a1f2.  v1:= v9;
  #L49a1f4.  v2:= v10 @kind wide;
  #L49a1f6.  v4:= v12 @kind object;
  #L49a1f8.  v5:= v13 @kind object;
  #L49a1fa.  v6:= v14;
  #L49a1fc.  call temp:= `replaySupplier`(v0, v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Flowable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49a202.  v9:= temp @kind object;
  #L49a204.  call temp:= `multicastSelector`(v9, v8) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a20a.  v8:= temp @kind object;
  #L49a20c.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;IZ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a10c.  v0:= "selector is null" @kind object;
  #L49a110.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a116.  v0:= "bufferSize" @kind object;
  #L49a11a.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49a120.  call temp:= `replaySupplier`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Flowable;IZ)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49a126.  v3:= temp @kind object;
  #L49a128.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a12e.  v2:= temp @kind object;
  #L49a130.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49a220.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49a226.  v5:= temp @kind object;
  #L49a228.  v0:= v6 @kind object;
  #L49a22a.  v1:= v7 @kind object;
  #L49a22c.  v2:= v8 @kind wide;
  #L49a22e.  v4:= v10 @kind object;
  #L49a230.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a236.  v7:= temp @kind object;
  #L49a238.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49a24c.  v0:= "selector is null" @kind object;
  #L49a250.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a256.  v0:= "unit is null" @kind object;
  #L49a25a.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a260.  v0:= "scheduler is null" @kind object;
  #L49a264.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a26a.  v6:= 0I;
  #L49a26c.  v1:= v7 @kind object;
  #L49a26e.  v2:= v9 @kind wide;
  #L49a270.  v4:= v11 @kind object;
  #L49a272.  v5:= v12 @kind object;
  #L49a274.  call temp:= `replaySupplier`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49a27a.  v9:= temp @kind object;
  #L49a27c.  call temp:= `multicastSelector`(v9, v8) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a282.  v8:= temp @kind object;
  #L49a284.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49a298.  v0:= "selector is null" @kind object;
  #L49a29c.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a2a2.  v0:= "unit is null" @kind object;
  #L49a2a6.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a2ac.  v0:= "scheduler is null" @kind object;
  #L49a2b0.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a2b6.  v0:= v6 @kind object;
  #L49a2b8.  v1:= v8 @kind wide;
  #L49a2ba.  v3:= v10 @kind object;
  #L49a2bc.  v4:= v11 @kind object;
  #L49a2be.  v5:= v12;
  #L49a2c0.  call temp:= `replaySupplier`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49a2c6.  v8:= temp @kind object;
  #L49a2c8.  call temp:= `multicastSelector`(v8, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a2ce.  v7:= temp @kind object;
  #L49a2d0.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:()Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cdd4.  call temp:= `createFrom`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.createFrom:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L49cdda.  v0:= temp @kind object;
  #L49cddc.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(I)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cdf0.  v0:= "bufferSize" @kind object;
  #L49cdf4.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49cdfa.  v0:= 0I;
  #L49cdfc.  call temp:= `create`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.create:(Lio/reactivex/rxjava3/core/Flowable;IZ)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L49ce02.  v2:= temp @kind object;
  #L49ce04.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49ce3c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49ce42.  v5:= temp @kind object;
  #L49ce44.  v0:= v6 @kind object;
  #L49ce46.  v1:= v7;
  #L49ce48.  v2:= v8 @kind wide;
  #L49ce4a.  v4:= v10 @kind object;
  #L49ce4c.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind virtual;
  #L49ce52.  v7:= temp @kind object;
  #L49ce54.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49ce68.  v0:= "unit is null" @kind object;
  #L49ce6c.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ce72.  v0:= "scheduler is null" @kind object;
  #L49ce76.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ce7c.  v0:= "bufferSize" @kind object;
  #L49ce80.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49ce86.  v7:= 0I;
  #L49ce88.  v1:= v8 @kind object;
  #L49ce8a.  v2:= v10 @kind wide;
  #L49ce8c.  v4:= v12 @kind object;
  #L49ce8e.  v5:= v13 @kind object;
  #L49ce90.  v6:= v9;
  #L49ce92.  call temp:= `create`(v1, v2, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.create:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L49ce98.  v9:= temp @kind object;
  #L49ce9a.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `int` v8 , `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49ceac.  v0:= "unit is null" @kind object;
  #L49ceb0.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ceb6.  v0:= "scheduler is null" @kind object;
  #L49ceba.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cec0.  v0:= "bufferSize" @kind object;
  #L49cec4.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49ceca.  v0:= v7 @kind object;
  #L49cecc.  v1:= v9 @kind wide;
  #L49cece.  v3:= v11 @kind object;
  #L49ced0.  v4:= v12 @kind object;
  #L49ced2.  v5:= v8;
  #L49ced4.  v6:= v13;
  #L49ced6.  call temp:= `create`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.create:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L49cedc.  v8:= temp @kind object;
  #L49cede.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(IZ)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49ce18.  v0:= "bufferSize" @kind object;
  #L49ce1c.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49ce22.  call temp:= `create`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.create:(Lio/reactivex/rxjava3/core/Flowable;IZ)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L49ce28.  v2:= temp @kind object;
  #L49ce2a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cef0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49cef6.  v0:= temp @kind object;
  #L49cef8.  call temp:= `replay`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind virtual;
  #L49cefe.  v2:= temp @kind object;
  #L49cf00.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49cf14.  v0:= "unit is null" @kind object;
  #L49cf18.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cf1e.  v0:= "scheduler is null" @kind object;
  #L49cf22.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cf28.  v6:= 0I;
  #L49cf2a.  v1:= v7 @kind object;
  #L49cf2c.  v2:= v8 @kind wide;
  #L49cf2e.  v4:= v10 @kind object;
  #L49cf30.  v5:= v11 @kind object;
  #L49cf32.  call temp:= `create`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.create:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L49cf38.  v8:= temp @kind object;
  #L49cf3a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.flowables.ConnectableFlowable` `replay`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cf4c.  v0:= "unit is null" @kind object;
  #L49cf50.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cf56.  v0:= "scheduler is null" @kind object;
  #L49cf5a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cf60.  call temp:= `create`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay;.create:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind static;
  #L49cf66.  v2:= temp @kind object;
  #L49cf68.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `retry`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L49a2e4.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L49a2ea.  v0:= temp @kind object;
  #L49a2ec.  v1:= 9223372036854775807L;
  #L49a2f6.  call temp:= `retry`(v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a2fc.  v0:= temp @kind object;
  #L49a2fe.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `retry`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a364.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L49a36a.  v0:= temp @kind object;
  #L49a36c.  call temp:= `retry`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a372.  v2:= temp @kind object;
  #L49a374.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `retry`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `long` v4 , `io.reactivex.rxjava3.functions.Predicate` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L49a388.  v0:= 0L;
  #L49a38c.  v2:= lcmp(v4, v0);
  #L49a390.  if v2 < 0 then goto L49a3b2;
  #L49a394.  v0:= "predicate is null" @kind object;
  #L49a398.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a39e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryPredicate`;
  #L49a3a2.  call `<init>`(v0, v3, v4, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRetryPredicate;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L49a3a8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a3ae.  v4:= temp @kind object;
  #L49a3b0.  return v4 @kind object;
  #L49a3b2.  v6:= new `java.lang.IllegalArgumentException`;
  #L49a3b6.  v0:= new `java.lang.StringBuilder`;
  #L49a3ba.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49a3c0.  v1:= "times >= 0 required but it was " @kind object;
  #L49a3c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49a3ca.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L49a3d0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49a3d6.  v4:= temp @kind object;
  #L49a3d8.  call `<init>`(v6, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49a3de.  throw v6;
}
procedure `io.reactivex.rxjava3.core.Flowable` `retry`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a310.  v0:= "predicate is null" @kind object;
  #L49a314.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a31a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryBiPredicate`;
  #L49a31e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRetryBiPredicate;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L49a324.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a32a.  v2:= temp @kind object;
  #L49a32c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `retry`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49a340.  v0:= 9223372036854775807L;
  #L49a34a.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a350.  v3:= temp @kind object;
  #L49a352.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `retryUntil`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.retryUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49a3f0.  v0:= "stop is null" @kind object;
  #L49a3f4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a3fa.  call temp:= `predicateReverseFor`(v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.predicateReverseFor:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L49a400.  v3:= temp @kind object;
  #L49a402.  v0:= 9223372036854775807L;
  #L49a40c.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a412.  v3:= temp @kind object;
  #L49a414.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `retryWhen`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.retryWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a428.  v0:= "handler is null" @kind object;
  #L49a42c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a432.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryWhen`;
  #L49a436.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRetryWhen;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L49a43c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a442.  v2:= temp @kind object;
  #L49a444.  return v2 @kind object;
}
procedure `void` `safeSubscribe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.safeSubscribe:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d5d8.  v0:= "subscriber is null" @kind object;
  #L49d5dc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49d5e2.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.subscribers.SafeSubscriber` @kind boolean;
  #L49d5e6.  if v0 == 0 then goto L49d5f6;
  #L49d5ea.  v2:= (`io.reactivex.rxjava3.subscribers.SafeSubscriber`) v2 @kind object;
  #L49d5ee.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L49d5f4.  goto L49d606;
  #L49d5f6.  v0:= new `io.reactivex.rxjava3.subscribers.SafeSubscriber`;
  #L49d5fa.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/subscribers/SafeSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L49d600.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L49d606.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sample`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a458.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49a45e.  v0:= temp @kind object;
  #L49a460.  call temp:= `sample`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a466.  v2:= temp @kind object;
  #L49a468.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sample`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49a4a8.  v0:= "unit is null" @kind object;
  #L49a4ac.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a4b2.  v0:= "scheduler is null" @kind object;
  #L49a4b6.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a4bc.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSampleTimed`;
  #L49a4c0.  v7:= 0I;
  #L49a4c2.  v1:= v0 @kind object;
  #L49a4c4.  v2:= v8 @kind object;
  #L49a4c6.  v3:= v9 @kind wide;
  #L49a4c8.  v5:= v11 @kind object;
  #L49a4ca.  v6:= v12 @kind object;
  #L49a4cc.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSampleTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L49a4d2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a4d8.  v9:= temp @kind object;
  #L49a4da.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sample`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49a4ec.  v0:= "unit is null" @kind object;
  #L49a4f0.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a4f6.  v0:= "scheduler is null" @kind object;
  #L49a4fa.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a500.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSampleTimed`;
  #L49a504.  v1:= v0 @kind object;
  #L49a506.  v2:= v8 @kind object;
  #L49a508.  v3:= v9 @kind wide;
  #L49a50a.  v5:= v11 @kind object;
  #L49a50c.  v6:= v12 @kind object;
  #L49a50e.  v7:= v13;
  #L49a510.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSampleTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L49a516.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a51c.  v9:= temp @kind object;
  #L49a51e.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sample`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49a47c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49a482.  v4:= temp @kind object;
  #L49a484.  v0:= v6 @kind object;
  #L49a486.  v1:= v7 @kind wide;
  #L49a488.  v3:= v9 @kind object;
  #L49a48a.  v5:= v10;
  #L49a48c.  call temp:= `sample`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a492.  v7:= temp @kind object;
  #L49a494.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sample`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49a530.  v0:= "sampler is null" @kind object;
  #L49a534.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a53a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSamplePublisher`;
  #L49a53e.  v1:= 0I;
  #L49a540.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSamplePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Z)V` @kind direct;
  #L49a546.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a54c.  v3:= temp @kind object;
  #L49a54e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sample`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(Lorg/reactivestreams/Publisher;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a560.  v0:= "sampler is null" @kind object;
  #L49a564.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a56a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSamplePublisher`;
  #L49a56e.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSamplePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Z)V` @kind direct;
  #L49a574.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a57a.  v2:= temp @kind object;
  #L49a57c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `scan`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.scan:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a590.  v0:= "accumulator is null" @kind object;
  #L49a594.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a59a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableScan`;
  #L49a59e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScan;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L49a5a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a5aa.  v2:= temp @kind object;
  #L49a5ac.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `scan`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.scan:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a5c0.  v0:= "initialValue is null" @kind object;
  #L49a5c4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a5ca.  call temp:= `justSupplier`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justSupplier:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49a5d0.  v2:= temp @kind object;
  #L49a5d2.  call temp:= `scanWith`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.scanWith:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a5d8.  v2:= temp @kind object;
  #L49a5da.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `scanWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.scanWith:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a5ec.  v0:= "seedSupplier is null" @kind object;
  #L49a5f0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a5f6.  v0:= "accumulator is null" @kind object;
  #L49a5fa.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a600.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableScanSeed`;
  #L49a604.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableScanSeed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L49a60a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a610.  v2:= temp @kind object;
  #L49a612.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `serialize`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.serialize:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a624.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSerialized`;
  #L49a628.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSerialized;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L49a62e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a634.  v0:= temp @kind object;
  #L49a636.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `share`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.share:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a648.  call temp:= `publish`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.publish:()Lio/reactivex/rxjava3/flowables/ConnectableFlowable;` @kind virtual;
  #L49a64e.  v0:= temp @kind object;
  #L49a650.  call temp:= `refCount`(v0) @signature `Lio/reactivex/rxjava3/flowables/ConnectableFlowable;.refCount:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a656.  v0:= temp @kind object;
  #L49a658.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `single`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.single:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c91c.  v0:= "defaultItem is null" @kind object;
  #L49c920.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c926.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSingleSingle`;
  #L49c92a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSingleSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Object;)V` @kind direct;
  #L49c930.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c936.  v2:= temp @kind object;
  #L49c938.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `singleElement`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.singleElement:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c4dc.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSingleMaybe`;
  #L49c4e0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSingleMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L49c4e6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L49c4ec.  v0:= temp @kind object;
  #L49c4ee.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `singleOrError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.singleOrError:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49c94c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSingleSingle`;
  #L49c950.  v1:= 0I;
  #L49c952.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSingleSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Object;)V` @kind direct;
  #L49c958.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c95e.  v0:= temp @kind object;
  #L49c960.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `singleOrErrorStage`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.singleOrErrorStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L49d304.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber`;
  #L49d308.  v1:= 0I;
  #L49d30a.  v2:= 0I;
  #L49d30c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableSingleStageSubscriber;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L49d312.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind virtual;
  #L49d318.  v0:= temp @kind object;
  #L49d31a.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L49d31e.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `singleStage`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.singleStage:(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49d330.  v0:= new `io.reactivex.rxjava3.internal.jdk8.FlowableSingleStageSubscriber`;
  #L49d334.  v1:= 1I;
  #L49d336.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/FlowableSingleStageSubscriber;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L49d33c.  call temp:= `subscribeWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind virtual;
  #L49d342.  v3:= temp @kind object;
  #L49d344.  v3:= (`java.util.concurrent.CompletionStage`) v3 @kind object;
  #L49d348.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skip`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.skip:(J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L49a66c.  v0:= 0L;
  #L49a670.  v2:= lcmp(v4, v0);
  #L49a674.  if v2 < 0 then goto L49a69a;
  #L49a678.  if v2 != 0 then goto L49a686;
  #L49a67c.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a682.  v4:= temp @kind object;
  #L49a684.  return v4 @kind object;
  #L49a686.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip`;
  #L49a68a.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkip;.<init>:(Lio/reactivex/rxjava3/core/Flowable;J)V` @kind direct;
  #L49a690.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a696.  v4:= temp @kind object;
  #L49a698.  return v4 @kind object;
  #L49a69a.  v0:= new `java.lang.IllegalArgumentException`;
  #L49a69e.  v1:= new `java.lang.StringBuilder`;
  #L49a6a2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49a6a8.  v2:= "count >= 0 expected but it was " @kind object;
  #L49a6ac.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49a6b2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L49a6b8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49a6be.  v4:= temp @kind object;
  #L49a6c0.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49a6c6.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skip`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.skip:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49a6d8.  call temp:= `timer`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a6de.  v1:= temp @kind object;
  #L49a6e0.  call temp:= `skipUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a6e6.  v1:= temp @kind object;
  #L49a6e8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skip`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.skip:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49a6fc.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a702.  v1:= temp @kind object;
  #L49a704.  call temp:= `skipUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a70a.  v1:= temp @kind object;
  #L49a70c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipLast`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L49a720.  if v4 < 0 then goto L49a746;
  #L49a724.  if v4 != 0 then goto L49a732;
  #L49a728.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a72e.  v4:= temp @kind object;
  #L49a730.  return v4 @kind object;
  #L49a732.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLast`;
  #L49a736.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLast;.<init>:(Lio/reactivex/rxjava3/core/Flowable;I)V` @kind direct;
  #L49a73c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a742.  v4:= temp @kind object;
  #L49a744.  return v4 @kind object;
  #L49a746.  v0:= new `java.lang.IllegalArgumentException`;
  #L49a74a.  v1:= new `java.lang.StringBuilder`;
  #L49a74e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49a754.  v2:= "count >= 0 required but it was " @kind object;
  #L49a758.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49a75e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L49a764.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49a76a.  v4:= temp @kind object;
  #L49a76c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49a772.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49a784.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49a78a.  v4:= temp @kind object;
  #L49a78c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49a792.  v6:= temp;
  #L49a794.  v5:= 0I;
  #L49a796.  v0:= v7 @kind object;
  #L49a798.  v1:= v8 @kind wide;
  #L49a79a.  v3:= v10 @kind object;
  #L49a79c.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a7a2.  v8:= temp @kind object;
  #L49a7a4.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49a7ec.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49a7f2.  v6:= temp;
  #L49a7f4.  v5:= 0I;
  #L49a7f6.  v0:= v7 @kind object;
  #L49a7f8.  v1:= v8 @kind wide;
  #L49a7fa.  v3:= v10 @kind object;
  #L49a7fc.  v4:= v11 @kind object;
  #L49a7fe.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a804.  v8:= temp @kind object;
  #L49a806.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49a818.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49a81e.  v6:= temp;
  #L49a820.  v0:= v7 @kind object;
  #L49a822.  v1:= v8 @kind wide;
  #L49a824.  v3:= v10 @kind object;
  #L49a826.  v4:= v11 @kind object;
  #L49a828.  v5:= v12;
  #L49a82a.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a830.  v8:= temp @kind object;
  #L49a832.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipLast`(`io.reactivex.rxjava3.core.Flowable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L49a844.  v0:= "unit is null" @kind object;
  #L49a848.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a84e.  v0:= "scheduler is null" @kind object;
  #L49a852.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a858.  v0:= "bufferSize" @kind object;
  #L49a85c.  call temp:= `verifyPositive`(v15, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49a862.  v7:= v15 ^< 1;
  #L49a866.  v15:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLastTimed`;
  #L49a86a.  v1:= v15 @kind object;
  #L49a86c.  v2:= v9 @kind object;
  #L49a86e.  v3:= v10 @kind wide;
  #L49a870.  v5:= v12 @kind object;
  #L49a872.  v6:= v13 @kind object;
  #L49a874.  v8:= v14;
  #L49a876.  call `<init>`(v1, v2, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipLastTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)V` @kind direct;
  #L49a87c.  call temp:= `onAssembly`(v15) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a882.  v10:= temp @kind object;
  #L49a884.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `boolean` v11 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49a7b8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49a7be.  v4:= temp @kind object;
  #L49a7c0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49a7c6.  v6:= temp;
  #L49a7c8.  v0:= v7 @kind object;
  #L49a7ca.  v1:= v8 @kind wide;
  #L49a7cc.  v3:= v10 @kind object;
  #L49a7ce.  v5:= v11;
  #L49a7d0.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a7d6.  v8:= temp @kind object;
  #L49a7d8.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipUntil`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a898.  v0:= "other is null" @kind object;
  #L49a89c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a8a2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipUntil`;
  #L49a8a6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipUntil;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L49a8ac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a8b2.  v2:= temp @kind object;
  #L49a8b4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `skipWhile`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.skipWhile:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a8c8.  v0:= "predicate is null" @kind object;
  #L49a8cc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a8d2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipWhile`;
  #L49a8d6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSkipWhile;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L49a8dc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a8e2.  v2:= temp @kind object;
  #L49a8e4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sorted`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.sorted:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49a8f8.  call temp:= `toList`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.toList:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49a8fe.  v0:= temp @kind object;
  #L49a900.  call temp:= `toFlowable`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a906.  v0:= temp @kind object;
  #L49a908.  call temp:= `naturalComparator`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L49a90e.  v1:= temp @kind object;
  #L49a910.  call temp:= `listSorter`(v1) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49a916.  v1:= temp @kind object;
  #L49a918.  call temp:= `map`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a91e.  v0:= temp @kind object;
  #L49a920.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49a926.  v1:= temp @kind object;
  #L49a928.  call temp:= `flatMapIterable`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a92e.  v0:= temp @kind object;
  #L49a930.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `sorted`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.sorted:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a944.  v0:= "comparator is null" @kind object;
  #L49a948.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a94e.  call temp:= `toList`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.toList:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49a954.  v0:= temp @kind object;
  #L49a956.  call temp:= `toFlowable`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a95c.  v0:= temp @kind object;
  #L49a95e.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49a964.  v2:= temp @kind object;
  #L49a966.  call temp:= `map`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a96c.  v2:= temp @kind object;
  #L49a96e.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49a974.  v0:= temp @kind object;
  #L49a976.  call temp:= `flatMapIterable`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a97c.  v2:= temp @kind object;
  #L49a97e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a990.  v0:= "other is null" @kind object;
  #L49a994.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a99a.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.wrap:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49a9a0.  v2:= temp @kind object;
  #L49a9a2.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a9a8.  v2:= temp @kind object;
  #L49a9aa.  call temp:= `concat`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a9b0.  v2:= temp @kind object;
  #L49a9b2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a9c4.  v0:= "other is null" @kind object;
  #L49a9c8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49a9ce.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.wrap:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L49a9d4.  v2:= temp @kind object;
  #L49a9d6.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49a9dc.  v2:= temp @kind object;
  #L49a9de.  call temp:= `concat`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49a9e4.  v2:= temp @kind object;
  #L49a9e6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49a9f8.  v0:= "other is null" @kind object;
  #L49a9fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49aa02.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.wrap:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49aa08.  v2:= temp @kind object;
  #L49aa0a.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49aa10.  v2:= temp @kind object;
  #L49aa12.  call temp:= `concat`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49aa18.  v2:= temp @kind object;
  #L49aa1a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49aa2c.  v0:= "other is null" @kind object;
  #L49aa30.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49aa36.  v0:= 2I;
  #L49aa38.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L49aa3c.  v1:= 0I;
  #L49aa3e.  v0[v1]:= v3 @kind object;
  #L49aa42.  v3:= 1I;
  #L49aa44.  v0[v3]:= v2 @kind object;
  #L49aa48.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49aa4e.  v3:= temp @kind object;
  #L49aa50.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWithArray`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `java.lang.Object`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWithArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49aa64.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49aa6a.  v3:= temp @kind object;
  #L49aa6c.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Flowable;.empty:()Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49aa72.  v0:= temp @kind object;
  #L49aa74.  if v3 != v0 then goto L49aa82;
  #L49aa78.  call temp:= `onAssembly`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49aa7e.  v3:= temp @kind object;
  #L49aa80.  return v3 @kind object;
  #L49aa82.  v0:= 2I;
  #L49aa84.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L49aa88.  v1:= 0I;
  #L49aa8a.  v0[v1]:= v3 @kind object;
  #L49aa8e.  v3:= 1I;
  #L49aa90.  v0[v3]:= v2 @kind object;
  #L49aa94.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49aa9a.  v3:= temp @kind object;
  #L49aa9c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWithItem`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWithItem:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49aab0.  v0:= "item is null" @kind object;
  #L49aab4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49aaba.  v0:= 2I;
  #L49aabc.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L49aac0.  call temp:= `just`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49aac6.  v3:= temp @kind object;
  #L49aac8.  v1:= 0I;
  #L49aaca.  v0[v1]:= v3 @kind object;
  #L49aace.  v3:= 1I;
  #L49aad0.  v0[v3]:= v2 @kind object;
  #L49aad4.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49aada.  v3:= temp @kind object;
  #L49aadc.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWithIterable`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWithIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49aaf0.  v0:= 2I;
  #L49aaf2.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L49aaf6.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49aafc.  v3:= temp @kind object;
  #L49aafe.  v1:= 0I;
  #L49ab00.  v0[v1]:= v3 @kind object;
  #L49ab04.  v3:= 1I;
  #L49ab06.  v0[v3]:= v2 @kind object;
  #L49ab0a.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatArray:([Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ab10.  v3:= temp @kind object;
  #L49ab12.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:()Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L49cccc.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L49ccd2.  v0:= temp @kind object;
  #L49ccd4.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L49ccd8.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L49ccdc.  call temp:= `subscribe`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L49cce2.  v0:= temp @kind object;
  #L49cce4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49ccf8.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L49ccfc.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L49cd00.  call temp:= `subscribe`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L49cd06.  v3:= temp @kind object;
  #L49cd08.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cd1c.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L49cd20.  call temp:= `subscribe`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L49cd26.  v2:= temp @kind object;
  #L49cd28.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object, `io.reactivex.rxjava3.functions.Action` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49cd3c.  v0:= "onNext is null" @kind object;
  #L49cd40.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cd46.  v0:= "onError is null" @kind object;
  #L49cd4a.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cd50.  v0:= "onComplete is null" @kind object;
  #L49cd54.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cd5a.  v0:= new `io.reactivex.rxjava3.internal.subscribers.LambdaSubscriber`;
  #L49cd5e.  v1:= `@@io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$RequestMax.INSTANCE` @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper$RequestMax` @kind object;
  #L49cd62.  call `<init>`(v0, v3, v4, v5, v1) @signature `Lio/reactivex/rxjava3/internal/subscribers/LambdaSubscriber;.<init>:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L49cd68.  call `subscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L49cd6e.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.core.FlowableSubscriber` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49d618.  v0:= "subscriber is null" @kind object;
  #L49d61c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49d622.  call temp:= `onSubscribe`(v2, v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind static;
  #L49d628.  v3:= temp @kind object;
  #L49d62a.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null FlowableSubscriber. Please check the handler provided to RxJavaPlugins.setOnFlowableSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L49d62e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49d634.  call `subscribeActual`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L49d63a.  return @kind void;
  #L49d63c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49d63e.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L49d644.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L49d64a.  v0:= new `java.lang.NullPointerException`;
  #L49d64e.  v1:= "Actually not, but can't throw other exceptions due to RS" @kind object;
  #L49d652.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49d658.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L49d65e.  throw v0;
  #L49d660.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L49d662.  throw v3;
  catch `java.lang.NullPointerException` @[L49d622..L49d63a] goto L49d660;
  catch `java.lang.Throwable` @[L49d622..L49d63a] goto L49d63c;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d684.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.core.FlowableSubscriber` @kind boolean;
  #L49d688.  if v0 == 0 then goto L49d698;
  #L49d68c.  v2:= (`io.reactivex.rxjava3.core.FlowableSubscriber`) v2 @kind object;
  #L49d690.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L49d696.  goto L49d6b2;
  #L49d698.  v0:= "subscriber is null" @kind object;
  #L49d69c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49d6a2.  v0:= new `io.reactivex.rxjava3.internal.subscribers.StrictSubscriber`;
  #L49d6a6.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscribers/StrictSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L49d6ac.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L49d6b2.  return @kind void;
}
procedure `void` `subscribeActual`(`org.reactivestreams.Subscriber` v0 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.rxjava3.core.Flowable` `subscribeOn`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49ab24.  v0:= "scheduler is null" @kind object;
  #L49ab28.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ab2e.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate` @kind boolean;
  #L49ab32.  v0:= v0 ^~ 1;
  #L49ab36.  call temp:= `subscribeOn`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49ab3c.  v2:= temp @kind object;
  #L49ab3e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `subscribeOn`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49ab50.  v0:= "scheduler is null" @kind object;
  #L49ab54.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ab5a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSubscribeOn`;
  #L49ab5e.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L49ab64.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ab6a.  v2:= temp @kind object;
  #L49ab6c.  return v2 @kind object;
}
procedure `org.reactivestreams.Subscriber` `subscribeWith`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49d3fc.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L49d402.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchIfEmpty`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchIfEmpty:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49ab80.  v0:= "other is null" @kind object;
  #L49ab84.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ab8a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchIfEmpty`;
  #L49ab8e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchIfEmpty;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L49ab94.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ab9a.  v2:= temp @kind object;
  #L49ab9c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49abb0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49abb6.  v0:= temp;
  #L49abb8.  call temp:= `switchMap`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49abbe.  v2:= temp @kind object;
  #L49abc0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49abd4.  v0:= 0I;
  #L49abd6.  call temp:= `b`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.b:(Lio/reactivex/rxjava3/functions/Function;IZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49abdc.  v2:= temp @kind object;
  #L49abde.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `switchMapCompletable`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L496308.  v0:= "mapper is null" @kind object;
  #L49630c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496312.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable`;
  #L496316.  v1:= 0I;
  #L496318.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L49631e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L496324.  v3:= temp @kind object;
  #L496326.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `switchMapCompletableDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L496338.  v0:= "mapper is null" @kind object;
  #L49633c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496342.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable`;
  #L496346.  v1:= 1I;
  #L496348.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L49634e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L496354.  v3:= temp @kind object;
  #L496356.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMapDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49ac58.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49ac5e.  v0:= temp;
  #L49ac60.  call temp:= `switchMapDelayError`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapDelayError:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49ac66.  v2:= temp @kind object;
  #L49ac68.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMapDelayError`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapDelayError:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49ac7c.  v0:= 1I;
  #L49ac7e.  call temp:= `b`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.b:(Lio/reactivex/rxjava3/functions/Function;IZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49ac84.  v2:= temp @kind object;
  #L49ac86.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMapMaybe`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49ac98.  v0:= "mapper is null" @kind object;
  #L49ac9c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49aca2.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe`;
  #L49aca6.  v1:= 0I;
  #L49aca8.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L49acae.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49acb4.  v3:= temp @kind object;
  #L49acb6.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMapMaybeDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49acc8.  v0:= "mapper is null" @kind object;
  #L49accc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49acd2.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapMaybe`;
  #L49acd6.  v1:= 1I;
  #L49acd8.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L49acde.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ace4.  v3:= temp @kind object;
  #L49ace6.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMapSingle`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49acf8.  v0:= "mapper is null" @kind object;
  #L49acfc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ad02.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapSingle`;
  #L49ad06.  v1:= 0I;
  #L49ad08.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L49ad0e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ad14.  v3:= temp @kind object;
  #L49ad16.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchMapSingleDelayError`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.switchMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49ad28.  v0:= "mapper is null" @kind object;
  #L49ad2c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ad32.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapSingle`;
  #L49ad36.  v1:= 1I;
  #L49ad38.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L49ad3e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ad44.  v3:= temp @kind object;
  #L49ad46.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `take`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.take:(J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L49ae00.  v0:= 0L;
  #L49ae04.  v2:= lcmp(v4, v0);
  #L49ae08.  if v2 < 0 then goto L49ae20;
  #L49ae0c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTake`;
  #L49ae10.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTake;.<init>:(Lio/reactivex/rxjava3/core/Flowable;J)V` @kind direct;
  #L49ae16.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ae1c.  v4:= temp @kind object;
  #L49ae1e.  return v4 @kind object;
  #L49ae20.  v0:= new `java.lang.IllegalArgumentException`;
  #L49ae24.  v1:= new `java.lang.StringBuilder`;
  #L49ae28.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49ae2e.  v2:= "count >= 0 required but it was " @kind object;
  #L49ae32.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49ae38.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L49ae3e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49ae44.  v4:= temp @kind object;
  #L49ae46.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49ae4c.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `take`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.take:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49ae60.  call temp:= `timer`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ae66.  v1:= temp @kind object;
  #L49ae68.  call temp:= `takeUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49ae6e.  v1:= temp @kind object;
  #L49ae70.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `take`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.take:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49ae84.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ae8a.  v1:= temp @kind object;
  #L49ae8c.  call temp:= `takeUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49ae92.  v1:= temp @kind object;
  #L49ae94.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L49aea8.  if v4 < 0 then goto L49aef2;
  #L49aeac.  if v4 != 0 then goto L49aec4;
  #L49aeb0.  v4:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableIgnoreElements`;
  #L49aeb4.  call `<init>`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableIgnoreElements;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L49aeba.  call temp:= `onAssembly`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49aec0.  v4:= temp @kind object;
  #L49aec2.  return v4 @kind object;
  #L49aec4.  v0:= 1I;
  #L49aec6.  if v4 != v0 then goto L49aede;
  #L49aeca.  v4:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLastOne`;
  #L49aece.  call `<init>`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeLastOne;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L49aed4.  call temp:= `onAssembly`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49aeda.  v4:= temp @kind object;
  #L49aedc.  return v4 @kind object;
  #L49aede.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLast`;
  #L49aee2.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeLast;.<init>:(Lio/reactivex/rxjava3/core/Flowable;I)V` @kind direct;
  #L49aee8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49aeee.  v4:= temp @kind object;
  #L49aef0.  return v4 @kind object;
  #L49aef2.  v0:= new `java.lang.IllegalArgumentException`;
  #L49aef6.  v1:= new `java.lang.StringBuilder`;
  #L49aefa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49af00.  v2:= "count >= 0 required but it was " @kind object;
  #L49af04.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49af0a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L49af10.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49af16.  v4:= temp @kind object;
  #L49af18.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49af1e.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v9 @kind this, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L49b020.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b026.  v6:= temp @kind object;
  #L49b028.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49b02e.  v8:= temp;
  #L49b030.  v7:= 0I;
  #L49b032.  v0:= v9 @kind object;
  #L49b034.  v1:= v10 @kind wide;
  #L49b036.  v3:= v12 @kind wide;
  #L49b038.  v5:= v14 @kind object;
  #L49b03a.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b040.  v10:= temp @kind object;
  #L49b042.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v9 @kind this, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object, `io.reactivex.rxjava3.core.Scheduler` v15 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L49b054.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49b05a.  v8:= temp;
  #L49b05c.  v7:= 0I;
  #L49b05e.  v0:= v9 @kind object;
  #L49b060.  v1:= v10 @kind wide;
  #L49b062.  v3:= v12 @kind wide;
  #L49b064.  v5:= v14 @kind object;
  #L49b066.  v6:= v15 @kind object;
  #L49b068.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b06e.  v10:= temp @kind object;
  #L49b070.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v11 @kind this, `long` v12 , `long` v14 , `java.util.concurrent.TimeUnit` v16 @kind object, `io.reactivex.rxjava3.core.Scheduler` v17 @kind object, `boolean` v18 , `int` v19 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L49b084.  v2:= v12 @kind wide;
  #L49b086.  v0:= "unit is null" @kind object;
  #L49b08a.  v6:= v16 @kind object;
  #L49b08e.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b094.  v0:= "scheduler is null" @kind object;
  #L49b098.  v7:= v17 @kind object;
  #L49b09c.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b0a2.  v0:= "bufferSize" @kind object;
  #L49b0a6.  v8:= v19;
  #L49b0aa.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49b0b0.  v0:= 0L;
  #L49b0b4.  v4:= lcmp(v2, v0);
  #L49b0b8.  if v4 < 0 then goto L49b0e8;
  #L49b0bc.  v10:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLastTimed`;
  #L49b0c0.  v0:= v10 @kind object;
  #L49b0c2.  v1:= v11 @kind object;
  #L49b0c4.  v2:= v12 @kind wide;
  #L49b0c6.  v4:= v14 @kind wide;
  #L49b0c8.  v6:= v16 @kind object;
  #L49b0cc.  v7:= v17 @kind object;
  #L49b0d0.  v8:= v19;
  #L49b0d4.  v9:= v18;
  #L49b0d8.  call `<init>`(v0, v1, v2, v4, v6, v7, v8, v9) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeLastTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)V` @kind direct;
  #L49b0de.  call temp:= `onAssembly`(v10) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b0e4.  v0:= temp @kind object;
  #L49b0e6.  return v0 @kind object;
  #L49b0e8.  v0:= new `java.lang.IllegalArgumentException`;
  #L49b0ec.  v1:= new `java.lang.StringBuilder`;
  #L49b0f0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49b0f6.  v4:= "count >= 0 required but it was " @kind object;
  #L49b0fa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49b100.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L49b106.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49b10c.  v1:= temp @kind object;
  #L49b10e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49b114.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49af30.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49af36.  v4:= temp @kind object;
  #L49af38.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49af3e.  v6:= temp;
  #L49af40.  v5:= 0I;
  #L49af42.  v0:= v7 @kind object;
  #L49af44.  v1:= v8 @kind wide;
  #L49af46.  v3:= v10 @kind object;
  #L49af48.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49af4e.  v8:= temp @kind object;
  #L49af50.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49af98.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49af9e.  v6:= temp;
  #L49afa0.  v5:= 0I;
  #L49afa2.  v0:= v7 @kind object;
  #L49afa4.  v1:= v8 @kind wide;
  #L49afa6.  v3:= v10 @kind object;
  #L49afa8.  v4:= v11 @kind object;
  #L49afaa.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49afb0.  v8:= temp @kind object;
  #L49afb2.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49afc4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49afca.  v6:= temp;
  #L49afcc.  v0:= v7 @kind object;
  #L49afce.  v1:= v8 @kind wide;
  #L49afd0.  v3:= v10 @kind object;
  #L49afd2.  v4:= v11 @kind object;
  #L49afd4.  v5:= v12;
  #L49afd6.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49afdc.  v8:= temp @kind object;
  #L49afde.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L49aff0.  v1:= 9223372036854775807L;
  #L49affa.  v0:= v9 @kind object;
  #L49affc.  v3:= v10 @kind wide;
  #L49affe.  v5:= v12 @kind object;
  #L49b000.  v6:= v13 @kind object;
  #L49b002.  v7:= v14;
  #L49b004.  v8:= v15;
  #L49b006.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b00c.  v10:= temp @kind object;
  #L49b00e.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeLast`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `boolean` v11 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49af64.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49af6a.  v4:= temp @kind object;
  #L49af6c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49af72.  v6:= temp;
  #L49af74.  v0:= v7 @kind object;
  #L49af76.  v1:= v8 @kind wide;
  #L49af78.  v3:= v10 @kind object;
  #L49af7a.  v5:= v11;
  #L49af7c.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49af82.  v8:= temp @kind object;
  #L49af84.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeUntil`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeUntil:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b128.  v0:= "stopPredicate is null" @kind object;
  #L49b12c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b132.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeUntilPredicate`;
  #L49b136.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntilPredicate;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L49b13c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b142.  v2:= temp @kind object;
  #L49b144.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeUntil`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b158.  v0:= "other is null" @kind object;
  #L49b15c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b162.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeUntil`;
  #L49b166.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L49b16c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b172.  v2:= temp @kind object;
  #L49b174.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `takeWhile`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.takeWhile:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b188.  v0:= "predicate is null" @kind object;
  #L49b18c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b192.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeWhile`;
  #L49b196.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeWhile;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L49b19c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b1a2.  v2:= temp @kind object;
  #L49b1a4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.subscribers.TestSubscriber` `test`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.test:()Lio/reactivex/rxjava3/subscribers/TestSubscriber;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cfd0.  v0:= new `io.reactivex.rxjava3.subscribers.TestSubscriber`;
  #L49cfd4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/subscribers/TestSubscriber;.<init>:()V` @kind direct;
  #L49cfda.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L49cfe0.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.subscribers.TestSubscriber` `test`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.test:(J)Lio/reactivex/rxjava3/subscribers/TestSubscriber;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cff4.  v0:= new `io.reactivex.rxjava3.subscribers.TestSubscriber`;
  #L49cff8.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/subscribers/TestSubscriber;.<init>:(J)V` @kind direct;
  #L49cffe.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L49d004.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.subscribers.TestSubscriber` `test`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 , `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.test:(JZ)Lio/reactivex/rxjava3/subscribers/TestSubscriber;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d018.  v0:= new `io.reactivex.rxjava3.subscribers.TestSubscriber`;
  #L49d01c.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/subscribers/TestSubscriber;.<init>:(J)V` @kind direct;
  #L49d022.  if v4 == 0 then goto L49d02c;
  #L49d026.  call `cancel`(v0) @signature `Lio/reactivex/rxjava3/subscribers/TestSubscriber;.cancel:()V` @kind virtual;
  #L49d02c.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V` @kind virtual;
  #L49d032.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleFirst`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b1b8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b1be.  v0:= temp @kind object;
  #L49b1c0.  call temp:= `throttleFirst`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b1c6.  v2:= temp @kind object;
  #L49b1c8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleFirst`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49b1dc.  v0:= "unit is null" @kind object;
  #L49b1e0.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b1e6.  v0:= "scheduler is null" @kind object;
  #L49b1ea.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b1f0.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleFirstTimed`;
  #L49b1f4.  v1:= v0 @kind object;
  #L49b1f6.  v2:= v7 @kind object;
  #L49b1f8.  v3:= v8 @kind wide;
  #L49b1fa.  v5:= v10 @kind object;
  #L49b1fc.  v6:= v11 @kind object;
  #L49b1fe.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleFirstTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L49b204.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b20a.  v8:= temp @kind object;
  #L49b20c.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleLast`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49b220.  call temp:= `sample`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b226.  v1:= temp @kind object;
  #L49b228.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleLast`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49b23c.  call temp:= `sample`(v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b242.  v1:= temp @kind object;
  #L49b244.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleLatest`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49b258.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b25e.  v4:= temp @kind object;
  #L49b260.  v5:= 0I;
  #L49b262.  v0:= v6 @kind object;
  #L49b264.  v1:= v7 @kind wide;
  #L49b266.  v3:= v9 @kind object;
  #L49b268.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b26e.  v7:= temp @kind object;
  #L49b270.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleLatest`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49b2b0.  v5:= 0I;
  #L49b2b2.  v0:= v6 @kind object;
  #L49b2b4.  v1:= v7 @kind wide;
  #L49b2b6.  v3:= v9 @kind object;
  #L49b2b8.  v4:= v10 @kind object;
  #L49b2ba.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b2c0.  v7:= temp @kind object;
  #L49b2c2.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleLatest`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49b2d4.  v0:= "unit is null" @kind object;
  #L49b2d8.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b2de.  v0:= "scheduler is null" @kind object;
  #L49b2e2.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b2e8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableThrottleLatest`;
  #L49b2ec.  v1:= v0 @kind object;
  #L49b2ee.  v2:= v8 @kind object;
  #L49b2f0.  v3:= v9 @kind wide;
  #L49b2f2.  v5:= v11 @kind object;
  #L49b2f4.  v6:= v12 @kind object;
  #L49b2f6.  v7:= v13;
  #L49b2f8.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableThrottleLatest;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L49b2fe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b304.  v9:= temp @kind object;
  #L49b306.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleLatest`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49b284.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b28a.  v4:= temp @kind object;
  #L49b28c.  v0:= v6 @kind object;
  #L49b28e.  v1:= v7 @kind wide;
  #L49b290.  v3:= v9 @kind object;
  #L49b292.  v5:= v10;
  #L49b294.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b29a.  v7:= temp @kind object;
  #L49b29c.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleWithTimeout`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleWithTimeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49b318.  call temp:= `debounce`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.debounce:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b31e.  v1:= temp @kind object;
  #L49b320.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `throttleWithTimeout`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.throttleWithTimeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49b334.  call temp:= `debounce`(v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b33a.  v1:= temp @kind object;
  #L49b33c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeInterval`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeInterval:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49b350.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L49b354.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b35a.  v1:= temp @kind object;
  #L49b35c.  call temp:= `timeInterval`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b362.  v0:= temp @kind object;
  #L49b364.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeInterval`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeInterval:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b378.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L49b37c.  call temp:= `timeInterval`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b382.  v2:= temp @kind object;
  #L49b384.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeInterval`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeInterval:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b398.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b39e.  v0:= temp @kind object;
  #L49b3a0.  call temp:= `timeInterval`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b3a6.  v2:= temp @kind object;
  #L49b3a8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeInterval`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b3bc.  v0:= "unit is null" @kind object;
  #L49b3c0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b3c6.  v0:= "scheduler is null" @kind object;
  #L49b3ca.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b3d0.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeInterval`;
  #L49b3d4.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeInterval;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L49b3da.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b3e0.  v2:= temp @kind object;
  #L49b3e2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49b438.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b43e.  v5:= temp @kind object;
  #L49b440.  v4:= 0I;
  #L49b442.  v0:= v6 @kind object;
  #L49b444.  v1:= v7 @kind wide;
  #L49b446.  v3:= v9 @kind object;
  #L49b448.  call temp:= `c`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.c:(JLjava/util/concurrent/TimeUnit;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L49b44e.  v7:= temp @kind object;
  #L49b450.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49b464.  v4:= 0I;
  #L49b466.  v0:= v6 @kind object;
  #L49b468.  v1:= v7 @kind wide;
  #L49b46a.  v3:= v9 @kind object;
  #L49b46c.  v5:= v10 @kind object;
  #L49b46e.  call temp:= `c`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.c:(JLjava/util/concurrent/TimeUnit;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L49b474.  v7:= temp @kind object;
  #L49b476.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object, `org.reactivestreams.Publisher` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49b488.  v0:= "fallback is null" @kind object;
  #L49b48c.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b492.  v0:= v6 @kind object;
  #L49b494.  v1:= v7 @kind wide;
  #L49b496.  v3:= v9 @kind object;
  #L49b498.  v4:= v11 @kind object;
  #L49b49a.  v5:= v10 @kind object;
  #L49b49c.  call temp:= `c`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.c:(JLjava/util/concurrent/TimeUnit;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L49b4a2.  v7:= temp @kind object;
  #L49b4a4.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `org.reactivestreams.Publisher` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(JLjava/util/concurrent/TimeUnit;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49b4b8.  v0:= "fallback is null" @kind object;
  #L49b4bc.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b4c2.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b4c8.  v6:= temp @kind object;
  #L49b4ca.  v1:= v7 @kind object;
  #L49b4cc.  v2:= v8 @kind wide;
  #L49b4ce.  v4:= v10 @kind object;
  #L49b4d0.  v5:= v11 @kind object;
  #L49b4d2.  call temp:= `c`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.c:(JLjava/util/concurrent/TimeUnit;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L49b4d8.  v8:= temp @kind object;
  #L49b4da.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b3f4.  v0:= 0I;
  #L49b3f6.  call temp:= `d`(v1, v0, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.d:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L49b3fc.  v2:= temp @kind object;
  #L49b3fe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b410.  v0:= "fallback is null" @kind object;
  #L49b414.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b41a.  v0:= 0I;
  #L49b41c.  call temp:= `d`(v1, v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.d:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L49b422.  v2:= temp @kind object;
  #L49b424.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b4ec.  v0:= "firstTimeoutIndicator is null" @kind object;
  #L49b4f0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b4f6.  v0:= 0I;
  #L49b4f8.  call temp:= `d`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.d:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L49b4fe.  v2:= temp @kind object;
  #L49b500.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timeout`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timeout:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b514.  v0:= "firstTimeoutIndicator is null" @kind object;
  #L49b518.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b51e.  v0:= "fallback is null" @kind object;
  #L49b522.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b528.  call temp:= `d`(v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.d:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind direct;
  #L49b52e.  v2:= temp @kind object;
  #L49b530.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timestamp`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.timestamp:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49b620.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L49b624.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b62a.  v1:= temp @kind object;
  #L49b62c.  call temp:= `timestamp`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b632.  v0:= temp @kind object;
  #L49b634.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timestamp`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timestamp:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b648.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L49b64c.  call temp:= `timestamp`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b652.  v2:= temp @kind object;
  #L49b654.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timestamp`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timestamp:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b668.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b66e.  v0:= temp @kind object;
  #L49b670.  call temp:= `timestamp`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b676.  v2:= temp @kind object;
  #L49b678.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `timestamp`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b68c.  v0:= "unit is null" @kind object;
  #L49b690.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b696.  v0:= "scheduler is null" @kind object;
  #L49b69a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b6a0.  call temp:= `timestampWith`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.timestampWith:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49b6a6.  v2:= temp @kind object;
  #L49b6a8.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b6ae.  v2:= temp @kind object;
  #L49b6b0.  return v2 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.FlowableConverter` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.to:(Lio/reactivex/rxjava3/core/FlowableConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d228.  v0:= "converter is null" @kind object;
  #L49d22c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49d232.  v2:= temp @kind object;
  #L49d234.  v2:= (`io.reactivex.rxjava3.core.FlowableConverter`) v2 @kind object;
  #L49d238.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/FlowableConverter;.apply:(Lio/reactivex/rxjava3/core/Flowable;)Ljava/lang/Object;` @kind interface;
  #L49d23e.  v2:= temp @kind object;
  #L49d240.  return v2 @kind object;
}
procedure `java.util.concurrent.Future` `toFuture`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.toFuture:()Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49d35c.  v0:= new `io.reactivex.rxjava3.internal.subscribers.FutureSubscriber`;
  #L49d360.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/subscribers/FutureSubscriber;.<init>:()V` @kind direct;
  #L49d366.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind virtual;
  #L49d36c.  v0:= temp @kind object;
  #L49d36e.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L49d372.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toList`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.toList:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c974.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle`;
  #L49c978.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L49c97e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c984.  v0:= temp @kind object;
  #L49c986.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toList`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.toList:(I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c998.  v0:= "capacityHint" @kind object;
  #L49c99c.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49c9a2.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle`;
  #L49c9a6.  call temp:= `createArrayList`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createArrayList:(I)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49c9ac.  v2:= temp @kind object;
  #L49c9ae.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L49c9b4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c9ba.  v2:= temp @kind object;
  #L49c9bc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toList`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toList:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c9d0.  v0:= "collectionSupplier is null" @kind object;
  #L49c9d4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c9da.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableToListSingle`;
  #L49c9de.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableToListSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L49c9e4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L49c9ea.  v2:= temp @kind object;
  #L49c9ec.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49ca00.  v0:= "keySelector is null" @kind object;
  #L49ca04.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ca0a.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49ca10.  v0:= temp @kind object;
  #L49ca12.  call temp:= `toMapKeySelector`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMapKeySelector:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L49ca18.  v2:= temp @kind object;
  #L49ca1a.  call temp:= `collect`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49ca20.  v2:= temp @kind object;
  #L49ca22.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49ca34.  v0:= "keySelector is null" @kind object;
  #L49ca38.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ca3e.  v0:= "valueSelector is null" @kind object;
  #L49ca42.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ca48.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49ca4e.  v0:= temp @kind object;
  #L49ca50.  call temp:= `toMapKeyValueSelector`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMapKeyValueSelector:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L49ca56.  v2:= temp @kind object;
  #L49ca58.  call temp:= `collect`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49ca5e.  v2:= temp @kind object;
  #L49ca60.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49ca74.  v0:= "keySelector is null" @kind object;
  #L49ca78.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ca7e.  v0:= "valueSelector is null" @kind object;
  #L49ca82.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ca88.  call temp:= `toMapKeyValueSelector`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMapKeyValueSelector:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L49ca8e.  v2:= temp @kind object;
  #L49ca90.  call temp:= `collect`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49ca96.  v2:= temp @kind object;
  #L49ca98.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Flowable` v3 @kind this, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L49caac.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49cab2.  v0:= temp @kind object;
  #L49cab4.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49caba.  v1:= temp @kind object;
  #L49cabc.  call temp:= `asFunction`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49cac2.  v2:= temp @kind object;
  #L49cac4.  call temp:= `toMultimap`(v3, v4, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49caca.  v4:= temp @kind object;
  #L49cacc.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49cae0.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L49cae6.  v0:= temp @kind object;
  #L49cae8.  call temp:= `asFunction`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49caee.  v1:= temp @kind object;
  #L49caf0.  call temp:= `toMultimap`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49caf6.  v3:= temp @kind object;
  #L49caf8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cb0c.  call temp:= `asFunction`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49cb12.  v0:= temp @kind object;
  #L49cb14.  call temp:= `toMultimap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49cb1a.  v2:= temp @kind object;
  #L49cb1c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object, `io.reactivex.rxjava3.functions.Function` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cb30.  v0:= "keySelector is null" @kind object;
  #L49cb34.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cb3a.  v0:= "valueSelector is null" @kind object;
  #L49cb3e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cb44.  v0:= "mapSupplier is null" @kind object;
  #L49cb48.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cb4e.  v0:= "collectionFactory is null" @kind object;
  #L49cb52.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cb58.  call temp:= `toMultimapKeyValueSelector`(v2, v3, v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMultimapKeyValueSelector:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L49cb5e.  v2:= temp @kind object;
  #L49cb60.  call temp:= `collect`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49cb66.  v2:= temp @kind object;
  #L49cb68.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c500.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromPublisher`;
  #L49c504.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L49c50a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L49c510.  v0:= temp @kind object;
  #L49c512.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Flowable;.toSortedList:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cb7c.  call temp:= `naturalComparator`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L49cb82.  v0:= temp @kind object;
  #L49cb84.  call temp:= `toSortedList`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49cb8a.  v0:= temp @kind object;
  #L49cb8c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.toSortedList:(I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cba0.  call temp:= `naturalComparator`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L49cba6.  v0:= temp @kind object;
  #L49cba8.  call temp:= `toSortedList`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49cbae.  v2:= temp @kind object;
  #L49cbb0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cbc4.  v0:= "comparator is null" @kind object;
  #L49cbc8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cbce.  call temp:= `toList`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.toList:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49cbd4.  v0:= temp @kind object;
  #L49cbd6.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49cbdc.  v2:= temp @kind object;
  #L49cbde.  call temp:= `map`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Single;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49cbe4.  v2:= temp @kind object;
  #L49cbe6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.util.Comparator` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49cbf8.  v0:= "comparator is null" @kind object;
  #L49cbfc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49cc02.  call temp:= `toList`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.toList:(I)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49cc08.  v3:= temp @kind object;
  #L49cc0a.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49cc10.  v2:= temp @kind object;
  #L49cc12.  call temp:= `map`(v3, v2) @signature `Lio/reactivex/rxjava3/core/Single;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L49cc18.  v2:= temp @kind object;
  #L49cc1a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `unsubscribeOn`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.unsubscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49b70c.  v0:= "scheduler is null" @kind object;
  #L49b710.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b716.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableUnsubscribeOn`;
  #L49b71a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableUnsubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L49b720.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b726.  v2:= temp @kind object;
  #L49b728.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49b79c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49b7a2.  v5:= temp;
  #L49b7a4.  v0:= v6 @kind object;
  #L49b7a6.  v1:= v7 @kind wide;
  #L49b7a8.  v3:= v7 @kind wide;
  #L49b7aa.  call temp:= `window`(v0, v1, v3, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b7b0.  v7:= temp @kind object;
  #L49b7b2.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v6 @kind this, `long` v7 , `long` v9 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49b940.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49b946.  v5:= temp;
  #L49b948.  v0:= v6 @kind object;
  #L49b94a.  v1:= v7 @kind wide;
  #L49b94c.  v3:= v9 @kind wide;
  #L49b94e.  call temp:= `window`(v0, v1, v3, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b954.  v7:= temp @kind object;
  #L49b956.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `long` v11 , `int` v13 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49b968.  v0:= "skip" @kind object;
  #L49b96c.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L49b972.  v0:= "count" @kind object;
  #L49b976.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L49b97c.  v0:= "bufferSize" @kind object;
  #L49b980.  call temp:= `verifyPositive`(v13, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49b986.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWindow`;
  #L49b98a.  v1:= v0 @kind object;
  #L49b98c.  v2:= v8 @kind object;
  #L49b98e.  v3:= v9 @kind wide;
  #L49b990.  v5:= v11 @kind wide;
  #L49b992.  v7:= v13;
  #L49b994.  call `<init>`(v1, v2, v3, v5, v7) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindow;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JJI)V` @kind direct;
  #L49b99a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b9a0.  v9:= temp @kind object;
  #L49b9a2.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49b9b4.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b9ba.  v6:= temp @kind object;
  #L49b9bc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49b9c2.  v7:= temp;
  #L49b9c4.  v0:= v8 @kind object;
  #L49b9c6.  v1:= v9 @kind wide;
  #L49b9c8.  v3:= v11 @kind wide;
  #L49b9ca.  v5:= v13 @kind object;
  #L49b9cc.  call temp:= `window`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b9d2.  v9:= temp @kind object;
  #L49b9d4.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.rxjava3.core.Scheduler` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49b9e8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49b9ee.  v7:= temp;
  #L49b9f0.  v0:= v8 @kind object;
  #L49b9f2.  v1:= v9 @kind wide;
  #L49b9f4.  v3:= v11 @kind wide;
  #L49b9f6.  v5:= v13 @kind object;
  #L49b9f8.  v6:= v14 @kind object;
  #L49b9fa.  call temp:= `window`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49ba00.  v9:= temp @kind object;
  #L49ba02.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v13 @kind this, `long` v14 , `long` v16 , `java.util.concurrent.TimeUnit` v18 @kind object, `io.reactivex.rxjava3.core.Scheduler` v19 @kind object, `int` v20 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L49ba14.  v0:= "bufferSize" @kind object;
  #L49ba18.  v11:= v20;
  #L49ba1c.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49ba22.  v0:= "timespan" @kind object;
  #L49ba26.  v3:= v14 @kind wide;
  #L49ba28.  call temp:= `verifyPositive`(v14, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L49ba2e.  v0:= "timeskip" @kind object;
  #L49ba32.  v5:= v16 @kind wide;
  #L49ba36.  call temp:= `verifyPositive`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L49ba3c.  v0:= "scheduler is null" @kind object;
  #L49ba40.  v8:= v19 @kind object;
  #L49ba44.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ba4a.  v0:= "unit is null" @kind object;
  #L49ba4e.  v7:= v18 @kind object;
  #L49ba52.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49ba58.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowTimed`;
  #L49ba5c.  v9:= 9223372036854775807L;
  #L49ba66.  v12:= 0I;
  #L49ba68.  v1:= v0 @kind object;
  #L49ba6a.  v2:= v13 @kind object;
  #L49ba6c.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v11, v12) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JIZ)V` @kind direct;
  #L49ba72.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49ba78.  v0:= temp @kind object;
  #L49ba7a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49b7c4.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b7ca.  v4:= temp @kind object;
  #L49b7cc.  v5:= 9223372036854775807L;
  #L49b7d6.  v7:= 0I;
  #L49b7d8.  v0:= v8 @kind object;
  #L49b7da.  v1:= v9 @kind wide;
  #L49b7dc.  v3:= v11 @kind object;
  #L49b7de.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b7e4.  v9:= temp @kind object;
  #L49b7e6.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `long` v12 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49b8e8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b8ee.  v4:= temp @kind object;
  #L49b8f0.  v7:= 0I;
  #L49b8f2.  v0:= v8 @kind object;
  #L49b8f4.  v1:= v9 @kind wide;
  #L49b8f6.  v3:= v11 @kind object;
  #L49b8f8.  v5:= v12 @kind wide;
  #L49b8fa.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b900.  v9:= temp @kind object;
  #L49b902.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `long` v12 , `boolean` v14 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;JZ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49b914.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L49b91a.  v4:= temp @kind object;
  #L49b91c.  v0:= v8 @kind object;
  #L49b91e.  v1:= v9 @kind wide;
  #L49b920.  v3:= v11 @kind object;
  #L49b922.  v5:= v12 @kind wide;
  #L49b924.  v7:= v14;
  #L49b926.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b92c.  v9:= temp @kind object;
  #L49b92e.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49b7f8.  v5:= 9223372036854775807L;
  #L49b802.  v7:= 0I;
  #L49b804.  v0:= v8 @kind object;
  #L49b806.  v1:= v9 @kind wide;
  #L49b808.  v3:= v11 @kind object;
  #L49b80a.  v4:= v12 @kind object;
  #L49b80c.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b812.  v9:= temp @kind object;
  #L49b814.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `long` v13 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L49b828.  v7:= 0I;
  #L49b82a.  v0:= v8 @kind object;
  #L49b82c.  v1:= v9 @kind wide;
  #L49b82e.  v3:= v11 @kind object;
  #L49b830.  v4:= v12 @kind object;
  #L49b832.  v5:= v13 @kind wide;
  #L49b834.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b83a.  v9:= temp @kind object;
  #L49b83c.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `long` v14 , `boolean` v16 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L49b850.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49b856.  v8:= temp;
  #L49b858.  v0:= v9 @kind object;
  #L49b85a.  v1:= v10 @kind wide;
  #L49b85c.  v3:= v12 @kind object;
  #L49b85e.  v4:= v13 @kind object;
  #L49b860.  v5:= v14 @kind wide;
  #L49b862.  v7:= v16;
  #L49b866.  call temp:= `window`(v0, v1, v3, v4, v5, v7, v8) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49b86c.  v0:= temp @kind object;
  #L49b86e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v13 @kind this, `long` v14 , `java.util.concurrent.TimeUnit` v16 @kind object, `io.reactivex.rxjava3.core.Scheduler` v17 @kind object, `long` v18 , `boolean` v20 , `int` v21 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L49b880.  v0:= "bufferSize" @kind object;
  #L49b884.  v11:= v21;
  #L49b888.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49b88e.  v0:= "scheduler is null" @kind object;
  #L49b892.  v8:= v17 @kind object;
  #L49b896.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b89c.  v0:= "unit is null" @kind object;
  #L49b8a0.  v7:= v16 @kind object;
  #L49b8a4.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49b8aa.  v0:= "count" @kind object;
  #L49b8ae.  v9:= v18 @kind wide;
  #L49b8b2.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L49b8b8.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowTimed`;
  #L49b8bc.  v1:= v0 @kind object;
  #L49b8be.  v2:= v13 @kind object;
  #L49b8c0.  v3:= v14 @kind wide;
  #L49b8c2.  v5:= v14 @kind wide;
  #L49b8c4.  v12:= v20;
  #L49b8c8.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v11, v12) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed;.<init>:(Lio/reactivex/rxjava3/core/Flowable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JIZ)V` @kind direct;
  #L49b8ce.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49b8d4.  v0:= temp @kind object;
  #L49b8d6.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49ba8c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49ba92.  v0:= temp;
  #L49ba94.  call temp:= `window`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49ba9a.  v2:= temp @kind object;
  #L49ba9c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49bab0.  v0:= "boundaryIndicator is null" @kind object;
  #L49bab4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49baba.  v0:= "bufferSize" @kind object;
  #L49babe.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49bac4.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary`;
  #L49bac8.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;I)V` @kind direct;
  #L49bace.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49bad4.  v2:= temp @kind object;
  #L49bad6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49bae8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L49baee.  v0:= temp;
  #L49baf0.  call temp:= `window`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49baf6.  v2:= temp @kind object;
  #L49baf8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `window`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.window:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49bb0c.  v0:= "openingIndicator is null" @kind object;
  #L49bb10.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bb16.  v0:= "closingIndicator is null" @kind object;
  #L49bb1a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bb20.  v0:= "bufferSize" @kind object;
  #L49bb24.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L49bb2a.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundarySelector`;
  #L49bb2e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L49bb34.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49bb3a.  v2:= temp @kind object;
  #L49bb3c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `withLatestFrom`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49bb50.  v0:= "others is null" @kind object;
  #L49bb54.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bb5a.  v0:= "combiner is null" @kind object;
  #L49bb5e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bb64.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany`;
  #L49bb68.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L49bb6e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49bb74.  v2:= temp @kind object;
  #L49bb76.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `withLatestFrom`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49bb88.  v0:= "other is null" @kind object;
  #L49bb8c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bb92.  v0:= "combiner is null" @kind object;
  #L49bb96.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bb9c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFrom`;
  #L49bba0.  call `<init>`(v0, v1, v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFrom;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/BiFunction;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L49bba6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49bbac.  v2:= temp @kind object;
  #L49bbae.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `withLatestFrom`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `io.reactivex.rxjava3.functions.Function3` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49bbc0.  v0:= "source1 is null" @kind object;
  #L49bbc4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bbca.  v0:= "source2 is null" @kind object;
  #L49bbce.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bbd4.  v0:= "combiner is null" @kind object;
  #L49bbd8.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bbde.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49bbe4.  v5:= temp @kind object;
  #L49bbe6.  v0:= 2I;
  #L49bbe8.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L49bbec.  v1:= 0I;
  #L49bbee.  v0[v1]:= v3 @kind object;
  #L49bbf2.  v3:= 1I;
  #L49bbf4.  v0[v3]:= v4 @kind object;
  #L49bbf8.  call temp:= `withLatestFrom`(v2, v0, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49bbfe.  v3:= temp @kind object;
  #L49bc00.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `withLatestFrom`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `io.reactivex.rxjava3.functions.Function4` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49bc14.  v0:= "source1 is null" @kind object;
  #L49bc18.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bc1e.  v0:= "source2 is null" @kind object;
  #L49bc22.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bc28.  v0:= "source3 is null" @kind object;
  #L49bc2c.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bc32.  v0:= "combiner is null" @kind object;
  #L49bc36.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bc3c.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49bc42.  v6:= temp @kind object;
  #L49bc44.  v0:= 3I;
  #L49bc46.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L49bc4a.  v1:= 0I;
  #L49bc4c.  v0[v1]:= v3 @kind object;
  #L49bc50.  v3:= 1I;
  #L49bc52.  v0[v3]:= v4 @kind object;
  #L49bc56.  v3:= 2I;
  #L49bc58.  v0[v3]:= v5 @kind object;
  #L49bc5c.  call temp:= `withLatestFrom`(v2, v0, v6) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49bc62.  v3:= temp @kind object;
  #L49bc64.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `withLatestFrom`(`io.reactivex.rxjava3.core.Flowable` v2 @kind this, `org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Publisher` v4 @kind object, `org.reactivestreams.Publisher` v5 @kind object, `org.reactivestreams.Publisher` v6 @kind object, `io.reactivex.rxjava3.functions.Function5` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49bc78.  v0:= "source1 is null" @kind object;
  #L49bc7c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bc82.  v0:= "source2 is null" @kind object;
  #L49bc86.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bc8c.  v0:= "source3 is null" @kind object;
  #L49bc90.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bc96.  v0:= "source4 is null" @kind object;
  #L49bc9a.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bca0.  v0:= "combiner is null" @kind object;
  #L49bca4.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bcaa.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49bcb0.  v7:= temp @kind object;
  #L49bcb2.  v0:= 4I;
  #L49bcb4.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L49bcb8.  v1:= 0I;
  #L49bcba.  v0[v1]:= v3 @kind object;
  #L49bcbe.  v3:= 1I;
  #L49bcc0.  v0[v3]:= v4 @kind object;
  #L49bcc4.  v3:= 2I;
  #L49bcc6.  v0[v3]:= v5 @kind object;
  #L49bcca.  v3:= 3I;
  #L49bccc.  v0[v3]:= v6 @kind object;
  #L49bcd0.  call temp:= `withLatestFrom`(v2, v0, v7) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49bcd6.  v3:= temp @kind object;
  #L49bcd8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `withLatestFrom`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher`[] v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.withLatestFrom:([Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49bcec.  v0:= "others is null" @kind object;
  #L49bcf0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bcf6.  v0:= "combiner is null" @kind object;
  #L49bcfa.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49bd00.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany`;
  #L49bd04.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany;.<init>:(Lio/reactivex/rxjava3/core/Flowable;[Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L49bd0a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49bd10.  v2:= temp @kind object;
  #L49bd12.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zipWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipWith:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c374.  v0:= "other is null" @kind object;
  #L49c378.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c37e.  v0:= "zipper is null" @kind object;
  #L49c382.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c388.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableZipIterable`;
  #L49c38c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableZipIterable;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L49c392.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49c398.  v2:= temp @kind object;
  #L49c39a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zipWith`(`io.reactivex.rxjava3.core.Flowable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipWith:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49c3ac.  v0:= "other is null" @kind object;
  #L49c3b0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49c3b6.  call temp:= `zip`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49c3bc.  v2:= temp @kind object;
  #L49c3be.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zipWith`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipWith:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49c3d0.  call temp:= `zip`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49c3d6.  v1:= temp @kind object;
  #L49c3d8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `zipWith`(`io.reactivex.rxjava3.core.Flowable` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Flowable;.zipWith:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L49c3ec.  call temp:= `zip`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.zip:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L49c3f2.  v1:= temp @kind object;
  #L49c3f4.  return v1 @kind object;
}
