record `io.reactivex.rxjava3.core.Observable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.ObservableSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.core.Observable` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a7234.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a723a.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Observable` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.amb:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a0770.  v0:= "sources is null" @kind object;
  #L4a0774.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a077a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableAmb`;
  #L4a077e.  v1:= 0I;
  #L4a0780.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAmb;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L4a0786.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a078c.  v2:= temp @kind object;
  #L4a078e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `ambArray`(`io.reactivex.rxjava3.core.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.ambArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a07a0.  v0:= "sources is null" @kind object;
  #L4a07a4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a07aa.  v0:= length @variable v2;
  #L4a07ac.  if v0 != 0 then goto L4a07ba;
  #L4a07b0.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a07b6.  v2:= temp @kind object;
  #L4a07b8.  return v2 @kind object;
  #L4a07ba.  v1:= 1I;
  #L4a07bc.  if v0 != v1 then goto L4a07d0;
  #L4a07c0.  v0:= 0I;
  #L4a07c2.  v2:= v2[v0] @kind object;
  #L4a07c6.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a07cc.  v2:= temp @kind object;
  #L4a07ce.  return v2 @kind object;
  #L4a07d0.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableAmb`;
  #L4a07d4.  v1:= 0I;
  #L4a07d6.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAmb;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L4a07dc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a07e2.  v2:= temp @kind object;
  #L4a07e4.  return v2 @kind object;
}
procedure `int` `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a0430.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Flowable;.bufferSize:()I` @kind static;
  #L4a0436.  v0:= temp;
  #L4a0438.  return v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v9 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v10 @kind object, `io.reactivex.rxjava3.functions.Function9` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a0c24.  v0:= "source1 is null" @kind object;
  #L4a0c28.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0c2e.  v0:= "source2 is null" @kind object;
  #L4a0c32.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0c38.  v0:= "source3 is null" @kind object;
  #L4a0c3c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0c42.  v0:= "source4 is null" @kind object;
  #L4a0c46.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0c4c.  v0:= "source5 is null" @kind object;
  #L4a0c50.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0c56.  v0:= "source6 is null" @kind object;
  #L4a0c5a.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0c60.  v0:= "source7 is null" @kind object;
  #L4a0c64.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0c6a.  v0:= "source8 is null" @kind object;
  #L4a0c6e.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0c74.  v0:= "source9 is null" @kind object;
  #L4a0c78.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0c7e.  v0:= "combiner is null" @kind object;
  #L4a0c82.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0c88.  v0:= 9I;
  #L4a0c8c.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a0c90.  v1:= 0I;
  #L4a0c92.  v0[v1]:= v2 @kind object;
  #L4a0c96.  v2:= 1I;
  #L4a0c98.  v0[v2]:= v3 @kind object;
  #L4a0c9c.  v2:= 2I;
  #L4a0c9e.  v0[v2]:= v4 @kind object;
  #L4a0ca2.  v2:= 3I;
  #L4a0ca4.  v0[v2]:= v5 @kind object;
  #L4a0ca8.  v2:= 4I;
  #L4a0caa.  v0[v2]:= v6 @kind object;
  #L4a0cae.  v2:= 5I;
  #L4a0cb0.  v0[v2]:= v7 @kind object;
  #L4a0cb4.  v2:= 6I;
  #L4a0cb6.  v0[v2]:= v8 @kind object;
  #L4a0cba.  v2:= 7I;
  #L4a0cbc.  v0[v2]:= v9 @kind object;
  #L4a0cc0.  v2:= 8I;
  #L4a0cc4.  v0[v2]:= v10 @kind object;
  #L4a0cc8.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a0cce.  v2:= temp @kind object;
  #L4a0cd0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a0cd6.  v3:= temp;
  #L4a0cd8.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a0cde.  v2:= temp @kind object;
  #L4a0ce0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v9 @kind object, `io.reactivex.rxjava3.functions.Function8` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a0cf4.  v0:= "source1 is null" @kind object;
  #L4a0cf8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0cfe.  v0:= "source2 is null" @kind object;
  #L4a0d02.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0d08.  v0:= "source3 is null" @kind object;
  #L4a0d0c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0d12.  v0:= "source4 is null" @kind object;
  #L4a0d16.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0d1c.  v0:= "source5 is null" @kind object;
  #L4a0d20.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0d26.  v0:= "source6 is null" @kind object;
  #L4a0d2a.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0d30.  v0:= "source7 is null" @kind object;
  #L4a0d34.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0d3a.  v0:= "source8 is null" @kind object;
  #L4a0d3e.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0d44.  v0:= "combiner is null" @kind object;
  #L4a0d48.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0d4e.  v0:= 8I;
  #L4a0d52.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a0d56.  v1:= 0I;
  #L4a0d58.  v0[v1]:= v2 @kind object;
  #L4a0d5c.  v2:= 1I;
  #L4a0d5e.  v0[v2]:= v3 @kind object;
  #L4a0d62.  v2:= 2I;
  #L4a0d64.  v0[v2]:= v4 @kind object;
  #L4a0d68.  v2:= 3I;
  #L4a0d6a.  v0[v2]:= v5 @kind object;
  #L4a0d6e.  v2:= 4I;
  #L4a0d70.  v0[v2]:= v6 @kind object;
  #L4a0d74.  v2:= 5I;
  #L4a0d76.  v0[v2]:= v7 @kind object;
  #L4a0d7a.  v2:= 6I;
  #L4a0d7c.  v0[v2]:= v8 @kind object;
  #L4a0d80.  v2:= 7I;
  #L4a0d82.  v0[v2]:= v9 @kind object;
  #L4a0d86.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a0d8c.  v2:= temp @kind object;
  #L4a0d8e.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a0d94.  v3:= temp;
  #L4a0d96.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a0d9c.  v2:= temp @kind object;
  #L4a0d9e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.functions.Function7` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a0db0.  v0:= "source1 is null" @kind object;
  #L4a0db4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0dba.  v0:= "source2 is null" @kind object;
  #L4a0dbe.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0dc4.  v0:= "source3 is null" @kind object;
  #L4a0dc8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0dce.  v0:= "source4 is null" @kind object;
  #L4a0dd2.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0dd8.  v0:= "source5 is null" @kind object;
  #L4a0ddc.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0de2.  v0:= "source6 is null" @kind object;
  #L4a0de6.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0dec.  v0:= "source7 is null" @kind object;
  #L4a0df0.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0df6.  v0:= "combiner is null" @kind object;
  #L4a0dfa.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0e00.  v0:= 7I;
  #L4a0e02.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a0e06.  v1:= 0I;
  #L4a0e08.  v0[v1]:= v2 @kind object;
  #L4a0e0c.  v2:= 1I;
  #L4a0e0e.  v0[v2]:= v3 @kind object;
  #L4a0e12.  v2:= 2I;
  #L4a0e14.  v0[v2]:= v4 @kind object;
  #L4a0e18.  v2:= 3I;
  #L4a0e1a.  v0[v2]:= v5 @kind object;
  #L4a0e1e.  v2:= 4I;
  #L4a0e20.  v0[v2]:= v6 @kind object;
  #L4a0e24.  v2:= 5I;
  #L4a0e26.  v0[v2]:= v7 @kind object;
  #L4a0e2a.  v2:= 6I;
  #L4a0e2c.  v0[v2]:= v8 @kind object;
  #L4a0e30.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a0e36.  v2:= temp @kind object;
  #L4a0e38.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a0e3e.  v3:= temp;
  #L4a0e40.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a0e46.  v2:= temp @kind object;
  #L4a0e48.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.functions.Function6` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a0e5c.  v0:= "source1 is null" @kind object;
  #L4a0e60.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0e66.  v0:= "source2 is null" @kind object;
  #L4a0e6a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0e70.  v0:= "source3 is null" @kind object;
  #L4a0e74.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0e7a.  v0:= "source4 is null" @kind object;
  #L4a0e7e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0e84.  v0:= "source5 is null" @kind object;
  #L4a0e88.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0e8e.  v0:= "source6 is null" @kind object;
  #L4a0e92.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0e98.  v0:= "combiner is null" @kind object;
  #L4a0e9c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0ea2.  v0:= 6I;
  #L4a0ea4.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a0ea8.  v1:= 0I;
  #L4a0eaa.  v0[v1]:= v2 @kind object;
  #L4a0eae.  v2:= 1I;
  #L4a0eb0.  v0[v2]:= v3 @kind object;
  #L4a0eb4.  v2:= 2I;
  #L4a0eb6.  v0[v2]:= v4 @kind object;
  #L4a0eba.  v2:= 3I;
  #L4a0ebc.  v0[v2]:= v5 @kind object;
  #L4a0ec0.  v2:= 4I;
  #L4a0ec2.  v0[v2]:= v6 @kind object;
  #L4a0ec6.  v2:= 5I;
  #L4a0ec8.  v0[v2]:= v7 @kind object;
  #L4a0ecc.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a0ed2.  v2:= temp @kind object;
  #L4a0ed4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a0eda.  v3:= temp;
  #L4a0edc.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a0ee2.  v2:= temp @kind object;
  #L4a0ee4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.functions.Function5` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a0ef8.  v0:= "source1 is null" @kind object;
  #L4a0efc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0f02.  v0:= "source2 is null" @kind object;
  #L4a0f06.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0f0c.  v0:= "source3 is null" @kind object;
  #L4a0f10.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0f16.  v0:= "source4 is null" @kind object;
  #L4a0f1a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0f20.  v0:= "source5 is null" @kind object;
  #L4a0f24.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0f2a.  v0:= "combiner is null" @kind object;
  #L4a0f2e.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0f34.  v0:= 5I;
  #L4a0f36.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a0f3a.  v1:= 0I;
  #L4a0f3c.  v0[v1]:= v2 @kind object;
  #L4a0f40.  v2:= 1I;
  #L4a0f42.  v0[v2]:= v3 @kind object;
  #L4a0f46.  v2:= 2I;
  #L4a0f48.  v0[v2]:= v4 @kind object;
  #L4a0f4c.  v2:= 3I;
  #L4a0f4e.  v0[v2]:= v5 @kind object;
  #L4a0f52.  v2:= 4I;
  #L4a0f54.  v0[v2]:= v6 @kind object;
  #L4a0f58.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a0f5e.  v2:= temp @kind object;
  #L4a0f60.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a0f66.  v3:= temp;
  #L4a0f68.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a0f6e.  v2:= temp @kind object;
  #L4a0f70.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.functions.Function4` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a0f84.  v0:= "source1 is null" @kind object;
  #L4a0f88.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0f8e.  v0:= "source2 is null" @kind object;
  #L4a0f92.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0f98.  v0:= "source3 is null" @kind object;
  #L4a0f9c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0fa2.  v0:= "source4 is null" @kind object;
  #L4a0fa6.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0fac.  v0:= "combiner is null" @kind object;
  #L4a0fb0.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0fb6.  v0:= 4I;
  #L4a0fb8.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a0fbc.  v1:= 0I;
  #L4a0fbe.  v0[v1]:= v2 @kind object;
  #L4a0fc2.  v2:= 1I;
  #L4a0fc4.  v0[v2]:= v3 @kind object;
  #L4a0fc8.  v2:= 2I;
  #L4a0fca.  v0[v2]:= v4 @kind object;
  #L4a0fce.  v2:= 3I;
  #L4a0fd0.  v0[v2]:= v5 @kind object;
  #L4a0fd4.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a0fda.  v2:= temp @kind object;
  #L4a0fdc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a0fe2.  v3:= temp;
  #L4a0fe4.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a0fea.  v2:= temp @kind object;
  #L4a0fec.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.functions.Function3` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a1000.  v0:= "source1 is null" @kind object;
  #L4a1004.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a100a.  v0:= "source2 is null" @kind object;
  #L4a100e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1014.  v0:= "source3 is null" @kind object;
  #L4a1018.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a101e.  v0:= "combiner is null" @kind object;
  #L4a1022.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1028.  v0:= 3I;
  #L4a102a.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a102e.  v1:= 0I;
  #L4a1030.  v0[v1]:= v2 @kind object;
  #L4a1034.  v2:= 1I;
  #L4a1036.  v0[v2]:= v3 @kind object;
  #L4a103a.  v2:= 2I;
  #L4a103c.  v0[v2]:= v4 @kind object;
  #L4a1040.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a1046.  v2:= temp @kind object;
  #L4a1048.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a104e.  v3:= temp;
  #L4a1050.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1056.  v2:= temp @kind object;
  #L4a1058.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a106c.  v0:= "source1 is null" @kind object;
  #L4a1070.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1076.  v0:= "source2 is null" @kind object;
  #L4a107a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1080.  v0:= "combiner is null" @kind object;
  #L4a1084.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a108a.  v0:= 2I;
  #L4a108c.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a1090.  v1:= 0I;
  #L4a1092.  v0[v1]:= v2 @kind object;
  #L4a1096.  v2:= 1I;
  #L4a1098.  v0[v2]:= v3 @kind object;
  #L4a109c.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a10a2.  v2:= temp @kind object;
  #L4a10a4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a10aa.  v3:= temp;
  #L4a10ac.  call temp:= `combineLatestArray`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a10b2.  v2:= temp @kind object;
  #L4a10b4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`java.lang.Iterable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a10c8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a10ce.  v0:= temp;
  #L4a10d0.  call temp:= `combineLatest`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a10d6.  v1:= temp @kind object;
  #L4a10d8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatest`(`java.lang.Iterable` v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a10ec.  v0:= "sources is null" @kind object;
  #L4a10f0.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a10f6.  v0:= "combiner is null" @kind object;
  #L4a10fa.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1100.  v0:= "bufferSize" @kind object;
  #L4a1104.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a110a.  v5:= v9 ^< 1;
  #L4a110e.  v9:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest`;
  #L4a1112.  v2:= 0I;
  #L4a1114.  v6:= 0I;
  #L4a1116.  v1:= v9 @kind object;
  #L4a1118.  v3:= v7 @kind object;
  #L4a111a.  v4:= v8 @kind object;
  #L4a111c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4a1122.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1128.  v7:= temp @kind object;
  #L4a112a.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatestArray`(`io.reactivex.rxjava3.core.ObservableSource`[] v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a113c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a1142.  v0:= temp;
  #L4a1144.  call temp:= `combineLatestArray`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a114a.  v1:= temp @kind object;
  #L4a114c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatestArray`(`io.reactivex.rxjava3.core.ObservableSource`[] v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArray:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a1160.  v0:= "sources is null" @kind object;
  #L4a1164.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a116a.  v0:= length @variable v7;
  #L4a116c.  if v0 != 0 then goto L4a117a;
  #L4a1170.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1176.  v7:= temp @kind object;
  #L4a1178.  return v7 @kind object;
  #L4a117a.  v0:= "combiner is null" @kind object;
  #L4a117e.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1184.  v0:= "bufferSize" @kind object;
  #L4a1188.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a118e.  v5:= v9 ^< 1;
  #L4a1192.  v9:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest`;
  #L4a1196.  v3:= 0I;
  #L4a1198.  v6:= 0I;
  #L4a119a.  v1:= v9 @kind object;
  #L4a119c.  v2:= v7 @kind object;
  #L4a119e.  v4:= v8 @kind object;
  #L4a11a0.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4a11a6.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a11ac.  v7:= temp @kind object;
  #L4a11ae.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatestArrayDelayError`(`io.reactivex.rxjava3.core.ObservableSource`[] v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArrayDelayError:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a11c0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a11c6.  v0:= temp;
  #L4a11c8.  call temp:= `combineLatestArrayDelayError`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArrayDelayError:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a11ce.  v1:= temp @kind object;
  #L4a11d0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatestArrayDelayError`(`io.reactivex.rxjava3.core.ObservableSource`[] v6 @kind object, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestArrayDelayError:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a11e4.  v0:= "sources is null" @kind object;
  #L4a11e8.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a11ee.  v0:= "combiner is null" @kind object;
  #L4a11f2.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a11f8.  v0:= "bufferSize" @kind object;
  #L4a11fc.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a1202.  v0:= length @variable v6;
  #L4a1204.  if v0 != 0 then goto L4a1212;
  #L4a1208.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a120e.  v6:= temp @kind object;
  #L4a1210.  return v6 @kind object;
  #L4a1212.  v4:= v8 ^< 1;
  #L4a1216.  v8:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest`;
  #L4a121a.  v2:= 0I;
  #L4a121c.  v5:= 1I;
  #L4a121e.  v0:= v8 @kind object;
  #L4a1220.  v1:= v6 @kind object;
  #L4a1222.  v3:= v7 @kind object;
  #L4a1224.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4a122a.  call temp:= `onAssembly`(v8) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1230.  v6:= temp @kind object;
  #L4a1232.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatestDelayError`(`java.lang.Iterable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a1244.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a124a.  v0:= temp;
  #L4a124c.  call temp:= `combineLatestDelayError`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1252.  v1:= temp @kind object;
  #L4a1254.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `combineLatestDelayError`(`java.lang.Iterable` v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a1268.  v0:= "sources is null" @kind object;
  #L4a126c.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1272.  v0:= "combiner is null" @kind object;
  #L4a1276.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a127c.  v0:= "bufferSize" @kind object;
  #L4a1280.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a1286.  v5:= v9 ^< 1;
  #L4a128a.  v9:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCombineLatest`;
  #L4a128e.  v2:= 0I;
  #L4a1290.  v6:= 1I;
  #L4a1292.  v1:= v9 @kind object;
  #L4a1294.  v3:= v7 @kind object;
  #L4a1296.  v4:= v8 @kind object;
  #L4a1298.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4a129e.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a12a4.  v7:= temp @kind object;
  #L4a12a6.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concat`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a12ec.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a12f2.  v0:= temp;
  #L4a12f4.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a12fa.  v1:= temp @kind object;
  #L4a12fc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concat`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a1310.  v0:= "sources is null" @kind object;
  #L4a1314.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a131a.  v0:= "bufferSize" @kind object;
  #L4a131e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a1324.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap`;
  #L4a1328.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a132e.  v1:= temp @kind object;
  #L4a1330.  v2:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a1334.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4a133a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1340.  v3:= temp @kind object;
  #L4a1342.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concat`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a1354.  v0:= "source1 is null" @kind object;
  #L4a1358.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a135e.  v0:= "source2 is null" @kind object;
  #L4a1362.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1368.  v0:= 2I;
  #L4a136a.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a136e.  v1:= 0I;
  #L4a1370.  v0[v1]:= v2 @kind object;
  #L4a1374.  v2:= 1I;
  #L4a1376.  v0[v2]:= v3 @kind object;
  #L4a137a.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1380.  v2:= temp @kind object;
  #L4a1382.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concat`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a1394.  v0:= "source1 is null" @kind object;
  #L4a1398.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a139e.  v0:= "source2 is null" @kind object;
  #L4a13a2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a13a8.  v0:= "source3 is null" @kind object;
  #L4a13ac.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a13b2.  v0:= 3I;
  #L4a13b4.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a13b8.  v1:= 0I;
  #L4a13ba.  v0[v1]:= v2 @kind object;
  #L4a13be.  v2:= 1I;
  #L4a13c0.  v0[v2]:= v3 @kind object;
  #L4a13c4.  v2:= 2I;
  #L4a13c6.  v0[v2]:= v4 @kind object;
  #L4a13ca.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a13d0.  v2:= temp @kind object;
  #L4a13d2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concat`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a13e4.  v0:= "source1 is null" @kind object;
  #L4a13e8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a13ee.  v0:= "source2 is null" @kind object;
  #L4a13f2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a13f8.  v0:= "source3 is null" @kind object;
  #L4a13fc.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1402.  v0:= "source4 is null" @kind object;
  #L4a1406.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a140c.  v0:= 4I;
  #L4a140e.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a1412.  v1:= 0I;
  #L4a1414.  v0[v1]:= v2 @kind object;
  #L4a1418.  v2:= 1I;
  #L4a141a.  v0[v2]:= v3 @kind object;
  #L4a141e.  v2:= 2I;
  #L4a1420.  v0[v2]:= v4 @kind object;
  #L4a1424.  v2:= 3I;
  #L4a1426.  v0[v2]:= v5 @kind object;
  #L4a142a.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1430.  v2:= temp @kind object;
  #L4a1432.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concat`(`java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a1444.  v0:= "sources is null" @kind object;
  #L4a1448.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a144e.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1454.  v3:= temp @kind object;
  #L4a1456.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a145c.  v0:= temp @kind object;
  #L4a145e.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a1464.  v1:= temp;
  #L4a1466.  v2:= 0I;
  #L4a1468.  call temp:= `concatMapDelayError`(v3, v0, v2, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a146e.  v3:= temp @kind object;
  #L4a1470.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatArray`(`io.reactivex.rxjava3.core.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a1484.  v0:= "sources is null" @kind object;
  #L4a1488.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a148e.  v0:= length @variable v4;
  #L4a1490.  if v0 != 0 then goto L4a149e;
  #L4a1494.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a149a.  v4:= temp @kind object;
  #L4a149c.  return v4 @kind object;
  #L4a149e.  v0:= length @variable v4;
  #L4a14a0.  v1:= 1I;
  #L4a14a2.  if v0 != v1 then goto L4a14b6;
  #L4a14a6.  v0:= 0I;
  #L4a14a8.  v4:= v4[v0] @kind object;
  #L4a14ac.  call temp:= `wrap`(v4) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a14b2.  v4:= temp @kind object;
  #L4a14b4.  return v4 @kind object;
  #L4a14b6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap`;
  #L4a14ba.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a14c0.  v4:= temp @kind object;
  #L4a14c2.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a14c8.  v1:= temp @kind object;
  #L4a14ca.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a14d0.  v2:= temp;
  #L4a14d2.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a14d6.  call `<init>`(v0, v4, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4a14dc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a14e2.  v4:= temp @kind object;
  #L4a14e4.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatArrayDelayError`(`io.reactivex.rxjava3.core.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArrayDelayError:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a14f8.  v0:= "sources is null" @kind object;
  #L4a14fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1502.  v0:= length @variable v2;
  #L4a1504.  if v0 != 0 then goto L4a1512;
  #L4a1508.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a150e.  v2:= temp @kind object;
  #L4a1510.  return v2 @kind object;
  #L4a1512.  v0:= length @variable v2;
  #L4a1514.  v1:= 1I;
  #L4a1516.  if v0 != v1 then goto L4a152a;
  #L4a151a.  v0:= 0I;
  #L4a151c.  v2:= v2[v0] @kind object;
  #L4a1520.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1526.  v2:= temp @kind object;
  #L4a1528.  return v2 @kind object;
  #L4a152a.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1530.  v2:= temp @kind object;
  #L4a1532.  call temp:= `concatDelayError`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.concatDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1538.  v2:= temp @kind object;
  #L4a153a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatArrayEager`(`int` v2 , `int` v3 , `io.reactivex.rxjava3.core.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArrayEager:(II[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a154c.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1552.  v4:= temp @kind object;
  #L4a1554.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a155a.  v0:= temp @kind object;
  #L4a155c.  v1:= 0I;
  #L4a155e.  call temp:= `concatMapEagerDelayError`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1564.  v2:= temp @kind object;
  #L4a1566.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatArrayEager`(`io.reactivex.rxjava3.core.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArrayEager:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a1578.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a157e.  v0:= temp;
  #L4a1580.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a1586.  v1:= temp;
  #L4a1588.  call temp:= `concatArrayEager`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArrayEager:(II[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a158e.  v2:= temp @kind object;
  #L4a1590.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatArrayEagerDelayError`(`int` v2 , `int` v3 , `io.reactivex.rxjava3.core.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArrayEagerDelayError:(II[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a15a4.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a15aa.  v4:= temp @kind object;
  #L4a15ac.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a15b2.  v0:= temp @kind object;
  #L4a15b4.  v1:= 1I;
  #L4a15b6.  call temp:= `concatMapEagerDelayError`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a15bc.  v2:= temp @kind object;
  #L4a15be.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatArrayEagerDelayError`(`io.reactivex.rxjava3.core.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArrayEagerDelayError:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a15d0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a15d6.  v0:= temp;
  #L4a15d8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a15de.  v1:= temp;
  #L4a15e0.  call temp:= `concatArrayEagerDelayError`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArrayEagerDelayError:(II[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a15e6.  v2:= temp @kind object;
  #L4a15e8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a15fc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a1602.  v0:= temp;
  #L4a1604.  v1:= 1I;
  #L4a1606.  call temp:= `concatDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;IZ)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a160c.  v2:= temp @kind object;
  #L4a160e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;IZ)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a1620.  v0:= "sources is null" @kind object;
  #L4a1624.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a162a.  v0:= "bufferSize is null" @kind object;
  #L4a162e.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a1634.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap`;
  #L4a1638.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a163e.  v1:= temp @kind object;
  #L4a1640.  if v4 == 0 then goto L4a164a;
  #L4a1644.  v4:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a1648.  goto L4a164e;
  #L4a164a.  v4:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a164e.  call `<init>`(v0, v2, v1, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4a1654.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a165a.  v2:= temp @kind object;
  #L4a165c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a1670.  v0:= "sources is null" @kind object;
  #L4a1674.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a167a.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1680.  v1:= temp @kind object;
  #L4a1682.  call temp:= `concatDelayError`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1688.  v1:= temp @kind object;
  #L4a168a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEager`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEager:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a169c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a16a2.  v0:= temp;
  #L4a16a4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a16aa.  v1:= temp;
  #L4a16ac.  call temp:= `concatEager`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEager:(Lio/reactivex/rxjava3/core/ObservableSource;II)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a16b2.  v2:= temp @kind object;
  #L4a16b4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEager`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEager:(Lio/reactivex/rxjava3/core/ObservableSource;II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a16c8.  call temp:= `wrap`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a16ce.  v1:= temp @kind object;
  #L4a16d0.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a16d6.  v0:= temp @kind object;
  #L4a16d8.  call temp:= `concatMapEager`(v1, v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;II)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a16de.  v1:= temp @kind object;
  #L4a16e0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEager`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEager:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a16f4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a16fa.  v0:= temp;
  #L4a16fc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a1702.  v1:= temp;
  #L4a1704.  call temp:= `concatEager`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEager:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a170a.  v2:= temp @kind object;
  #L4a170c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEager`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEager:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a1720.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1726.  v2:= temp @kind object;
  #L4a1728.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a172e.  v0:= temp @kind object;
  #L4a1730.  v1:= 0I;
  #L4a1732.  call temp:= `concatMapEagerDelayError`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1738.  v2:= temp @kind object;
  #L4a173a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEagerDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEagerDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a174c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a1752.  v0:= temp;
  #L4a1754.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a175a.  v1:= temp;
  #L4a175c.  call temp:= `concatEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEagerDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;II)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1762.  v2:= temp @kind object;
  #L4a1764.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEagerDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEagerDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a1778.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a177e.  v2:= temp @kind object;
  #L4a1780.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a1786.  v0:= temp @kind object;
  #L4a1788.  v1:= 1I;
  #L4a178a.  call temp:= `concatMapEagerDelayError`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1790.  v2:= temp @kind object;
  #L4a1792.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEagerDelayError`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEagerDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a17a4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a17aa.  v0:= temp;
  #L4a17ac.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a17b2.  v1:= temp;
  #L4a17b4.  call temp:= `concatEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEagerDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a17ba.  v2:= temp @kind object;
  #L4a17bc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatEagerDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatEagerDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a17d0.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a17d6.  v2:= temp @kind object;
  #L4a17d8.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a17de.  v0:= temp @kind object;
  #L4a17e0.  v1:= 1I;
  #L4a17e2.  call temp:= `concatMapEagerDelayError`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a17e8.  v2:= temp @kind object;
  #L4a17ea.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `create`(`io.reactivex.rxjava3.core.ObservableOnSubscribe` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.create:(Lio/reactivex/rxjava3/core/ObservableOnSubscribe;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a1d7c.  v0:= "source is null" @kind object;
  #L4a1d80.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1d86.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCreate`;
  #L4a1d8a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCreate;.<init>:(Lio/reactivex/rxjava3/core/ObservableOnSubscribe;)V` @kind direct;
  #L4a1d90.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1d96.  v1:= temp @kind object;
  #L4a1d98.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `defer`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.defer:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a1e70.  v0:= "supplier is null" @kind object;
  #L4a1e74.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1e7a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDefer`;
  #L4a1e7e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDefer;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a1e84.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1e8a.  v1:= temp @kind object;
  #L4a1e8c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnEach`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Consumer` v8 @kind object, `io.reactivex.rxjava3.functions.Consumer` v9 @kind object, `io.reactivex.rxjava3.functions.Action` v10 @kind object, `io.reactivex.rxjava3.functions.Action` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnEach:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a22e0.  v0:= "onNext is null" @kind object;
  #L4a22e4.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a22ea.  v0:= "onError is null" @kind object;
  #L4a22ee.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a22f4.  v0:= "onComplete is null" @kind object;
  #L4a22f8.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a22fe.  v0:= "onAfterTerminate is null" @kind object;
  #L4a2302.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2308.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnEach`;
  #L4a230c.  v1:= v0 @kind object;
  #L4a230e.  v2:= v7 @kind object;
  #L4a2310.  v3:= v8 @kind object;
  #L4a2312.  v4:= v9 @kind object;
  #L4a2314.  v5:= v10 @kind object;
  #L4a2316.  v6:= v11 @kind object;
  #L4a2318.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnEach;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L4a231e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2324.  v8:= temp @kind object;
  #L4a2326.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2418.  v0:= `@@io.reactivex.rxjava3.internal.operators.observable.ObservableEmpty.INSTANCE` @type ^`io.reactivex.rxjava3.core.Observable` @kind object;
  #L4a241c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2422.  v0:= temp @kind object;
  #L4a2424.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `error`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2438.  v0:= "supplier is null" @kind object;
  #L4a243c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2442.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableError`;
  #L4a2446.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableError;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a244c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2452.  v1:= temp @kind object;
  #L4a2454.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.error:(Ljava/lang/Throwable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2468.  v0:= "throwable is null" @kind object;
  #L4a246c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2472.  call temp:= `justSupplier`(v1) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justSupplier:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a2478.  v1:= temp @kind object;
  #L4a247a.  call temp:= `error`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2480.  v1:= temp @kind object;
  #L4a2482.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromAction`(`io.reactivex.rxjava3.functions.Action` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromAction:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2888.  v0:= "action is null" @kind object;
  #L4a288c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2892.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromAction`;
  #L4a2896.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromAction;.<init>:(Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L4a289c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a28a2.  v1:= temp @kind object;
  #L4a28a4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromArray`(`java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a28b8.  v0:= "items is null" @kind object;
  #L4a28bc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a28c2.  v0:= length @variable v2;
  #L4a28c4.  if v0 != 0 then goto L4a28d2;
  #L4a28c8.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a28ce.  v2:= temp @kind object;
  #L4a28d0.  return v2 @kind object;
  #L4a28d2.  v0:= length @variable v2;
  #L4a28d4.  v1:= 1I;
  #L4a28d6.  if v0 != v1 then goto L4a28ea;
  #L4a28da.  v0:= 0I;
  #L4a28dc.  v2:= v2[v0] @kind object;
  #L4a28e0.  call temp:= `just`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a28e6.  v2:= temp @kind object;
  #L4a28e8.  return v2 @kind object;
  #L4a28ea.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromArray`;
  #L4a28ee.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromArray;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L4a28f4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a28fa.  v2:= temp @kind object;
  #L4a28fc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2910.  v0:= "callable is null" @kind object;
  #L4a2914.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a291a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromCallable`;
  #L4a291e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L4a2924.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a292a.  v1:= temp @kind object;
  #L4a292c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromCompletable`(`io.reactivex.rxjava3.core.CompletableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromCompletable:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2940.  v0:= "completableSource is null" @kind object;
  #L4a2944.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a294a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromCompletable`;
  #L4a294e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromCompletable;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L4a2954.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a295a.  v1:= temp @kind object;
  #L4a295c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromCompletionStage`(`java.util.concurrent.CompletionStage` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromCompletionStage:(Ljava/util/concurrent/CompletionStage;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2970.  v0:= "stage is null" @kind object;
  #L4a2974.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a297a.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableFromCompletionStage`;
  #L4a297e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromCompletionStage;.<init>:(Ljava/util/concurrent/CompletionStage;)V` @kind direct;
  #L4a2984.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a298a.  v1:= temp @kind object;
  #L4a298c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromFuture`(`java.util.concurrent.Future` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a29a0.  v0:= "future is null" @kind object;
  #L4a29a4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a29aa.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture`;
  #L4a29ae.  v1:= 0L;
  #L4a29b2.  v3:= 0I;
  #L4a29b4.  call `<init>`(v0, v4, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L4a29ba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a29c0.  v4:= temp @kind object;
  #L4a29c2.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a29d4.  v0:= "future is null" @kind object;
  #L4a29d8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a29de.  v0:= "unit is null" @kind object;
  #L4a29e2.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a29e8.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromFuture`;
  #L4a29ec.  call `<init>`(v0, v1, v2, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L4a29f2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a29f8.  v1:= temp @kind object;
  #L4a29fa.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromIterable`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2a0c.  v0:= "source is null" @kind object;
  #L4a2a10.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2a16.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromIterable`;
  #L4a2a1a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L4a2a20.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2a26.  v1:= temp @kind object;
  #L4a2a28.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromMaybe`(`io.reactivex.rxjava3.core.MaybeSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromMaybe:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2a3c.  v0:= "maybe is null" @kind object;
  #L4a2a40.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2a46.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToObservable`;
  #L4a2a4a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToObservable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L4a2a50.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2a56.  v1:= temp @kind object;
  #L4a2a58.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromOptional`(`java.util.Optional` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromOptional:(Ljava/util/Optional;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2a6c.  v0:= "optional is null" @kind object;
  #L4a2a70.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2a76.  v0:= `@@io.reactivex.rxjava3.core.b.a` @type ^`io.reactivex.rxjava3.core.b` @kind object;
  #L4a2a7a.  call temp:= `map`(v1, v0) @signature `Ljava/util/Optional;.map:(Ljava/util/function/Function;)Ljava/util/Optional;` @kind virtual;
  #L4a2a80.  v1:= temp @kind object;
  #L4a2a82.  v0:= `@@io.reactivex.rxjava3.core.c.a` @type ^`io.reactivex.rxjava3.core.c` @kind object;
  #L4a2a86.  call temp:= `orElseGet`(v1, v0) @signature `Ljava/util/Optional;.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;` @kind virtual;
  #L4a2a8c.  v1:= temp @kind object;
  #L4a2a8e.  v1:= (`io.reactivex.rxjava3.core.Observable`) v1 @kind object;
  #L4a2a92.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2aa4.  v0:= "publisher is null" @kind object;
  #L4a2aa8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2aae.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromPublisher`;
  #L4a2ab2.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L4a2ab8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2abe.  v1:= temp @kind object;
  #L4a2ac0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromRunnable`(`java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromRunnable:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2ad4.  v0:= "run is null" @kind object;
  #L4a2ad8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2ade.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromRunnable`;
  #L4a2ae2.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromRunnable;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L4a2ae8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2aee.  v1:= temp @kind object;
  #L4a2af0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromSingle`(`io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromSingle:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2b04.  v0:= "source is null" @kind object;
  #L4a2b08.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2b0e.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleToObservable`;
  #L4a2b12.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToObservable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a2b18.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2b1e.  v1:= temp @kind object;
  #L4a2b20.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromStream`(`java.util.stream.Stream` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromStream:(Ljava/util/stream/Stream;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2b34.  v0:= "stream is null" @kind object;
  #L4a2b38.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2b3e.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableFromStream`;
  #L4a2b42.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFromStream;.<init>:(Ljava/util/stream/Stream;)V` @kind direct;
  #L4a2b48.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2b4e.  v1:= temp @kind object;
  #L4a2b50.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `fromSupplier`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.fromSupplier:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2b64.  v0:= "supplier is null" @kind object;
  #L4a2b68.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2b6e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromSupplier`;
  #L4a2b72.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromSupplier;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a2b78.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2b7e.  v1:= temp @kind object;
  #L4a2b80.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `generate`(`io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a2b94.  v0:= "generator is null" @kind object;
  #L4a2b98.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2b9e.  call temp:= `nullSupplier`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.nullSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a2ba4.  v0:= temp @kind object;
  #L4a2ba6.  call temp:= `simpleGenerator`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.simpleGenerator:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/BiFunction;` @kind static;
  #L4a2bac.  v2:= temp @kind object;
  #L4a2bae.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a2bb4.  v1:= temp @kind object;
  #L4a2bb6.  call temp:= `generate`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2bbc.  v2:= temp @kind object;
  #L4a2bbe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2bd0.  v0:= "generator is null" @kind object;
  #L4a2bd4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2bda.  call temp:= `simpleBiGenerator`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.simpleBiGenerator:(Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/functions/BiFunction;` @kind static;
  #L4a2be0.  v2:= temp @kind object;
  #L4a2be2.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a2be8.  v0:= temp @kind object;
  #L4a2bea.  call temp:= `generate`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2bf0.  v1:= temp @kind object;
  #L4a2bf2.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2c04.  v0:= "generator is null" @kind object;
  #L4a2c08.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2c0e.  call temp:= `simpleBiGenerator`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.simpleBiGenerator:(Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/functions/BiFunction;` @kind static;
  #L4a2c14.  v2:= temp @kind object;
  #L4a2c16.  call temp:= `generate`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2c1c.  v1:= temp @kind object;
  #L4a2c1e.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2c30.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a2c36.  v0:= temp @kind object;
  #L4a2c38.  call temp:= `generate`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2c3e.  v1:= temp @kind object;
  #L4a2c40.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `generate`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.generate:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a2c54.  v0:= "initialState is null" @kind object;
  #L4a2c58.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2c5e.  v0:= "generator is null" @kind object;
  #L4a2c62.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2c68.  v0:= "disposeState is null" @kind object;
  #L4a2c6c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2c72.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableGenerate`;
  #L4a2c76.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGenerate;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L4a2c7c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2c82.  v1:= temp @kind object;
  #L4a2c84.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `interval`(`long` v6 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a2e50.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a2e56.  v5:= temp @kind object;
  #L4a2e58.  v0:= v6 @kind wide;
  #L4a2e5a.  v2:= v8 @kind wide;
  #L4a2e5c.  v4:= v10 @kind object;
  #L4a2e5e.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2e64.  v6:= temp @kind object;
  #L4a2e66.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `interval`(`long` v8 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a2e78.  v0:= "unit is null" @kind object;
  #L4a2e7c.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2e82.  v0:= "scheduler is null" @kind object;
  #L4a2e86.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2e8c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableInterval`;
  #L4a2e90.  v1:= 0L;
  #L4a2e94.  call temp:= `max`(v1, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L4a2e9a.  v8:= temp @kind wide;
  #L4a2e9c.  call temp:= `max`(v1, v10) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L4a2ea2.  v4:= temp @kind wide;
  #L4a2ea4.  v1:= v0 @kind object;
  #L4a2ea6.  v2:= v8 @kind wide;
  #L4a2ea8.  v6:= v12 @kind object;
  #L4a2eaa.  v7:= v13 @kind object;
  #L4a2eac.  call `<init>`(v1, v2, v4, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInterval;.<init>:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a2eb2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2eb8.  v8:= temp @kind object;
  #L4a2eba.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `interval`(`long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.interval:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a2e04.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a2e0a.  v5:= temp @kind object;
  #L4a2e0c.  v0:= v6 @kind wide;
  #L4a2e0e.  v2:= v6 @kind wide;
  #L4a2e10.  v4:= v8 @kind object;
  #L4a2e12.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2e18.  v6:= temp @kind object;
  #L4a2e1a.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `interval`(`long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object, `io.reactivex.rxjava3.core.Scheduler` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.interval:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a2e2c.  v0:= v6 @kind wide;
  #L4a2e2e.  v2:= v6 @kind wide;
  #L4a2e30.  v4:= v8 @kind object;
  #L4a2e32.  v5:= v9 @kind object;
  #L4a2e34.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2e3a.  v6:= temp @kind object;
  #L4a2e3c.  return v6 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `intervalRange`(`long` v10 , `long` v12 , `long` v14 , `long` v16 , `java.util.concurrent.TimeUnit` v18 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4a2ecc.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a2ed2.  v9:= temp @kind object;
  #L4a2ed4.  v0:= v10 @kind wide;
  #L4a2ed6.  v2:= v12 @kind wide;
  #L4a2ed8.  v4:= v14 @kind wide;
  #L4a2eda.  v6:= v16 @kind wide;
  #L4a2ede.  v8:= v18 @kind object;
  #L4a2ee2.  call temp:= `intervalRange`(v0, v2, v4, v6, v8, v9) @signature `Lio/reactivex/rxjava3/core/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2ee8.  v0:= temp @kind object;
  #L4a2eea.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `intervalRange`(`long` v16 , `long` v18 , `long` v20 , `long` v22 , `java.util.concurrent.TimeUnit` v24 @kind object, `io.reactivex.rxjava3.core.Scheduler` v25 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L4a2efc.  v0:= v18 @kind wide;
  #L4a2f00.  v2:= v20 @kind wide;
  #L4a2f04.  v9:= v24 @kind object;
  #L4a2f08.  v10:= v25 @kind object;
  #L4a2f0c.  v4:= 0L;
  #L4a2f10.  v6:= lcmp(v0, v4);
  #L4a2f14.  if v6 < 0 then goto L4a2faa;
  #L4a2f18.  if v6 != 0 then goto L4a2f2e;
  #L4a2f1c.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2f22.  v0:= temp @kind object;
  #L4a2f24.  call temp:= `delay`(v0, v2, v9, v10) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a2f2a.  v0:= temp @kind object;
  #L4a2f2c.  return v0 @kind object;
  #L4a2f2e.  v6:= 1L;
  #L4a2f32.  v0:= v0 - v6 @kind long;
  #L4a2f34.  v6:= v16 + v0 @kind long;
  #L4a2f38.  v0:= lcmp(v16, v4);
  #L4a2f3c.  if v0 <= 0 then goto L4a2f5a;
  #L4a2f40.  v0:= lcmp(v6, v4);
  #L4a2f44.  if v0 < 0 then goto L4a2f4a;
  #L4a2f48.  goto L4a2f5a;
  #L4a2f4a.  v0:= new `java.lang.IllegalArgumentException`;
  #L4a2f4e.  v1:= "Overflow! start + count is bigger than Long.MAX_VALUE" @kind object;
  #L4a2f52.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a2f58.  throw v0;
  #L4a2f5a.  v0:= "unit is null" @kind object;
  #L4a2f5e.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2f64.  v0:= "scheduler is null" @kind object;
  #L4a2f68.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2f6e.  v11:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange`;
  #L4a2f72.  call temp:= `max`(v4, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L4a2f78.  v12:= temp @kind wide;
  #L4a2f7a.  v0:= v22 @kind wide;
  #L4a2f7e.  call temp:= `max`(v4, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L4a2f84.  v14:= temp @kind wide;
  #L4a2f86.  v0:= v11 @kind object;
  #L4a2f88.  v1:= v16 @kind wide;
  #L4a2f8c.  v3:= v6 @kind wide;
  #L4a2f8e.  v5:= v12 @kind wide;
  #L4a2f90.  v7:= v14 @kind wide;
  #L4a2f92.  v9:= v24 @kind object;
  #L4a2f96.  v10:= v25 @kind object;
  #L4a2f9a.  call `<init>`(v0, v1, v3, v5, v7, v9, v10) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableIntervalRange;.<init>:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a2fa0.  call temp:= `onAssembly`(v11) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2fa6.  v0:= temp @kind object;
  #L4a2fa8.  return v0 @kind object;
  #L4a2faa.  v2:= new `java.lang.IllegalArgumentException`;
  #L4a2fae.  v3:= new `java.lang.StringBuilder`;
  #L4a2fb2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a2fb8.  v4:= "count >= 0 required but it was " @kind object;
  #L4a2fbc.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a2fc2.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a2fc8.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a2fce.  v0:= temp @kind object;
  #L4a2fd0.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a2fd6.  throw v2;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a3040.  v0:= "item is null" @kind object;
  #L4a3044.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a304a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableJust`;
  #L4a304e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableJust;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4a3054.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a305a.  v1:= temp @kind object;
  #L4a305c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a3070.  v0:= "item1 is null" @kind object;
  #L4a3074.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a307a.  v0:= "item2 is null" @kind object;
  #L4a307e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3084.  v0:= 2I;
  #L4a3086.  v0:= new `java.lang.Object`[v0];
  #L4a308a.  v1:= 0I;
  #L4a308c.  v0[v1]:= v2 @kind object;
  #L4a3090.  v2:= 1I;
  #L4a3092.  v0[v2]:= v3 @kind object;
  #L4a3096.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a309c.  v2:= temp @kind object;
  #L4a309e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a30b0.  v0:= "item1 is null" @kind object;
  #L4a30b4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a30ba.  v0:= "item2 is null" @kind object;
  #L4a30be.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a30c4.  v0:= "item3 is null" @kind object;
  #L4a30c8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a30ce.  v0:= 3I;
  #L4a30d0.  v0:= new `java.lang.Object`[v0];
  #L4a30d4.  v1:= 0I;
  #L4a30d6.  v0[v1]:= v2 @kind object;
  #L4a30da.  v2:= 1I;
  #L4a30dc.  v0[v2]:= v3 @kind object;
  #L4a30e0.  v2:= 2I;
  #L4a30e2.  v0[v2]:= v4 @kind object;
  #L4a30e6.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a30ec.  v2:= temp @kind object;
  #L4a30ee.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a3100.  v0:= "item1 is null" @kind object;
  #L4a3104.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a310a.  v0:= "item2 is null" @kind object;
  #L4a310e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3114.  v0:= "item3 is null" @kind object;
  #L4a3118.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a311e.  v0:= "item4 is null" @kind object;
  #L4a3122.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3128.  v0:= 4I;
  #L4a312a.  v0:= new `java.lang.Object`[v0];
  #L4a312e.  v1:= 0I;
  #L4a3130.  v0[v1]:= v2 @kind object;
  #L4a3134.  v2:= 1I;
  #L4a3136.  v0[v2]:= v3 @kind object;
  #L4a313a.  v2:= 2I;
  #L4a313c.  v0[v2]:= v4 @kind object;
  #L4a3140.  v2:= 3I;
  #L4a3142.  v0[v2]:= v5 @kind object;
  #L4a3146.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a314c.  v2:= temp @kind object;
  #L4a314e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a3160.  v0:= "item1 is null" @kind object;
  #L4a3164.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a316a.  v0:= "item2 is null" @kind object;
  #L4a316e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3174.  v0:= "item3 is null" @kind object;
  #L4a3178.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a317e.  v0:= "item4 is null" @kind object;
  #L4a3182.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3188.  v0:= "item5 is null" @kind object;
  #L4a318c.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3192.  v0:= 5I;
  #L4a3194.  v0:= new `java.lang.Object`[v0];
  #L4a3198.  v1:= 0I;
  #L4a319a.  v0[v1]:= v2 @kind object;
  #L4a319e.  v2:= 1I;
  #L4a31a0.  v0[v2]:= v3 @kind object;
  #L4a31a4.  v2:= 2I;
  #L4a31a6.  v0[v2]:= v4 @kind object;
  #L4a31aa.  v2:= 3I;
  #L4a31ac.  v0[v2]:= v5 @kind object;
  #L4a31b0.  v2:= 4I;
  #L4a31b2.  v0[v2]:= v6 @kind object;
  #L4a31b6.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a31bc.  v2:= temp @kind object;
  #L4a31be.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a31d0.  v0:= "item1 is null" @kind object;
  #L4a31d4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a31da.  v0:= "item2 is null" @kind object;
  #L4a31de.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a31e4.  v0:= "item3 is null" @kind object;
  #L4a31e8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a31ee.  v0:= "item4 is null" @kind object;
  #L4a31f2.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a31f8.  v0:= "item5 is null" @kind object;
  #L4a31fc.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3202.  v0:= "item6 is null" @kind object;
  #L4a3206.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a320c.  v0:= 6I;
  #L4a320e.  v0:= new `java.lang.Object`[v0];
  #L4a3212.  v1:= 0I;
  #L4a3214.  v0[v1]:= v2 @kind object;
  #L4a3218.  v2:= 1I;
  #L4a321a.  v0[v2]:= v3 @kind object;
  #L4a321e.  v2:= 2I;
  #L4a3220.  v0[v2]:= v4 @kind object;
  #L4a3224.  v2:= 3I;
  #L4a3226.  v0[v2]:= v5 @kind object;
  #L4a322a.  v2:= 4I;
  #L4a322c.  v0[v2]:= v6 @kind object;
  #L4a3230.  v2:= 5I;
  #L4a3232.  v0[v2]:= v7 @kind object;
  #L4a3236.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a323c.  v2:= temp @kind object;
  #L4a323e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a3250.  v0:= "item1 is null" @kind object;
  #L4a3254.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a325a.  v0:= "item2 is null" @kind object;
  #L4a325e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3264.  v0:= "item3 is null" @kind object;
  #L4a3268.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a326e.  v0:= "item4 is null" @kind object;
  #L4a3272.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3278.  v0:= "item5 is null" @kind object;
  #L4a327c.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3282.  v0:= "item6 is null" @kind object;
  #L4a3286.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a328c.  v0:= "item7 is null" @kind object;
  #L4a3290.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3296.  v0:= 7I;
  #L4a3298.  v0:= new `java.lang.Object`[v0];
  #L4a329c.  v1:= 0I;
  #L4a329e.  v0[v1]:= v2 @kind object;
  #L4a32a2.  v2:= 1I;
  #L4a32a4.  v0[v2]:= v3 @kind object;
  #L4a32a8.  v2:= 2I;
  #L4a32aa.  v0[v2]:= v4 @kind object;
  #L4a32ae.  v2:= 3I;
  #L4a32b0.  v0[v2]:= v5 @kind object;
  #L4a32b4.  v2:= 4I;
  #L4a32b6.  v0[v2]:= v6 @kind object;
  #L4a32ba.  v2:= 5I;
  #L4a32bc.  v0[v2]:= v7 @kind object;
  #L4a32c0.  v2:= 6I;
  #L4a32c2.  v0[v2]:= v8 @kind object;
  #L4a32c6.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a32cc.  v2:= temp @kind object;
  #L4a32ce.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a32e0.  v0:= "item1 is null" @kind object;
  #L4a32e4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a32ea.  v0:= "item2 is null" @kind object;
  #L4a32ee.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a32f4.  v0:= "item3 is null" @kind object;
  #L4a32f8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a32fe.  v0:= "item4 is null" @kind object;
  #L4a3302.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3308.  v0:= "item5 is null" @kind object;
  #L4a330c.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3312.  v0:= "item6 is null" @kind object;
  #L4a3316.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a331c.  v0:= "item7 is null" @kind object;
  #L4a3320.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3326.  v0:= "item8 is null" @kind object;
  #L4a332a.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3330.  v0:= 8I;
  #L4a3334.  v0:= new `java.lang.Object`[v0];
  #L4a3338.  v1:= 0I;
  #L4a333a.  v0[v1]:= v2 @kind object;
  #L4a333e.  v2:= 1I;
  #L4a3340.  v0[v2]:= v3 @kind object;
  #L4a3344.  v2:= 2I;
  #L4a3346.  v0[v2]:= v4 @kind object;
  #L4a334a.  v2:= 3I;
  #L4a334c.  v0[v2]:= v5 @kind object;
  #L4a3350.  v2:= 4I;
  #L4a3352.  v0[v2]:= v6 @kind object;
  #L4a3356.  v2:= 5I;
  #L4a3358.  v0[v2]:= v7 @kind object;
  #L4a335c.  v2:= 6I;
  #L4a335e.  v0[v2]:= v8 @kind object;
  #L4a3362.  v2:= 7I;
  #L4a3364.  v0[v2]:= v9 @kind object;
  #L4a3368.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a336e.  v2:= temp @kind object;
  #L4a3370.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a3384.  v0:= "item1 is null" @kind object;
  #L4a3388.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a338e.  v0:= "item2 is null" @kind object;
  #L4a3392.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3398.  v0:= "item3 is null" @kind object;
  #L4a339c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a33a2.  v0:= "item4 is null" @kind object;
  #L4a33a6.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a33ac.  v0:= "item5 is null" @kind object;
  #L4a33b0.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a33b6.  v0:= "item6 is null" @kind object;
  #L4a33ba.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a33c0.  v0:= "item7 is null" @kind object;
  #L4a33c4.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a33ca.  v0:= "item8 is null" @kind object;
  #L4a33ce.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a33d4.  v0:= "item9 is null" @kind object;
  #L4a33d8.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a33de.  v0:= 9I;
  #L4a33e2.  v0:= new `java.lang.Object`[v0];
  #L4a33e6.  v1:= 0I;
  #L4a33e8.  v0[v1]:= v2 @kind object;
  #L4a33ec.  v2:= 1I;
  #L4a33ee.  v0[v2]:= v3 @kind object;
  #L4a33f2.  v2:= 2I;
  #L4a33f4.  v0[v2]:= v4 @kind object;
  #L4a33f8.  v2:= 3I;
  #L4a33fa.  v0[v2]:= v5 @kind object;
  #L4a33fe.  v2:= 4I;
  #L4a3400.  v0[v2]:= v6 @kind object;
  #L4a3404.  v2:= 5I;
  #L4a3406.  v0[v2]:= v7 @kind object;
  #L4a340a.  v2:= 6I;
  #L4a340c.  v0[v2]:= v8 @kind object;
  #L4a3410.  v2:= 7I;
  #L4a3412.  v0[v2]:= v9 @kind object;
  #L4a3416.  v2:= 8I;
  #L4a341a.  v0[v2]:= v10 @kind object;
  #L4a341e.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3424.  v2:= temp @kind object;
  #L4a3426.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `java.lang.Object` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a3438.  v0:= "item1 is null" @kind object;
  #L4a343c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3442.  v0:= "item2 is null" @kind object;
  #L4a3446.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a344c.  v0:= "item3 is null" @kind object;
  #L4a3450.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3456.  v0:= "item4 is null" @kind object;
  #L4a345a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3460.  v0:= "item5 is null" @kind object;
  #L4a3464.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a346a.  v0:= "item6 is null" @kind object;
  #L4a346e.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3474.  v0:= "item7 is null" @kind object;
  #L4a3478.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a347e.  v0:= "item8 is null" @kind object;
  #L4a3482.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3488.  v0:= "item9 is null" @kind object;
  #L4a348c.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3492.  v0:= "item10 is null" @kind object;
  #L4a3496.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a349c.  v0:= 10I;
  #L4a34a0.  v0:= new `java.lang.Object`[v0];
  #L4a34a4.  v1:= 0I;
  #L4a34a6.  v0[v1]:= v2 @kind object;
  #L4a34aa.  v2:= 1I;
  #L4a34ac.  v0[v2]:= v3 @kind object;
  #L4a34b0.  v2:= 2I;
  #L4a34b2.  v0[v2]:= v4 @kind object;
  #L4a34b6.  v2:= 3I;
  #L4a34b8.  v0[v2]:= v5 @kind object;
  #L4a34bc.  v2:= 4I;
  #L4a34be.  v0[v2]:= v6 @kind object;
  #L4a34c2.  v2:= 5I;
  #L4a34c4.  v0[v2]:= v7 @kind object;
  #L4a34c8.  v2:= 6I;
  #L4a34ca.  v0[v2]:= v8 @kind object;
  #L4a34ce.  v2:= 7I;
  #L4a34d0.  v0[v2]:= v9 @kind object;
  #L4a34d4.  v2:= 8I;
  #L4a34d8.  v0[v2]:= v10 @kind object;
  #L4a34dc.  v2:= 9I;
  #L4a34e0.  v0[v2]:= v11 @kind object;
  #L4a34e4.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a34ea.  v2:= temp @kind object;
  #L4a34ec.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`io.reactivex.rxjava3.core.ObservableSource` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a35b4.  v0:= "sources is null" @kind object;
  #L4a35b8.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a35be.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap`;
  #L4a35c2.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a35c8.  v3:= temp @kind object;
  #L4a35ca.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a35d0.  v6:= temp;
  #L4a35d2.  v4:= 0I;
  #L4a35d4.  v5:= 2147483647I;
  #L4a35da.  v1:= v0 @kind object;
  #L4a35dc.  v2:= v7 @kind object;
  #L4a35de.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ZII)V` @kind direct;
  #L4a35e4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a35ea.  v7:= temp @kind object;
  #L4a35ec.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a3600.  v0:= "sources is null" @kind object;
  #L4a3604.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a360a.  v0:= "maxConcurrency" @kind object;
  #L4a360e.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a3614.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap`;
  #L4a3618.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a361e.  v3:= temp @kind object;
  #L4a3620.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a3626.  v6:= temp;
  #L4a3628.  v4:= 0I;
  #L4a362a.  v1:= v0 @kind object;
  #L4a362c.  v2:= v7 @kind object;
  #L4a362e.  v5:= v8;
  #L4a3630.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ZII)V` @kind direct;
  #L4a3636.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a363c.  v7:= temp @kind object;
  #L4a363e.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a3650.  v0:= "source1 is null" @kind object;
  #L4a3654.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a365a.  v0:= "source2 is null" @kind object;
  #L4a365e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3664.  v0:= 2I;
  #L4a3666.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a366a.  v2:= 0I;
  #L4a366c.  v1[v2]:= v3 @kind object;
  #L4a3670.  v3:= 1I;
  #L4a3672.  v1[v3]:= v4 @kind object;
  #L4a3676.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a367c.  v3:= temp @kind object;
  #L4a367e.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a3684.  v4:= temp @kind object;
  #L4a3686.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a368c.  v3:= temp @kind object;
  #L4a368e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a36a0.  v0:= "source1 is null" @kind object;
  #L4a36a4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a36aa.  v0:= "source2 is null" @kind object;
  #L4a36ae.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a36b4.  v0:= "source3 is null" @kind object;
  #L4a36b8.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a36be.  v0:= 3I;
  #L4a36c0.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a36c4.  v2:= 0I;
  #L4a36c6.  v1[v2]:= v3 @kind object;
  #L4a36ca.  v3:= 1I;
  #L4a36cc.  v1[v3]:= v4 @kind object;
  #L4a36d0.  v3:= 2I;
  #L4a36d2.  v1[v3]:= v5 @kind object;
  #L4a36d6.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a36dc.  v3:= temp @kind object;
  #L4a36de.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a36e4.  v4:= temp @kind object;
  #L4a36e6.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a36ec.  v3:= temp @kind object;
  #L4a36ee.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a3700.  v0:= "source1 is null" @kind object;
  #L4a3704.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a370a.  v0:= "source2 is null" @kind object;
  #L4a370e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3714.  v0:= "source3 is null" @kind object;
  #L4a3718.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a371e.  v0:= "source4 is null" @kind object;
  #L4a3722.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3728.  v0:= 4I;
  #L4a372a.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a372e.  v2:= 0I;
  #L4a3730.  v1[v2]:= v3 @kind object;
  #L4a3734.  v3:= 1I;
  #L4a3736.  v1[v3]:= v4 @kind object;
  #L4a373a.  v3:= 2I;
  #L4a373c.  v1[v3]:= v5 @kind object;
  #L4a3740.  v3:= 3I;
  #L4a3742.  v1[v3]:= v6 @kind object;
  #L4a3746.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a374c.  v3:= temp @kind object;
  #L4a374e.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a3754.  v4:= temp @kind object;
  #L4a3756.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a375c.  v3:= temp @kind object;
  #L4a375e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a3770.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3776.  v1:= temp @kind object;
  #L4a3778.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a377e.  v0:= temp @kind object;
  #L4a3780.  call temp:= `flatMap`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3786.  v1:= temp @kind object;
  #L4a3788.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`java.lang.Iterable` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Ljava/lang/Iterable;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a379c.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a37a2.  v1:= temp @kind object;
  #L4a37a4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a37aa.  v0:= temp @kind object;
  #L4a37ac.  call temp:= `flatMap`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a37b2.  v1:= temp @kind object;
  #L4a37b4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `merge`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a37c8.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a37ce.  v2:= temp @kind object;
  #L4a37d0.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a37d6.  v0:= temp @kind object;
  #L4a37d8.  v1:= 0I;
  #L4a37da.  call temp:= `flatMap`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a37e0.  v2:= temp @kind object;
  #L4a37e2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeArray`(`int` v2 , `int` v3 , `io.reactivex.rxjava3.core.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeArray:(II[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a37f4.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a37fa.  v4:= temp @kind object;
  #L4a37fc.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a3802.  v0:= temp @kind object;
  #L4a3804.  v1:= 0I;
  #L4a3806.  call temp:= `flatMap`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a380c.  v2:= temp @kind object;
  #L4a380e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeArray`(`io.reactivex.rxjava3.core.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a3820.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3826.  v0:= temp @kind object;
  #L4a3828.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a382e.  v1:= temp @kind object;
  #L4a3830.  v2:= length @variable v2;
  #L4a3832.  call temp:= `flatMap`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3838.  v2:= temp @kind object;
  #L4a383a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeArrayDelayError`(`int` v2 , `int` v3 , `io.reactivex.rxjava3.core.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeArrayDelayError:(II[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a384c.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3852.  v4:= temp @kind object;
  #L4a3854.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a385a.  v0:= temp @kind object;
  #L4a385c.  v1:= 1I;
  #L4a385e.  call temp:= `flatMap`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3864.  v2:= temp @kind object;
  #L4a3866.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeArrayDelayError`(`io.reactivex.rxjava3.core.ObservableSource`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeArrayDelayError:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a3878.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a387e.  v0:= temp @kind object;
  #L4a3880.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a3886.  v1:= temp @kind object;
  #L4a3888.  v3:= length @variable v3;
  #L4a388a.  v2:= 1I;
  #L4a388c.  call temp:= `flatMap`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3892.  v3:= temp @kind object;
  #L4a3894.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a38a8.  v0:= "sources is null" @kind object;
  #L4a38ac.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a38b2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap`;
  #L4a38b6.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a38bc.  v3:= temp @kind object;
  #L4a38be.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a38c4.  v6:= temp;
  #L4a38c6.  v4:= 1I;
  #L4a38c8.  v5:= 2147483647I;
  #L4a38ce.  v1:= v0 @kind object;
  #L4a38d0.  v2:= v7 @kind object;
  #L4a38d2.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ZII)V` @kind direct;
  #L4a38d8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a38de.  v7:= temp @kind object;
  #L4a38e0.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a38f4.  v0:= "sources is null" @kind object;
  #L4a38f8.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a38fe.  v0:= "maxConcurrency" @kind object;
  #L4a3902.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a3908.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap`;
  #L4a390c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a3912.  v3:= temp @kind object;
  #L4a3914.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a391a.  v6:= temp;
  #L4a391c.  v4:= 1I;
  #L4a391e.  v1:= v0 @kind object;
  #L4a3920.  v2:= v7 @kind object;
  #L4a3922.  v5:= v8;
  #L4a3924.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ZII)V` @kind direct;
  #L4a392a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3930.  v7:= temp @kind object;
  #L4a3932.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a3944.  v0:= "source1 is null" @kind object;
  #L4a3948.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a394e.  v0:= "source2 is null" @kind object;
  #L4a3952.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3958.  v0:= 2I;
  #L4a395a.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a395e.  v2:= 0I;
  #L4a3960.  v1[v2]:= v3 @kind object;
  #L4a3964.  v3:= 1I;
  #L4a3966.  v1[v3]:= v4 @kind object;
  #L4a396a.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3970.  v4:= temp @kind object;
  #L4a3972.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a3978.  v1:= temp @kind object;
  #L4a397a.  call temp:= `flatMap`(v4, v1, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3980.  v3:= temp @kind object;
  #L4a3982.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a3994.  v0:= "source1 is null" @kind object;
  #L4a3998.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a399e.  v0:= "source2 is null" @kind object;
  #L4a39a2.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a39a8.  v0:= "source3 is null" @kind object;
  #L4a39ac.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a39b2.  v0:= 3I;
  #L4a39b4.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a39b8.  v2:= 0I;
  #L4a39ba.  v1[v2]:= v3 @kind object;
  #L4a39be.  v3:= 1I;
  #L4a39c0.  v1[v3]:= v4 @kind object;
  #L4a39c4.  v4:= 2I;
  #L4a39c6.  v1[v4]:= v5 @kind object;
  #L4a39ca.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a39d0.  v4:= temp @kind object;
  #L4a39d2.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a39d8.  v5:= temp @kind object;
  #L4a39da.  call temp:= `flatMap`(v4, v5, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a39e0.  v3:= temp @kind object;
  #L4a39e2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a39f4.  v0:= "source1 is null" @kind object;
  #L4a39f8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a39fe.  v0:= "source2 is null" @kind object;
  #L4a3a02.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3a08.  v0:= "source3 is null" @kind object;
  #L4a3a0c.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3a12.  v0:= "source4 is null" @kind object;
  #L4a3a16.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3a1c.  v0:= 4I;
  #L4a3a1e.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a3a22.  v2:= 0I;
  #L4a3a24.  v1[v2]:= v3 @kind object;
  #L4a3a28.  v3:= 1I;
  #L4a3a2a.  v1[v3]:= v4 @kind object;
  #L4a3a2e.  v4:= 2I;
  #L4a3a30.  v1[v4]:= v5 @kind object;
  #L4a3a34.  v4:= 3I;
  #L4a3a36.  v1[v4]:= v6 @kind object;
  #L4a3a3a.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3a40.  v4:= temp @kind object;
  #L4a3a42.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a3a48.  v5:= temp @kind object;
  #L4a3a4a.  call temp:= `flatMap`(v4, v5, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3a50.  v3:= temp @kind object;
  #L4a3a52.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a3a64.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3a6a.  v2:= temp @kind object;
  #L4a3a6c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a3a72.  v0:= temp @kind object;
  #L4a3a74.  v1:= 1I;
  #L4a3a76.  call temp:= `flatMap`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3a7c.  v2:= temp @kind object;
  #L4a3a7e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Ljava/lang/Iterable;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a3a90.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3a96.  v2:= temp @kind object;
  #L4a3a98.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a3a9e.  v0:= temp @kind object;
  #L4a3aa0.  v1:= 1I;
  #L4a3aa2.  call temp:= `flatMap`(v2, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3aa8.  v2:= temp @kind object;
  #L4a3aaa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a3abc.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3ac2.  v2:= temp @kind object;
  #L4a3ac4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a3aca.  v0:= temp @kind object;
  #L4a3acc.  v1:= 1I;
  #L4a3ace.  call temp:= `flatMap`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3ad4.  v2:= temp @kind object;
  #L4a3ad6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `never`() @signature `Lio/reactivex/rxjava3/core/Observable;.never:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a3b9c.  v0:= `@@io.reactivex.rxjava3.internal.operators.observable.ObservableNever.INSTANCE` @type ^`io.reactivex.rxjava3.core.Observable` @kind object;
  #L4a3ba0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3ba6.  v0:= temp @kind object;
  #L4a3ba8.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `range`(`int` v5 , `int` v6 ) @signature `Lio/reactivex/rxjava3/core/Observable;.range:(II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4a3dd0.  if v6 < 0 then goto L4a3e36;
  #L4a3dd4.  if v6 != 0 then goto L4a3de2;
  #L4a3dd8.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3dde.  v5:= temp @kind object;
  #L4a3de0.  return v5 @kind object;
  #L4a3de2.  v0:= 1I;
  #L4a3de4.  if v6 != v0 then goto L4a3dfa;
  #L4a3de8.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4a3dee.  v5:= temp @kind object;
  #L4a3df0.  call temp:= `just`(v5) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3df6.  v5:= temp @kind object;
  #L4a3df8.  return v5 @kind object;
  #L4a3dfa.  v0:= (`long`) v5 @kind i2l;
  #L4a3dfc.  v2:= v6 + -1;
  #L4a3e00.  v2:= (`long`) v2 @kind i2l;
  #L4a3e02.  v0:= v0 + v2 @kind long;
  #L4a3e04.  v2:= 2147483647L;
  #L4a3e0a.  v4:= lcmp(v0, v2);
  #L4a3e0e.  if v4 > 0 then goto L4a3e26;
  #L4a3e12.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRange`;
  #L4a3e16.  call `<init>`(v0, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRange;.<init>:(II)V` @kind direct;
  #L4a3e1c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3e22.  v5:= temp @kind object;
  #L4a3e24.  return v5 @kind object;
  #L4a3e26.  v5:= new `java.lang.IllegalArgumentException`;
  #L4a3e2a.  v6:= "Integer overflow" @kind object;
  #L4a3e2e.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a3e34.  throw v5;
  #L4a3e36.  v5:= new `java.lang.IllegalArgumentException`;
  #L4a3e3a.  v0:= new `java.lang.StringBuilder`;
  #L4a3e3e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a3e44.  v1:= "count >= 0 required but it was " @kind object;
  #L4a3e48.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a3e4e.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a3e54.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a3e5a.  v6:= temp @kind object;
  #L4a3e5c.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a3e62.  throw v5;
}
procedure `io.reactivex.rxjava3.core.Observable` `rangeLong`(`long` v5 , `long` v7 ) @signature `Lio/reactivex/rxjava3/core/Observable;.rangeLong:(JJ)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4a3e74.  v0:= 0L;
  #L4a3e78.  v2:= lcmp(v7, v0);
  #L4a3e7c.  if v2 < 0 then goto L4a3ee8;
  #L4a3e80.  if v2 != 0 then goto L4a3e8e;
  #L4a3e84.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3e8a.  v5:= temp @kind object;
  #L4a3e8c.  return v5 @kind object;
  #L4a3e8e.  v2:= 1L;
  #L4a3e92.  v4:= lcmp(v7, v2);
  #L4a3e96.  if v4 != 0 then goto L4a3eac;
  #L4a3e9a.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4a3ea0.  v5:= temp @kind object;
  #L4a3ea2.  call temp:= `just`(v5) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3ea8.  v5:= temp @kind object;
  #L4a3eaa.  return v5 @kind object;
  #L4a3eac.  v2:= v7 - v2 @kind long;
  #L4a3eb0.  v2:= v2 + v5 @kind long;
  #L4a3eb2.  v4:= lcmp(v5, v0);
  #L4a3eb6.  if v4 <= 0 then goto L4a3ed4;
  #L4a3eba.  v4:= lcmp(v2, v0);
  #L4a3ebe.  if v4 < 0 then goto L4a3ec4;
  #L4a3ec2.  goto L4a3ed4;
  #L4a3ec4.  v5:= new `java.lang.IllegalArgumentException`;
  #L4a3ec8.  v6:= "Overflow! start + count is bigger than Long.MAX_VALUE" @kind object;
  #L4a3ecc.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a3ed2.  throw v5;
  #L4a3ed4.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRangeLong`;
  #L4a3ed8.  call `<init>`(v0, v5, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRangeLong;.<init>:(JJ)V` @kind direct;
  #L4a3ede.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3ee4.  v5:= temp @kind object;
  #L4a3ee6.  return v5 @kind object;
  #L4a3ee8.  v5:= new `java.lang.IllegalArgumentException`;
  #L4a3eec.  v6:= new `java.lang.StringBuilder`;
  #L4a3ef0.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a3ef6.  v0:= "count >= 0 required but it was " @kind object;
  #L4a3efa.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a3f00.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a3f06.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a3f0c.  v6:= temp @kind object;
  #L4a3f0e.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a3f14.  throw v5;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.sequenceEqual:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a672c.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L4a6732.  v0:= temp @kind object;
  #L4a6734.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a673a.  v1:= temp;
  #L4a673c.  call temp:= `sequenceEqual`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.sequenceEqual:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a6742.  v2:= temp @kind object;
  #L4a6744.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.sequenceEqual:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a6758.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L4a675e.  v0:= temp @kind object;
  #L4a6760.  call temp:= `sequenceEqual`(v1, v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.sequenceEqual:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a6766.  v1:= temp @kind object;
  #L4a6768.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.sequenceEqual:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a677c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a6782.  v0:= temp;
  #L4a6784.  call temp:= `sequenceEqual`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.sequenceEqual:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a678a.  v1:= temp @kind object;
  #L4a678c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.sequenceEqual:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a67a0.  v0:= "source1 is null" @kind object;
  #L4a67a4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a67aa.  v0:= "source2 is null" @kind object;
  #L4a67ae.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a67b4.  v0:= "isEqual is null" @kind object;
  #L4a67b8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a67be.  v0:= "bufferSize" @kind object;
  #L4a67c2.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a67c8.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSequenceEqualSingle`;
  #L4a67cc.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSequenceEqualSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiPredicate;I)V` @kind direct;
  #L4a67d2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a67d8.  v1:= temp @kind object;
  #L4a67da.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchOnNext`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchOnNext:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a4cc0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a4cc6.  v0:= temp;
  #L4a4cc8.  call temp:= `switchOnNext`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.switchOnNext:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4cce.  v1:= temp @kind object;
  #L4a4cd0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchOnNext`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.switchOnNext:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a4ce4.  v0:= "sources is null" @kind object;
  #L4a4ce8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4cee.  v0:= "bufferSize" @kind object;
  #L4a4cf2.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a4cf8.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchMap`;
  #L4a4cfc.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a4d02.  v1:= temp @kind object;
  #L4a4d04.  v2:= 0I;
  #L4a4d06.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4a4d0c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4d12.  v3:= temp @kind object;
  #L4a4d14.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchOnNextDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchOnNextDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a4d28.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a4d2e.  v0:= temp;
  #L4a4d30.  call temp:= `switchOnNextDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.switchOnNextDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4d36.  v1:= temp @kind object;
  #L4a4d38.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchOnNextDelayError`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.switchOnNextDelayError:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a4d4c.  v0:= "sources is null" @kind object;
  #L4a4d50.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4d56.  v0:= "bufferSize" @kind object;
  #L4a4d5a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a4d60.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchMap`;
  #L4a4d64.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a4d6a.  v1:= temp @kind object;
  #L4a4d6c.  v2:= 1I;
  #L4a4d6e.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4a4d74.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4d7a.  v3:= temp @kind object;
  #L4a4d7c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout0`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a5504.  v0:= "unit is null" @kind object;
  #L4a5508.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a550e.  v0:= "scheduler is null" @kind object;
  #L4a5512.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5518.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeoutTimed`;
  #L4a551c.  v1:= v0 @kind object;
  #L4a551e.  v2:= v8 @kind object;
  #L4a5520.  v3:= v9 @kind wide;
  #L4a5522.  v5:= v11 @kind object;
  #L4a5524.  v6:= v13 @kind object;
  #L4a5526.  v7:= v12 @kind object;
  #L4a5528.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed;.<init>:(Lio/reactivex/rxjava3/core/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a552e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5534.  v9:= temp @kind object;
  #L4a5536.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout0`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout0:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4a54d4.  v0:= "itemTimeoutIndicator is null" @kind object;
  #L4a54d8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a54de.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeout`;
  #L4a54e2.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeout;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a54e8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a54ee.  v2:= temp @kind object;
  #L4a54f0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a5548.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a554e.  v0:= temp @kind object;
  #L4a5550.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5556.  v1:= temp @kind object;
  #L4a5558.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timer`(`long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.rxjava3.core.Scheduler` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a556c.  v0:= "unit is null" @kind object;
  #L4a5570.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5576.  v0:= "scheduler is null" @kind object;
  #L4a557a.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5580.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimer`;
  #L4a5584.  v1:= 0L;
  #L4a5588.  call temp:= `max`(v3, v1) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L4a558e.  v3:= temp @kind wide;
  #L4a5590.  call `<init>`(v0, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a5596.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a559c.  v3:= temp @kind object;
  #L4a559e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `unsafeCreate`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.unsafeCreate:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a5654.  v0:= "onSubscribe is null" @kind object;
  #L4a5658.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a565e.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Observable` @kind boolean;
  #L4a5662.  if v0 != 0 then goto L4a567a;
  #L4a5666.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromUnsafeSource`;
  #L4a566a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromUnsafeSource;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a5670.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5676.  v1:= temp @kind object;
  #L4a5678.  return v1 @kind object;
  #L4a567a.  v1:= new `java.lang.IllegalArgumentException`;
  #L4a567e.  v0:= "unsafeCreate(Observable) should be upgraded" @kind object;
  #L4a5682.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a5688.  throw v1;
}
procedure `io.reactivex.rxjava3.core.Observable` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a56cc.  v0:= 1I;
  #L4a56ce.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a56d4.  v1:= temp @kind object;
  #L4a56d6.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a56e8.  v0:= "resourceSupplier is null" @kind object;
  #L4a56ec.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a56f2.  v0:= "sourceSupplier is null" @kind object;
  #L4a56f6.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a56fc.  v0:= "resourceCleanup is null" @kind object;
  #L4a5700.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5706.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableUsing`;
  #L4a570a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUsing;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)V` @kind direct;
  #L4a5710.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5716.  v1:= temp @kind object;
  #L4a5718.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `wrap`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a5cb4.  v0:= "source is null" @kind object;
  #L4a5cb8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5cbe.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Observable` @kind boolean;
  #L4a5cc2.  if v0 == 0 then goto L4a5cd4;
  #L4a5cc6.  v1:= (`io.reactivex.rxjava3.core.Observable`) v1 @kind object;
  #L4a5cca.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5cd0.  v1:= temp @kind object;
  #L4a5cd2.  return v1 @kind object;
  #L4a5cd4.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFromUnsafeSource`;
  #L4a5cd8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFromUnsafeSource;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a5cde.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5ce4.  v1:= temp @kind object;
  #L4a5ce6.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v9 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v10 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v11 @kind object, `io.reactivex.rxjava3.functions.Function9` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a5cf8.  v0:= "source1 is null" @kind object;
  #L4a5cfc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5d02.  v0:= "source2 is null" @kind object;
  #L4a5d06.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5d0c.  v0:= "source3 is null" @kind object;
  #L4a5d10.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5d16.  v0:= "source4 is null" @kind object;
  #L4a5d1a.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5d20.  v0:= "source5 is null" @kind object;
  #L4a5d24.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5d2a.  v0:= "source6 is null" @kind object;
  #L4a5d2e.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5d34.  v0:= "source7 is null" @kind object;
  #L4a5d38.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5d3e.  v0:= "source8 is null" @kind object;
  #L4a5d42.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5d48.  v0:= "source9 is null" @kind object;
  #L4a5d4c.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5d52.  v0:= "zipper is null" @kind object;
  #L4a5d56.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5d5c.  call temp:= `toFunction`(v12) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a5d62.  v12:= temp @kind object;
  #L4a5d64.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a5d6a.  v0:= temp;
  #L4a5d6c.  v1:= 9I;
  #L4a5d70.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L4a5d74.  v2:= 0I;
  #L4a5d76.  v1[v2]:= v3 @kind object;
  #L4a5d7a.  v3:= 1I;
  #L4a5d7c.  v1[v3]:= v4 @kind object;
  #L4a5d80.  v3:= 2I;
  #L4a5d82.  v1[v3]:= v5 @kind object;
  #L4a5d86.  v3:= 3I;
  #L4a5d88.  v1[v3]:= v6 @kind object;
  #L4a5d8c.  v3:= 4I;
  #L4a5d8e.  v1[v3]:= v7 @kind object;
  #L4a5d92.  v3:= 5I;
  #L4a5d94.  v1[v3]:= v8 @kind object;
  #L4a5d98.  v3:= 6I;
  #L4a5d9a.  v1[v3]:= v9 @kind object;
  #L4a5d9e.  v3:= 7I;
  #L4a5da0.  v1[v3]:= v10 @kind object;
  #L4a5da4.  v3:= 8I;
  #L4a5da8.  v1[v3]:= v11 @kind object;
  #L4a5dac.  call temp:= `zipArray`(v12, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5db2.  v3:= temp @kind object;
  #L4a5db4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v9 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v10 @kind object, `io.reactivex.rxjava3.functions.Function8` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a5dc8.  v0:= "source1 is null" @kind object;
  #L4a5dcc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5dd2.  v0:= "source2 is null" @kind object;
  #L4a5dd6.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5ddc.  v0:= "source3 is null" @kind object;
  #L4a5de0.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5de6.  v0:= "source4 is null" @kind object;
  #L4a5dea.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5df0.  v0:= "source5 is null" @kind object;
  #L4a5df4.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5dfa.  v0:= "source6 is null" @kind object;
  #L4a5dfe.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5e04.  v0:= "source7 is null" @kind object;
  #L4a5e08.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5e0e.  v0:= "source8 is null" @kind object;
  #L4a5e12.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5e18.  v0:= "zipper is null" @kind object;
  #L4a5e1c.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5e22.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a5e28.  v11:= temp @kind object;
  #L4a5e2a.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a5e30.  v0:= temp;
  #L4a5e32.  v1:= 8I;
  #L4a5e36.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L4a5e3a.  v2:= 0I;
  #L4a5e3c.  v1[v2]:= v3 @kind object;
  #L4a5e40.  v3:= 1I;
  #L4a5e42.  v1[v3]:= v4 @kind object;
  #L4a5e46.  v3:= 2I;
  #L4a5e48.  v1[v3]:= v5 @kind object;
  #L4a5e4c.  v3:= 3I;
  #L4a5e4e.  v1[v3]:= v6 @kind object;
  #L4a5e52.  v3:= 4I;
  #L4a5e54.  v1[v3]:= v7 @kind object;
  #L4a5e58.  v3:= 5I;
  #L4a5e5a.  v1[v3]:= v8 @kind object;
  #L4a5e5e.  v3:= 6I;
  #L4a5e60.  v1[v3]:= v9 @kind object;
  #L4a5e64.  v3:= 7I;
  #L4a5e66.  v1[v3]:= v10 @kind object;
  #L4a5e6a.  call temp:= `zipArray`(v11, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5e70.  v3:= temp @kind object;
  #L4a5e72.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v9 @kind object, `io.reactivex.rxjava3.functions.Function7` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a5e84.  v0:= "source1 is null" @kind object;
  #L4a5e88.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5e8e.  v0:= "source2 is null" @kind object;
  #L4a5e92.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5e98.  v0:= "source3 is null" @kind object;
  #L4a5e9c.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5ea2.  v0:= "source4 is null" @kind object;
  #L4a5ea6.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5eac.  v0:= "source5 is null" @kind object;
  #L4a5eb0.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5eb6.  v0:= "source6 is null" @kind object;
  #L4a5eba.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5ec0.  v0:= "source7 is null" @kind object;
  #L4a5ec4.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5eca.  v0:= "zipper is null" @kind object;
  #L4a5ece.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5ed4.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a5eda.  v10:= temp @kind object;
  #L4a5edc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a5ee2.  v0:= temp;
  #L4a5ee4.  v1:= 7I;
  #L4a5ee6.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L4a5eea.  v2:= 0I;
  #L4a5eec.  v1[v2]:= v3 @kind object;
  #L4a5ef0.  v3:= 1I;
  #L4a5ef2.  v1[v3]:= v4 @kind object;
  #L4a5ef6.  v3:= 2I;
  #L4a5ef8.  v1[v3]:= v5 @kind object;
  #L4a5efc.  v3:= 3I;
  #L4a5efe.  v1[v3]:= v6 @kind object;
  #L4a5f02.  v3:= 4I;
  #L4a5f04.  v1[v3]:= v7 @kind object;
  #L4a5f08.  v3:= 5I;
  #L4a5f0a.  v1[v3]:= v8 @kind object;
  #L4a5f0e.  v3:= 6I;
  #L4a5f10.  v1[v3]:= v9 @kind object;
  #L4a5f14.  call temp:= `zipArray`(v10, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5f1a.  v3:= temp @kind object;
  #L4a5f1c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.functions.Function6` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a5f30.  v0:= "source1 is null" @kind object;
  #L4a5f34.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5f3a.  v0:= "source2 is null" @kind object;
  #L4a5f3e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5f44.  v0:= "source3 is null" @kind object;
  #L4a5f48.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5f4e.  v0:= "source4 is null" @kind object;
  #L4a5f52.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5f58.  v0:= "source5 is null" @kind object;
  #L4a5f5c.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5f62.  v0:= "source6 is null" @kind object;
  #L4a5f66.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5f6c.  v0:= "zipper is null" @kind object;
  #L4a5f70.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5f76.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a5f7c.  v9:= temp @kind object;
  #L4a5f7e.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a5f84.  v0:= temp;
  #L4a5f86.  v1:= 6I;
  #L4a5f88.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L4a5f8c.  v2:= 0I;
  #L4a5f8e.  v1[v2]:= v3 @kind object;
  #L4a5f92.  v3:= 1I;
  #L4a5f94.  v1[v3]:= v4 @kind object;
  #L4a5f98.  v3:= 2I;
  #L4a5f9a.  v1[v3]:= v5 @kind object;
  #L4a5f9e.  v3:= 3I;
  #L4a5fa0.  v1[v3]:= v6 @kind object;
  #L4a5fa4.  v3:= 4I;
  #L4a5fa6.  v1[v3]:= v7 @kind object;
  #L4a5faa.  v3:= 5I;
  #L4a5fac.  v1[v3]:= v8 @kind object;
  #L4a5fb0.  call temp:= `zipArray`(v9, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5fb6.  v3:= temp @kind object;
  #L4a5fb8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v7 @kind object, `io.reactivex.rxjava3.functions.Function5` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a5fcc.  v0:= "source1 is null" @kind object;
  #L4a5fd0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5fd6.  v0:= "source2 is null" @kind object;
  #L4a5fda.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5fe0.  v0:= "source3 is null" @kind object;
  #L4a5fe4.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5fea.  v0:= "source4 is null" @kind object;
  #L4a5fee.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5ff4.  v0:= "source5 is null" @kind object;
  #L4a5ff8.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5ffe.  v0:= "zipper is null" @kind object;
  #L4a6002.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6008.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a600e.  v8:= temp @kind object;
  #L4a6010.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a6016.  v0:= temp;
  #L4a6018.  v1:= 5I;
  #L4a601a.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L4a601e.  v2:= 0I;
  #L4a6020.  v1[v2]:= v3 @kind object;
  #L4a6024.  v3:= 1I;
  #L4a6026.  v1[v3]:= v4 @kind object;
  #L4a602a.  v3:= 2I;
  #L4a602c.  v1[v3]:= v5 @kind object;
  #L4a6030.  v3:= 3I;
  #L4a6032.  v1[v3]:= v6 @kind object;
  #L4a6036.  v3:= 4I;
  #L4a6038.  v1[v3]:= v7 @kind object;
  #L4a603c.  call temp:= `zipArray`(v8, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a6042.  v3:= temp @kind object;
  #L4a6044.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.functions.Function4` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a6058.  v0:= "source1 is null" @kind object;
  #L4a605c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6062.  v0:= "source2 is null" @kind object;
  #L4a6066.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a606c.  v0:= "source3 is null" @kind object;
  #L4a6070.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6076.  v0:= "source4 is null" @kind object;
  #L4a607a.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6080.  v0:= "zipper is null" @kind object;
  #L4a6084.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a608a.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a6090.  v7:= temp @kind object;
  #L4a6092.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a6098.  v0:= temp;
  #L4a609a.  v1:= 4I;
  #L4a609c.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L4a60a0.  v2:= 0I;
  #L4a60a2.  v1[v2]:= v3 @kind object;
  #L4a60a6.  v3:= 1I;
  #L4a60a8.  v1[v3]:= v4 @kind object;
  #L4a60ac.  v3:= 2I;
  #L4a60ae.  v1[v3]:= v5 @kind object;
  #L4a60b2.  v3:= 3I;
  #L4a60b4.  v1[v3]:= v6 @kind object;
  #L4a60b8.  call temp:= `zipArray`(v7, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a60be.  v3:= temp @kind object;
  #L4a60c0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.functions.Function3` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a60d4.  v0:= "source1 is null" @kind object;
  #L4a60d8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a60de.  v0:= "source2 is null" @kind object;
  #L4a60e2.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a60e8.  v0:= "source3 is null" @kind object;
  #L4a60ec.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a60f2.  v0:= "zipper is null" @kind object;
  #L4a60f6.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a60fc.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a6102.  v6:= temp @kind object;
  #L4a6104.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a610a.  v0:= temp;
  #L4a610c.  v1:= 3I;
  #L4a610e.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L4a6112.  v2:= 0I;
  #L4a6114.  v1[v2]:= v3 @kind object;
  #L4a6118.  v3:= 1I;
  #L4a611a.  v1[v3]:= v4 @kind object;
  #L4a611e.  v3:= 2I;
  #L4a6120.  v1[v3]:= v5 @kind object;
  #L4a6124.  call temp:= `zipArray`(v6, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a612a.  v3:= temp @kind object;
  #L4a612c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a6140.  v0:= "source1 is null" @kind object;
  #L4a6144.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a614a.  v0:= "source2 is null" @kind object;
  #L4a614e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6154.  v0:= "zipper is null" @kind object;
  #L4a6158.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a615e.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a6164.  v5:= temp @kind object;
  #L4a6166.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a616c.  v0:= temp;
  #L4a616e.  v1:= 2I;
  #L4a6170.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L4a6174.  v2:= 0I;
  #L4a6176.  v1[v2]:= v3 @kind object;
  #L4a617a.  v3:= 1I;
  #L4a617c.  v1[v3]:= v4 @kind object;
  #L4a6180.  call temp:= `zipArray`(v5, v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a6186.  v3:= temp @kind object;
  #L4a6188.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a619c.  v0:= "source1 is null" @kind object;
  #L4a61a0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a61a6.  v0:= "source2 is null" @kind object;
  #L4a61aa.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a61b0.  v0:= "zipper is null" @kind object;
  #L4a61b4.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a61ba.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a61c0.  v5:= temp @kind object;
  #L4a61c2.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a61c8.  v0:= temp;
  #L4a61ca.  v1:= 2I;
  #L4a61cc.  v1:= new `io.reactivex.rxjava3.core.ObservableSource`[v1];
  #L4a61d0.  v2:= 0I;
  #L4a61d2.  v1[v2]:= v3 @kind object;
  #L4a61d6.  v3:= 1I;
  #L4a61d8.  v1[v3]:= v4 @kind object;
  #L4a61dc.  call temp:= `zipArray`(v5, v6, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a61e2.  v3:= temp @kind object;
  #L4a61e4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v4 @kind object, `boolean` v5 , `int` v6 ) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a61f8.  v0:= "source1 is null" @kind object;
  #L4a61fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6202.  v0:= "source2 is null" @kind object;
  #L4a6206.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a620c.  v0:= "zipper is null" @kind object;
  #L4a6210.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6216.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a621c.  v4:= temp @kind object;
  #L4a621e.  v0:= 2I;
  #L4a6220.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a6224.  v1:= 0I;
  #L4a6226.  v0[v1]:= v2 @kind object;
  #L4a622a.  v2:= 1I;
  #L4a622c.  v0[v2]:= v3 @kind object;
  #L4a6230.  call temp:= `zipArray`(v4, v5, v6, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a6236.  v2:= temp @kind object;
  #L4a6238.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`java.lang.Iterable` v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a624c.  v0:= "zipper is null" @kind object;
  #L4a6250.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6256.  v0:= "sources is null" @kind object;
  #L4a625a.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6260.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableZip`;
  #L4a6264.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a626a.  v5:= temp;
  #L4a626c.  v2:= 0I;
  #L4a626e.  v6:= 0I;
  #L4a6270.  v1:= v0 @kind object;
  #L4a6272.  v3:= v7 @kind object;
  #L4a6274.  v4:= v8 @kind object;
  #L4a6276.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4a627c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a6282.  v7:= temp @kind object;
  #L4a6284.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zip`(`java.lang.Iterable` v7 @kind object, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a6298.  v0:= "zipper is null" @kind object;
  #L4a629c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a62a2.  v0:= "sources is null" @kind object;
  #L4a62a6.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a62ac.  v0:= "bufferSize" @kind object;
  #L4a62b0.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a62b6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableZip`;
  #L4a62ba.  v2:= 0I;
  #L4a62bc.  v1:= v0 @kind object;
  #L4a62be.  v3:= v7 @kind object;
  #L4a62c0.  v4:= v8 @kind object;
  #L4a62c2.  v5:= v10;
  #L4a62c4.  v6:= v9;
  #L4a62c6.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4a62cc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a62d2.  v7:= temp @kind object;
  #L4a62d4.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zipArray`(`io.reactivex.rxjava3.functions.Function` v7 @kind object, `boolean` v8 , `int` v9 , `io.reactivex.rxjava3.core.ObservableSource`[] v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zipArray:(Lio/reactivex/rxjava3/functions/Function;ZI[Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a62e8.  v0:= "sources is null" @kind object;
  #L4a62ec.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a62f2.  v0:= length @variable v10;
  #L4a62f4.  if v0 != 0 then goto L4a6302;
  #L4a62f8.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a62fe.  v7:= temp @kind object;
  #L4a6300.  return v7 @kind object;
  #L4a6302.  v0:= "zipper is null" @kind object;
  #L4a6306.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a630c.  v0:= "bufferSize" @kind object;
  #L4a6310.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a6316.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableZip`;
  #L4a631a.  v3:= 0I;
  #L4a631c.  v1:= v0 @kind object;
  #L4a631e.  v2:= v10 @kind object;
  #L4a6320.  v4:= v7 @kind object;
  #L4a6322.  v5:= v9;
  #L4a6324.  v6:= v8;
  #L4a6326.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4a632c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a6332.  v7:= temp @kind object;
  #L4a6334.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `all`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.all:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a63f4.  v0:= "predicate is null" @kind object;
  #L4a63f8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a63fe.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableAllSingle`;
  #L4a6402.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAllSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4a6408.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a640e.  v2:= temp @kind object;
  #L4a6410.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `ambWith`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.ambWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a07f8.  v0:= "other is null" @kind object;
  #L4a07fc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0802.  v0:= 2I;
  #L4a0804.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a0808.  v1:= 0I;
  #L4a080a.  v0[v1]:= v2 @kind object;
  #L4a080e.  v1:= 1I;
  #L4a0810.  v0[v1]:= v3 @kind object;
  #L4a0814.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.ambArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a081a.  v3:= temp @kind object;
  #L4a081c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `any`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.any:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6424.  v0:= "predicate is null" @kind object;
  #L4a6428.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a642e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableAnySingle`;
  #L4a6432.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableAnySingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4a6438.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a643e.  v2:= temp @kind object;
  #L4a6440.  return v2 @kind object;
}
procedure `java.lang.Object` `blockingFirst`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingFirst:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6f18.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingFirstObserver`;
  #L4a6f1c.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingFirstObserver;.<init>:()V` @kind direct;
  #L4a6f22.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4a6f28.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L4a6f2e.  v0:= temp @kind object;
  #L4a6f30.  if v0 == 0 then goto L4a6f36;
  #L4a6f34.  return v0 @kind object;
  #L4a6f36.  v0:= new `java.util.NoSuchElementException`;
  #L4a6f3a.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4a6f40.  throw v0;
}
procedure `java.lang.Object` `blockingFirst`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingFirst:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6f54.  v0:= "defaultItem is null" @kind object;
  #L4a6f58.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6f5e.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingFirstObserver`;
  #L4a6f62.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingFirstObserver;.<init>:()V` @kind direct;
  #L4a6f68.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4a6f6e.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L4a6f74.  v0:= temp @kind object;
  #L4a6f76.  if v0 == 0 then goto L4a6f7c;
  #L4a6f7a.  v2:= v0 @kind object;
  #L4a6f7c.  return v2 @kind object;
}
procedure `void` `blockingForEach`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingForEach:(Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a724c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a7252.  v0:= temp;
  #L4a7254.  call `blockingForEach`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingForEach:(Lio/reactivex/rxjava3/functions/Consumer;I)V` @kind virtual;
  #L4a725a.  return @kind void;
}
procedure `void` `blockingForEach`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingForEach:(Lio/reactivex/rxjava3/functions/Consumer;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a726c.  v0:= "onNext is null" @kind object;
  #L4a7270.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7276.  call temp:= `blockingIterable`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L4a727c.  v3:= temp @kind object;
  #L4a727e.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4a7284.  v3:= temp @kind object;
  #L4a7286.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4a728c.  v0:= temp;
  #L4a728e.  if v0 == 0 then goto L4a72be;
  #L4a7292.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4a7298.  v0:= temp @kind object;
  #L4a729a.  call `accept`(v2, v0) @signature `Lio/reactivex/rxjava3/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4a72a0.  goto L4a7286;
  #L4a72a2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a72a4.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4a72aa.  v3:= (`io.reactivex.rxjava3.disposables.Disposable`) v3 @kind object;
  #L4a72ae.  call `dispose`(v3) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4a72b4.  call temp:= `wrapOrThrow`(v2) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4a72ba.  v2:= temp @kind object;
  #L4a72bc.  throw v2;
  #L4a72be.  return @kind void;
  catch `java.lang.Throwable` @[L4a7292..L4a72a0] goto L4a72a2;
}
procedure `java.lang.Iterable` `blockingIterable`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingIterable:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6e6c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a6e72.  v0:= temp;
  #L4a6e74.  call temp:= `blockingIterable`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L4a6e7a.  v0:= temp @kind object;
  #L4a6e7c.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingIterable`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingIterable:(I)Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6e90.  v0:= "capacityHint" @kind object;
  #L4a6e94.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a6e9a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableIterable`;
  #L4a6e9e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableIterable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;I)V` @kind direct;
  #L4a6ea4.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingLast`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingLast:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6f90.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingLastObserver`;
  #L4a6f94.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingLastObserver;.<init>:()V` @kind direct;
  #L4a6f9a.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4a6fa0.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L4a6fa6.  v0:= temp @kind object;
  #L4a6fa8.  if v0 == 0 then goto L4a6fae;
  #L4a6fac.  return v0 @kind object;
  #L4a6fae.  v0:= new `java.util.NoSuchElementException`;
  #L4a6fb2.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4a6fb8.  throw v0;
}
procedure `java.lang.Object` `blockingLast`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingLast:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6fcc.  v0:= "defaultItem is null" @kind object;
  #L4a6fd0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6fd6.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingLastObserver`;
  #L4a6fda.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingLastObserver;.<init>:()V` @kind direct;
  #L4a6fe0.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4a6fe6.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L4a6fec.  v0:= temp @kind object;
  #L4a6fee.  if v0 == 0 then goto L4a6ff4;
  #L4a6ff2.  v2:= v0 @kind object;
  #L4a6ff4.  return v2 @kind object;
}
procedure `java.lang.Iterable` `blockingLatest`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingLatest:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6eb8.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableLatest`;
  #L4a6ebc.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableLatest;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a6ec2.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingMostRecent`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingMostRecent:(Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6ed4.  v0:= "initialItem is null" @kind object;
  #L4a6ed8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6ede.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableMostRecent`;
  #L4a6ee2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableMostRecent;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L4a6ee8.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingNext`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingNext:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6efc.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.BlockingObservableNext`;
  #L4a6f00.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/BlockingObservableNext;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a6f06.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingSingle`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingSingle:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a7008.  call temp:= `singleElement`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.singleElement:()Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L4a700e.  v0:= temp @kind object;
  #L4a7010.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/core/Maybe;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L4a7016.  v0:= temp @kind object;
  #L4a7018.  if v0 == 0 then goto L4a701e;
  #L4a701c.  return v0 @kind object;
  #L4a701e.  v0:= new `java.util.NoSuchElementException`;
  #L4a7022.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4a7028.  throw v0;
}
procedure `java.lang.Object` `blockingSingle`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingSingle:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a703c.  call temp:= `single`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.single:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a7042.  v1:= temp @kind object;
  #L4a7044.  call temp:= `blockingGet`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L4a704a.  v1:= temp @kind object;
  #L4a704c.  return v1 @kind object;
}
procedure `java.util.stream.Stream` `blockingStream`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingStream:()Ljava/util/stream/Stream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a71bc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a71c2.  v0:= temp;
  #L4a71c4.  call temp:= `blockingStream`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingStream:(I)Ljava/util/stream/Stream;` @kind virtual;
  #L4a71ca.  v0:= temp @kind object;
  #L4a71cc.  return v0 @kind object;
}
procedure `java.util.stream.Stream` `blockingStream`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingStream:(I)Ljava/util/stream/Stream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a71e0.  call temp:= `blockingIterable`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L4a71e6.  v3:= temp @kind object;
  #L4a71e8.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4a71ee.  v3:= temp @kind object;
  #L4a71f0.  v0:= 0I;
  #L4a71f2.  call temp:= `spliteratorUnknownSize`(v3, v0) @signature `Ljava/util/Spliterators;.spliteratorUnknownSize:(Ljava/util/Iterator;I)Ljava/util/Spliterator;` @kind static;
  #L4a71f8.  v1:= temp @kind object;
  #L4a71fa.  call temp:= `stream`(v1, v0) @signature `Ljava/util/stream/StreamSupport;.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;` @kind static;
  #L4a7200.  v0:= temp @kind object;
  #L4a7202.  v3:= (`io.reactivex.rxjava3.disposables.Disposable`) v3 @kind object;
  #L4a7206.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4a720c.  v1:= new `io.reactivex.rxjava3.core.f`;
  #L4a7210.  call `<init>`(v1, v3) @signature `Lio/reactivex/rxjava3/core/f;.<init>:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind direct;
  #L4a7216.  call temp:= `onClose`(v0, v1) @signature `Ljava/util/stream/Stream;.onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;` @kind interface;
  #L4a721c.  v3:= temp @kind object;
  #L4a721e.  v3:= (`java.util.stream.Stream`) v3 @kind object;
  #L4a7222.  return v3 @kind object;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Observable` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingSubscribe:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a72dc.  call `subscribe`(v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind static;
  #L4a72e2.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingSubscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a72f4.  v0:= "observer is null" @kind object;
  #L4a72f8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a72fe.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Observer;)V` @kind static;
  #L4a7304.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a7318.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4a731c.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a7320.  call `subscribe`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind static;
  #L4a7326.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a7338.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a733c.  call `subscribe`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind static;
  #L4a7342.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `io.reactivex.rxjava3.functions.Consumer` v1 @kind object, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a7354.  call `subscribe`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind static;
  #L4a735a.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a0830.  call temp:= `buffer`(v0, v1, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(II)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a0836.  v1:= temp @kind object;
  #L4a0838.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a084c.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a0852.  v0:= temp @kind object;
  #L4a0854.  call temp:= `buffer`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(IILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a085a.  v2:= temp @kind object;
  #L4a085c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 , `int` v3 , `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(IILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a0870.  v0:= "count" @kind object;
  #L4a0874.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a087a.  v0:= "skip" @kind object;
  #L4a087e.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a0884.  v0:= "bufferSupplier is null" @kind object;
  #L4a0888.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a088e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableBuffer`;
  #L4a0892.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBuffer;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;IILio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a0898.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a089e.  v2:= temp @kind object;
  #L4a08a0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `int` v1 , `io.reactivex.rxjava3.functions.Supplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(ILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a08b4.  call temp:= `buffer`(v0, v1, v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(IILio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a08ba.  v1:= temp @kind object;
  #L4a08bc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a0ae8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a0aee.  v6:= temp @kind object;
  #L4a0af0.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a0af6.  v7:= temp @kind object;
  #L4a0af8.  v0:= v8 @kind object;
  #L4a0afa.  v1:= v9 @kind wide;
  #L4a0afc.  v3:= v11 @kind wide;
  #L4a0afe.  v5:= v13 @kind object;
  #L4a0b00.  call temp:= `buffer`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a0b06.  v9:= temp @kind object;
  #L4a0b08.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.rxjava3.core.Scheduler` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a0b1c.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a0b22.  v7:= temp @kind object;
  #L4a0b24.  v0:= v8 @kind object;
  #L4a0b26.  v1:= v9 @kind wide;
  #L4a0b28.  v3:= v11 @kind wide;
  #L4a0b2a.  v5:= v13 @kind object;
  #L4a0b2c.  v6:= v14 @kind object;
  #L4a0b2e.  call temp:= `buffer`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a0b34.  v9:= temp @kind object;
  #L4a0b36.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v12 @kind this, `long` v13 , `long` v15 , `java.util.concurrent.TimeUnit` v17 @kind object, `io.reactivex.rxjava3.core.Scheduler` v18 @kind object, `io.reactivex.rxjava3.functions.Supplier` v19 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L4a0b48.  v0:= "unit is null" @kind object;
  #L4a0b4c.  v7:= v17 @kind object;
  #L4a0b50.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0b56.  v0:= "scheduler is null" @kind object;
  #L4a0b5a.  v8:= v18 @kind object;
  #L4a0b5e.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0b64.  v0:= "bufferSupplier is null" @kind object;
  #L4a0b68.  v9:= v19 @kind object;
  #L4a0b6c.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0b72.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed`;
  #L4a0b76.  v10:= 2147483647I;
  #L4a0b7c.  v11:= 0I;
  #L4a0b7e.  v1:= v0 @kind object;
  #L4a0b80.  v2:= v12 @kind object;
  #L4a0b82.  v3:= v13 @kind wide;
  #L4a0b84.  v5:= v15 @kind wide;
  #L4a0b86.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;IZ)V` @kind direct;
  #L4a0b8c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a0b92.  v0:= temp @kind object;
  #L4a0b94.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a09c0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a09c6.  v4:= temp @kind object;
  #L4a09c8.  v5:= 2147483647I;
  #L4a09ce.  v0:= v6 @kind object;
  #L4a09d0.  v1:= v7 @kind wide;
  #L4a09d2.  v3:= v9 @kind object;
  #L4a09d4.  call temp:= `buffer`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a09da.  v7:= temp @kind object;
  #L4a09dc.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a09f0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a09f6.  v4:= temp @kind object;
  #L4a09f8.  v0:= v6 @kind object;
  #L4a09fa.  v1:= v7 @kind wide;
  #L4a09fc.  v3:= v9 @kind object;
  #L4a09fe.  v5:= v10;
  #L4a0a00.  call temp:= `buffer`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a0a06.  v7:= temp @kind object;
  #L4a0a08.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a0a1c.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a0a22.  v6:= temp @kind object;
  #L4a0a24.  v5:= 2147483647I;
  #L4a0a2a.  v7:= 0I;
  #L4a0a2c.  v0:= v8 @kind object;
  #L4a0a2e.  v1:= v9 @kind wide;
  #L4a0a30.  v3:= v11 @kind object;
  #L4a0a32.  v4:= v12 @kind object;
  #L4a0a34.  call temp:= `buffer`(v0, v1, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ILio/reactivex/rxjava3/functions/Supplier;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a0a3a.  v9:= temp @kind object;
  #L4a0a3c.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `int` v13 ) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a0a50.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a0a56.  v6:= temp @kind object;
  #L4a0a58.  v7:= 0I;
  #L4a0a5a.  v0:= v8 @kind object;
  #L4a0a5c.  v1:= v9 @kind wide;
  #L4a0a5e.  v3:= v11 @kind object;
  #L4a0a60.  v4:= v12 @kind object;
  #L4a0a62.  v5:= v13;
  #L4a0a64.  call temp:= `buffer`(v0, v1, v3, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ILio/reactivex/rxjava3/functions/Supplier;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a0a6a.  v9:= temp @kind object;
  #L4a0a6c.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v12 @kind this, `long` v13 , `java.util.concurrent.TimeUnit` v15 @kind object, `io.reactivex.rxjava3.core.Scheduler` v16 @kind object, `int` v17 , `io.reactivex.rxjava3.functions.Supplier` v18 @kind object, `boolean` v19 ) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ILio/reactivex/rxjava3/functions/Supplier;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L4a0a80.  v0:= "unit is null" @kind object;
  #L4a0a84.  v7:= v15 @kind object;
  #L4a0a86.  call temp:= `requireNonNull`(v15, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0a8c.  v0:= "scheduler is null" @kind object;
  #L4a0a90.  v8:= v16 @kind object;
  #L4a0a94.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0a9a.  v0:= "bufferSupplier is null" @kind object;
  #L4a0a9e.  v9:= v18 @kind object;
  #L4a0aa2.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0aa8.  v0:= "count" @kind object;
  #L4a0aac.  v10:= v17;
  #L4a0ab0.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a0ab6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed`;
  #L4a0aba.  v1:= v0 @kind object;
  #L4a0abc.  v2:= v12 @kind object;
  #L4a0abe.  v3:= v13 @kind wide;
  #L4a0ac0.  v5:= v13 @kind wide;
  #L4a0ac2.  v11:= v19;
  #L4a0ac6.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/functions/Supplier;IZ)V` @kind direct;
  #L4a0acc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a0ad2.  v0:= temp @kind object;
  #L4a0ad4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a08d0.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a08d6.  v0:= temp @kind object;
  #L4a08d8.  call temp:= `buffer`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a08de.  v2:= temp @kind object;
  #L4a08e0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a08f4.  v0:= "initialCapacity" @kind object;
  #L4a08f8.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a08fe.  call temp:= `createArrayList`(v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createArrayList:(I)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a0904.  v3:= temp @kind object;
  #L4a0906.  call temp:= `buffer`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a090c.  v2:= temp @kind object;
  #L4a090e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a0920.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a0926.  v0:= temp @kind object;
  #L4a0928.  call temp:= `buffer`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a092e.  v2:= temp @kind object;
  #L4a0930.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a0944.  v0:= "openingIndicator is null" @kind object;
  #L4a0948.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a094e.  v0:= "closingIndicator is null" @kind object;
  #L4a0952.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0958.  v0:= "bufferSupplier is null" @kind object;
  #L4a095c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0962.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferBoundary`;
  #L4a0966.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferBoundary;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a096c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a0972.  v2:= temp @kind object;
  #L4a0974.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `buffer`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Supplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.buffer:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a0988.  v0:= "boundaryIndicator is null" @kind object;
  #L4a098c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0992.  v0:= "bufferSupplier is null" @kind object;
  #L4a0996.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a099c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary`;
  #L4a09a0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferExactBoundary;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a09a6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a09ac.  v2:= temp @kind object;
  #L4a09ae.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `cache`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.cache:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a0ba8.  v0:= 16I;
  #L4a0bac.  call temp:= `cacheWithInitialCapacity`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.cacheWithInitialCapacity:(I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a0bb2.  v0:= temp @kind object;
  #L4a0bb4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `cacheWithInitialCapacity`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.cacheWithInitialCapacity:(I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a0bc8.  v0:= "initialCapacity" @kind object;
  #L4a0bcc.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a0bd2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCache`;
  #L4a0bd6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCache;.<init>:(Lio/reactivex/rxjava3/core/Observable;I)V` @kind direct;
  #L4a0bdc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a0be2.  v2:= temp @kind object;
  #L4a0be4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `cast`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a0bf8.  v0:= "clazz is null" @kind object;
  #L4a0bfc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0c02.  call temp:= `castFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.castFunction:(Ljava/lang/Class;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a0c08.  v2:= temp @kind object;
  #L4a0c0a.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a0c10.  v2:= temp @kind object;
  #L4a0c12.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `collect`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6454.  v0:= "initialItemSupplier is null" @kind object;
  #L4a6458.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a645e.  v0:= "collector is null" @kind object;
  #L4a6462.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6468.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCollectSingle`;
  #L4a646c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCollectSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @kind direct;
  #L4a6472.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a6478.  v2:= temp @kind object;
  #L4a647a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `collect`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.stream.Collector` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.collect:(Ljava/util/stream/Collector;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a648c.  v0:= "collector is null" @kind object;
  #L4a6490.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6496.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableCollectWithCollectorSingle`;
  #L4a649a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableCollectWithCollectorSingle;.<init>:(Lio/reactivex/rxjava3/core/Observable;Ljava/util/stream/Collector;)V` @kind direct;
  #L4a64a0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a64a6.  v2:= temp @kind object;
  #L4a64a8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `collectInto`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.collectInto:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a64bc.  v0:= "initialItem is null" @kind object;
  #L4a64c0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a64c6.  call temp:= `justSupplier`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justSupplier:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a64cc.  v2:= temp @kind object;
  #L4a64ce.  call temp:= `collect`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a64d4.  v2:= temp @kind object;
  #L4a64d6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `compose`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableTransformer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.compose:(Lio/reactivex/rxjava3/core/ObservableTransformer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a12b8.  v0:= "composer is null" @kind object;
  #L4a12bc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a12c2.  v2:= temp @kind object;
  #L4a12c4.  v2:= (`io.reactivex.rxjava3.core.ObservableTransformer`) v2 @kind object;
  #L4a12c8.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/ObservableTransformer;.apply:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/ObservableSource;` @kind interface;
  #L4a12ce.  v2:= temp @kind object;
  #L4a12d0.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a12d6.  v2:= temp @kind object;
  #L4a12d8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a17fc.  v0:= 2I;
  #L4a17fe.  call temp:= `concatMap`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1804.  v2:= temp @kind object;
  #L4a1806.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMap`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a1818.  v0:= "mapper is null" @kind object;
  #L4a181c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1822.  v0:= "bufferSize" @kind object;
  #L4a1826.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a182c.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L4a1830.  if v0 == 0 then goto L4a185a;
  #L4a1834.  v4:= v2 @kind object;
  #L4a1836.  v4:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v4 @kind object;
  #L4a183a.  call temp:= `get`(v4) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4a1840.  v4:= temp @kind object;
  #L4a1842.  if v4 != 0 then goto L4a1850;
  #L4a1846.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a184c.  v3:= temp @kind object;
  #L4a184e.  return v3 @kind object;
  #L4a1850.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1856.  v3:= temp @kind object;
  #L4a1858.  return v3 @kind object;
  #L4a185a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap`;
  #L4a185e.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a1862.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4a1868.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a186e.  v3:= temp @kind object;
  #L4a1870.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMap`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMap:(Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a1884.  v0:= "mapper is null" @kind object;
  #L4a1888.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a188e.  v0:= "bufferSize" @kind object;
  #L4a1892.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a1898.  v0:= "scheduler is null" @kind object;
  #L4a189c.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a18a2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler`;
  #L4a18a6.  v5:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a18aa.  v1:= v0 @kind object;
  #L4a18ac.  v2:= v7 @kind object;
  #L4a18ae.  v3:= v8 @kind object;
  #L4a18b0.  v4:= v9;
  #L4a18b2.  v6:= v10 @kind object;
  #L4a18b4.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a18ba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a18c0.  v8:= temp @kind object;
  #L4a18c2.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletable`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a044c.  v0:= 2I;
  #L4a044e.  call temp:= `concatMapCompletable`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L4a0454.  v2:= temp @kind object;
  #L4a0456.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletable`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a0468.  v0:= "mapper is null" @kind object;
  #L4a046c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0472.  v0:= "capacityHint" @kind object;
  #L4a0476.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a047c.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable`;
  #L4a0480.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a0484.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4a048a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4a0490.  v3:= temp @kind object;
  #L4a0492.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletableDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a04a4.  v0:= 1I;
  #L4a04a6.  v1:= 2I;
  #L4a04a8.  call temp:= `concatMapCompletableDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L4a04ae.  v3:= temp @kind object;
  #L4a04b0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletableDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a04c4.  v0:= 2I;
  #L4a04c6.  call temp:= `concatMapCompletableDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L4a04cc.  v2:= temp @kind object;
  #L4a04ce.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletableDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a04e0.  v0:= "mapper is null" @kind object;
  #L4a04e4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a04ea.  v0:= "bufferSize" @kind object;
  #L4a04ee.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a04f4.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapCompletable`;
  #L4a04f8.  if v3 == 0 then goto L4a0502;
  #L4a04fc.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a0500.  goto L4a0506;
  #L4a0502.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a0506.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4a050c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4a0512.  v2:= temp @kind object;
  #L4a0514.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a18d4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a18da.  v0:= temp;
  #L4a18dc.  v1:= 1I;
  #L4a18de.  call temp:= `concatMapDelayError`(v2, v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a18e4.  v3:= temp @kind object;
  #L4a18e6.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a18f8.  v0:= "mapper is null" @kind object;
  #L4a18fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1902.  v0:= "bufferSize" @kind object;
  #L4a1906.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a190c.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L4a1910.  if v0 == 0 then goto L4a193a;
  #L4a1914.  v3:= v1 @kind object;
  #L4a1916.  v3:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v3 @kind object;
  #L4a191a.  call temp:= `get`(v3) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4a1920.  v3:= temp @kind object;
  #L4a1922.  if v3 != 0 then goto L4a1930;
  #L4a1926.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a192c.  v2:= temp @kind object;
  #L4a192e.  return v2 @kind object;
  #L4a1930.  call temp:= `scalarXMap`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1936.  v2:= temp @kind object;
  #L4a1938.  return v2 @kind object;
  #L4a193a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMap`;
  #L4a193e.  if v3 == 0 then goto L4a1948;
  #L4a1942.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a1946.  goto L4a194c;
  #L4a1948.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a194c.  call `<init>`(v0, v1, v2, v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)V` @kind direct;
  #L4a1952.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1958.  v2:= temp @kind object;
  #L4a195a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapDelayError`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapDelayError:(Lio/reactivex/rxjava3/functions/Function;ZILio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a196c.  v0:= "mapper is null" @kind object;
  #L4a1970.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1976.  v0:= "bufferSize" @kind object;
  #L4a197a.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a1980.  v0:= "scheduler is null" @kind object;
  #L4a1984.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a198a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler`;
  #L4a198e.  if v9 == 0 then goto L4a1998;
  #L4a1992.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a1996.  goto L4a199c;
  #L4a1998.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a199c.  v5:= v9 @kind object;
  #L4a199e.  v1:= v0 @kind object;
  #L4a19a0.  v2:= v7 @kind object;
  #L4a19a2.  v3:= v8 @kind object;
  #L4a19a4.  v4:= v10;
  #L4a19a6.  v6:= v11 @kind object;
  #L4a19a8.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a19ae.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a19b4.  v8:= temp @kind object;
  #L4a19b6.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapEager`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a19c8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a19ce.  v0:= temp;
  #L4a19d0.  v1:= 2147483647I;
  #L4a19d6.  call temp:= `concatMapEager`(v2, v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;II)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a19dc.  v3:= temp @kind object;
  #L4a19de.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapEager`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;II)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a19f0.  v0:= "mapper is null" @kind object;
  #L4a19f4.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a19fa.  v0:= "maxConcurrency" @kind object;
  #L4a19fe.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a1a04.  v0:= "bufferSize" @kind object;
  #L4a1a08.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a1a0e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager`;
  #L4a1a12.  v4:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a1a16.  v1:= v0 @kind object;
  #L4a1a18.  v2:= v7 @kind object;
  #L4a1a1a.  v3:= v8 @kind object;
  #L4a1a1c.  v5:= v9;
  #L4a1a1e.  v6:= v10;
  #L4a1a20.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;II)V` @kind direct;
  #L4a1a26.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1a2c.  v8:= temp @kind object;
  #L4a1a2e.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapEagerDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a1a40.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a1a46.  v0:= temp;
  #L4a1a48.  v1:= 2147483647I;
  #L4a1a4e.  call temp:= `concatMapEagerDelayError`(v2, v3, v4, v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1a54.  v3:= temp @kind object;
  #L4a1a56.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapEagerDelayError`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `int` v11 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a1a68.  v0:= "mapper is null" @kind object;
  #L4a1a6c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1a72.  v0:= "maxConcurrency" @kind object;
  #L4a1a76.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a1a7c.  v0:= "bufferSize" @kind object;
  #L4a1a80.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a1a86.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapEager`;
  #L4a1a8a.  if v9 == 0 then goto L4a1a94;
  #L4a1a8e.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a1a92.  goto L4a1a98;
  #L4a1a94.  v9:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a1a98.  v4:= v9 @kind object;
  #L4a1a9a.  v1:= v0 @kind object;
  #L4a1a9c.  v2:= v7 @kind object;
  #L4a1a9e.  v3:= v8 @kind object;
  #L4a1aa0.  v5:= v10;
  #L4a1aa2.  v6:= v11;
  #L4a1aa4.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapEager;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;II)V` @kind direct;
  #L4a1aaa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1ab0.  v8:= temp @kind object;
  #L4a1ab2.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapIterable`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1ac4.  v0:= "mapper is null" @kind object;
  #L4a1ac8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1ace.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable`;
  #L4a1ad2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a1ad8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1ade.  v2:= temp @kind object;
  #L4a1ae0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapMaybe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1af4.  v0:= 2I;
  #L4a1af6.  call temp:= `concatMapMaybe`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1afc.  v2:= temp @kind object;
  #L4a1afe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapMaybe`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a1b10.  v0:= "mapper is null" @kind object;
  #L4a1b14.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1b1a.  v0:= "bufferSize" @kind object;
  #L4a1b1e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a1b24.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe`;
  #L4a1b28.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a1b2c.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4a1b32.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1b38.  v3:= temp @kind object;
  #L4a1b3a.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapMaybeDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a1b4c.  v0:= 1I;
  #L4a1b4e.  v1:= 2I;
  #L4a1b50.  call temp:= `concatMapMaybeDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1b56.  v3:= temp @kind object;
  #L4a1b58.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapMaybeDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1b6c.  v0:= 2I;
  #L4a1b6e.  call temp:= `concatMapMaybeDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1b74.  v2:= temp @kind object;
  #L4a1b76.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapMaybeDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1b88.  v0:= "mapper is null" @kind object;
  #L4a1b8c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1b92.  v0:= "bufferSize" @kind object;
  #L4a1b96.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a1b9c.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapMaybe`;
  #L4a1ba0.  if v3 == 0 then goto L4a1baa;
  #L4a1ba4.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a1ba8.  goto L4a1bae;
  #L4a1baa.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a1bae.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4a1bb4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1bba.  v2:= temp @kind object;
  #L4a1bbc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapSingle`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1bd0.  v0:= 2I;
  #L4a1bd2.  call temp:= `concatMapSingle`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingle:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1bd8.  v2:= temp @kind object;
  #L4a1bda.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapSingle`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingle:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a1bec.  v0:= "mapper is null" @kind object;
  #L4a1bf0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1bf6.  v0:= "bufferSize" @kind object;
  #L4a1bfa.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a1c00.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapSingle`;
  #L4a1c04.  v1:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a1c08.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4a1c0e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1c14.  v3:= temp @kind object;
  #L4a1c16.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapSingleDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a1c28.  v0:= 1I;
  #L4a1c2a.  v1:= 2I;
  #L4a1c2c.  call temp:= `concatMapSingleDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1c32.  v3:= temp @kind object;
  #L4a1c34.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapSingleDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1c48.  v0:= 2I;
  #L4a1c4a.  call temp:= `concatMapSingleDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1c50.  v2:= temp @kind object;
  #L4a1c52.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapSingleDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1c64.  v0:= "mapper is null" @kind object;
  #L4a1c68.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1c6e.  v0:= "bufferSize" @kind object;
  #L4a1c72.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a1c78.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapSingle`;
  #L4a1c7c.  if v3 == 0 then goto L4a1c86;
  #L4a1c80.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.END` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a1c84.  goto L4a1c8a;
  #L4a1c86.  v3:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a1c8a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4a1c90.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1c96.  v2:= temp @kind object;
  #L4a1c98.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatMapStream`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `io.reactivex.rxjava3.functions.Function` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatMapStream:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a1cac.  call temp:= `flatMapStream`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1cb2.  v1:= temp @kind object;
  #L4a1cb4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1cc8.  v0:= "other is null" @kind object;
  #L4a1ccc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1cd2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithCompletable`;
  #L4a1cd6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatWithCompletable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L4a1cdc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1ce2.  v2:= temp @kind object;
  #L4a1ce4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1cf8.  v0:= "other is null" @kind object;
  #L4a1cfc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1d02.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithMaybe`;
  #L4a1d06.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatWithMaybe;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L4a1d0c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1d12.  v2:= temp @kind object;
  #L4a1d14.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1d28.  v0:= "other is null" @kind object;
  #L4a1d2c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1d32.  call temp:= `concat`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1d38.  v2:= temp @kind object;
  #L4a1d3a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concatWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.concatWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1d4c.  v0:= "other is null" @kind object;
  #L4a1d50.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1d56.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableConcatWithSingle`;
  #L4a1d5a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatWithSingle;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a1d60.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1d66.  v2:= temp @kind object;
  #L4a1d68.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `contains`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.contains:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a64e8.  v0:= "item is null" @kind object;
  #L4a64ec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a64f2.  call temp:= `equalsWith`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.equalsWith:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L4a64f8.  v2:= temp @kind object;
  #L4a64fa.  call temp:= `any`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.any:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a6500.  v2:= temp @kind object;
  #L4a6502.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `count`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.count:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6514.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableCountSingle`;
  #L4a6518.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableCountSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a651e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a6524.  v0:= temp @kind object;
  #L4a6526.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `debounce`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1ddc.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a1de2.  v0:= temp @kind object;
  #L4a1de4.  call temp:= `debounce`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1dea.  v2:= temp @kind object;
  #L4a1dec.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `debounce`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a1e00.  v0:= "unit is null" @kind object;
  #L4a1e04.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1e0a.  v0:= "scheduler is null" @kind object;
  #L4a1e0e.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1e14.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed`;
  #L4a1e18.  v1:= v0 @kind object;
  #L4a1e1a.  v2:= v7 @kind object;
  #L4a1e1c.  v3:= v8 @kind wide;
  #L4a1e1e.  v5:= v10 @kind object;
  #L4a1e20.  v6:= v11 @kind object;
  #L4a1e22.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounceTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a1e28.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1e2e.  v8:= temp @kind object;
  #L4a1e30.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `debounce`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.debounce:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1dac.  v0:= "debounceIndicator is null" @kind object;
  #L4a1db0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1db6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDebounce`;
  #L4a1dba.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDebounce;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a1dc0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1dc6.  v2:= temp @kind object;
  #L4a1dc8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `defaultIfEmpty`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.defaultIfEmpty:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1e44.  v0:= "defaultItem is null" @kind object;
  #L4a1e48.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1e4e.  call temp:= `just`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1e54.  v2:= temp @kind object;
  #L4a1e56.  call temp:= `switchIfEmpty`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.switchIfEmpty:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1e5c.  v2:= temp @kind object;
  #L4a1e5e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delay`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a1ef0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a1ef6.  v4:= temp @kind object;
  #L4a1ef8.  v5:= 0I;
  #L4a1efa.  v0:= v6 @kind object;
  #L4a1efc.  v1:= v7 @kind wide;
  #L4a1efe.  v3:= v9 @kind object;
  #L4a1f00.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1f06.  v7:= temp @kind object;
  #L4a1f08.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delay`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a1f48.  v5:= 0I;
  #L4a1f4a.  v0:= v6 @kind object;
  #L4a1f4c.  v1:= v7 @kind wide;
  #L4a1f4e.  v3:= v9 @kind object;
  #L4a1f50.  v4:= v10 @kind object;
  #L4a1f52.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1f58.  v7:= temp @kind object;
  #L4a1f5a.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delay`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a1f6c.  v0:= "unit is null" @kind object;
  #L4a1f70.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1f76.  v0:= "scheduler is null" @kind object;
  #L4a1f7a.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1f80.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDelay`;
  #L4a1f84.  v1:= v0 @kind object;
  #L4a1f86.  v2:= v8 @kind object;
  #L4a1f88.  v3:= v9 @kind wide;
  #L4a1f8a.  v5:= v11 @kind object;
  #L4a1f8c.  v6:= v12 @kind object;
  #L4a1f8e.  v7:= v13;
  #L4a1f90.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDelay;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L4a1f96.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1f9c.  v9:= temp @kind object;
  #L4a1f9e.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delay`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a1f1c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a1f22.  v4:= temp @kind object;
  #L4a1f24.  v0:= v6 @kind object;
  #L4a1f26.  v1:= v7 @kind wide;
  #L4a1f28.  v3:= v9 @kind object;
  #L4a1f2a.  v5:= v10;
  #L4a1f2c.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1f32.  v7:= temp @kind object;
  #L4a1f34.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delay`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a1ea0.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.delaySubscription:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1ea6.  v1:= temp @kind object;
  #L4a1ea8.  call temp:= `delay`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1eae.  v1:= temp @kind object;
  #L4a1eb0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.delay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1ec4.  v0:= "itemDelayIndicator is null" @kind object;
  #L4a1ec8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1ece.  call temp:= `itemDelay`(v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.itemDelay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a1ed4.  v2:= temp @kind object;
  #L4a1ed6.  call temp:= `flatMap`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1edc.  v2:= temp @kind object;
  #L4a1ede.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delaySubscription`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1fe0.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a1fe6.  v0:= temp @kind object;
  #L4a1fe8.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a1fee.  v2:= temp @kind object;
  #L4a1ff0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delaySubscription`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a2004.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a200a.  v1:= temp @kind object;
  #L4a200c.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.delaySubscription:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a2012.  v1:= temp @kind object;
  #L4a2014.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `delaySubscription`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.delaySubscription:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a1fb0.  v0:= "subscriptionIndicator is null" @kind object;
  #L4a1fb4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a1fba.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther`;
  #L4a1fbe.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDelaySubscriptionOther;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a1fc4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a1fca.  v2:= temp @kind object;
  #L4a1fcc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `dematerialize`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.dematerialize:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a2028.  v0:= "selector is null" @kind object;
  #L4a202c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2032.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDematerialize`;
  #L4a2036.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDematerialize;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a203c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2042.  v2:= temp @kind object;
  #L4a2044.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `distinct`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.distinct:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a2058.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a205e.  v0:= temp @kind object;
  #L4a2060.  call temp:= `createHashSet`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createHashSet:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a2066.  v1:= temp @kind object;
  #L4a2068.  call temp:= `distinct`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.distinct:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a206e.  v0:= temp @kind object;
  #L4a2070.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `distinct`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.distinct:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a2084.  call temp:= `createHashSet`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.createHashSet:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a208a.  v0:= temp @kind object;
  #L4a208c.  call temp:= `distinct`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.distinct:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a2092.  v2:= temp @kind object;
  #L4a2094.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `distinct`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Supplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.distinct:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a20a8.  v0:= "keySelector is null" @kind object;
  #L4a20ac.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a20b2.  v0:= "collectionSupplier is null" @kind object;
  #L4a20b6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a20bc.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDistinct`;
  #L4a20c0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDistinct;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a20c6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a20cc.  v2:= temp @kind object;
  #L4a20ce.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `distinctUntilChanged`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.distinctUntilChanged:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a20e0.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a20e6.  v0:= temp @kind object;
  #L4a20e8.  call temp:= `distinctUntilChanged`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.distinctUntilChanged:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a20ee.  v0:= temp @kind object;
  #L4a20f0.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `distinctUntilChanged`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.distinctUntilChanged:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a2104.  v0:= "comparer is null" @kind object;
  #L4a2108.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a210e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDistinctUntilChanged`;
  #L4a2112.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a2118.  v1:= temp @kind object;
  #L4a211a.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDistinctUntilChanged;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L4a2120.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2126.  v3:= temp @kind object;
  #L4a2128.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `distinctUntilChanged`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.distinctUntilChanged:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a213c.  v0:= "keySelector is null" @kind object;
  #L4a2140.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2146.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDistinctUntilChanged`;
  #L4a214a.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L4a2150.  v1:= temp @kind object;
  #L4a2152.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDistinctUntilChanged;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L4a2158.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a215e.  v3:= temp @kind object;
  #L4a2160.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doAfterNext`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doAfterNext:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a2174.  v0:= "onAfterNext is null" @kind object;
  #L4a2178.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a217e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDoAfterNext`;
  #L4a2182.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoAfterNext;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L4a2188.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a218e.  v2:= temp @kind object;
  #L4a2190.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doAfterTerminate`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doAfterTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a21a4.  v0:= "onAfterTerminate is null" @kind object;
  #L4a21a8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a21ae.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a21b4.  v0:= temp @kind object;
  #L4a21b6.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a21bc.  v1:= temp @kind object;
  #L4a21be.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a21c2.  call temp:= `doOnEach`(v3, v0, v1, v2, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnEach:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a21c8.  v4:= temp @kind object;
  #L4a21ca.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doFinally`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doFinally:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a21dc.  v0:= "onFinally is null" @kind object;
  #L4a21e0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a21e6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDoFinally`;
  #L4a21ea.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoFinally;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L4a21f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a21f6.  v2:= temp @kind object;
  #L4a21f8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnComplete`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnComplete:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a220c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a2212.  v0:= temp @kind object;
  #L4a2214.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a221a.  v1:= temp @kind object;
  #L4a221c.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a2220.  call temp:= `doOnEach`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnEach:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a2226.  v4:= temp @kind object;
  #L4a2228.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnDispose`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnDispose:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a223c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a2242.  v0:= temp @kind object;
  #L4a2244.  call temp:= `doOnLifecycle`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a224a.  v2:= temp @kind object;
  #L4a224c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnEach`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `io.reactivex.rxjava3.core.Observer` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnEach:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a2260.  v0:= "observer is null" @kind object;
  #L4a2264.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a226a.  call temp:= `observerOnNext`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.observerOnNext:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a2270.  v0:= temp @kind object;
  #L4a2272.  call temp:= `observerOnError`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.observerOnError:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a2278.  v1:= temp @kind object;
  #L4a227a.  call temp:= `observerOnComplete`(v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.observerOnComplete:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/functions/Action;` @kind static;
  #L4a2280.  v4:= temp @kind object;
  #L4a2282.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a2286.  call temp:= `doOnEach`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnEach:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a228c.  v4:= temp @kind object;
  #L4a228e.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnEach`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnEach:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a22a0.  v0:= "onNotification is null" @kind object;
  #L4a22a4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a22aa.  call temp:= `notificationOnNext`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.notificationOnNext:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a22b0.  v0:= temp @kind object;
  #L4a22b2.  call temp:= `notificationOnError`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.notificationOnError:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a22b8.  v1:= temp @kind object;
  #L4a22ba.  call temp:= `notificationOnComplete`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.notificationOnComplete:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/functions/Action;` @kind static;
  #L4a22c0.  v4:= temp @kind object;
  #L4a22c2.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a22c6.  call temp:= `doOnEach`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnEach:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a22cc.  v4:= temp @kind object;
  #L4a22ce.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnError:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a2338.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a233e.  v0:= temp @kind object;
  #L4a2340.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a2344.  call temp:= `doOnEach`(v2, v0, v3, v1, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnEach:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a234a.  v3:= temp @kind object;
  #L4a234c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnLifecycle`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a2360.  v0:= "onSubscribe is null" @kind object;
  #L4a2364.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a236a.  v0:= "onDispose is null" @kind object;
  #L4a236e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2374.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDoOnLifecycle`;
  #L4a2378.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDoOnLifecycle;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L4a237e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2384.  v2:= temp @kind object;
  #L4a2386.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnNext`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnNext:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a2398.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a239e.  v0:= temp @kind object;
  #L4a23a0.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a23a4.  call temp:= `doOnEach`(v2, v3, v0, v1, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnEach:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a23aa.  v3:= temp @kind object;
  #L4a23ac.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnSubscribe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a23c0.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a23c4.  call temp:= `doOnLifecycle`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a23ca.  v2:= temp @kind object;
  #L4a23cc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `doOnTerminate`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a23e0.  v0:= "onTerminate is null" @kind object;
  #L4a23e4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a23ea.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a23f0.  v0:= temp @kind object;
  #L4a23f2.  call temp:= `actionConsumer`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.actionConsumer:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a23f8.  v1:= temp @kind object;
  #L4a23fa.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a23fe.  call temp:= `doOnEach`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.doOnEach:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a2404.  v4:= temp @kind object;
  #L4a2406.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `elementAt`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.elementAt:(J)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a0678.  v0:= 0L;
  #L4a067c.  v2:= lcmp(v4, v0);
  #L4a0680.  if v2 < 0 then goto L4a0698;
  #L4a0684.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtMaybe`;
  #L4a0688.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableElementAtMaybe;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;J)V` @kind direct;
  #L4a068e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4a0694.  v4:= temp @kind object;
  #L4a0696.  return v4 @kind object;
  #L4a0698.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L4a069c.  v1:= new `java.lang.StringBuilder`;
  #L4a06a0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a06a6.  v2:= "index >= 0 required but it was " @kind object;
  #L4a06aa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a06b0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a06b6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a06bc.  v4:= temp @kind object;
  #L4a06be.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a06c4.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Single` `elementAt`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `long` v4 , `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.elementAt:(JLjava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a6538.  v0:= 0L;
  #L4a653c.  v2:= lcmp(v4, v0);
  #L4a6540.  if v2 < 0 then goto L4a6562;
  #L4a6544.  v0:= "defaultItem is null" @kind object;
  #L4a6548.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a654e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtSingle`;
  #L4a6552.  call `<init>`(v0, v3, v4, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableElementAtSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/lang/Object;)V` @kind direct;
  #L4a6558.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a655e.  v4:= temp @kind object;
  #L4a6560.  return v4 @kind object;
  #L4a6562.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L4a6566.  v0:= new `java.lang.StringBuilder`;
  #L4a656a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a6570.  v1:= "index >= 0 required but it was " @kind object;
  #L4a6574.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a657a.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a6580.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a6586.  v4:= temp @kind object;
  #L4a6588.  call `<init>`(v6, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a658e.  throw v6;
}
procedure `io.reactivex.rxjava3.core.Single` `elementAtOrError`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.elementAtOrError:(J)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a65a0.  v0:= 0L;
  #L4a65a4.  v2:= lcmp(v4, v0);
  #L4a65a8.  if v2 < 0 then goto L4a65c2;
  #L4a65ac.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableElementAtSingle`;
  #L4a65b0.  v1:= 0I;
  #L4a65b2.  call `<init>`(v0, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableElementAtSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/lang/Object;)V` @kind direct;
  #L4a65b8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a65be.  v4:= temp @kind object;
  #L4a65c0.  return v4 @kind object;
  #L4a65c2.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L4a65c6.  v1:= new `java.lang.StringBuilder`;
  #L4a65ca.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a65d0.  v2:= "index >= 0 required but it was " @kind object;
  #L4a65d4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a65da.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a65e0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a65e6.  v4:= temp @kind object;
  #L4a65e8.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a65ee.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `filter`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a2494.  v0:= "predicate is null" @kind object;
  #L4a2498.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a249e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFilter`;
  #L4a24a2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFilter;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4a24a8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a24ae.  v2:= temp @kind object;
  #L4a24b0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `first`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.first:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a6600.  v0:= 0L;
  #L4a6604.  call temp:= `elementAt`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.elementAt:(JLjava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a660a.  v3:= temp @kind object;
  #L4a660c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `firstElement`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.firstElement:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a06d8.  v0:= 0L;
  #L4a06dc.  call temp:= `elementAt`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.elementAt:(J)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L4a06e2.  v0:= temp @kind object;
  #L4a06e4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `firstOrError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.firstOrError:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a6620.  v0:= 0L;
  #L4a6624.  call temp:= `elementAtOrError`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.elementAtOrError:(J)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a662a.  v0:= temp @kind object;
  #L4a662c.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `firstOrErrorStage`(`io.reactivex.rxjava3.core.Observable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.firstOrErrorStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a708c.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver`;
  #L4a7090.  v1:= 0I;
  #L4a7092.  v2:= 0I;
  #L4a7094.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFirstStageObserver;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L4a709a.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind virtual;
  #L4a70a0.  v0:= temp @kind object;
  #L4a70a2.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L4a70a6.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `firstStage`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.firstStage:(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a70b8.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver`;
  #L4a70bc.  v1:= 1I;
  #L4a70be.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFirstStageObserver;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L4a70c4.  call temp:= `subscribeWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind virtual;
  #L4a70ca.  v3:= temp @kind object;
  #L4a70cc.  v3:= (`java.util.concurrent.CompletionStage`) v3 @kind object;
  #L4a70d0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a24c4.  v0:= 0I;
  #L4a24c6.  call temp:= `flatMap`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a24cc.  v2:= temp @kind object;
  #L4a24ce.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a25a0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a25a6.  v0:= temp;
  #L4a25a8.  v1:= 0I;
  #L4a25aa.  call temp:= `flatMap`(v2, v3, v1, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a25b0.  v3:= temp @kind object;
  #L4a25b2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a25c4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a25ca.  v4:= temp;
  #L4a25cc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a25d2.  v5:= temp;
  #L4a25d4.  v3:= 0I;
  #L4a25d6.  v0:= v6 @kind object;
  #L4a25d8.  v1:= v7 @kind object;
  #L4a25da.  v2:= v8 @kind object;
  #L4a25dc.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a25e2.  v7:= temp @kind object;
  #L4a25e4.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a2690.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a2696.  v5:= temp;
  #L4a2698.  v3:= 0I;
  #L4a269a.  v0:= v6 @kind object;
  #L4a269c.  v1:= v7 @kind object;
  #L4a269e.  v2:= v8 @kind object;
  #L4a26a0.  v4:= v9;
  #L4a26a2.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a26a8.  v7:= temp @kind object;
  #L4a26aa.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object, `boolean` v9 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a25f8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a25fe.  v4:= temp;
  #L4a2600.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a2606.  v5:= temp;
  #L4a2608.  v0:= v6 @kind object;
  #L4a260a.  v1:= v7 @kind object;
  #L4a260c.  v2:= v8 @kind object;
  #L4a260e.  v3:= v9;
  #L4a2610.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a2616.  v7:= temp @kind object;
  #L4a2618.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a262c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a2632.  v5:= temp;
  #L4a2634.  v0:= v6 @kind object;
  #L4a2636.  v1:= v7 @kind object;
  #L4a2638.  v2:= v8 @kind object;
  #L4a263a.  v3:= v9;
  #L4a263c.  v4:= v10;
  #L4a263e.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a2644.  v7:= temp @kind object;
  #L4a2646.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a2658.  v0:= "mapper is null" @kind object;
  #L4a265c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2662.  v0:= "combiner is null" @kind object;
  #L4a2666.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a266c.  call temp:= `flatMapWithCombiner`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.flatMapWithCombiner:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a2672.  v2:= temp @kind object;
  #L4a2674.  call temp:= `flatMap`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a267a.  v2:= temp @kind object;
  #L4a267c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a26bc.  v0:= "onNextMapper is null" @kind object;
  #L4a26c0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a26c6.  v0:= "onErrorMapper is null" @kind object;
  #L4a26ca.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a26d0.  v0:= "onCompleteSupplier is null" @kind object;
  #L4a26d4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a26da.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMapNotification`;
  #L4a26de.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMapNotification;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a26e4.  call temp:= `merge`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a26ea.  v2:= temp @kind object;
  #L4a26ec.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object, `int` v5 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a2700.  v0:= "onNextMapper is null" @kind object;
  #L4a2704.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a270a.  v0:= "onErrorMapper is null" @kind object;
  #L4a270e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2714.  v0:= "onCompleteSupplier is null" @kind object;
  #L4a2718.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a271e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMapNotification`;
  #L4a2722.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMapNotification;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a2728.  call temp:= `merge`(v0, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a272e.  v2:= temp @kind object;
  #L4a2730.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a24e0.  v0:= 2147483647I;
  #L4a24e6.  call temp:= `flatMap`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a24ec.  v2:= temp @kind object;
  #L4a24ee.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a2500.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a2506.  v0:= temp;
  #L4a2508.  call temp:= `flatMap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a250e.  v2:= temp @kind object;
  #L4a2510.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMap`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `int` v11 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a2524.  v0:= "mapper is null" @kind object;
  #L4a2528.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a252e.  v0:= "maxConcurrency" @kind object;
  #L4a2532.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a2538.  v0:= "bufferSize" @kind object;
  #L4a253c.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a2542.  v0:= instanceof @variable v7 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L4a2546.  if v0 == 0 then goto L4a2570;
  #L4a254a.  v9:= v7 @kind object;
  #L4a254c.  v9:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v9 @kind object;
  #L4a2550.  call temp:= `get`(v9) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4a2556.  v9:= temp @kind object;
  #L4a2558.  if v9 != 0 then goto L4a2566;
  #L4a255c.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2562.  v8:= temp @kind object;
  #L4a2564.  return v8 @kind object;
  #L4a2566.  call temp:= `scalarXMap`(v9, v8) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a256c.  v8:= temp @kind object;
  #L4a256e.  return v8 @kind object;
  #L4a2570.  v6:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap`;
  #L4a2574.  v0:= v6 @kind object;
  #L4a2576.  v1:= v7 @kind object;
  #L4a2578.  v2:= v8 @kind object;
  #L4a257a.  v3:= v9;
  #L4a257c.  v4:= v10;
  #L4a257e.  v5:= v11;
  #L4a2580.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;ZII)V` @kind direct;
  #L4a2586.  call temp:= `onAssembly`(v6) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a258c.  v8:= temp @kind object;
  #L4a258e.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `flatMapCompletable`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a0528.  v0:= 0I;
  #L4a052a.  call temp:= `flatMapCompletable`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L4a0530.  v2:= temp @kind object;
  #L4a0532.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `flatMapCompletable`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a0544.  v0:= "mapper is null" @kind object;
  #L4a0548.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a054e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapCompletableCompletable`;
  #L4a0552.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapCompletableCompletable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4a0558.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4a055e.  v2:= temp @kind object;
  #L4a0560.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapIterable`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a2744.  v0:= "mapper is null" @kind object;
  #L4a2748.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a274e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlattenIterable`;
  #L4a2752.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlattenIterable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a2758.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a275e.  v2:= temp @kind object;
  #L4a2760.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapIterable`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a2774.  v0:= "mapper is null" @kind object;
  #L4a2778.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a277e.  v0:= "combiner is null" @kind object;
  #L4a2782.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2788.  call temp:= `flatMapIntoIterable`(v8) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.flatMapIntoIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a278e.  v2:= temp @kind object;
  #L4a2790.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a2796.  v5:= temp;
  #L4a2798.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a279e.  v6:= temp;
  #L4a27a0.  v4:= 0I;
  #L4a27a2.  v1:= v7 @kind object;
  #L4a27a4.  v3:= v9 @kind object;
  #L4a27a6.  call temp:= `flatMap`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;ZII)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a27ac.  v8:= temp @kind object;
  #L4a27ae.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapMaybe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a27c0.  v0:= 0I;
  #L4a27c2.  call temp:= `flatMapMaybe`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a27c8.  v2:= temp @kind object;
  #L4a27ca.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapMaybe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a27dc.  v0:= "mapper is null" @kind object;
  #L4a27e0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a27e6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe`;
  #L4a27ea.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4a27f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a27f6.  v2:= temp @kind object;
  #L4a27f8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapSingle`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a280c.  v0:= 0I;
  #L4a280e.  call temp:= `flatMapSingle`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a2814.  v2:= temp @kind object;
  #L4a2816.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapSingle`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a2828.  v0:= "mapper is null" @kind object;
  #L4a282c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2832.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapSingle`;
  #L4a2836.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4a283c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2842.  v2:= temp @kind object;
  #L4a2844.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapStream`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapStream:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a2858.  v0:= "mapper is null" @kind object;
  #L4a285c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2862.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream`;
  #L4a2866.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableFlatMapStream;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a286c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2872.  v2:= temp @kind object;
  #L4a2874.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEach`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `io.reactivex.rxjava3.functions.Consumer` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.forEach:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a6af8.  call temp:= `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4a6afe.  v1:= temp @kind object;
  #L4a6b00.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEachWhile`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a6b14.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4a6b18.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a6b1c.  call temp:= `forEachWhile`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4a6b22.  v3:= temp @kind object;
  #L4a6b24.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEachWhile`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6b38.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a6b3c.  call temp:= `forEachWhile`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4a6b42.  v2:= temp @kind object;
  #L4a6b44.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `forEachWhile`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Action` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.forEachWhile:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6b58.  v0:= "onNext is null" @kind object;
  #L4a6b5c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6b62.  v0:= "onError is null" @kind object;
  #L4a6b66.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6b6c.  v0:= "onComplete is null" @kind object;
  #L4a6b70.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6b76.  v0:= new `io.reactivex.rxjava3.internal.observers.ForEachWhileObserver`;
  #L4a6b7a.  call `<init>`(v0, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/observers/ForEachWhileObserver;.<init>:(Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L4a6b80.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4a6b86.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `groupBy`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a2c98.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a2c9e.  v0:= temp @kind object;
  #L4a2ca0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a2ca6.  v1:= temp;
  #L4a2ca8.  v2:= 0I;
  #L4a2caa.  call temp:= `groupBy`(v3, v4, v0, v2, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a2cb0.  v4:= temp @kind object;
  #L4a2cb2.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `groupBy`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a2cf0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a2cf6.  v0:= temp;
  #L4a2cf8.  v1:= 0I;
  #L4a2cfa.  call temp:= `groupBy`(v2, v3, v4, v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a2d00.  v3:= temp @kind object;
  #L4a2d02.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `groupBy`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a2d14.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a2d1a.  v0:= temp;
  #L4a2d1c.  call temp:= `groupBy`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a2d22.  v2:= temp @kind object;
  #L4a2d24.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `groupBy`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `boolean` v10 , `int` v11 ) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a2d38.  v0:= "keySelector is null" @kind object;
  #L4a2d3c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2d42.  v0:= "valueSelector is null" @kind object;
  #L4a2d46.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2d4c.  v0:= "bufferSize" @kind object;
  #L4a2d50.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a2d56.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableGroupBy`;
  #L4a2d5a.  v1:= v0 @kind object;
  #L4a2d5c.  v2:= v7 @kind object;
  #L4a2d5e.  v3:= v8 @kind object;
  #L4a2d60.  v4:= v9 @kind object;
  #L4a2d62.  v5:= v11;
  #L4a2d64.  v6:= v10;
  #L4a2d66.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupBy;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4a2d6c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2d72.  v8:= temp @kind object;
  #L4a2d74.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `groupBy`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a2cc4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a2cca.  v0:= temp @kind object;
  #L4a2ccc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a2cd2.  v1:= temp;
  #L4a2cd4.  call temp:= `groupBy`(v2, v3, v0, v4, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.groupBy:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a2cda.  v3:= temp @kind object;
  #L4a2cdc.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `groupJoin`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `io.reactivex.rxjava3.functions.Function` v10 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.groupJoin:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a2d88.  v0:= "other is null" @kind object;
  #L4a2d8c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2d92.  v0:= "leftEnd is null" @kind object;
  #L4a2d96.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2d9c.  v0:= "rightEnd is null" @kind object;
  #L4a2da0.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2da6.  v0:= "resultSelector is null" @kind object;
  #L4a2daa.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2db0.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableGroupJoin`;
  #L4a2db4.  v1:= v0 @kind object;
  #L4a2db6.  v2:= v7 @kind object;
  #L4a2db8.  v3:= v8 @kind object;
  #L4a2dba.  v4:= v9 @kind object;
  #L4a2dbc.  v5:= v10 @kind object;
  #L4a2dbe.  v6:= v11 @kind object;
  #L4a2dc0.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableGroupJoin;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4a2dc6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2dcc.  v8:= temp @kind object;
  #L4a2dce.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `hide`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.hide:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a2de0.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableHide`;
  #L4a2de4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableHide;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a2dea.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a2df0.  v0:= temp @kind object;
  #L4a2df2.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `ignoreElements`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.ignoreElements:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a0574.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableIgnoreElementsCompletable`;
  #L4a0578.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableIgnoreElementsCompletable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a057e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4a0584.  v0:= temp @kind object;
  #L4a0586.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `isEmpty`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.isEmpty:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6640.  call temp:= `alwaysFalse`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysFalse:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L4a6646.  v0:= temp @kind object;
  #L4a6648.  call temp:= `all`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.all:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a664e.  v0:= temp @kind object;
  #L4a6650.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `join`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v8 @kind object, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `io.reactivex.rxjava3.functions.Function` v10 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.join:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a2fe8.  v0:= "other is null" @kind object;
  #L4a2fec.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2ff2.  v0:= "leftEnd is null" @kind object;
  #L4a2ff6.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a2ffc.  v0:= "rightEnd is null" @kind object;
  #L4a3000.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3006.  v0:= "resultSelector is null" @kind object;
  #L4a300a.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3010.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableJoin`;
  #L4a3014.  v1:= v0 @kind object;
  #L4a3016.  v2:= v7 @kind object;
  #L4a3018.  v3:= v8 @kind object;
  #L4a301a.  v4:= v9 @kind object;
  #L4a301c.  v5:= v10 @kind object;
  #L4a301e.  v6:= v11 @kind object;
  #L4a3020.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableJoin;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4a3026.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a302c.  v8:= temp @kind object;
  #L4a302e.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `last`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.last:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6664.  v0:= "defaultItem is null" @kind object;
  #L4a6668.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a666e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableLastSingle`;
  #L4a6672.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L4a6678.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a667e.  v2:= temp @kind object;
  #L4a6680.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `lastElement`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.lastElement:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a06f8.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableLastMaybe`;
  #L4a06fc.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastMaybe;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a0702.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4a0708.  v0:= temp @kind object;
  #L4a070a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `lastOrError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.lastOrError:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a6694.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableLastSingle`;
  #L4a6698.  v1:= 0I;
  #L4a669a.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLastSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L4a66a0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a66a6.  v0:= temp @kind object;
  #L4a66a8.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `lastOrErrorStage`(`io.reactivex.rxjava3.core.Observable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.lastOrErrorStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a70e4.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableLastStageObserver`;
  #L4a70e8.  v1:= 0I;
  #L4a70ea.  v2:= 0I;
  #L4a70ec.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableLastStageObserver;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L4a70f2.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind virtual;
  #L4a70f8.  v0:= temp @kind object;
  #L4a70fa.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L4a70fe.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `lastStage`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.lastStage:(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a7110.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableLastStageObserver`;
  #L4a7114.  v1:= 1I;
  #L4a7116.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableLastStageObserver;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L4a711c.  call temp:= `subscribeWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind virtual;
  #L4a7122.  v3:= temp @kind object;
  #L4a7124.  v3:= (`java.util.concurrent.CompletionStage`) v3 @kind object;
  #L4a7128.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `lift`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableOperator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.lift:(Lio/reactivex/rxjava3/core/ObservableOperator;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3500.  v0:= "lifter is null" @kind object;
  #L4a3504.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a350a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableLift`;
  #L4a350e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableLift;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableOperator;)V` @kind direct;
  #L4a3514.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a351a.  v2:= temp @kind object;
  #L4a351c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `map`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3530.  v0:= "mapper is null" @kind object;
  #L4a3534.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a353a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMap`;
  #L4a353e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a3544.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a354a.  v2:= temp @kind object;
  #L4a354c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mapOptional`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mapOptional:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3560.  v0:= "mapper is null" @kind object;
  #L4a3564.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a356a.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableMapOptional`;
  #L4a356e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableMapOptional;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a3574.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a357a.  v2:= temp @kind object;
  #L4a357c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `materialize`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.materialize:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3590.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize`;
  #L4a3594.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMaterialize;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a359a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a35a0.  v0:= temp @kind object;
  #L4a35a2.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3ae8.  v0:= "other is null" @kind object;
  #L4a3aec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3af2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMergeWithCompletable`;
  #L4a3af6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMergeWithCompletable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L4a3afc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3b02.  v2:= temp @kind object;
  #L4a3b04.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3b18.  v0:= "other is null" @kind object;
  #L4a3b1c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3b22.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMergeWithMaybe`;
  #L4a3b26.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMergeWithMaybe;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L4a3b2c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3b32.  v2:= temp @kind object;
  #L4a3b34.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3b48.  v0:= "other is null" @kind object;
  #L4a3b4c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3b52.  call temp:= `merge`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.merge:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3b58.  v2:= temp @kind object;
  #L4a3b5a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `mergeWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.mergeWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3b6c.  v0:= "other is null" @kind object;
  #L4a3b70.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3b76.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableMergeWithSingle`;
  #L4a3b7a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableMergeWithSingle;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a3b80.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3b86.  v2:= temp @kind object;
  #L4a3b88.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `observeOn`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a3bbc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a3bc2.  v0:= temp;
  #L4a3bc4.  v1:= 0I;
  #L4a3bc6.  call temp:= `observeOn`(v2, v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3bcc.  v3:= temp @kind object;
  #L4a3bce.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `observeOn`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3be0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a3be6.  v0:= temp;
  #L4a3be8.  call temp:= `observeOn`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3bee.  v2:= temp @kind object;
  #L4a3bf0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `observeOn`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3c04.  v0:= "scheduler is null" @kind object;
  #L4a3c08.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3c0e.  v0:= "bufferSize" @kind object;
  #L4a3c12.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a3c18.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableObserveOn`;
  #L4a3c1c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableObserveOn;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;ZI)V` @kind direct;
  #L4a3c22.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3c28.  v2:= temp @kind object;
  #L4a3c2a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `ofType`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.ofType:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3c3c.  v0:= "clazz is null" @kind object;
  #L4a3c40.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3c46.  call temp:= `isInstanceOf`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.isInstanceOf:(Ljava/lang/Class;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L4a3c4c.  v0:= temp @kind object;
  #L4a3c4e.  call temp:= `filter`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3c54.  v0:= temp @kind object;
  #L4a3c56.  call temp:= `cast`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3c5c.  v2:= temp @kind object;
  #L4a3c5e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `onErrorComplete`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorComplete:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3c70.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L4a3c76.  v0:= temp @kind object;
  #L4a3c78.  call temp:= `onErrorComplete`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3c7e.  v0:= temp @kind object;
  #L4a3c80.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `onErrorComplete`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3c94.  v0:= "predicate is null" @kind object;
  #L4a3c98.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3c9e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorComplete`;
  #L4a3ca2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorComplete;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4a3ca8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3cae.  v2:= temp @kind object;
  #L4a3cb0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `onErrorResumeNext`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3cc4.  v0:= "fallbackSupplier is null" @kind object;
  #L4a3cc8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3cce.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorNext`;
  #L4a3cd2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorNext;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a3cd8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3cde.  v2:= temp @kind object;
  #L4a3ce0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `onErrorResumeWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorResumeWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3cf4.  v0:= "fallback is null" @kind object;
  #L4a3cf8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3cfe.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a3d04.  v2:= temp @kind object;
  #L4a3d06.  call temp:= `onErrorResumeNext`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3d0c.  v2:= temp @kind object;
  #L4a3d0e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `onErrorReturn`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorReturn:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3d20.  v0:= "itemSupplier is null" @kind object;
  #L4a3d24.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3d2a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableOnErrorReturn`;
  #L4a3d2e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableOnErrorReturn;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a3d34.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3d3a.  v2:= temp @kind object;
  #L4a3d3c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `onErrorReturnItem`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorReturnItem:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3d50.  v0:= "item is null" @kind object;
  #L4a3d54.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3d5a.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a3d60.  v2:= temp @kind object;
  #L4a3d62.  call temp:= `onErrorReturn`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.onErrorReturn:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3d68.  v2:= temp @kind object;
  #L4a3d6a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `onTerminateDetach`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.onTerminateDetach:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3d7c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableDetach`;
  #L4a3d80.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableDetach;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a3d86.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3d8c.  v0:= temp @kind object;
  #L4a3d8e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `publish`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.publish:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3da0.  v0:= "selector is null" @kind object;
  #L4a3da4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3daa.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector`;
  #L4a3dae.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a3db4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3dba.  v2:= temp @kind object;
  #L4a3dbc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `publish`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.publish:()Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6c50.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservablePublish`;
  #L4a6c54.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublish;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a6c5a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/observables/ConnectableObservable;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L4a6c60.  v0:= temp @kind object;
  #L4a6c62.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `reduce`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.reduce:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a071c.  v0:= "reducer is null" @kind object;
  #L4a0720.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0726.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceMaybe`;
  #L4a072a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceMaybe;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4a0730.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4a0736.  v2:= temp @kind object;
  #L4a0738.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `reduce`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.reduce:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a66bc.  v0:= "seed is null" @kind object;
  #L4a66c0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a66c6.  v0:= "reducer is null" @kind object;
  #L4a66ca.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a66d0.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceSeedSingle`;
  #L4a66d4.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceSeedSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4a66da.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a66e0.  v2:= temp @kind object;
  #L4a66e2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `reduceWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.reduceWith:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a66f4.  v0:= "seedSupplier is null" @kind object;
  #L4a66f8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a66fe.  v0:= "reducer is null" @kind object;
  #L4a6702.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6708.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableReduceWithSingle`;
  #L4a670c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReduceWithSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4a6712.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a6718.  v2:= temp @kind object;
  #L4a671a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `repeat`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.repeat:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a3f28.  v0:= 9223372036854775807L;
  #L4a3f32.  call temp:= `repeat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.repeat:(J)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a3f38.  v0:= temp @kind object;
  #L4a3f3a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `repeat`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.repeat:(J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a3f4c.  v0:= 0L;
  #L4a3f50.  v2:= lcmp(v4, v0);
  #L4a3f54.  if v2 < 0 then goto L4a3f7a;
  #L4a3f58.  if v2 != 0 then goto L4a3f66;
  #L4a3f5c.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3f62.  v4:= temp @kind object;
  #L4a3f64.  return v4 @kind object;
  #L4a3f66.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRepeat`;
  #L4a3f6a.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeat;.<init>:(Lio/reactivex/rxjava3/core/Observable;J)V` @kind direct;
  #L4a3f70.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3f76.  v4:= temp @kind object;
  #L4a3f78.  return v4 @kind object;
  #L4a3f7a.  v0:= new `java.lang.IllegalArgumentException`;
  #L4a3f7e.  v1:= new `java.lang.StringBuilder`;
  #L4a3f82.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a3f88.  v2:= "times >= 0 required but it was " @kind object;
  #L4a3f8c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a3f92.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a3f98.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a3f9e.  v4:= temp @kind object;
  #L4a3fa0.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a3fa6.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `repeatUntil`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.repeatUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3fb8.  v0:= "stop is null" @kind object;
  #L4a3fbc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3fc2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatUntil`;
  #L4a3fc6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatUntil;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/BooleanSupplier;)V` @kind direct;
  #L4a3fcc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a3fd2.  v2:= temp @kind object;
  #L4a3fd4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `repeatWhen`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.repeatWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a3fe8.  v0:= "handler is null" @kind object;
  #L4a3fec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a3ff2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatWhen`;
  #L4a3ff6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatWhen;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a3ffc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4002.  v2:= temp @kind object;
  #L4a4004.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4018.  v0:= "selector is null" @kind object;
  #L4a401c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4022.  call temp:= `replaySupplier`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a4028.  v0:= temp @kind object;
  #L4a402a.  call temp:= `multicastSelector`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4030.  v2:= temp @kind object;
  #L4a4032.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4044.  v0:= "selector is null" @kind object;
  #L4a4048.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a404e.  v0:= "bufferSize" @kind object;
  #L4a4052.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a4058.  v0:= 0I;
  #L4a405a.  call temp:= `replaySupplier`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Observable;IZ)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a4060.  v3:= temp @kind object;
  #L4a4062.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4068.  v2:= temp @kind object;
  #L4a406a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a40b4.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a40ba.  v6:= temp @kind object;
  #L4a40bc.  v0:= v7 @kind object;
  #L4a40be.  v1:= v8 @kind object;
  #L4a40c0.  v2:= v9;
  #L4a40c2.  v3:= v10 @kind wide;
  #L4a40c4.  v5:= v12 @kind object;
  #L4a40c6.  call temp:= `replay`(v0, v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a40cc.  v8:= temp @kind object;
  #L4a40ce.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `io.reactivex.rxjava3.functions.Function` v9 @kind object, `int` v10 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.rxjava3.core.Scheduler` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a40e0.  v0:= "selector is null" @kind object;
  #L4a40e4.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a40ea.  v0:= "bufferSize" @kind object;
  #L4a40ee.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a40f4.  v0:= "unit is null" @kind object;
  #L4a40f8.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a40fe.  v0:= "scheduler is null" @kind object;
  #L4a4102.  call temp:= `requireNonNull`(v14, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4108.  v7:= 0I;
  #L4a410a.  v1:= v8 @kind object;
  #L4a410c.  v2:= v10;
  #L4a410e.  v3:= v11 @kind wide;
  #L4a4110.  v5:= v13 @kind object;
  #L4a4112.  v6:= v14 @kind object;
  #L4a4114.  call temp:= `replaySupplier`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Observable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a411a.  v10:= temp @kind object;
  #L4a411c.  call temp:= `multicastSelector`(v10, v9) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4122.  v9:= temp @kind object;
  #L4a4124.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `boolean` v14 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a4138.  v0:= "selector is null" @kind object;
  #L4a413c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4142.  v0:= "bufferSize" @kind object;
  #L4a4146.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a414c.  v0:= "unit is null" @kind object;
  #L4a4150.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4156.  v0:= "scheduler is null" @kind object;
  #L4a415a.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4160.  v0:= v7 @kind object;
  #L4a4162.  v1:= v9;
  #L4a4164.  v2:= v10 @kind wide;
  #L4a4166.  v4:= v12 @kind object;
  #L4a4168.  v5:= v13 @kind object;
  #L4a416a.  v6:= v14;
  #L4a416c.  call temp:= `replaySupplier`(v0, v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Observable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a4172.  v9:= temp @kind object;
  #L4a4174.  call temp:= `multicastSelector`(v9, v8) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a417a.  v8:= temp @kind object;
  #L4a417c.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;IZ)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a407c.  v0:= "selector is null" @kind object;
  #L4a4080.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4086.  v0:= "bufferSize" @kind object;
  #L4a408a.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a4090.  call temp:= `replaySupplier`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Observable;IZ)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a4096.  v3:= temp @kind object;
  #L4a4098.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a409e.  v2:= temp @kind object;
  #L4a40a0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a4190.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a4196.  v5:= temp @kind object;
  #L4a4198.  v0:= v6 @kind object;
  #L4a419a.  v1:= v7 @kind object;
  #L4a419c.  v2:= v8 @kind wide;
  #L4a419e.  v4:= v10 @kind object;
  #L4a41a0.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a41a6.  v7:= temp @kind object;
  #L4a41a8.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `io.reactivex.rxjava3.functions.Function` v8 @kind object, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a41bc.  v0:= "selector is null" @kind object;
  #L4a41c0.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a41c6.  v0:= "unit is null" @kind object;
  #L4a41ca.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a41d0.  v0:= "scheduler is null" @kind object;
  #L4a41d4.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a41da.  v6:= 0I;
  #L4a41dc.  v1:= v7 @kind object;
  #L4a41de.  v2:= v9 @kind wide;
  #L4a41e0.  v4:= v11 @kind object;
  #L4a41e2.  v5:= v12 @kind object;
  #L4a41e4.  call temp:= `replaySupplier`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a41ea.  v9:= temp @kind object;
  #L4a41ec.  call temp:= `multicastSelector`(v9, v8) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a41f2.  v8:= temp @kind object;
  #L4a41f4.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `replay`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `io.reactivex.rxjava3.functions.Function` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(Lio/reactivex/rxjava3/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a4208.  v0:= "selector is null" @kind object;
  #L4a420c.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4212.  v0:= "unit is null" @kind object;
  #L4a4216.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a421c.  v0:= "scheduler is null" @kind object;
  #L4a4220.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4226.  v0:= v6 @kind object;
  #L4a4228.  v1:= v8 @kind wide;
  #L4a422a.  v3:= v10 @kind object;
  #L4a422c.  v4:= v11 @kind object;
  #L4a422e.  v5:= v12;
  #L4a4230.  call temp:= `replaySupplier`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableInternalHelper;.replaySupplier:(Lio/reactivex/rxjava3/core/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a4236.  v8:= temp @kind object;
  #L4a4238.  call temp:= `multicastSelector`(v8, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.multicastSelector:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a423e.  v7:= temp @kind object;
  #L4a4240.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:()Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6c74.  call temp:= `createFrom`(v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.createFrom:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L4a6c7a.  v0:= temp @kind object;
  #L4a6c7c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(I)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6c90.  v0:= "bufferSize" @kind object;
  #L4a6c94.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a6c9a.  v0:= 0I;
  #L4a6c9c.  call temp:= `create`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/rxjava3/core/ObservableSource;IZ)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L4a6ca2.  v2:= temp @kind object;
  #L4a6ca4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a6cdc.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a6ce2.  v5:= temp @kind object;
  #L4a6ce4.  v0:= v6 @kind object;
  #L4a6ce6.  v1:= v7;
  #L4a6ce8.  v2:= v8 @kind wide;
  #L4a6cea.  v4:= v10 @kind object;
  #L4a6cec.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind virtual;
  #L4a6cf2.  v7:= temp @kind object;
  #L4a6cf4.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a6d08.  v0:= "bufferSize" @kind object;
  #L4a6d0c.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a6d12.  v0:= "unit is null" @kind object;
  #L4a6d16.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6d1c.  v0:= "scheduler is null" @kind object;
  #L4a6d20.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6d26.  v7:= 0I;
  #L4a6d28.  v1:= v8 @kind object;
  #L4a6d2a.  v2:= v10 @kind wide;
  #L4a6d2c.  v4:= v12 @kind object;
  #L4a6d2e.  v5:= v13 @kind object;
  #L4a6d30.  v6:= v9;
  #L4a6d32.  call temp:= `create`(v1, v2, v4, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L4a6d38.  v9:= temp @kind object;
  #L4a6d3a.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `int` v8 , `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a6d4c.  v0:= "bufferSize" @kind object;
  #L4a6d50.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a6d56.  v0:= "unit is null" @kind object;
  #L4a6d5a.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6d60.  v0:= "scheduler is null" @kind object;
  #L4a6d64.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6d6a.  v0:= v7 @kind object;
  #L4a6d6c.  v1:= v9 @kind wide;
  #L4a6d6e.  v3:= v11 @kind object;
  #L4a6d70.  v4:= v12 @kind object;
  #L4a6d72.  v5:= v8;
  #L4a6d74.  v6:= v13;
  #L4a6d76.  call temp:= `create`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L4a6d7c.  v8:= temp @kind object;
  #L4a6d7e.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(IZ)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6cb8.  v0:= "bufferSize" @kind object;
  #L4a6cbc.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a6cc2.  call temp:= `create`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/rxjava3/core/ObservableSource;IZ)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L4a6cc8.  v2:= temp @kind object;
  #L4a6cca.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6d90.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a6d96.  v0:= temp @kind object;
  #L4a6d98.  call temp:= `replay`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind virtual;
  #L4a6d9e.  v2:= temp @kind object;
  #L4a6da0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a6db4.  v0:= "unit is null" @kind object;
  #L4a6db8.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6dbe.  v0:= "scheduler is null" @kind object;
  #L4a6dc2.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6dc8.  v6:= 0I;
  #L4a6dca.  v1:= v7 @kind object;
  #L4a6dcc.  v2:= v8 @kind wide;
  #L4a6dce.  v4:= v10 @kind object;
  #L4a6dd0.  v5:= v11 @kind object;
  #L4a6dd2.  call temp:= `create`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L4a6dd8.  v8:= temp @kind object;
  #L4a6dda.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.observables.ConnectableObservable` `replay`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/rxjava3/core/Observable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6dec.  v0:= "unit is null" @kind object;
  #L4a6df0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6df6.  v0:= "scheduler is null" @kind object;
  #L4a6dfa.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6e00.  call temp:= `create`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind static;
  #L4a6e06.  v2:= temp @kind object;
  #L4a6e08.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `retry`(`io.reactivex.rxjava3.core.Observable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a4254.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L4a425a.  v0:= temp @kind object;
  #L4a425c.  v1:= 9223372036854775807L;
  #L4a4266.  call temp:= `retry`(v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a426c.  v0:= temp @kind object;
  #L4a426e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `retry`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a42d4.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L4a42da.  v0:= temp @kind object;
  #L4a42dc.  call temp:= `retry`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a42e2.  v2:= temp @kind object;
  #L4a42e4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `retry`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `long` v4 , `io.reactivex.rxjava3.functions.Predicate` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a42f8.  v0:= 0L;
  #L4a42fc.  v2:= lcmp(v4, v0);
  #L4a4300.  if v2 < 0 then goto L4a4322;
  #L4a4304.  v0:= "predicate is null" @kind object;
  #L4a4308.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a430e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRetryPredicate`;
  #L4a4312.  call `<init>`(v0, v3, v4, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRetryPredicate;.<init>:(Lio/reactivex/rxjava3/core/Observable;JLio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4a4318.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a431e.  v4:= temp @kind object;
  #L4a4320.  return v4 @kind object;
  #L4a4322.  v6:= new `java.lang.IllegalArgumentException`;
  #L4a4326.  v0:= new `java.lang.StringBuilder`;
  #L4a432a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a4330.  v1:= "times >= 0 required but it was " @kind object;
  #L4a4334.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a433a.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a4340.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a4346.  v4:= temp @kind object;
  #L4a4348.  call `<init>`(v6, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a434e.  throw v6;
}
procedure `io.reactivex.rxjava3.core.Observable` `retry`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4280.  v0:= "predicate is null" @kind object;
  #L4a4284.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a428a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate`;
  #L4a428e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRetryBiPredicate;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L4a4294.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a429a.  v2:= temp @kind object;
  #L4a429c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `retry`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a42b0.  v0:= 9223372036854775807L;
  #L4a42ba.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a42c0.  v3:= temp @kind object;
  #L4a42c2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `retryUntil`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.retryUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a4360.  v0:= "stop is null" @kind object;
  #L4a4364.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a436a.  call temp:= `predicateReverseFor`(v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.predicateReverseFor:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L4a4370.  v3:= temp @kind object;
  #L4a4372.  v0:= 9223372036854775807L;
  #L4a437c.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4382.  v3:= temp @kind object;
  #L4a4384.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `retryWhen`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.retryWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4398.  v0:= "handler is null" @kind object;
  #L4a439c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a43a2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableRetryWhen`;
  #L4a43a6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableRetryWhen;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a43ac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a43b2.  v2:= temp @kind object;
  #L4a43b4.  return v2 @kind object;
}
procedure `void` `safeSubscribe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Observer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.safeSubscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a736c.  v0:= "observer is null" @kind object;
  #L4a7370.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7376.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.observers.SafeObserver` @kind boolean;
  #L4a737a.  if v0 == 0 then goto L4a7386;
  #L4a737e.  call `subscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4a7384.  goto L4a7396;
  #L4a7386.  v0:= new `io.reactivex.rxjava3.observers.SafeObserver`;
  #L4a738a.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/observers/SafeObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L4a7390.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4a7396.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Observable` `sample`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4428.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a442e.  v0:= temp @kind object;
  #L4a4430.  call temp:= `sample`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4436.  v2:= temp @kind object;
  #L4a4438.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `sample`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a4478.  v0:= "unit is null" @kind object;
  #L4a447c.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4482.  v0:= "scheduler is null" @kind object;
  #L4a4486.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a448c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed`;
  #L4a4490.  v7:= 0I;
  #L4a4492.  v1:= v0 @kind object;
  #L4a4494.  v2:= v8 @kind object;
  #L4a4496.  v3:= v9 @kind wide;
  #L4a4498.  v5:= v11 @kind object;
  #L4a449a.  v6:= v12 @kind object;
  #L4a449c.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L4a44a2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a44a8.  v9:= temp @kind object;
  #L4a44aa.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `sample`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a44bc.  v0:= "unit is null" @kind object;
  #L4a44c0.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a44c6.  v0:= "scheduler is null" @kind object;
  #L4a44ca.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a44d0.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleTimed`;
  #L4a44d4.  v1:= v0 @kind object;
  #L4a44d6.  v2:= v8 @kind object;
  #L4a44d8.  v3:= v9 @kind wide;
  #L4a44da.  v5:= v11 @kind object;
  #L4a44dc.  v6:= v12 @kind object;
  #L4a44de.  v7:= v13;
  #L4a44e0.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L4a44e6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a44ec.  v9:= temp @kind object;
  #L4a44ee.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `sample`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a444c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a4452.  v4:= temp @kind object;
  #L4a4454.  v0:= v6 @kind object;
  #L4a4456.  v1:= v7 @kind wide;
  #L4a4458.  v3:= v9 @kind object;
  #L4a445a.  v5:= v10;
  #L4a445c.  call temp:= `sample`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4462.  v7:= temp @kind object;
  #L4a4464.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `sample`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a43c8.  v0:= "sampler is null" @kind object;
  #L4a43cc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a43d2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable`;
  #L4a43d6.  v1:= 0I;
  #L4a43d8.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleWithObservable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Z)V` @kind direct;
  #L4a43de.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a43e4.  v3:= temp @kind object;
  #L4a43e6.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `sample`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(Lio/reactivex/rxjava3/core/ObservableSource;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a43f8.  v0:= "sampler is null" @kind object;
  #L4a43fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4402.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable`;
  #L4a4406.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleWithObservable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Z)V` @kind direct;
  #L4a440c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4412.  v2:= temp @kind object;
  #L4a4414.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `scan`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.scan:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4500.  v0:= "accumulator is null" @kind object;
  #L4a4504.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a450a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableScan`;
  #L4a450e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScan;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4a4514.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a451a.  v2:= temp @kind object;
  #L4a451c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `scan`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.scan:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4530.  v0:= "initialValue is null" @kind object;
  #L4a4534.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a453a.  call temp:= `justSupplier`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justSupplier:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a4540.  v2:= temp @kind object;
  #L4a4542.  call temp:= `scanWith`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.scanWith:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4548.  v2:= temp @kind object;
  #L4a454a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `scanWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.scanWith:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a455c.  v0:= "seedSupplier is null" @kind object;
  #L4a4560.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4566.  v0:= "accumulator is null" @kind object;
  #L4a456a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4570.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableScanSeed`;
  #L4a4574.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScanSeed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4a457a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4580.  v2:= temp @kind object;
  #L4a4582.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `serialize`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.serialize:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4594.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSerialized`;
  #L4a4598.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSerialized;.<init>:(Lio/reactivex/rxjava3/core/Observable;)V` @kind direct;
  #L4a459e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a45a4.  v0:= temp @kind object;
  #L4a45a6.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `share`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.share:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a45b8.  call temp:= `publish`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.publish:()Lio/reactivex/rxjava3/observables/ConnectableObservable;` @kind virtual;
  #L4a45be.  v0:= temp @kind object;
  #L4a45c0.  call temp:= `refCount`(v0) @signature `Lio/reactivex/rxjava3/observables/ConnectableObservable;.refCount:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a45c6.  v0:= temp @kind object;
  #L4a45c8.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `single`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.single:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a67ec.  v0:= "defaultItem is null" @kind object;
  #L4a67f0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a67f6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSingleSingle`;
  #L4a67fa.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L4a6800.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a6806.  v2:= temp @kind object;
  #L4a6808.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `singleElement`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.singleElement:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a074c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSingleMaybe`;
  #L4a0750.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSingleMaybe;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a0756.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4a075c.  v0:= temp @kind object;
  #L4a075e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `singleOrError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.singleOrError:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a681c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSingleSingle`;
  #L4a6820.  v1:= 0I;
  #L4a6822.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L4a6828.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a682e.  v0:= temp @kind object;
  #L4a6830.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `singleOrErrorStage`(`io.reactivex.rxjava3.core.Observable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.singleOrErrorStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a713c.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableSingleStageObserver`;
  #L4a7140.  v1:= 0I;
  #L4a7142.  v2:= 0I;
  #L4a7144.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableSingleStageObserver;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L4a714a.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind virtual;
  #L4a7150.  v0:= temp @kind object;
  #L4a7152.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L4a7156.  return v0 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `singleStage`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.singleStage:(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a7168.  v0:= new `io.reactivex.rxjava3.internal.jdk8.ObservableSingleStageObserver`;
  #L4a716c.  v1:= 1I;
  #L4a716e.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/ObservableSingleStageObserver;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L4a7174.  call temp:= `subscribeWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind virtual;
  #L4a717a.  v3:= temp @kind object;
  #L4a717c.  v3:= (`java.util.concurrent.CompletionStage`) v3 @kind object;
  #L4a7180.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skip`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.skip:(J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a45dc.  v0:= 0L;
  #L4a45e0.  v2:= lcmp(v4, v0);
  #L4a45e4.  if v2 < 0 then goto L4a460a;
  #L4a45e8.  if v2 != 0 then goto L4a45f6;
  #L4a45ec.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a45f2.  v4:= temp @kind object;
  #L4a45f4.  return v4 @kind object;
  #L4a45f6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSkip`;
  #L4a45fa.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkip;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;J)V` @kind direct;
  #L4a4600.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4606.  v4:= temp @kind object;
  #L4a4608.  return v4 @kind object;
  #L4a460a.  v0:= new `java.lang.IllegalArgumentException`;
  #L4a460e.  v1:= new `java.lang.StringBuilder`;
  #L4a4612.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a4618.  v2:= "count >= 0 expected but it was " @kind object;
  #L4a461c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a4622.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a4628.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a462e.  v4:= temp @kind object;
  #L4a4630.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a4636.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `skip`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.skip:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a4648.  call temp:= `timer`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a464e.  v1:= temp @kind object;
  #L4a4650.  call temp:= `skipUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.skipUntil:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4656.  v1:= temp @kind object;
  #L4a4658.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skip`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.skip:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a466c.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4672.  v1:= temp @kind object;
  #L4a4674.  call temp:= `skipUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.skipUntil:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a467a.  v1:= temp @kind object;
  #L4a467c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipLast`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a4690.  if v4 < 0 then goto L4a46b6;
  #L4a4694.  if v4 != 0 then goto L4a46a2;
  #L4a4698.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a469e.  v4:= temp @kind object;
  #L4a46a0.  return v4 @kind object;
  #L4a46a2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast`;
  #L4a46a6.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLast;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;I)V` @kind direct;
  #L4a46ac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a46b2.  v4:= temp @kind object;
  #L4a46b4.  return v4 @kind object;
  #L4a46b6.  v0:= new `java.lang.IllegalArgumentException`;
  #L4a46ba.  v1:= new `java.lang.StringBuilder`;
  #L4a46be.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a46c4.  v2:= "count >= 0 required but it was " @kind object;
  #L4a46c8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a46ce.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a46d4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a46da.  v4:= temp @kind object;
  #L4a46dc.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a46e2.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a46f4.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a46fa.  v4:= temp @kind object;
  #L4a46fc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a4702.  v6:= temp;
  #L4a4704.  v5:= 0I;
  #L4a4706.  v0:= v7 @kind object;
  #L4a4708.  v1:= v8 @kind wide;
  #L4a470a.  v3:= v10 @kind object;
  #L4a470c.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4712.  v8:= temp @kind object;
  #L4a4714.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a475c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a4762.  v6:= temp;
  #L4a4764.  v5:= 0I;
  #L4a4766.  v0:= v7 @kind object;
  #L4a4768.  v1:= v8 @kind wide;
  #L4a476a.  v3:= v10 @kind object;
  #L4a476c.  v4:= v11 @kind object;
  #L4a476e.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4774.  v8:= temp @kind object;
  #L4a4776.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a4788.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a478e.  v6:= temp;
  #L4a4790.  v0:= v7 @kind object;
  #L4a4792.  v1:= v8 @kind wide;
  #L4a4794.  v3:= v10 @kind object;
  #L4a4796.  v4:= v11 @kind object;
  #L4a4798.  v5:= v12;
  #L4a479a.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a47a0.  v8:= temp @kind object;
  #L4a47a2.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipLast`(`io.reactivex.rxjava3.core.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4a47b4.  v0:= "unit is null" @kind object;
  #L4a47b8.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a47be.  v0:= "scheduler is null" @kind object;
  #L4a47c2.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a47c8.  v0:= "bufferSize" @kind object;
  #L4a47cc.  call temp:= `verifyPositive`(v15, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a47d2.  v7:= v15 ^< 1;
  #L4a47d6.  v15:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLastTimed`;
  #L4a47da.  v1:= v15 @kind object;
  #L4a47dc.  v2:= v9 @kind object;
  #L4a47de.  v3:= v10 @kind wide;
  #L4a47e0.  v5:= v12 @kind object;
  #L4a47e2.  v6:= v13 @kind object;
  #L4a47e4.  v8:= v14;
  #L4a47e6.  call `<init>`(v1, v2, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipLastTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)V` @kind direct;
  #L4a47ec.  call temp:= `onAssembly`(v15) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a47f2.  v10:= temp @kind object;
  #L4a47f4.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `boolean` v11 ) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a4728.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a472e.  v4:= temp @kind object;
  #L4a4730.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a4736.  v6:= temp;
  #L4a4738.  v0:= v7 @kind object;
  #L4a473a.  v1:= v8 @kind wide;
  #L4a473c.  v3:= v10 @kind object;
  #L4a473e.  v5:= v11;
  #L4a4740.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4746.  v8:= temp @kind object;
  #L4a4748.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipUntil`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.skipUntil:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4808.  v0:= "other is null" @kind object;
  #L4a480c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4812.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipUntil`;
  #L4a4816.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipUntil;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a481c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4822.  v2:= temp @kind object;
  #L4a4824.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `skipWhile`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.skipWhile:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4838.  v0:= "predicate is null" @kind object;
  #L4a483c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4842.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSkipWhile`;
  #L4a4846.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSkipWhile;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4a484c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4852.  v2:= temp @kind object;
  #L4a4854.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `sorted`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.sorted:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a4868.  call temp:= `toList`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a486e.  v0:= temp @kind object;
  #L4a4870.  call temp:= `toObservable`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4876.  v0:= temp @kind object;
  #L4a4878.  call temp:= `naturalComparator`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L4a487e.  v1:= temp @kind object;
  #L4a4880.  call temp:= `listSorter`(v1) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a4886.  v1:= temp @kind object;
  #L4a4888.  call temp:= `map`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a488e.  v0:= temp @kind object;
  #L4a4890.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a4896.  v1:= temp @kind object;
  #L4a4898.  call temp:= `flatMapIterable`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a489e.  v0:= temp @kind object;
  #L4a48a0.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `sorted`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.sorted:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a48b4.  v0:= "comparator is null" @kind object;
  #L4a48b8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a48be.  call temp:= `toList`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a48c4.  v0:= temp @kind object;
  #L4a48c6.  call temp:= `toObservable`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a48cc.  v0:= temp @kind object;
  #L4a48ce.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a48d4.  v2:= temp @kind object;
  #L4a48d6.  call temp:= `map`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a48dc.  v2:= temp @kind object;
  #L4a48de.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a48e4.  v0:= temp @kind object;
  #L4a48e6.  call temp:= `flatMapIterable`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.flatMapIterable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a48ec.  v2:= temp @kind object;
  #L4a48ee.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.startWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4900.  v0:= "other is null" @kind object;
  #L4a4904.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a490a.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.wrap:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4a4910.  v2:= temp @kind object;
  #L4a4912.  call temp:= `toObservable`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4918.  v2:= temp @kind object;
  #L4a491a.  call temp:= `concat`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4920.  v2:= temp @kind object;
  #L4a4922.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.startWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4934.  v0:= "other is null" @kind object;
  #L4a4938.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a493e.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.wrap:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4a4944.  v2:= temp @kind object;
  #L4a4946.  call temp:= `toObservable`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a494c.  v2:= temp @kind object;
  #L4a494e.  call temp:= `concat`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4954.  v2:= temp @kind object;
  #L4a4956.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWith`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.startWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a4968.  v0:= "other is null" @kind object;
  #L4a496c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4972.  v0:= 2I;
  #L4a4974.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a4978.  v1:= 0I;
  #L4a497a.  v0[v1]:= v3 @kind object;
  #L4a497e.  v3:= 1I;
  #L4a4980.  v0[v3]:= v2 @kind object;
  #L4a4984.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a498a.  v3:= temp @kind object;
  #L4a498c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.startWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a49a0.  v0:= "other is null" @kind object;
  #L4a49a4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a49aa.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.wrap:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a49b0.  v2:= temp @kind object;
  #L4a49b2.  call temp:= `toObservable`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a49b8.  v2:= temp @kind object;
  #L4a49ba.  call temp:= `concat`(v2, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a49c0.  v2:= temp @kind object;
  #L4a49c2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWithArray`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `java.lang.Object`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.startWithArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a49d4.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/rxjava3/core/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a49da.  v3:= temp @kind object;
  #L4a49dc.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a49e2.  v0:= temp @kind object;
  #L4a49e4.  if v3 != v0 then goto L4a49f2;
  #L4a49e8.  call temp:= `onAssembly`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a49ee.  v3:= temp @kind object;
  #L4a49f0.  return v3 @kind object;
  #L4a49f2.  v0:= 2I;
  #L4a49f4.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a49f8.  v1:= 0I;
  #L4a49fa.  v0[v1]:= v3 @kind object;
  #L4a49fe.  v3:= 1I;
  #L4a4a00.  v0[v3]:= v2 @kind object;
  #L4a4a04.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4a0a.  v3:= temp @kind object;
  #L4a4a0c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWithItem`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.startWithItem:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a4a20.  v0:= 2I;
  #L4a4a22.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a4a26.  call temp:= `just`(v3) @signature `Lio/reactivex/rxjava3/core/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4a2c.  v3:= temp @kind object;
  #L4a4a2e.  v1:= 0I;
  #L4a4a30.  v0[v1]:= v3 @kind object;
  #L4a4a34.  v3:= 1I;
  #L4a4a36.  v0[v3]:= v2 @kind object;
  #L4a4a3a.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4a40.  v3:= temp @kind object;
  #L4a4a42.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWithIterable`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.startWithIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a4a54.  v0:= 2I;
  #L4a4a56.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a4a5a.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4a60.  v3:= temp @kind object;
  #L4a4a62.  v1:= 0I;
  #L4a4a64.  v0[v1]:= v3 @kind object;
  #L4a4a68.  v3:= 1I;
  #L4a4a6a.  v0[v3]:= v2 @kind object;
  #L4a4a6e.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatArray:([Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4a74.  v3:= temp @kind object;
  #L4a4a76.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Observable` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:()Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a6b98.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a6b9e.  v0:= temp @kind object;
  #L4a6ba0.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4a6ba4.  v2:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a6ba8.  call temp:= `subscribe`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4a6bae.  v0:= temp @kind object;
  #L4a6bb0.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a6bc4.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4a6bc8.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a6bcc.  call temp:= `subscribe`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4a6bd2.  v3:= temp @kind object;
  #L4a6bd4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6be8.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4a6bec.  call temp:= `subscribe`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4a6bf2.  v2:= temp @kind object;
  #L4a6bf4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object, `io.reactivex.rxjava3.functions.Action` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a6c08.  v0:= "onNext is null" @kind object;
  #L4a6c0c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6c12.  v0:= "onError is null" @kind object;
  #L4a6c16.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6c1c.  v0:= "onComplete is null" @kind object;
  #L4a6c20.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6c26.  v0:= new `io.reactivex.rxjava3.internal.observers.LambdaObserver`;
  #L4a6c2a.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a6c30.  v1:= temp @kind object;
  #L4a6c32.  call `<init>`(v0, v3, v4, v5, v1) @signature `Lio/reactivex/rxjava3/internal/observers/LambdaObserver;.<init>:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L4a6c38.  call `subscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4a6c3e.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.Observer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a73a8.  v0:= "observer is null" @kind object;
  #L4a73ac.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a73b2.  call temp:= `onSubscribe`(v2, v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind static;
  #L4a73b8.  v3:= temp @kind object;
  #L4a73ba.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null Observer. Please change the handler provided to RxJavaPlugins.setOnObservableSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L4a73be.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a73c4.  call `subscribeActual`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4a73ca.  return @kind void;
  #L4a73cc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a73ce.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4a73d4.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4a73da.  v0:= new `java.lang.NullPointerException`;
  #L4a73de.  v1:= "Actually not, but can't throw other exceptions due to RS" @kind object;
  #L4a73e2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a73e8.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L4a73ee.  throw v0;
  #L4a73f0.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L4a73f2.  throw v3;
  catch `java.lang.NullPointerException` @[L4a73b2..L4a73ca] goto L4a73f0;
  catch `java.lang.Throwable` @[L4a73b2..L4a73ca] goto L4a73cc;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.core.Observer` v0 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.rxjava3.core.Observable` `subscribeOn`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4a88.  v0:= "scheduler is null" @kind object;
  #L4a4a8c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4a92.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSubscribeOn`;
  #L4a4a96.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a4a9c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4aa2.  v2:= temp @kind object;
  #L4a4aa4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observer` `subscribeWith`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `io.reactivex.rxjava3.core.Observer` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a63dc.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4a63e2.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchIfEmpty`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchIfEmpty:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4ab8.  v0:= "other is null" @kind object;
  #L4a4abc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4ac2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchIfEmpty`;
  #L4a4ac6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchIfEmpty;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a4acc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4ad2.  v2:= temp @kind object;
  #L4a4ad4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4ae8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a4aee.  v0:= temp;
  #L4a4af0.  call temp:= `switchMap`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4af6.  v2:= temp @kind object;
  #L4a4af8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMap`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMap:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a4b0c.  v0:= "mapper is null" @kind object;
  #L4a4b10.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4b16.  v0:= "bufferSize" @kind object;
  #L4a4b1a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a4b20.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L4a4b24.  if v0 == 0 then goto L4a4b4e;
  #L4a4b28.  v4:= v2 @kind object;
  #L4a4b2a.  v4:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v4 @kind object;
  #L4a4b2e.  call temp:= `get`(v4) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4a4b34.  v4:= temp @kind object;
  #L4a4b36.  if v4 != 0 then goto L4a4b44;
  #L4a4b3a.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4b40.  v3:= temp @kind object;
  #L4a4b42.  return v3 @kind object;
  #L4a4b44.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4b4a.  v3:= temp @kind object;
  #L4a4b4c.  return v3 @kind object;
  #L4a4b4e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchMap`;
  #L4a4b52.  v1:= 0I;
  #L4a4b54.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4a4b5a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4b60.  v3:= temp @kind object;
  #L4a4b62.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `switchMapCompletable`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a0598.  v0:= "mapper is null" @kind object;
  #L4a059c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a05a2.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable`;
  #L4a05a6.  v1:= 0I;
  #L4a05a8.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4a05ae.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4a05b4.  v3:= temp @kind object;
  #L4a05b6.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `switchMapCompletableDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a05c8.  v0:= "mapper is null" @kind object;
  #L4a05cc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a05d2.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapCompletable`;
  #L4a05d6.  v1:= 1I;
  #L4a05d8.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4a05de.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4a05e4.  v3:= temp @kind object;
  #L4a05e6.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMapDelayError`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a4b74.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a4b7a.  v0:= temp;
  #L4a4b7c.  call temp:= `switchMapDelayError`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapDelayError:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4b82.  v2:= temp @kind object;
  #L4a4b84.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMapDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapDelayError:(Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a4b98.  v0:= "mapper is null" @kind object;
  #L4a4b9c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4ba2.  v0:= "bufferSize" @kind object;
  #L4a4ba6.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a4bac.  v0:= instanceof @variable v2 @type ^`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier` @kind boolean;
  #L4a4bb0.  if v0 == 0 then goto L4a4bda;
  #L4a4bb4.  v4:= v2 @kind object;
  #L4a4bb6.  v4:= (`io.reactivex.rxjava3.internal.fuseable.ScalarSupplier`) v4 @kind object;
  #L4a4bba.  call temp:= `get`(v4) @signature `Lio/reactivex/rxjava3/internal/fuseable/ScalarSupplier;.get:()Ljava/lang/Object;` @kind interface;
  #L4a4bc0.  v4:= temp @kind object;
  #L4a4bc2.  if v4 != 0 then goto L4a4bd0;
  #L4a4bc6.  call temp:= `empty`() @signature `Lio/reactivex/rxjava3/core/Observable;.empty:()Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4bcc.  v3:= temp @kind object;
  #L4a4bce.  return v3 @kind object;
  #L4a4bd0.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4bd6.  v3:= temp @kind object;
  #L4a4bd8.  return v3 @kind object;
  #L4a4bda.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchMap`;
  #L4a4bde.  v1:= 1I;
  #L4a4be0.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;IZ)V` @kind direct;
  #L4a4be6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4bec.  v3:= temp @kind object;
  #L4a4bee.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMapMaybe`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a4c00.  v0:= "mapper is null" @kind object;
  #L4a4c04.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4c0a.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapMaybe`;
  #L4a4c0e.  v1:= 0I;
  #L4a4c10.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4a4c16.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4c1c.  v3:= temp @kind object;
  #L4a4c1e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMapMaybeDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapMaybeDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a4c30.  v0:= "mapper is null" @kind object;
  #L4a4c34.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4c3a.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapMaybe`;
  #L4a4c3e.  v1:= 1I;
  #L4a4c40.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4a4c46.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4c4c.  v3:= temp @kind object;
  #L4a4c4e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMapSingle`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a4c60.  v0:= "mapper is null" @kind object;
  #L4a4c64.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4c6a.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapSingle`;
  #L4a4c6e.  v1:= 0I;
  #L4a4c70.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4a4c76.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4c7c.  v3:= temp @kind object;
  #L4a4c7e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `switchMapSingleDelayError`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.switchMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a4c90.  v0:= "mapper is null" @kind object;
  #L4a4c94.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a4c9a.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapSingle`;
  #L4a4c9e.  v1:= 1I;
  #L4a4ca0.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle;.<init>:(Lio/reactivex/rxjava3/core/Observable;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4a4ca6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4cac.  v3:= temp @kind object;
  #L4a4cae.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `take`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.take:(J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a4d90.  v0:= 0L;
  #L4a4d94.  v2:= lcmp(v4, v0);
  #L4a4d98.  if v2 < 0 then goto L4a4db0;
  #L4a4d9c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTake`;
  #L4a4da0.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTake;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;J)V` @kind direct;
  #L4a4da6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4dac.  v4:= temp @kind object;
  #L4a4dae.  return v4 @kind object;
  #L4a4db0.  v0:= new `java.lang.IllegalArgumentException`;
  #L4a4db4.  v1:= new `java.lang.StringBuilder`;
  #L4a4db8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a4dbe.  v2:= "count >= 0 required but it was " @kind object;
  #L4a4dc2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a4dc8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a4dce.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a4dd4.  v4:= temp @kind object;
  #L4a4dd6.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a4ddc.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `take`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.take:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a4df0.  call temp:= `timer`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4df6.  v1:= temp @kind object;
  #L4a4df8.  call temp:= `takeUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.takeUntil:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4dfe.  v1:= temp @kind object;
  #L4a4e00.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `take`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.take:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a4e14.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4e1a.  v1:= temp @kind object;
  #L4a4e1c.  call temp:= `takeUntil`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.takeUntil:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4e22.  v1:= temp @kind object;
  #L4a4e24.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a4e38.  if v4 < 0 then goto L4a4e82;
  #L4a4e3c.  if v4 != 0 then goto L4a4e54;
  #L4a4e40.  v4:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableIgnoreElements`;
  #L4a4e44.  call `<init>`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableIgnoreElements;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a4e4a.  call temp:= `onAssembly`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4e50.  v4:= temp @kind object;
  #L4a4e52.  return v4 @kind object;
  #L4a4e54.  v0:= 1I;
  #L4a4e56.  if v4 != v0 then goto L4a4e6e;
  #L4a4e5a.  v4:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastOne`;
  #L4a4e5e.  call `<init>`(v4, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastOne;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a4e64.  call temp:= `onAssembly`(v4) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4e6a.  v4:= temp @kind object;
  #L4a4e6c.  return v4 @kind object;
  #L4a4e6e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLast`;
  #L4a4e72.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLast;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;I)V` @kind direct;
  #L4a4e78.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a4e7e.  v4:= temp @kind object;
  #L4a4e80.  return v4 @kind object;
  #L4a4e82.  v0:= new `java.lang.IllegalArgumentException`;
  #L4a4e86.  v1:= new `java.lang.StringBuilder`;
  #L4a4e8a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a4e90.  v2:= "count >= 0 required but it was " @kind object;
  #L4a4e94.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a4e9a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a4ea0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a4ea6.  v4:= temp @kind object;
  #L4a4ea8.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a4eae.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v9 @kind this, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4a4fb0.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a4fb6.  v6:= temp @kind object;
  #L4a4fb8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a4fbe.  v8:= temp;
  #L4a4fc0.  v7:= 0I;
  #L4a4fc2.  v0:= v9 @kind object;
  #L4a4fc4.  v1:= v10 @kind wide;
  #L4a4fc6.  v3:= v12 @kind wide;
  #L4a4fc8.  v5:= v14 @kind object;
  #L4a4fca.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4fd0.  v10:= temp @kind object;
  #L4a4fd2.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v9 @kind this, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object, `io.reactivex.rxjava3.core.Scheduler` v15 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4a4fe4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a4fea.  v8:= temp;
  #L4a4fec.  v7:= 0I;
  #L4a4fee.  v0:= v9 @kind object;
  #L4a4ff0.  v1:= v10 @kind wide;
  #L4a4ff2.  v3:= v12 @kind wide;
  #L4a4ff4.  v5:= v14 @kind object;
  #L4a4ff6.  v6:= v15 @kind object;
  #L4a4ff8.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4ffe.  v10:= temp @kind object;
  #L4a5000.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v11 @kind this, `long` v12 , `long` v14 , `java.util.concurrent.TimeUnit` v16 @kind object, `io.reactivex.rxjava3.core.Scheduler` v17 @kind object, `boolean` v18 , `int` v19 ) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4a5014.  v2:= v12 @kind wide;
  #L4a5016.  v0:= "unit is null" @kind object;
  #L4a501a.  v6:= v16 @kind object;
  #L4a501e.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5024.  v0:= "scheduler is null" @kind object;
  #L4a5028.  v7:= v17 @kind object;
  #L4a502c.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5032.  v0:= "bufferSize" @kind object;
  #L4a5036.  v8:= v19;
  #L4a503a.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a5040.  v0:= 0L;
  #L4a5044.  v4:= lcmp(v2, v0);
  #L4a5048.  if v4 < 0 then goto L4a5078;
  #L4a504c.  v10:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastTimed`;
  #L4a5050.  v0:= v10 @kind object;
  #L4a5052.  v1:= v11 @kind object;
  #L4a5054.  v2:= v12 @kind wide;
  #L4a5056.  v4:= v14 @kind wide;
  #L4a5058.  v6:= v16 @kind object;
  #L4a505c.  v7:= v17 @kind object;
  #L4a5060.  v8:= v19;
  #L4a5064.  v9:= v18;
  #L4a5068.  call `<init>`(v0, v1, v2, v4, v6, v7, v8, v9) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeLastTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)V` @kind direct;
  #L4a506e.  call temp:= `onAssembly`(v10) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5074.  v0:= temp @kind object;
  #L4a5076.  return v0 @kind object;
  #L4a5078.  v0:= new `java.lang.IllegalArgumentException`;
  #L4a507c.  v1:= new `java.lang.StringBuilder`;
  #L4a5080.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a5086.  v4:= "count >= 0 required but it was " @kind object;
  #L4a508a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5090.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5096.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a509c.  v1:= temp @kind object;
  #L4a509e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a50a4.  throw v0;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a4ec0.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a4ec6.  v4:= temp @kind object;
  #L4a4ec8.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a4ece.  v6:= temp;
  #L4a4ed0.  v5:= 0I;
  #L4a4ed2.  v0:= v7 @kind object;
  #L4a4ed4.  v1:= v8 @kind wide;
  #L4a4ed6.  v3:= v10 @kind object;
  #L4a4ed8.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4ede.  v8:= temp @kind object;
  #L4a4ee0.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a4f28.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a4f2e.  v6:= temp;
  #L4a4f30.  v5:= 0I;
  #L4a4f32.  v0:= v7 @kind object;
  #L4a4f34.  v1:= v8 @kind wide;
  #L4a4f36.  v3:= v10 @kind object;
  #L4a4f38.  v4:= v11 @kind object;
  #L4a4f3a.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4f40.  v8:= temp @kind object;
  #L4a4f42.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a4f54.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a4f5a.  v6:= temp;
  #L4a4f5c.  v0:= v7 @kind object;
  #L4a4f5e.  v1:= v8 @kind wide;
  #L4a4f60.  v3:= v10 @kind object;
  #L4a4f62.  v4:= v11 @kind object;
  #L4a4f64.  v5:= v12;
  #L4a4f66.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4f6c.  v8:= temp @kind object;
  #L4a4f6e.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4a4f80.  v1:= 9223372036854775807L;
  #L4a4f8a.  v0:= v9 @kind object;
  #L4a4f8c.  v3:= v10 @kind wide;
  #L4a4f8e.  v5:= v12 @kind object;
  #L4a4f90.  v6:= v13 @kind object;
  #L4a4f92.  v7:= v14;
  #L4a4f94.  v8:= v15;
  #L4a4f96.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4f9c.  v10:= temp @kind object;
  #L4a4f9e.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeLast`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `boolean` v11 ) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a4ef4.  call temp:= `trampoline`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.trampoline:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a4efa.  v4:= temp @kind object;
  #L4a4efc.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a4f02.  v6:= temp;
  #L4a4f04.  v0:= v7 @kind object;
  #L4a4f06.  v1:= v8 @kind wide;
  #L4a4f08.  v3:= v10 @kind object;
  #L4a4f0a.  v5:= v11;
  #L4a4f0c.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a4f12.  v8:= temp @kind object;
  #L4a4f14.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeUntil`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.takeUntil:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a50b8.  v0:= "other is null" @kind object;
  #L4a50bc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a50c2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeUntil`;
  #L4a50c6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeUntil;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a50cc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a50d2.  v2:= temp @kind object;
  #L4a50d4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeUntil`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.takeUntil:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a50e8.  v0:= "stopPredicate is null" @kind object;
  #L4a50ec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a50f2.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeUntilPredicate`;
  #L4a50f6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeUntilPredicate;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4a50fc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5102.  v2:= temp @kind object;
  #L4a5104.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `takeWhile`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.takeWhile:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a5118.  v0:= "predicate is null" @kind object;
  #L4a511c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5122.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTakeWhile`;
  #L4a5126.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTakeWhile;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4a512c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5132.  v2:= temp @kind object;
  #L4a5134.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.observers.TestObserver` `test`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.test:()Lio/reactivex/rxjava3/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6e1c.  v0:= new `io.reactivex.rxjava3.observers.TestObserver`;
  #L4a6e20.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.<init>:()V` @kind direct;
  #L4a6e26.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4a6e2c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.observers.TestObserver` `test`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.test:(Z)Lio/reactivex/rxjava3/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6e40.  v0:= new `io.reactivex.rxjava3.observers.TestObserver`;
  #L4a6e44.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.<init>:()V` @kind direct;
  #L4a6e4a.  if v2 == 0 then goto L4a6e54;
  #L4a6e4e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.dispose:()V` @kind virtual;
  #L4a6e54.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L4a6e5a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleFirst`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a5148.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a514e.  v0:= temp @kind object;
  #L4a5150.  call temp:= `throttleFirst`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5156.  v2:= temp @kind object;
  #L4a5158.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleFirst`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.Scheduler` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a516c.  v0:= "unit is null" @kind object;
  #L4a5170.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5176.  v0:= "scheduler is null" @kind object;
  #L4a517a.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5180.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed`;
  #L4a5184.  v1:= v0 @kind object;
  #L4a5186.  v2:= v7 @kind object;
  #L4a5188.  v3:= v8 @kind wide;
  #L4a518a.  v5:= v10 @kind object;
  #L4a518c.  v6:= v11 @kind object;
  #L4a518e.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableThrottleFirstTimed;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a5194.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a519a.  v8:= temp @kind object;
  #L4a519c.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleLast`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a51b0.  call temp:= `sample`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a51b6.  v1:= temp @kind object;
  #L4a51b8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleLast`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a51cc.  call temp:= `sample`(v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a51d2.  v1:= temp @kind object;
  #L4a51d4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleLatest`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a51e8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a51ee.  v4:= temp @kind object;
  #L4a51f0.  v5:= 0I;
  #L4a51f2.  v0:= v6 @kind object;
  #L4a51f4.  v1:= v7 @kind wide;
  #L4a51f6.  v3:= v9 @kind object;
  #L4a51f8.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a51fe.  v7:= temp @kind object;
  #L4a5200.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleLatest`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a5240.  v5:= 0I;
  #L4a5242.  v0:= v6 @kind object;
  #L4a5244.  v1:= v7 @kind wide;
  #L4a5246.  v3:= v9 @kind object;
  #L4a5248.  v4:= v10 @kind object;
  #L4a524a.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5250.  v7:= temp @kind object;
  #L4a5252.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleLatest`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a5264.  v0:= "unit is null" @kind object;
  #L4a5268.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a526e.  v0:= "scheduler is null" @kind object;
  #L4a5272.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5278.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleLatest`;
  #L4a527c.  v1:= v0 @kind object;
  #L4a527e.  v2:= v8 @kind object;
  #L4a5280.  v3:= v9 @kind wide;
  #L4a5282.  v5:= v11 @kind object;
  #L4a5284.  v6:= v12 @kind object;
  #L4a5286.  v7:= v13;
  #L4a5288.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableThrottleLatest;.<init>:(Lio/reactivex/rxjava3/core/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L4a528e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5294.  v9:= temp @kind object;
  #L4a5296.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleLatest`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a5214.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a521a.  v4:= temp @kind object;
  #L4a521c.  v0:= v6 @kind object;
  #L4a521e.  v1:= v7 @kind wide;
  #L4a5220.  v3:= v9 @kind object;
  #L4a5222.  v5:= v10;
  #L4a5224.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a522a.  v7:= temp @kind object;
  #L4a522c.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleWithTimeout`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleWithTimeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a52a8.  call temp:= `debounce`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a52ae.  v1:= temp @kind object;
  #L4a52b0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `throttleWithTimeout`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.throttleWithTimeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a52c4.  call temp:= `debounce`(v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a52ca.  v1:= temp @kind object;
  #L4a52cc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeInterval`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.timeInterval:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a52e0.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4a52e4.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a52ea.  v1:= temp @kind object;
  #L4a52ec.  call temp:= `timeInterval`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a52f2.  v0:= temp @kind object;
  #L4a52f4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeInterval`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeInterval:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a5308.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4a530c.  call temp:= `timeInterval`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5312.  v2:= temp @kind object;
  #L4a5314.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeInterval`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a5328.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a532e.  v0:= temp @kind object;
  #L4a5330.  call temp:= `timeInterval`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5336.  v2:= temp @kind object;
  #L4a5338.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeInterval`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a534c.  v0:= "unit is null" @kind object;
  #L4a5350.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5356.  v0:= "scheduler is null" @kind object;
  #L4a535a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5360.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval`;
  #L4a5364.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableTimeInterval;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a536a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5370.  v2:= temp @kind object;
  #L4a5372.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a5420.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a5426.  v5:= temp @kind object;
  #L4a5428.  v4:= 0I;
  #L4a542a.  v0:= v6 @kind object;
  #L4a542c.  v1:= v7 @kind wide;
  #L4a542e.  v3:= v9 @kind object;
  #L4a5430.  call temp:= `timeout0`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a5436.  v7:= temp @kind object;
  #L4a5438.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a544c.  v0:= "fallback is null" @kind object;
  #L4a5450.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5456.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a545c.  v6:= temp @kind object;
  #L4a545e.  v1:= v7 @kind object;
  #L4a5460.  v2:= v8 @kind wide;
  #L4a5462.  v4:= v10 @kind object;
  #L4a5464.  v5:= v11 @kind object;
  #L4a5466.  call temp:= `timeout0`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a546c.  v8:= temp @kind object;
  #L4a546e.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a5480.  v4:= 0I;
  #L4a5482.  v0:= v6 @kind object;
  #L4a5484.  v1:= v7 @kind wide;
  #L4a5486.  v3:= v9 @kind object;
  #L4a5488.  v5:= v10 @kind object;
  #L4a548a.  call temp:= `timeout0`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a5490.  v7:= temp @kind object;
  #L4a5492.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a54a4.  v0:= "fallback is null" @kind object;
  #L4a54a8.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a54ae.  v0:= v6 @kind object;
  #L4a54b0.  v1:= v7 @kind wide;
  #L4a54b2.  v3:= v9 @kind object;
  #L4a54b4.  v4:= v11 @kind object;
  #L4a54b6.  v5:= v10 @kind object;
  #L4a54b8.  call temp:= `timeout0`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout0:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a54be.  v7:= temp @kind object;
  #L4a54c0.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a5384.  v0:= "firstTimeoutIndicator is null" @kind object;
  #L4a5388.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a538e.  v0:= 0I;
  #L4a5390.  call temp:= `timeout0`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout0:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a5396.  v2:= temp @kind object;
  #L4a5398.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a53ac.  v0:= "firstTimeoutIndicator is null" @kind object;
  #L4a53b0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a53b6.  v0:= "fallback is null" @kind object;
  #L4a53ba.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a53c0.  call temp:= `timeout0`(v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout0:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a53c6.  v2:= temp @kind object;
  #L4a53c8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a53dc.  v0:= 0I;
  #L4a53de.  call temp:= `timeout0`(v1, v0, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout0:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a53e4.  v2:= temp @kind object;
  #L4a53e6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timeout`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a53f8.  v0:= "fallback is null" @kind object;
  #L4a53fc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5402.  v0:= 0I;
  #L4a5404.  call temp:= `timeout0`(v1, v0, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.timeout0:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind direct;
  #L4a540a.  v2:= temp @kind object;
  #L4a540c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timestamp`(`io.reactivex.rxjava3.core.Observable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.timestamp:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a55b0.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4a55b4.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a55ba.  v1:= temp @kind object;
  #L4a55bc.  call temp:= `timestamp`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a55c2.  v0:= temp @kind object;
  #L4a55c4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timestamp`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timestamp:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a55d8.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4a55dc.  call temp:= `timestamp`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a55e2.  v2:= temp @kind object;
  #L4a55e4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timestamp`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a55f8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a55fe.  v0:= temp @kind object;
  #L4a5600.  call temp:= `timestamp`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5606.  v2:= temp @kind object;
  #L4a5608.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `timestamp`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.rxjava3.core.Scheduler` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a561c.  v0:= "unit is null" @kind object;
  #L4a5620.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5626.  v0:= "scheduler is null" @kind object;
  #L4a562a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5630.  call temp:= `timestampWith`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.timestampWith:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a5636.  v2:= temp @kind object;
  #L4a5638.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a563e.  v2:= temp @kind object;
  #L4a5640.  return v2 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableConverter` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.to:(Lio/reactivex/rxjava3/core/ObservableConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a7060.  v0:= "converter is null" @kind object;
  #L4a7064.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a706a.  v2:= temp @kind object;
  #L4a706c.  v2:= (`io.reactivex.rxjava3.core.ObservableConverter`) v2 @kind object;
  #L4a7070.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/ObservableConverter;.apply:(Lio/reactivex/rxjava3/core/Observable;)Ljava/lang/Object;` @kind interface;
  #L4a7076.  v2:= temp @kind object;
  #L4a7078.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `toFlowable`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.BackpressureStrategy` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toFlowable:(Lio/reactivex/rxjava3/core/BackpressureStrategy;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a05f8.  v0:= "strategy is null" @kind object;
  #L4a05fc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a0602.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFromObservable`;
  #L4a0606.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFromObservable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a060c.  v1:= `@@io.reactivex.rxjava3.core.Observable$a.a` @type ^`int`[] @kind object;
  #L4a0610.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4a0616.  v3:= temp;
  #L4a0618.  v3:= v1[v3];
  #L4a061c.  v1:= 1I;
  #L4a061e.  if v3 == v1 then goto L4a065e;
  #L4a0622.  v1:= 2I;
  #L4a0624.  if v3 == v1 then goto L4a0654;
  #L4a0628.  v1:= 3I;
  #L4a062a.  if v3 == v1 then goto L4a0652;
  #L4a062e.  v1:= 4I;
  #L4a0630.  if v3 == v1 then goto L4a063e;
  #L4a0634.  call temp:= `onBackpressureBuffer`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureBuffer:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a063a.  v3:= temp @kind object;
  #L4a063c.  return v3 @kind object;
  #L4a063e.  v3:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureError`;
  #L4a0642.  call `<init>`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureError;.<init>:(Lio/reactivex/rxjava3/core/Flowable;)V` @kind direct;
  #L4a0648.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a064e.  v3:= temp @kind object;
  #L4a0650.  return v3 @kind object;
  #L4a0652.  return v0 @kind object;
  #L4a0654.  call temp:= `onBackpressureLatest`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureLatest:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a065a.  v3:= temp @kind object;
  #L4a065c.  return v3 @kind object;
  #L4a065e.  call temp:= `onBackpressureDrop`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.onBackpressureDrop:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a0664.  v3:= temp @kind object;
  #L4a0666.  return v3 @kind object;
}
procedure `java.util.concurrent.Future` `toFuture`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.toFuture:()Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a7194.  v0:= new `io.reactivex.rxjava3.internal.observers.FutureObserver`;
  #L4a7198.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/FutureObserver;.<init>:()V` @kind direct;
  #L4a719e.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeWith:(Lio/reactivex/rxjava3/core/Observer;)Lio/reactivex/rxjava3/core/Observer;` @kind virtual;
  #L4a71a4.  v0:= temp @kind object;
  #L4a71a6.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L4a71aa.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toList`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6844.  v0:= 16I;
  #L4a6848.  call temp:= `toList`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:(I)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a684e.  v0:= temp @kind object;
  #L4a6850.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toList`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:(I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6864.  v0:= "capacityHint" @kind object;
  #L4a6868.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a686e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle`;
  #L4a6872.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableToListSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;I)V` @kind direct;
  #L4a6878.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a687e.  v2:= temp @kind object;
  #L4a6880.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toList`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Supplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6894.  v0:= "collectionSupplier is null" @kind object;
  #L4a6898.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a689e.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableToListSingle`;
  #L4a68a2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableToListSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a68a8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a68ae.  v2:= temp @kind object;
  #L4a68b0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a68c4.  v0:= "keySelector is null" @kind object;
  #L4a68c8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a68ce.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a68d4.  v0:= temp @kind object;
  #L4a68d6.  call temp:= `toMapKeySelector`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMapKeySelector:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L4a68dc.  v2:= temp @kind object;
  #L4a68de.  call temp:= `collect`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a68e4.  v2:= temp @kind object;
  #L4a68e6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a68f8.  v0:= "keySelector is null" @kind object;
  #L4a68fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6902.  v0:= "valueSelector is null" @kind object;
  #L4a6906.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a690c.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a6912.  v0:= temp @kind object;
  #L4a6914.  call temp:= `toMapKeyValueSelector`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMapKeyValueSelector:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L4a691a.  v2:= temp @kind object;
  #L4a691c.  call temp:= `collect`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a6922.  v2:= temp @kind object;
  #L4a6924.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6938.  v0:= "keySelector is null" @kind object;
  #L4a693c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6942.  v0:= "valueSelector is null" @kind object;
  #L4a6946.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a694c.  v0:= "mapSupplier is null" @kind object;
  #L4a6950.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6956.  call temp:= `toMapKeyValueSelector`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMapKeyValueSelector:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L4a695c.  v2:= temp @kind object;
  #L4a695e.  call temp:= `collect`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a6964.  v2:= temp @kind object;
  #L4a6966.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Observable` v3 @kind this, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a6978.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a697e.  v0:= temp @kind object;
  #L4a6980.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a6986.  v1:= temp @kind object;
  #L4a6988.  call temp:= `asFunction`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a698e.  v2:= temp @kind object;
  #L4a6990.  call temp:= `toMultimap`(v3, v4, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a6996.  v4:= temp @kind object;
  #L4a6998.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Function` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a69ac.  call temp:= `asSupplier`() @signature `Lio/reactivex/rxjava3/internal/util/HashMapSupplier;.asSupplier:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a69b2.  v0:= temp @kind object;
  #L4a69b4.  call temp:= `asFunction`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a69ba.  v1:= temp @kind object;
  #L4a69bc.  call temp:= `toMultimap`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a69c2.  v3:= temp @kind object;
  #L4a69c4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a69d8.  call temp:= `asFunction`() @signature `Lio/reactivex/rxjava3/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a69de.  v0:= temp @kind object;
  #L4a69e0.  call temp:= `toMultimap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a69e6.  v2:= temp @kind object;
  #L4a69e8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toMultimap`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `io.reactivex.rxjava3.functions.Supplier` v4 @kind object, `io.reactivex.rxjava3.functions.Function` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toMultimap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a69fc.  v0:= "keySelector is null" @kind object;
  #L4a6a00.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6a06.  v0:= "valueSelector is null" @kind object;
  #L4a6a0a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6a10.  v0:= "mapSupplier is null" @kind object;
  #L4a6a14.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6a1a.  v0:= "collectionFactory is null" @kind object;
  #L4a6a1e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6a24.  call temp:= `toMultimapKeyValueSelector`(v2, v3, v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toMultimapKeyValueSelector:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/functions/BiConsumer;` @kind static;
  #L4a6a2a.  v2:= temp @kind object;
  #L4a6a2c.  call temp:= `collect`(v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.collect:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a6a32.  v2:= temp @kind object;
  #L4a6a34.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Observable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Observable;.toSortedList:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6a48.  call temp:= `naturalComparator`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L4a6a4e.  v0:= temp @kind object;
  #L4a6a50.  call temp:= `toSortedList`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a6a56.  v0:= temp @kind object;
  #L4a6a58.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Observable;.toSortedList:(I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6a6c.  call temp:= `naturalComparator`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L4a6a72.  v0:= temp @kind object;
  #L4a6a74.  call temp:= `toSortedList`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a6a7a.  v2:= temp @kind object;
  #L4a6a7c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6a90.  v0:= "comparator is null" @kind object;
  #L4a6a94.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6a9a.  call temp:= `toList`(v1) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a6aa0.  v0:= temp @kind object;
  #L4a6aa2.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a6aa8.  v2:= temp @kind object;
  #L4a6aaa.  call temp:= `map`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Single;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a6ab0.  v2:= temp @kind object;
  #L4a6ab2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSortedList`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6ac4.  v0:= "comparator is null" @kind object;
  #L4a6ac8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6ace.  call temp:= `toList`(v1, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.toList:(I)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a6ad4.  v3:= temp @kind object;
  #L4a6ad6.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a6adc.  v2:= temp @kind object;
  #L4a6ade.  call temp:= `map`(v3, v2) @signature `Lio/reactivex/rxjava3/core/Single;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a6ae4.  v2:= temp @kind object;
  #L4a6ae6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `unsubscribeOn`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.unsubscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a569c.  v0:= "scheduler is null" @kind object;
  #L4a56a0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a56a6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableUnsubscribeOn`;
  #L4a56aa.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableUnsubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a56b0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a56b6.  v2:= temp @kind object;
  #L4a56b8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a57f0.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a57f6.  v5:= temp;
  #L4a57f8.  v0:= v6 @kind object;
  #L4a57fa.  v1:= v7 @kind wide;
  #L4a57fc.  v3:= v7 @kind wide;
  #L4a57fe.  call temp:= `window`(v0, v1, v3, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5804.  v7:= temp @kind object;
  #L4a5806.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v6 @kind this, `long` v7 , `long` v9 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJ)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a5994.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a599a.  v5:= temp;
  #L4a599c.  v0:= v6 @kind object;
  #L4a599e.  v1:= v7 @kind wide;
  #L4a59a0.  v3:= v9 @kind wide;
  #L4a59a2.  call temp:= `window`(v0, v1, v3, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a59a8.  v7:= temp @kind object;
  #L4a59aa.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `long` v11 , `int` v13 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a59bc.  v0:= "count" @kind object;
  #L4a59c0.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L4a59c6.  v0:= "skip" @kind object;
  #L4a59ca.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L4a59d0.  v0:= "bufferSize" @kind object;
  #L4a59d4.  call temp:= `verifyPositive`(v13, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a59da.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWindow`;
  #L4a59de.  v1:= v0 @kind object;
  #L4a59e0.  v2:= v8 @kind object;
  #L4a59e2.  v3:= v9 @kind wide;
  #L4a59e4.  v5:= v11 @kind wide;
  #L4a59e6.  v7:= v13;
  #L4a59e8.  call `<init>`(v1, v2, v3, v5, v7) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindow;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;JJI)V` @kind direct;
  #L4a59ee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a59f4.  v9:= temp @kind object;
  #L4a59f6.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a5a08.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a5a0e.  v6:= temp @kind object;
  #L4a5a10.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a5a16.  v7:= temp;
  #L4a5a18.  v0:= v8 @kind object;
  #L4a5a1a.  v1:= v9 @kind wide;
  #L4a5a1c.  v3:= v11 @kind wide;
  #L4a5a1e.  v5:= v13 @kind object;
  #L4a5a20.  call temp:= `window`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5a26.  v9:= temp @kind object;
  #L4a5a28.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.rxjava3.core.Scheduler` v14 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a5a3c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a5a42.  v7:= temp;
  #L4a5a44.  v0:= v8 @kind object;
  #L4a5a46.  v1:= v9 @kind wide;
  #L4a5a48.  v3:= v11 @kind wide;
  #L4a5a4a.  v5:= v13 @kind object;
  #L4a5a4c.  v6:= v14 @kind object;
  #L4a5a4e.  call temp:= `window`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5a54.  v9:= temp @kind object;
  #L4a5a56.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v13 @kind this, `long` v14 , `long` v16 , `java.util.concurrent.TimeUnit` v18 @kind object, `io.reactivex.rxjava3.core.Scheduler` v19 @kind object, `int` v20 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L4a5a68.  v0:= "timespan" @kind object;
  #L4a5a6c.  v3:= v14 @kind wide;
  #L4a5a6e.  call temp:= `verifyPositive`(v14, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L4a5a74.  v0:= "timeskip" @kind object;
  #L4a5a78.  v5:= v16 @kind wide;
  #L4a5a7c.  call temp:= `verifyPositive`(v5, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L4a5a82.  v0:= "bufferSize" @kind object;
  #L4a5a86.  v11:= v20;
  #L4a5a8a.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a5a90.  v0:= "scheduler is null" @kind object;
  #L4a5a94.  v8:= v19 @kind object;
  #L4a5a98.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5a9e.  v0:= "unit is null" @kind object;
  #L4a5aa2.  v7:= v18 @kind object;
  #L4a5aa6.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5aac.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed`;
  #L4a5ab0.  v9:= 9223372036854775807L;
  #L4a5aba.  v12:= 0I;
  #L4a5abc.  v1:= v0 @kind object;
  #L4a5abe.  v2:= v13 @kind object;
  #L4a5ac0.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v11, v12) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed;.<init>:(Lio/reactivex/rxjava3/core/Observable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JIZ)V` @kind direct;
  #L4a5ac6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5acc.  v0:= temp @kind object;
  #L4a5ace.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a5818.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a581e.  v4:= temp @kind object;
  #L4a5820.  v5:= 9223372036854775807L;
  #L4a582a.  v7:= 0I;
  #L4a582c.  v0:= v8 @kind object;
  #L4a582e.  v1:= v9 @kind wide;
  #L4a5830.  v3:= v11 @kind object;
  #L4a5832.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5838.  v9:= temp @kind object;
  #L4a583a.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `long` v12 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a593c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a5942.  v4:= temp @kind object;
  #L4a5944.  v7:= 0I;
  #L4a5946.  v0:= v8 @kind object;
  #L4a5948.  v1:= v9 @kind wide;
  #L4a594a.  v3:= v11 @kind object;
  #L4a594c.  v5:= v12 @kind wide;
  #L4a594e.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5954.  v9:= temp @kind object;
  #L4a5956.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `long` v12 , `boolean` v14 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;JZ)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a5968.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a596e.  v4:= temp @kind object;
  #L4a5970.  v0:= v8 @kind object;
  #L4a5972.  v1:= v9 @kind wide;
  #L4a5974.  v3:= v11 @kind object;
  #L4a5976.  v5:= v12 @kind wide;
  #L4a5978.  v7:= v14;
  #L4a597a.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5980.  v9:= temp @kind object;
  #L4a5982.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a584c.  v5:= 9223372036854775807L;
  #L4a5856.  v7:= 0I;
  #L4a5858.  v0:= v8 @kind object;
  #L4a585a.  v1:= v9 @kind wide;
  #L4a585c.  v3:= v11 @kind object;
  #L4a585e.  v4:= v12 @kind object;
  #L4a5860.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5866.  v9:= temp @kind object;
  #L4a5868.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `long` v13 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;J)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a587c.  v7:= 0I;
  #L4a587e.  v0:= v8 @kind object;
  #L4a5880.  v1:= v9 @kind wide;
  #L4a5882.  v3:= v11 @kind object;
  #L4a5884.  v4:= v12 @kind object;
  #L4a5886.  v5:= v13 @kind wide;
  #L4a5888.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a588e.  v9:= temp @kind object;
  #L4a5890.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.rxjava3.core.Scheduler` v13 @kind object, `long` v14 , `boolean` v16 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZ)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4a58a4.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a58aa.  v8:= temp;
  #L4a58ac.  v0:= v9 @kind object;
  #L4a58ae.  v1:= v10 @kind wide;
  #L4a58b0.  v3:= v12 @kind object;
  #L4a58b2.  v4:= v13 @kind object;
  #L4a58b4.  v5:= v14 @kind wide;
  #L4a58b6.  v7:= v16;
  #L4a58ba.  call temp:= `window`(v0, v1, v3, v4, v5, v7, v8) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZI)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a58c0.  v0:= temp @kind object;
  #L4a58c2.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v13 @kind this, `long` v14 , `java.util.concurrent.TimeUnit` v16 @kind object, `io.reactivex.rxjava3.core.Scheduler` v17 @kind object, `long` v18 , `boolean` v20 , `int` v21 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L4a58d4.  v0:= "bufferSize" @kind object;
  #L4a58d8.  v11:= v21;
  #L4a58dc.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a58e2.  v0:= "scheduler is null" @kind object;
  #L4a58e6.  v8:= v17 @kind object;
  #L4a58ea.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a58f0.  v0:= "unit is null" @kind object;
  #L4a58f4.  v7:= v16 @kind object;
  #L4a58f8.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a58fe.  v0:= "count" @kind object;
  #L4a5902.  v9:= v18 @kind wide;
  #L4a5906.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L4a590c.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed`;
  #L4a5910.  v1:= v0 @kind object;
  #L4a5912.  v2:= v13 @kind object;
  #L4a5914.  v3:= v14 @kind wide;
  #L4a5916.  v5:= v14 @kind wide;
  #L4a5918.  v12:= v20;
  #L4a591c.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v11, v12) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed;.<init>:(Lio/reactivex/rxjava3/core/Observable;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;JIZ)V` @kind direct;
  #L4a5922.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5928.  v0:= temp @kind object;
  #L4a592a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a572c.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a5732.  v0:= temp;
  #L4a5734.  call temp:= `window`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a573a.  v2:= temp @kind object;
  #L4a573c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(Lio/reactivex/rxjava3/core/ObservableSource;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a5750.  v0:= "boundaryIndicator is null" @kind object;
  #L4a5754.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a575a.  v0:= "bufferSize" @kind object;
  #L4a575e.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a5764.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundary`;
  #L4a5768.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundary;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;I)V` @kind direct;
  #L4a576e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5774.  v2:= temp @kind object;
  #L4a5776.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a5788.  call temp:= `bufferSize`() @signature `Lio/reactivex/rxjava3/core/Observable;.bufferSize:()I` @kind static;
  #L4a578e.  v0:= temp;
  #L4a5790.  call temp:= `window`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5796.  v2:= temp @kind object;
  #L4a5798.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `window`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.window:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a57ac.  v0:= "openingIndicator is null" @kind object;
  #L4a57b0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a57b6.  v0:= "closingIndicator is null" @kind object;
  #L4a57ba.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a57c0.  v0:= "bufferSize" @kind object;
  #L4a57c4.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a57ca.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector`;
  #L4a57ce.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;I)V` @kind direct;
  #L4a57d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a57da.  v2:= temp @kind object;
  #L4a57dc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `withLatestFrom`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v6 @kind object, `io.reactivex.rxjava3.functions.Function5` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a5ae0.  v0:= "source1 is null" @kind object;
  #L4a5ae4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5aea.  v0:= "source2 is null" @kind object;
  #L4a5aee.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5af4.  v0:= "source3 is null" @kind object;
  #L4a5af8.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5afe.  v0:= "source4 is null" @kind object;
  #L4a5b02.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5b08.  v0:= "combiner is null" @kind object;
  #L4a5b0c.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5b12.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a5b18.  v7:= temp @kind object;
  #L4a5b1a.  v0:= 4I;
  #L4a5b1c.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a5b20.  v1:= 0I;
  #L4a5b22.  v0[v1]:= v3 @kind object;
  #L4a5b26.  v3:= 1I;
  #L4a5b28.  v0[v3]:= v4 @kind object;
  #L4a5b2c.  v3:= 2I;
  #L4a5b2e.  v0[v3]:= v5 @kind object;
  #L4a5b32.  v3:= 3I;
  #L4a5b34.  v0[v3]:= v6 @kind object;
  #L4a5b38.  call temp:= `withLatestFrom`(v2, v0, v7) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5b3e.  v3:= temp @kind object;
  #L4a5b40.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `withLatestFrom`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v5 @kind object, `io.reactivex.rxjava3.functions.Function4` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a5b54.  v0:= "source1 is null" @kind object;
  #L4a5b58.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5b5e.  v0:= "source2 is null" @kind object;
  #L4a5b62.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5b68.  v0:= "source3 is null" @kind object;
  #L4a5b6c.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5b72.  v0:= "combiner is null" @kind object;
  #L4a5b76.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5b7c.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a5b82.  v6:= temp @kind object;
  #L4a5b84.  v0:= 3I;
  #L4a5b86.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a5b8a.  v1:= 0I;
  #L4a5b8c.  v0[v1]:= v3 @kind object;
  #L4a5b90.  v3:= 1I;
  #L4a5b92.  v0[v3]:= v4 @kind object;
  #L4a5b96.  v3:= 2I;
  #L4a5b98.  v0[v3]:= v5 @kind object;
  #L4a5b9c.  call temp:= `withLatestFrom`(v2, v0, v6) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5ba2.  v3:= temp @kind object;
  #L4a5ba4.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `withLatestFrom`(`io.reactivex.rxjava3.core.Observable` v2 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v3 @kind object, `io.reactivex.rxjava3.core.ObservableSource` v4 @kind object, `io.reactivex.rxjava3.functions.Function3` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a5bb8.  v0:= "source1 is null" @kind object;
  #L4a5bbc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5bc2.  v0:= "source2 is null" @kind object;
  #L4a5bc6.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5bcc.  v0:= "combiner is null" @kind object;
  #L4a5bd0.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5bd6.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a5bdc.  v5:= temp @kind object;
  #L4a5bde.  v0:= 2I;
  #L4a5be0.  v0:= new `io.reactivex.rxjava3.core.ObservableSource`[v0];
  #L4a5be4.  v1:= 0I;
  #L4a5be6.  v0[v1]:= v3 @kind object;
  #L4a5bea.  v3:= 1I;
  #L4a5bec.  v0[v3]:= v4 @kind object;
  #L4a5bf0.  call temp:= `withLatestFrom`(v2, v0, v5) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a5bf6.  v3:= temp @kind object;
  #L4a5bf8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `withLatestFrom`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a5c0c.  v0:= "other is null" @kind object;
  #L4a5c10.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5c16.  v0:= "combiner is null" @kind object;
  #L4a5c1a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5c20.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFrom`;
  #L4a5c24.  call `<init>`(v0, v1, v3, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFrom;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a5c2a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5c30.  v2:= temp @kind object;
  #L4a5c32.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `withLatestFrom`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a5c7c.  v0:= "others is null" @kind object;
  #L4a5c80.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5c86.  v0:= "combiner is null" @kind object;
  #L4a5c8a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5c90.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany`;
  #L4a5c94.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a5c9a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5ca0.  v2:= temp @kind object;
  #L4a5ca2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `withLatestFrom`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource`[] v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.withLatestFrom:([Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a5c44.  v0:= "others is null" @kind object;
  #L4a5c48.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5c4e.  v0:= "combiner is null" @kind object;
  #L4a5c52.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a5c58.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany`;
  #L4a5c5c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;[Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a5c62.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a5c68.  v2:= temp @kind object;
  #L4a5c6a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zipWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zipWith:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a6348.  v0:= "other is null" @kind object;
  #L4a634c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a6352.  call temp:= `zip`(v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a6358.  v2:= temp @kind object;
  #L4a635a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zipWith`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Observable;.zipWith:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a636c.  call temp:= `zip`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;Z)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a6372.  v1:= temp @kind object;
  #L4a6374.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zipWith`(`io.reactivex.rxjava3.core.Observable` v0 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Observable;.zipWith:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a6388.  call temp:= `zip`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.zip:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/BiFunction;ZI)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a638e.  v1:= temp @kind object;
  #L4a6390.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `zipWith`(`io.reactivex.rxjava3.core.Observable` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Observable;.zipWith:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a63a4.  v0:= "other is null" @kind object;
  #L4a63a8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a63ae.  v0:= "zipper is null" @kind object;
  #L4a63b2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a63b8.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableZipIterable`;
  #L4a63bc.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableZipIterable;.<init>:(Lio/reactivex/rxjava3/core/Observable;Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4a63c2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a63c8.  v2:= temp @kind object;
  #L4a63ca.  return v2 @kind object;
}
