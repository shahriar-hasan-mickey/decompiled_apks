record `io.reactivex.rxjava3.core.Completable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.CompletableSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.core.Completable` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L495f64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L495f6a.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Completable` `a`(`io.reactivex.rxjava3.core.Completable` v9 @kind this, `io.reactivex.rxjava3.functions.Consumer` v10 @kind object, `io.reactivex.rxjava3.functions.Consumer` v11 @kind object, `io.reactivex.rxjava3.functions.Action` v12 @kind object, `io.reactivex.rxjava3.functions.Action` v13 @kind object, `io.reactivex.rxjava3.functions.Action` v14 @kind object, `io.reactivex.rxjava3.functions.Action` v15 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L494e8c.  v0:= "onSubscribe is null" @kind object;
  #L494e90.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494e96.  v0:= "onError is null" @kind object;
  #L494e9a.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494ea0.  v0:= "onComplete is null" @kind object;
  #L494ea4.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494eaa.  v0:= "onTerminate is null" @kind object;
  #L494eae.  call temp:= `requireNonNull`(v13, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494eb4.  v0:= "onAfterTerminate is null" @kind object;
  #L494eb8.  call temp:= `requireNonNull`(v14, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494ebe.  v0:= "onDispose is null" @kind object;
  #L494ec2.  call temp:= `requireNonNull`(v15, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494ec8.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletablePeek`;
  #L494ecc.  v1:= v0 @kind object;
  #L494ece.  v2:= v9 @kind object;
  #L494ed0.  v3:= v10 @kind object;
  #L494ed2.  v4:= v11 @kind object;
  #L494ed4.  v5:= v12 @kind object;
  #L494ed6.  v6:= v13 @kind object;
  #L494ed8.  v7:= v14 @kind object;
  #L494eda.  v8:= v15 @kind object;
  #L494edc.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletablePeek;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L494ee2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494ee8.  v10:= temp @kind object;
  #L494eea.  return v10 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.amb:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4948d0.  v0:= "sources is null" @kind object;
  #L4948d4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4948da.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableAmb`;
  #L4948de.  v1:= 0I;
  #L4948e0.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableAmb;.<init>:([Lio/reactivex/rxjava3/core/CompletableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L4948e6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4948ec.  v2:= temp @kind object;
  #L4948ee.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `ambArray`(`io.reactivex.rxjava3.core.CompletableSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.ambArray:([Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L494900.  v0:= "sources is null" @kind object;
  #L494904.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49490a.  v0:= length @variable v2;
  #L49490c.  if v0 != 0 then goto L49491a;
  #L494910.  call temp:= `complete`() @signature `Lio/reactivex/rxjava3/core/Completable;.complete:()Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494916.  v2:= temp @kind object;
  #L494918.  return v2 @kind object;
  #L49491a.  v0:= length @variable v2;
  #L49491c.  v1:= 1I;
  #L49491e.  if v0 != v1 then goto L494932;
  #L494922.  v0:= 0I;
  #L494924.  v2:= v2[v0] @kind object;
  #L494928.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.wrap:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49492e.  v2:= temp @kind object;
  #L494930.  return v2 @kind object;
  #L494932.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableAmb`;
  #L494936.  v1:= 0I;
  #L494938.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableAmb;.<init>:([Lio/reactivex/rxjava3/core/CompletableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L49493e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494944.  v2:= temp @kind object;
  #L494946.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `b`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/core/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L495264.  v0:= "sources is null" @kind object;
  #L495268.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49526e.  v0:= "maxConcurrency" @kind object;
  #L495272.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L495278.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableMerge`;
  #L49527c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge;.<init>:(Lorg/reactivestreams/Publisher;IZ)V` @kind direct;
  #L495282.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495288.  v1:= temp @kind object;
  #L49528a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `c`(`io.reactivex.rxjava3.core.Completable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `io.reactivex.rxjava3.core.CompletableSource` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L495890.  v0:= "unit is null" @kind object;
  #L495894.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49589a.  v0:= "scheduler is null" @kind object;
  #L49589e.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4958a4.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableTimeout`;
  #L4958a8.  v1:= v0 @kind object;
  #L4958aa.  v2:= v8 @kind object;
  #L4958ac.  v3:= v9 @kind wide;
  #L4958ae.  v5:= v11 @kind object;
  #L4958b0.  v6:= v12 @kind object;
  #L4958b2.  v7:= v13 @kind object;
  #L4958b4.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableTimeout;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L4958ba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4958c0.  v9:= temp @kind object;
  #L4958c2.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `complete`() @signature `Lio/reactivex/rxjava3/core/Completable;.complete:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4949e4.  v0:= `@@io.reactivex.rxjava3.internal.operators.completable.CompletableEmpty.INSTANCE` @type ^`io.reactivex.rxjava3.core.Completable` @kind object;
  #L4949e8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4949ee.  v0:= temp @kind object;
  #L4949f0.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concat`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.concat:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L494a38.  v0:= "sources is null" @kind object;
  #L494a3c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494a42.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable`;
  #L494a46.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcatIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L494a4c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494a52.  v1:= temp @kind object;
  #L494a54.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concat`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L494a68.  v0:= 2I;
  #L494a6a.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494a70.  v1:= temp @kind object;
  #L494a72.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concat`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Completable;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L494a84.  v0:= "sources is null" @kind object;
  #L494a88.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494a8e.  v0:= "prefetch" @kind object;
  #L494a92.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L494a98.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableConcat`;
  #L494a9c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat;.<init>:(Lorg/reactivestreams/Publisher;I)V` @kind direct;
  #L494aa2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494aa8.  v1:= temp @kind object;
  #L494aaa.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatArray`(`io.reactivex.rxjava3.core.CompletableSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.concatArray:([Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L494abc.  v0:= "sources is null" @kind object;
  #L494ac0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494ac6.  v0:= length @variable v2;
  #L494ac8.  if v0 != 0 then goto L494ad6;
  #L494acc.  call temp:= `complete`() @signature `Lio/reactivex/rxjava3/core/Completable;.complete:()Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494ad2.  v2:= temp @kind object;
  #L494ad4.  return v2 @kind object;
  #L494ad6.  v0:= length @variable v2;
  #L494ad8.  v1:= 1I;
  #L494ada.  if v0 != v1 then goto L494aee;
  #L494ade.  v0:= 0I;
  #L494ae0.  v2:= v2[v0] @kind object;
  #L494ae4.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.wrap:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494aea.  v2:= temp @kind object;
  #L494aec.  return v2 @kind object;
  #L494aee.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableConcatArray`;
  #L494af2.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcatArray;.<init>:([Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L494af8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494afe.  v2:= temp @kind object;
  #L494b00.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatArrayDelayError`(`io.reactivex.rxjava3.core.CompletableSource`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.concatArrayDelayError:([Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L494b14.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L494b1a.  v3:= temp @kind object;
  #L494b1c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L494b22.  v0:= temp @kind object;
  #L494b24.  v1:= 1I;
  #L494b26.  v2:= 2I;
  #L494b28.  call temp:= `concatMapCompletableDelayError`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L494b2e.  v3:= temp @kind object;
  #L494b30.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.concatDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L494b44.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L494b4a.  v1:= temp @kind object;
  #L494b4c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L494b52.  v0:= temp @kind object;
  #L494b54.  call temp:= `concatMapCompletableDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L494b5a.  v1:= temp @kind object;
  #L494b5c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatDelayError`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.concatDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L494b70.  v0:= 2I;
  #L494b72.  call temp:= `concatDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.concatDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494b78.  v1:= temp @kind object;
  #L494b7a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatDelayError`(`org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Completable;.concatDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L494b8c.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L494b92.  v2:= temp @kind object;
  #L494b94.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L494b9a.  v0:= temp @kind object;
  #L494b9c.  v1:= 1I;
  #L494b9e.  call temp:= `concatMapCompletableDelayError`(v2, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapCompletableDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L494ba4.  v2:= temp @kind object;
  #L494ba6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `create`(`io.reactivex.rxjava3.core.CompletableOnSubscribe` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.create:(Lio/reactivex/rxjava3/core/CompletableOnSubscribe;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L494be8.  v0:= "source is null" @kind object;
  #L494bec.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494bf2.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableCreate`;
  #L494bf6.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCreate;.<init>:(Lio/reactivex/rxjava3/core/CompletableOnSubscribe;)V` @kind direct;
  #L494bfc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494c02.  v1:= temp @kind object;
  #L494c04.  return v1 @kind object;
}
procedure `java.lang.NullPointerException` `d`(`java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.d:(Ljava/lang/Throwable;)Ljava/lang/NullPointerException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L495ebc.  v0:= new `java.lang.NullPointerException`;
  #L495ec0.  v1:= "Actually not, but can't pass out an exception otherwise..." @kind object;
  #L495ec4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L495eca.  call temp:= `initCause`(v0, v2) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L495ed0.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `defer`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.defer:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L494c18.  v0:= "supplier is null" @kind object;
  #L494c1c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494c22.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableDefer`;
  #L494c26.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableDefer;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L494c2c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494c32.  v1:= temp @kind object;
  #L494c34.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `error`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L494f64.  v0:= "supplier is null" @kind object;
  #L494f68.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494f6e.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableErrorSupplier`;
  #L494f72.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableErrorSupplier;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L494f78.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494f7e.  v1:= temp @kind object;
  #L494f80.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.error:(Ljava/lang/Throwable;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L494f94.  v0:= "throwable is null" @kind object;
  #L494f98.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494f9e.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableError`;
  #L494fa2.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableError;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L494fa8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494fae.  v1:= temp @kind object;
  #L494fb0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `fromAction`(`io.reactivex.rxjava3.functions.Action` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.fromAction:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L494fc4.  v0:= "action is null" @kind object;
  #L494fc8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494fce.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableFromAction`;
  #L494fd2.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromAction;.<init>:(Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L494fd8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494fde.  v1:= temp @kind object;
  #L494fe0.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L494ff4.  v0:= "callable is null" @kind object;
  #L494ff8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494ffe.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableFromCallable`;
  #L495002.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L495008.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49500e.  v1:= temp @kind object;
  #L495010.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `fromCompletionStage`(`java.util.concurrent.CompletionStage` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.fromCompletionStage:(Ljava/util/concurrent/CompletionStage;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L495024.  v0:= "stage is null" @kind object;
  #L495028.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49502e.  v0:= new `io.reactivex.rxjava3.internal.jdk8.CompletableFromCompletionStage`;
  #L495032.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/CompletableFromCompletionStage;.<init>:(Ljava/util/concurrent/CompletionStage;)V` @kind direct;
  #L495038.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49503e.  v1:= temp @kind object;
  #L495040.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L495054.  v0:= "future is null" @kind object;
  #L495058.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49505e.  call temp:= `futureAction`(v1) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.futureAction:(Ljava/util/concurrent/Future;)Lio/reactivex/rxjava3/functions/Action;` @kind static;
  #L495064.  v1:= temp @kind object;
  #L495066.  call temp:= `fromAction`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.fromAction:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49506c.  v1:= temp @kind object;
  #L49506e.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `fromMaybe`(`io.reactivex.rxjava3.core.MaybeSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.fromMaybe:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L495080.  v0:= "maybe is null" @kind object;
  #L495084.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49508a.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeIgnoreElementCompletable`;
  #L49508e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeIgnoreElementCompletable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;)V` @kind direct;
  #L495094.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49509a.  v1:= temp @kind object;
  #L49509c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `fromObservable`(`io.reactivex.rxjava3.core.ObservableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.fromObservable:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4950b0.  v0:= "observable is null" @kind object;
  #L4950b4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4950ba.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableFromObservable`;
  #L4950be.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromObservable;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4950c4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4950ca.  v1:= temp @kind object;
  #L4950cc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4950e0.  v0:= "publisher is null" @kind object;
  #L4950e4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4950ea.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableFromPublisher`;
  #L4950ee.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L4950f4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4950fa.  v1:= temp @kind object;
  #L4950fc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `fromRunnable`(`java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.fromRunnable:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L495110.  v0:= "run is null" @kind object;
  #L495114.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49511a.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableFromRunnable`;
  #L49511e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromRunnable;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L495124.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49512a.  v1:= temp @kind object;
  #L49512c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `fromSingle`(`io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.fromSingle:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L495140.  v0:= "single is null" @kind object;
  #L495144.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49514a.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableFromSingle`;
  #L49514e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromSingle;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L495154.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49515a.  v1:= temp @kind object;
  #L49515c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `fromSupplier`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.fromSupplier:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L495170.  v0:= "supplier is null" @kind object;
  #L495174.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49517a.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableFromSupplier`;
  #L49517e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromSupplier;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L495184.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49518a.  v1:= temp @kind object;
  #L49518c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.merge:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4951f4.  v0:= "sources is null" @kind object;
  #L4951f8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4951fe.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableMergeIterable`;
  #L495202.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMergeIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L495208.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49520e.  v1:= temp @kind object;
  #L495210.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `merge`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L495224.  v0:= 2147483647I;
  #L49522a.  v1:= 0I;
  #L49522c.  call temp:= `b`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495232.  v2:= temp @kind object;
  #L495234.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `merge`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Completable;.merge:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L495248.  v0:= 0I;
  #L49524a.  call temp:= `b`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495250.  v1:= temp @kind object;
  #L495252.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `mergeArray`(`io.reactivex.rxjava3.core.CompletableSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.mergeArray:([Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L49529c.  v0:= "sources is null" @kind object;
  #L4952a0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4952a6.  v0:= length @variable v2;
  #L4952a8.  if v0 != 0 then goto L4952b6;
  #L4952ac.  call temp:= `complete`() @signature `Lio/reactivex/rxjava3/core/Completable;.complete:()Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4952b2.  v2:= temp @kind object;
  #L4952b4.  return v2 @kind object;
  #L4952b6.  v0:= length @variable v2;
  #L4952b8.  v1:= 1I;
  #L4952ba.  if v0 != v1 then goto L4952ce;
  #L4952be.  v0:= 0I;
  #L4952c0.  v2:= v2[v0] @kind object;
  #L4952c4.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.wrap:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4952ca.  v2:= temp @kind object;
  #L4952cc.  return v2 @kind object;
  #L4952ce.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableMergeArray`;
  #L4952d2.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMergeArray;.<init>:([Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L4952d8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4952de.  v2:= temp @kind object;
  #L4952e0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `mergeArrayDelayError`(`io.reactivex.rxjava3.core.CompletableSource`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.mergeArrayDelayError:([Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4952f4.  v0:= "sources is null" @kind object;
  #L4952f8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4952fe.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableMergeArrayDelayError`;
  #L495302.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMergeArrayDelayError;.<init>:([Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L495308.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49530e.  v1:= temp @kind object;
  #L495310.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `mergeDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L495324.  v0:= "sources is null" @kind object;
  #L495328.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49532e.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableMergeDelayErrorIterable`;
  #L495332.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMergeDelayErrorIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L495338.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49533e.  v1:= temp @kind object;
  #L495340.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `mergeDelayError`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L495354.  v0:= 2147483647I;
  #L49535a.  v1:= 1I;
  #L49535c.  call temp:= `b`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495362.  v2:= temp @kind object;
  #L495364.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `mergeDelayError`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/rxjava3/core/Completable;.mergeDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L495378.  v0:= 1I;
  #L49537a.  call temp:= `b`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495380.  v1:= temp @kind object;
  #L495382.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `never`() @signature `Lio/reactivex/rxjava3/core/Completable;.never:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4953cc.  v0:= `@@io.reactivex.rxjava3.internal.operators.completable.CompletableNever.INSTANCE` @type ^`io.reactivex.rxjava3.core.Completable` @kind object;
  #L4953d0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4953d6.  v0:= temp @kind object;
  #L4953d8.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`io.reactivex.rxjava3.core.CompletableSource` v2 @kind object, `io.reactivex.rxjava3.core.CompletableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.sequenceEqual:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L495d30.  v0:= "source1 is null" @kind object;
  #L495d34.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495d3a.  v0:= "source2 is null" @kind object;
  #L495d3e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495d44.  v0:= 2I;
  #L495d46.  v0:= new `io.reactivex.rxjava3.core.CompletableSource`[v0];
  #L495d4a.  v1:= 0I;
  #L495d4c.  v0[v1]:= v2 @kind object;
  #L495d50.  v2:= 1I;
  #L495d52.  v0[v2]:= v3 @kind object;
  #L495d56.  call temp:= `mergeArrayDelayError`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.mergeArrayDelayError:([Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495d5c.  v2:= temp @kind object;
  #L495d5e.  v3:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L495d62.  call temp:= `just`(v3) @signature `Lio/reactivex/rxjava3/core/Single;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L495d68.  v3:= temp @kind object;
  #L495d6a.  call temp:= `andThen`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Completable;.andThen:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L495d70.  v2:= temp @kind object;
  #L495d72.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `switchOnNext`(`org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.switchOnNext:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L495748.  v0:= "sources is null" @kind object;
  #L49574c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495752.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletablePublisher`;
  #L495756.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L49575c.  v1:= temp @kind object;
  #L49575e.  v2:= 0I;
  #L495760.  call `<init>`(v0, v3, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletablePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L495766.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49576c.  v3:= temp @kind object;
  #L49576e.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `switchOnNextDelayError`(`org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.switchOnNextDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L495780.  v0:= "sources is null" @kind object;
  #L495784.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49578a.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletablePublisher`;
  #L49578e.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L495794.  v1:= temp @kind object;
  #L495796.  v2:= 1I;
  #L495798.  call `<init>`(v0, v3, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletablePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L49579e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4957a4.  v3:= temp @kind object;
  #L4957a6.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4958d4.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4958da.  v0:= temp @kind object;
  #L4958dc.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4958e2.  v1:= temp @kind object;
  #L4958e4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4958f8.  v0:= "unit is null" @kind object;
  #L4958fc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495902.  v0:= "scheduler is null" @kind object;
  #L495906.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49590c.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableTimer`;
  #L495910.  call `<init>`(v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L495916.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49591c.  v1:= temp @kind object;
  #L49591e.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `unsafeCreate`(`io.reactivex.rxjava3.core.CompletableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.unsafeCreate:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L495930.  v0:= "onSubscribe is null" @kind object;
  #L495934.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49593a.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Completable` @kind boolean;
  #L49593e.  if v0 != 0 then goto L495956;
  #L495942.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableFromUnsafeSource`;
  #L495946.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromUnsafeSource;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L49594c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495952.  v1:= temp @kind object;
  #L495954.  return v1 @kind object;
  #L495956.  v1:= new `java.lang.IllegalArgumentException`;
  #L49595a.  v0:= "Use of unsafeCreate(Completable)!" @kind object;
  #L49595e.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L495964.  throw v1;
}
procedure `io.reactivex.rxjava3.core.Completable` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4959a8.  v0:= 1I;
  #L4959aa.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4959b0.  v1:= temp @kind object;
  #L4959b2.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Completable;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4959c4.  v0:= "resourceSupplier is null" @kind object;
  #L4959c8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4959ce.  v0:= "sourceSupplier is null" @kind object;
  #L4959d2.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4959d8.  v0:= "resourceCleanup is null" @kind object;
  #L4959dc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4959e2.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableUsing`;
  #L4959e6.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableUsing;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)V` @kind direct;
  #L4959ec.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4959f2.  v1:= temp @kind object;
  #L4959f4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `wrap`(`io.reactivex.rxjava3.core.CompletableSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.wrap:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L495a08.  v0:= "source is null" @kind object;
  #L495a0c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495a12.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Completable` @kind boolean;
  #L495a16.  if v0 == 0 then goto L495a28;
  #L495a1a.  v1:= (`io.reactivex.rxjava3.core.Completable`) v1 @kind object;
  #L495a1e.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495a24.  v1:= temp @kind object;
  #L495a26.  return v1 @kind object;
  #L495a28.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableFromUnsafeSource`;
  #L495a2c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromUnsafeSource;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L495a32.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495a38.  v1:= temp @kind object;
  #L495a3a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `ambWith`(`io.reactivex.rxjava3.core.Completable` v2 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.ambWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L494958.  v0:= "other is null" @kind object;
  #L49495c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494962.  v0:= 2I;
  #L494964.  v0:= new `io.reactivex.rxjava3.core.CompletableSource`[v0];
  #L494968.  v1:= 0I;
  #L49496a.  v0[v1]:= v2 @kind object;
  #L49496e.  v1:= 1I;
  #L494970.  v0[v1]:= v3 @kind object;
  #L494974.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.ambArray:([Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49497a.  v3:= temp @kind object;
  #L49497c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `andThen`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.andThen:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L494990.  v0:= "next is null" @kind object;
  #L494994.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49499a.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableAndThenCompletable`;
  #L49499e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableAndThenCompletable;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L4949a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4949aa.  v2:= temp @kind object;
  #L4949ac.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `andThen`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.andThen:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495a64.  v0:= "next is null" @kind object;
  #L495a68.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495a6e.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher`;
  #L495a72.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenPublisher;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L495a78.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L495a7e.  v2:= temp @kind object;
  #L495a80.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `andThen`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.andThen:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495b74.  v0:= "next is null" @kind object;
  #L495b78.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495b7e.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeDelayWithCompletable`;
  #L495b82.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelayWithCompletable;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L495b88.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L495b8e.  v2:= temp @kind object;
  #L495b90.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `andThen`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.andThen:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495c3c.  v0:= "next is null" @kind object;
  #L495c40.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495c46.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable`;
  #L495c4a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenObservable;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L495c50.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L495c56.  v2:= temp @kind object;
  #L495c58.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `andThen`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.andThen:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495cdc.  v0:= "next is null" @kind object;
  #L495ce0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495ce6.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithCompletable`;
  #L495cea.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithCompletable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L495cf0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L495cf6.  v2:= temp @kind object;
  #L495cf8.  return v2 @kind object;
}
procedure `void` `blockingAwait`(`io.reactivex.rxjava3.core.Completable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.blockingAwait:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495f7c.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver`;
  #L495f80.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L495f86.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L495f8c.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L495f92.  return @kind void;
}
procedure `boolean` `blockingAwait`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.blockingAwait:(JLjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49489c.  v0:= "unit is null" @kind object;
  #L4948a0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4948a6.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver`;
  #L4948aa.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L4948b0.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4948b6.  call temp:= `blockingAwait`(v0, v2, v4) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.blockingAwait:(JLjava/util/concurrent/TimeUnit;)Z` @kind virtual;
  #L4948bc.  v2:= temp;
  #L4948be.  return v2;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Completable` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.blockingSubscribe:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L495fa4.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L495fa8.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.ERROR_CONSUMER` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L495fac.  call `blockingSubscribe`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Completable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind virtual;
  #L495fb2.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.blockingSubscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495fc4.  v0:= "observer is null" @kind object;
  #L495fc8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495fce.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver`;
  #L495fd2.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.<init>:()V` @kind direct;
  #L495fd8.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/CompletableObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L495fde.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L495fe4.  call `blockingConsume`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L495fea.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Action;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495ffc.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ERROR_CONSUMER` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L496000.  call `blockingSubscribe`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind virtual;
  #L496006.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Completable` v2 @kind this, `io.reactivex.rxjava3.functions.Action` v3 @kind object, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L496018.  v0:= "onComplete is null" @kind object;
  #L49601c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496022.  v0:= "onError is null" @kind object;
  #L496026.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49602c.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver`;
  #L496030.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L496036.  call `subscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L49603c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L496042.  v1:= temp @kind object;
  #L496044.  call `blockingConsume`(v0, v1, v4, v3) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind virtual;
  #L49604a.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Completable` `cache`(`io.reactivex.rxjava3.core.Completable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.cache:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4949c0.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableCache`;
  #L4949c4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableCache;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L4949ca.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4949d0.  v0:= temp @kind object;
  #L4949d2.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `compose`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableTransformer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.compose:(Lio/reactivex/rxjava3/core/CompletableTransformer;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L494a04.  v0:= "transformer is null" @kind object;
  #L494a08.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494a0e.  v2:= temp @kind object;
  #L494a10.  v2:= (`io.reactivex.rxjava3.core.CompletableTransformer`) v2 @kind object;
  #L494a14.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/CompletableTransformer;.apply:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/CompletableSource;` @kind interface;
  #L494a1a.  v2:= temp @kind object;
  #L494a1c.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.wrap:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494a22.  v2:= temp @kind object;
  #L494a24.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatWith`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.concatWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L494bb8.  v0:= "other is null" @kind object;
  #L494bbc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494bc2.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableAndThenCompletable`;
  #L494bc6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableAndThenCompletable;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L494bcc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494bd2.  v2:= temp @kind object;
  #L494bd4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `delay`(`io.reactivex.rxjava3.core.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L494c48.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L494c4e.  v4:= temp @kind object;
  #L494c50.  v5:= 0I;
  #L494c52.  v0:= v6 @kind object;
  #L494c54.  v1:= v7 @kind wide;
  #L494c56.  v3:= v9 @kind object;
  #L494c58.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L494c5e.  v7:= temp @kind object;
  #L494c60.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `delay`(`io.reactivex.rxjava3.core.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L494c74.  v5:= 0I;
  #L494c76.  v0:= v6 @kind object;
  #L494c78.  v1:= v7 @kind wide;
  #L494c7a.  v3:= v9 @kind object;
  #L494c7c.  v4:= v10 @kind object;
  #L494c7e.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L494c84.  v7:= temp @kind object;
  #L494c86.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `delay`(`io.reactivex.rxjava3.core.Completable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L494c98.  v0:= "unit is null" @kind object;
  #L494c9c.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494ca2.  v0:= "scheduler is null" @kind object;
  #L494ca6.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494cac.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableDelay`;
  #L494cb0.  v1:= v0 @kind object;
  #L494cb2.  v2:= v8 @kind object;
  #L494cb4.  v3:= v9 @kind wide;
  #L494cb6.  v5:= v11 @kind object;
  #L494cb8.  v6:= v12 @kind object;
  #L494cba.  v7:= v13;
  #L494cbc.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableDelay;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L494cc2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494cc8.  v9:= temp @kind object;
  #L494cca.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `delaySubscription`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L494cdc.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L494ce2.  v0:= temp @kind object;
  #L494ce4.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L494cea.  v2:= temp @kind object;
  #L494cec.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `delaySubscription`(`io.reactivex.rxjava3.core.Completable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L494d00.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Completable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494d06.  v1:= temp @kind object;
  #L494d08.  call temp:= `andThen`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.andThen:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L494d0e.  v1:= temp @kind object;
  #L494d10.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `doAfterTerminate`(`io.reactivex.rxjava3.core.Completable` v7 @kind this, `io.reactivex.rxjava3.functions.Action` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.doAfterTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L494d24.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L494d2a.  v1:= temp @kind object;
  #L494d2c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L494d32.  v2:= temp @kind object;
  #L494d34.  v6:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L494d38.  v0:= v7 @kind object;
  #L494d3a.  v3:= v6 @kind object;
  #L494d3c.  v4:= v6 @kind object;
  #L494d3e.  v5:= v8 @kind object;
  #L494d40.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Completable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @kind direct;
  #L494d46.  v8:= temp @kind object;
  #L494d48.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `doFinally`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.doFinally:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L494d5c.  v0:= "onFinally is null" @kind object;
  #L494d60.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494d66.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableDoFinally`;
  #L494d6a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableDoFinally;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L494d70.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494d76.  v2:= temp @kind object;
  #L494d78.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `doOnComplete`(`io.reactivex.rxjava3.core.Completable` v7 @kind this, `io.reactivex.rxjava3.functions.Action` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.doOnComplete:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L494d8c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L494d92.  v1:= temp @kind object;
  #L494d94.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L494d9a.  v2:= temp @kind object;
  #L494d9c.  v6:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L494da0.  v0:= v7 @kind object;
  #L494da2.  v3:= v8 @kind object;
  #L494da4.  v4:= v6 @kind object;
  #L494da6.  v5:= v6 @kind object;
  #L494da8.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Completable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @kind direct;
  #L494dae.  v8:= temp @kind object;
  #L494db0.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `doOnDispose`(`io.reactivex.rxjava3.core.Completable` v7 @kind this, `io.reactivex.rxjava3.functions.Action` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.doOnDispose:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L494dc4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L494dca.  v1:= temp @kind object;
  #L494dcc.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L494dd2.  v2:= temp @kind object;
  #L494dd4.  v5:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L494dd8.  v0:= v7 @kind object;
  #L494dda.  v3:= v5 @kind object;
  #L494ddc.  v4:= v5 @kind object;
  #L494dde.  v6:= v8 @kind object;
  #L494de0.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Completable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @kind direct;
  #L494de6.  v8:= temp @kind object;
  #L494de8.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `doOnError`(`io.reactivex.rxjava3.core.Completable` v7 @kind this, `io.reactivex.rxjava3.functions.Consumer` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.doOnError:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L494dfc.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L494e02.  v1:= temp @kind object;
  #L494e04.  v6:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L494e08.  v0:= v7 @kind object;
  #L494e0a.  v2:= v8 @kind object;
  #L494e0c.  v3:= v6 @kind object;
  #L494e0e.  v4:= v6 @kind object;
  #L494e10.  v5:= v6 @kind object;
  #L494e12.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Completable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @kind direct;
  #L494e18.  v8:= temp @kind object;
  #L494e1a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `doOnEvent`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.doOnEvent:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L494e2c.  v0:= "onEvent is null" @kind object;
  #L494e30.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L494e36.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableDoOnEvent`;
  #L494e3a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableDoOnEvent;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L494e40.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L494e46.  v2:= temp @kind object;
  #L494e48.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `doOnLifecycle`(`io.reactivex.rxjava3.core.Completable` v7 @kind this, `io.reactivex.rxjava3.functions.Consumer` v8 @kind object, `io.reactivex.rxjava3.functions.Action` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L494e5c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L494e62.  v2:= temp @kind object;
  #L494e64.  v5:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L494e68.  v0:= v7 @kind object;
  #L494e6a.  v1:= v8 @kind object;
  #L494e6c.  v3:= v5 @kind object;
  #L494e6e.  v4:= v5 @kind object;
  #L494e70.  v6:= v9 @kind object;
  #L494e72.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Completable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @kind direct;
  #L494e78.  v8:= temp @kind object;
  #L494e7a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `doOnSubscribe`(`io.reactivex.rxjava3.core.Completable` v7 @kind this, `io.reactivex.rxjava3.functions.Consumer` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.doOnSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L494efc.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L494f02.  v2:= temp @kind object;
  #L494f04.  v6:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L494f08.  v0:= v7 @kind object;
  #L494f0a.  v1:= v8 @kind object;
  #L494f0c.  v3:= v6 @kind object;
  #L494f0e.  v4:= v6 @kind object;
  #L494f10.  v5:= v6 @kind object;
  #L494f12.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Completable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @kind direct;
  #L494f18.  v8:= temp @kind object;
  #L494f1a.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `doOnTerminate`(`io.reactivex.rxjava3.core.Completable` v7 @kind this, `io.reactivex.rxjava3.functions.Action` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.doOnTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L494f2c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L494f32.  v1:= temp @kind object;
  #L494f34.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L494f3a.  v2:= temp @kind object;
  #L494f3c.  v6:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L494f40.  v0:= v7 @kind object;
  #L494f42.  v3:= v6 @kind object;
  #L494f44.  v4:= v8 @kind object;
  #L494f46.  v5:= v6 @kind object;
  #L494f48.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Completable;.a:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Completable;` @kind direct;
  #L494f4e.  v8:= temp @kind object;
  #L494f50.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `hide`(`io.reactivex.rxjava3.core.Completable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.hide:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4951a0.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableHide`;
  #L4951a4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableHide;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L4951aa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4951b0.  v0:= temp @kind object;
  #L4951b2.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `lift`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableOperator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.lift:(Lio/reactivex/rxjava3/core/CompletableOperator;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4951c4.  v0:= "onLift is null" @kind object;
  #L4951c8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4951ce.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableLift`;
  #L4951d2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableLift;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/core/CompletableOperator;)V` @kind direct;
  #L4951d8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4951de.  v2:= temp @kind object;
  #L4951e0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `materialize`(`io.reactivex.rxjava3.core.Completable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.materialize:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495d0c.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableMaterialize`;
  #L495d10.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableMaterialize;.<init>:(Lio/reactivex/rxjava3/core/Completable;)V` @kind direct;
  #L495d16.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L495d1c.  v0:= temp @kind object;
  #L495d1e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `mergeWith`(`io.reactivex.rxjava3.core.Completable` v2 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.mergeWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L495394.  v0:= "other is null" @kind object;
  #L495398.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49539e.  v0:= 2I;
  #L4953a0.  v0:= new `io.reactivex.rxjava3.core.CompletableSource`[v0];
  #L4953a4.  v1:= 0I;
  #L4953a6.  v0[v1]:= v2 @kind object;
  #L4953aa.  v1:= 1I;
  #L4953ac.  v0[v1]:= v3 @kind object;
  #L4953b0.  call temp:= `mergeArray`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.mergeArray:([Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4953b6.  v3:= temp @kind object;
  #L4953b8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `observeOn`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4953ec.  v0:= "scheduler is null" @kind object;
  #L4953f0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4953f6.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableObserveOn`;
  #L4953fa.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableObserveOn;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L495400.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495406.  v2:= temp @kind object;
  #L495408.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `onErrorComplete`(`io.reactivex.rxjava3.core.Completable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.onErrorComplete:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49541c.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L495422.  v0:= temp @kind object;
  #L495424.  call temp:= `onErrorComplete`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L49542a.  v0:= temp @kind object;
  #L49542c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `onErrorComplete`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495440.  v0:= "predicate is null" @kind object;
  #L495444.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49544a.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete`;
  #L49544e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableOnErrorComplete;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L495454.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49545a.  v2:= temp @kind object;
  #L49545c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `onErrorResumeNext`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495470.  v0:= "fallbackSupplier is null" @kind object;
  #L495474.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49547a.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableResumeNext`;
  #L49547e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableResumeNext;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L495484.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49548a.  v2:= temp @kind object;
  #L49548c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `onErrorResumeWith`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.onErrorResumeWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4954a0.  v0:= "fallback is null" @kind object;
  #L4954a4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4954aa.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4954b0.  v2:= temp @kind object;
  #L4954b2.  call temp:= `onErrorResumeNext`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Completable;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L4954b8.  v2:= temp @kind object;
  #L4954ba.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `onErrorReturn`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.onErrorReturn:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495ba4.  v0:= "itemSupplier is null" @kind object;
  #L495ba8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495bae.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorReturn`;
  #L495bb2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableOnErrorReturn;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L495bb8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L495bbe.  v2:= temp @kind object;
  #L495bc0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `onErrorReturnItem`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.onErrorReturnItem:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495bd4.  v0:= "item is null" @kind object;
  #L495bd8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495bde.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L495be4.  v2:= temp @kind object;
  #L495be6.  call temp:= `onErrorReturn`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Completable;.onErrorReturn:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L495bec.  v2:= temp @kind object;
  #L495bee.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `onTerminateDetach`(`io.reactivex.rxjava3.core.Completable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.onTerminateDetach:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4954cc.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableDetach`;
  #L4954d0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableDetach;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L4954d6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4954dc.  v0:= temp @kind object;
  #L4954de.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `repeat`(`io.reactivex.rxjava3.core.Completable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.repeat:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4954f0.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4954f6.  v0:= temp @kind object;
  #L4954f8.  call temp:= `repeat`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeat:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4954fe.  v0:= temp @kind object;
  #L495500.  call temp:= `fromPublisher`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495506.  v0:= temp @kind object;
  #L495508.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `repeat`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/core/Completable;.repeat:(J)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49551c.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L495522.  v0:= temp @kind object;
  #L495524.  call temp:= `repeat`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeat:(J)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49552a.  v2:= temp @kind object;
  #L49552c.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495532.  v2:= temp @kind object;
  #L495534.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `repeatUntil`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.repeatUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495548.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49554e.  v0:= temp @kind object;
  #L495550.  call temp:= `repeatUntil`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeatUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L495556.  v2:= temp @kind object;
  #L495558.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49555e.  v2:= temp @kind object;
  #L495560.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `repeatWhen`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.repeatWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495574.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49557a.  v0:= temp @kind object;
  #L49557c.  call temp:= `repeatWhen`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeatWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L495582.  v2:= temp @kind object;
  #L495584.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49558a.  v2:= temp @kind object;
  #L49558c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `retry`(`io.reactivex.rxjava3.core.Completable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.retry:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4955a0.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4955a6.  v0:= temp @kind object;
  #L4955a8.  call temp:= `retry`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4955ae.  v0:= temp @kind object;
  #L4955b0.  call temp:= `fromPublisher`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4955b6.  v0:= temp @kind object;
  #L4955b8.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `retry`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/core/Completable;.retry:(J)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495624.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49562a.  v0:= temp @kind object;
  #L49562c.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(J)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L495632.  v2:= temp @kind object;
  #L495634.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49563a.  v2:= temp @kind object;
  #L49563c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `retry`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `long` v2 , `io.reactivex.rxjava3.functions.Predicate` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495650.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L495656.  v0:= temp @kind object;
  #L495658.  call temp:= `retry`(v0, v2, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L49565e.  v2:= temp @kind object;
  #L495660.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495666.  v2:= temp @kind object;
  #L495668.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `retry`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.retry:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4955cc.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4955d2.  v0:= temp @kind object;
  #L4955d4.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4955da.  v2:= temp @kind object;
  #L4955dc.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4955e2.  v2:= temp @kind object;
  #L4955e4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `retry`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.retry:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4955f8.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4955fe.  v0:= temp @kind object;
  #L495600.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L495606.  v2:= temp @kind object;
  #L495608.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L49560e.  v2:= temp @kind object;
  #L495610.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `retryUntil`(`io.reactivex.rxjava3.core.Completable` v2 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.retryUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L49567c.  v0:= "stop is null" @kind object;
  #L495680.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495686.  call temp:= `predicateReverseFor`(v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.predicateReverseFor:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L49568c.  v3:= temp @kind object;
  #L49568e.  v0:= 9223372036854775807L;
  #L495698.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Completable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L49569e.  v3:= temp @kind object;
  #L4956a0.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `retryWhen`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.retryWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4956b4.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4956ba.  v0:= temp @kind object;
  #L4956bc.  call temp:= `retryWhen`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.retryWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4956c2.  v2:= temp @kind object;
  #L4956c4.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4956ca.  v2:= temp @kind object;
  #L4956cc.  return v2 @kind object;
}
procedure `void` `safeSubscribe`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.safeSubscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49605c.  v0:= "observer is null" @kind object;
  #L496060.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496066.  v0:= new `io.reactivex.rxjava3.internal.observers.SafeCompletableObserver`;
  #L49606a.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/observers/SafeCompletableObserver;.<init>:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind direct;
  #L496070.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L496076.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Completable` `startWith`(`io.reactivex.rxjava3.core.Completable` v2 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.startWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4956e0.  v0:= "other is null" @kind object;
  #L4956e4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4956ea.  v0:= 2I;
  #L4956ec.  v0:= new `io.reactivex.rxjava3.core.CompletableSource`[v0];
  #L4956f0.  v1:= 0I;
  #L4956f2.  v0[v1]:= v3 @kind object;
  #L4956f6.  v3:= 1I;
  #L4956f8.  v0[v3]:= v2 @kind object;
  #L4956fc.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/rxjava3/core/Completable;.concatArray:([Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495702.  v3:= temp @kind object;
  #L495704.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.startWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495a94.  v0:= "other is null" @kind object;
  #L495a98.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495a9e.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.wrap:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L495aa4.  v2:= temp @kind object;
  #L495aa6.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L495aac.  v2:= temp @kind object;
  #L495aae.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L495ab4.  v0:= temp @kind object;
  #L495ab6.  call temp:= `concat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L495abc.  v2:= temp @kind object;
  #L495abe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.startWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495ad0.  v0:= "other is null" @kind object;
  #L495ad4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495ada.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.wrap:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L495ae0.  v2:= temp @kind object;
  #L495ae2.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L495ae8.  v2:= temp @kind object;
  #L495aea.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L495af0.  v0:= temp @kind object;
  #L495af2.  call temp:= `concat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L495af8.  v2:= temp @kind object;
  #L495afa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495b0c.  v0:= "other is null" @kind object;
  #L495b10.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495b16.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L495b1c.  v0:= temp @kind object;
  #L495b1e.  call temp:= `startWith`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L495b24.  v2:= temp @kind object;
  #L495b26.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWith`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.startWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495c6c.  v0:= "other is null" @kind object;
  #L495c70.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495c76.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L495c7c.  v2:= temp @kind object;
  #L495c7e.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/core/Completable;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L495c84.  v0:= temp @kind object;
  #L495c86.  call temp:= `concatWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L495c8c.  v2:= temp @kind object;
  #L495c8e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Completable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:()Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495de4.  v0:= new `io.reactivex.rxjava3.internal.observers.EmptyCompletableObserver`;
  #L495de8.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/EmptyCompletableObserver;.<init>:()V` @kind direct;
  #L495dee.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L495df4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495e08.  v0:= "onComplete is null" @kind object;
  #L495e0c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495e12.  v0:= new `io.reactivex.rxjava3.internal.observers.CallbackCompletableObserver`;
  #L495e16.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/observers/CallbackCompletableObserver;.<init>:(Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L495e1c.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L495e22.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/functions/Action;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495e34.  v0:= "onError is null" @kind object;
  #L495e38.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495e3e.  v0:= "onComplete is null" @kind object;
  #L495e42.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495e48.  v0:= new `io.reactivex.rxjava3.internal.observers.CallbackCompletableObserver`;
  #L495e4c.  call `<init>`(v0, v3, v2) @signature `Lio/reactivex/rxjava3/internal/observers/CallbackCompletableObserver;.<init>:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L495e52.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L495e58.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L496088.  v0:= "observer is null" @kind object;
  #L49608c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L496092.  call temp:= `onSubscribe`(v1, v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/rxjava3/core/Completable;Lio/reactivex/rxjava3/core/CompletableObserver;)Lio/reactivex/rxjava3/core/CompletableObserver;` @kind static;
  #L496098.  v2:= temp @kind object;
  #L49609a.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null CompletableObserver. Please check the handler provided to RxJavaPlugins.setOnCompletableSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L49609e.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4960a4.  call `subscribeActual`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribeActual:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L4960aa.  return @kind void;
  #L4960ac.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4960ae.  call `throwIfFatal`(v2) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4960b4.  call `onError`(v2) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4960ba.  call temp:= `d`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.d:(Ljava/lang/Throwable;)Ljava/lang/NullPointerException;` @kind static;
  #L4960c0.  v2:= temp @kind object;
  #L4960c2.  throw v2;
  #L4960c4.  v2:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L4960c6.  throw v2;
  catch `java.lang.NullPointerException` @[L496092..L4960aa] goto L4960c4;
  catch `java.lang.Throwable` @[L496092..L4960aa] goto L4960ac;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.core.CompletableObserver` v0 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribeActual:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.rxjava3.core.Completable` `subscribeOn`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495718.  v0:= "scheduler is null" @kind object;
  #L49571c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495722.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableSubscribeOn`;
  #L495726.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableSubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L49572c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495732.  v2:= temp @kind object;
  #L495734.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.CompletableObserver` `subscribeWith`(`io.reactivex.rxjava3.core.Completable` v0 @kind this, `io.reactivex.rxjava3.core.CompletableObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribeWith:(Lio/reactivex/rxjava3/core/CompletableObserver;)Lio/reactivex/rxjava3/core/CompletableObserver;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L495a4c.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L495a52.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `takeUntil`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.takeUntil:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4957b8.  v0:= "other is null" @kind object;
  #L4957bc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4957c2.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableTakeUntilCompletable`;
  #L4957c6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableTakeUntilCompletable;.<init>:(Lio/reactivex/rxjava3/core/Completable;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L4957cc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4957d2.  v2:= temp @kind object;
  #L4957d4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.observers.TestObserver` `test`(`io.reactivex.rxjava3.core.Completable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.test:()Lio/reactivex/rxjava3/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495e6c.  v0:= new `io.reactivex.rxjava3.observers.TestObserver`;
  #L495e70.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.<init>:()V` @kind direct;
  #L495e76.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L495e7c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.observers.TestObserver` `test`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/rxjava3/core/Completable;.test:(Z)Lio/reactivex/rxjava3/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495e90.  v0:= new `io.reactivex.rxjava3.observers.TestObserver`;
  #L495e94.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.<init>:()V` @kind direct;
  #L495e9a.  if v2 == 0 then goto L495ea4;
  #L495e9e.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.dispose:()V` @kind virtual;
  #L495ea4.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V` @kind virtual;
  #L495eaa.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `timeout`(`io.reactivex.rxjava3.core.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4957e8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4957ee.  v4:= temp @kind object;
  #L4957f0.  v5:= 0I;
  #L4957f2.  v0:= v6 @kind object;
  #L4957f4.  v1:= v7 @kind wide;
  #L4957f6.  v3:= v9 @kind object;
  #L4957f8.  call temp:= `c`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind direct;
  #L4957fe.  v7:= temp @kind object;
  #L495800.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `timeout`(`io.reactivex.rxjava3.core.Completable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.CompletableSource` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L495814.  v0:= "fallback is null" @kind object;
  #L495818.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49581e.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L495824.  v5:= temp @kind object;
  #L495826.  v1:= v7 @kind object;
  #L495828.  v2:= v8 @kind wide;
  #L49582a.  v4:= v10 @kind object;
  #L49582c.  v6:= v11 @kind object;
  #L49582e.  call temp:= `c`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind direct;
  #L495834.  v8:= temp @kind object;
  #L495836.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `timeout`(`io.reactivex.rxjava3.core.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L495848.  v5:= 0I;
  #L49584a.  v0:= v6 @kind object;
  #L49584c.  v1:= v7 @kind wide;
  #L49584e.  v3:= v9 @kind object;
  #L495850.  v4:= v10 @kind object;
  #L495852.  call temp:= `c`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind direct;
  #L495858.  v7:= temp @kind object;
  #L49585a.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `timeout`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object, `io.reactivex.rxjava3.core.CompletableSource` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L49586c.  v0:= "fallback is null" @kind object;
  #L495870.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495876.  call temp:= `c`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind direct;
  #L49587c.  v2:= temp @kind object;
  #L49587e.  return v2 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.CompletableConverter` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.to:(Lio/reactivex/rxjava3/core/CompletableConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495ee4.  v0:= "converter is null" @kind object;
  #L495ee8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495eee.  v2:= temp @kind object;
  #L495ef0.  v2:= (`io.reactivex.rxjava3.core.CompletableConverter`) v2 @kind object;
  #L495ef4.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/CompletableConverter;.apply:(Lio/reactivex/rxjava3/core/Completable;)Ljava/lang/Object;` @kind interface;
  #L495efa.  v2:= temp @kind object;
  #L495efc.  return v2 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `toCompletionStage`(`io.reactivex.rxjava3.core.Completable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.toCompletionStage:(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L495f10.  v0:= new `io.reactivex.rxjava3.internal.jdk8.CompletionStageConsumer`;
  #L495f14.  v1:= 1I;
  #L495f16.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/jdk8/CompletionStageConsumer;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L495f1c.  call temp:= `subscribeWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribeWith:(Lio/reactivex/rxjava3/core/CompletableObserver;)Lio/reactivex/rxjava3/core/CompletableObserver;` @kind virtual;
  #L495f22.  v3:= temp @kind object;
  #L495f24.  v3:= (`java.util.concurrent.CompletionStage`) v3 @kind object;
  #L495f28.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `toFlowable`(`io.reactivex.rxjava3.core.Completable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495b38.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.FuseToFlowable` @kind boolean;
  #L495b3c.  if v0 == 0 then goto L495b50;
  #L495b40.  v0:= v1 @kind object;
  #L495b42.  v0:= (`io.reactivex.rxjava3.internal.fuseable.FuseToFlowable`) v0 @kind object;
  #L495b46.  call temp:= `fuseToFlowable`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/FuseToFlowable;.fuseToFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind interface;
  #L495b4c.  v0:= temp @kind object;
  #L495b4e.  return v0 @kind object;
  #L495b50.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableToFlowable`;
  #L495b54.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableToFlowable;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L495b5a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L495b60.  v0:= temp @kind object;
  #L495b62.  return v0 @kind object;
}
procedure `java.util.concurrent.Future` `toFuture`(`io.reactivex.rxjava3.core.Completable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.toFuture:()Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495f3c.  v0:= new `io.reactivex.rxjava3.internal.observers.FutureMultiObserver`;
  #L495f40.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/FutureMultiObserver;.<init>:()V` @kind direct;
  #L495f46.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Completable;.subscribeWith:(Lio/reactivex/rxjava3/core/CompletableObserver;)Lio/reactivex/rxjava3/core/CompletableObserver;` @kind virtual;
  #L495f4c.  v0:= temp @kind object;
  #L495f4e.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L495f52.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `toMaybe`(`io.reactivex.rxjava3.core.Completable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.toMaybe:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495c00.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.FuseToMaybe` @kind boolean;
  #L495c04.  if v0 == 0 then goto L495c18;
  #L495c08.  v0:= v1 @kind object;
  #L495c0a.  v0:= (`io.reactivex.rxjava3.internal.fuseable.FuseToMaybe`) v0 @kind object;
  #L495c0e.  call temp:= `fuseToMaybe`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/FuseToMaybe;.fuseToMaybe:()Lio/reactivex/rxjava3/core/Maybe;` @kind interface;
  #L495c14.  v0:= temp @kind object;
  #L495c16.  return v0 @kind object;
  #L495c18.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromCompletable`;
  #L495c1c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromCompletable;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L495c22.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L495c28.  v0:= temp @kind object;
  #L495c2a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`io.reactivex.rxjava3.core.Completable` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Completable;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495ca0.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.FuseToObservable` @kind boolean;
  #L495ca4.  if v0 == 0 then goto L495cb8;
  #L495ca8.  v0:= v1 @kind object;
  #L495caa.  v0:= (`io.reactivex.rxjava3.internal.fuseable.FuseToObservable`) v0 @kind object;
  #L495cae.  call temp:= `fuseToObservable`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/FuseToObservable;.fuseToObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind interface;
  #L495cb4.  v0:= temp @kind object;
  #L495cb6.  return v0 @kind object;
  #L495cb8.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableToObservable`;
  #L495cbc.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableToObservable;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L495cc2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L495cc8.  v0:= temp @kind object;
  #L495cca.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSingle`(`io.reactivex.rxjava3.core.Completable` v2 @kind this, `io.reactivex.rxjava3.functions.Supplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.toSingle:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L495d84.  v0:= "completionValueSupplier is null" @kind object;
  #L495d88.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495d8e.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableToSingle`;
  #L495d92.  v1:= 0I;
  #L495d94.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableToSingle;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/functions/Supplier;Ljava/lang/Object;)V` @kind direct;
  #L495d9a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L495da0.  v3:= temp @kind object;
  #L495da2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `toSingleDefault`(`io.reactivex.rxjava3.core.Completable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.toSingleDefault:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L495db4.  v0:= "completionValue is null" @kind object;
  #L495db8.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495dbe.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableToSingle`;
  #L495dc2.  v1:= 0I;
  #L495dc4.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableToSingle;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/functions/Supplier;Ljava/lang/Object;)V` @kind direct;
  #L495dca.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L495dd0.  v3:= temp @kind object;
  #L495dd2.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `unsubscribeOn`(`io.reactivex.rxjava3.core.Completable` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Completable;.unsubscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L495978.  v0:= "scheduler is null" @kind object;
  #L49597c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L495982.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableDisposeOn`;
  #L495986.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableDisposeOn;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L49598c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L495992.  v2:= temp @kind object;
  #L495994.  return v2 @kind object;
}
