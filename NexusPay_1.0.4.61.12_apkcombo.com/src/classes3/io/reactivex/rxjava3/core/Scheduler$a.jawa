record `io.reactivex.rxjava3.core.Scheduler$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.disposables.Disposable` @kind interface, `java.lang.Runnable` @kind interface, `io.reactivex.rxjava3.schedulers.SchedulerRunnableIntrospection` @kind interface {
  `java.lang.Runnable` `io.reactivex.rxjava3.core.Scheduler$a.a` @AccessFlag FINAL;
  `io.reactivex.rxjava3.core.Scheduler$Worker` `io.reactivex.rxjava3.core.Scheduler$a.b` @AccessFlag FINAL;
  `java.lang.Thread` `io.reactivex.rxjava3.core.Scheduler$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.core.Scheduler$a` v0 @kind this, `java.lang.Runnable` v1 @kind object, `io.reactivex.rxjava3.core.Scheduler$Worker` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.<init>:(Ljava/lang/Runnable;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a744c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a7452.  v0.`io.reactivex.rxjava3.core.Scheduler$a.a` @type ^`java.lang.Runnable` := v1 @kind object;
  #L4a7456.  v0.`io.reactivex.rxjava3.core.Scheduler$a.b` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` := v2 @kind object;
  #L4a745a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.core.Scheduler$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a746c.  v0:= v2.`io.reactivex.rxjava3.core.Scheduler$a.c` @type ^`java.lang.Thread` @kind object;
  #L4a7470.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4a7476.  v1:= temp @kind object;
  #L4a7478.  if v0 != v1 then goto L4a7494;
  #L4a747c.  v0:= v2.`io.reactivex.rxjava3.core.Scheduler$a.b` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4a7480.  v1:= instanceof @variable v0 @type ^`io.reactivex.rxjava3.internal.schedulers.NewThreadWorker` @kind boolean;
  #L4a7484.  if v1 == 0 then goto L4a7494;
  #L4a7488.  v0:= (`io.reactivex.rxjava3.internal.schedulers.NewThreadWorker`) v0 @kind object;
  #L4a748c.  call `shutdown`(v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/NewThreadWorker;.shutdown:()V` @kind virtual;
  #L4a7492.  goto L4a749e;
  #L4a7494.  v0:= v2.`io.reactivex.rxjava3.core.Scheduler$a.b` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4a7498.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.dispose:()V` @kind interface;
  #L4a749e.  return @kind void;
}
procedure `java.lang.Runnable` `getWrappedRunnable`(`io.reactivex.rxjava3.core.Scheduler$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.getWrappedRunnable:()Ljava/lang/Runnable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a7434.  v0:= v1.`io.reactivex.rxjava3.core.Scheduler$a.a` @type ^`java.lang.Runnable` @kind object;
  #L4a7438.  return v0 @kind object;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.core.Scheduler$a` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a7414.  v0:= v1.`io.reactivex.rxjava3.core.Scheduler$a.b` @type ^`io.reactivex.rxjava3.core.Scheduler$Worker` @kind object;
  #L4a7418.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/rxjava3/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4a741e.  v0:= temp;
  #L4a7420.  return v0;
}
procedure `void` `run`(`io.reactivex.rxjava3.core.Scheduler$a` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a74b0.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4a74b6.  v0:= temp @kind object;
  #L4a74b8.  v2.`io.reactivex.rxjava3.core.Scheduler$a.c` @type ^`java.lang.Thread` := v0 @kind object;
  #L4a74bc.  v0:= 0I;
  #L4a74be.  v1:= v2.`io.reactivex.rxjava3.core.Scheduler$a.a` @type ^`java.lang.Runnable` @kind object;
  #L4a74c2.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L4a74c8.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.dispose:()V` @kind virtual;
  #L4a74ce.  v2.`io.reactivex.rxjava3.core.Scheduler$a.c` @type ^`java.lang.Thread` := v0 @kind object;
  #L4a74d2.  return @kind void;
  #L4a74d4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a74d6.  call `onError`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4a74dc.  throw v1;
  #L4a74de.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4a74e0.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/core/Scheduler$a;.dispose:()V` @kind virtual;
  #L4a74e6.  v2.`io.reactivex.rxjava3.core.Scheduler$a.c` @type ^`java.lang.Thread` := v0 @kind object;
  #L4a74ea.  throw v1;
  catch `java.lang.Throwable` @[L4a74be..L4a74c8] goto L4a74d4;
  catch `java.lang.Throwable` @[L4a74d6..L4a74de] goto L4a74de;
}
