record `io.reactivex.rxjava3.core.Single` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.SingleSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.rxjava3.core.Single` v0 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a9f8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a9f92.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Single` `a`(`io.reactivex.rxjava3.core.Single` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `io.reactivex.rxjava3.core.SingleSource` v13 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a9634.  v0:= "unit is null" @kind object;
  #L4a9638.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a963e.  v0:= "scheduler is null" @kind object;
  #L4a9642.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9648.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleTimeout`;
  #L4a964c.  v1:= v0 @kind object;
  #L4a964e.  v2:= v8 @kind object;
  #L4a9650.  v3:= v9 @kind wide;
  #L4a9652.  v5:= v11 @kind object;
  #L4a9654.  v6:= v12 @kind object;
  #L4a9656.  v7:= v13 @kind object;
  #L4a9658.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeout;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a965e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9664.  v9:= temp @kind object;
  #L4a9666.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.amb:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a87e8.  v0:= "sources is null" @kind object;
  #L4a87ec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a87f2.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleAmb`;
  #L4a87f6.  v1:= 0I;
  #L4a87f8.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleAmb;.<init>:([Lio/reactivex/rxjava3/core/SingleSource;Ljava/lang/Iterable;)V` @kind direct;
  #L4a87fe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8804.  v2:= temp @kind object;
  #L4a8806.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `ambArray`(`io.reactivex.rxjava3.core.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.ambArray:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a8818.  v0:= "sources is null" @kind object;
  #L4a881c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8822.  v0:= length @variable v2;
  #L4a8824.  if v0 != 0 then goto L4a883a;
  #L4a8828.  call temp:= `emptyThrower`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.emptyThrower:()Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a882e.  v2:= temp @kind object;
  #L4a8830.  call temp:= `error`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8836.  v2:= temp @kind object;
  #L4a8838.  return v2 @kind object;
  #L4a883a.  v0:= length @variable v2;
  #L4a883c.  v1:= 1I;
  #L4a883e.  if v0 != v1 then goto L4a8852;
  #L4a8842.  v0:= 0I;
  #L4a8844.  v2:= v2[v0] @kind object;
  #L4a8848.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.wrap:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a884e.  v2:= temp @kind object;
  #L4a8850.  return v2 @kind object;
  #L4a8852.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleAmb`;
  #L4a8856.  v1:= 0I;
  #L4a8858.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleAmb;.<init>:([Lio/reactivex/rxjava3/core/SingleSource;Ljava/lang/Iterable;)V` @kind direct;
  #L4a885e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8864.  v2:= temp @kind object;
  #L4a8866.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `b`(`io.reactivex.rxjava3.core.Flowable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4a977c.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableSingleSingle`;
  #L4a9780.  v1:= 0I;
  #L4a9782.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSingleSingle;.<init>:(Lio/reactivex/rxjava3/core/Flowable;Ljava/lang/Object;)V` @kind direct;
  #L4a9788.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a978e.  v2:= temp @kind object;
  #L4a9790.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7a24.  v0:= "source1 is null" @kind object;
  #L4a7a28.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7a2e.  v0:= "source2 is null" @kind object;
  #L4a7a32.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7a38.  v0:= 2I;
  #L4a7a3a.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a7a3e.  v1:= 0I;
  #L4a7a40.  v0[v1]:= v2 @kind object;
  #L4a7a44.  v2:= 1I;
  #L4a7a46.  v0[v2]:= v3 @kind object;
  #L4a7a4a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7a50.  v2:= temp @kind object;
  #L4a7a52.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7a58.  v3:= temp @kind object;
  #L4a7a5a.  call temp:= `concatMapSingleDelayError`(v2, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7a60.  v2:= temp @kind object;
  #L4a7a62.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7a74.  v0:= "source1 is null" @kind object;
  #L4a7a78.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7a7e.  v0:= "source2 is null" @kind object;
  #L4a7a82.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7a88.  v0:= "source3 is null" @kind object;
  #L4a7a8c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7a92.  v0:= 3I;
  #L4a7a94.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a7a98.  v1:= 0I;
  #L4a7a9a.  v0[v1]:= v2 @kind object;
  #L4a7a9e.  v2:= 1I;
  #L4a7aa0.  v0[v2]:= v3 @kind object;
  #L4a7aa4.  v2:= 2I;
  #L4a7aa6.  v0[v2]:= v4 @kind object;
  #L4a7aaa.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7ab0.  v2:= temp @kind object;
  #L4a7ab2.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7ab8.  v3:= temp @kind object;
  #L4a7aba.  call temp:= `concatMapSingleDelayError`(v2, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7ac0.  v2:= temp @kind object;
  #L4a7ac2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7ad4.  v0:= "source1 is null" @kind object;
  #L4a7ad8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7ade.  v0:= "source2 is null" @kind object;
  #L4a7ae2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7ae8.  v0:= "source3 is null" @kind object;
  #L4a7aec.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7af2.  v0:= "source4 is null" @kind object;
  #L4a7af6.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7afc.  v0:= 4I;
  #L4a7afe.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a7b02.  v1:= 0I;
  #L4a7b04.  v0[v1]:= v2 @kind object;
  #L4a7b08.  v2:= 1I;
  #L4a7b0a.  v0[v2]:= v3 @kind object;
  #L4a7b0e.  v2:= 2I;
  #L4a7b10.  v0[v2]:= v4 @kind object;
  #L4a7b14.  v2:= 3I;
  #L4a7b16.  v0[v2]:= v5 @kind object;
  #L4a7b1a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7b20.  v2:= temp @kind object;
  #L4a7b22.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7b28.  v3:= temp @kind object;
  #L4a7b2a.  call temp:= `concatMapSingleDelayError`(v2, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7b30.  v2:= temp @kind object;
  #L4a7b32.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7b44.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7b4a.  v2:= temp @kind object;
  #L4a7b4c.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7b52.  v0:= temp @kind object;
  #L4a7b54.  v1:= 0I;
  #L4a7b56.  call temp:= `concatMapSingleDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7b5c.  v2:= temp @kind object;
  #L4a7b5e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a7b70.  v0:= 2I;
  #L4a7b72.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7b78.  v1:= temp @kind object;
  #L4a7b7a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concat`(`org.reactivestreams.Publisher` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a7b8c.  v0:= "sources is null" @kind object;
  #L4a7b90.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7b96.  v0:= "prefetch" @kind object;
  #L4a7b9a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4a7ba0.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapSinglePublisher`;
  #L4a7ba4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7baa.  v1:= temp @kind object;
  #L4a7bac.  v2:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a7bb0.  call `<init>`(v0, v3, v1, v2, v4) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapSinglePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4a7bb6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7bbc.  v3:= temp @kind object;
  #L4a7bbe.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `concat`(`io.reactivex.rxjava3.core.ObservableSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a86ac.  v0:= "sources is null" @kind object;
  #L4a86b0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a86b6.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.ObservableConcatMapSingle`;
  #L4a86ba.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a86c0.  v1:= temp @kind object;
  #L4a86c2.  v2:= `@@io.reactivex.rxjava3.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.rxjava3.internal.util.ErrorMode` @kind object;
  #L4a86c6.  v3:= 2I;
  #L4a86c8.  call `<init>`(v0, v4, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/ObservableConcatMapSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/internal/util/ErrorMode;I)V` @kind direct;
  #L4a86ce.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a86d4.  v4:= temp @kind object;
  #L4a86d6.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArray`(`io.reactivex.rxjava3.core.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatArray:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7bd0.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7bd6.  v2:= temp @kind object;
  #L4a7bd8.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7bde.  v0:= temp @kind object;
  #L4a7be0.  v1:= 0I;
  #L4a7be2.  call temp:= `concatMapSingleDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7be8.  v2:= temp @kind object;
  #L4a7bea.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayDelayError`(`io.reactivex.rxjava3.core.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatArrayDelayError:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7bfc.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7c02.  v2:= temp @kind object;
  #L4a7c04.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7c0a.  v0:= temp @kind object;
  #L4a7c0c.  v1:= 1I;
  #L4a7c0e.  call temp:= `concatMapSingleDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7c14.  v2:= temp @kind object;
  #L4a7c16.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayEager`(`io.reactivex.rxjava3.core.SingleSource`[] v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatArrayEager:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a7c28.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7c2e.  v1:= temp @kind object;
  #L4a7c30.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7c36.  v0:= temp @kind object;
  #L4a7c38.  call temp:= `concatMapEager`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7c3e.  v1:= temp @kind object;
  #L4a7c40.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatArrayEagerDelayError`(`io.reactivex.rxjava3.core.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatArrayEagerDelayError:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7c54.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7c5a.  v2:= temp @kind object;
  #L4a7c5c.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7c62.  v0:= temp @kind object;
  #L4a7c64.  v1:= 1I;
  #L4a7c66.  call temp:= `concatMapEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7c6c.  v2:= temp @kind object;
  #L4a7c6e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a7c80.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7c86.  v1:= temp @kind object;
  #L4a7c88.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7c8e.  v0:= temp @kind object;
  #L4a7c90.  call temp:= `concatMapSingleDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7c96.  v1:= temp @kind object;
  #L4a7c98.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a7cac.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7cb2.  v1:= temp @kind object;
  #L4a7cb4.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7cba.  v0:= temp @kind object;
  #L4a7cbc.  call temp:= `concatMapSingleDelayError`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7cc2.  v1:= temp @kind object;
  #L4a7cc4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatDelayError`(`org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Single;.concatDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7cd8.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7cde.  v2:= temp @kind object;
  #L4a7ce0.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7ce6.  v0:= temp @kind object;
  #L4a7ce8.  v1:= 1I;
  #L4a7cea.  call temp:= `concatMapSingleDelayError`(v2, v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapSingleDelayError:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7cf0.  v2:= temp @kind object;
  #L4a7cf2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatEager:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7d04.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7d0a.  v2:= temp @kind object;
  #L4a7d0c.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7d12.  v0:= temp @kind object;
  #L4a7d14.  v1:= 0I;
  #L4a7d16.  call temp:= `concatMapEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7d1c.  v2:= temp @kind object;
  #L4a7d1e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`java.lang.Iterable` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/rxjava3/core/Single;.concatEager:(Ljava/lang/Iterable;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a7d30.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7d36.  v3:= temp @kind object;
  #L4a7d38.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7d3e.  v0:= temp @kind object;
  #L4a7d40.  v1:= 0I;
  #L4a7d42.  v2:= 1I;
  #L4a7d44.  call temp:= `concatMapEagerDelayError`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7d4a.  v3:= temp @kind object;
  #L4a7d4c.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatEager:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a7d60.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7d66.  v1:= temp @kind object;
  #L4a7d68.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7d6e.  v0:= temp @kind object;
  #L4a7d70.  call temp:= `concatMapEager`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7d76.  v1:= temp @kind object;
  #L4a7d78.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEager`(`org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Single;.concatEager:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7d8c.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7d92.  v2:= temp @kind object;
  #L4a7d94.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7d9a.  v0:= temp @kind object;
  #L4a7d9c.  v1:= 1I;
  #L4a7d9e.  call temp:= `concatMapEager`(v2, v0, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEager:(Lio/reactivex/rxjava3/functions/Function;II)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7da4.  v2:= temp @kind object;
  #L4a7da6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatEagerDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7db8.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7dbe.  v2:= temp @kind object;
  #L4a7dc0.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7dc6.  v0:= temp @kind object;
  #L4a7dc8.  v1:= 1I;
  #L4a7dca.  call temp:= `concatMapEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7dd0.  v2:= temp @kind object;
  #L4a7dd2.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Single;.concatEagerDelayError:(Ljava/lang/Iterable;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7de4.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7dea.  v2:= temp @kind object;
  #L4a7dec.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7df2.  v0:= temp @kind object;
  #L4a7df4.  v1:= 1I;
  #L4a7df6.  call temp:= `concatMapEagerDelayError`(v2, v0, v1, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7dfc.  v2:= temp @kind object;
  #L4a7dfe.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatEagerDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7e10.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7e16.  v2:= temp @kind object;
  #L4a7e18.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7e1e.  v0:= temp @kind object;
  #L4a7e20.  v1:= 1I;
  #L4a7e22.  call temp:= `concatMapEagerDelayError`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;Z)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7e28.  v2:= temp @kind object;
  #L4a7e2a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatEagerDelayError`(`org.reactivestreams.Publisher` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/core/Single;.concatEagerDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7e3c.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7e42.  v2:= temp @kind object;
  #L4a7e44.  call temp:= `toFlowable`() @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7e4a.  v0:= temp @kind object;
  #L4a7e4c.  v1:= 1I;
  #L4a7e4e.  call temp:= `concatMapEagerDelayError`(v2, v0, v1, v3, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.concatMapEagerDelayError:(Lio/reactivex/rxjava3/functions/Function;ZII)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7e54.  v2:= temp @kind object;
  #L4a7e56.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `create`(`io.reactivex.rxjava3.core.SingleOnSubscribe` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.create:(Lio/reactivex/rxjava3/core/SingleOnSubscribe;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a89c0.  v0:= "source is null" @kind object;
  #L4a89c4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a89ca.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleCreate`;
  #L4a89ce.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCreate;.<init>:(Lio/reactivex/rxjava3/core/SingleOnSubscribe;)V` @kind direct;
  #L4a89d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a89da.  v1:= temp @kind object;
  #L4a89dc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `defer`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.defer:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a89f0.  v0:= "supplier is null" @kind object;
  #L4a89f4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a89fa.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDefer`;
  #L4a89fe.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDefer;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a8a04.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8a0a.  v1:= temp @kind object;
  #L4a8a0c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `error`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a8dd0.  v0:= "supplier is null" @kind object;
  #L4a8dd4.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8dda.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleError`;
  #L4a8dde.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleError;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a8de4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8dea.  v1:= temp @kind object;
  #L4a8dec.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.error:(Ljava/lang/Throwable;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a8e00.  v0:= "throwable is null" @kind object;
  #L4a8e04.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8e0a.  call temp:= `justSupplier`(v1) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justSupplier:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Supplier;` @kind static;
  #L4a8e10.  v1:= temp @kind object;
  #L4a8e12.  call temp:= `error`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.error:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8e18.  v1:= temp @kind object;
  #L4a8e1a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a8ecc.  v0:= "callable is null" @kind object;
  #L4a8ed0.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8ed6.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFromCallable`;
  #L4a8eda.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L4a8ee0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8ee6.  v1:= temp @kind object;
  #L4a8ee8.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromCompletionStage`(`java.util.concurrent.CompletionStage` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromCompletionStage:(Ljava/util/concurrent/CompletionStage;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a8efc.  v0:= "stage is null" @kind object;
  #L4a8f00.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8f06.  v0:= new `io.reactivex.rxjava3.internal.jdk8.SingleFromCompletionStage`;
  #L4a8f0a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/jdk8/SingleFromCompletionStage;.<init>:(Ljava/util/concurrent/CompletionStage;)V` @kind direct;
  #L4a8f10.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8f16.  v1:= temp @kind object;
  #L4a8f18.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4a8f2c.  call temp:= `fromFuture`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a8f32.  v0:= temp @kind object;
  #L4a8f34.  call temp:= `b`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8f3a.  v0:= temp @kind object;
  #L4a8f3c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4a8f50.  call temp:= `fromFuture`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a8f56.  v0:= temp @kind object;
  #L4a8f58.  call temp:= `b`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8f5e.  v0:= temp @kind object;
  #L4a8f60.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromMaybe`(`io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromMaybe:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a8f74.  v0:= "maybe is null" @kind object;
  #L4a8f78.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8f7e.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToSingle`;
  #L4a8f82.  v1:= 0I;
  #L4a8f84.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToSingle;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Ljava/lang/Object;)V` @kind direct;
  #L4a8f8a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8f90.  v2:= temp @kind object;
  #L4a8f92.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromMaybe`(`io.reactivex.rxjava3.core.MaybeSource` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromMaybe:(Lio/reactivex/rxjava3/core/MaybeSource;Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a8fa4.  v0:= "maybe is null" @kind object;
  #L4a8fa8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8fae.  v0:= "defaultItem is null" @kind object;
  #L4a8fb2.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8fb8.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeToSingle`;
  #L4a8fbc.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeToSingle;.<init>:(Lio/reactivex/rxjava3/core/MaybeSource;Ljava/lang/Object;)V` @kind direct;
  #L4a8fc2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8fc8.  v1:= temp @kind object;
  #L4a8fca.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromObservable`(`io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromObservable:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a8fdc.  v0:= "observable is null" @kind object;
  #L4a8fe0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8fe6.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.ObservableSingleSingle`;
  #L4a8fea.  v1:= 0I;
  #L4a8fec.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/rxjava3/core/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L4a8ff2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8ff8.  v2:= temp @kind object;
  #L4a8ffa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a900c.  v0:= "publisher is null" @kind object;
  #L4a9010.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9016.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFromPublisher`;
  #L4a901a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L4a9020.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9026.  v1:= temp @kind object;
  #L4a9028.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `fromSupplier`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.fromSupplier:(Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a903c.  v0:= "supplier is null" @kind object;
  #L4a9040.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9046.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFromSupplier`;
  #L4a904a.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromSupplier;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;)V` @kind direct;
  #L4a9050.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9056.  v1:= temp @kind object;
  #L4a9058.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `just`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.just:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a9090.  v0:= "item is null" @kind object;
  #L4a9094.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a909a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleJust`;
  #L4a909e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleJust;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4a90a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a90aa.  v1:= temp @kind object;
  #L4a90ac.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.merge:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7f14.  v0:= "source1 is null" @kind object;
  #L4a7f18.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7f1e.  v0:= "source2 is null" @kind object;
  #L4a7f22.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7f28.  v0:= 2I;
  #L4a7f2a.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a7f2e.  v1:= 0I;
  #L4a7f30.  v0[v1]:= v2 @kind object;
  #L4a7f34.  v2:= 1I;
  #L4a7f36.  v0[v2]:= v3 @kind object;
  #L4a7f3a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7f40.  v2:= temp @kind object;
  #L4a7f42.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7f48.  v3:= temp @kind object;
  #L4a7f4a.  v0:= 2147483647I;
  #L4a7f50.  call temp:= `flatMapSingle`(v2, v3, v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7f56.  v2:= temp @kind object;
  #L4a7f58.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.merge:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7f6c.  v0:= "source1 is null" @kind object;
  #L4a7f70.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7f76.  v0:= "source2 is null" @kind object;
  #L4a7f7a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7f80.  v0:= "source3 is null" @kind object;
  #L4a7f84.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7f8a.  v0:= 3I;
  #L4a7f8c.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a7f90.  v1:= 0I;
  #L4a7f92.  v0[v1]:= v2 @kind object;
  #L4a7f96.  v2:= 1I;
  #L4a7f98.  v0[v2]:= v3 @kind object;
  #L4a7f9c.  v2:= 2I;
  #L4a7f9e.  v0[v2]:= v4 @kind object;
  #L4a7fa2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7fa8.  v2:= temp @kind object;
  #L4a7faa.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a7fb0.  v3:= temp @kind object;
  #L4a7fb2.  v4:= 2147483647I;
  #L4a7fb8.  call temp:= `flatMapSingle`(v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a7fbe.  v2:= temp @kind object;
  #L4a7fc0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.merge:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a7fd4.  v0:= "source1 is null" @kind object;
  #L4a7fd8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7fde.  v0:= "source2 is null" @kind object;
  #L4a7fe2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7fe8.  v0:= "source3 is null" @kind object;
  #L4a7fec.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7ff2.  v0:= "source4 is null" @kind object;
  #L4a7ff6.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7ffc.  v0:= 4I;
  #L4a7ffe.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a8002.  v1:= 0I;
  #L4a8004.  v0[v1]:= v2 @kind object;
  #L4a8008.  v2:= 1I;
  #L4a800a.  v0[v2]:= v3 @kind object;
  #L4a800e.  v2:= 2I;
  #L4a8010.  v0[v2]:= v4 @kind object;
  #L4a8014.  v2:= 3I;
  #L4a8016.  v0[v2]:= v5 @kind object;
  #L4a801a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a8020.  v2:= temp @kind object;
  #L4a8022.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a8028.  v3:= temp @kind object;
  #L4a802a.  v4:= 2147483647I;
  #L4a8030.  call temp:= `flatMapSingle`(v2, v3, v1, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a8036.  v2:= temp @kind object;
  #L4a8038.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.merge:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a804c.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a8052.  v1:= temp @kind object;
  #L4a8054.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a805a.  v0:= temp @kind object;
  #L4a805c.  call temp:= `flatMapSingle`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a8062.  v1:= temp @kind object;
  #L4a8064.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `merge`(`org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a8078.  v0:= "sources is null" @kind object;
  #L4a807c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8082.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapSinglePublisher`;
  #L4a8086.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a808c.  v1:= temp @kind object;
  #L4a808e.  v2:= 0I;
  #L4a8090.  v3:= 2147483647I;
  #L4a8096.  call `<init>`(v0, v4, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapSinglePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L4a809c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a80a2.  v4:= temp @kind object;
  #L4a80a4.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `merge`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.merge:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a9144.  v0:= "source is null" @kind object;
  #L4a9148.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a914e.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMap`;
  #L4a9152.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a9158.  v1:= temp @kind object;
  #L4a915a.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a9160.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9166.  v2:= temp @kind object;
  #L4a9168.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeArray`(`io.reactivex.rxjava3.core.SingleSource`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeArray:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a80b8.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a80be.  v0:= temp @kind object;
  #L4a80c0.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a80c6.  v1:= temp @kind object;
  #L4a80c8.  v3:= length @variable v3;
  #L4a80ca.  v2:= 1I;
  #L4a80cc.  call temp:= `max`(v2, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4a80d2.  v3:= temp;
  #L4a80d4.  v2:= 0I;
  #L4a80d6.  call temp:= `flatMapSingle`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a80dc.  v3:= temp @kind object;
  #L4a80de.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeArrayDelayError`(`io.reactivex.rxjava3.core.SingleSource`[] v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeArrayDelayError:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a80f0.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a80f6.  v0:= temp @kind object;
  #L4a80f8.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a80fe.  v1:= temp @kind object;
  #L4a8100.  v3:= length @variable v3;
  #L4a8102.  v2:= 1I;
  #L4a8104.  call temp:= `max`(v2, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4a810a.  v3:= temp;
  #L4a810c.  call temp:= `flatMapSingle`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a8112.  v3:= temp @kind object;
  #L4a8114.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeDelayError:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a8128.  v0:= "source1 is null" @kind object;
  #L4a812c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8132.  v0:= "source2 is null" @kind object;
  #L4a8136.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a813c.  v0:= 2I;
  #L4a813e.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a8142.  v1:= 0I;
  #L4a8144.  v0[v1]:= v2 @kind object;
  #L4a8148.  v2:= 1I;
  #L4a814a.  v0[v2]:= v3 @kind object;
  #L4a814e.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a8154.  v3:= temp @kind object;
  #L4a8156.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a815c.  v0:= temp @kind object;
  #L4a815e.  v1:= 2147483647I;
  #L4a8164.  call temp:= `flatMapSingle`(v3, v0, v2, v1) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a816a.  v2:= temp @kind object;
  #L4a816c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeDelayError:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a8180.  v0:= "source1 is null" @kind object;
  #L4a8184.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a818a.  v0:= "source2 is null" @kind object;
  #L4a818e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8194.  v0:= "source3 is null" @kind object;
  #L4a8198.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a819e.  v0:= 3I;
  #L4a81a0.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a81a4.  v1:= 0I;
  #L4a81a6.  v0[v1]:= v2 @kind object;
  #L4a81aa.  v2:= 1I;
  #L4a81ac.  v0[v2]:= v3 @kind object;
  #L4a81b0.  v3:= 2I;
  #L4a81b2.  v0[v3]:= v4 @kind object;
  #L4a81b6.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a81bc.  v3:= temp @kind object;
  #L4a81be.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a81c4.  v4:= temp @kind object;
  #L4a81c6.  v0:= 2147483647I;
  #L4a81cc.  call temp:= `flatMapSingle`(v3, v4, v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a81d2.  v2:= temp @kind object;
  #L4a81d4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeDelayError:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a81e8.  v0:= "source1 is null" @kind object;
  #L4a81ec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a81f2.  v0:= "source2 is null" @kind object;
  #L4a81f6.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a81fc.  v0:= "source3 is null" @kind object;
  #L4a8200.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8206.  v0:= "source4 is null" @kind object;
  #L4a820a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8210.  v0:= 4I;
  #L4a8212.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a8216.  v1:= 0I;
  #L4a8218.  v0[v1]:= v2 @kind object;
  #L4a821c.  v2:= 1I;
  #L4a821e.  v0[v2]:= v3 @kind object;
  #L4a8222.  v3:= 2I;
  #L4a8224.  v0[v3]:= v4 @kind object;
  #L4a8228.  v3:= 3I;
  #L4a822a.  v0[v3]:= v5 @kind object;
  #L4a822e.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a8234.  v3:= temp @kind object;
  #L4a8236.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a823c.  v4:= temp @kind object;
  #L4a823e.  v5:= 2147483647I;
  #L4a8244.  call temp:= `flatMapSingle`(v3, v4, v2, v5) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a824a.  v2:= temp @kind object;
  #L4a824c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a8260.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/rxjava3/core/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a8266.  v3:= temp @kind object;
  #L4a8268.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a826e.  v0:= temp @kind object;
  #L4a8270.  v1:= 1I;
  #L4a8272.  v2:= 2147483647I;
  #L4a8278.  call temp:= `flatMapSingle`(v3, v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.flatMapSingle:(Lio/reactivex/rxjava3/functions/Function;ZI)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a827e.  v3:= temp @kind object;
  #L4a8280.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a8294.  v0:= "sources is null" @kind object;
  #L4a8298.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a829e.  v0:= new `io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapSinglePublisher`;
  #L4a82a2.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a82a8.  v1:= temp @kind object;
  #L4a82aa.  v2:= 1I;
  #L4a82ac.  v3:= 2147483647I;
  #L4a82b2.  call `<init>`(v0, v4, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapSinglePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;ZI)V` @kind direct;
  #L4a82b8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a82be.  v4:= temp @kind object;
  #L4a82c0.  return v4 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `never`() @signature `Lio/reactivex/rxjava3/core/Single;.never:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a917c.  v0:= `@@io.reactivex.rxjava3.internal.operators.single.SingleNever.INSTANCE` @type ^`io.reactivex.rxjava3.core.Single` @kind object;
  #L4a9180.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9186.  v0:= temp @kind object;
  #L4a9188.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `sequenceEqual`(`io.reactivex.rxjava3.core.SingleSource` v1 @kind object, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.sequenceEqual:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a93ec.  v0:= "source1 is null" @kind object;
  #L4a93f0.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a93f6.  v0:= "source2 is null" @kind object;
  #L4a93fa.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9400.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleEquals`;
  #L4a9404.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleEquals;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a940a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9410.  v1:= temp @kind object;
  #L4a9412.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchOnNext`(`org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.switchOnNext:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a8460.  v0:= "sources is null" @kind object;
  #L4a8464.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a846a.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapSinglePublisher`;
  #L4a846e.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a8474.  v1:= temp @kind object;
  #L4a8476.  v2:= 0I;
  #L4a8478.  call `<init>`(v0, v3, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapSinglePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4a847e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a8484.  v3:= temp @kind object;
  #L4a8486.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `switchOnNextDelayError`(`org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.switchOnNextDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a8498.  v0:= "sources is null" @kind object;
  #L4a849c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a84a2.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapSinglePublisher`;
  #L4a84a6.  call temp:= `identity`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.identity:()Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a84ac.  v1:= temp @kind object;
  #L4a84ae.  v2:= 1I;
  #L4a84b0.  call `<init>`(v0, v3, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapSinglePublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/functions/Function;Z)V` @kind direct;
  #L4a84b6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a84bc.  v3:= temp @kind object;
  #L4a84be.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a9678.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a967e.  v0:= temp @kind object;
  #L4a9680.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/rxjava3/core/Single;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9686.  v1:= temp @kind object;
  #L4a9688.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a969c.  v0:= "unit is null" @kind object;
  #L4a96a0.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a96a6.  v0:= "scheduler is null" @kind object;
  #L4a96aa.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a96b0.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleTimer`;
  #L4a96b4.  call `<init>`(v0, v1, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a96ba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a96c0.  v1:= temp @kind object;
  #L4a96c2.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `unsafeCreate`(`io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.unsafeCreate:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a97a4.  v0:= "onSubscribe is null" @kind object;
  #L4a97a8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a97ae.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Single` @kind boolean;
  #L4a97b2.  if v0 != 0 then goto L4a97ca;
  #L4a97b6.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFromUnsafeSource`;
  #L4a97ba.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromUnsafeSource;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a97c0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a97c6.  v1:= temp @kind object;
  #L4a97c8.  return v1 @kind object;
  #L4a97ca.  v1:= new `java.lang.IllegalArgumentException`;
  #L4a97ce.  v0:= "unsafeCreate(Single) should be upgraded" @kind object;
  #L4a97d2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a97d8.  throw v1;
}
procedure `io.reactivex.rxjava3.core.Single` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a981c.  v0:= 1I;
  #L4a981e.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/core/Single;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9824.  v1:= temp @kind object;
  #L4a9826.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `using`(`io.reactivex.rxjava3.functions.Supplier` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/rxjava3/core/Single;.using:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a9838.  v0:= "resourceSupplier is null" @kind object;
  #L4a983c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9842.  v0:= "sourceSupplier is null" @kind object;
  #L4a9846.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a984c.  v0:= "resourceCleanup is null" @kind object;
  #L4a9850.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9856.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleUsing`;
  #L4a985a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUsing;.<init>:(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Consumer;Z)V` @kind direct;
  #L4a9860.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9866.  v1:= temp @kind object;
  #L4a9868.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `wrap`(`io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.wrap:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a987c.  v0:= "source is null" @kind object;
  #L4a9880.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9886.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.core.Single` @kind boolean;
  #L4a988a.  if v0 == 0 then goto L4a989c;
  #L4a988e.  v1:= (`io.reactivex.rxjava3.core.Single`) v1 @kind object;
  #L4a9892.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9898.  v1:= temp @kind object;
  #L4a989a.  return v1 @kind object;
  #L4a989c.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFromUnsafeSource`;
  #L4a98a0.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFromUnsafeSource;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a98a6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a98ac.  v1:= temp @kind object;
  #L4a98ae.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object, `io.reactivex.rxjava3.core.SingleSource` v6 @kind object, `io.reactivex.rxjava3.core.SingleSource` v7 @kind object, `io.reactivex.rxjava3.core.SingleSource` v8 @kind object, `io.reactivex.rxjava3.core.SingleSource` v9 @kind object, `io.reactivex.rxjava3.core.SingleSource` v10 @kind object, `io.reactivex.rxjava3.functions.Function9` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a98c0.  v0:= "source1 is null" @kind object;
  #L4a98c4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a98ca.  v0:= "source2 is null" @kind object;
  #L4a98ce.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a98d4.  v0:= "source3 is null" @kind object;
  #L4a98d8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a98de.  v0:= "source4 is null" @kind object;
  #L4a98e2.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a98e8.  v0:= "source5 is null" @kind object;
  #L4a98ec.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a98f2.  v0:= "source6 is null" @kind object;
  #L4a98f6.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a98fc.  v0:= "source7 is null" @kind object;
  #L4a9900.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9906.  v0:= "source8 is null" @kind object;
  #L4a990a.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9910.  v0:= "source9 is null" @kind object;
  #L4a9914.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a991a.  v0:= "zipper is null" @kind object;
  #L4a991e.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9924.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function9;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a992a.  v11:= temp @kind object;
  #L4a992c.  v0:= 9I;
  #L4a9930.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a9934.  v1:= 0I;
  #L4a9936.  v0[v1]:= v2 @kind object;
  #L4a993a.  v2:= 1I;
  #L4a993c.  v0[v2]:= v3 @kind object;
  #L4a9940.  v2:= 2I;
  #L4a9942.  v0[v2]:= v4 @kind object;
  #L4a9946.  v2:= 3I;
  #L4a9948.  v0[v2]:= v5 @kind object;
  #L4a994c.  v2:= 4I;
  #L4a994e.  v0[v2]:= v6 @kind object;
  #L4a9952.  v2:= 5I;
  #L4a9954.  v0[v2]:= v7 @kind object;
  #L4a9958.  v2:= 6I;
  #L4a995a.  v0[v2]:= v8 @kind object;
  #L4a995e.  v2:= 7I;
  #L4a9960.  v0[v2]:= v9 @kind object;
  #L4a9964.  v2:= 8I;
  #L4a9968.  v0[v2]:= v10 @kind object;
  #L4a996c.  call temp:= `zipArray`(v11, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9972.  v2:= temp @kind object;
  #L4a9974.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object, `io.reactivex.rxjava3.core.SingleSource` v6 @kind object, `io.reactivex.rxjava3.core.SingleSource` v7 @kind object, `io.reactivex.rxjava3.core.SingleSource` v8 @kind object, `io.reactivex.rxjava3.core.SingleSource` v9 @kind object, `io.reactivex.rxjava3.functions.Function8` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a9988.  v0:= "source1 is null" @kind object;
  #L4a998c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9992.  v0:= "source2 is null" @kind object;
  #L4a9996.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a999c.  v0:= "source3 is null" @kind object;
  #L4a99a0.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a99a6.  v0:= "source4 is null" @kind object;
  #L4a99aa.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a99b0.  v0:= "source5 is null" @kind object;
  #L4a99b4.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a99ba.  v0:= "source6 is null" @kind object;
  #L4a99be.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a99c4.  v0:= "source7 is null" @kind object;
  #L4a99c8.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a99ce.  v0:= "source8 is null" @kind object;
  #L4a99d2.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a99d8.  v0:= "zipper is null" @kind object;
  #L4a99dc.  call temp:= `requireNonNull`(v10, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a99e2.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function8;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a99e8.  v10:= temp @kind object;
  #L4a99ea.  v0:= 8I;
  #L4a99ee.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a99f2.  v1:= 0I;
  #L4a99f4.  v0[v1]:= v2 @kind object;
  #L4a99f8.  v2:= 1I;
  #L4a99fa.  v0[v2]:= v3 @kind object;
  #L4a99fe.  v2:= 2I;
  #L4a9a00.  v0[v2]:= v4 @kind object;
  #L4a9a04.  v2:= 3I;
  #L4a9a06.  v0[v2]:= v5 @kind object;
  #L4a9a0a.  v2:= 4I;
  #L4a9a0c.  v0[v2]:= v6 @kind object;
  #L4a9a10.  v2:= 5I;
  #L4a9a12.  v0[v2]:= v7 @kind object;
  #L4a9a16.  v2:= 6I;
  #L4a9a18.  v0[v2]:= v8 @kind object;
  #L4a9a1c.  v2:= 7I;
  #L4a9a1e.  v0[v2]:= v9 @kind object;
  #L4a9a22.  call temp:= `zipArray`(v10, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9a28.  v2:= temp @kind object;
  #L4a9a2a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object, `io.reactivex.rxjava3.core.SingleSource` v6 @kind object, `io.reactivex.rxjava3.core.SingleSource` v7 @kind object, `io.reactivex.rxjava3.core.SingleSource` v8 @kind object, `io.reactivex.rxjava3.functions.Function7` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a9a3c.  v0:= "source1 is null" @kind object;
  #L4a9a40.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9a46.  v0:= "source2 is null" @kind object;
  #L4a9a4a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9a50.  v0:= "source3 is null" @kind object;
  #L4a9a54.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9a5a.  v0:= "source4 is null" @kind object;
  #L4a9a5e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9a64.  v0:= "source5 is null" @kind object;
  #L4a9a68.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9a6e.  v0:= "source6 is null" @kind object;
  #L4a9a72.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9a78.  v0:= "source7 is null" @kind object;
  #L4a9a7c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9a82.  v0:= "zipper is null" @kind object;
  #L4a9a86.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9a8c.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function7;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a9a92.  v9:= temp @kind object;
  #L4a9a94.  v0:= 7I;
  #L4a9a96.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a9a9a.  v1:= 0I;
  #L4a9a9c.  v0[v1]:= v2 @kind object;
  #L4a9aa0.  v2:= 1I;
  #L4a9aa2.  v0[v2]:= v3 @kind object;
  #L4a9aa6.  v2:= 2I;
  #L4a9aa8.  v0[v2]:= v4 @kind object;
  #L4a9aac.  v2:= 3I;
  #L4a9aae.  v0[v2]:= v5 @kind object;
  #L4a9ab2.  v2:= 4I;
  #L4a9ab4.  v0[v2]:= v6 @kind object;
  #L4a9ab8.  v2:= 5I;
  #L4a9aba.  v0[v2]:= v7 @kind object;
  #L4a9abe.  v2:= 6I;
  #L4a9ac0.  v0[v2]:= v8 @kind object;
  #L4a9ac4.  call temp:= `zipArray`(v9, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9aca.  v2:= temp @kind object;
  #L4a9acc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object, `io.reactivex.rxjava3.core.SingleSource` v6 @kind object, `io.reactivex.rxjava3.core.SingleSource` v7 @kind object, `io.reactivex.rxjava3.functions.Function6` v8 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a9ae0.  v0:= "source1 is null" @kind object;
  #L4a9ae4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9aea.  v0:= "source2 is null" @kind object;
  #L4a9aee.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9af4.  v0:= "source3 is null" @kind object;
  #L4a9af8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9afe.  v0:= "source4 is null" @kind object;
  #L4a9b02.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9b08.  v0:= "source5 is null" @kind object;
  #L4a9b0c.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9b12.  v0:= "source6 is null" @kind object;
  #L4a9b16.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9b1c.  v0:= "zipper is null" @kind object;
  #L4a9b20.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9b26.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function6;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a9b2c.  v8:= temp @kind object;
  #L4a9b2e.  v0:= 6I;
  #L4a9b30.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a9b34.  v1:= 0I;
  #L4a9b36.  v0[v1]:= v2 @kind object;
  #L4a9b3a.  v2:= 1I;
  #L4a9b3c.  v0[v2]:= v3 @kind object;
  #L4a9b40.  v2:= 2I;
  #L4a9b42.  v0[v2]:= v4 @kind object;
  #L4a9b46.  v2:= 3I;
  #L4a9b48.  v0[v2]:= v5 @kind object;
  #L4a9b4c.  v2:= 4I;
  #L4a9b4e.  v0[v2]:= v6 @kind object;
  #L4a9b52.  v2:= 5I;
  #L4a9b54.  v0[v2]:= v7 @kind object;
  #L4a9b58.  call temp:= `zipArray`(v8, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9b5e.  v2:= temp @kind object;
  #L4a9b60.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object, `io.reactivex.rxjava3.core.SingleSource` v6 @kind object, `io.reactivex.rxjava3.functions.Function5` v7 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a9b74.  v0:= "source1 is null" @kind object;
  #L4a9b78.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9b7e.  v0:= "source2 is null" @kind object;
  #L4a9b82.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9b88.  v0:= "source3 is null" @kind object;
  #L4a9b8c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9b92.  v0:= "source4 is null" @kind object;
  #L4a9b96.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9b9c.  v0:= "source5 is null" @kind object;
  #L4a9ba0.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9ba6.  v0:= "zipper is null" @kind object;
  #L4a9baa.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9bb0.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function5;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a9bb6.  v7:= temp @kind object;
  #L4a9bb8.  v0:= 5I;
  #L4a9bba.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a9bbe.  v1:= 0I;
  #L4a9bc0.  v0[v1]:= v2 @kind object;
  #L4a9bc4.  v2:= 1I;
  #L4a9bc6.  v0[v2]:= v3 @kind object;
  #L4a9bca.  v2:= 2I;
  #L4a9bcc.  v0[v2]:= v4 @kind object;
  #L4a9bd0.  v2:= 3I;
  #L4a9bd2.  v0[v2]:= v5 @kind object;
  #L4a9bd6.  v2:= 4I;
  #L4a9bd8.  v0[v2]:= v6 @kind object;
  #L4a9bdc.  call temp:= `zipArray`(v7, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9be2.  v2:= temp @kind object;
  #L4a9be4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.core.SingleSource` v5 @kind object, `io.reactivex.rxjava3.functions.Function4` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a9bf8.  v0:= "source1 is null" @kind object;
  #L4a9bfc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9c02.  v0:= "source2 is null" @kind object;
  #L4a9c06.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9c0c.  v0:= "source3 is null" @kind object;
  #L4a9c10.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9c16.  v0:= "source4 is null" @kind object;
  #L4a9c1a.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9c20.  v0:= "zipper is null" @kind object;
  #L4a9c24.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9c2a.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function4;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a9c30.  v6:= temp @kind object;
  #L4a9c32.  v0:= 4I;
  #L4a9c34.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a9c38.  v1:= 0I;
  #L4a9c3a.  v0[v1]:= v2 @kind object;
  #L4a9c3e.  v2:= 1I;
  #L4a9c40.  v0[v2]:= v3 @kind object;
  #L4a9c44.  v2:= 2I;
  #L4a9c46.  v0[v2]:= v4 @kind object;
  #L4a9c4a.  v2:= 3I;
  #L4a9c4c.  v0[v2]:= v5 @kind object;
  #L4a9c50.  call temp:= `zipArray`(v6, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9c56.  v2:= temp @kind object;
  #L4a9c58.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.core.SingleSource` v4 @kind object, `io.reactivex.rxjava3.functions.Function3` v5 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a9c6c.  v0:= "source1 is null" @kind object;
  #L4a9c70.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9c76.  v0:= "source2 is null" @kind object;
  #L4a9c7a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9c80.  v0:= "source3 is null" @kind object;
  #L4a9c84.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9c8a.  v0:= "zipper is null" @kind object;
  #L4a9c8e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9c94.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/Function3;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a9c9a.  v5:= temp @kind object;
  #L4a9c9c.  v0:= 3I;
  #L4a9c9e.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a9ca2.  v1:= 0I;
  #L4a9ca4.  v0[v1]:= v2 @kind object;
  #L4a9ca8.  v2:= 1I;
  #L4a9caa.  v0[v2]:= v3 @kind object;
  #L4a9cae.  v2:= 2I;
  #L4a9cb0.  v0[v2]:= v4 @kind object;
  #L4a9cb4.  call temp:= `zipArray`(v5, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9cba.  v2:= temp @kind object;
  #L4a9cbc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`io.reactivex.rxjava3.core.SingleSource` v2 @kind object, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a9cd0.  v0:= "source1 is null" @kind object;
  #L4a9cd4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9cda.  v0:= "source2 is null" @kind object;
  #L4a9cde.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9ce4.  v0:= "zipper is null" @kind object;
  #L4a9ce8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9cee.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.toFunction:(Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a9cf4.  v4:= temp @kind object;
  #L4a9cf6.  v0:= 2I;
  #L4a9cf8.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a9cfc.  v1:= 0I;
  #L4a9cfe.  v0[v1]:= v2 @kind object;
  #L4a9d02.  v2:= 1I;
  #L4a9d04.  v0[v2]:= v3 @kind object;
  #L4a9d08.  call temp:= `zipArray`(v4, v0) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9d0e.  v2:= temp @kind object;
  #L4a9d10.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zip`(`java.lang.Iterable` v1 @kind object, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a9d24.  v0:= "zipper is null" @kind object;
  #L4a9d28.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9d2e.  v0:= "sources is null" @kind object;
  #L4a9d32.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9d38.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleZipIterable`;
  #L4a9d3c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipIterable;.<init>:(Ljava/lang/Iterable;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a9d42.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9d48.  v1:= temp @kind object;
  #L4a9d4a.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zipArray`(`io.reactivex.rxjava3.functions.Function` v1 @kind object, `io.reactivex.rxjava3.core.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zipArray:(Lio/reactivex/rxjava3/functions/Function;[Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a9d5c.  v0:= "zipper is null" @kind object;
  #L4a9d60.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9d66.  v0:= "sources is null" @kind object;
  #L4a9d6a.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9d70.  v0:= length @variable v2;
  #L4a9d72.  if v0 != 0 then goto L4a9d8a;
  #L4a9d76.  v1:= new `java.util.NoSuchElementException`;
  #L4a9d7a.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4a9d80.  call temp:= `error`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.error:(Ljava/lang/Throwable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9d86.  v1:= temp @kind object;
  #L4a9d88.  return v1 @kind object;
  #L4a9d8a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleZipArray`;
  #L4a9d8e.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleZipArray;.<init>:([Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a9d94.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9d9a.  v1:= temp @kind object;
  #L4a9d9c.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `ambWith`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `io.reactivex.rxjava3.core.SingleSource` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.ambWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a8878.  v0:= "other is null" @kind object;
  #L4a887c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8882.  v0:= 2I;
  #L4a8884.  v0:= new `io.reactivex.rxjava3.core.SingleSource`[v0];
  #L4a8888.  v1:= 0I;
  #L4a888a.  v0[v1]:= v2 @kind object;
  #L4a888e.  v1:= 1I;
  #L4a8890.  v0[v1]:= v3 @kind object;
  #L4a8894.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.ambArray:([Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a889a.  v3:= temp @kind object;
  #L4a889c.  return v3 @kind object;
}
procedure `java.lang.Object` `blockingGet`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.blockingGet:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9ee0.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver`;
  #L4a9ee4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L4a9eea.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L4a9ef0.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L4a9ef6.  v0:= temp @kind object;
  #L4a9ef8.  return v0 @kind object;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Single` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.blockingSubscribe:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a9fa4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a9faa.  v0:= temp @kind object;
  #L4a9fac.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.ERROR_CONSUMER` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4a9fb0.  call `blockingSubscribe`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind virtual;
  #L4a9fb6.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.blockingSubscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9fc8.  v0:= "observer is null" @kind object;
  #L4a9fcc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9fd2.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingDisposableMultiObserver`;
  #L4a9fd6.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.<init>:()V` @kind direct;
  #L4a9fdc.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/SingleObserver;.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @kind interface;
  #L4a9fe2.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L4a9fe8.  call `blockingConsume`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingDisposableMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L4a9fee.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4aa000.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ERROR_CONSUMER` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4aa004.  call `blockingSubscribe`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Single;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind virtual;
  #L4aa00a.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object, `io.reactivex.rxjava3.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.blockingSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4aa01c.  v0:= "onSuccess is null" @kind object;
  #L4aa020.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aa026.  v0:= "onError is null" @kind object;
  #L4aa02a.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aa030.  v0:= new `io.reactivex.rxjava3.internal.observers.BlockingMultiObserver`;
  #L4aa034.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L4aa03a.  call `subscribe`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L4aa040.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.rxjava3.functions.Action` @kind object;
  #L4aa044.  call `blockingConsume`(v0, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/observers/BlockingMultiObserver;.blockingConsume:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind virtual;
  #L4aa04a.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Single` `cache`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.cache:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a88b0.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleCache`;
  #L4a88b4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleCache;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a88ba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a88c0.  v0:= temp @kind object;
  #L4a88c2.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `cast`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a88d4.  v0:= "clazz is null" @kind object;
  #L4a88d8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a88de.  call temp:= `castFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.castFunction:(Ljava/lang/Class;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a88e4.  v2:= temp @kind object;
  #L4a88e6.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Single;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a88ec.  v2:= temp @kind object;
  #L4a88ee.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `compose`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleTransformer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.compose:(Lio/reactivex/rxjava3/core/SingleTransformer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8900.  v0:= "transformer is null" @kind object;
  #L4a8904.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a890a.  v2:= temp @kind object;
  #L4a890c.  v2:= (`io.reactivex.rxjava3.core.SingleTransformer`) v2 @kind object;
  #L4a8910.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleTransformer;.apply:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/SingleSource;` @kind interface;
  #L4a8916.  v2:= temp @kind object;
  #L4a8918.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.wrap:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a891e.  v2:= temp @kind object;
  #L4a8920.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `concatMap`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8934.  v0:= "mapper is null" @kind object;
  #L4a8938.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a893e.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMap`;
  #L4a8942.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a8948.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a894e.  v2:= temp @kind object;
  #L4a8950.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `concatMapCompletable`(`io.reactivex.rxjava3.core.Single` v0 @kind this, `io.reactivex.rxjava3.functions.Function` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a79b4.  call temp:= `flatMapCompletable`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L4a79ba.  v1:= temp @kind object;
  #L4a79bc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `concatMapMaybe`(`io.reactivex.rxjava3.core.Single` v0 @kind this, `io.reactivex.rxjava3.functions.Function` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a850c.  call temp:= `flatMapMaybe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L4a8512.  v1:= temp @kind object;
  #L4a8514.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `concatWith`(`io.reactivex.rxjava3.core.Single` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.concatWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a7e68.  call temp:= `concat`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.concat:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7e6e.  v1:= temp @kind object;
  #L4a7e70.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `contains`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.contains:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8964.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/rxjava3/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/rxjava3/functions/BiPredicate;` @kind static;
  #L4a896a.  v0:= temp @kind object;
  #L4a896c.  call temp:= `contains`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Single;.contains:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a8972.  v2:= temp @kind object;
  #L4a8974.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `contains`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.rxjava3.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.contains:(Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8988.  v0:= "item is null" @kind object;
  #L4a898c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8992.  v0:= "comparer is null" @kind object;
  #L4a8996.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a899c.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleContains`;
  #L4a89a0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleContains;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Ljava/lang/Object;Lio/reactivex/rxjava3/functions/BiPredicate;)V` @kind direct;
  #L4a89a6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a89ac.  v2:= temp @kind object;
  #L4a89ae.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delay`(`io.reactivex.rxjava3.core.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a8a20.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a8a26.  v4:= temp @kind object;
  #L4a8a28.  v5:= 0I;
  #L4a8a2a.  v0:= v6 @kind object;
  #L4a8a2c.  v1:= v7 @kind wide;
  #L4a8a2e.  v3:= v9 @kind object;
  #L4a8a30.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a8a36.  v7:= temp @kind object;
  #L4a8a38.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delay`(`io.reactivex.rxjava3.core.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a8a78.  v5:= 0I;
  #L4a8a7a.  v0:= v6 @kind object;
  #L4a8a7c.  v1:= v7 @kind wide;
  #L4a8a7e.  v3:= v9 @kind object;
  #L4a8a80.  v4:= v10 @kind object;
  #L4a8a82.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a8a88.  v7:= temp @kind object;
  #L4a8a8a.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delay`(`io.reactivex.rxjava3.core.Single` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.rxjava3.core.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/rxjava3/core/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a8a9c.  v0:= "unit is null" @kind object;
  #L4a8aa0.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8aa6.  v0:= "scheduler is null" @kind object;
  #L4a8aaa.  call temp:= `requireNonNull`(v12, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8ab0.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDelay`;
  #L4a8ab4.  v1:= v0 @kind object;
  #L4a8ab6.  v2:= v8 @kind object;
  #L4a8ab8.  v3:= v9 @kind wide;
  #L4a8aba.  v5:= v11 @kind object;
  #L4a8abc.  v6:= v12 @kind object;
  #L4a8abe.  v7:= v13;
  #L4a8ac0.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelay;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L4a8ac6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8acc.  v9:= temp @kind object;
  #L4a8ace.  return v9 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delay`(`io.reactivex.rxjava3.core.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/rxjava3/core/Single;.delay:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a8a4c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a8a52.  v4:= temp @kind object;
  #L4a8a54.  v0:= v6 @kind object;
  #L4a8a56.  v1:= v7 @kind wide;
  #L4a8a58.  v3:= v9 @kind object;
  #L4a8a5a.  v5:= v10;
  #L4a8a5c.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a8a62.  v7:= temp @kind object;
  #L4a8a64.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delaySubscription`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8b70.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a8b76.  v0:= temp @kind object;
  #L4a8b78.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a8b7e.  v2:= temp @kind object;
  #L4a8b80.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delaySubscription`(`io.reactivex.rxjava3.core.Single` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a8b94.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/rxjava3/core/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a8b9a.  v1:= temp @kind object;
  #L4a8b9c.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a8ba2.  v1:= temp @kind object;
  #L4a8ba4.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delaySubscription`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8ae0.  v0:= "subscriptionIndicator is null" @kind object;
  #L4a8ae4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8aea.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithCompletable`;
  #L4a8aee.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithCompletable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L4a8af4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8afa.  v2:= temp @kind object;
  #L4a8afc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delaySubscription`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8b10.  v0:= "subscriptionIndicator is null" @kind object;
  #L4a8b14.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8b1a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable`;
  #L4a8b1e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithObservable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/ObservableSource;)V` @kind direct;
  #L4a8b24.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8b2a.  v2:= temp @kind object;
  #L4a8b2c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delaySubscription`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8b40.  v0:= "subscriptionIndicator is null" @kind object;
  #L4a8b44.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8b4a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithSingle`;
  #L4a8b4e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithSingle;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a8b54.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8b5a.  v2:= temp @kind object;
  #L4a8b5c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `delaySubscription`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.delaySubscription:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8bb8.  v0:= "subscriptionIndicator is null" @kind object;
  #L4a8bbc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8bc2.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDelayWithPublisher`;
  #L4a8bc6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDelayWithPublisher;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L4a8bcc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8bd2.  v2:= temp @kind object;
  #L4a8bd4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `dematerialize`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.dematerialize:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8528.  v0:= "selector is null" @kind object;
  #L4a852c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8532.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDematerialize`;
  #L4a8536.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDematerialize;.<init>:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a853c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4a8542.  v2:= temp @kind object;
  #L4a8544.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doAfterSuccess`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doAfterSuccess:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8be8.  v0:= "onAfterSuccess is null" @kind object;
  #L4a8bec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8bf2.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoAfterSuccess`;
  #L4a8bf6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoAfterSuccess;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L4a8bfc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8c02.  v2:= temp @kind object;
  #L4a8c04.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doAfterTerminate`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doAfterTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8c18.  v0:= "onAfterTerminate is null" @kind object;
  #L4a8c1c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8c22.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoAfterTerminate`;
  #L4a8c26.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoAfterTerminate;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L4a8c2c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8c32.  v2:= temp @kind object;
  #L4a8c34.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doFinally`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doFinally:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8c48.  v0:= "onFinally is null" @kind object;
  #L4a8c4c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8c52.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoFinally`;
  #L4a8c56.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoFinally;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L4a8c5c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8c62.  v2:= temp @kind object;
  #L4a8c64.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doOnDispose`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doOnDispose:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8c78.  v0:= "onDispose is null" @kind object;
  #L4a8c7c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8c82.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoOnDispose`;
  #L4a8c86.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoOnDispose;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L4a8c8c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8c92.  v2:= temp @kind object;
  #L4a8c94.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doOnError`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doOnError:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8ca8.  v0:= "onError is null" @kind object;
  #L4a8cac.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8cb2.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoOnError`;
  #L4a8cb6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoOnError;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L4a8cbc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8cc2.  v2:= temp @kind object;
  #L4a8cc4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doOnEvent`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doOnEvent:(Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8cd8.  v0:= "onEvent is null" @kind object;
  #L4a8cdc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8ce2.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoOnEvent`;
  #L4a8ce6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoOnEvent;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/BiConsumer;)V` @kind direct;
  #L4a8cec.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8cf2.  v2:= temp @kind object;
  #L4a8cf4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doOnLifecycle`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Action` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doOnLifecycle:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8d08.  v0:= "onSubscribe is null" @kind object;
  #L4a8d0c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8d12.  v0:= "onDispose is null" @kind object;
  #L4a8d16.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8d1c.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoOnLifecycle`;
  #L4a8d20.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoOnLifecycle;.<init>:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L4a8d26.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8d2c.  v2:= temp @kind object;
  #L4a8d2e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doOnSubscribe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doOnSubscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8d40.  v0:= "onSubscribe is null" @kind object;
  #L4a8d44.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8d4a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoOnSubscribe`;
  #L4a8d4e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoOnSubscribe;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L4a8d54.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8d5a.  v2:= temp @kind object;
  #L4a8d5c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doOnSuccess`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doOnSuccess:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8d70.  v0:= "onSuccess is null" @kind object;
  #L4a8d74.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8d7a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoOnSuccess`;
  #L4a8d7e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoOnSuccess;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L4a8d84.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8d8a.  v2:= temp @kind object;
  #L4a8d8c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `doOnTerminate`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Action` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.doOnTerminate:(Lio/reactivex/rxjava3/functions/Action;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8da0.  v0:= "onTerminate is null" @kind object;
  #L4a8da4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8daa.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDoOnTerminate`;
  #L4a8dae.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDoOnTerminate;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Action;)V` @kind direct;
  #L4a8db4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8dba.  v2:= temp @kind object;
  #L4a8dbc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `filter`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8558.  v0:= "predicate is null" @kind object;
  #L4a855c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8562.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFilterSingle`;
  #L4a8566.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFilterSingle;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4a856c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4a8572.  v2:= temp @kind object;
  #L4a8574.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `flatMap`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flatMap:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8e2c.  v0:= "mapper is null" @kind object;
  #L4a8e30.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8e36.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMap`;
  #L4a8e3a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMap;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a8e40.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8e46.  v2:= temp @kind object;
  #L4a8e48.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `flatMap`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8e5c.  v0:= "mapper is null" @kind object;
  #L4a8e60.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8e66.  v0:= "combiner is null" @kind object;
  #L4a8e6a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8e70.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapBiSelector`;
  #L4a8e74.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapBiSelector;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V` @kind direct;
  #L4a8e7a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8e80.  v2:= temp @kind object;
  #L4a8e82.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `flatMap`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flatMap:(Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8e94.  v0:= "onSuccessMapper is null" @kind object;
  #L4a8e98.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8e9e.  v0:= "onErrorMapper is null" @kind object;
  #L4a8ea2.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8ea8.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapNotification`;
  #L4a8eac.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapNotification;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a8eb2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8eb8.  v2:= temp @kind object;
  #L4a8eba.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `flatMapCompletable`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flatMapCompletable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a79d0.  v0:= "mapper is null" @kind object;
  #L4a79d4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a79da.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapCompletable`;
  #L4a79de.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapCompletable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a79e4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4a79ea.  v2:= temp @kind object;
  #L4a79ec.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `flatMapMaybe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flatMapMaybe:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8588.  v0:= "mapper is null" @kind object;
  #L4a858c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8592.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapMaybe`;
  #L4a8596.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapMaybe;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a859c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4a85a2.  v2:= temp @kind object;
  #L4a85a4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flatMapObservable`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flatMapObservable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a86e8.  v0:= "mapper is null" @kind object;
  #L4a86ec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a86f2.  v0:= new `io.reactivex.rxjava3.internal.operators.mixed.SingleFlatMapObservable`;
  #L4a86f6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/mixed/SingleFlatMapObservable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a86fc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a8702.  v2:= temp @kind object;
  #L4a8704.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flatMapPublisher`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flatMapPublisher:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a7e84.  v0:= "mapper is null" @kind object;
  #L4a7e88.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7e8e.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher`;
  #L4a7e92.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapPublisher;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a7e98.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7e9e.  v2:= temp @kind object;
  #L4a7ea0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flattenAsFlowable`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flattenAsFlowable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a7eb4.  v0:= "mapper is null" @kind object;
  #L4a7eb8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7ebe.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapIterableFlowable`;
  #L4a7ec2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapIterableFlowable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a7ec8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7ece.  v2:= temp @kind object;
  #L4a7ed0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flattenAsObservable`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flattenAsObservable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8718.  v0:= "mapper is null" @kind object;
  #L4a871c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8722.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleFlatMapIterableObservable`;
  #L4a8726.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleFlatMapIterableObservable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a872c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a8732.  v2:= temp @kind object;
  #L4a8734.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `flattenStreamAsFlowable`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flattenStreamAsFlowable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a7ee4.  v0:= "mapper is null" @kind object;
  #L4a7ee8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a7eee.  v0:= new `io.reactivex.rxjava3.internal.jdk8.SingleFlattenStreamAsFlowable`;
  #L4a7ef2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/SingleFlattenStreamAsFlowable;.<init>:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a7ef8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a7efe.  v2:= temp @kind object;
  #L4a7f00.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `flattenStreamAsObservable`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.flattenStreamAsObservable:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8748.  v0:= "mapper is null" @kind object;
  #L4a874c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8752.  v0:= new `io.reactivex.rxjava3.internal.jdk8.SingleFlattenStreamAsObservable`;
  #L4a8756.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/SingleFlattenStreamAsObservable;.<init>:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a875c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a8762.  v2:= temp @kind object;
  #L4a8764.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `hide`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.hide:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a906c.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleHide`;
  #L4a9070.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleHide;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a9076.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a907c.  v0:= temp @kind object;
  #L4a907e.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Completable` `ignoreElement`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.ignoreElement:()Lio/reactivex/rxjava3/core/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a7a00.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableFromSingle`;
  #L4a7a04.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableFromSingle;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a7a0a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Completable;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4a7a10.  v0:= temp @kind object;
  #L4a7a12.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `lift`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleOperator` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.lift:(Lio/reactivex/rxjava3/core/SingleOperator;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a90c0.  v0:= "lift is null" @kind object;
  #L4a90c4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a90ca.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleLift`;
  #L4a90ce.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleLift;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleOperator;)V` @kind direct;
  #L4a90d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a90da.  v2:= temp @kind object;
  #L4a90dc.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `map`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a90f0.  v0:= "mapper is null" @kind object;
  #L4a90f4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a90fa.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleMap`;
  #L4a90fe.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleMap;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a9104.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a910a.  v2:= temp @kind object;
  #L4a910c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `mapOptional`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mapOptional:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a85b8.  v0:= "mapper is null" @kind object;
  #L4a85bc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a85c2.  v0:= new `io.reactivex.rxjava3.internal.jdk8.SingleMapOptional`;
  #L4a85c6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/SingleMapOptional;.<init>:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a85cc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4a85d2.  v2:= temp @kind object;
  #L4a85d4.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `materialize`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.materialize:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9120.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleMaterialize`;
  #L4a9124.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleMaterialize;.<init>:(Lio/reactivex/rxjava3/core/Single;)V` @kind direct;
  #L4a912a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9130.  v0:= temp @kind object;
  #L4a9132.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `mergeWith`(`io.reactivex.rxjava3.core.Single` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.mergeWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a82d4.  call temp:= `merge`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.merge:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a82da.  v1:= temp @kind object;
  #L4a82dc.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `observeOn`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.observeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a919c.  v0:= "scheduler is null" @kind object;
  #L4a91a0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a91a6.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleObserveOn`;
  #L4a91aa.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleObserveOn;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a91b0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a91b6.  v2:= temp @kind object;
  #L4a91b8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `ofType`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.ofType:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a85e8.  v0:= "clazz is null" @kind object;
  #L4a85ec.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a85f2.  call temp:= `isInstanceOf`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.isInstanceOf:(Ljava/lang/Class;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L4a85f8.  v0:= temp @kind object;
  #L4a85fa.  call temp:= `filter`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.filter:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L4a8600.  v0:= temp @kind object;
  #L4a8602.  call temp:= `cast`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.cast:(Ljava/lang/Class;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L4a8608.  v2:= temp @kind object;
  #L4a860a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `onErrorComplete`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorComplete:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a861c.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L4a8622.  v0:= temp @kind object;
  #L4a8624.  call temp:= `onErrorComplete`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L4a862a.  v0:= temp @kind object;
  #L4a862c.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `onErrorComplete`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorComplete:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8640.  v0:= "predicate is null" @kind object;
  #L4a8644.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a864a.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleOnErrorComplete`;
  #L4a864e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleOnErrorComplete;.<init>:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/functions/Predicate;)V` @kind direct;
  #L4a8654.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4a865a.  v2:= temp @kind object;
  #L4a865c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `onErrorResumeNext`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a91cc.  v0:= "fallbackSupplier is null" @kind object;
  #L4a91d0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a91d6.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleResumeNext`;
  #L4a91da.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleResumeNext;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;)V` @kind direct;
  #L4a91e0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a91e6.  v2:= temp @kind object;
  #L4a91e8.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `onErrorResumeWith`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorResumeWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a91fc.  v0:= "fallback is null" @kind object;
  #L4a9200.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9206.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/rxjava3/functions/Function;` @kind static;
  #L4a920c.  v2:= temp @kind object;
  #L4a920e.  call temp:= `onErrorResumeNext`(v1, v2) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorResumeNext:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a9214.  v2:= temp @kind object;
  #L4a9216.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `onErrorReturn`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `io.reactivex.rxjava3.functions.Function` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorReturn:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a9228.  v0:= "itemSupplier is null" @kind object;
  #L4a922c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9232.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleOnErrorReturn`;
  #L4a9236.  v1:= 0I;
  #L4a9238.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleOnErrorReturn;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;Ljava/lang/Object;)V` @kind direct;
  #L4a923e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9244.  v3:= temp @kind object;
  #L4a9246.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `onErrorReturnItem`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.onErrorReturnItem:(Ljava/lang/Object;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a9258.  v0:= "item is null" @kind object;
  #L4a925c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9262.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleOnErrorReturn`;
  #L4a9266.  v1:= 0I;
  #L4a9268.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleOnErrorReturn;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/Function;Ljava/lang/Object;)V` @kind direct;
  #L4a926e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9274.  v3:= temp @kind object;
  #L4a9276.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `onTerminateDetach`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.onTerminateDetach:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9288.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleDetach`;
  #L4a928c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleDetach;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a9292.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9298.  v0:= temp @kind object;
  #L4a929a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeat`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.repeat:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a82f0.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a82f6.  v0:= temp @kind object;
  #L4a82f8.  call temp:= `repeat`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeat:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a82fe.  v0:= temp @kind object;
  #L4a8300.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeat`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/core/Single;.repeat:(J)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8314.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a831a.  v0:= temp @kind object;
  #L4a831c.  call temp:= `repeat`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeat:(J)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a8322.  v2:= temp @kind object;
  #L4a8324.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeatUntil`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.repeatUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8338.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a833e.  v0:= temp @kind object;
  #L4a8340.  call temp:= `repeatUntil`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeatUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a8346.  v2:= temp @kind object;
  #L4a8348.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `repeatWhen`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.repeatWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a835c.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a8362.  v0:= temp @kind object;
  #L4a8364.  call temp:= `repeatWhen`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.repeatWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a836a.  v2:= temp @kind object;
  #L4a836c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `retry`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.retry:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a92ac.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a92b2.  v0:= temp @kind object;
  #L4a92b4.  call temp:= `retry`(v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a92ba.  v0:= temp @kind object;
  #L4a92bc.  call temp:= `b`(v0) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a92c2.  v0:= temp @kind object;
  #L4a92c4.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `retry`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/core/Single;.retry:(J)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9330.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a9336.  v0:= temp @kind object;
  #L4a9338.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(J)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a933e.  v2:= temp @kind object;
  #L4a9340.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9346.  v2:= temp @kind object;
  #L4a9348.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `retry`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `long` v2 , `io.reactivex.rxjava3.functions.Predicate` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a935c.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a9362.  v0:= temp @kind object;
  #L4a9364.  call temp:= `retry`(v0, v2, v4) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a936a.  v2:= temp @kind object;
  #L4a936c.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9372.  v2:= temp @kind object;
  #L4a9374.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `retry`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.retry:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a92d8.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a92de.  v0:= temp @kind object;
  #L4a92e0.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(Lio/reactivex/rxjava3/functions/BiPredicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a92e6.  v2:= temp @kind object;
  #L4a92e8.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a92ee.  v2:= temp @kind object;
  #L4a92f0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `retry`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.retry:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9304.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a930a.  v0:= temp @kind object;
  #L4a930c.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.retry:(Lio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a9312.  v2:= temp @kind object;
  #L4a9314.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a931a.  v2:= temp @kind object;
  #L4a931c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `retryUntil`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `io.reactivex.rxjava3.functions.BooleanSupplier` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.retryUntil:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a9388.  v0:= "stop is null" @kind object;
  #L4a938c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9392.  call temp:= `predicateReverseFor`(v3) @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.predicateReverseFor:(Lio/reactivex/rxjava3/functions/BooleanSupplier;)Lio/reactivex/rxjava3/functions/Predicate;` @kind static;
  #L4a9398.  v3:= temp @kind object;
  #L4a939a.  v0:= 9223372036854775807L;
  #L4a93a4.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/rxjava3/core/Single;.retry:(JLio/reactivex/rxjava3/functions/Predicate;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a93aa.  v3:= temp @kind object;
  #L4a93ac.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `retryWhen`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Function` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.retryWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a93c0.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a93c6.  v0:= temp @kind object;
  #L4a93c8.  call temp:= `retryWhen`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.retryWhen:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a93ce.  v2:= temp @kind object;
  #L4a93d0.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.b:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a93d6.  v2:= temp @kind object;
  #L4a93d8.  return v2 @kind object;
}
procedure `void` `safeSubscribe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.safeSubscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4aa05c.  v0:= "observer is null" @kind object;
  #L4aa060.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aa066.  v0:= new `io.reactivex.rxjava3.internal.observers.SafeSingleObserver`;
  #L4aa06a.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/observers/SafeSingleObserver;.<init>:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind direct;
  #L4aa070.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L4aa076.  return @kind void;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.startWith:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8380.  v0:= "other is null" @kind object;
  #L4a8384.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a838a.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.wrap:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Completable;` @kind static;
  #L4a8390.  v2:= temp @kind object;
  #L4a8392.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Completable;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a8398.  v2:= temp @kind object;
  #L4a839a.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a83a0.  v0:= temp @kind object;
  #L4a83a2.  call temp:= `concat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a83a8.  v2:= temp @kind object;
  #L4a83aa.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.MaybeSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.startWith:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a83bc.  v0:= "other is null" @kind object;
  #L4a83c0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a83c6.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.wrap:(Lio/reactivex/rxjava3/core/MaybeSource;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4a83cc.  v2:= temp @kind object;
  #L4a83ce.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Maybe;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a83d4.  v2:= temp @kind object;
  #L4a83d6.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a83dc.  v0:= temp @kind object;
  #L4a83de.  call temp:= `concat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a83e4.  v2:= temp @kind object;
  #L4a83e6.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.startWith:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a83f8.  v0:= "other is null" @kind object;
  #L4a83fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8402.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.wrap:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a8408.  v2:= temp @kind object;
  #L4a840a.  call temp:= `toFlowable`(v2) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a8410.  v2:= temp @kind object;
  #L4a8412.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a8418.  v0:= temp @kind object;
  #L4a841a.  call temp:= `concat`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Flowable;.concat:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a8420.  v2:= temp @kind object;
  #L4a8422.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `startWith`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8434.  v0:= "other is null" @kind object;
  #L4a8438.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a843e.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a8444.  v0:= temp @kind object;
  #L4a8446.  call temp:= `startWith`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Flowable;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L4a844c.  v2:= temp @kind object;
  #L4a844e.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `startWith`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.ObservableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.startWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8778.  v0:= "other is null" @kind object;
  #L4a877c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a8782.  call temp:= `wrap`(v2) @signature `Lio/reactivex/rxjava3/core/Observable;.wrap:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a8788.  v2:= temp @kind object;
  #L4a878a.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/rxjava3/core/Single;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a8790.  v0:= temp @kind object;
  #L4a8792.  call temp:= `concatWith`(v2, v0) @signature `Lio/reactivex/rxjava3/core/Observable;.concatWith:(Lio/reactivex/rxjava3/core/ObservableSource;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L4a8798.  v2:= temp @kind object;
  #L4a879a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Single` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:()Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a9de4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/rxjava3/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/rxjava3/functions/Consumer;` @kind static;
  #L4a9dea.  v0:= temp @kind object;
  #L4a9dec.  v1:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4a9df0.  call temp:= `subscribe`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4a9df6.  v0:= temp @kind object;
  #L4a9df8.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/functions/BiConsumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9e0c.  v0:= "onCallback is null" @kind object;
  #L4a9e10.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9e16.  v0:= new `io.reactivex.rxjava3.internal.observers.BiConsumerSingleObserver`;
  #L4a9e1a.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/observers/BiConsumerSingleObserver;.<init>:(Lio/reactivex/rxjava3/functions/BiConsumer;)V` @kind direct;
  #L4a9e20.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L4a9e26.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9e38.  v0:= `@@io.reactivex.rxjava3.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.rxjava3.functions.Consumer` @kind object;
  #L4a9e3c.  call temp:= `subscribe`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @kind virtual;
  #L4a9e42.  v2:= temp @kind object;
  #L4a9e44.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.Disposable` `subscribe`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.functions.Consumer` v2 @kind object, `io.reactivex.rxjava3.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)Lio/reactivex/rxjava3/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9e58.  v0:= "onSuccess is null" @kind object;
  #L4a9e5c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9e62.  v0:= "onError is null" @kind object;
  #L4a9e66.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9e6c.  v0:= new `io.reactivex.rxjava3.internal.observers.ConsumerSingleObserver`;
  #L4a9e70.  call `<init>`(v0, v2, v3) @signature `Lio/reactivex/rxjava3/internal/observers/ConsumerSingleObserver;.<init>:(Lio/reactivex/rxjava3/functions/Consumer;Lio/reactivex/rxjava3/functions/Consumer;)V` @kind direct;
  #L4a9e76.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L4a9e7c.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v3 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4aa088.  v0:= "observer is null" @kind object;
  #L4aa08c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aa092.  call temp:= `onSubscribe`(v2, v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/rxjava3/core/Single;Lio/reactivex/rxjava3/core/SingleObserver;)Lio/reactivex/rxjava3/core/SingleObserver;` @kind static;
  #L4aa098.  v3:= temp @kind object;
  #L4aa09a.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null SingleObserver. Please check the handler provided to RxJavaPlugins.setOnSingleSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L4aa09e.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4aa0a4.  call `subscribeActual`(v2, v3) @signature `Lio/reactivex/rxjava3/core/Single;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L4aa0aa.  return @kind void;
  #L4aa0ac.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4aa0ae.  call `throwIfFatal`(v3) @signature `Lio/reactivex/rxjava3/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4aa0b4.  v0:= new `java.lang.NullPointerException`;
  #L4aa0b8.  v1:= "subscribeActual failed" @kind object;
  #L4aa0bc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4aa0c2.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L4aa0c8.  throw v0;
  #L4aa0ca.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L4aa0cc.  throw v3;
  catch `java.lang.NullPointerException` @[L4aa0a4..L4aa0aa] goto L4aa0ca;
  catch `java.lang.Throwable` @[L4aa0a4..L4aa0aa] goto L4aa0ac;
}
procedure `void` `subscribeActual`(`io.reactivex.rxjava3.core.SingleObserver` v0 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.subscribeActual:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.rxjava3.core.Single` `subscribeOn`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.subscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9424.  v0:= "scheduler is null" @kind object;
  #L4a9428.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a942e.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleSubscribeOn`;
  #L4a9432.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleSubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a9438.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a943e.  v2:= temp @kind object;
  #L4a9440.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.SingleObserver` `subscribeWith`(`io.reactivex.rxjava3.core.Single` v0 @kind this, `io.reactivex.rxjava3.core.SingleObserver` v1 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.subscribeWith:(Lio/reactivex/rxjava3/core/SingleObserver;)Lio/reactivex/rxjava3/core/SingleObserver;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a9dcc.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L4a9dd2.  return v1 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `takeUntil`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.CompletableSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.takeUntil:(Lio/reactivex/rxjava3/core/CompletableSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9454.  v0:= "other is null" @kind object;
  #L4a9458.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a945e.  v0:= new `io.reactivex.rxjava3.internal.operators.completable.CompletableToFlowable`;
  #L4a9462.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/completable/CompletableToFlowable;.<init>:(Lio/reactivex/rxjava3/core/CompletableSource;)V` @kind direct;
  #L4a9468.  call temp:= `takeUntil`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a946e.  v2:= temp @kind object;
  #L4a9470.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `takeUntil`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleSource` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.takeUntil:(Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9484.  v0:= "other is null" @kind object;
  #L4a9488.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a948e.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleToFlowable`;
  #L4a9492.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToFlowable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a9498.  call temp:= `takeUntil`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a949e.  v2:= temp @kind object;
  #L4a94a0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `takeUntil`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a94b4.  v0:= "other is null" @kind object;
  #L4a94b8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a94be.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleTakeUntil`;
  #L4a94c2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTakeUntil;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L4a94c8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a94ce.  v2:= temp @kind object;
  #L4a94d0.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.observers.TestObserver` `test`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.test:()Lio/reactivex/rxjava3/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9e90.  v0:= new `io.reactivex.rxjava3.observers.TestObserver`;
  #L4a9e94.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.<init>:()V` @kind direct;
  #L4a9e9a.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L4a9ea0.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.observers.TestObserver` `test`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/rxjava3/core/Single;.test:(Z)Lio/reactivex/rxjava3/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9eb4.  v0:= new `io.reactivex.rxjava3.observers.TestObserver`;
  #L4a9eb8.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.<init>:()V` @kind direct;
  #L4a9ebe.  if v2 == 0 then goto L4a9ec8;
  #L4a9ec2.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/observers/TestObserver;.dispose:()V` @kind virtual;
  #L4a9ec8.  call `subscribe`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V` @kind virtual;
  #L4a9ece.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeInterval`(`io.reactivex.rxjava3.core.Single` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.timeInterval:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a94e4.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4a94e8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a94ee.  v1:= temp @kind object;
  #L4a94f0.  call temp:= `timeInterval`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a94f6.  v0:= temp @kind object;
  #L4a94f8.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeInterval`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timeInterval:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a950c.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4a9510.  call temp:= `timeInterval`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Single;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a9516.  v2:= temp @kind object;
  #L4a9518.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeInterval`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timeInterval:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a952c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a9532.  v0:= temp @kind object;
  #L4a9534.  call temp:= `timeInterval`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Single;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a953a.  v2:= temp @kind object;
  #L4a953c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeInterval`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a9550.  v0:= "unit is null" @kind object;
  #L4a9554.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a955a.  v0:= "scheduler is null" @kind object;
  #L4a955e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9564.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval`;
  #L4a9568.  v1:= 1I;
  #L4a956a.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeInterval;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L4a9570.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9576.  v3:= temp @kind object;
  #L4a9578.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeout`(`io.reactivex.rxjava3.core.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a958c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a9592.  v4:= temp @kind object;
  #L4a9594.  v5:= 0I;
  #L4a9596.  v0:= v6 @kind object;
  #L4a9598.  v1:= v7 @kind wide;
  #L4a959a.  v3:= v9 @kind object;
  #L4a959c.  call temp:= `a`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind direct;
  #L4a95a2.  v7:= temp @kind object;
  #L4a95a4.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeout`(`io.reactivex.rxjava3.core.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.rxjava3.core.Scheduler` v10 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a95b8.  v5:= 0I;
  #L4a95ba.  v0:= v6 @kind object;
  #L4a95bc.  v1:= v7 @kind wide;
  #L4a95be.  v3:= v9 @kind object;
  #L4a95c0.  v4:= v10 @kind object;
  #L4a95c2.  call temp:= `a`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/rxjava3/core/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind direct;
  #L4a95c8.  v7:= temp @kind object;
  #L4a95ca.  return v7 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeout`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.rxjava3.core.Scheduler` v5 @kind object, `io.reactivex.rxjava3.core.SingleSource` v6 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a95dc.  v0:= "fallback is null" @kind object;
  #L4a95e0.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a95e6.  call temp:= `a`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind direct;
  #L4a95ec.  v2:= temp @kind object;
  #L4a95ee.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timeout`(`io.reactivex.rxjava3.core.Single` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.rxjava3.core.SingleSource` v11 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a9600.  v0:= "fallback is null" @kind object;
  #L4a9604.  call temp:= `requireNonNull`(v11, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a960a.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a9610.  v5:= temp @kind object;
  #L4a9612.  v1:= v7 @kind object;
  #L4a9614.  v2:= v8 @kind wide;
  #L4a9616.  v4:= v10 @kind object;
  #L4a9618.  v6:= v11 @kind object;
  #L4a961a.  call temp:= `a`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/rxjava3/core/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Lio/reactivex/rxjava3/core/SingleSource;)Lio/reactivex/rxjava3/core/Single;` @kind direct;
  #L4a9620.  v8:= temp @kind object;
  #L4a9622.  return v8 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timestamp`(`io.reactivex.rxjava3.core.Single` v2 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.timestamp:()Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a96d4.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4a96d8.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a96de.  v1:= temp @kind object;
  #L4a96e0.  call temp:= `timestamp`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/core/Single;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a96e6.  v0:= temp @kind object;
  #L4a96e8.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timestamp`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timestamp:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a96fc.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4a9700.  call temp:= `timestamp`(v1, v0, v2) @signature `Lio/reactivex/rxjava3/core/Single;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a9706.  v2:= temp @kind object;
  #L4a9708.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timestamp`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timestamp:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a971c.  call temp:= `computation`() @signature `Lio/reactivex/rxjava3/schedulers/Schedulers;.computation:()Lio/reactivex/rxjava3/core/Scheduler;` @kind static;
  #L4a9722.  v0:= temp @kind object;
  #L4a9724.  call temp:= `timestamp`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/core/Single;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L4a972a.  v2:= temp @kind object;
  #L4a972c.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `timestamp`(`io.reactivex.rxjava3.core.Single` v2 @kind this, `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.rxjava3.core.Scheduler` v4 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4a9740.  v0:= "unit is null" @kind object;
  #L4a9744.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a974a.  v0:= "scheduler is null" @kind object;
  #L4a974e.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9754.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleTimeInterval`;
  #L4a9758.  v1:= 0I;
  #L4a975a.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleTimeInterval;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Ljava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V` @kind direct;
  #L4a9760.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9766.  v3:= temp @kind object;
  #L4a9768.  return v3 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.SingleConverter` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.to:(Lio/reactivex/rxjava3/core/SingleConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9f0c.  v0:= "converter is null" @kind object;
  #L4a9f10.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9f16.  v2:= temp @kind object;
  #L4a9f18.  v2:= (`io.reactivex.rxjava3.core.SingleConverter`) v2 @kind object;
  #L4a9f1c.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/rxjava3/core/SingleConverter;.apply:(Lio/reactivex/rxjava3/core/Single;)Ljava/lang/Object;` @kind interface;
  #L4a9f22.  v2:= temp @kind object;
  #L4a9f24.  return v2 @kind object;
}
procedure `java.util.concurrent.CompletionStage` `toCompletionStage`(`io.reactivex.rxjava3.core.Single` v3 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.toCompletionStage:()Ljava/util/concurrent/CompletionStage;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a9f38.  v0:= new `io.reactivex.rxjava3.internal.jdk8.CompletionStageConsumer`;
  #L4a9f3c.  v1:= 0I;
  #L4a9f3e.  v2:= 0I;
  #L4a9f40.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/jdk8/CompletionStageConsumer;.<init>:(ZLjava/lang/Object;)V` @kind direct;
  #L4a9f46.  call temp:= `subscribeWith`(v3, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribeWith:(Lio/reactivex/rxjava3/core/SingleObserver;)Lio/reactivex/rxjava3/core/SingleObserver;` @kind virtual;
  #L4a9f4c.  v0:= temp @kind object;
  #L4a9f4e.  v0:= (`java.util.concurrent.CompletionStage`) v0 @kind object;
  #L4a9f52.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Flowable` `toFlowable`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.toFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a84d0.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.FuseToFlowable` @kind boolean;
  #L4a84d4.  if v0 == 0 then goto L4a84e8;
  #L4a84d8.  v0:= v1 @kind object;
  #L4a84da.  v0:= (`io.reactivex.rxjava3.internal.fuseable.FuseToFlowable`) v0 @kind object;
  #L4a84de.  call temp:= `fuseToFlowable`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/FuseToFlowable;.fuseToFlowable:()Lio/reactivex/rxjava3/core/Flowable;` @kind interface;
  #L4a84e4.  v0:= temp @kind object;
  #L4a84e6.  return v0 @kind object;
  #L4a84e8.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleToFlowable`;
  #L4a84ec.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToFlowable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a84f2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;` @kind static;
  #L4a84f8.  v0:= temp @kind object;
  #L4a84fa.  return v0 @kind object;
}
procedure `java.util.concurrent.Future` `toFuture`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.toFuture:()Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a9f64.  v0:= new `io.reactivex.rxjava3.internal.observers.FutureMultiObserver`;
  #L4a9f68.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/observers/FutureMultiObserver;.<init>:()V` @kind direct;
  #L4a9f6e.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/rxjava3/core/Single;.subscribeWith:(Lio/reactivex/rxjava3/core/SingleObserver;)Lio/reactivex/rxjava3/core/SingleObserver;` @kind virtual;
  #L4a9f74.  v0:= temp @kind object;
  #L4a9f76.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L4a9f7a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Maybe` `toMaybe`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.toMaybe:()Lio/reactivex/rxjava3/core/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a8670.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.FuseToMaybe` @kind boolean;
  #L4a8674.  if v0 == 0 then goto L4a8688;
  #L4a8678.  v0:= v1 @kind object;
  #L4a867a.  v0:= (`io.reactivex.rxjava3.internal.fuseable.FuseToMaybe`) v0 @kind object;
  #L4a867e.  call temp:= `fuseToMaybe`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/FuseToMaybe;.fuseToMaybe:()Lio/reactivex/rxjava3/core/Maybe;` @kind interface;
  #L4a8684.  v0:= temp @kind object;
  #L4a8686.  return v0 @kind object;
  #L4a8688.  v0:= new `io.reactivex.rxjava3.internal.operators.maybe.MaybeFromSingle`;
  #L4a868c.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFromSingle;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a8692.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Maybe;)Lio/reactivex/rxjava3/core/Maybe;` @kind static;
  #L4a8698.  v0:= temp @kind object;
  #L4a869a.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Observable` `toObservable`(`io.reactivex.rxjava3.core.Single` v1 @kind this) @signature `Lio/reactivex/rxjava3/core/Single;.toObservable:()Lio/reactivex/rxjava3/core/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a87ac.  v0:= instanceof @variable v1 @type ^`io.reactivex.rxjava3.internal.fuseable.FuseToObservable` @kind boolean;
  #L4a87b0.  if v0 == 0 then goto L4a87c4;
  #L4a87b4.  v0:= v1 @kind object;
  #L4a87b6.  v0:= (`io.reactivex.rxjava3.internal.fuseable.FuseToObservable`) v0 @kind object;
  #L4a87ba.  call temp:= `fuseToObservable`(v0) @signature `Lio/reactivex/rxjava3/internal/fuseable/FuseToObservable;.fuseToObservable:()Lio/reactivex/rxjava3/core/Observable;` @kind interface;
  #L4a87c0.  v0:= temp @kind object;
  #L4a87c2.  return v0 @kind object;
  #L4a87c4.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleToObservable`;
  #L4a87c8.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleToObservable;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;)V` @kind direct;
  #L4a87ce.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L4a87d4.  v0:= temp @kind object;
  #L4a87d6.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `unsubscribeOn`(`io.reactivex.rxjava3.core.Single` v1 @kind this, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.unsubscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a97ec.  v0:= "scheduler is null" @kind object;
  #L4a97f0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a97f6.  v0:= new `io.reactivex.rxjava3.internal.operators.single.SingleUnsubscribeOn`;
  #L4a97fa.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/single/SingleUnsubscribeOn;.<init>:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/Scheduler;)V` @kind direct;
  #L4a9800.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Single;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9806.  v2:= temp @kind object;
  #L4a9808.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.core.Single` `zipWith`(`io.reactivex.rxjava3.core.Single` v0 @kind this, `io.reactivex.rxjava3.core.SingleSource` v1 @kind object, `io.reactivex.rxjava3.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/rxjava3/core/Single;.zipWith:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4a9db0.  call temp:= `zip`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/core/Single;.zip:(Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/core/SingleSource;Lio/reactivex/rxjava3/functions/BiFunction;)Lio/reactivex/rxjava3/core/Single;` @kind static;
  #L4a9db6.  v1:= temp @kind object;
  #L4a9db8.  return v1 @kind object;
}
