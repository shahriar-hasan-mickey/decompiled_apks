record `io.reactivex.rxjava3.subscribers.SerializedSubscriber` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.rxjava3.subscribers.SerializedSubscriber.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.subscribers.SerializedSubscriber.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.rxjava3.subscribers.SerializedSubscriber.c` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @AccessFlag ;
  `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` `io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @AccessFlag ;
  `boolean` `io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L526314.  v0:= 0I;
  #L526316.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Z)V` @kind direct;
  #L52631c.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `boolean` v2 ) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L526330.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L526336.  v0.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L52633a.  v0.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.b` @type ^`boolean` := v2 @kind boolean;
  #L52633e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v2 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L52636c.  @monitorenter v2
  #L52636e.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L526372.  if v0 != 0 then goto L526380;
  #L526376.  v0:= 0I;
  #L526378.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @type ^`boolean` := v0 @kind boolean;
  #L52637c.  @monitorexit v2
  #L52637e.  return @kind void;
  #L526380.  v1:= 0I;
  #L526382.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v1 @kind object;
  #L526386.  @monitorexit v2
  #L526388.  v1:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L52638c.  call temp:= `accept`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.accept:(Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L526392.  v0:= temp;
  #L526394.  if v0 == 0 then goto L52636c;
  #L526398.  return @kind void;
  #L52639a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52639c.  @monitorexit v2
  #L52639e.  throw v0;
  catch `java.lang.Throwable` @[L52636e..L526388] goto L52639a;
  catch `java.lang.Throwable` @[L52639c..L52639e] goto L52639a;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L526350.  v0:= v1.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L526354.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L52635a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v2 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5263c4.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` @kind boolean;
  #L5263c8.  if v0 == 0 then goto L5263ce;
  #L5263cc.  return @kind void;
  #L5263ce.  @monitorenter v2
  #L5263d0.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` @kind boolean;
  #L5263d4.  if v0 == 0 then goto L5263dc;
  #L5263d8.  @monitorexit v2
  #L5263da.  return @kind void;
  #L5263dc.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @type ^`boolean` @kind boolean;
  #L5263e0.  if v0 == 0 then goto L52640e;
  #L5263e4.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L5263e8.  if v0 != 0 then goto L5263fc;
  #L5263ec.  v0:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L5263f0.  v1:= 4I;
  #L5263f2.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L5263f8.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L5263fc.  call temp:= `complete`() @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.complete:()Ljava/lang/Object;` @kind static;
  #L526402.  v1:= temp @kind object;
  #L526404.  call `add`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L52640a.  @monitorexit v2
  #L52640c.  return @kind void;
  #L52640e.  v0:= 1I;
  #L526410.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` := v0 @kind boolean;
  #L526414.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @type ^`boolean` := v0 @kind boolean;
  #L526418.  @monitorexit v2
  #L52641a.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L52641e.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L526424.  return @kind void;
  #L526426.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L526428.  @monitorexit v2
  #L52642a.  throw v0;
  catch `java.lang.Throwable` @[L5263d0..L52641a] goto L526426;
  catch `java.lang.Throwable` @[L526428..L52642a] goto L526426;
}
procedure `void` `onError`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L526450.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` @kind boolean;
  #L526454.  if v0 == 0 then goto L526460;
  #L526458.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52645e.  return @kind void;
  #L526460.  @monitorenter v2
  #L526462.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` @kind boolean;
  #L526466.  v1:= 1I;
  #L526468.  if v0 == 0 then goto L52646e;
  #L52646c.  goto L5264be;
  #L52646e.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @type ^`boolean` @kind boolean;
  #L526472.  if v0 == 0 then goto L5264b4;
  #L526476.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` := v1 @kind boolean;
  #L52647a.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L52647e.  if v0 != 0 then goto L526492;
  #L526482.  v0:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L526486.  v1:= 4I;
  #L526488.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L52648e.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L526492.  call temp:= `error`(v3) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L526498.  v3:= temp @kind object;
  #L52649a.  v1:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.b` @type ^`boolean` @kind boolean;
  #L52649e.  if v1 == 0 then goto L5264aa;
  #L5264a2.  call `add`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L5264a8.  goto L5264b0;
  #L5264aa.  call `setFirst`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.setFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L5264b0.  @monitorexit v2
  #L5264b2.  return @kind void;
  #L5264b4.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` := v1 @kind boolean;
  #L5264b8.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @type ^`boolean` := v1 @kind boolean;
  #L5264bc.  v1:= 0I;
  #L5264be.  @monitorexit v2
  #L5264c0.  if v1 == 0 then goto L5264cc;
  #L5264c4.  call `onError`(v3) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L5264ca.  return @kind void;
  #L5264cc.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L5264d0.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L5264d6.  return @kind void;
  #L5264d8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5264da.  @monitorexit v2
  #L5264dc.  throw v3;
  catch `java.lang.Throwable` @[L526462..L5264c0] goto L5264d8;
  catch `java.lang.Throwable` @[L5264da..L5264dc] goto L5264d8;
}
procedure `void` `onNext`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L526504.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` @kind boolean;
  #L526508.  if v0 == 0 then goto L52650e;
  #L52650c.  return @kind void;
  #L52650e.  if v3 != 0 then goto L526530;
  #L526512.  v3:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L526516.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L52651c.  v3:= "onNext called with a null value." @kind object;
  #L526520.  call temp:= `createNullPointerException`(v3) @signature `Lio/reactivex/rxjava3/internal/util/ExceptionHelper;.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;` @kind static;
  #L526526.  v3:= temp @kind object;
  #L526528.  call `onError`(v2, v3) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L52652e.  return @kind void;
  #L526530.  @monitorenter v2
  #L526532.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.f` @type ^`boolean` @kind boolean;
  #L526536.  if v0 == 0 then goto L52653e;
  #L52653a.  @monitorexit v2
  #L52653c.  return @kind void;
  #L52653e.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @type ^`boolean` @kind boolean;
  #L526542.  if v0 == 0 then goto L526570;
  #L526546.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L52654a.  if v0 != 0 then goto L52655e;
  #L52654e.  v0:= new `io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList`;
  #L526552.  v1:= 4I;
  #L526554.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L52655a.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.e` @type ^`io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList` := v0 @kind object;
  #L52655e.  call temp:= `next`(v3) @signature `Lio/reactivex/rxjava3/internal/util/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L526564.  v3:= temp @kind object;
  #L526566.  call `add`(v0, v3) @signature `Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L52656c.  @monitorexit v2
  #L52656e.  return @kind void;
  #L526570.  v0:= 1I;
  #L526572.  v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.d` @type ^`boolean` := v0 @kind boolean;
  #L526576.  @monitorexit v2
  #L526578.  v0:= v2.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L52657c.  call `onNext`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L526582.  call `a`(v2) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.a:()V` @kind virtual;
  #L526588.  return @kind void;
  #L52658a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52658c.  @monitorexit v2
  #L52658e.  throw v3;
  catch `java.lang.Throwable` @[L526532..L526578] goto L52658a;
  catch `java.lang.Throwable` @[L52658c..L52658e] goto L52658a;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5265b4.  v0:= v1.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L5265b8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L5265be.  v0:= temp;
  #L5265c0.  if v0 == 0 then goto L5265d2;
  #L5265c4.  v1.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L5265c8.  v2:= v1.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L5265cc.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L5265d2.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.subscribers.SerializedSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/subscribers/SerializedSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5265e4.  v0:= v1.`io.reactivex.rxjava3.subscribers.SerializedSubscriber.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L5265e8.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L5265ee.  return @kind void;
}
