record `io.reactivex.rxjava3.subscribers.ResourceSubscriber` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.subscribers.ResourceSubscriber.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` `io.reactivex.rxjava3.subscribers.ResourceSubscriber.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.rxjava3.subscribers.ResourceSubscriber.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.subscribers.ResourceSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L525cdc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L525ce2.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L525ce6.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L525cec.  v1.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L525cf0.  v0:= new `io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable`;
  #L525cf4.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.<init>:()V` @kind direct;
  #L525cfa.  v1.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` := v0 @kind object;
  #L525cfe.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L525d02.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L525d08.  v1.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.c` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L525d0c.  return @kind void;
}
procedure `void` `add`(`io.reactivex.rxjava3.subscribers.ResourceSubscriber` v1 @kind this, `io.reactivex.rxjava3.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L525d20.  v0:= "resource is null" @kind object;
  #L525d24.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L525d2a.  v0:= v1.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` @kind object;
  #L525d2e.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z` @kind virtual;
  #L525d34.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.subscribers.ResourceSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L525d48.  v0:= v1.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L525d4c.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L525d52.  v0:= temp;
  #L525d54.  if v0 == 0 then goto L525d62;
  #L525d58.  v0:= v1.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.b` @type ^`io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable` @kind object;
  #L525d5c.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/internal/disposables/ListCompositeDisposable;.dispose:()V` @kind virtual;
  #L525d62.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.subscribers.ResourceSubscriber` v2 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L525cb0.  v0:= v2.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L525cb4.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L525cba.  v0:= temp @kind object;
  #L525cbc.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L525cc0.  if v0 != v1 then goto L525cc8;
  #L525cc4.  v0:= 1I;
  #L525cc6.  goto L525cca;
  #L525cc8.  v0:= 0I;
  #L525cca.  return v0;
}
procedure `void` `onStart`(`io.reactivex.rxjava3.subscribers.ResourceSubscriber` v2 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.onStart:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L525d74.  v0:= 9223372036854775807L;
  #L525d7e.  call `request`(v2, v0) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.request:(J)V` @kind virtual;
  #L525d84.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.subscribers.ResourceSubscriber` v5 @kind this, `org.reactivestreams.Subscription` v6 @kind object) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L525d98.  v0:= v5.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L525d9c.  v1:= constclass @type ^`io.reactivex.rxjava3.subscribers.ResourceSubscriber` @kind object;
  #L525da0.  call temp:= `setOnce`(v0, v6, v1) @signature `Lio/reactivex/rxjava3/internal/util/EndConsumerHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z` @kind static;
  #L525da6.  v0:= temp;
  #L525da8.  if v0 == 0 then goto L525dd0;
  #L525dac.  v0:= v5.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.c` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L525db0.  v1:= 0L;
  #L525db4.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L525dba.  v3:= temp @kind wide;
  #L525dbc.  v0:= lcmp(v3, v1);
  #L525dc0.  if v0 == 0 then goto L525dca;
  #L525dc4.  call `request`(v6, v3) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L525dca.  call `onStart`(v5) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.onStart:()V` @kind virtual;
  #L525dd0.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.subscribers.ResourceSubscriber` v2 @kind this, `long` v3 ) @signature `Lio/reactivex/rxjava3/subscribers/ResourceSubscriber;.request:(J)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L525de4.  v0:= v2.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L525de8.  v1:= v2.`io.reactivex.rxjava3.subscribers.ResourceSubscriber.c` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L525dec.  call `deferredRequest`(v0, v1, v3) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V` @kind static;
  #L525df2.  return @kind void;
}
