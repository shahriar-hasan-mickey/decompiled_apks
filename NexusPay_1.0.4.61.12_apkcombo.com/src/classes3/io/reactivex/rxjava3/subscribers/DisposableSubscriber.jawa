record `io.reactivex.rxjava3.subscribers.DisposableSubscriber` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.rxjava3.core.FlowableSubscriber` @kind interface, `io.reactivex.rxjava3.disposables.Disposable` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.subscribers.DisposableSubscriber.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.subscribers.DisposableSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L525bc8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L525bce.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L525bd2.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L525bd8.  v1.`io.reactivex.rxjava3.subscribers.DisposableSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L525bdc.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.rxjava3.subscribers.DisposableSubscriber` v0 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.cancel:()V` @AccessFlag PROTECTED_FINAL {
    temp;

  #L525bf0.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.dispose:()V` @kind virtual;
  #L525bf6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.subscribers.DisposableSubscriber` v1 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L525c08.  v0:= v1.`io.reactivex.rxjava3.subscribers.DisposableSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L525c0c.  call temp:= `cancel`(v0) @signature `Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L525c12.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.subscribers.DisposableSubscriber` v2 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L525b9c.  v0:= v2.`io.reactivex.rxjava3.subscribers.DisposableSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L525ba0.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L525ba6.  v0:= temp @kind object;
  #L525ba8.  v1:= `@@io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper` @kind object;
  #L525bac.  if v0 != v1 then goto L525bb4;
  #L525bb0.  v0:= 1I;
  #L525bb2.  goto L525bb6;
  #L525bb4.  v0:= 0I;
  #L525bb6.  return v0;
}
procedure `void` `onStart`(`io.reactivex.rxjava3.subscribers.DisposableSubscriber` v3 @kind this) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.onStart:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L525c24.  v0:= v3.`io.reactivex.rxjava3.subscribers.DisposableSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L525c28.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L525c2e.  v0:= temp @kind object;
  #L525c30.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L525c34.  v1:= 9223372036854775807L;
  #L525c3e.  call `request`(v0, v1) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L525c44.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.rxjava3.subscribers.DisposableSubscriber` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L525c58.  v0:= v2.`io.reactivex.rxjava3.subscribers.DisposableSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L525c5c.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L525c62.  v1:= temp @kind object;
  #L525c64.  call temp:= `setOnce`(v0, v3, v1) @signature `Lio/reactivex/rxjava3/internal/util/EndConsumerHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z` @kind static;
  #L525c6a.  v3:= temp;
  #L525c6c.  if v3 == 0 then goto L525c76;
  #L525c70.  call `onStart`(v2) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.onStart:()V` @kind virtual;
  #L525c76.  return @kind void;
}
procedure `void` `request`(`io.reactivex.rxjava3.subscribers.DisposableSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/rxjava3/subscribers/DisposableSubscriber;.request:(J)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L525c88.  v0:= v1.`io.reactivex.rxjava3.subscribers.DisposableSubscriber.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L525c8c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L525c92.  v0:= temp @kind object;
  #L525c94.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L525c98.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L525c9e.  return @kind void;
}
