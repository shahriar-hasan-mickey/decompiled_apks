record `io.reactivex.internal.observers.DisposableLambdaObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.observers.DisposableLambdaObserver.a` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.observers.DisposableLambdaObserver.b` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.observers.DisposableLambdaObserver.c` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.observers.DisposableLambdaObserver.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.observers.DisposableLambdaObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Action` v3 @kind object) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42b200.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42b206.  v0.`io.reactivex.internal.observers.DisposableLambdaObserver.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L42b20a.  v0.`io.reactivex.internal.observers.DisposableLambdaObserver.b` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L42b20e.  v0.`io.reactivex.internal.observers.DisposableLambdaObserver.c` @type ^`io.reactivex.functions.Action` := v3 @kind object;
  #L42b212.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.DisposableLambdaObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42b224.  v0:= v2.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42b228.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42b22c.  if v0 == v1 then goto L42b254;
  #L42b230.  v2.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L42b234.  v1:= v2.`io.reactivex.internal.observers.DisposableLambdaObserver.c` @type ^`io.reactivex.functions.Action` @kind object;
  #L42b238.  call `run`(v1) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L42b23e.  goto L42b24e;
  #L42b240.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42b242.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42b248.  call `onError`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42b24e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42b254.  return @kind void;
  catch `java.lang.Throwable` @[L42b234..L42b23e] goto L42b240;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.DisposableLambdaObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b1e0.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42b1e4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L42b1ea.  v0:= temp;
  #L42b1ec.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.DisposableLambdaObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42b274.  v0:= v2.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42b278.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42b27c.  if v0 == v1 then goto L42b28e;
  #L42b280.  v2.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L42b284.  v0:= v2.`io.reactivex.internal.observers.DisposableLambdaObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L42b288.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L42b28e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.DisposableLambdaObserver` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42b2a0.  v0:= v2.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42b2a4.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42b2a8.  if v0 == v1 then goto L42b2bc;
  #L42b2ac.  v2.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L42b2b0.  v0:= v2.`io.reactivex.internal.observers.DisposableLambdaObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L42b2b4.  call `onError`(v0, v3) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42b2ba.  goto L42b2c2;
  #L42b2bc.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42b2c2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.observers.DisposableLambdaObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b2d4.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L42b2d8.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L42b2de.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.DisposableLambdaObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/observers/DisposableLambdaObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b2f0.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42b2f4.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L42b2fa.  v0:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42b2fe.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42b304.  v0:= temp;
  #L42b306.  if v0 == 0 then goto L42b318;
  #L42b30a.  v1.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42b30e.  v2:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L42b312.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42b318.  return @kind void;
  #L42b31a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42b31c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42b322.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42b328.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42b32c.  v1.`io.reactivex.internal.observers.DisposableLambdaObserver.d` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42b330.  v2:= v1.`io.reactivex.internal.observers.DisposableLambdaObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L42b334.  call `error`(v0, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L42b33a.  return @kind void;
  catch `java.lang.Throwable` @[L42b2f0..L42b2fa] goto L42b31a;
}
