record `io.reactivex.internal.observers.CallbackCompletableObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `io.reactivex.functions.Consumer` @kind interface, `io.reactivex.observers.LambdaConsumerIntrospection` @kind interface {
  `io.reactivex.functions.Consumer` `io.reactivex.internal.observers.CallbackCompletableObserver.a` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.observers.CallbackCompletableObserver.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.observers.CallbackCompletableObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.observers.CallbackCompletableObserver` v0 @kind this, `io.reactivex.functions.Action` v1 @kind object) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.<init>:(Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42ac94.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L42ac9a.  v0.`io.reactivex.internal.observers.CallbackCompletableObserver.a` @type ^`io.reactivex.functions.Consumer` := v0 @kind object;
  #L42ac9e.  v0.`io.reactivex.internal.observers.CallbackCompletableObserver.b` @type ^`io.reactivex.functions.Action` := v1 @kind object;
  #L42aca2.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.observers.CallbackCompletableObserver` v0 @kind this, `io.reactivex.functions.Consumer` v1 @kind object, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42acb4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L42acba.  v0.`io.reactivex.internal.observers.CallbackCompletableObserver.a` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L42acbe.  v0.`io.reactivex.internal.observers.CallbackCompletableObserver.b` @type ^`io.reactivex.functions.Action` := v2 @kind object;
  #L42acc2.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.observers.CallbackCompletableObserver` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L42acd4.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L42acd8.  call `accept`(v0, v1) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.accept:(Ljava/lang/Throwable;)V` @kind virtual;
  #L42acde.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.observers.CallbackCompletableObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.accept:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42acf0.  v0:= new `io.reactivex.exceptions.OnErrorNotImplementedException`;
  #L42acf4.  call `<init>`(v0, v2) @signature `Lio/reactivex/exceptions/OnErrorNotImplementedException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L42acfa.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42ad00.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.CallbackCompletableObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L42ad14.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L42ad1a.  return @kind void;
}
procedure `boolean` `hasCustomOnError`(`io.reactivex.internal.observers.CallbackCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.hasCustomOnError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ac4c.  v0:= v1.`io.reactivex.internal.observers.CallbackCompletableObserver.a` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42ac50.  if v0 == v1 then goto L42ac58;
  #L42ac54.  v0:= 1I;
  #L42ac56.  goto L42ac5a;
  #L42ac58.  v0:= 0I;
  #L42ac5a.  return v0;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.CallbackCompletableObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42ac6c.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L42ac72.  v0:= temp @kind object;
  #L42ac74.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42ac78.  if v0 != v1 then goto L42ac80;
  #L42ac7c.  v0:= 1I;
  #L42ac7e.  goto L42ac82;
  #L42ac80.  v0:= 0I;
  #L42ac82.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.CallbackCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ad2c.  v0:= v1.`io.reactivex.internal.observers.CallbackCompletableObserver.b` @type ^`io.reactivex.functions.Action` @kind object;
  #L42ad30.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L42ad36.  goto L42ad46;
  #L42ad38.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42ad3a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42ad40.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42ad46.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42ad4a.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L42ad50.  return @kind void;
  catch `java.lang.Throwable` @[L42ad2c..L42ad36] goto L42ad38;
}
procedure `void` `onError`(`io.reactivex.internal.observers.CallbackCompletableObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ad70.  v0:= v1.`io.reactivex.internal.observers.CallbackCompletableObserver.a` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42ad74.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L42ad7a.  goto L42ad8a;
  #L42ad7c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42ad7e.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42ad84.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42ad8a.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42ad8e.  call `lazySet`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L42ad94.  return @kind void;
  catch `java.lang.Throwable` @[L42ad70..L42ad7a] goto L42ad7c;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.CallbackCompletableObserver` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L42adb4.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42adba.  return @kind void;
}
