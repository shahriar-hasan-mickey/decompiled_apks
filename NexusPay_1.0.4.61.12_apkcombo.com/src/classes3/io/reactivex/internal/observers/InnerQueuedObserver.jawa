record `io.reactivex.internal.observers.InnerQueuedObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.internal.observers.InnerQueuedObserverSupport` `io.reactivex.internal.observers.InnerQueuedObserver.a` @AccessFlag FINAL;
  `int` `io.reactivex.internal.observers.InnerQueuedObserver.b` @AccessFlag FINAL;
  `io.reactivex.internal.fuseable.SimpleQueue` `io.reactivex.internal.observers.InnerQueuedObserver.c` @AccessFlag ;
  `boolean` `io.reactivex.internal.observers.InnerQueuedObserver.d` @AccessFlag VOLATILE;
  `int` `io.reactivex.internal.observers.InnerQueuedObserver.e` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.observers.InnerQueuedObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.observers.InnerQueuedObserver` v0 @kind this, `io.reactivex.internal.observers.InnerQueuedObserverSupport` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.<init>:(Lio/reactivex/internal/observers/InnerQueuedObserverSupport;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42bbcc.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L42bbd2.  v0.`io.reactivex.internal.observers.InnerQueuedObserver.a` @type ^`io.reactivex.internal.observers.InnerQueuedObserverSupport` := v1 @kind object;
  #L42bbd6.  v0.`io.reactivex.internal.observers.InnerQueuedObserver.b` @type ^`int` := v2;
  #L42bbda.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.InnerQueuedObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L42bbec.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L42bbf2.  return @kind void;
}
procedure `int` `fusionMode`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.fusionMode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bb9c.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.e` @type ^`int`;
  #L42bba0.  return v0;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bb5c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L42bb62.  v0:= temp @kind object;
  #L42bb64.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L42bb68.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42bb6e.  v0:= temp;
  #L42bb70.  return v0;
}
procedure `boolean` `isDone`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bb84.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.d` @type ^`boolean` @kind boolean;
  #L42bb88.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bc04.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.a` @type ^`io.reactivex.internal.observers.InnerQueuedObserverSupport` @kind object;
  #L42bc08.  call `innerComplete`(v0, v1) @signature `Lio/reactivex/internal/observers/InnerQueuedObserverSupport;.innerComplete:(Lio/reactivex/internal/observers/InnerQueuedObserver;)V` @kind interface;
  #L42bc0e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bc20.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.a` @type ^`io.reactivex.internal.observers.InnerQueuedObserverSupport` @kind object;
  #L42bc24.  call `innerError`(v0, v1, v2) @signature `Lio/reactivex/internal/observers/InnerQueuedObserverSupport;.innerError:(Lio/reactivex/internal/observers/InnerQueuedObserver;Ljava/lang/Throwable;)V` @kind interface;
  #L42bc2a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bc3c.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.e` @type ^`int`;
  #L42bc40.  if v0 != 0 then goto L42bc50;
  #L42bc44.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.a` @type ^`io.reactivex.internal.observers.InnerQueuedObserverSupport` @kind object;
  #L42bc48.  call `innerNext`(v0, v1, v2) @signature `Lio/reactivex/internal/observers/InnerQueuedObserverSupport;.innerNext:(Lio/reactivex/internal/observers/InnerQueuedObserver;Ljava/lang/Object;)V` @kind interface;
  #L42bc4e.  goto L42bc5a;
  #L42bc50.  v2:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.a` @type ^`io.reactivex.internal.observers.InnerQueuedObserverSupport` @kind object;
  #L42bc54.  call `drain`(v2) @signature `Lio/reactivex/internal/observers/InnerQueuedObserverSupport;.drain:()V` @kind interface;
  #L42bc5a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.InnerQueuedObserver` v2 @kind this, `io.reactivex.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42bc6c.  call temp:= `setOnce`(v2, v3) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42bc72.  v0:= temp;
  #L42bc74.  if v0 == 0 then goto L42bcce;
  #L42bc78.  v0:= instanceof @variable v3 @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind boolean;
  #L42bc7c.  if v0 == 0 then goto L42bcbc;
  #L42bc80.  v3:= (`io.reactivex.internal.fuseable.QueueDisposable`) v3 @kind object;
  #L42bc84.  v0:= 3I;
  #L42bc86.  call temp:= `requestFusion`(v3, v0) @signature `Lio/reactivex/internal/fuseable/QueueFuseable;.requestFusion:(I)I` @kind interface;
  #L42bc8c.  v0:= temp;
  #L42bc8e.  v1:= 1I;
  #L42bc90.  if v0 != v1 then goto L42bcac;
  #L42bc94.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.e` @type ^`int` := v0;
  #L42bc98.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.c` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v3 @kind object;
  #L42bc9c.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.d` @type ^`boolean` := v1 @kind boolean;
  #L42bca0.  v3:= v2.`io.reactivex.internal.observers.InnerQueuedObserver.a` @type ^`io.reactivex.internal.observers.InnerQueuedObserverSupport` @kind object;
  #L42bca4.  call `innerComplete`(v3, v2) @signature `Lio/reactivex/internal/observers/InnerQueuedObserverSupport;.innerComplete:(Lio/reactivex/internal/observers/InnerQueuedObserver;)V` @kind interface;
  #L42bcaa.  return @kind void;
  #L42bcac.  v1:= 2I;
  #L42bcae.  if v0 != v1 then goto L42bcbc;
  #L42bcb2.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.e` @type ^`int` := v0;
  #L42bcb6.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.c` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v3 @kind object;
  #L42bcba.  return @kind void;
  #L42bcbc.  v3:= v2.`io.reactivex.internal.observers.InnerQueuedObserver.b` @type ^`int`;
  #L42bcc0.  v3:= -v3 @kind int;
  #L42bcc2.  call temp:= `createQueue`(v3) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.createQueue:(I)Lio/reactivex/internal/fuseable/SimpleQueue;` @kind static;
  #L42bcc8.  v3:= temp @kind object;
  #L42bcca.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.c` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v3 @kind object;
  #L42bcce.  return @kind void;
}
procedure `io.reactivex.internal.fuseable.SimpleQueue` `queue`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.queue:()Lio/reactivex/internal/fuseable/SimpleQueue;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bbb4.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.c` @type ^`io.reactivex.internal.fuseable.SimpleQueue` @kind object;
  #L42bbb8.  return v0 @kind object;
}
procedure `void` `setDone`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.setDone:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bce0.  v0:= 1I;
  #L42bce2.  v1.`io.reactivex.internal.observers.InnerQueuedObserver.d` @type ^`boolean` := v0 @kind boolean;
  #L42bce6.  return @kind void;
}
