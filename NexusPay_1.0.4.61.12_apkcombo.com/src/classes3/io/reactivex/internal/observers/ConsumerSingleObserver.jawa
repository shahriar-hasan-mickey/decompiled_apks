record `io.reactivex.internal.observers.ConsumerSingleObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `io.reactivex.observers.LambdaConsumerIntrospection` @kind interface {
  `io.reactivex.functions.Consumer` `io.reactivex.internal.observers.ConsumerSingleObserver.a` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.observers.ConsumerSingleObserver.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.observers.ConsumerSingleObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.observers.ConsumerSingleObserver` v0 @kind this, `io.reactivex.functions.Consumer` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42ae18.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L42ae1e.  v0.`io.reactivex.internal.observers.ConsumerSingleObserver.a` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L42ae22.  v0.`io.reactivex.internal.observers.ConsumerSingleObserver.b` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L42ae26.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.ConsumerSingleObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L42ae38.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L42ae3e.  return @kind void;
}
procedure `boolean` `hasCustomOnError`(`io.reactivex.internal.observers.ConsumerSingleObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.hasCustomOnError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42adcc.  v0:= v2.`io.reactivex.internal.observers.ConsumerSingleObserver.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42add0.  v1:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42add4.  if v0 == v1 then goto L42addc;
  #L42add8.  v0:= 1I;
  #L42adda.  goto L42adde;
  #L42addc.  v0:= 0I;
  #L42adde.  return v0;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.ConsumerSingleObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42adf0.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L42adf6.  v0:= temp @kind object;
  #L42adf8.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42adfc.  if v0 != v1 then goto L42ae04;
  #L42ae00.  v0:= 1I;
  #L42ae02.  goto L42ae06;
  #L42ae04.  v0:= 0I;
  #L42ae06.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.observers.ConsumerSingleObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42ae50.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42ae54.  call `lazySet`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L42ae5a.  v0:= v4.`io.reactivex.internal.observers.ConsumerSingleObserver.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42ae5e.  call `accept`(v0, v5) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L42ae64.  goto L42ae90;
  #L42ae66.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42ae68.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42ae6e.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L42ae72.  v2:= 2I;
  #L42ae74.  v2:= new `java.lang.Throwable`[v2];
  #L42ae78.  v3:= 0I;
  #L42ae7a.  v2[v3]:= v5 @kind object;
  #L42ae7e.  v5:= 1I;
  #L42ae80.  v2[v5]:= v0 @kind object;
  #L42ae84.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L42ae8a.  call `onError`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42ae90.  return @kind void;
  catch `java.lang.Throwable` @[L42ae5a..L42ae64] goto L42ae66;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.ConsumerSingleObserver` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L42aeb0.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42aeb6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.observers.ConsumerSingleObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42aec8.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42aecc.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L42aed2.  v0:= v1.`io.reactivex.internal.observers.ConsumerSingleObserver.a` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42aed6.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L42aedc.  goto L42aeec;
  #L42aede.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42aee0.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42aee6.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42aeec.  return @kind void;
  catch `java.lang.Throwable` @[L42aed2..L42aedc] goto L42aede;
}
