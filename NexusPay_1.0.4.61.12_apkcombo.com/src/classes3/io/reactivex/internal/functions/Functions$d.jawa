record `io.reactivex.internal.functions.Functions$d` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Function` @kind interface {
  `io.reactivex.functions.Function4` `io.reactivex.internal.functions.Functions$d.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.Functions$d` v0 @kind this, `io.reactivex.functions.Function4` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$d;.<init>:(Lio/reactivex/functions/Function4;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L428e38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L428e3e.  v0.`io.reactivex.internal.functions.Functions$d.a` @type ^`io.reactivex.functions.Function4` := v1 @kind object;
  #L428e42.  return @kind void;
}
procedure `java.lang.Object` `a`(`io.reactivex.internal.functions.Functions$d` v5 @kind this, `java.lang.Object`[] v6 @kind object) @signature `Lio/reactivex/internal/functions/Functions$d;.a:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L428dc8.  v0:= length @variable v6;
  #L428dca.  v1:= 4I;
  #L428dcc.  if v0 != v1 then goto L428df6;
  #L428dd0.  v0:= v5.`io.reactivex.internal.functions.Functions$d.a` @type ^`io.reactivex.functions.Function4` @kind object;
  #L428dd4.  v1:= 0I;
  #L428dd6.  v1:= v6[v1] @kind object;
  #L428dda.  v2:= 1I;
  #L428ddc.  v2:= v6[v2] @kind object;
  #L428de0.  v3:= 2I;
  #L428de2.  v3:= v6[v3] @kind object;
  #L428de6.  v4:= 3I;
  #L428de8.  v6:= v6[v4] @kind object;
  #L428dec.  call temp:= `apply`(v0, v1, v2, v3, v6) @signature `Lio/reactivex/functions/Function4;.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L428df2.  v6:= temp @kind object;
  #L428df4.  return v6 @kind object;
  #L428df6.  v0:= new `java.lang.IllegalArgumentException`;
  #L428dfa.  v1:= new `java.lang.StringBuilder`;
  #L428dfe.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L428e04.  v2:= "Array of size 4 expected but got " @kind object;
  #L428e08.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L428e0e.  v6:= length @variable v6;
  #L428e10.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L428e16.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L428e1c.  v6:= temp @kind object;
  #L428e1e.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L428e24.  throw v0;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.functions.Functions$d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$d;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L428da8.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L428dac.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/internal/functions/Functions$d;.a:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L428db2.  v1:= temp @kind object;
  #L428db4.  return v1 @kind object;
}
