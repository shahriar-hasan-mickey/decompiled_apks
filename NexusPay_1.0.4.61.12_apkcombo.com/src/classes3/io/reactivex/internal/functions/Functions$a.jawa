record `io.reactivex.internal.functions.Functions$a` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Consumer` @kind interface {
  `io.reactivex.functions.Action` `io.reactivex.internal.functions.Functions$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.Functions$a` v0 @kind this, `io.reactivex.functions.Action` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$a;.<init>:(Lio/reactivex/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L428c2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L428c32.  v0.`io.reactivex.internal.functions.Functions$a.a` @type ^`io.reactivex.functions.Action` := v1 @kind object;
  #L428c36.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.functions.Functions$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$a;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L428c48.  v1:= v0.`io.reactivex.internal.functions.Functions$a.a` @type ^`io.reactivex.functions.Action` @kind object;
  #L428c4c.  call `run`(v1) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L428c52.  return @kind void;
}
