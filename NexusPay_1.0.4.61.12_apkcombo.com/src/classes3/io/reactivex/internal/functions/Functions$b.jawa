record `io.reactivex.internal.functions.Functions$b` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Function` @kind interface {
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.functions.Functions$b.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.Functions$b` v0 @kind this, `io.reactivex.functions.BiFunction` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$b;.<init>:(Lio/reactivex/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L428ce8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L428cee.  v0.`io.reactivex.internal.functions.Functions$b.a` @type ^`io.reactivex.functions.BiFunction` := v1 @kind object;
  #L428cf2.  return @kind void;
}
procedure `java.lang.Object` `a`(`io.reactivex.internal.functions.Functions$b` v3 @kind this, `java.lang.Object`[] v4 @kind object) @signature `Lio/reactivex/internal/functions/Functions$b;.a:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L428c84.  v0:= length @variable v4;
  #L428c86.  v1:= 2I;
  #L428c88.  if v0 != v1 then goto L428ca6;
  #L428c8c.  v0:= v3.`io.reactivex.internal.functions.Functions$b.a` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L428c90.  v1:= 0I;
  #L428c92.  v1:= v4[v1] @kind object;
  #L428c96.  v2:= 1I;
  #L428c98.  v4:= v4[v2] @kind object;
  #L428c9c.  call temp:= `apply`(v0, v1, v4) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L428ca2.  v4:= temp @kind object;
  #L428ca4.  return v4 @kind object;
  #L428ca6.  v0:= new `java.lang.IllegalArgumentException`;
  #L428caa.  v1:= new `java.lang.StringBuilder`;
  #L428cae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L428cb4.  v2:= "Array of size 2 expected but got " @kind object;
  #L428cb8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L428cbe.  v4:= length @variable v4;
  #L428cc0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L428cc6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L428ccc.  v4:= temp @kind object;
  #L428cce.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L428cd4.  throw v0;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.functions.Functions$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$b;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L428c64.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L428c68.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/internal/functions/Functions$b;.a:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L428c6e.  v1:= temp @kind object;
  #L428c70.  return v1 @kind object;
}
