record `io.reactivex.internal.functions.Functions$x` @kind class @AccessFlag FINAL extends `java.util.concurrent.Callable` @kind interface, `io.reactivex.functions.Function` @kind interface {
  `java.lang.Object` `io.reactivex.internal.functions.Functions$x.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.Functions$x` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$x;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L429694.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42969a.  v0.`io.reactivex.internal.functions.Functions$x.a` @type ^`java.lang.Object` := v1 @kind object;
  #L42969e.  return @kind void;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.functions.Functions$x` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$x;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L429664.  v1:= v0.`io.reactivex.internal.functions.Functions$x.a` @type ^`java.lang.Object` @kind object;
  #L429668.  return v1 @kind object;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.functions.Functions$x` v1 @kind this) @signature `Lio/reactivex/internal/functions/Functions$x;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42967c.  v0:= v1.`io.reactivex.internal.functions.Functions$x.a` @type ^`java.lang.Object` @kind object;
  #L429680.  return v0 @kind object;
}
