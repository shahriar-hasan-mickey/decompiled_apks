record `io.reactivex.internal.functions.Functions$k0` @kind class @AccessFlag FINAL extends `io.reactivex.functions.BiConsumer` @kind interface {
  `io.reactivex.functions.Function` `io.reactivex.internal.functions.Functions$k0.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.functions.Functions$k0.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.functions.Functions$k0.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.Functions$k0` v0 @kind this, `io.reactivex.functions.Function` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/internal/functions/Functions$k0;.<init>:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L429adc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L429ae2.  v0.`io.reactivex.internal.functions.Functions$k0.a` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L429ae6.  v0.`io.reactivex.internal.functions.Functions$k0.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L429aea.  v0.`io.reactivex.internal.functions.Functions$k0.c` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L429aee.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.functions.Functions$k0` v2 @kind this, `java.util.Map` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/functions/Functions$k0;.a:(Ljava/util/Map;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L429b1c.  v0:= v2.`io.reactivex.internal.functions.Functions$k0.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L429b20.  call temp:= `apply`(v0, v4) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L429b26.  v0:= temp @kind object;
  #L429b28.  call temp:= `get`(v3, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L429b2e.  v1:= temp @kind object;
  #L429b30.  v1:= (`java.util.Collection`) v1 @kind object;
  #L429b34.  if v1 != 0 then goto L429b4e;
  #L429b38.  v1:= v2.`io.reactivex.internal.functions.Functions$k0.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L429b3c.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L429b42.  v1:= temp @kind object;
  #L429b44.  v1:= (`java.util.Collection`) v1 @kind object;
  #L429b48.  call temp:= `put`(v3, v0, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L429b4e.  v3:= v2.`io.reactivex.internal.functions.Functions$k0.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L429b52.  call temp:= `apply`(v3, v4) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L429b58.  v3:= temp @kind object;
  #L429b5a.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L429b60.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.functions.Functions$k0` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/functions/Functions$k0;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L429b00.  v1:= (`java.util.Map`) v1 @kind object;
  #L429b04.  call `a`(v0, v1, v2) @signature `Lio/reactivex/internal/functions/Functions$k0;.a:(Ljava/util/Map;Ljava/lang/Object;)V` @kind virtual;
  #L429b0a.  return @kind void;
}
