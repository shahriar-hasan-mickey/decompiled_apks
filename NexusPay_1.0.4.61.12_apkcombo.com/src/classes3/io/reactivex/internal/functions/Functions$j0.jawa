record `io.reactivex.internal.functions.Functions$j0` @kind class @AccessFlag FINAL extends `io.reactivex.functions.BiConsumer` @kind interface {
  `io.reactivex.functions.Function` `io.reactivex.internal.functions.Functions$j0.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.functions.Functions$j0.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.Functions$j0` v0 @kind this, `io.reactivex.functions.Function` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/functions/Functions$j0;.<init>:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L429a70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L429a76.  v0.`io.reactivex.internal.functions.Functions$j0.a` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L429a7a.  v0.`io.reactivex.internal.functions.Functions$j0.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L429a7e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.functions.Functions$j0` v2 @kind this, `java.util.Map` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/functions/Functions$j0;.a:(Ljava/util/Map;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L429aac.  v0:= v2.`io.reactivex.internal.functions.Functions$j0.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L429ab0.  call temp:= `apply`(v0, v4) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L429ab6.  v0:= temp @kind object;
  #L429ab8.  v1:= v2.`io.reactivex.internal.functions.Functions$j0.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L429abc.  call temp:= `apply`(v1, v4) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L429ac2.  v4:= temp @kind object;
  #L429ac4.  call temp:= `put`(v3, v0, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L429aca.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.functions.Functions$j0` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/functions/Functions$j0;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L429a90.  v1:= (`java.util.Map`) v1 @kind object;
  #L429a94.  call `a`(v0, v1, v2) @signature `Lio/reactivex/internal/functions/Functions$j0;.a:(Ljava/util/Map;Ljava/lang/Object;)V` @kind virtual;
  #L429a9a.  return @kind void;
}
