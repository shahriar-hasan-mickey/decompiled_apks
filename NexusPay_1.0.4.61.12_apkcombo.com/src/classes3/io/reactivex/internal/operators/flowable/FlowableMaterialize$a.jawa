record `io.reactivex.internal.operators.flowable.FlowableMaterialize$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.SinglePostCompleteSubscriber` @kind class {
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableMaterialize$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableMaterialize$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMaterialize$a;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L441bec.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L441bf2.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.flowable.FlowableMaterialize$a` v1 @kind this, `io.reactivex.Notification` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMaterialize$a;.a:(Lio/reactivex/Notification;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L441c24.  call temp:= `isOnError`(v2) @signature `Lio/reactivex/Notification;.isOnError:()Z` @kind virtual;
  #L441c2a.  v0:= temp;
  #L441c2c.  if v0 == 0 then goto L441c3e;
  #L441c30.  call temp:= `getError`(v2) @signature `Lio/reactivex/Notification;.getError:()Ljava/lang/Throwable;` @kind virtual;
  #L441c36.  v2:= temp @kind object;
  #L441c38.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L441c3e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableMaterialize$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableMaterialize$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441c04.  call temp:= `createOnComplete`() @signature `Lio/reactivex/Notification;.createOnComplete:()Lio/reactivex/Notification;` @kind static;
  #L441c0a.  v0:= temp @kind object;
  #L441c0c.  call `complete`(v1, v0) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L441c12.  return @kind void;
}
procedure `void` `onDrop`(`io.reactivex.internal.operators.flowable.FlowableMaterialize$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMaterialize$a;.onDrop:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L441c50.  v1:= (`io.reactivex.Notification`) v1 @kind object;
  #L441c54.  call `a`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableMaterialize$a;.a:(Lio/reactivex/Notification;)V` @kind virtual;
  #L441c5a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableMaterialize$a` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMaterialize$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L441c6c.  call temp:= `createOnError`(v1) @signature `Lio/reactivex/Notification;.createOnError:(Ljava/lang/Throwable;)Lio/reactivex/Notification;` @kind static;
  #L441c72.  v1:= temp @kind object;
  #L441c74.  call `complete`(v0, v1) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L441c7a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableMaterialize$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMaterialize$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L441c8c.  v0:= v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` @kind wide;
  #L441c90.  v2:= 1L;
  #L441c94.  v0:= v0 + v2 @kind long;
  #L441c96.  v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` := v0 @kind wide;
  #L441c9a.  v0:= v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L441c9e.  call temp:= `createOnNext`(v5) @signature `Lio/reactivex/Notification;.createOnNext:(Ljava/lang/Object;)Lio/reactivex/Notification;` @kind static;
  #L441ca4.  v5:= temp @kind object;
  #L441ca6.  call `onNext`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L441cac.  return @kind void;
}
