record `io.reactivex.internal.operators.flowable.FlowableCombineLatest` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `org.reactivestreams.Publisher`[] `io.reactivex.internal.operators.flowable.FlowableCombineLatest.b` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.flowable.FlowableCombineLatest.c` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableCombineLatest.d` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableCombineLatest.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableCombineLatest.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest;.<init>:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L434d58.  call `<init>`(v1) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L434d5e.  v0:= 0I;
  #L434d60.  v1.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.b` @type ^`org.reactivestreams.Publisher`[] := v0 @kind object;
  #L434d64.  v1.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.c` @type ^`java.lang.Iterable` := v2 @kind object;
  #L434d68.  v1.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.d` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L434d6c.  v1.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.e` @type ^`int` := v4;
  #L434d70.  v1.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.f` @type ^`boolean` := v5 @kind boolean;
  #L434d74.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest` v0 @kind this, `org.reactivestreams.Publisher`[] v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest;.<init>:([Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L434d88.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L434d8e.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.b` @type ^`org.reactivestreams.Publisher`[] := v1 @kind object;
  #L434d92.  v1:= 0I;
  #L434d94.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.c` @type ^`java.lang.Iterable` := v1 @kind object;
  #L434d98.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.d` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L434d9c.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.e` @type ^`int` := v3;
  #L434da0.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.f` @type ^`boolean` := v4 @kind boolean;
  #L434da4.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest` v9 @kind this, `org.reactivestreams.Subscriber` v10 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L434db8.  v0:= v9.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.b` @type ^`org.reactivestreams.Publisher`[] @kind object;
  #L434dbc.  v1:= 0I;
  #L434dbe.  if v0 != 0 then goto L434e62;
  #L434dc2.  v0:= 8I;
  #L434dc6.  v0:= new `org.reactivestreams.Publisher`[v0];
  #L434dca.  v2:= v9.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.c` @type ^`java.lang.Iterable` @kind object;
  #L434dce.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L434dd4.  v2:= temp @kind object;
  #L434dd6.  v3:= "The iterator returned is null" @kind object;
  #L434dda.  call temp:= `requireNonNull`(v2, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L434de0.  v2:= temp @kind object;
  #L434de2.  v2:= (`java.util.Iterator`) v2 @kind object;
  #L434de6.  v3:= 0I;
  #L434de8.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L434dee.  v4:= temp;
  #L434df0.  if v4 != 0 then goto L434df6;
  #L434df4.  goto L434e64;
  #L434df6.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L434dfc.  v4:= temp @kind object;
  #L434dfe.  v5:= "The publisher returned by the iterator is null" @kind object;
  #L434e02.  call temp:= `requireNonNull`(v4, v5) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L434e08.  v4:= temp @kind object;
  #L434e0a.  v4:= (`org.reactivestreams.Publisher`) v4 @kind object;
  #L434e0e.  v5:= length @variable v0;
  #L434e10.  if v3 != v5 then goto L434e26;
  #L434e14.  v5:= v3 ^> 2;
  #L434e18.  v5:= v5 + v3 @kind int;
  #L434e1a.  v5:= new `org.reactivestreams.Publisher`[v5];
  #L434e1e.  call `arraycopy`(v0, v1, v5, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L434e24.  v0:= v5 @kind object;
  #L434e26.  v5:= v3 + 1;
  #L434e2a.  v0[v3]:= v4 @kind object;
  #L434e2e.  v3:= v5;
  #L434e30.  goto L434de8;
  #L434e32.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L434e34.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L434e3a.  call `error`(v0, v10) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L434e40.  return @kind void;
  #L434e42.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L434e44.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L434e4a.  call `error`(v0, v10) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L434e50.  return @kind void;
  #L434e52.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L434e54.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L434e5a.  call `error`(v0, v10) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L434e60.  return @kind void;
  #L434e62.  v3:= length @variable v0;
  #L434e64.  v8:= v3;
  #L434e66.  if v8 != 0 then goto L434e72;
  #L434e6a.  call `complete`(v10) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L434e70.  return @kind void;
  #L434e72.  v2:= 1I;
  #L434e74.  if v8 != v2 then goto L434e98;
  #L434e78.  v0:= v0[v1] @kind object;
  #L434e7c.  v1:= new `io.reactivex.internal.operators.flowable.FlowableMap$b`;
  #L434e80.  v2:= new `io.reactivex.internal.operators.flowable.FlowableCombineLatest$c`;
  #L434e84.  call `<init>`(v2, v9) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$c;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableCombineLatest;)V` @kind direct;
  #L434e8a.  call `<init>`(v1, v10, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableMap$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)V` @kind direct;
  #L434e90.  call `subscribe`(v0, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L434e96.  return @kind void;
  #L434e98.  v1:= new `io.reactivex.internal.operators.flowable.FlowableCombineLatest$a`;
  #L434e9c.  v4:= v9.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.d` @type ^`io.reactivex.functions.Function` @kind object;
  #L434ea0.  v6:= v9.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.e` @type ^`int`;
  #L434ea4.  v7:= v9.`io.reactivex.internal.operators.flowable.FlowableCombineLatest.f` @type ^`boolean` @kind boolean;
  #L434ea8.  v2:= v1 @kind object;
  #L434eaa.  v3:= v10 @kind object;
  #L434eac.  v5:= v8;
  #L434eae.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;IIZ)V` @kind direct;
  #L434eb4.  call `onSubscribe`(v10, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L434eba.  call `l`(v1, v0, v8) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$a;.l:([Lorg/reactivestreams/Publisher;I)V` @kind virtual;
  #L434ec0.  return @kind void;
  catch `java.lang.Throwable` @[L434dca..L434de6] goto L434e52;
  catch `java.lang.Throwable` @[L434de8..L434df0] goto L434e42;
  catch `java.lang.Throwable` @[L434df6..L434e0e] goto L434e32;
}
