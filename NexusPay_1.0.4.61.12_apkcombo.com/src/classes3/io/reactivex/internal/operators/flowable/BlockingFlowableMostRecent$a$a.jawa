record `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.lang.Object` `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @AccessFlag PRIVATE;
  `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a` `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v0 @kind this, `io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.<init>:(Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L430648.  v0.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @type ^`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a` := v1 @kind object;
  #L43064c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L430652.  return @kind void;
}
procedure `boolean` `hasNext`(`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430584.  v0:= v1.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @type ^`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a` @kind object;
  #L430588.  v0:= v0.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a.b` @type ^`java.lang.Object` @kind object;
  #L43058c.  v1.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L430590.  call temp:= `isComplete`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L430596.  v0:= temp;
  #L430598.  v0:= v0 ^~ 1;
  #L43059c.  return v0;
}
procedure `java.lang.Object` `next`(`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4305b0.  v0:= 0I;
  #L4305b2.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4305b6.  if v1 != 0 then goto L4305c6;
  #L4305ba.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.b` @type ^`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a` @kind object;
  #L4305be.  v1:= v1.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a.b` @type ^`java.lang.Object` @kind object;
  #L4305c2.  v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L4305c6.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4305ca.  call temp:= `isComplete`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L4305d0.  v1:= temp;
  #L4305d2.  if v1 != 0 then goto L43060e;
  #L4305d6.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4305da.  call temp:= `isError`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L4305e0.  v1:= temp;
  #L4305e2.  if v1 != 0 then goto L4305f8;
  #L4305e6.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4305ea.  call temp:= `getValue`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.getValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4305f0.  v1:= temp @kind object;
  #L4305f2.  v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4305f6.  return v1 @kind object;
  #L4305f8.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L4305fc.  call temp:= `getError`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L430602.  v1:= temp @kind object;
  #L430604.  call temp:= `wrapOrThrow`(v1) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L43060a.  v1:= temp @kind object;
  #L43060c.  throw v1;
  #L43060e.  v1:= new `java.util.NoSuchElementException`;
  #L430612.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L430618.  throw v1;
  #L43061a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43061c.  v2.`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L430620.  throw v1;
  catch `java.lang.Throwable` @[L4305b2..L4305f2] goto L43061a;
  catch `java.lang.Throwable` @[L4305f8..L43061a] goto L43061a;
}
procedure `void` `remove`(`io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$a$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableMostRecent$a$a;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L430664.  v0:= new `java.lang.UnsupportedOperationException`;
  #L430668.  v1:= "Read only iterator" @kind object;
  #L43066c.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L430672.  throw v0;
}
