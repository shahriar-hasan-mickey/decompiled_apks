record `io.reactivex.internal.operators.flowable.FlowableLastSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.flowable.FlowableLastSingle$a.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableLastSingle$a.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @AccessFlag ;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableLastSingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$a;.<init>:(Lio/reactivex/SingleObserver;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L441350.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L441356.  v0.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L44135a.  v0.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L44135e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441370.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L441374.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L44137a.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L44137e.  v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L441382.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44132c.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L441330.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L441334.  if v0 != v1 then goto L44133c;
  #L441338.  v0:= 1I;
  #L44133a.  goto L44133e;
  #L44133c.  v0:= 0I;
  #L44133e.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L441394.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L441398.  v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L44139c.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.d` @type ^`java.lang.Object` @kind object;
  #L4413a0.  if v0 == 0 then goto L4413b6;
  #L4413a4.  v1:= 0I;
  #L4413a6.  v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.d` @type ^`java.lang.Object` := v1 @kind object;
  #L4413aa.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L4413ae.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4413b4.  goto L4413de;
  #L4413b6.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.b` @type ^`java.lang.Object` @kind object;
  #L4413ba.  if v0 == 0 then goto L4413ca;
  #L4413be.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L4413c2.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4413c8.  goto L4413de;
  #L4413ca.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L4413ce.  v1:= new `java.util.NoSuchElementException`;
  #L4413d2.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4413d8.  call `onError`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4413de.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4413f0.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4413f4.  v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L4413f8.  v0:= 0I;
  #L4413fa.  v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.d` @type ^`java.lang.Object` := v0 @kind object;
  #L4413fe.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L441402.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L441408.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L44141c.  v0.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.d` @type ^`java.lang.Object` := v1 @kind object;
  #L441420.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableLastSingle$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLastSingle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L441434.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L441438.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L44143e.  v0:= temp;
  #L441440.  if v0 == 0 then goto L441462;
  #L441444.  v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.c` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L441448.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLastSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44144c.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L441452.  v0:= 9223372036854775807L;
  #L44145c.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L441462.  return @kind void;
}
