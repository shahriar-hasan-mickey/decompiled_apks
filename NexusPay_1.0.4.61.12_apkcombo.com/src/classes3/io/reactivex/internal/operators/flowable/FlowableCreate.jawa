record `io.reactivex.internal.operators.flowable.FlowableCreate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `io.reactivex.FlowableOnSubscribe` `io.reactivex.internal.operators.flowable.FlowableCreate.b` @AccessFlag FINAL;
  `io.reactivex.BackpressureStrategy` `io.reactivex.internal.operators.flowable.FlowableCreate.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableCreate` v0 @kind this, `io.reactivex.FlowableOnSubscribe` v1 @kind object, `io.reactivex.BackpressureStrategy` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate;.<init>:(Lio/reactivex/FlowableOnSubscribe;Lio/reactivex/BackpressureStrategy;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L437648.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L43764e.  v0.`io.reactivex.internal.operators.flowable.FlowableCreate.b` @type ^`io.reactivex.FlowableOnSubscribe` := v1 @kind object;
  #L437652.  v0.`io.reactivex.internal.operators.flowable.FlowableCreate.c` @type ^`io.reactivex.BackpressureStrategy` := v2 @kind object;
  #L437656.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableCreate` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L437668.  v0:= `@@io.reactivex.internal.operators.flowable.FlowableCreate$a.a` @type ^`int`[] @kind object;
  #L43766c.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableCreate.c` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L437670.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L437676.  v1:= temp;
  #L437678.  v0:= v0[v1];
  #L43767c.  v1:= 1I;
  #L43767e.  if v0 == v1 then goto L4376cc;
  #L437682.  v1:= 2I;
  #L437684.  if v0 == v1 then goto L4376c0;
  #L437688.  v1:= 3I;
  #L43768a.  if v0 == v1 then goto L4376b4;
  #L43768e.  v1:= 4I;
  #L437690.  if v0 == v1 then goto L4376a8;
  #L437694.  v0:= new `io.reactivex.internal.operators.flowable.FlowableCreate$c`;
  #L437698.  call temp:= `bufferSize`() @signature `Lio/reactivex/Flowable;.bufferSize:()I` @kind static;
  #L43769e.  v1:= temp;
  #L4376a0.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$c;.<init>:(Lorg/reactivestreams/Subscriber;I)V` @kind direct;
  #L4376a6.  goto L4376d6;
  #L4376a8.  v0:= new `io.reactivex.internal.operators.flowable.FlowableCreate$f`;
  #L4376ac.  call `<init>`(v0, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$f;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4376b2.  goto L4376d6;
  #L4376b4.  v0:= new `io.reactivex.internal.operators.flowable.FlowableCreate$d`;
  #L4376b8.  call `<init>`(v0, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$d;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4376be.  goto L4376d6;
  #L4376c0.  v0:= new `io.reactivex.internal.operators.flowable.FlowableCreate$e`;
  #L4376c4.  call `<init>`(v0, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$e;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4376ca.  goto L4376d6;
  #L4376cc.  v0:= new `io.reactivex.internal.operators.flowable.FlowableCreate$g`;
  #L4376d0.  call `<init>`(v0, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$g;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4376d6.  call `onSubscribe`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L4376dc.  v3:= v2.`io.reactivex.internal.operators.flowable.FlowableCreate.b` @type ^`io.reactivex.FlowableOnSubscribe` @kind object;
  #L4376e0.  call `subscribe`(v3, v0) @signature `Lio/reactivex/FlowableOnSubscribe;.subscribe:(Lio/reactivex/FlowableEmitter;)V` @kind interface;
  #L4376e6.  goto L4376f6;
  #L4376e8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4376ea.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4376f0.  call `onError`(v0, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$b;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4376f6.  return @kind void;
  catch `java.lang.Throwable` @[L4376dc..L4376e6] goto L4376e8;
}
