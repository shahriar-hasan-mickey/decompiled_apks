record `io.reactivex.internal.operators.flowable.FlowableInternalHelper$l` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Consumer` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$l.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$l` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$l;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4402a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4402ae.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$l.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4402b2.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$l` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$l;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4402e0.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$l.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4402e4.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4402ea.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$l` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$l;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4402c4.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L4402c8.  call `a`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$l;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4402ce.  return @kind void;
}
