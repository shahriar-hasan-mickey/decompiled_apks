record `io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.SinglePostCompleteSubscriber` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$a.a` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnErrorReturn$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4446e8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4446ee.  v0.`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$a.a` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L4446f2.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnErrorReturn$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444704.  v0:= v1.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L444708.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L44470e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnErrorReturn$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L444720.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$a.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L444724.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L44472a.  v0:= temp @kind object;
  #L44472c.  v1:= "The valueSupplier returned a null value" @kind object;
  #L444730.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L444736.  v6:= temp @kind object;
  #L444738.  call `complete`(v5, v6) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L44473e.  return @kind void;
  #L444740.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L444742.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L444748.  v1:= v5.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44474c.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L444750.  v3:= 2I;
  #L444752.  v3:= new `java.lang.Throwable`[v3];
  #L444756.  v4:= 0I;
  #L444758.  v3[v4]:= v6 @kind object;
  #L44475c.  v6:= 1I;
  #L44475e.  v3[v6]:= v0 @kind object;
  #L444762.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L444768.  call `onError`(v1, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44476e.  return @kind void;
  catch `java.lang.Throwable` @[L444720..L444738] goto L444740;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnErrorReturn$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L44478c.  v0:= v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` @kind wide;
  #L444790.  v2:= 1L;
  #L444794.  v0:= v0 + v2 @kind long;
  #L444796.  v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` := v0 @kind wide;
  #L44479a.  v0:= v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44479e.  call `onNext`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4447a4.  return @kind void;
}
