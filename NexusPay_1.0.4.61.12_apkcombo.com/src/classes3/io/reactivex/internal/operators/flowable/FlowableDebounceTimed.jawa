record `io.reactivex.internal.operators.flowable.FlowableDebounceTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `long` `io.reactivex.internal.operators.flowable.FlowableDebounceTimed.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.flowable.FlowableDebounceTimed.c` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.flowable.FlowableDebounceTimed.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableDebounceTimed` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDebounceTimed;.<init>:(Lio/reactivex/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L437d5c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L437d62.  v0.`io.reactivex.internal.operators.flowable.FlowableDebounceTimed.b` @type ^`long` := v2 @kind wide;
  #L437d66.  v0.`io.reactivex.internal.operators.flowable.FlowableDebounceTimed.c` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L437d6a.  v0.`io.reactivex.internal.operators.flowable.FlowableDebounceTimed.d` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L437d6e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableDebounceTimed` v8 @kind this, `org.reactivestreams.Subscriber` v9 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDebounceTimed;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L437d80.  v0:= v8.`io.reactivex.internal.operators.flowable.a.source` @type ^`io.reactivex.Flowable` @kind object;
  #L437d84.  v7:= new `io.reactivex.internal.operators.flowable.FlowableDebounceTimed$b`;
  #L437d88.  v2:= new `io.reactivex.subscribers.SerializedSubscriber`;
  #L437d8c.  call `<init>`(v2, v9) @signature `Lio/reactivex/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L437d92.  v3:= v8.`io.reactivex.internal.operators.flowable.FlowableDebounceTimed.b` @type ^`long` @kind wide;
  #L437d96.  v5:= v8.`io.reactivex.internal.operators.flowable.FlowableDebounceTimed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L437d9a.  v9:= v8.`io.reactivex.internal.operators.flowable.FlowableDebounceTimed.d` @type ^`io.reactivex.Scheduler` @kind object;
  #L437d9e.  call temp:= `createWorker`(v9) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L437da4.  v6:= temp @kind object;
  #L437da6.  v1:= v7 @kind object;
  #L437da8.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableDebounceTimed$b;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;)V` @kind direct;
  #L437dae.  call `subscribe`(v0, v7) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L437db4.  return @kind void;
}
