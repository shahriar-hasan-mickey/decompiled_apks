record `io.reactivex.internal.operators.flowable.FlowableTimeout$d` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicLong` @kind class, `io.reactivex.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface, `io.reactivex.internal.operators.flowable.FlowableTimeout$c` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.internal.operators.flowable.FlowableTimeout$d.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableTimeout$d.b` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.flowable.FlowableTimeout$d.c` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.flowable.FlowableTimeout$d.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.internal.operators.flowable.FlowableTimeout$d.e` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableTimeout$d.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableTimeout$d` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$d;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44e45c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L44e462.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L44e466.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L44e46a.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L44e46e.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L44e474.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L44e478.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L44e47c.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L44e482.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.d` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L44e486.  v1:= new `java.util.concurrent.atomic.AtomicLong`;
  #L44e48a.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L44e490.  v0.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.e` @type ^`java.util.concurrent.atomic.AtomicLong` := v1 @kind object;
  #L44e494.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.flowable.FlowableTimeout$d` v2 @kind this, `long` v3 , `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$d;.a:(JLjava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44e69c.  v0:= 9223372036854775807L;
  #L44e6a6.  call temp:= `compareAndSet`(v2, v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L44e6ac.  v3:= temp;
  #L44e6ae.  if v3 == 0 then goto L44e6c8;
  #L44e6b2.  v3:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L44e6b6.  call temp:= `cancel`(v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L44e6bc.  v3:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44e6c0.  call `onError`(v3, v5) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44e6c6.  goto L44e6ce;
  #L44e6c8.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L44e6ce.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.flowable.FlowableTimeout$d` v2 @kind this, `long` v3 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$d;.b:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44e654.  v0:= 9223372036854775807L;
  #L44e65e.  call temp:= `compareAndSet`(v2, v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L44e664.  v3:= temp;
  #L44e666.  if v3 == 0 then goto L44e688;
  #L44e66a.  v3:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L44e66e.  call temp:= `cancel`(v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L44e674.  v3:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44e678.  v4:= new `java.util.concurrent.TimeoutException`;
  #L44e67c.  call `<init>`(v4) @signature `Ljava/util/concurrent/TimeoutException;.<init>:()V` @kind direct;
  #L44e682.  call `onError`(v3, v4) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44e688.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.operators.flowable.FlowableTimeout$d` v3 @kind this, `org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$d;.c:(Lorg/reactivestreams/Publisher;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L44e700.  if v4 == 0 then goto L44e728;
  #L44e704.  v0:= new `io.reactivex.internal.operators.flowable.FlowableTimeout$a`;
  #L44e708.  v1:= 0L;
  #L44e70c.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$a;.<init>:(JLio/reactivex/internal/operators/flowable/FlowableTimeout$c;)V` @kind direct;
  #L44e712.  v1:= v3.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L44e716.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L44e71c.  v1:= temp;
  #L44e71e.  if v1 == 0 then goto L44e728;
  #L44e722.  call `subscribe`(v4, v0) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L44e728.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableTimeout$d` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$d;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44e4a8.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L44e4ac.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L44e4b2.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L44e4b6.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L44e4bc.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableTimeout$d` v5 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$d;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L44e4d0.  v0:= 9223372036854775807L;
  #L44e4da.  call temp:= `getAndSet`(v5, v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L44e4e0.  v2:= temp @kind wide;
  #L44e4e2.  v4:= lcmp(v2, v0);
  #L44e4e6.  if v4 == 0 then goto L44e4fe;
  #L44e4ea.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L44e4ee.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L44e4f4.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44e4f8.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L44e4fe.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableTimeout$d` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$d;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L44e510.  v0:= 9223372036854775807L;
  #L44e51a.  call temp:= `getAndSet`(v5, v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L44e520.  v2:= temp @kind wide;
  #L44e522.  v4:= lcmp(v2, v0);
  #L44e526.  if v4 == 0 then goto L44e540;
  #L44e52a.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L44e52e.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L44e534.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44e538.  call `onError`(v0, v6) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44e53e.  goto L44e546;
  #L44e540.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L44e546.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableTimeout$d` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$d;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L44e558.  call temp:= `get`(v6) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L44e55e.  v0:= temp @kind wide;
  #L44e560.  v2:= 9223372036854775807L;
  #L44e56a.  v4:= lcmp(v0, v2);
  #L44e56e.  if v4 == 0 then goto L44e616;
  #L44e572.  v4:= 1L;
  #L44e576.  v4:= v4 + v0 @kind long;
  #L44e578.  call temp:= `compareAndSet`(v6, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L44e57e.  v0:= temp;
  #L44e580.  if v0 != 0 then goto L44e586;
  #L44e584.  goto L44e616;
  #L44e586.  v0:= v6.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L44e58a.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L44e590.  v0:= temp @kind object;
  #L44e592.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L44e596.  if v0 == 0 then goto L44e5a0;
  #L44e59a.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L44e5a0.  v0:= v6.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44e5a4.  call `onNext`(v0, v7) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L44e5aa.  v0:= v6.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L44e5ae.  call temp:= `apply`(v0, v7) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L44e5b4.  v7:= temp @kind object;
  #L44e5b6.  v0:= "The itemTimeoutIndicator returned a null Publisher." @kind object;
  #L44e5ba.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44e5c0.  v7:= temp @kind object;
  #L44e5c2.  v7:= (`org.reactivestreams.Publisher`) v7 @kind object;
  #L44e5c6.  v0:= new `io.reactivex.internal.operators.flowable.FlowableTimeout$a`;
  #L44e5ca.  call `<init>`(v0, v4, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$a;.<init>:(JLio/reactivex/internal/operators/flowable/FlowableTimeout$c;)V` @kind direct;
  #L44e5d0.  v1:= v6.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L44e5d4.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L44e5da.  v1:= temp;
  #L44e5dc.  if v1 == 0 then goto L44e5e6;
  #L44e5e0.  call `subscribe`(v7, v0) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L44e5e6.  return @kind void;
  #L44e5e8.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44e5ea.  call `throwIfFatal`(v7) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44e5f0.  v0:= v6.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L44e5f4.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L44e5fa.  v0:= temp @kind object;
  #L44e5fc.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L44e600.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L44e606.  call temp:= `getAndSet`(v6, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L44e60c.  v0:= v6.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44e610.  call `onError`(v0, v7) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44e616.  return @kind void;
  catch `java.lang.Throwable` @[L44e5aa..L44e5c6] goto L44e5e8;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableTimeout$d` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$d;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44e634.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L44e638.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.e` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L44e63c.  call temp:= `deferredSetOnce`(v0, v1, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L44e642.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.operators.flowable.FlowableTimeout$d` v2 @kind this, `long` v3 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableTimeout$d;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44e6e0.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L44e6e4.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableTimeout$d.e` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L44e6e8.  call `deferredRequest`(v0, v1, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V` @kind static;
  #L44e6ee.  return @kind void;
}
