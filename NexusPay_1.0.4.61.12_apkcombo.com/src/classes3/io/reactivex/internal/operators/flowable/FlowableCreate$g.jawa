record `io.reactivex.internal.operators.flowable.FlowableCreate$g` @kind class @AccessFlag FINAL extends `io.reactivex.internal.operators.flowable.FlowableCreate$b` @kind class {
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableCreate$g.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableCreate$g` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$g;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L437228.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$b;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L43722e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableCreate$g` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$g;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L437240.  call temp:= `isCancelled`(v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$b;.isCancelled:()Z` @kind virtual;
  #L437246.  v0:= temp;
  #L437248.  if v0 == 0 then goto L43724e;
  #L43724c.  return @kind void;
  #L43724e.  if v5 == 0 then goto L437286;
  #L437252.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableCreate$b.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L437256.  call `onNext`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L43725c.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L437262.  v0:= temp @kind wide;
  #L437264.  v2:= 0L;
  #L437268.  v5:= lcmp(v0, v2);
  #L43726c.  if v5 == 0 then goto L437284;
  #L437270.  v2:= 1L;
  #L437274.  v2:= v0 - v2 @kind long;
  #L437278.  call temp:= `compareAndSet`(v4, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L43727e.  v5:= temp;
  #L437280.  if v5 == 0 then goto L43725c;
  #L437284.  return @kind void;
  #L437286.  v5:= new `java.lang.NullPointerException`;
  #L43728a.  v0:= "onNext called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L43728e.  call `<init>`(v5, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L437294.  call `onError`(v4, v5) @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$b;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L43729a.  return @kind void;
}
