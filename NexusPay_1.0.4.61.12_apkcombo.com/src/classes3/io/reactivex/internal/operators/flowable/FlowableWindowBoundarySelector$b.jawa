record `io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$b` @kind class @AccessFlag FINAL extends `io.reactivex.subscribers.DisposableSubscriber` @kind class {
  `io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$c` `io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$b.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$b` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$c` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySelector$b;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySelector$c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L450550.  call `<init>`(v0) @signature `Lio/reactivex/subscribers/DisposableSubscriber;.<init>:()V` @kind direct;
  #L450556.  v0.`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$b.b` @type ^`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$c` := v1 @kind object;
  #L45055a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySelector$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45056c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$b.b` @type ^`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$c` @kind object;
  #L450570.  call `onComplete`(v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySelector$c;.onComplete:()V` @kind virtual;
  #L450576.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySelector$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L450588.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$b.b` @type ^`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$c` @kind object;
  #L45058c.  call `c`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySelector$c;.c:(Ljava/lang/Throwable;)V` @kind virtual;
  #L450592.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySelector$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4505a4.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$b.b` @type ^`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$c` @kind object;
  #L4505a8.  call `d`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySelector$c;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L4505ae.  return @kind void;
}
