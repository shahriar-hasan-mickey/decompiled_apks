record `io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.b` @AccessFlag FINAL;
  `io.reactivex.functions.LongConsumer` `io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.c` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.d` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.LongConsumer` v3 @kind object, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoOnLifecycle$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/LongConsumer;Lio/reactivex/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4399b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4399ba.  v0.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L4399be.  v0.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.b` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L4399c2.  v0.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.d` @type ^`io.reactivex.functions.Action` := v4 @kind object;
  #L4399c6.  v0.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.c` @type ^`io.reactivex.functions.LongConsumer` := v3 @kind object;
  #L4399ca.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoOnLifecycle$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4399dc.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L4399e0.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L4399e4.  if v0 == v1 then goto L439a0c;
  #L4399e8.  v2.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L4399ec.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.d` @type ^`io.reactivex.functions.Action` @kind object;
  #L4399f0.  call `run`(v1) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L4399f6.  goto L439a06;
  #L4399f8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4399fa.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L439a00.  call `onError`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L439a06.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L439a0c.  return @kind void;
  catch `java.lang.Throwable` @[L4399ec..L4399f6] goto L4399f8;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoOnLifecycle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L439a2c.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L439a30.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L439a34.  if v0 == v1 then goto L439a42;
  #L439a38.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L439a3c.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L439a42.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoOnLifecycle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L439a54.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L439a58.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L439a5c.  if v0 == v1 then goto L439a6c;
  #L439a60.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L439a64.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L439a6a.  goto L439a72;
  #L439a6c.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L439a72.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoOnLifecycle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L439a84.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L439a88.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L439a8e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoOnLifecycle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L439aa0.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L439aa4.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L439aaa.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L439aae.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L439ab4.  v0:= temp;
  #L439ab6.  if v0 == 0 then goto L439ac8;
  #L439aba.  v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L439abe.  v2:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L439ac2.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L439ac8.  return @kind void;
  #L439aca.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L439acc.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L439ad2.  call `cancel`(v2) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L439ad8.  v2:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L439adc.  v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L439ae0.  v2:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L439ae4.  call `error`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L439aea.  return @kind void;
  catch `java.lang.Throwable` @[L439aa0..L439aaa] goto L439aca;
}
procedure `void` `request`(`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoOnLifecycle$a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L439b08.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.c` @type ^`io.reactivex.functions.LongConsumer` @kind object;
  #L439b0c.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/LongConsumer;.accept:(J)V` @kind interface;
  #L439b12.  goto L439b22;
  #L439b14.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L439b16.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L439b1c.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L439b22.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$a.e` @type ^`org.reactivestreams.Subscription` @kind object;
  #L439b26.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L439b2c.  return @kind void;
  catch `java.lang.Throwable` @[L439b08..L439b12] goto L439b14;
}
