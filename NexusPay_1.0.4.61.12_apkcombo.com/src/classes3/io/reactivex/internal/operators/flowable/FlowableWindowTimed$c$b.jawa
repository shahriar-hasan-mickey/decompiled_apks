record `io.reactivex.internal.operators.flowable.FlowableWindowTimed$c$b` @kind class @AccessFlag FINAL {
  `io.reactivex.processors.UnicastProcessor` `io.reactivex.internal.operators.flowable.FlowableWindowTimed$c$b.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableWindowTimed$c$b.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableWindowTimed$c$b` v0 @kind this, `io.reactivex.processors.UnicastProcessor` v1 @kind object, `boolean` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowTimed$c$b;.<init>:(Lio/reactivex/processors/UnicastProcessor;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L451ca0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L451ca6.  v0.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$c$b.a` @type ^`io.reactivex.processors.UnicastProcessor` := v1 @kind object;
  #L451caa.  v0.`io.reactivex.internal.operators.flowable.FlowableWindowTimed$c$b.b` @type ^`boolean` := v2 @kind boolean;
  #L451cae.  return @kind void;
}
