record `io.reactivex.internal.operators.flowable.FlowableReplay$e$a` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Consumer` @kind interface {
  `io.reactivex.internal.subscribers.SubscriberResourceWrapper` `io.reactivex.internal.operators.flowable.FlowableReplay$e$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableReplay$e$a` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableReplay$e` v1 @kind object, `io.reactivex.internal.subscribers.SubscriberResourceWrapper` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReplay$e$a;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableReplay$e;Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4481ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4481b2.  v0.`io.reactivex.internal.operators.flowable.FlowableReplay$e$a.a` @type ^`io.reactivex.internal.subscribers.SubscriberResourceWrapper` := v2 @kind object;
  #L4481b6.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.flowable.FlowableReplay$e$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReplay$e$a;.a:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4481c8.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableReplay$e$a.a` @type ^`io.reactivex.internal.subscribers.SubscriberResourceWrapper` @kind object;
  #L4481cc.  call `setResource`(v0, v2) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.setResource:(Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L4481d2.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.operators.flowable.FlowableReplay$e$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReplay$e$a;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4481e4.  v1:= (`io.reactivex.disposables.Disposable`) v1 @kind object;
  #L4481e8.  call `a`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableReplay$e$a;.a:(Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L4481ee.  return @kind void;
}
