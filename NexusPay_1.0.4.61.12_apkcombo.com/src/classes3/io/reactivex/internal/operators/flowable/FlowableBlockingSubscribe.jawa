record `io.reactivex.internal.operators.flowable.FlowableBlockingSubscribe` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableBlockingSubscribe` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableBlockingSubscribe;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4316cc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4316d2.  v0:= new `java.lang.IllegalStateException`;
  #L4316d6.  v1:= "No instances!" @kind object;
  #L4316da.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4316e0.  throw v0;
}
procedure `void` `subscribe`(`org.reactivestreams.Publisher` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4316f4.  v0:= new `io.reactivex.internal.util.BlockingIgnoringReceiver`;
  #L4316f8.  call `<init>`(v0) @signature `Lio/reactivex/internal/util/BlockingIgnoringReceiver;.<init>:()V` @kind direct;
  #L4316fe.  v1:= new `io.reactivex.internal.subscribers.LambdaSubscriber`;
  #L431702.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L431708.  v2:= temp @kind object;
  #L43170a.  v3:= `@@io.reactivex.internal.functions.Functions.REQUEST_MAX` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L43170e.  call `<init>`(v1, v2, v0, v0, v3) @signature `Lio/reactivex/internal/subscribers/LambdaSubscriber;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L431714.  call `subscribe`(v4, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L43171a.  call `awaitForComplete`(v0, v1) @signature `Lio/reactivex/internal/util/BlockingHelper;.awaitForComplete:(Ljava/util/concurrent/CountDownLatch;Lio/reactivex/disposables/Disposable;)V` @kind static;
  #L431720.  v4:= v0.`io.reactivex.internal.util.BlockingIgnoringReceiver.error` @type ^`java.lang.Throwable` @kind object;
  #L431724.  if v4 != 0 then goto L43172a;
  #L431728.  return @kind void;
  #L43172a.  call temp:= `wrapOrThrow`(v4) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L431730.  v4:= temp @kind object;
  #L431732.  throw v4;
}
procedure `void` `subscribe`(`org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Consumer` v4 @kind object, `io.reactivex.functions.Action` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L431744.  v0:= "onNext is null" @kind object;
  #L431748.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43174e.  v0:= "onError is null" @kind object;
  #L431752.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L431758.  v0:= "onComplete is null" @kind object;
  #L43175c.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L431762.  v0:= new `io.reactivex.internal.subscribers.LambdaSubscriber`;
  #L431766.  v1:= `@@io.reactivex.internal.functions.Functions.REQUEST_MAX` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L43176a.  call `<init>`(v0, v3, v4, v5, v1) @signature `Lio/reactivex/internal/subscribers/LambdaSubscriber;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L431770.  call `subscribe`(v2, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L431776.  return @kind void;
}
procedure `void` `subscribe`(`org.reactivestreams.Publisher` v7 @kind object, `io.reactivex.functions.Consumer` v8 @kind object, `io.reactivex.functions.Consumer` v9 @kind object, `io.reactivex.functions.Action` v10 @kind object, `int` v11 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L431788.  v0:= "onNext is null" @kind object;
  #L43178c.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L431792.  v0:= "onError is null" @kind object;
  #L431796.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43179c.  v0:= "onComplete is null" @kind object;
  #L4317a0.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4317a6.  v0:= "number > 0 required" @kind object;
  #L4317aa.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4317b0.  v0:= new `io.reactivex.internal.subscribers.BoundedSubscriber`;
  #L4317b4.  call temp:= `boundedConsumer`(v11) @signature `Lio/reactivex/internal/functions/Functions;.boundedConsumer:(I)Lio/reactivex/functions/Consumer;` @kind static;
  #L4317ba.  v5:= temp @kind object;
  #L4317bc.  v1:= v0 @kind object;
  #L4317be.  v2:= v8 @kind object;
  #L4317c0.  v3:= v9 @kind object;
  #L4317c2.  v4:= v10 @kind object;
  #L4317c4.  v6:= v11;
  #L4317c6.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/subscribers/BoundedSubscriber;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;I)V` @kind direct;
  #L4317cc.  call `subscribe`(v7, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L4317d2.  return @kind void;
}
procedure `void` `subscribe`(`org.reactivestreams.Publisher` v3 @kind object, `org.reactivestreams.Subscriber` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableBlockingSubscribe;.subscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4317e4.  v0:= new `java.util.concurrent.LinkedBlockingQueue`;
  #L4317e8.  call `<init>`(v0) @signature `Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V` @kind direct;
  #L4317ee.  v1:= new `io.reactivex.internal.subscribers.BlockingSubscriber`;
  #L4317f2.  call `<init>`(v1, v0) @signature `Lio/reactivex/internal/subscribers/BlockingSubscriber;.<init>:(Ljava/util/Queue;)V` @kind direct;
  #L4317f8.  call `subscribe`(v3, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L4317fe.  call temp:= `isCancelled`(v1) @signature `Lio/reactivex/internal/subscribers/BlockingSubscriber;.isCancelled:()Z` @kind virtual;
  #L431804.  v3:= temp;
  #L431806.  if v3 == 0 then goto L43180c;
  #L43180a.  goto L431866;
  #L43180c.  call temp:= `poll`(v0) @signature `Ljava/util/concurrent/BlockingQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L431812.  v3:= temp @kind object;
  #L431814.  if v3 != 0 then goto L431834;
  #L431818.  call temp:= `isCancelled`(v1) @signature `Lio/reactivex/internal/subscribers/BlockingSubscriber;.isCancelled:()Z` @kind virtual;
  #L43181e.  v3:= temp;
  #L431820.  if v3 == 0 then goto L431826;
  #L431824.  goto L431866;
  #L431826.  call `verifyNonBlocking`() @signature `Lio/reactivex/internal/util/BlockingHelper;.verifyNonBlocking:()V` @kind static;
  #L43182c.  call temp:= `take`(v0) @signature `Ljava/util/concurrent/BlockingQueue;.take:()Ljava/lang/Object;` @kind interface;
  #L431832.  v3:= temp @kind object;
  #L431834.  call temp:= `isCancelled`(v1) @signature `Lio/reactivex/internal/subscribers/BlockingSubscriber;.isCancelled:()Z` @kind virtual;
  #L43183a.  v2:= temp;
  #L43183c.  if v2 == 0 then goto L431842;
  #L431840.  goto L431866;
  #L431842.  v2:= `@@io.reactivex.internal.subscribers.BlockingSubscriber.TERMINATED` @type ^`java.lang.Object` @kind object;
  #L431846.  if v3 == v2 then goto L431866;
  #L43184a.  call temp:= `acceptFull`(v3, v4) @signature `Lio/reactivex/internal/util/NotificationLite;.acceptFull:(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z` @kind static;
  #L431850.  v3:= temp;
  #L431852.  if v3 == 0 then goto L4317fe;
  #L431856.  goto L431866;
  #L431858.  v3:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L43185a.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscribers/BlockingSubscriber;.cancel:()V` @kind virtual;
  #L431860.  call `onError`(v4, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L431866.  return @kind void;
  catch `java.lang.InterruptedException` @[L4317fe..L431852] goto L431858;
}
