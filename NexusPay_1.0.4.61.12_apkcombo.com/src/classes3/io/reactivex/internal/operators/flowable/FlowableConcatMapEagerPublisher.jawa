record `io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.b` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.c` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.d` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.e` @AccessFlag FINAL;
  `io.reactivex.internal.util.ErrorMode` `io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `int` v3 , `int` v4 , `io.reactivex.internal.util.ErrorMode` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMapEagerPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;IILio/reactivex/internal/util/ErrorMode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43613c.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L436142.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.b` @type ^`org.reactivestreams.Publisher` := v1 @kind object;
  #L436146.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.c` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L43614a.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.d` @type ^`int` := v3;
  #L43614e.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.e` @type ^`int` := v4;
  #L436152.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.f` @type ^`io.reactivex.internal.util.ErrorMode` := v5 @kind object;
  #L436156.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher` v8 @kind this, `org.reactivestreams.Subscriber` v9 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMapEagerPublisher;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L436168.  v0:= v8.`io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L43616c.  v7:= new `io.reactivex.internal.operators.flowable.FlowableConcatMapEager$a`;
  #L436170.  v3:= v8.`io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L436174.  v4:= v8.`io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.d` @type ^`int`;
  #L436178.  v5:= v8.`io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.e` @type ^`int`;
  #L43617c.  v6:= v8.`io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher.f` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L436180.  v1:= v7 @kind object;
  #L436182.  v2:= v9 @kind object;
  #L436184.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMapEager$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;IILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L43618a.  call `subscribe`(v0, v7) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L436190.  return @kind void;
}
