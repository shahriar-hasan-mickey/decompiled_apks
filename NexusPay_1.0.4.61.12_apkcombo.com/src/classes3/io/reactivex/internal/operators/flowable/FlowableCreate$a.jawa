record `io.reactivex.internal.operators.flowable.FlowableCreate$a` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@io.reactivex.internal.operators.flowable.FlowableCreate$a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/flowable/FlowableCreate$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4369dc.  call temp:= `values`() @signature `Lio/reactivex/BackpressureStrategy;.values:()[Lio/reactivex/BackpressureStrategy;` @kind static;
  #L4369e2.  v0:= temp @kind object;
  #L4369e4.  v0:= length @variable v0;
  #L4369e6.  v0:= new `int`[v0];
  #L4369ea.  `@@io.reactivex.internal.operators.flowable.FlowableCreate$a.a` @type ^`int`[] := v0 @kind object;
  #L4369ee.  v1:= `@@io.reactivex.BackpressureStrategy.MISSING` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L4369f2.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4369f8.  v1:= temp;
  #L4369fa.  v2:= 1I;
  #L4369fc.  v0[v1]:= v2;
  #L436a00.  v0:= `@@io.reactivex.internal.operators.flowable.FlowableCreate$a.a` @type ^`int`[] @kind object;
  #L436a04.  v1:= `@@io.reactivex.BackpressureStrategy.ERROR` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L436a08.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L436a0e.  v1:= temp;
  #L436a10.  v2:= 2I;
  #L436a12.  v0[v1]:= v2;
  #L436a16.  v0:= `@@io.reactivex.internal.operators.flowable.FlowableCreate$a.a` @type ^`int`[] @kind object;
  #L436a1a.  v1:= `@@io.reactivex.BackpressureStrategy.DROP` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L436a1e.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L436a24.  v1:= temp;
  #L436a26.  v2:= 3I;
  #L436a28.  v0[v1]:= v2;
  #L436a2c.  v0:= `@@io.reactivex.internal.operators.flowable.FlowableCreate$a.a` @type ^`int`[] @kind object;
  #L436a30.  v1:= `@@io.reactivex.BackpressureStrategy.LATEST` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L436a34.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L436a3a.  v1:= temp;
  #L436a3c.  v2:= 4I;
  #L436a3e.  v0[v1]:= v2;
  #L436a42.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L4369ee..L436a00] goto L436a00;
  catch `java.lang.NoSuchFieldError` @[L436a00..L436a16] goto L436a16;
  catch `java.lang.NoSuchFieldError` @[L436a16..L436a2c] goto L436a2c;
  catch `java.lang.NoSuchFieldError` @[L436a2c..L436a42] goto L436a42;
}
