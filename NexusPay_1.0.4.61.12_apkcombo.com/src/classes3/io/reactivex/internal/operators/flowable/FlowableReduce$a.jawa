record `io.reactivex.internal.operators.flowable.FlowableReduce$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.DeferredScalarSubscription` @kind class, `io.reactivex.FlowableSubscriber` @kind interface {
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.flowable.FlowableReduce$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableReduce$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableReduce$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduce$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L446a14.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L446a1a.  v0.`io.reactivex.internal.operators.flowable.FlowableReduce$a.a` @type ^`io.reactivex.functions.BiFunction` := v2 @kind object;
  #L446a1e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableReduce$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduce$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L446a30.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L446a36.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L446a3a.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L446a40.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L446a44.  v1.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L446a48.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableReduce$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduce$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L446a5c.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L446a60.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L446a64.  if v0 != v1 then goto L446a6a;
  #L446a68.  return @kind void;
  #L446a6a.  v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L446a6e.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` @kind object;
  #L446a72.  if v0 == 0 then goto L446a7e;
  #L446a76.  call `complete`(v2, v0) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L446a7c.  goto L446a88;
  #L446a7e.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L446a82.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L446a88.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableReduce$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduce$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L446a9c.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L446aa0.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L446aa4.  if v0 != v1 then goto L446ab0;
  #L446aa8.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L446aae.  return @kind void;
  #L446ab0.  v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L446ab4.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L446ab8.  call `onError`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L446abe.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableReduce$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduce$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L446ad0.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L446ad4.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L446ad8.  if v0 != v1 then goto L446ade;
  #L446adc.  return @kind void;
  #L446ade.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` @kind object;
  #L446ae2.  if v0 != 0 then goto L446aec;
  #L446ae6.  v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` := v3 @kind object;
  #L446aea.  goto L446b22;
  #L446aec.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.a` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L446af0.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L446af6.  v3:= temp @kind object;
  #L446af8.  v0:= "The reducer returned a null value" @kind object;
  #L446afc.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L446b02.  v3:= temp @kind object;
  #L446b04.  v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` := v3 @kind object;
  #L446b08.  goto L446b22;
  #L446b0a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L446b0c.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L446b12.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L446b16.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L446b1c.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduce$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L446b22.  return @kind void;
  catch `java.lang.Throwable` @[L446aec..L446b08] goto L446b0a;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableReduce$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReduce$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L446b40.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L446b44.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L446b4a.  v0:= temp;
  #L446b4c.  if v0 == 0 then goto L446b6e;
  #L446b50.  v2.`io.reactivex.internal.operators.flowable.FlowableReduce$a.b` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L446b54.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L446b58.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L446b5e.  v0:= 9223372036854775807L;
  #L446b68.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L446b6e.  return @kind void;
}
