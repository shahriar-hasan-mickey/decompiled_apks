record `io.reactivex.internal.operators.flowable.FlowableMapNotification$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.SinglePostCompleteSubscriber` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableMapNotification$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableMapNotification$a.b` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.flowable.FlowableMapNotification$a.c` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableMapNotification$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableMapNotification$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L441998.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L44199e.  v0.`io.reactivex.internal.operators.flowable.FlowableMapNotification$a.a` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L4419a2.  v0.`io.reactivex.internal.operators.flowable.FlowableMapNotification$a.b` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L4419a6.  v0.`io.reactivex.internal.operators.flowable.FlowableMapNotification$a.c` @type ^`java.util.concurrent.Callable` := v4 @kind object;
  #L4419aa.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableMapNotification$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4419bc.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableMapNotification$a.c` @type ^`java.util.concurrent.Callable` @kind object;
  #L4419c0.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L4419c6.  v0:= temp @kind object;
  #L4419c8.  v1:= "The onComplete publisher returned is null" @kind object;
  #L4419cc.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4419d2.  v0:= temp @kind object;
  #L4419d4.  call `complete`(v2, v0) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4419da.  return @kind void;
  #L4419dc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4419de.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4419e4.  v1:= v2.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4419e8.  call `onError`(v1, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4419ee.  return @kind void;
  catch `java.lang.Throwable` @[L4419bc..L4419d4] goto L4419dc;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableMapNotification$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L441a0c.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableMapNotification$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L441a10.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L441a16.  v0:= temp @kind object;
  #L441a18.  v1:= "The onError publisher returned is null" @kind object;
  #L441a1c.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L441a22.  v6:= temp @kind object;
  #L441a24.  call `complete`(v5, v6) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L441a2a.  return @kind void;
  #L441a2c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L441a2e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L441a34.  v1:= v5.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L441a38.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L441a3c.  v3:= 2I;
  #L441a3e.  v3:= new `java.lang.Throwable`[v3];
  #L441a42.  v4:= 0I;
  #L441a44.  v3[v4]:= v6 @kind object;
  #L441a48.  v6:= 1I;
  #L441a4a.  v3[v6]:= v0 @kind object;
  #L441a4e.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L441a54.  call `onError`(v1, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L441a5a.  return @kind void;
  catch `java.lang.Throwable` @[L441a0c..L441a24] goto L441a2c;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableMapNotification$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMapNotification$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L441a78.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableMapNotification$a.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L441a7c.  call temp:= `apply`(v0, v5) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L441a82.  v5:= temp @kind object;
  #L441a84.  v0:= "The onNext publisher returned is null" @kind object;
  #L441a88.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L441a8e.  v5:= temp @kind object;
  #L441a90.  v0:= v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` @kind wide;
  #L441a94.  v2:= 1L;
  #L441a98.  v0:= v0 + v2 @kind long;
  #L441a9a.  v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` := v0 @kind wide;
  #L441a9e.  v0:= v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L441aa2.  call `onNext`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L441aa8.  return @kind void;
  #L441aaa.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L441aac.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L441ab2.  v0:= v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L441ab6.  call `onError`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L441abc.  return @kind void;
  catch `java.lang.Throwable` @[L441a78..L441a90] goto L441aaa;
}
