record `io.reactivex.internal.operators.flowable.FlowableElementAt$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.DeferredScalarSubscription` @kind class, `io.reactivex.FlowableSubscriber` @kind interface {
  `long` `io.reactivex.internal.operators.flowable.FlowableElementAt$a.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableElementAt$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableElementAt$a.c` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableElementAt$a.d` @AccessFlag ;
  `long` `io.reactivex.internal.operators.flowable.FlowableElementAt$a.e` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableElementAt$a.f` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableElementAt$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableElementAt$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$a;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/lang/Object;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L439ba4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L439baa.  v0.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.a` @type ^`long` := v2 @kind wide;
  #L439bae.  v0.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.b` @type ^`java.lang.Object` := v4 @kind object;
  #L439bb2.  v0.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.c` @type ^`boolean` := v5 @kind boolean;
  #L439bb6.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableElementAt$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L439bc8.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L439bce.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L439bd2.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L439bd8.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableElementAt$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L439bec.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` @kind boolean;
  #L439bf0.  if v0 != 0 then goto L439c32;
  #L439bf4.  v0:= 1I;
  #L439bf6.  v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` := v0 @kind boolean;
  #L439bfa.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.b` @type ^`java.lang.Object` @kind object;
  #L439bfe.  if v0 != 0 then goto L439c2c;
  #L439c02.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.c` @type ^`boolean` @kind boolean;
  #L439c06.  if v0 == 0 then goto L439c20;
  #L439c0a.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L439c0e.  v1:= new `java.util.NoSuchElementException`;
  #L439c12.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L439c18.  call `onError`(v0, v1) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L439c1e.  goto L439c32;
  #L439c20.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L439c24.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L439c2a.  goto L439c32;
  #L439c2c.  call `complete`(v2, v0) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L439c32.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableElementAt$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L439c44.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` @kind boolean;
  #L439c48.  if v0 == 0 then goto L439c54;
  #L439c4c.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L439c52.  return @kind void;
  #L439c54.  v0:= 1I;
  #L439c56.  v1.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` := v0 @kind boolean;
  #L439c5a.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L439c5e.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L439c64.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableElementAt$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L439c78.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` @kind boolean;
  #L439c7c.  if v0 == 0 then goto L439c82;
  #L439c80.  return @kind void;
  #L439c82.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.e` @type ^`long` @kind wide;
  #L439c86.  v2:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.a` @type ^`long` @kind wide;
  #L439c8a.  v4:= lcmp(v0, v2);
  #L439c8e.  if v4 != 0 then goto L439caa;
  #L439c92.  v0:= 1I;
  #L439c94.  v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.f` @type ^`boolean` := v0 @kind boolean;
  #L439c98.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L439c9c.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L439ca2.  call `complete`(v5, v6) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L439ca8.  return @kind void;
  #L439caa.  v2:= 1L;
  #L439cae.  v0:= v0 + v2 @kind long;
  #L439cb0.  v5.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.e` @type ^`long` := v0 @kind wide;
  #L439cb4.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableElementAt$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAt$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L439cc8.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.d` @type ^`org.reactivestreams.Subscription` @kind object;
  #L439ccc.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L439cd2.  v0:= temp;
  #L439cd4.  if v0 == 0 then goto L439cf6;
  #L439cd8.  v2.`io.reactivex.internal.operators.flowable.FlowableElementAt$a.d` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L439cdc.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L439ce0.  call `onSubscribe`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L439ce6.  v0:= 9223372036854775807L;
  #L439cf0.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L439cf6.  return @kind void;
}
