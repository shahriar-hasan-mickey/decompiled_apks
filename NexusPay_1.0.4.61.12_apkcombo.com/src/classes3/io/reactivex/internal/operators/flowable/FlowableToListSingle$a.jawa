record `io.reactivex.internal.operators.flowable.FlowableToListSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.flowable.FlowableToListSingle$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableToListSingle$a.b` @AccessFlag ;
  `java.util.Collection` `io.reactivex.internal.operators.flowable.FlowableToListSingle$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableToListSingle$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableToListSingle$a;.<init>:(Lio/reactivex/SingleObserver;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44f084.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44f08a.  v0.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L44f08e.  v0.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.c` @type ^`java.util.Collection` := v2 @kind object;
  #L44f092.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.flowable.FlowableToListSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableToListSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44f0a4.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L44f0a8.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L44f0ae.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L44f0b2.  v1.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L44f0b6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.flowable.FlowableToListSingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableToListSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44f060.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L44f064.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L44f068.  if v0 != v1 then goto L44f070;
  #L44f06c.  v0:= 1I;
  #L44f06e.  goto L44f072;
  #L44f070.  v0:= 0I;
  #L44f072.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableToListSingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableToListSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44f0c8.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L44f0cc.  v2.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L44f0d0.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44f0d4.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.c` @type ^`java.util.Collection` @kind object;
  #L44f0d8.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L44f0de.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableToListSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableToListSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44f0f0.  v0:= 0I;
  #L44f0f2.  v1.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.c` @type ^`java.util.Collection` := v0 @kind object;
  #L44f0f6.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L44f0fa.  v1.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.b` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L44f0fe.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44f102.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L44f108.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableToListSingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableToListSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44f11c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.c` @type ^`java.util.Collection` @kind object;
  #L44f120.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L44f126.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableToListSingle$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableToListSingle$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44f138.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L44f13c.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L44f142.  v0:= temp;
  #L44f144.  if v0 == 0 then goto L44f166;
  #L44f148.  v2.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.b` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L44f14c.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableToListSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L44f150.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L44f156.  v0:= 9223372036854775807L;
  #L44f160.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L44f166.  return @kind void;
}
