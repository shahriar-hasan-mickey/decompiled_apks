record `io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector.b` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector.c` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `org.reactivestreams.Publisher` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySelector;.<init>:(Lio/reactivex/Flowable;Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L450bb0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L450bb6.  v0.`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector.b` @type ^`org.reactivestreams.Publisher` := v2 @kind object;
  #L450bba.  v0.`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector.c` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L450bbe.  v0.`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector.d` @type ^`int` := v4;
  #L450bc2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySelector;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L450bd4.  v0:= v5.`io.reactivex.internal.operators.flowable.a.source` @type ^`io.reactivex.Flowable` @kind object;
  #L450bd8.  v1:= new `io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$c`;
  #L450bdc.  v2:= new `io.reactivex.subscribers.SerializedSubscriber`;
  #L450be0.  call `<init>`(v2, v6) @signature `Lio/reactivex/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L450be6.  v6:= v5.`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L450bea.  v3:= v5.`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L450bee.  v4:= v5.`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector.d` @type ^`int`;
  #L450bf2.  call `<init>`(v1, v2, v6, v3, v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySelector$c;.<init>:(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;I)V` @kind direct;
  #L450bf8.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L450bfe.  return @kind void;
}
