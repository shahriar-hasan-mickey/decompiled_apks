record `io.reactivex.internal.operators.flowable.FlowableConcatMap$g` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicBoolean` @kind class, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.internal.operators.flowable.FlowableConcatMap$g.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.flowable.FlowableConcatMap$g.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableConcatMap$g` v0 @kind this, `java.lang.Object` v1 @kind object, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$g;.<init>:(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L435b14.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L435b1a.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMap$g.b` @type ^`java.lang.Object` := v1 @kind object;
  #L435b1e.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMap$g.a` @type ^`org.reactivestreams.Subscriber` := v2 @kind object;
  #L435b22.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableConcatMap$g` v0 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$g;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L435b34.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.operators.flowable.FlowableConcatMap$g` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$g;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L435b48.  v0:= 0L;
  #L435b4c.  v2:= lcmp(v4, v0);
  #L435b50.  if v2 <= 0 then goto L435b78;
  #L435b54.  v4:= 0I;
  #L435b56.  v5:= 1I;
  #L435b58.  call temp:= `compareAndSet`(v3, v4, v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L435b5e.  v4:= temp;
  #L435b60.  if v4 == 0 then goto L435b78;
  #L435b64.  v4:= v3.`io.reactivex.internal.operators.flowable.FlowableConcatMap$g.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L435b68.  v5:= v3.`io.reactivex.internal.operators.flowable.FlowableConcatMap$g.b` @type ^`java.lang.Object` @kind object;
  #L435b6c.  call `onNext`(v4, v5) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L435b72.  call `onComplete`(v4) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L435b78.  return @kind void;
}
