record `io.reactivex.internal.operators.flowable.FlowableInternalHelper$m` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Consumer` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$m.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$m` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$m;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4402fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L440302.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$m.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L440306.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$m` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$m;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L440318.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$m.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L44031c.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L440322.  return @kind void;
}
