record `io.reactivex.internal.operators.flowable.BlockingFlowableLatest` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Iterable` @kind interface {
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.flowable.BlockingFlowableLatest.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.BlockingFlowableLatest` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableLatest;.<init>:(Lorg/reactivestreams/Publisher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L430568.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43056e.  v0.`io.reactivex.internal.operators.flowable.BlockingFlowableLatest.a` @type ^`org.reactivestreams.Publisher` := v1 @kind object;
  #L430572.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`io.reactivex.internal.operators.flowable.BlockingFlowableLatest` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableLatest;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L430530.  v0:= new `io.reactivex.internal.operators.flowable.BlockingFlowableLatest$a`;
  #L430534.  call `<init>`(v0) @signature `Lio/reactivex/internal/operators/flowable/BlockingFlowableLatest$a;.<init>:()V` @kind direct;
  #L43053a.  v1:= v2.`io.reactivex.internal.operators.flowable.BlockingFlowableLatest.a` @type ^`org.reactivestreams.Publisher` @kind object;
  #L43053e.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L430544.  v1:= temp @kind object;
  #L430546.  call temp:= `materialize`(v1) @signature `Lio/reactivex/Flowable;.materialize:()Lio/reactivex/Flowable;` @kind virtual;
  #L43054c.  v1:= temp @kind object;
  #L43054e.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L430554.  return v0 @kind object;
}
