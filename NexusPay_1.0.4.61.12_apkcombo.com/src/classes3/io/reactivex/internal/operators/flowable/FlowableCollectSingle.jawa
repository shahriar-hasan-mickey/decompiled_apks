record `io.reactivex.internal.operators.flowable.FlowableCollectSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class, `io.reactivex.internal.fuseable.FuseToFlowable` @kind interface {
  `io.reactivex.Flowable` `io.reactivex.internal.operators.flowable.FlowableCollectSingle.a` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.flowable.FlowableCollectSingle.b` @AccessFlag FINAL;
  `io.reactivex.functions.BiConsumer` `io.reactivex.internal.operators.flowable.FlowableCollectSingle.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableCollectSingle` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCollectSingle;.<init>:(Lio/reactivex/Flowable;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L434548.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L43454e.  v0.`io.reactivex.internal.operators.flowable.FlowableCollectSingle.a` @type ^`io.reactivex.Flowable` := v1 @kind object;
  #L434552.  v0.`io.reactivex.internal.operators.flowable.FlowableCollectSingle.b` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L434556.  v0.`io.reactivex.internal.operators.flowable.FlowableCollectSingle.c` @type ^`io.reactivex.functions.BiConsumer` := v3 @kind object;
  #L43455a.  return @kind void;
}
procedure `io.reactivex.Flowable` `fuseToFlowable`(`io.reactivex.internal.operators.flowable.FlowableCollectSingle` v4 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableCollectSingle;.fuseToFlowable:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L434518.  v0:= new `io.reactivex.internal.operators.flowable.FlowableCollect`;
  #L43451c.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableCollectSingle.a` @type ^`io.reactivex.Flowable` @kind object;
  #L434520.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableCollectSingle.b` @type ^`java.util.concurrent.Callable` @kind object;
  #L434524.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableCollectSingle.c` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L434528.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableCollect;.<init>:(Lio/reactivex/Flowable;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L43452e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L434534.  v0:= temp @kind object;
  #L434536.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableCollectSingle` v4 @kind this, `io.reactivex.SingleObserver` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCollectSingle;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43456c.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableCollectSingle.b` @type ^`java.util.concurrent.Callable` @kind object;
  #L434570.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L434576.  v0:= temp @kind object;
  #L434578.  v1:= "The initialSupplier returned a null value" @kind object;
  #L43457c.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L434582.  v0:= temp @kind object;
  #L434584.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableCollectSingle.a` @type ^`io.reactivex.Flowable` @kind object;
  #L434588.  v2:= new `io.reactivex.internal.operators.flowable.FlowableCollectSingle$a`;
  #L43458c.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableCollectSingle.c` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L434590.  call `<init>`(v2, v5, v0, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableCollectSingle$a;.<init>:(Lio/reactivex/SingleObserver;Ljava/lang/Object;Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L434596.  call `subscribe`(v1, v2) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L43459c.  return @kind void;
  #L43459e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4345a0.  call `error`(v0, v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/SingleObserver;)V` @kind static;
  #L4345a6.  return @kind void;
  catch `java.lang.Throwable` @[L43456c..L434584] goto L43459e;
}
