record `io.reactivex.internal.operators.flowable.FlowableReplay$k` @kind class @AccessFlag FINAL extends `java.util.concurrent.Callable` @kind interface {
  `int` `io.reactivex.internal.operators.flowable.FlowableReplay$k.a` @AccessFlag PRIVATE_FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableReplay$k.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.flowable.FlowableReplay$k.c` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.flowable.FlowableReplay$k.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableReplay$k` v0 @kind this, `int` v1 , `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableReplay$k;.<init>:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44885c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L448862.  v0.`io.reactivex.internal.operators.flowable.FlowableReplay$k.a` @type ^`int` := v1;
  #L448866.  v0.`io.reactivex.internal.operators.flowable.FlowableReplay$k.b` @type ^`long` := v2 @kind wide;
  #L44886a.  v0.`io.reactivex.internal.operators.flowable.FlowableReplay$k.c` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L44886e.  v0.`io.reactivex.internal.operators.flowable.FlowableReplay$k.d` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L448872.  return @kind void;
}
procedure `io.reactivex.internal.operators.flowable.FlowableReplay$g` `a`(`io.reactivex.internal.operators.flowable.FlowableReplay$k` v7 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableReplay$k;.a:()Lio/reactivex/internal/operators/flowable/FlowableReplay$g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L448810.  v6:= new `io.reactivex.internal.operators.flowable.FlowableReplay$l`;
  #L448814.  v1:= v7.`io.reactivex.internal.operators.flowable.FlowableReplay$k.a` @type ^`int`;
  #L448818.  v2:= v7.`io.reactivex.internal.operators.flowable.FlowableReplay$k.b` @type ^`long` @kind wide;
  #L44881c.  v4:= v7.`io.reactivex.internal.operators.flowable.FlowableReplay$k.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L448820.  v5:= v7.`io.reactivex.internal.operators.flowable.FlowableReplay$k.d` @type ^`io.reactivex.Scheduler` @kind object;
  #L448824.  v0:= v6 @kind object;
  #L448826.  call `<init>`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/flowable/FlowableReplay$l;.<init>:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L44882c.  return v6 @kind object;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.operators.flowable.FlowableReplay$k` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableReplay$k;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L448840.  call temp:= `a`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableReplay$k;.a:()Lio/reactivex/internal/operators/flowable/FlowableReplay$g;` @kind virtual;
  #L448846.  v0:= temp @kind object;
  #L448848.  return v0 @kind object;
}
