record `io.reactivex.internal.operators.flowable.FlowableScalarXMap` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableScalarXMap` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableScalarXMap;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L449e08.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L449e0e.  v0:= new `java.lang.IllegalStateException`;
  #L449e12.  v1:= "No instances!" @kind object;
  #L449e16.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L449e1c.  throw v0;
}
procedure `io.reactivex.Flowable` `scalarXMap`(`java.lang.Object` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L449de4.  v0:= new `io.reactivex.internal.operators.flowable.FlowableScalarXMap$a`;
  #L449de8.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableScalarXMap$a;.<init>:(Ljava/lang/Object;Lio/reactivex/functions/Function;)V` @kind direct;
  #L449dee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L449df4.  v1:= temp @kind object;
  #L449df6.  return v1 @kind object;
}
procedure `boolean` `tryScalarXMapSubscribe`(`org.reactivestreams.Publisher` v1 @kind object, `org.reactivestreams.Subscriber` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableScalarXMap;.tryScalarXMapSubscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L449d0c.  v0:= instanceof @variable v1 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L449d10.  if v0 == 0 then goto L449db0;
  #L449d14.  v0:= 1I;
  #L449d16.  v1:= (`java.util.concurrent.Callable`) v1 @kind object;
  #L449d1a.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L449d20.  v1:= temp @kind object;
  #L449d22.  if v1 != 0 then goto L449d2e;
  #L449d26.  call `complete`(v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L449d2c.  return v0;
  #L449d2e.  call temp:= `apply`(v3, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L449d34.  v1:= temp @kind object;
  #L449d36.  v3:= "The mapper returned a null Publisher" @kind object;
  #L449d3a.  call temp:= `requireNonNull`(v1, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L449d40.  v1:= temp @kind object;
  #L449d42.  v1:= (`org.reactivestreams.Publisher`) v1 @kind object;
  #L449d46.  v3:= instanceof @variable v1 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L449d4a.  if v3 == 0 then goto L449d88;
  #L449d4e.  v1:= (`java.util.concurrent.Callable`) v1 @kind object;
  #L449d52.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L449d58.  v1:= temp @kind object;
  #L449d5a.  if v1 != 0 then goto L449d66;
  #L449d5e.  call `complete`(v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L449d64.  return v0;
  #L449d66.  v3:= new `io.reactivex.internal.subscriptions.ScalarSubscription`;
  #L449d6a.  call `<init>`(v3, v2, v1) @signature `Lio/reactivex/internal/subscriptions/ScalarSubscription;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)V` @kind direct;
  #L449d70.  call `onSubscribe`(v2, v3) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L449d76.  goto L449d8e;
  #L449d78.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L449d7a.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L449d80.  call `error`(v1, v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L449d86.  return v0;
  #L449d88.  call `subscribe`(v1, v2) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L449d8e.  return v0;
  #L449d90.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L449d92.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L449d98.  call `error`(v1, v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L449d9e.  return v0;
  #L449da0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L449da2.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L449da8.  call `error`(v1, v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L449dae.  return v0;
  #L449db0.  v1:= 0I;
  #L449db2.  return v1;
  catch `java.lang.Throwable` @[L449d16..L449d22] goto L449da0;
  catch `java.lang.Throwable` @[L449d2e..L449d46] goto L449d90;
  catch `java.lang.Throwable` @[L449d4e..L449d5a] goto L449d78;
}
