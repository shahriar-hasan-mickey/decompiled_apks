record `io.reactivex.internal.operators.flowable.FlowableCombineLatest$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.FlowableSubscriber` @kind interface {
  `io.reactivex.internal.operators.flowable.FlowableCombineLatest$a` `io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.a` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.b` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.c` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.d` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.e` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableCombineLatest$a` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$b;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$a;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L434c00.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L434c06.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.a` @type ^`io.reactivex.internal.operators.flowable.FlowableCombineLatest$a` := v1 @kind object;
  #L434c0a.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.b` @type ^`int` := v2;
  #L434c0e.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.c` @type ^`int` := v3;
  #L434c12.  v1:= v3 ^> 2;
  #L434c16.  v3:= v3 - v1 @kind int;
  #L434c18.  v0.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.d` @type ^`int` := v3;
  #L434c1c.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b` v0 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$b;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L434c30.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L434c36.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b` v4 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$b;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L434cc8.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.e` @type ^`int`;
  #L434ccc.  v0:= v0 + 1;
  #L434cd0.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.d` @type ^`int`;
  #L434cd4.  if v0 != v1 then goto L434cf4;
  #L434cd8.  v1:= 0I;
  #L434cda.  v4.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.e` @type ^`int` := v1;
  #L434cde.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L434ce4.  v1:= temp @kind object;
  #L434ce6.  v1:= (`org.reactivestreams.Subscription`) v1 @kind object;
  #L434cea.  v2:= (`long`) v0 @kind i2l;
  #L434cec.  call `request`(v1, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L434cf2.  goto L434cf8;
  #L434cf4.  v4.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.e` @type ^`int` := v0;
  #L434cf8.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L434c48.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.a` @type ^`io.reactivex.internal.operators.flowable.FlowableCombineLatest$a` @kind object;
  #L434c4c.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.b` @type ^`int`;
  #L434c50.  call `i`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$a;.i:(I)V` @kind virtual;
  #L434c56.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L434c68.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.a` @type ^`io.reactivex.internal.operators.flowable.FlowableCombineLatest$a` @kind object;
  #L434c6c.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.b` @type ^`int`;
  #L434c70.  call `j`(v0, v1, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$a;.j:(ILjava/lang/Throwable;)V` @kind virtual;
  #L434c76.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L434c88.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.a` @type ^`io.reactivex.internal.operators.flowable.FlowableCombineLatest$a` @kind object;
  #L434c8c.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.b` @type ^`int`;
  #L434c90.  call `k`(v0, v1, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$a;.k:(ILjava/lang/Object;)V` @kind virtual;
  #L434c96.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableCombineLatest$b;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L434ca8.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableCombineLatest$b.c` @type ^`int`;
  #L434cac.  v0:= (`long`) v0 @kind i2l;
  #L434cae.  call temp:= `setOnce`(v2, v3, v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;J)Z` @kind static;
  #L434cb4.  return @kind void;
}
