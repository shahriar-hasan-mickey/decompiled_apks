record `io.reactivex.internal.operators.flowable.FlowableDistinct$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.BasicFuseableSubscriber` @kind class {
  `java.util.Collection` `io.reactivex.internal.operators.flowable.FlowableDistinct$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableDistinct$a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableDistinct$a` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `java.util.Collection` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDistinct$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4387a0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L4387a6.  v0.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L4387aa.  v0.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.a` @type ^`java.util.Collection` := v3 @kind object;
  #L4387ae.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.operators.flowable.FlowableDistinct$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDistinct$a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4387c0.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.a` @type ^`java.util.Collection` @kind object;
  #L4387c4.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L4387ca.  call `clear`(v1) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.clear:()V` @kind super;
  #L4387d0.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableDistinct$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDistinct$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4387e4.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L4387e8.  if v0 != 0 then goto L438806;
  #L4387ec.  v0:= 1I;
  #L4387ee.  v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L4387f2.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.a` @type ^`java.util.Collection` @kind object;
  #L4387f6.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L4387fc.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L438800.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L438806.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableDistinct$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDistinct$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L438818.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L43881c.  if v0 == 0 then goto L438828;
  #L438820.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L438826.  goto L438842;
  #L438828.  v0:= 1I;
  #L43882a.  v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L43882e.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.a` @type ^`java.util.Collection` @kind object;
  #L438832.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L438838.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L43883c.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L438842.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableDistinct$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDistinct$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L438854.  v0:= v2.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L438858.  if v0 == 0 then goto L43885e;
  #L43885c.  return @kind void;
  #L43885e.  v0:= v2.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int`;
  #L438862.  if v0 != 0 then goto L4388b4;
  #L438866.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L43886a.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L438870.  v0:= temp @kind object;
  #L438872.  v1:= "The keySelector returned a null key" @kind object;
  #L438876.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43887c.  v0:= temp @kind object;
  #L43887e.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.a` @type ^`java.util.Collection` @kind object;
  #L438882.  call temp:= `add`(v1, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L438888.  v0:= temp;
  #L43888a.  if v0 == 0 then goto L43889a;
  #L43888e.  v0:= v2.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L438892.  call `onNext`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L438898.  goto L4388c0;
  #L43889a.  v3:= v2.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L43889e.  v0:= 1L;
  #L4388a2.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4388a8.  goto L4388c0;
  #L4388aa.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4388ac.  call `fail`(v2, v3) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4388b2.  return @kind void;
  #L4388b4.  v3:= v2.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4388b8.  v0:= 0I;
  #L4388ba.  call `onNext`(v3, v0) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4388c0.  return @kind void;
  catch `java.lang.Throwable` @[L438866..L43888a] goto L4388aa;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.flowable.FlowableDistinct$a` v4 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDistinct$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L438738.  v0:= v4.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.internal.fuseable.QueueSubscription` @kind object;
  #L43873c.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L438742.  v0:= temp @kind object;
  #L438744.  if v0 == 0 then goto L43878c;
  #L438748.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.a` @type ^`java.util.Collection` @kind object;
  #L43874c.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableDistinct$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L438750.  call temp:= `apply`(v2, v0) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L438756.  v2:= temp @kind object;
  #L438758.  v3:= "The keySelector returned a null key" @kind object;
  #L43875c.  call temp:= `requireNonNull`(v2, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L438762.  v2:= temp @kind object;
  #L438764.  call temp:= `add`(v1, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L43876a.  v1:= temp;
  #L43876c.  if v1 == 0 then goto L438772;
  #L438770.  goto L43878c;
  #L438772.  v0:= v4.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int`;
  #L438776.  v1:= 2I;
  #L438778.  if v0 != v1 then goto L438738;
  #L43877c.  v0:= v4.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L438780.  v1:= 1L;
  #L438784.  call `request`(v0, v1) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L43878a.  goto L438738;
  #L43878c.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.flowable.FlowableDistinct$a` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableDistinct$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L43871c.  call temp:= `transitiveBoundaryFusion`(v0, v1) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.transitiveBoundaryFusion:(I)I` @kind virtual;
  #L438722.  v1:= temp;
  #L438724.  return v1;
}
