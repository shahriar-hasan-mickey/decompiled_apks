record `io.reactivex.internal.operators.flowable.FlowableUsing` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.flowable.FlowableUsing.b` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableUsing.c` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.flowable.FlowableUsing.d` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableUsing.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableUsing` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44f69c.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L44f6a2.  v0.`io.reactivex.internal.operators.flowable.FlowableUsing.b` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L44f6a6.  v0.`io.reactivex.internal.operators.flowable.FlowableUsing.c` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L44f6aa.  v0.`io.reactivex.internal.operators.flowable.FlowableUsing.d` @type ^`io.reactivex.functions.Consumer` := v3 @kind object;
  #L44f6ae.  v0.`io.reactivex.internal.operators.flowable.FlowableUsing.e` @type ^`boolean` := v4 @kind boolean;
  #L44f6b2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableUsing` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableUsing;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L44f6c4.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableUsing.b` @type ^`java.util.concurrent.Callable` @kind object;
  #L44f6c8.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L44f6ce.  v0:= temp @kind object;
  #L44f6d0.  v1:= v5.`io.reactivex.internal.operators.flowable.FlowableUsing.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L44f6d4.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L44f6da.  v1:= temp @kind object;
  #L44f6dc.  v2:= "The sourceSupplier returned a null Publisher" @kind object;
  #L44f6e0.  call temp:= `requireNonNull`(v1, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L44f6e6.  v1:= temp @kind object;
  #L44f6e8.  v1:= (`org.reactivestreams.Publisher`) v1 @kind object;
  #L44f6ec.  v2:= new `io.reactivex.internal.operators.flowable.FlowableUsing$a`;
  #L44f6f0.  v3:= v5.`io.reactivex.internal.operators.flowable.FlowableUsing.d` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L44f6f4.  v4:= v5.`io.reactivex.internal.operators.flowable.FlowableUsing.e` @type ^`boolean` @kind boolean;
  #L44f6f8.  call `<init>`(v2, v6, v0, v3, v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableUsing$a;.<init>:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L44f6fe.  call `subscribe`(v1, v2) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L44f704.  return @kind void;
  #L44f706.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44f708.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44f70e.  v2:= v5.`io.reactivex.internal.operators.flowable.FlowableUsing.d` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L44f712.  call `accept`(v2, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L44f718.  call `error`(v1, v6) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L44f71e.  return @kind void;
  #L44f720.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44f722.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44f728.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L44f72c.  v3:= 2I;
  #L44f72e.  v3:= new `java.lang.Throwable`[v3];
  #L44f732.  v4:= 0I;
  #L44f734.  v3[v4]:= v1 @kind object;
  #L44f738.  v1:= 1I;
  #L44f73a.  v3[v1]:= v0 @kind object;
  #L44f73e.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L44f744.  call `error`(v2, v6) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L44f74a.  return @kind void;
  #L44f74c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44f74e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44f754.  call `error`(v0, v6) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L44f75a.  return @kind void;
  catch `java.lang.Throwable` @[L44f6c4..L44f6d0] goto L44f74c;
  catch `java.lang.Throwable` @[L44f6d0..L44f6ec] goto L44f706;
  catch `java.lang.Throwable` @[L44f70e..L44f718] goto L44f720;
}
