record `io.reactivex.internal.operators.flowable.FlowableWithLatestFrom` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.flowable.FlowableWithLatestFrom.b` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.flowable.FlowableWithLatestFrom.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom;.<init>:(Lio/reactivex/Flowable;Lio/reactivex/functions/BiFunction;Lorg/reactivestreams/Publisher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L452b48.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L452b4e.  v0.`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom.b` @type ^`io.reactivex.functions.BiFunction` := v2 @kind object;
  #L452b52.  v0.`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom.c` @type ^`org.reactivestreams.Publisher` := v3 @kind object;
  #L452b56.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L452b68.  v0:= new `io.reactivex.subscribers.SerializedSubscriber`;
  #L452b6c.  call `<init>`(v0, v3) @signature `Lio/reactivex/subscribers/SerializedSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L452b72.  v3:= new `io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$b`;
  #L452b76.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom.b` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L452b7a.  call `<init>`(v3, v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L452b80.  call `onSubscribe`(v0, v3) @signature `Lio/reactivex/subscribers/SerializedSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind virtual;
  #L452b86.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableWithLatestFrom.c` @type ^`org.reactivestreams.Publisher` @kind object;
  #L452b8a.  v1:= new `io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$a`;
  #L452b8e.  call `<init>`(v1, v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom$a;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom;Lio/reactivex/internal/operators/flowable/FlowableWithLatestFrom$b;)V` @kind direct;
  #L452b94.  call `subscribe`(v0, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L452b9a.  v0:= v2.`io.reactivex.internal.operators.flowable.a.source` @type ^`io.reactivex.Flowable` @kind object;
  #L452b9e.  call `subscribe`(v0, v3) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L452ba4.  return @kind void;
}
