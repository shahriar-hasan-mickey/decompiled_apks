record `io.reactivex.internal.operators.flowable.FlowableGroupBy$b` @kind class @AccessFlag FINAL extends `io.reactivex.flowables.GroupedFlowable` @kind class {
  `io.reactivex.internal.operators.flowable.FlowableGroupBy$c` `io.reactivex.internal.operators.flowable.FlowableGroupBy$b.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableGroupBy$b` v0 @kind this, `java.lang.Object` v1 @kind object, `io.reactivex.internal.operators.flowable.FlowableGroupBy$c` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableGroupBy$b;.<init>:(Ljava/lang/Object;Lio/reactivex/internal/operators/flowable/FlowableGroupBy$c;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L43e980.  call `<init>`(v0, v1) @signature `Lio/reactivex/flowables/GroupedFlowable;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L43e986.  v0.`io.reactivex.internal.operators.flowable.FlowableGroupBy$b.c` @type ^`io.reactivex.internal.operators.flowable.FlowableGroupBy$c` := v2 @kind object;
  #L43e98a.  return @kind void;
}
procedure `io.reactivex.internal.operators.flowable.FlowableGroupBy$b` `e`(`java.lang.Object` v1 @kind object, `int` v2 , `io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableGroupBy$b;.e:(Ljava/lang/Object;ILio/reactivex/internal/operators/flowable/FlowableGroupBy$GroupBySubscriber;Z)Lio/reactivex/internal/operators/flowable/FlowableGroupBy$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43e958.  v0:= new `io.reactivex.internal.operators.flowable.FlowableGroupBy$c`;
  #L43e95c.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableGroupBy$c;.<init>:(ILio/reactivex/internal/operators/flowable/FlowableGroupBy$GroupBySubscriber;Ljava/lang/Object;Z)V` @kind direct;
  #L43e962.  v2:= new `io.reactivex.internal.operators.flowable.FlowableGroupBy$b`;
  #L43e966.  call `<init>`(v2, v1, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableGroupBy$b;.<init>:(Ljava/lang/Object;Lio/reactivex/internal/operators/flowable/FlowableGroupBy$c;)V` @kind direct;
  #L43e96c.  return v2 @kind object;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableGroupBy$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableGroupBy$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43e99c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableGroupBy$b.c` @type ^`io.reactivex.internal.operators.flowable.FlowableGroupBy$c` @kind object;
  #L43e9a0.  call `onComplete`(v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableGroupBy$c;.onComplete:()V` @kind virtual;
  #L43e9a6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableGroupBy$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableGroupBy$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43e9b8.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableGroupBy$b.c` @type ^`io.reactivex.internal.operators.flowable.FlowableGroupBy$c` @kind object;
  #L43e9bc.  call `onError`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableGroupBy$c;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L43e9c2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableGroupBy$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableGroupBy$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43e9d4.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableGroupBy$b.c` @type ^`io.reactivex.internal.operators.flowable.FlowableGroupBy$c` @kind object;
  #L43e9d8.  call `onNext`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableGroupBy$c;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L43e9de.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableGroupBy$b` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableGroupBy$b;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L43e9f0.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableGroupBy$b.c` @type ^`io.reactivex.internal.operators.flowable.FlowableGroupBy$c` @kind object;
  #L43e9f4.  call `subscribe`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableGroupBy$c;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L43e9fa.  return @kind void;
}
