record `io.reactivex.internal.operators.flowable.FlowableSkipLastTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `long` `io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.c` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.d` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableSkipLastTimed` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `int` v6 , `boolean` v7 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableSkipLastTimed;.<init>:(Lio/reactivex/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44b8c0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L44b8c6.  v0.`io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.b` @type ^`long` := v2 @kind wide;
  #L44b8ca.  v0.`io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.c` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L44b8ce.  v0.`io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.d` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L44b8d2.  v0.`io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.e` @type ^`int` := v6;
  #L44b8d6.  v0.`io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.f` @type ^`boolean` := v7 @kind boolean;
  #L44b8da.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableSkipLastTimed` v10 @kind this, `org.reactivestreams.Subscriber` v11 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableSkipLastTimed;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L44b8ec.  v0:= v10.`io.reactivex.internal.operators.flowable.a.source` @type ^`io.reactivex.Flowable` @kind object;
  #L44b8f0.  v9:= new `io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$a`;
  #L44b8f4.  v3:= v10.`io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.b` @type ^`long` @kind wide;
  #L44b8f8.  v5:= v10.`io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L44b8fc.  v6:= v10.`io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.d` @type ^`io.reactivex.Scheduler` @kind object;
  #L44b900.  v7:= v10.`io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.e` @type ^`int`;
  #L44b904.  v8:= v10.`io.reactivex.internal.operators.flowable.FlowableSkipLastTimed.f` @type ^`boolean` @kind boolean;
  #L44b908.  v1:= v9 @kind object;
  #L44b90a.  v2:= v11 @kind object;
  #L44b90c.  call `<init>`(v1, v2, v3, v5, v6, v7, v8) @signature `Lio/reactivex/internal/operators/flowable/FlowableSkipLastTimed$a;.<init>:(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @kind direct;
  #L44b912.  call `subscribe`(v0, v9) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L44b918.  return @kind void;
}
