record `io.reactivex.internal.operators.flowable.FlowableLift` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `io.reactivex.FlowableOperator` `io.reactivex.internal.operators.flowable.FlowableLift.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableLift` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `io.reactivex.FlowableOperator` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLift;.<init>:(Lio/reactivex/Flowable;Lio/reactivex/FlowableOperator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4414c0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L4414c6.  v0.`io.reactivex.internal.operators.flowable.FlowableLift.b` @type ^`io.reactivex.FlowableOperator` := v2 @kind object;
  #L4414ca.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableLift` v2 @kind this, `org.reactivestreams.Subscriber` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableLift;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4414dc.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableLift.b` @type ^`io.reactivex.FlowableOperator` @kind object;
  #L4414e0.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/FlowableOperator;.apply:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @kind interface;
  #L4414e6.  v3:= temp @kind object;
  #L4414e8.  if v3 == 0 then goto L4414f8;
  #L4414ec.  v0:= v2.`io.reactivex.internal.operators.flowable.a.source` @type ^`io.reactivex.Flowable` @kind object;
  #L4414f0.  call `subscribe`(v0, v3) @signature `Lio/reactivex/Flowable;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L4414f6.  return @kind void;
  #L4414f8.  v3:= new `java.lang.NullPointerException`;
  #L4414fc.  v0:= new `java.lang.StringBuilder`;
  #L441500.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L441506.  v1:= "Operator " @kind object;
  #L44150a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L441510.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableLift.b` @type ^`io.reactivex.FlowableOperator` @kind object;
  #L441514.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L44151a.  v1:= " returned a null Subscriber" @kind object;
  #L44151e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L441524.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L44152a.  v0:= temp @kind object;
  #L44152c.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L441532.  throw v3;
  #L441534.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L441536.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L44153c.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L441542.  v0:= new `java.lang.NullPointerException`;
  #L441546.  v1:= "Actually not, but can't throw other exceptions due to RS" @kind object;
  #L44154a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L441550.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L441556.  throw v0;
  #L441558.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L44155a.  throw v3;
  catch `java.lang.NullPointerException` @[L4414dc..L441534] goto L441558;
  catch `java.lang.Throwable` @[L4414dc..L441534] goto L441534;
}
