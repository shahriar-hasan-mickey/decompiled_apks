record `io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.b` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @AccessFlag ;
  `long` `io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.d` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAtMaybe$a;.<init>:(Lio/reactivex/MaybeObserver;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L439d2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L439d32.  v0.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L439d36.  v0.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.b` @type ^`long` := v2 @kind wide;
  #L439d3a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAtMaybe$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L439d4c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L439d50.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L439d56.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L439d5a.  v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L439d5e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAtMaybe$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L439d08.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L439d0c.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L439d10.  if v0 != v1 then goto L439d18;
  #L439d14.  v0:= 1I;
  #L439d16.  goto L439d1a;
  #L439d18.  v0:= 0I;
  #L439d1a.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAtMaybe$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L439d70.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L439d74.  v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L439d78.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.e` @type ^`boolean` @kind boolean;
  #L439d7c.  if v0 != 0 then goto L439d90;
  #L439d80.  v0:= 1I;
  #L439d82.  v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.e` @type ^`boolean` := v0 @kind boolean;
  #L439d86.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L439d8a.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L439d90.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAtMaybe$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L439da4.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.e` @type ^`boolean` @kind boolean;
  #L439da8.  if v0 == 0 then goto L439db4;
  #L439dac.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L439db2.  return @kind void;
  #L439db4.  v0:= 1I;
  #L439db6.  v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.e` @type ^`boolean` := v0 @kind boolean;
  #L439dba.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L439dbe.  v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L439dc2.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L439dc6.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L439dcc.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAtMaybe$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L439de0.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.e` @type ^`boolean` @kind boolean;
  #L439de4.  if v0 == 0 then goto L439dea;
  #L439de8.  return @kind void;
  #L439dea.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.d` @type ^`long` @kind wide;
  #L439dee.  v2:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.b` @type ^`long` @kind wide;
  #L439df2.  v4:= lcmp(v0, v2);
  #L439df6.  if v4 != 0 then goto L439e1e;
  #L439dfa.  v0:= 1I;
  #L439dfc.  v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.e` @type ^`boolean` := v0 @kind boolean;
  #L439e00.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L439e04.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L439e0a.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L439e0e.  v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L439e12.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L439e16.  call `onSuccess`(v0, v6) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L439e1c.  return @kind void;
  #L439e1e.  v2:= 1L;
  #L439e22.  v0:= v0 + v2 @kind long;
  #L439e24.  v5.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.d` @type ^`long` := v0 @kind wide;
  #L439e28.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableElementAtMaybe$a;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L439e3c.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L439e40.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L439e46.  v0:= temp;
  #L439e48.  if v0 == 0 then goto L439e6a;
  #L439e4c.  v2.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.c` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L439e50.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L439e54.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L439e5a.  v0:= 9223372036854775807L;
  #L439e64.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L439e6a.  return @kind void;
}
