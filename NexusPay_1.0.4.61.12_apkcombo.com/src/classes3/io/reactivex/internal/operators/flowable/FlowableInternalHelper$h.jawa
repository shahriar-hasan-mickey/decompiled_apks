record `io.reactivex.internal.operators.flowable.FlowableInternalHelper$h` @kind class @AccessFlag FINAL extends `io.reactivex.functions.Function` @kind interface {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$h.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.flowable.FlowableInternalHelper$h.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$h` v0 @kind this, `io.reactivex.functions.Function` v1 @kind object, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$h;.<init>:(Lio/reactivex/functions/Function;Lio/reactivex/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4400d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4400da.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$h.a` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L4400de.  v0.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$h.b` @type ^`io.reactivex.Scheduler` := v2 @kind object;
  #L4400e2.  return @kind void;
}
procedure `org.reactivestreams.Publisher` `a`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$h` v1 @kind this, `io.reactivex.Flowable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$h;.a:(Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L440090.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$h.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L440094.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L44009a.  v2:= temp @kind object;
  #L44009c.  v0:= "The selector returned a null Publisher" @kind object;
  #L4400a0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4400a6.  v2:= temp @kind object;
  #L4400a8.  v2:= (`org.reactivestreams.Publisher`) v2 @kind object;
  #L4400ac.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L4400b2.  v2:= temp @kind object;
  #L4400b4.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableInternalHelper$h.b` @type ^`io.reactivex.Scheduler` @kind object;
  #L4400b8.  call temp:= `observeOn`(v2, v0) @signature `Lio/reactivex/Flowable;.observeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Flowable;` @kind virtual;
  #L4400be.  v2:= temp @kind object;
  #L4400c0.  return v2 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.flowable.FlowableInternalHelper$h` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$h;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L440070.  v1:= (`io.reactivex.Flowable`) v1 @kind object;
  #L440074.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableInternalHelper$h;.a:(Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;` @kind virtual;
  #L44007a.  v1:= temp @kind object;
  #L44007c.  return v1 @kind object;
}
