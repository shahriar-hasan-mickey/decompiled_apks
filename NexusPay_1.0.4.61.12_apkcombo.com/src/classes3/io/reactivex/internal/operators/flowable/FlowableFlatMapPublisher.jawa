record `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.b` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.d` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.e` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 , `int` v5 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlatMapPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;ZII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43c314.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L43c31a.  v0.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.b` @type ^`org.reactivestreams.Publisher` := v1 @kind object;
  #L43c31e.  v0.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.c` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L43c322.  v0.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.d` @type ^`boolean` := v3 @kind boolean;
  #L43c326.  v0.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.e` @type ^`int` := v4;
  #L43c32a.  v0.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.f` @type ^`int` := v5;
  #L43c32e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher` v5 @kind this, `org.reactivestreams.Subscriber` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlatMapPublisher;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L43c340.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L43c344.  v1:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L43c348.  call temp:= `tryScalarXMapSubscribe`(v0, v6, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableScalarXMap;.tryScalarXMapSubscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)Z` @kind static;
  #L43c34e.  v0:= temp;
  #L43c350.  if v0 == 0 then goto L43c356;
  #L43c354.  return @kind void;
  #L43c356.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L43c35a.  v1:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L43c35e.  v2:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.d` @type ^`boolean` @kind boolean;
  #L43c362.  v3:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.e` @type ^`int`;
  #L43c366.  v4:= v5.`io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.f` @type ^`int`;
  #L43c36a.  call temp:= `subscribe`(v6, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlatMap;.subscribe:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;ZII)Lio/reactivex/FlowableSubscriber;` @kind static;
  #L43c370.  v6:= temp @kind object;
  #L43c372.  call `subscribe`(v0, v6) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L43c378.  return @kind void;
}
