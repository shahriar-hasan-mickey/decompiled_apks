record `io.reactivex.internal.operators.flowable.FlowableEmpty` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class, `io.reactivex.internal.fuseable.ScalarCallable` @kind interface {
}
global `io.reactivex.Flowable` `@@io.reactivex.internal.operators.flowable.FlowableEmpty.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/flowable/FlowableEmpty;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L43a188.  v0:= new `io.reactivex.internal.operators.flowable.FlowableEmpty`;
  #L43a18c.  call `<init>`(v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableEmpty;.<init>:()V` @kind direct;
  #L43a192.  `@@io.reactivex.internal.operators.flowable.FlowableEmpty.INSTANCE` @type ^`io.reactivex.Flowable` := v0 @kind object;
  #L43a196.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableEmpty` v0 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableEmpty;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L43a1a8.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L43a1ae.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.operators.flowable.FlowableEmpty` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableEmpty;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43a174.  v0:= 0I;
  #L43a176.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableEmpty` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableEmpty;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;

  #L43a1c0.  call `complete`(v1) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.complete:(Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L43a1c6.  return @kind void;
}
