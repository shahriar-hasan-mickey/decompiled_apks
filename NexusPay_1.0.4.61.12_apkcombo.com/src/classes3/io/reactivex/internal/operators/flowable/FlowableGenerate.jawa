record `io.reactivex.internal.operators.flowable.FlowableGenerate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Flowable` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.flowable.FlowableGenerate.b` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.flowable.FlowableGenerate.c` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.flowable.FlowableGenerate.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableGenerate` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableGenerate;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43e1ec.  call `<init>`(v0) @signature `Lio/reactivex/Flowable;.<init>:()V` @kind direct;
  #L43e1f2.  v0.`io.reactivex.internal.operators.flowable.FlowableGenerate.b` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L43e1f6.  v0.`io.reactivex.internal.operators.flowable.FlowableGenerate.c` @type ^`io.reactivex.functions.BiFunction` := v2 @kind object;
  #L43e1fa.  v0.`io.reactivex.internal.operators.flowable.FlowableGenerate.d` @type ^`io.reactivex.functions.Consumer` := v3 @kind object;
  #L43e1fe.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.flowable.FlowableGenerate` v4 @kind this, `org.reactivestreams.Subscriber` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableGenerate;.subscribeActual:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43e210.  v0:= v4.`io.reactivex.internal.operators.flowable.FlowableGenerate.b` @type ^`java.util.concurrent.Callable` @kind object;
  #L43e214.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L43e21a.  v0:= temp @kind object;
  #L43e21c.  v1:= new `io.reactivex.internal.operators.flowable.FlowableGenerate$a`;
  #L43e220.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableGenerate.c` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L43e224.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableGenerate.d` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L43e228.  call `<init>`(v1, v5, v2, v3, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableGenerate$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;Ljava/lang/Object;)V` @kind direct;
  #L43e22e.  call `onSubscribe`(v5, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L43e234.  return @kind void;
  #L43e236.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43e238.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L43e23e.  call `error`(v0, v5) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V` @kind static;
  #L43e244.  return @kind void;
  catch `java.lang.Throwable` @[L43e210..L43e21c] goto L43e236;
}
