record `io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$c` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.FlowableSubscriber` @kind interface {
  `io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$b` `io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$c.a` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$c.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$c` v0 @kind this, `io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$b` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeTimeoutPublisher$c;.<init>:(Lio/reactivex/internal/operators/maybe/MaybeTimeoutPublisher$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L45a41c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L45a422.  v0.`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$c.a` @type ^`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$b` := v1 @kind object;
  #L45a426.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$c` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeTimeoutPublisher$c;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45a438.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$c.a` @type ^`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$b` @kind object;
  #L45a43c.  call `a`(v0) @signature `Lio/reactivex/internal/operators/maybe/MaybeTimeoutPublisher$b;.a:()V` @kind virtual;
  #L45a442.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$c` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeTimeoutPublisher$c;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45a454.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$c.a` @type ^`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$b` @kind object;
  #L45a458.  call `b`(v0, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeTimeoutPublisher$b;.b:(Ljava/lang/Throwable;)V` @kind virtual;
  #L45a45e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeTimeoutPublisher$c;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L45a470.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L45a476.  v1:= temp @kind object;
  #L45a478.  v1:= (`org.reactivestreams.Subscription`) v1 @kind object;
  #L45a47c.  call `cancel`(v1) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L45a482.  v1:= v0.`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$c.a` @type ^`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$b` @kind object;
  #L45a486.  call `a`(v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeTimeoutPublisher$b;.a:()V` @kind virtual;
  #L45a48c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$c` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeTimeoutPublisher$c;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45a4a0.  v0:= 9223372036854775807L;
  #L45a4aa.  call temp:= `setOnce`(v2, v3, v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;J)Z` @kind static;
  #L45a4b0.  return @kind void;
}
