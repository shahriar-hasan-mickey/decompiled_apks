record `io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoAfterSuccess$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/Consumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L455450.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L455456.  v0.`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L45545a.  v0.`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a.b` @type ^`io.reactivex.functions.Consumer` := v2 @kind object;
  #L45545e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoAfterSuccess$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455470.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L455474.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L45547a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoAfterSuccess$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455430.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L455434.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L45543a.  v0:= temp;
  #L45543c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoAfterSuccess$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45548c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L455490.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L455496.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoAfterSuccess$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4554a8.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4554ac.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4554b2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoAfterSuccess$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4554c4.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4554c8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4554ce.  v0:= temp;
  #L4554d0.  if v0 == 0 then goto L4554e2;
  #L4554d4.  v1.`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L4554d8.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4554dc.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4554e2.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoAfterSuccess$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4554f4.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4554f8.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4554fe.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$a.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L455502.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L455508.  goto L455518;
  #L45550a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45550c.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L455512.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L455518.  return @kind void;
  catch `java.lang.Throwable` @[L4554fe..L455508] goto L45550a;
}
