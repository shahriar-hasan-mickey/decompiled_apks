record `io.reactivex.internal.operators.maybe.MaybeErrorCallable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Maybe` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.maybe.MaybeErrorCallable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeErrorCallable` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeErrorCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L455d6c.  call `<init>`(v0) @signature `Lio/reactivex/Maybe;.<init>:()V` @kind direct;
  #L455d72.  v0.`io.reactivex.internal.operators.maybe.MaybeErrorCallable.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L455d76.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeErrorCallable` v2 @kind this, `io.reactivex.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeErrorCallable;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L455d88.  call temp:= `disposed`() @signature `Lio/reactivex/disposables/Disposables;.disposed:()Lio/reactivex/disposables/Disposable;` @kind static;
  #L455d8e.  v0:= temp @kind object;
  #L455d90.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L455d96.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeErrorCallable.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L455d9a.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L455da0.  v0:= temp @kind object;
  #L455da2.  v1:= "Callable returned null throwable. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L455da6.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L455dac.  v0:= temp @kind object;
  #L455dae.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L455db2.  goto L455dbc;
  #L455db4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L455db6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L455dbc.  call `onError`(v3, v0) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L455dc2.  return @kind void;
  catch `java.lang.Throwable` @[L455d96..L455db2] goto L455db4;
}
