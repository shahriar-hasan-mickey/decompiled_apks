record `io.reactivex.internal.operators.maybe.MaybeUnsafeCreate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.maybe.a` @kind class {
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeUnsafeCreate` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeUnsafeCreate;.<init>:(Lio/reactivex/MaybeSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L45aad0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/a;.<init>:(Lio/reactivex/MaybeSource;)V` @kind direct;
  #L45aad6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeUnsafeCreate` v1 @kind this, `io.reactivex.MaybeObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeUnsafeCreate;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L45aae8.  v0:= v1.`io.reactivex.internal.operators.maybe.a.source` @type ^`io.reactivex.MaybeSource` @kind object;
  #L45aaec.  call `subscribe`(v0, v2) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L45aaf2.  return @kind void;
}
