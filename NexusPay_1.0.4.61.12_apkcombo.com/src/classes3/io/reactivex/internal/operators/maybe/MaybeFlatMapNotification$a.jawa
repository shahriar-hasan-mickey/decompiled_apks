record `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.b` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.c` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.d` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.e` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L456c1c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L456c22.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L456c26.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L456c2a.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.c` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L456c2e.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.d` @type ^`java.util.concurrent.Callable` := v4 @kind object;
  #L456c32.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456c44.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L456c4a.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L456c4e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L456c54.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456bf4.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L456bfa.  v0:= temp @kind object;
  #L456bfc.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L456c00.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L456c06.  v0:= temp;
  #L456c08.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L456c68.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.d` @type ^`java.util.concurrent.Callable` @kind object;
  #L456c6c.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L456c72.  v0:= temp @kind object;
  #L456c74.  v1:= "The onCompleteSupplier returned a null MaybeSource" @kind object;
  #L456c78.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L456c7e.  v0:= temp @kind object;
  #L456c80.  v0:= (`io.reactivex.MaybeSource`) v0 @kind object;
  #L456c84.  v1:= new `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a$a`;
  #L456c88.  call `<init>`(v1, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$a$a;.<init>:(Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$a;)V` @kind direct;
  #L456c8e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L456c94.  return @kind void;
  #L456c96.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L456c98.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L456c9e.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L456ca2.  call `onError`(v1, v0) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L456ca8.  return @kind void;
  catch `java.lang.Exception` @[L456c68..L456c84] goto L456c96;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L456ccc.  v0:= v5.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L456cd0.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L456cd6.  v0:= temp @kind object;
  #L456cd8.  v1:= "The onErrorMapper returned a null MaybeSource" @kind object;
  #L456cdc.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L456ce2.  v0:= temp @kind object;
  #L456ce4.  v0:= (`io.reactivex.MaybeSource`) v0 @kind object;
  #L456ce8.  v6:= new `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a$a`;
  #L456cec.  call `<init>`(v6, v5) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$a$a;.<init>:(Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$a;)V` @kind direct;
  #L456cf2.  call `subscribe`(v0, v6) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L456cf8.  return @kind void;
  #L456cfa.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L456cfc.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L456d02.  v1:= v5.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L456d06.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L456d0a.  v3:= 2I;
  #L456d0c.  v3:= new `java.lang.Throwable`[v3];
  #L456d10.  v4:= 0I;
  #L456d12.  v3[v4]:= v6 @kind object;
  #L456d16.  v6:= 1I;
  #L456d18.  v3[v6]:= v0 @kind object;
  #L456d1c.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L456d22.  call `onError`(v1, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L456d28.  return @kind void;
  catch `java.lang.Exception` @[L456ccc..L456ce8] goto L456cfa;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456d4c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L456d50.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L456d56.  v0:= temp;
  #L456d58.  if v0 == 0 then goto L456d6a;
  #L456d5c.  v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.e` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L456d60.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L456d64.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L456d6a.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456d7c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L456d80.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L456d86.  v2:= temp @kind object;
  #L456d88.  v0:= "The onSuccessMapper returned a null MaybeSource" @kind object;
  #L456d8c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L456d92.  v2:= temp @kind object;
  #L456d94.  v2:= (`io.reactivex.MaybeSource`) v2 @kind object;
  #L456d98.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a$a`;
  #L456d9c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$a$a;.<init>:(Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$a;)V` @kind direct;
  #L456da2.  call `subscribe`(v2, v0) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L456da8.  return @kind void;
  #L456daa.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L456dac.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L456db2.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L456db6.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L456dbc.  return @kind void;
  catch `java.lang.Exception` @[L456d7c..L456d98] goto L456daa;
}
