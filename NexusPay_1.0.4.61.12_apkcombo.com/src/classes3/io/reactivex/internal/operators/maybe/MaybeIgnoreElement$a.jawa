record `io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.a` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$a;.<init>:(Lio/reactivex/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L457ae4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L457aea.  v0.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L457aee.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457b00.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L457b04.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L457b0a.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L457b0e.  v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L457b12.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457ac4.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L457ac8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L457ace.  v0:= temp;
  #L457ad0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457b24.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L457b28.  v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L457b2c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L457b30.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L457b36.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457b48.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L457b4c.  v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L457b50.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L457b54.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L457b5a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457b6c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L457b70.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L457b76.  v0:= temp;
  #L457b78.  if v0 == 0 then goto L457b8a;
  #L457b7c.  v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L457b80.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L457b84.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L457b8a.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElement$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L457b9c.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L457ba0.  v0.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.b` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L457ba4.  v1:= v0.`io.reactivex.internal.operators.maybe.MaybeIgnoreElement$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L457ba8.  call `onComplete`(v1) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L457bae.  return @kind void;
}
