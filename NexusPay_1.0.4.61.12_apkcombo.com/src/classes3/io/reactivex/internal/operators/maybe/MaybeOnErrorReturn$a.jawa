record `io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeOnErrorReturn$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L458f9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L458fa2.  v0.`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L458fa6.  v0.`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L458faa.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeOnErrorReturn$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L458fbc.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L458fc0.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L458fc6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeOnErrorReturn$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L458f7c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L458f80.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L458f86.  v0:= temp;
  #L458f88.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeOnErrorReturn$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L458fd8.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L458fdc.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L458fe2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeOnErrorReturn$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L458ff4.  v0:= v5.`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L458ff8.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L458ffe.  v0:= temp @kind object;
  #L459000.  v1:= "The valueSupplier returned a null value" @kind object;
  #L459004.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45900a.  v6:= temp @kind object;
  #L45900c.  v0:= v5.`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L459010.  call `onSuccess`(v0, v6) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L459016.  return @kind void;
  #L459018.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45901a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L459020.  v1:= v5.`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L459024.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L459028.  v3:= 2I;
  #L45902a.  v3:= new `java.lang.Throwable`[v3];
  #L45902e.  v4:= 0I;
  #L459030.  v3[v4]:= v6 @kind object;
  #L459034.  v6:= 1I;
  #L459036.  v3[v6]:= v0 @kind object;
  #L45903a.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L459040.  call `onError`(v1, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L459046.  return @kind void;
  catch `java.lang.Throwable` @[L458ff4..L45900c] goto L459018;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeOnErrorReturn$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459064.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L459068.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L45906e.  v0:= temp;
  #L459070.  if v0 == 0 then goto L459082;
  #L459074.  v1.`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L459078.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L45907c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L459082.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeOnErrorReturn$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459094.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L459098.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L45909e.  return @kind void;
}
