record `io.reactivex.internal.operators.maybe.MaybeContains` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class, `io.reactivex.internal.fuseable.HasUpstreamMaybeSource` @kind interface {
  `io.reactivex.MaybeSource` `io.reactivex.internal.operators.maybe.MaybeContains.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.maybe.MaybeContains.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeContains` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeContains;.<init>:(Lio/reactivex/MaybeSource;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L454588.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L45458e.  v0.`io.reactivex.internal.operators.maybe.MaybeContains.a` @type ^`io.reactivex.MaybeSource` := v1 @kind object;
  #L454592.  v0.`io.reactivex.internal.operators.maybe.MaybeContains.b` @type ^`java.lang.Object` := v2 @kind object;
  #L454596.  return @kind void;
}
procedure `io.reactivex.MaybeSource` `source`(`io.reactivex.internal.operators.maybe.MaybeContains` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeContains;.source:()Lio/reactivex/MaybeSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454570.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeContains.a` @type ^`io.reactivex.MaybeSource` @kind object;
  #L454574.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeContains` v3 @kind this, `io.reactivex.SingleObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeContains;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4545a8.  v0:= v3.`io.reactivex.internal.operators.maybe.MaybeContains.a` @type ^`io.reactivex.MaybeSource` @kind object;
  #L4545ac.  v1:= new `io.reactivex.internal.operators.maybe.MaybeContains$a`;
  #L4545b0.  v2:= v3.`io.reactivex.internal.operators.maybe.MaybeContains.b` @type ^`java.lang.Object` @kind object;
  #L4545b4.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeContains$a;.<init>:(Lio/reactivex/SingleObserver;Ljava/lang/Object;)V` @kind direct;
  #L4545ba.  call `subscribe`(v0, v1) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L4545c0.  return @kind void;
}
