record `io.reactivex.internal.operators.maybe.MaybeContains$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.maybe.MaybeContains$a.a` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.maybe.MaybeContains$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeContains$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeContains$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeContains$a;.<init>:(Lio/reactivex/SingleObserver;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L454478.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45447e.  v0.`io.reactivex.internal.operators.maybe.MaybeContains$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L454482.  v0.`io.reactivex.internal.operators.maybe.MaybeContains$a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L454486.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeContains$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeContains$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454498.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeContains$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45449c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4544a2.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4544a6.  v1.`io.reactivex.internal.operators.maybe.MaybeContains$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L4544aa.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeContains$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeContains$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454458.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeContains$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45445c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L454462.  v0:= temp;
  #L454464.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeContains$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeContains$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4544bc.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4544c0.  v2.`io.reactivex.internal.operators.maybe.MaybeContains$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L4544c4.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeContains$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L4544c8.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L4544cc.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4544d2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeContains$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeContains$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4544e4.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4544e8.  v1.`io.reactivex.internal.operators.maybe.MaybeContains$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L4544ec.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeContains$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L4544f0.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4544f6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeContains$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeContains$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454508.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeContains$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45450c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L454512.  v0:= temp;
  #L454514.  if v0 == 0 then goto L454526;
  #L454518.  v1.`io.reactivex.internal.operators.maybe.MaybeContains$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L45451c.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeContains$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L454520.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L454526.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeContains$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeContains$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L454538.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L45453c.  v2.`io.reactivex.internal.operators.maybe.MaybeContains$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L454540.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeContains$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L454544.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeContains$a.b` @type ^`java.lang.Object` @kind object;
  #L454548.  call temp:= `equals`(v3, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L45454e.  v3:= temp;
  #L454550.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L454556.  v3:= temp @kind object;
  #L454558.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L45455e.  return @kind void;
}
