record `io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.BiConsumer` `io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object, `io.reactivex.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnEvent$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/BiConsumer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L455730.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L455736.  v0.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L45573a.  v0.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.functions.BiConsumer` := v2 @kind object;
  #L45573e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnEvent$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455750.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L455754.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L45575a.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L45575e.  v1.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L455762.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnEvent$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455710.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L455714.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L45571a.  v0:= temp;
  #L45571c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnEvent$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L455774.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L455778.  v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L45577c.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L455780.  v1:= 0I;
  #L455782.  call `accept`(v0, v1, v1) @signature `Lio/reactivex/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L455788.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L45578c.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L455792.  return @kind void;
  #L455794.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L455796.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45579c.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4557a0.  call `onError`(v1, v0) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4557a6.  return @kind void;
  catch `java.lang.Throwable` @[L45577c..L455788] goto L455794;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnEvent$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4557c4.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4557c8.  v4.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L4557cc.  v0:= v4.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L4557d0.  v1:= 0I;
  #L4557d2.  call `accept`(v0, v1, v5) @signature `Lio/reactivex/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L4557d8.  goto L455800;
  #L4557da.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4557dc.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4557e2.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L4557e6.  v2:= 2I;
  #L4557e8.  v2:= new `java.lang.Throwable`[v2];
  #L4557ec.  v3:= 0I;
  #L4557ee.  v2[v3]:= v5 @kind object;
  #L4557f2.  v5:= 1I;
  #L4557f4.  v2[v5]:= v0 @kind object;
  #L4557f8.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4557fe.  v5:= v1 @kind object;
  #L455800.  v0:= v4.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L455804.  call `onError`(v0, v5) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L45580a.  return @kind void;
  catch `java.lang.Throwable` @[L4557cc..L4557d8] goto L4557da;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnEvent$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455828.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45582c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L455832.  v0:= temp;
  #L455834.  if v0 == 0 then goto L455846;
  #L455838.  v1.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L45583c.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L455840.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L455846.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnEvent$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L455858.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L45585c.  v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L455860.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.b` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L455864.  v1:= 0I;
  #L455866.  call `accept`(v0, v3, v1) @signature `Lio/reactivex/functions/BiConsumer;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L45586c.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L455870.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L455876.  return @kind void;
  #L455878.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45587a.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L455880.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnEvent$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L455884.  call `onError`(v0, v3) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L45588a.  return @kind void;
  catch `java.lang.Throwable` @[L455860..L45586c] goto L455878;
}
