record `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @AccessFlag FINAL;
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v1 @kind this, `io.reactivex.MaybeObserver` v2 @kind object, `org.reactivestreams.Publisher` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.<init>:(Lio/reactivex/MaybeObserver;Lorg/reactivestreams/Publisher;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L454bf8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L454bfe.  v0:= new `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b`;
  #L454c02.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$b;.<init>:(Lio/reactivex/MaybeObserver;)V` @kind direct;
  #L454c08.  v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` := v0 @kind object;
  #L454c0c.  v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.b` @type ^`org.reactivestreams.Publisher` := v3 @kind object;
  #L454c10.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L454cf8.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.b` @type ^`org.reactivestreams.Publisher` @kind object;
  #L454cfc.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` @kind object;
  #L454d00.  call `subscribe`(v0, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L454d06.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454c24.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L454c28.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L454c2e.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L454c32.  v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L454c36.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` @kind object;
  #L454c3a.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L454c40.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L454bcc.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` @kind object;
  #L454bd0.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L454bd6.  v0:= temp @kind object;
  #L454bd8.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L454bdc.  if v0 != v1 then goto L454be4;
  #L454be0.  v0:= 1I;
  #L454be2.  goto L454be6;
  #L454be4.  v0:= 0I;
  #L454be6.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454c54.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L454c58.  v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L454c5c.  call `a`(v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.a:()V` @kind virtual;
  #L454c62.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454c74.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L454c78.  v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L454c7c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` @kind object;
  #L454c80.  v0.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b.c` @type ^`java.lang.Throwable` := v2 @kind object;
  #L454c84.  call `a`(v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.a:()V` @kind virtual;
  #L454c8a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454c9c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L454ca0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L454ca6.  v0:= temp;
  #L454ca8.  if v0 == 0 then goto L454cbe;
  #L454cac.  v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L454cb0.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` @kind object;
  #L454cb4.  v2:= v2.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L454cb8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L454cbe.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454cd0.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L454cd4.  v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L454cd8.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$a.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b` @kind object;
  #L454cdc.  v0.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$b.b` @type ^`java.lang.Object` := v2 @kind object;
  #L454ce0.  call `a`(v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$a;.a:()V` @kind virtual;
  #L454ce6.  return @kind void;
}
