record `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.maybe.a` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification.b` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification;.<init>:(Lio/reactivex/MaybeSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L456de0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/a;.<init>:(Lio/reactivex/MaybeSource;)V` @kind direct;
  #L456de6.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification.a` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L456dea.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification.b` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L456dee.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification.c` @type ^`java.util.concurrent.Callable` := v4 @kind object;
  #L456df2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification` v5 @kind this, `io.reactivex.MaybeObserver` v6 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L456e04.  v0:= v5.`io.reactivex.internal.operators.maybe.a.source` @type ^`io.reactivex.MaybeSource` @kind object;
  #L456e08.  v1:= new `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$a`;
  #L456e0c.  v2:= v5.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L456e10.  v3:= v5.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L456e14.  v4:= v5.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification.c` @type ^`java.util.concurrent.Callable` @kind object;
  #L456e18.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L456e1e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L456e24.  return @kind void;
}
