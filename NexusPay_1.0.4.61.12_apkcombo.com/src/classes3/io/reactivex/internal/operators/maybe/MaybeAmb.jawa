record `io.reactivex.internal.operators.maybe.MaybeAmb` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Maybe` @kind class {
  `io.reactivex.MaybeSource`[] `io.reactivex.internal.operators.maybe.MaybeAmb.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.maybe.MaybeAmb.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeAmb` v0 @kind this, `io.reactivex.MaybeSource`[] v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeAmb;.<init>:([Lio/reactivex/MaybeSource;Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4536a4.  call `<init>`(v0) @signature `Lio/reactivex/Maybe;.<init>:()V` @kind direct;
  #L4536aa.  v0.`io.reactivex.internal.operators.maybe.MaybeAmb.a` @type ^`io.reactivex.MaybeSource`[] := v1 @kind object;
  #L4536ae.  v0.`io.reactivex.internal.operators.maybe.MaybeAmb.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L4536b2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeAmb` v8 @kind this, `io.reactivex.MaybeObserver` v9 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeAmb;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4536c4.  v0:= v8.`io.reactivex.internal.operators.maybe.MaybeAmb.a` @type ^`io.reactivex.MaybeSource`[] @kind object;
  #L4536c8.  v1:= 0I;
  #L4536ca.  if v0 != 0 then goto L45374a;
  #L4536ce.  v0:= 8I;
  #L4536d2.  v0:= new `io.reactivex.MaybeSource`[v0];
  #L4536d6.  v2:= v8.`io.reactivex.internal.operators.maybe.MaybeAmb.b` @type ^`java.lang.Iterable` @kind object;
  #L4536da.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4536e0.  v2:= temp @kind object;
  #L4536e2.  v3:= 0I;
  #L4536e4.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4536ea.  v4:= temp;
  #L4536ec.  if v4 == 0 then goto L45374c;
  #L4536f0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4536f6.  v4:= temp @kind object;
  #L4536f8.  v4:= (`io.reactivex.MaybeSource`) v4 @kind object;
  #L4536fc.  if v4 != 0 then goto L453716;
  #L453700.  v0:= new `java.lang.NullPointerException`;
  #L453704.  v1:= "One of the sources is null" @kind object;
  #L453708.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45370e.  call `error`(v0, v9) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/MaybeObserver;)V` @kind static;
  #L453714.  return @kind void;
  #L453716.  v5:= length @variable v0;
  #L453718.  if v3 != v5 then goto L45372e;
  #L45371c.  v5:= v3 ^> 2;
  #L453720.  v5:= v5 + v3 @kind int;
  #L453722.  v5:= new `io.reactivex.MaybeSource`[v5];
  #L453726.  call `arraycopy`(v0, v1, v5, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L45372c.  v0:= v5 @kind object;
  #L45372e.  v5:= v3 + 1;
  #L453732.  v0[v3]:= v4 @kind object;
  #L453736.  v3:= v5;
  #L453738.  goto L4536e4;
  #L45373a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45373c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L453742.  call `error`(v0, v9) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/MaybeObserver;)V` @kind static;
  #L453748.  return @kind void;
  #L45374a.  v3:= length @variable v0;
  #L45374c.  v2:= new `io.reactivex.disposables.CompositeDisposable`;
  #L453750.  call `<init>`(v2) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L453756.  call `onSubscribe`(v9, v2) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L45375c.  v4:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L453760.  call `<init>`(v4) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L453766.  v5:= 0I;
  #L453768.  if v5 >= v3 then goto L4537ca;
  #L45376c.  v6:= v0[v5] @kind object;
  #L453770.  call temp:= `isDisposed`(v2) @signature `Lio/reactivex/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L453776.  v7:= temp;
  #L453778.  if v7 == 0 then goto L45377e;
  #L45377c.  return @kind void;
  #L45377e.  if v6 != 0 then goto L4537b4;
  #L453782.  call `dispose`(v2) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L453788.  v0:= new `java.lang.NullPointerException`;
  #L45378c.  v2:= "One of the MaybeSources is null" @kind object;
  #L453790.  call `<init>`(v0, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L453796.  v2:= 1I;
  #L453798.  call temp:= `compareAndSet`(v4, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L45379e.  v1:= temp;
  #L4537a0.  if v1 == 0 then goto L4537ac;
  #L4537a4.  call `onError`(v9, v0) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4537aa.  goto L4537b2;
  #L4537ac.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4537b2.  return @kind void;
  #L4537b4.  v7:= new `io.reactivex.internal.operators.maybe.MaybeAmb$a`;
  #L4537b8.  call `<init>`(v7, v9, v2, v4) @signature `Lio/reactivex/internal/operators/maybe/MaybeAmb$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/disposables/CompositeDisposable;Ljava/util/concurrent/atomic/AtomicBoolean;)V` @kind direct;
  #L4537be.  call `subscribe`(v6, v7) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L4537c4.  v5:= v5 + 1;
  #L4537c8.  goto L453768;
  #L4537ca.  if v3 != 0 then goto L4537d4;
  #L4537ce.  call `onComplete`(v9) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L4537d4.  return @kind void;
  catch `java.lang.Throwable` @[L4536d6..L453736] goto L45373a;
}
