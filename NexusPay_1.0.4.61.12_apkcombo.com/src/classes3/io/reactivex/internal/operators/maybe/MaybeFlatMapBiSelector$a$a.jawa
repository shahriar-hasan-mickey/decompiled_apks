record `io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.MaybeObserver` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.c` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector$a$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4560e8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4560ee.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L4560f2.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.b` @type ^`io.reactivex.functions.BiFunction` := v2 @kind object;
  #L4560f6.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector$a$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456108.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L45610c.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L456112.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector$a$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456124.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L456128.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L45612e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector$a$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L456140.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L456146.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector$a$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L456158.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.c` @type ^`java.lang.Object` @kind object;
  #L45615c.  v1:= 0I;
  #L45615e.  v2.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L456162.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.b` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L456166.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45616c.  v3:= temp @kind object;
  #L45616e.  v0:= "The resultSelector returned a null value" @kind object;
  #L456172.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L456178.  v3:= temp @kind object;
  #L45617a.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L45617e.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L456184.  return @kind void;
  #L456186.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L456188.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45618e.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$a$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L456192.  call `onError`(v0, v3) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L456198.  return @kind void;
  catch `java.lang.Throwable` @[L456162..L45617a] goto L456186;
}
