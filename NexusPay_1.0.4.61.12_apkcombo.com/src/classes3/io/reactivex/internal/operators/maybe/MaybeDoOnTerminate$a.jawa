record `io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a.a` @AccessFlag FINAL;
  `io.reactivex.internal.operators.maybe.MaybeDoOnTerminate` `io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a` v0 @kind this, `io.reactivex.internal.operators.maybe.MaybeDoOnTerminate` v1 @kind object, `io.reactivex.MaybeObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnTerminate$a;.<init>:(Lio/reactivex/internal/operators/maybe/MaybeDoOnTerminate;Lio/reactivex/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4558f0.  v0.`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate` := v1 @kind object;
  #L4558f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4558fa.  v0.`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a.a` @type ^`io.reactivex.MaybeObserver` := v2 @kind object;
  #L4558fe.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnTerminate$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L455910.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate` @kind object;
  #L455914.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate.b` @type ^`io.reactivex.functions.Action` @kind object;
  #L455918.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L45591e.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L455922.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L455928.  return @kind void;
  #L45592a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45592c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L455932.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L455936.  call `onError`(v1, v0) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L45593c.  return @kind void;
  catch `java.lang.Throwable` @[L455910..L45591e] goto L45592a;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnTerminate$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45595c.  v0:= v4.`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate` @kind object;
  #L455960.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate.b` @type ^`io.reactivex.functions.Action` @kind object;
  #L455964.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L45596a.  goto L455992;
  #L45596c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45596e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L455974.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L455978.  v2:= 2I;
  #L45597a.  v2:= new `java.lang.Throwable`[v2];
  #L45597e.  v3:= 0I;
  #L455980.  v2[v3]:= v5 @kind object;
  #L455984.  v5:= 1I;
  #L455986.  v2[v5]:= v0 @kind object;
  #L45598a.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L455990.  v5:= v1 @kind object;
  #L455992.  v0:= v4.`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L455996.  call `onError`(v0, v5) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L45599c.  return @kind void;
  catch `java.lang.Throwable` @[L45595c..L45596a] goto L45596c;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnTerminate$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4559bc.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4559c0.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4559c6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDoOnTerminate$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4559d8.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate` @kind object;
  #L4559dc.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate.b` @type ^`io.reactivex.functions.Action` @kind object;
  #L4559e0.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L4559e6.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4559ea.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4559f0.  return @kind void;
  #L4559f2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4559f4.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4559fa.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4559fe.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L455a04.  return @kind void;
  catch `java.lang.Throwable` @[L4559d8..L4559e6] goto L4559f2;
}
