record `io.reactivex.internal.operators.maybe.MaybeFromCompletable$a` @kind class @AccessFlag FINAL extends `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeFromCompletable$a.a` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeFromCompletable$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromCompletable$a;.<init>:(Lio/reactivex/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4575cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4575d2.  v0.`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L4575d6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromCompletable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4575e8.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4575ec.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4575f2.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4575f6.  v1.`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L4575fa.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromCompletable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4575ac.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4575b0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4575b6.  v0:= temp;
  #L4575b8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromCompletable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45760c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L457610.  v1.`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L457614.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L457618.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L45761e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromCompletable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457630.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L457634.  v1.`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L457638.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L45763c.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L457642.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromCompletable$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457654.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L457658.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L45765e.  v0:= temp;
  #L457660.  if v0 == 0 then goto L457672;
  #L457664.  v1.`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L457668.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeFromCompletable$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L45766c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L457672.  return @kind void;
}
