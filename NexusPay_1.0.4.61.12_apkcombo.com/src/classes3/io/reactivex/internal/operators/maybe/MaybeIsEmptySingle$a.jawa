record `io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.a` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIsEmptySingle$a;.<init>:(Lio/reactivex/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L457e6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L457e72.  v0.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L457e76.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIsEmptySingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457e88.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L457e8c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L457e92.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L457e96.  v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L457e9a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIsEmptySingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457e4c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L457e50.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L457e56.  v0:= temp;
  #L457e58.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeIsEmptySingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L457eac.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L457eb0.  v2.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L457eb4.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L457eb8.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L457ebc.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L457ec2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIsEmptySingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457ed4.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L457ed8.  v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L457edc.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L457ee0.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L457ee6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIsEmptySingle$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457ef8.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L457efc.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L457f02.  v0:= temp;
  #L457f04.  if v0 == 0 then goto L457f16;
  #L457f08.  v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L457f0c.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L457f10.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L457f16.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeIsEmptySingle$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457f28.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L457f2c.  v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L457f30.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L457f34.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L457f38.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L457f3e.  return @kind void;
}
