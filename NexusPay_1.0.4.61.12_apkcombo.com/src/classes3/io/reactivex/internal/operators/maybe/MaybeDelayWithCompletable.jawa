record `io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Maybe` @kind class {
  `io.reactivex.MaybeSource` `io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable.a` @AccessFlag FINAL;
  `io.reactivex.CompletableSource` `io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable` v0 @kind this, `io.reactivex.MaybeSource` v1 @kind object, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayWithCompletable;.<init>:(Lio/reactivex/MaybeSource;Lio/reactivex/CompletableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L455220.  call `<init>`(v0) @signature `Lio/reactivex/Maybe;.<init>:()V` @kind direct;
  #L455226.  v0.`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable.a` @type ^`io.reactivex.MaybeSource` := v1 @kind object;
  #L45522a.  v0.`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable.b` @type ^`io.reactivex.CompletableSource` := v2 @kind object;
  #L45522e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable` v3 @kind this, `io.reactivex.MaybeObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayWithCompletable;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L455240.  v0:= v3.`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable.b` @type ^`io.reactivex.CompletableSource` @kind object;
  #L455244.  v1:= new `io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$b`;
  #L455248.  v2:= v3.`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable.a` @type ^`io.reactivex.MaybeSource` @kind object;
  #L45524c.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayWithCompletable$b;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/MaybeSource;)V` @kind direct;
  #L455252.  call `subscribe`(v0, v1) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L455258.  return @kind void;
}
