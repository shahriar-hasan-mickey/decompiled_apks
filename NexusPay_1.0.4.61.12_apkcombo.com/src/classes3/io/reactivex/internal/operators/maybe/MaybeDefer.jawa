record `io.reactivex.internal.operators.maybe.MaybeDefer` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Maybe` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.maybe.MaybeDefer.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDefer` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDefer;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L454a10.  call `<init>`(v0) @signature `Lio/reactivex/Maybe;.<init>:()V` @kind direct;
  #L454a16.  v0.`io.reactivex.internal.operators.maybe.MaybeDefer.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L454a1a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.maybe.MaybeDefer` v2 @kind this, `io.reactivex.MaybeObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDefer;.subscribeActual:(Lio/reactivex/MaybeObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L454a2c.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDefer.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L454a30.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L454a36.  v0:= temp @kind object;
  #L454a38.  v1:= "The maybeSupplier returned a null MaybeSource" @kind object;
  #L454a3c.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L454a42.  v0:= temp @kind object;
  #L454a44.  v0:= (`io.reactivex.MaybeSource`) v0 @kind object;
  #L454a48.  call `subscribe`(v0, v3) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L454a4e.  return @kind void;
  #L454a50.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454a52.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L454a58.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/MaybeObserver;)V` @kind static;
  #L454a5e.  return @kind void;
  catch `java.lang.Throwable` @[L454a2c..L454a48] goto L454a50;
}
