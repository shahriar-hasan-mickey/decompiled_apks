record `io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$a.a` @AccessFlag FINAL;
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$a` v0 @kind this, `java.util.concurrent.atomic.AtomicReference` v1 @kind object, `io.reactivex.MaybeObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayWithCompletable$a;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4550c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4550c6.  v0.`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$a.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L4550ca.  v0.`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$a.b` @type ^`io.reactivex.MaybeObserver` := v2 @kind object;
  #L4550ce.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayWithCompletable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4550e0.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$a.b` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L4550e4.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L4550ea.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayWithCompletable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4550fc.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$a.b` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L455100.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L455106.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayWithCompletable$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455118.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$a.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L45511c.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L455122.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayWithCompletable$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455134.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$a.b` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L455138.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L45513e.  return @kind void;
}
