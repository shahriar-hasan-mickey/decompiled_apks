record `io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` @kind class @AccessFlag FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` `io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @AccessFlag FINAL;
  `io.reactivex.MaybeSource` `io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.b` @AccessFlag ;
  `org.reactivestreams.Subscription` `io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v1 @kind this, `io.reactivex.MaybeObserver` v2 @kind object, `io.reactivex.MaybeSource` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/MaybeSource;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L454f1c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L454f22.  v0:= new `io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a`;
  #L454f26.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$a;.<init>:(Lio/reactivex/MaybeObserver;)V` @kind direct;
  #L454f2c.  v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` := v0 @kind object;
  #L454f30.  v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.b` @type ^`io.reactivex.MaybeSource` := v3 @kind object;
  #L454f34.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L455050.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.b` @type ^`io.reactivex.MaybeSource` @kind object;
  #L455054.  v1:= 0I;
  #L455056.  v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.b` @type ^`io.reactivex.MaybeSource` := v1 @kind object;
  #L45505a.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L45505e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L455064.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454f48.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L454f4c.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L454f52.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L454f56.  v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v0 @kind object;
  #L454f5a.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L454f5e.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L454f64.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454ef0.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L454ef4.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L454efa.  v0:= temp @kind object;
  #L454efc.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L454f00.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L454f06.  v0:= temp;
  #L454f08.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L454f78.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L454f7c.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L454f80.  if v0 == v1 then goto L454f8e;
  #L454f84.  v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L454f88.  call `a`(v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.a:()V` @kind virtual;
  #L454f8e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L454fa0.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L454fa4.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L454fa8.  if v0 == v1 then goto L454fc0;
  #L454fac.  v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L454fb0.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L454fb4.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L454fb8.  call `onError`(v0, v3) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L454fbe.  goto L454fc6;
  #L454fc0.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L454fc6.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454fd8.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L454fdc.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L454fe0.  if v2 == v0 then goto L454ff8;
  #L454fe4.  call `cancel`(v2) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L454fea.  v2:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L454fee.  v1.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L454ff2.  call `a`(v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.a:()V` @kind virtual;
  #L454ff8.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b` v2 @kind this, `org.reactivestreams.Subscription` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$b;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45500c.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L455010.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L455016.  v0:= temp;
  #L455018.  if v0 == 0 then goto L45503e;
  #L45501c.  v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.c` @type ^`org.reactivestreams.Subscription` := v3 @kind object;
  #L455020.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$b.a` @type ^`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a` @kind object;
  #L455024.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L455028.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L45502e.  v0:= 9223372036854775807L;
  #L455038.  call `request`(v3, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L45503e.  return @kind void;
}
