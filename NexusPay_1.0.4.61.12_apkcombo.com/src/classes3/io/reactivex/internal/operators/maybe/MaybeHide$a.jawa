record `io.reactivex.internal.operators.maybe.MaybeHide$a` @kind class @AccessFlag FINAL extends `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.maybe.MaybeHide$a.a` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.maybe.MaybeHide$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeHide$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeHide$a;.<init>:(Lio/reactivex/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4579c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4579c6.  v0.`io.reactivex.internal.operators.maybe.MaybeHide$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L4579ca.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeHide$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeHide$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4579dc.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeHide$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4579e0.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4579e6.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4579ea.  v1.`io.reactivex.internal.operators.maybe.MaybeHide$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L4579ee.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeHide$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeHide$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4579a0.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeHide$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4579a4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4579aa.  v0:= temp;
  #L4579ac.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeHide$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeHide$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457a00.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeHide$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L457a04.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L457a0a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeHide$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeHide$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457a1c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeHide$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L457a20.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L457a26.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeHide$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeHide$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457a38.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeHide$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L457a3c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L457a42.  v0:= temp;
  #L457a44.  if v0 == 0 then goto L457a56;
  #L457a48.  v1.`io.reactivex.internal.operators.maybe.MaybeHide$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L457a4c.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeHide$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L457a50.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L457a56.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeHide$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeHide$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457a68.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeHide$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L457a6c.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L457a72.  return @kind void;
}
