record `io.reactivex.internal.operators.single.SingleDelay$a$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `java.lang.Throwable` `io.reactivex.internal.operators.single.SingleDelay$a$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.single.SingleDelay$a` `io.reactivex.internal.operators.single.SingleDelay$a$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDelay$a$a` v0 @kind this, `io.reactivex.internal.operators.single.SingleDelay$a` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDelay$a$a;.<init>:(Lio/reactivex/internal/operators/single/SingleDelay$a;Ljava/lang/Throwable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47e7d0.  v0.`io.reactivex.internal.operators.single.SingleDelay$a$a.b` @type ^`io.reactivex.internal.operators.single.SingleDelay$a` := v1 @kind object;
  #L47e7d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47e7da.  v0.`io.reactivex.internal.operators.single.SingleDelay$a$a.a` @type ^`java.lang.Throwable` := v2 @kind object;
  #L47e7de.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.single.SingleDelay$a$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDelay$a$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47e7f0.  v0:= v2.`io.reactivex.internal.operators.single.SingleDelay$a$a.b` @type ^`io.reactivex.internal.operators.single.SingleDelay$a` @kind object;
  #L47e7f4.  v0:= v0.`io.reactivex.internal.operators.single.SingleDelay$a.b` @type ^`io.reactivex.SingleObserver` @kind object;
  #L47e7f8.  v1:= v2.`io.reactivex.internal.operators.single.SingleDelay$a$a.a` @type ^`java.lang.Throwable` @kind object;
  #L47e7fc.  call `onError`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47e802.  return @kind void;
}
