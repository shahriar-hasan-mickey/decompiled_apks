record `io.reactivex.internal.operators.single.SingleDematerialize$a` @kind class @AccessFlag FINAL extends `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.single.SingleDematerialize$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.single.SingleDematerialize$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.single.SingleDematerialize$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDematerialize$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDematerialize$a;.<init>:(Lio/reactivex/MaybeObserver;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47eee8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47eeee.  v0.`io.reactivex.internal.operators.single.SingleDematerialize$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L47eef2.  v0.`io.reactivex.internal.operators.single.SingleDematerialize$a.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L47eef6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.single.SingleDematerialize$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDematerialize$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ef08.  v0:= v1.`io.reactivex.internal.operators.single.SingleDematerialize$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L47ef0c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L47ef12.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.single.SingleDematerialize$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDematerialize$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47eec8.  v0:= v1.`io.reactivex.internal.operators.single.SingleDematerialize$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L47eecc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L47eed2.  v0:= temp;
  #L47eed4.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleDematerialize$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDematerialize$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ef24.  v0:= v1.`io.reactivex.internal.operators.single.SingleDematerialize$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L47ef28.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47ef2e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleDematerialize$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDematerialize$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ef40.  v0:= v1.`io.reactivex.internal.operators.single.SingleDematerialize$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L47ef44.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L47ef4a.  v0:= temp;
  #L47ef4c.  if v0 == 0 then goto L47ef5e;
  #L47ef50.  v1.`io.reactivex.internal.operators.single.SingleDematerialize$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L47ef54.  v2:= v1.`io.reactivex.internal.operators.single.SingleDematerialize$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L47ef58.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L47ef5e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleDematerialize$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDematerialize$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ef70.  v0:= v1.`io.reactivex.internal.operators.single.SingleDematerialize$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L47ef74.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L47ef7a.  v2:= temp @kind object;
  #L47ef7c.  v0:= "The selector returned a null Notification" @kind object;
  #L47ef80.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47ef86.  v2:= temp @kind object;
  #L47ef88.  v2:= (`io.reactivex.Notification`) v2 @kind object;
  #L47ef8c.  call temp:= `isOnNext`(v2) @signature `Lio/reactivex/Notification;.isOnNext:()Z` @kind virtual;
  #L47ef92.  v0:= temp;
  #L47ef94.  if v0 == 0 then goto L47efac;
  #L47ef98.  v0:= v1.`io.reactivex.internal.operators.single.SingleDematerialize$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L47ef9c.  call temp:= `getValue`(v2) @signature `Lio/reactivex/Notification;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L47efa2.  v2:= temp @kind object;
  #L47efa4.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L47efaa.  goto L47efd6;
  #L47efac.  call temp:= `isOnComplete`(v2) @signature `Lio/reactivex/Notification;.isOnComplete:()Z` @kind virtual;
  #L47efb2.  v0:= temp;
  #L47efb4.  if v0 == 0 then goto L47efc4;
  #L47efb8.  v2:= v1.`io.reactivex.internal.operators.single.SingleDematerialize$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L47efbc.  call `onComplete`(v2) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L47efc2.  goto L47efd6;
  #L47efc4.  v0:= v1.`io.reactivex.internal.operators.single.SingleDematerialize$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L47efc8.  call temp:= `getError`(v2) @signature `Lio/reactivex/Notification;.getError:()Ljava/lang/Throwable;` @kind virtual;
  #L47efce.  v2:= temp @kind object;
  #L47efd0.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47efd6.  return @kind void;
  #L47efd8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47efda.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47efe0.  v0:= v1.`io.reactivex.internal.operators.single.SingleDematerialize$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L47efe4.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47efea.  return @kind void;
  catch `java.lang.Throwable` @[L47ef70..L47ef8c] goto L47efd8;
}
