record `io.reactivex.internal.operators.single.SingleResumeNext$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleResumeNext$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.single.SingleResumeNext$a.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.single.SingleResumeNext$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleResumeNext$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4817d8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4817de.  v0.`io.reactivex.internal.operators.single.SingleResumeNext$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L4817e2.  v0.`io.reactivex.internal.operators.single.SingleResumeNext$a.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L4817e6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.single.SingleResumeNext$a` v0 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L4817f8.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4817fe.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.single.SingleResumeNext$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4817b0.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4817b6.  v0:= temp @kind object;
  #L4817b8.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4817bc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4817c2.  v0:= temp;
  #L4817c4.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleResumeNext$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L481810.  v0:= v5.`io.reactivex.internal.operators.single.SingleResumeNext$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L481814.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L48181a.  v0:= temp @kind object;
  #L48181c.  v1:= "The nextFunction returned a null SingleSource." @kind object;
  #L481820.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L481826.  v0:= temp @kind object;
  #L481828.  v0:= (`io.reactivex.SingleSource`) v0 @kind object;
  #L48182c.  v6:= new `io.reactivex.internal.observers.ResumeSingleObserver`;
  #L481830.  v1:= v5.`io.reactivex.internal.operators.single.SingleResumeNext$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L481834.  call `<init>`(v6, v5, v1) @signature `Lio/reactivex/internal/observers/ResumeSingleObserver;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/SingleObserver;)V` @kind direct;
  #L48183a.  call `subscribe`(v0, v6) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L481840.  return @kind void;
  #L481842.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L481844.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48184a.  v1:= v5.`io.reactivex.internal.operators.single.SingleResumeNext$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L48184e.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L481852.  v3:= 2I;
  #L481854.  v3:= new `java.lang.Throwable`[v3];
  #L481858.  v4:= 0I;
  #L48185a.  v3[v4]:= v6 @kind object;
  #L48185e.  v6:= 1I;
  #L481860.  v3[v6]:= v0 @kind object;
  #L481864.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L48186a.  call `onError`(v1, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L481870.  return @kind void;
  catch `java.lang.Throwable` @[L481810..L48182c] goto L481842;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleResumeNext$a` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L481890.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L481896.  v1:= temp;
  #L481898.  if v1 == 0 then goto L4818a6;
  #L48189c.  v1:= v0.`io.reactivex.internal.operators.single.SingleResumeNext$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L4818a0.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4818a6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleResumeNext$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4818b8.  v0:= v1.`io.reactivex.internal.operators.single.SingleResumeNext$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L4818bc.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4818c2.  return @kind void;
}
