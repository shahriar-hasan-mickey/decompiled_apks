record `io.reactivex.internal.operators.single.SingleDefer` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.single.SingleDefer.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDefer` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDefer;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47e764.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L47e76a.  v0.`io.reactivex.internal.operators.single.SingleDefer.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L47e76e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleDefer` v2 @kind this, `io.reactivex.SingleObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDefer;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L47e780.  v0:= v2.`io.reactivex.internal.operators.single.SingleDefer.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L47e784.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L47e78a.  v0:= temp @kind object;
  #L47e78c.  v1:= "The singleSupplier returned a null SingleSource" @kind object;
  #L47e790.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47e796.  v0:= temp @kind object;
  #L47e798.  v0:= (`io.reactivex.SingleSource`) v0 @kind object;
  #L47e79c.  call `subscribe`(v0, v3) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L47e7a2.  return @kind void;
  #L47e7a4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47e7a6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47e7ac.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/SingleObserver;)V` @kind static;
  #L47e7b2.  return @kind void;
  catch `java.lang.Throwable` @[L47e780..L47e79c] goto L47e7a4;
}
