record `io.reactivex.internal.operators.single.SingleAmb` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `io.reactivex.SingleSource`[] `io.reactivex.internal.operators.single.SingleAmb.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.single.SingleAmb.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleAmb` v0 @kind this, `io.reactivex.SingleSource`[] v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleAmb;.<init>:([Lio/reactivex/SingleSource;Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47dfe8.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L47dfee.  v0.`io.reactivex.internal.operators.single.SingleAmb.a` @type ^`io.reactivex.SingleSource`[] := v1 @kind object;
  #L47dff2.  v0.`io.reactivex.internal.operators.single.SingleAmb.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L47dff6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.single.SingleAmb` v9 @kind this, `io.reactivex.SingleObserver` v10 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleAmb;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L47e008.  v0:= v9.`io.reactivex.internal.operators.single.SingleAmb.a` @type ^`io.reactivex.SingleSource`[] @kind object;
  #L47e00c.  v1:= "One of the sources is null" @kind object;
  #L47e010.  v2:= 0I;
  #L47e012.  if v0 != 0 then goto L47e08e;
  #L47e016.  v0:= 8I;
  #L47e01a.  v0:= new `io.reactivex.SingleSource`[v0];
  #L47e01e.  v3:= v9.`io.reactivex.internal.operators.single.SingleAmb.b` @type ^`java.lang.Iterable` @kind object;
  #L47e022.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L47e028.  v3:= temp @kind object;
  #L47e02a.  v4:= 0I;
  #L47e02c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L47e032.  v5:= temp;
  #L47e034.  if v5 == 0 then goto L47e090;
  #L47e038.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L47e03e.  v5:= temp @kind object;
  #L47e040.  v5:= (`io.reactivex.SingleSource`) v5 @kind object;
  #L47e044.  if v5 != 0 then goto L47e05a;
  #L47e048.  v0:= new `java.lang.NullPointerException`;
  #L47e04c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47e052.  call `error`(v0, v10) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/SingleObserver;)V` @kind static;
  #L47e058.  return @kind void;
  #L47e05a.  v6:= length @variable v0;
  #L47e05c.  if v4 != v6 then goto L47e072;
  #L47e060.  v6:= v4 ^> 2;
  #L47e064.  v6:= v6 + v4 @kind int;
  #L47e066.  v6:= new `io.reactivex.SingleSource`[v6];
  #L47e06a.  call `arraycopy`(v0, v2, v6, v2, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L47e070.  v0:= v6 @kind object;
  #L47e072.  v6:= v4 + 1;
  #L47e076.  v0[v4]:= v5 @kind object;
  #L47e07a.  v4:= v6;
  #L47e07c.  goto L47e02c;
  #L47e07e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47e080.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47e086.  call `error`(v0, v10) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/SingleObserver;)V` @kind static;
  #L47e08c.  return @kind void;
  #L47e08e.  v4:= length @variable v0;
  #L47e090.  v3:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L47e094.  call `<init>`(v3) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L47e09a.  v5:= new `io.reactivex.disposables.CompositeDisposable`;
  #L47e09e.  call `<init>`(v5) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L47e0a4.  call `onSubscribe`(v10, v5) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L47e0aa.  v6:= 0I;
  #L47e0ac.  if v6 >= v4 then goto L47e10a;
  #L47e0b0.  v7:= v0[v6] @kind object;
  #L47e0b4.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L47e0ba.  v8:= temp;
  #L47e0bc.  if v8 == 0 then goto L47e0c2;
  #L47e0c0.  return @kind void;
  #L47e0c2.  if v7 != 0 then goto L47e0f4;
  #L47e0c6.  call `dispose`(v5) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L47e0cc.  v0:= new `java.lang.NullPointerException`;
  #L47e0d0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47e0d6.  v1:= 1I;
  #L47e0d8.  call temp:= `compareAndSet`(v3, v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L47e0de.  v1:= temp;
  #L47e0e0.  if v1 == 0 then goto L47e0ec;
  #L47e0e4.  call `onError`(v10, v0) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47e0ea.  goto L47e0f2;
  #L47e0ec.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L47e0f2.  return @kind void;
  #L47e0f4.  v8:= new `io.reactivex.internal.operators.single.SingleAmb$a`;
  #L47e0f8.  call `<init>`(v8, v10, v5, v3) @signature `Lio/reactivex/internal/operators/single/SingleAmb$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/disposables/CompositeDisposable;Ljava/util/concurrent/atomic/AtomicBoolean;)V` @kind direct;
  #L47e0fe.  call `subscribe`(v7, v8) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L47e104.  v6:= v6 + 1;
  #L47e108.  goto L47e0ac;
  #L47e10a.  return @kind void;
  catch `java.lang.Throwable` @[L47e01e..L47e07a] goto L47e07e;
}
