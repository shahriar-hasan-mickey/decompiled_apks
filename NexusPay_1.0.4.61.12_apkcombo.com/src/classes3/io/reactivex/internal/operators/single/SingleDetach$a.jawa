record `io.reactivex.internal.operators.single.SingleDetach$a` @kind class @AccessFlag FINAL extends `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleDetach$a.a` @AccessFlag ;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.single.SingleDetach$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDetach$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDetach$a;.<init>:(Lio/reactivex/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47f074.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47f07a.  v0.`io.reactivex.internal.operators.single.SingleDetach$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L47f07e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.single.SingleDetach$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDetach$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f090.  v0:= 0I;
  #L47f092.  v1.`io.reactivex.internal.operators.single.SingleDetach$a.a` @type ^`io.reactivex.SingleObserver` := v0 @kind object;
  #L47f096.  v0:= v1.`io.reactivex.internal.operators.single.SingleDetach$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L47f09a.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L47f0a0.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L47f0a4.  v1.`io.reactivex.internal.operators.single.SingleDetach$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L47f0a8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.single.SingleDetach$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDetach$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f054.  v0:= v1.`io.reactivex.internal.operators.single.SingleDetach$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L47f058.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L47f05e.  v0:= temp;
  #L47f060.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleDetach$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDetach$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f0bc.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L47f0c0.  v2.`io.reactivex.internal.operators.single.SingleDetach$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L47f0c4.  v0:= v2.`io.reactivex.internal.operators.single.SingleDetach$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L47f0c8.  if v0 == 0 then goto L47f0d8;
  #L47f0cc.  v1:= 0I;
  #L47f0ce.  v2.`io.reactivex.internal.operators.single.SingleDetach$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L47f0d2.  call `onError`(v0, v3) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47f0d8.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleDetach$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDetach$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f0ec.  v0:= v1.`io.reactivex.internal.operators.single.SingleDetach$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L47f0f0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L47f0f6.  v0:= temp;
  #L47f0f8.  if v0 == 0 then goto L47f10a;
  #L47f0fc.  v1.`io.reactivex.internal.operators.single.SingleDetach$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L47f100.  v2:= v1.`io.reactivex.internal.operators.single.SingleDetach$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L47f104.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L47f10a.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleDetach$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDetach$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f11c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L47f120.  v2.`io.reactivex.internal.operators.single.SingleDetach$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L47f124.  v0:= v2.`io.reactivex.internal.operators.single.SingleDetach$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L47f128.  if v0 == 0 then goto L47f138;
  #L47f12c.  v1:= 0I;
  #L47f12e.  v2.`io.reactivex.internal.operators.single.SingleDetach$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L47f132.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L47f138.  return @kind void;
}
