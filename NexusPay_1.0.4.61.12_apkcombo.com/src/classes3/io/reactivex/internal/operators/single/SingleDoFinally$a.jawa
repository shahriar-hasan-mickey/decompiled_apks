record `io.reactivex.internal.operators.single.SingleDoFinally$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleDoFinally$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.single.SingleDoFinally$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.single.SingleDoFinally$a.c` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.single.SingleDoFinally$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDoFinally$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47f440.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L47f446.  v0.`io.reactivex.internal.operators.single.SingleDoFinally$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L47f44a.  v0.`io.reactivex.internal.operators.single.SingleDoFinally$a.b` @type ^`io.reactivex.functions.Action` := v2 @kind object;
  #L47f44e.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.single.SingleDoFinally$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L47f4fc.  v0:= 0I;
  #L47f4fe.  v1:= 1I;
  #L47f500.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z` @kind virtual;
  #L47f506.  v0:= temp;
  #L47f508.  if v0 == 0 then goto L47f526;
  #L47f50c.  v0:= v2.`io.reactivex.internal.operators.single.SingleDoFinally$a.b` @type ^`io.reactivex.functions.Action` @kind object;
  #L47f510.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L47f516.  goto L47f526;
  #L47f518.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47f51a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47f520.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L47f526.  return @kind void;
  catch `java.lang.Throwable` @[L47f50c..L47f516] goto L47f518;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.single.SingleDoFinally$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f460.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoFinally$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L47f464.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L47f46a.  call `a`(v1) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$a;.a:()V` @kind virtual;
  #L47f470.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.single.SingleDoFinally$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f420.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoFinally$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L47f424.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L47f42a.  v0:= temp;
  #L47f42c.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleDoFinally$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f484.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoFinally$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L47f488.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47f48e.  call `a`(v1) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$a;.a:()V` @kind virtual;
  #L47f494.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleDoFinally$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f4a8.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoFinally$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L47f4ac.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L47f4b2.  v0:= temp;
  #L47f4b4.  if v0 == 0 then goto L47f4c6;
  #L47f4b8.  v1.`io.reactivex.internal.operators.single.SingleDoFinally$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L47f4bc.  v2:= v1.`io.reactivex.internal.operators.single.SingleDoFinally$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L47f4c0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L47f4c6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleDoFinally$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f4d8.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoFinally$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L47f4dc.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L47f4e2.  call `a`(v1) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally$a;.a:()V` @kind virtual;
  #L47f4e8.  return @kind void;
}
