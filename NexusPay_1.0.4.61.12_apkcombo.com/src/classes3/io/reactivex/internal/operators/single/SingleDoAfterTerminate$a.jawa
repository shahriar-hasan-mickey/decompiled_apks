record `io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` @kind class @AccessFlag FINAL extends `io.reactivex.SingleObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47f2e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47f2ee.  v0.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L47f2f2.  v0.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.b` @type ^`io.reactivex.functions.Action` := v2 @kind object;
  #L47f2f6.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L47f324.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.b` @type ^`io.reactivex.functions.Action` @kind object;
  #L47f328.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L47f32e.  goto L47f33e;
  #L47f330.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47f332.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47f338.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L47f33e.  return @kind void;
  catch `java.lang.Throwable` @[L47f324..L47f32e] goto L47f330;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f308.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L47f30c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L47f312.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f2c8.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L47f2cc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L47f2d2.  v0:= temp;
  #L47f2d4.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f35c.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L47f360.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47f366.  call `a`(v1) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.a:()V` @kind direct;
  #L47f36c.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f380.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L47f384.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L47f38a.  v0:= temp;
  #L47f38c.  if v0 == 0 then goto L47f39e;
  #L47f390.  v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L47f394.  v2:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L47f398.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L47f39e.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f3b0.  v0:= v1.`io.reactivex.internal.operators.single.SingleDoAfterTerminate$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L47f3b4.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L47f3ba.  call `a`(v1) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate$a;.a:()V` @kind direct;
  #L47f3c0.  return @kind void;
}
