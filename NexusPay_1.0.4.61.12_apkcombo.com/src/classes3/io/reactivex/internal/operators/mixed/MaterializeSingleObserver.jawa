record `io.reactivex.internal.operators.mixed.MaterializeSingleObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.SingleObserver` @kind interface, `io.reactivex.MaybeObserver` @kind interface, `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.mixed.MaterializeSingleObserver.a` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.mixed.MaterializeSingleObserver.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.mixed.MaterializeSingleObserver` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/mixed/MaterializeSingleObserver;.<init>:(Lio/reactivex/SingleObserver;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L45d398.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45d39e.  v0.`io.reactivex.internal.operators.mixed.MaterializeSingleObserver.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L45d3a2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.mixed.MaterializeSingleObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/mixed/MaterializeSingleObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d3b4.  v0:= v1.`io.reactivex.internal.operators.mixed.MaterializeSingleObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d3b8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L45d3be.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.mixed.MaterializeSingleObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/mixed/MaterializeSingleObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d378.  v0:= v1.`io.reactivex.internal.operators.mixed.MaterializeSingleObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d37c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L45d382.  v0:= temp;
  #L45d384.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.mixed.MaterializeSingleObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/mixed/MaterializeSingleObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45d3d0.  v0:= v2.`io.reactivex.internal.operators.mixed.MaterializeSingleObserver.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L45d3d4.  call temp:= `createOnComplete`() @signature `Lio/reactivex/Notification;.createOnComplete:()Lio/reactivex/Notification;` @kind static;
  #L45d3da.  v1:= temp @kind object;
  #L45d3dc.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L45d3e2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.mixed.MaterializeSingleObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/MaterializeSingleObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d3f4.  v0:= v1.`io.reactivex.internal.operators.mixed.MaterializeSingleObserver.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L45d3f8.  call temp:= `createOnError`(v2) @signature `Lio/reactivex/Notification;.createOnError:(Ljava/lang/Throwable;)Lio/reactivex/Notification;` @kind static;
  #L45d3fe.  v2:= temp @kind object;
  #L45d400.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L45d406.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.mixed.MaterializeSingleObserver` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/MaterializeSingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d418.  v0:= v1.`io.reactivex.internal.operators.mixed.MaterializeSingleObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L45d41c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L45d422.  v0:= temp;
  #L45d424.  if v0 == 0 then goto L45d436;
  #L45d428.  v1.`io.reactivex.internal.operators.mixed.MaterializeSingleObserver.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L45d42c.  v2:= v1.`io.reactivex.internal.operators.mixed.MaterializeSingleObserver.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L45d430.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L45d436.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.mixed.MaterializeSingleObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/MaterializeSingleObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45d448.  v0:= v1.`io.reactivex.internal.operators.mixed.MaterializeSingleObserver.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L45d44c.  call temp:= `createOnNext`(v2) @signature `Lio/reactivex/Notification;.createOnNext:(Ljava/lang/Object;)Lio/reactivex/Notification;` @kind static;
  #L45d452.  v2:= temp @kind object;
  #L45d454.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L45d45a.  return @kind void;
}
