record `io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `io.reactivex.Flowable` `io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable` v0 @kind this, `io.reactivex.Flowable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/internal/operators/mixed/FlowableSwitchMapCompletable;.<init>:(Lio/reactivex/Flowable;Lio/reactivex/functions/Function;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L45c9e4.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L45c9ea.  v0.`io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable.a` @type ^`io.reactivex.Flowable` := v1 @kind object;
  #L45c9ee.  v0.`io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L45c9f2.  v0.`io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable.c` @type ^`boolean` := v3 @kind boolean;
  #L45c9f6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable` v4 @kind this, `io.reactivex.CompletableObserver` v5 @kind object) @signature `Lio/reactivex/internal/operators/mixed/FlowableSwitchMapCompletable;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45ca08.  v0:= v4.`io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable.a` @type ^`io.reactivex.Flowable` @kind object;
  #L45ca0c.  v1:= new `io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$a`;
  #L45ca10.  v2:= v4.`io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L45ca14.  v3:= v4.`io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable.c` @type ^`boolean` @kind boolean;
  #L45ca18.  call `<init>`(v1, v5, v2, v3) @signature `Lio/reactivex/internal/operators/mixed/FlowableSwitchMapCompletable$a;.<init>:(Lio/reactivex/CompletableObserver;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L45ca1e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Flowable;.subscribe:(Lio/reactivex/FlowableSubscriber;)V` @kind virtual;
  #L45ca24.  return @kind void;
}
