record `io.reactivex.internal.operators.mixed.a` @kind class @AccessFlag FINAL {
}
procedure `boolean` `a`(`java.lang.Object` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.CompletableObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/mixed/a;.a:(Ljava/lang/Object;Lio/reactivex/functions/Function;Lio/reactivex/CompletableObserver;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L45f204.  v0:= instanceof @variable v2 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L45f208.  if v0 == 0 then goto L45f25e;
  #L45f20c.  v2:= (`java.util.concurrent.Callable`) v2 @kind object;
  #L45f210.  v0:= 0I;
  #L45f212.  v1:= 1I;
  #L45f214.  call temp:= `call`(v2) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L45f21a.  v2:= temp @kind object;
  #L45f21c.  if v2 == 0 then goto L45f23a;
  #L45f220.  call temp:= `apply`(v3, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45f226.  v2:= temp @kind object;
  #L45f228.  v3:= "The mapper returned a null CompletableSource" @kind object;
  #L45f22c.  call temp:= `requireNonNull`(v2, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45f232.  v2:= temp @kind object;
  #L45f234.  v0:= v2 @kind object;
  #L45f236.  v0:= (`io.reactivex.CompletableSource`) v0 @kind object;
  #L45f23a.  if v0 != 0 then goto L45f246;
  #L45f23e.  call `complete`(v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/CompletableObserver;)V` @kind static;
  #L45f244.  goto L45f24c;
  #L45f246.  call `subscribe`(v0, v4) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L45f24c.  return v1;
  #L45f24e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45f250.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45f256.  call `error`(v2, v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/CompletableObserver;)V` @kind static;
  #L45f25c.  return v1;
  #L45f25e.  v2:= 0I;
  #L45f260.  return v2;
  catch `java.lang.Throwable` @[L45f214..L45f23a] goto L45f24e;
}
procedure `boolean` `b`(`java.lang.Object` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.Observer` v4 @kind object) @signature `Lio/reactivex/internal/operators/mixed/a;.b:(Ljava/lang/Object;Lio/reactivex/functions/Function;Lio/reactivex/Observer;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L45f280.  v0:= instanceof @variable v2 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L45f284.  if v0 == 0 then goto L45f2e2;
  #L45f288.  v2:= (`java.util.concurrent.Callable`) v2 @kind object;
  #L45f28c.  v0:= 0I;
  #L45f28e.  v1:= 1I;
  #L45f290.  call temp:= `call`(v2) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L45f296.  v2:= temp @kind object;
  #L45f298.  if v2 == 0 then goto L45f2b6;
  #L45f29c.  call temp:= `apply`(v3, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45f2a2.  v2:= temp @kind object;
  #L45f2a4.  v3:= "The mapper returned a null MaybeSource" @kind object;
  #L45f2a8.  call temp:= `requireNonNull`(v2, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45f2ae.  v2:= temp @kind object;
  #L45f2b0.  v0:= v2 @kind object;
  #L45f2b2.  v0:= (`io.reactivex.MaybeSource`) v0 @kind object;
  #L45f2b6.  if v0 != 0 then goto L45f2c2;
  #L45f2ba.  call `complete`(v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/Observer;)V` @kind static;
  #L45f2c0.  goto L45f2d0;
  #L45f2c2.  call temp:= `create`(v4) @signature `Lio/reactivex/internal/operators/maybe/MaybeToObservable;.create:(Lio/reactivex/Observer;)Lio/reactivex/MaybeObserver;` @kind static;
  #L45f2c8.  v2:= temp @kind object;
  #L45f2ca.  call `subscribe`(v0, v2) @signature `Lio/reactivex/MaybeSource;.subscribe:(Lio/reactivex/MaybeObserver;)V` @kind interface;
  #L45f2d0.  return v1;
  #L45f2d2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45f2d4.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45f2da.  call `error`(v2, v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L45f2e0.  return v1;
  #L45f2e2.  v2:= 0I;
  #L45f2e4.  return v2;
  catch `java.lang.Throwable` @[L45f290..L45f2b6] goto L45f2d2;
}
procedure `boolean` `c`(`java.lang.Object` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.Observer` v4 @kind object) @signature `Lio/reactivex/internal/operators/mixed/a;.c:(Ljava/lang/Object;Lio/reactivex/functions/Function;Lio/reactivex/Observer;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L45f304.  v0:= instanceof @variable v2 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L45f308.  if v0 == 0 then goto L45f366;
  #L45f30c.  v2:= (`java.util.concurrent.Callable`) v2 @kind object;
  #L45f310.  v0:= 0I;
  #L45f312.  v1:= 1I;
  #L45f314.  call temp:= `call`(v2) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L45f31a.  v2:= temp @kind object;
  #L45f31c.  if v2 == 0 then goto L45f33a;
  #L45f320.  call temp:= `apply`(v3, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45f326.  v2:= temp @kind object;
  #L45f328.  v3:= "The mapper returned a null SingleSource" @kind object;
  #L45f32c.  call temp:= `requireNonNull`(v2, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L45f332.  v2:= temp @kind object;
  #L45f334.  v0:= v2 @kind object;
  #L45f336.  v0:= (`io.reactivex.SingleSource`) v0 @kind object;
  #L45f33a.  if v0 != 0 then goto L45f346;
  #L45f33e.  call `complete`(v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/Observer;)V` @kind static;
  #L45f344.  goto L45f354;
  #L45f346.  call temp:= `create`(v4) @signature `Lio/reactivex/internal/operators/single/SingleToObservable;.create:(Lio/reactivex/Observer;)Lio/reactivex/SingleObserver;` @kind static;
  #L45f34c.  v2:= temp @kind object;
  #L45f34e.  call `subscribe`(v0, v2) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L45f354.  return v1;
  #L45f356.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45f358.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L45f35e.  call `error`(v2, v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L45f364.  return v1;
  #L45f366.  v2:= 0I;
  #L45f368.  return v2;
  catch `java.lang.Throwable` @[L45f314..L45f33a] goto L45f356;
}
