record `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.ObservableSource`[] `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.a` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.b` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L479360.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L479366.  v1:= 0I;
  #L479368.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.a` @type ^`io.reactivex.ObservableSource`[] := v1 @kind object;
  #L47936c.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L479370.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.c` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L479374.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableSource`[] v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/ObservableSource;[Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L479338.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L47933e.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.a` @type ^`io.reactivex.ObservableSource`[] := v2 @kind object;
  #L479342.  v1:= 0I;
  #L479344.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.b` @type ^`java.lang.Iterable` := v1 @kind object;
  #L479348.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.c` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L47934c.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany` v5 @kind this, `io.reactivex.Observer` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L479388.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.a` @type ^`io.reactivex.ObservableSource`[] @kind object;
  #L47938c.  if v0 != 0 then goto L4793f2;
  #L479390.  v0:= 8I;
  #L479394.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L479398.  v1:= v5.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.b` @type ^`java.lang.Iterable` @kind object;
  #L47939c.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4793a2.  v1:= temp @kind object;
  #L4793a4.  v2:= 0I;
  #L4793a6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4793ac.  v3:= temp;
  #L4793ae.  if v3 == 0 then goto L4793f4;
  #L4793b2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4793b8.  v3:= temp @kind object;
  #L4793ba.  v3:= (`io.reactivex.ObservableSource`) v3 @kind object;
  #L4793be.  v4:= length @variable v0;
  #L4793c0.  if v2 != v4 then goto L4793d6;
  #L4793c4.  v4:= v2 ^> 1;
  #L4793c8.  v4:= v4 + v2 @kind int;
  #L4793ca.  call temp:= `copyOf`(v0, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L4793d0.  v0:= temp @kind object;
  #L4793d2.  v0:= (`io.reactivex.ObservableSource`[]) v0 @kind object;
  #L4793d6.  v4:= v2 + 1;
  #L4793da.  v0[v2]:= v3 @kind object;
  #L4793de.  v2:= v4;
  #L4793e0.  goto L4793a6;
  #L4793e2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4793e4.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4793ea.  call `error`(v0, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L4793f0.  return @kind void;
  #L4793f2.  v2:= length @variable v0;
  #L4793f4.  if v2 != 0 then goto L479418;
  #L4793f8.  v0:= new `io.reactivex.internal.operators.observable.ObservableMap`;
  #L4793fc.  v1:= v5.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L479400.  v2:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$a`;
  #L479404.  call `<init>`(v2, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$a;.<init>:(Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;)V` @kind direct;
  #L47940a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L479410.  call `subscribeActual`(v0, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableMap;.subscribeActual:(Lio/reactivex/Observer;)V` @kind virtual;
  #L479416.  return @kind void;
  #L479418.  v1:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$b`;
  #L47941c.  v3:= v5.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L479420.  call `<init>`(v1, v6, v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$b;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;I)V` @kind direct;
  #L479426.  call `onSubscribe`(v6, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L47942c.  call `e`(v1, v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$b;.e:([Lio/reactivex/ObservableSource;I)V` @kind virtual;
  #L479432.  v6:= v5.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L479436.  call `subscribe`(v6, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L47943c.  return @kind void;
  catch `java.lang.Throwable` @[L479398..L4793de] goto L4793e2;
}
