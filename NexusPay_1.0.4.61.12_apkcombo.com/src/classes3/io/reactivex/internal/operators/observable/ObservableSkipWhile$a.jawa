record `io.reactivex.internal.operators.observable.ObservableSkipWhile$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableSkipWhile$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Predicate` `io.reactivex.internal.operators.observable.ObservableSkipWhile$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableSkipWhile$a.c` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableSkipWhile$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSkipWhile$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipWhile$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L473484.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47348a.  v0.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L47348e.  v0.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.b` @type ^`io.reactivex.functions.Predicate` := v2 @kind object;
  #L473492.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipWhile$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4734a4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4734a8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4734ae.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipWhile$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L473464.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L473468.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L47346e.  v0:= temp;
  #L473470.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipWhile$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4734c0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4734c4.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L4734ca.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipWhile$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4734dc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4734e0.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4734e6.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipWhile$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4734f8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.d` @type ^`boolean` @kind boolean;
  #L4734fc.  if v0 == 0 then goto L47350c;
  #L473500.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L473504.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L47350a.  goto L47352c;
  #L47350c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.b` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L473510.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L473516.  v0:= temp;
  #L473518.  if v0 != 0 then goto L47352c;
  #L47351c.  v0:= 1I;
  #L47351e.  v1.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.d` @type ^`boolean` := v0 @kind boolean;
  #L473522.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L473526.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L47352c.  return @kind void;
  #L47352e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L473530.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L473536.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L47353a.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L473540.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L473544.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47354a.  return @kind void;
  catch `java.lang.Throwable` @[L47350c..L473518] goto L47352e;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableSkipWhile$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipWhile$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L473568.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L47356c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L473572.  v0:= temp;
  #L473574.  if v0 == 0 then goto L473586;
  #L473578.  v1.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L47357c.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableSkipWhile$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L473580.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L473586.  return @kind void;
}
