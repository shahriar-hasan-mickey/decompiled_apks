record `io.reactivex.internal.operators.observable.ObservableCombineLatest` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `io.reactivex.ObservableSource`[] `io.reactivex.internal.operators.observable.ObservableCombineLatest.a` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.observable.ObservableCombineLatest.b` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableCombineLatest.c` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableCombineLatest.d` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableCombineLatest.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableCombineLatest` v0 @kind this, `io.reactivex.ObservableSource`[] v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L463980.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L463986.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.a` @type ^`io.reactivex.ObservableSource`[] := v1 @kind object;
  #L46398a.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L46398e.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.c` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L463992.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.d` @type ^`int` := v4;
  #L463996.  v0.`io.reactivex.internal.operators.observable.ObservableCombineLatest.e` @type ^`boolean` := v5 @kind boolean;
  #L46399a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableCombineLatest` v8 @kind this, `io.reactivex.Observer` v9 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4639ac.  v0:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest.a` @type ^`io.reactivex.ObservableSource`[] @kind object;
  #L4639b0.  if v0 != 0 then goto L463a08;
  #L4639b4.  v0:= 8I;
  #L4639b8.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L4639bc.  v1:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest.b` @type ^`java.lang.Iterable` @kind object;
  #L4639c0.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4639c6.  v1:= temp @kind object;
  #L4639c8.  v2:= 0I;
  #L4639ca.  v3:= 0I;
  #L4639cc.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4639d2.  v4:= temp;
  #L4639d4.  if v4 == 0 then goto L463a0a;
  #L4639d8.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4639de.  v4:= temp @kind object;
  #L4639e0.  v4:= (`io.reactivex.ObservableSource`) v4 @kind object;
  #L4639e4.  v5:= length @variable v0;
  #L4639e6.  if v3 != v5 then goto L4639fc;
  #L4639ea.  v5:= v3 ^> 2;
  #L4639ee.  v5:= v5 + v3 @kind int;
  #L4639f0.  v5:= new `io.reactivex.ObservableSource`[v5];
  #L4639f4.  call `arraycopy`(v0, v2, v5, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4639fa.  v0:= v5 @kind object;
  #L4639fc.  v5:= v3 + 1;
  #L463a00.  v0[v3]:= v4 @kind object;
  #L463a04.  v3:= v5;
  #L463a06.  goto L4639cc;
  #L463a08.  v3:= length @variable v0;
  #L463a0a.  v4:= v3;
  #L463a0c.  if v4 != 0 then goto L463a18;
  #L463a10.  call `complete`(v9) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/Observer;)V` @kind static;
  #L463a16.  return @kind void;
  #L463a18.  v7:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest$b`;
  #L463a1c.  v3:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L463a20.  v5:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest.d` @type ^`int`;
  #L463a24.  v6:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest.e` @type ^`boolean` @kind boolean;
  #L463a28.  v1:= v7 @kind object;
  #L463a2a.  v2:= v9 @kind object;
  #L463a2c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$b;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;IIZ)V` @kind direct;
  #L463a32.  call `g`(v7, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$b;.g:([Lio/reactivex/ObservableSource;)V` @kind virtual;
  #L463a38.  return @kind void;
}
