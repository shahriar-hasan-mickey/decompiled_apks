record `io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @AccessFlag ;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/BiFunction;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L46eff0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46eff6.  v0.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L46effa.  v0.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L46effe.  v0.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.b` @type ^`io.reactivex.functions.BiFunction` := v2 @kind object;
  #L46f002.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46f014.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46f018.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L46f01e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46efd0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46efd4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L46efda.  v0:= temp;
  #L46efdc.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46f030.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L46f034.  if v0 == 0 then goto L46f048;
  #L46f038.  v1:= 0I;
  #L46f03a.  v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L46f03e.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L46f042.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L46f048.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46f05c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L46f060.  if v0 == 0 then goto L46f076;
  #L46f064.  v0:= 0I;
  #L46f066.  v1.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L46f06a.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L46f06e.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L46f074.  goto L46f07c;
  #L46f076.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L46f07c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46f090.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L46f094.  if v0 == 0 then goto L46f0ce;
  #L46f098.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.b` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L46f09c.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L46f0a2.  v3:= temp @kind object;
  #L46f0a4.  v0:= "The reducer returned a null value" @kind object;
  #L46f0a8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46f0ae.  v3:= temp @kind object;
  #L46f0b0.  v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L46f0b4.  goto L46f0ce;
  #L46f0b6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46f0b8.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L46f0be.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46f0c2.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L46f0c8.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L46f0ce.  return @kind void;
  catch `java.lang.Throwable` @[L46f098..L46f0b4] goto L46f0b6;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46f0ec.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46f0f0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L46f0f6.  v0:= temp;
  #L46f0f8.  if v0 == 0 then goto L46f10a;
  #L46f0fc.  v1.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.d` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L46f100.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L46f104.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L46f10a.  return @kind void;
}
