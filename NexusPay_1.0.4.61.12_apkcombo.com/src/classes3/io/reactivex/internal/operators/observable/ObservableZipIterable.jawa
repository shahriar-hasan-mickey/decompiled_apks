record `io.reactivex.internal.operators.observable.ObservableZipIterable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `io.reactivex.Observable` `io.reactivex.internal.operators.observable.ObservableZipIterable.a` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.observable.ObservableZipIterable.b` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.observable.ObservableZipIterable.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableZipIterable` v0 @kind this, `io.reactivex.Observable` v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable;.<init>:(Lio/reactivex/Observable;Ljava/lang/Iterable;Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L479ac4.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L479aca.  v0.`io.reactivex.internal.operators.observable.ObservableZipIterable.a` @type ^`io.reactivex.Observable` := v1 @kind object;
  #L479ace.  v0.`io.reactivex.internal.operators.observable.ObservableZipIterable.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L479ad2.  v0.`io.reactivex.internal.operators.observable.ObservableZipIterable.c` @type ^`io.reactivex.functions.BiFunction` := v3 @kind object;
  #L479ad6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableZipIterable` v4 @kind this, `io.reactivex.Observer` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L479ae8.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableZipIterable.b` @type ^`java.lang.Iterable` @kind object;
  #L479aec.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L479af2.  v0:= temp @kind object;
  #L479af4.  v1:= "The iterator returned by other is null" @kind object;
  #L479af8.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L479afe.  v0:= temp @kind object;
  #L479b00.  v0:= (`java.util.Iterator`) v0 @kind object;
  #L479b04.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L479b0a.  v1:= temp;
  #L479b0c.  if v1 != 0 then goto L479b18;
  #L479b10.  call `complete`(v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/Observer;)V` @kind static;
  #L479b16.  return @kind void;
  #L479b18.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableZipIterable.a` @type ^`io.reactivex.Observable` @kind object;
  #L479b1c.  v2:= new `io.reactivex.internal.operators.observable.ObservableZipIterable$a`;
  #L479b20.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableZipIterable.c` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L479b24.  call `<init>`(v2, v5, v0, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable$a;.<init>:(Lio/reactivex/Observer;Ljava/util/Iterator;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L479b2a.  call `subscribe`(v1, v2) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L479b30.  return @kind void;
  #L479b32.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L479b34.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L479b3a.  call `error`(v0, v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L479b40.  return @kind void;
  #L479b42.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L479b44.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L479b4a.  call `error`(v0, v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L479b50.  return @kind void;
  catch `java.lang.Throwable` @[L479ae8..L479b04] goto L479b42;
  catch `java.lang.Throwable` @[L479b04..L479b0c] goto L479b32;
}
