record `io.reactivex.internal.operators.observable.ObservableSerialized` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSerialized` v0 @kind this, `io.reactivex.Observable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSerialized;.<init>:(Lio/reactivex/Observable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4729c0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4729c6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableSerialized` v2 @kind this, `io.reactivex.Observer` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSerialized;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4729d8.  v0:= v2.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L4729dc.  v1:= new `io.reactivex.observers.SerializedObserver`;
  #L4729e0.  call `<init>`(v1, v3) @signature `Lio/reactivex/observers/SerializedObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L4729e6.  call `subscribe`(v0, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4729ec.  return @kind void;
}
