record `io.reactivex.internal.operators.observable.ObservablePublishSelector` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservablePublishSelector.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservablePublishSelector` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservablePublishSelector;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L46e828.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L46e82e.  v0.`io.reactivex.internal.operators.observable.ObservablePublishSelector.a` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L46e832.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservablePublishSelector` v3 @kind this, `io.reactivex.Observer` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservablePublishSelector;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L46e844.  call temp:= `create`() @signature `Lio/reactivex/subjects/PublishSubject;.create:()Lio/reactivex/subjects/PublishSubject;` @kind static;
  #L46e84a.  v0:= temp @kind object;
  #L46e84c.  v1:= v3.`io.reactivex.internal.operators.observable.ObservablePublishSelector.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L46e850.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L46e856.  v1:= temp @kind object;
  #L46e858.  v2:= "The selector returned a null ObservableSource" @kind object;
  #L46e85c.  call temp:= `requireNonNull`(v1, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46e862.  v1:= temp @kind object;
  #L46e864.  v1:= (`io.reactivex.ObservableSource`) v1 @kind object;
  #L46e868.  v2:= new `io.reactivex.internal.operators.observable.ObservablePublishSelector$b`;
  #L46e86c.  call `<init>`(v2, v4) @signature `Lio/reactivex/internal/operators/observable/ObservablePublishSelector$b;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L46e872.  call `subscribe`(v1, v2) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L46e878.  v4:= v3.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L46e87c.  v1:= new `io.reactivex.internal.operators.observable.ObservablePublishSelector$a`;
  #L46e880.  call `<init>`(v1, v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservablePublishSelector$a;.<init>:(Lio/reactivex/subjects/PublishSubject;Ljava/util/concurrent/atomic/AtomicReference;)V` @kind direct;
  #L46e886.  call `subscribe`(v4, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L46e88c.  return @kind void;
  #L46e88e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46e890.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L46e896.  call `error`(v0, v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L46e89c.  return @kind void;
  catch `java.lang.Throwable` @[L46e84c..L46e868] goto L46e88e;
}
