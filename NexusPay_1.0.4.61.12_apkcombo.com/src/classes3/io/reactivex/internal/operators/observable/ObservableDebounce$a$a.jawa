record `io.reactivex.internal.operators.observable.ObservableDebounce$a$a` @kind class @AccessFlag FINAL extends `io.reactivex.observers.DisposableObserver` @kind class {
  `io.reactivex.internal.operators.observable.ObservableDebounce$a` `io.reactivex.internal.operators.observable.ObservableDebounce$a$a.b` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableDebounce$a$a.c` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableDebounce$a$a.d` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableDebounce$a$a.e` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.internal.operators.observable.ObservableDebounce$a$a.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDebounce$a$a` v1 @kind this, `io.reactivex.internal.operators.observable.ObservableDebounce$a` v2 @kind object, `long` v3 , `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a$a;.<init>:(Lio/reactivex/internal/operators/observable/ObservableDebounce$a;JLjava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L465534.  call `<init>`(v1) @signature `Lio/reactivex/observers/DisposableObserver;.<init>:()V` @kind direct;
  #L46553a.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L46553e.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L465544.  v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.f` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L465548.  v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableDebounce$a` := v2 @kind object;
  #L46554c.  v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.c` @type ^`long` := v3 @kind wide;
  #L465550.  v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.d` @type ^`java.lang.Object` := v5 @kind object;
  #L465554.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableDebounce$a$a` v4 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L465568.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.f` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L46556c.  v1:= 0I;
  #L46556e.  v2:= 1I;
  #L465570.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L465576.  v0:= temp;
  #L465578.  if v0 == 0 then goto L46558e;
  #L46557c.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableDebounce$a` @kind object;
  #L465580.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.c` @type ^`long` @kind wide;
  #L465584.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.d` @type ^`java.lang.Object` @kind object;
  #L465588.  call `a`(v0, v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a;.a:(JLjava/lang/Object;)V` @kind virtual;
  #L46558e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDebounce$a$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4655a0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.e` @type ^`boolean` @kind boolean;
  #L4655a4.  if v0 == 0 then goto L4655aa;
  #L4655a8.  return @kind void;
  #L4655aa.  v0:= 1I;
  #L4655ac.  v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4655b0.  call `a`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a$a;.a:()V` @kind virtual;
  #L4655b6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDebounce$a$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4655c8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.e` @type ^`boolean` @kind boolean;
  #L4655cc.  if v0 == 0 then goto L4655d8;
  #L4655d0.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4655d6.  return @kind void;
  #L4655d8.  v0:= 1I;
  #L4655da.  v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.e` @type ^`boolean` := v0 @kind boolean;
  #L4655de.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableDebounce$a` @kind object;
  #L4655e2.  call `onError`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4655e8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDebounce$a$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L4655fc.  v1:= v0.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.e` @type ^`boolean` @kind boolean;
  #L465600.  if v1 == 0 then goto L465606;
  #L465604.  return @kind void;
  #L465606.  v1:= 1I;
  #L465608.  v0.`io.reactivex.internal.operators.observable.ObservableDebounce$a$a.e` @type ^`boolean` := v1 @kind boolean;
  #L46560c.  call `dispose`(v0) @signature `Lio/reactivex/observers/DisposableObserver;.dispose:()V` @kind virtual;
  #L465612.  call `a`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce$a$a;.a:()V` @kind virtual;
  #L465618.  return @kind void;
}
