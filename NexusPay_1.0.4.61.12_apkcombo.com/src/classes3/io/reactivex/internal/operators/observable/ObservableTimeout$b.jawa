record `io.reactivex.internal.operators.observable.ObservableTimeout$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `io.reactivex.internal.operators.observable.ObservableTimeout$d` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableTimeout$b.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableTimeout$b.b` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.observable.ObservableTimeout$b.c` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.observable.ObservableTimeout$b.e` @AccessFlag FINAL;
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableTimeout$b.f` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableTimeout$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTimeout$b` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L475410.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L475416.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L47541a.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$b.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L47541e.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L475422.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L475428.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L47542c.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$b.f` @type ^`io.reactivex.ObservableSource` := v3 @kind object;
  #L475430.  v1:= new `java.util.concurrent.atomic.AtomicLong`;
  #L475434.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L47543a.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` := v1 @kind object;
  #L47543e.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L475442.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L475448.  v0.`io.reactivex.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L47544c.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableTimeout$b` v3 @kind this, `long` v4 , `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.a:(JLjava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47568c.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L475690.  v1:= 9223372036854775807L;
  #L47569a.  call temp:= `compareAndSet`(v0, v4, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L4756a0.  v4:= temp;
  #L4756a2.  if v4 == 0 then goto L4756b8;
  #L4756a6.  call temp:= `dispose`(v3) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4756ac.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L4756b0.  call `onError`(v4, v6) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4756b6.  goto L4756be;
  #L4756b8.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4756be.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.observable.ObservableTimeout$b` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.b:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L475638.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L47563c.  v1:= 9223372036854775807L;
  #L475646.  call temp:= `compareAndSet`(v0, v4, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L47564c.  v4:= temp;
  #L47564e.  if v4 == 0 then goto L47567a;
  #L475652.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L475656.  call temp:= `dispose`(v4) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L47565c.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$b.f` @type ^`io.reactivex.ObservableSource` @kind object;
  #L475660.  v5:= 0I;
  #L475662.  v3.`io.reactivex.internal.operators.observable.ObservableTimeout$b.f` @type ^`io.reactivex.ObservableSource` := v5 @kind object;
  #L475666.  v5:= new `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$a`;
  #L47566a.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L47566e.  call `<init>`(v5, v0, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$a;.<init>:(Lio/reactivex/Observer;Ljava/util/concurrent/atomic/AtomicReference;)V` @kind direct;
  #L475674.  call `subscribe`(v4, v5) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L47567a.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.operators.observable.ObservableTimeout$b` v3 @kind this, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.c:(Lio/reactivex/ObservableSource;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4756d0.  if v4 == 0 then goto L4756f8;
  #L4756d4.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeout$a`;
  #L4756d8.  v1:= 0L;
  #L4756dc.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$a;.<init>:(JLio/reactivex/internal/operators/observable/ObservableTimeout$d;)V` @kind direct;
  #L4756e2.  v1:= v3.`io.reactivex.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L4756e6.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L4756ec.  v1:= temp;
  #L4756ee.  if v1 == 0 then goto L4756f8;
  #L4756f2.  call `subscribe`(v4, v0) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4756f8.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableTimeout$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L475460.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L475464.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L47546a.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L475470.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L475474.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L47547a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableTimeout$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4753e8.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4753ee.  v0:= temp @kind object;
  #L4753f0.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4753f4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4753fa.  v0:= temp;
  #L4753fc.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableTimeout$b` v5 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47548c.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L475490.  v1:= 9223372036854775807L;
  #L47549a.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4754a0.  v3:= temp @kind wide;
  #L4754a2.  v0:= lcmp(v3, v1);
  #L4754a6.  if v0 == 0 then goto L4754c8;
  #L4754aa.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L4754ae.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4754b4.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L4754b8.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L4754be.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L4754c2.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L4754c8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableTimeout$b` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4754dc.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4754e0.  v1:= 9223372036854775807L;
  #L4754ea.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4754f0.  v3:= temp @kind wide;
  #L4754f2.  v0:= lcmp(v3, v1);
  #L4754f6.  if v0 == 0 then goto L47551a;
  #L4754fa.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L4754fe.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L475504.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L475508.  call `onError`(v0, v6) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47550e.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L475512.  call `dispose`(v6) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L475518.  goto L475520;
  #L47551a.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L475520.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableTimeout$b` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L475534.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L475538.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L47553e.  v0:= temp @kind wide;
  #L475540.  v2:= 9223372036854775807L;
  #L47554a.  v4:= lcmp(v0, v2);
  #L47554e.  if v4 == 0 then goto L4755fe;
  #L475552.  v4:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L475556.  v5:= 1L;
  #L47555a.  v5:= v5 + v0 @kind long;
  #L47555c.  call temp:= `compareAndSet`(v4, v0, v5) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L475562.  v0:= temp;
  #L475564.  if v0 != 0 then goto L47556a;
  #L475568.  goto L4755fe;
  #L47556a.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L47556e.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L475574.  v0:= temp @kind object;
  #L475576.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L47557a.  if v0 == 0 then goto L475584;
  #L47557e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L475584.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L475588.  call `onNext`(v0, v8) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L47558e.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$b.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L475592.  call temp:= `apply`(v0, v8) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L475598.  v8:= temp @kind object;
  #L47559a.  v0:= "The itemTimeoutIndicator returned a null ObservableSource." @kind object;
  #L47559e.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4755a4.  v8:= temp @kind object;
  #L4755a6.  v8:= (`io.reactivex.ObservableSource`) v8 @kind object;
  #L4755aa.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeout$a`;
  #L4755ae.  call `<init>`(v0, v5, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$a;.<init>:(JLio/reactivex/internal/operators/observable/ObservableTimeout$d;)V` @kind direct;
  #L4755b4.  v1:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$b.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L4755b8.  call temp:= `replace`(v1, v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L4755be.  v1:= temp;
  #L4755c0.  if v1 == 0 then goto L4755ca;
  #L4755c4.  call `subscribe`(v8, v0) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L4755ca.  return @kind void;
  #L4755cc.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4755ce.  call `throwIfFatal`(v8) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4755d4.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4755d8.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4755de.  v0:= temp @kind object;
  #L4755e0.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4755e4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4755ea.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$b.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L4755ee.  call temp:= `getAndSet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L4755f4.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableTimeout$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L4755f8.  call `onError`(v0, v8) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4755fe.  return @kind void;
  catch `java.lang.Throwable` @[L47558e..L4755aa] goto L4755cc;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableTimeout$b` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout$b;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47561c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTimeout$b.e` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L475620.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L475626.  return @kind void;
}
