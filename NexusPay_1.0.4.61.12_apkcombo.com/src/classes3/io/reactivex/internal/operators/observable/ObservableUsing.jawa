record `io.reactivex.internal.operators.observable.ObservableUsing` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableUsing.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableUsing.b` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.observable.ObservableUsing.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableUsing.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableUsing` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L476924.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L47692a.  v0.`io.reactivex.internal.operators.observable.ObservableUsing.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L47692e.  v0.`io.reactivex.internal.operators.observable.ObservableUsing.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L476932.  v0.`io.reactivex.internal.operators.observable.ObservableUsing.c` @type ^`io.reactivex.functions.Consumer` := v3 @kind object;
  #L476936.  v0.`io.reactivex.internal.operators.observable.ObservableUsing.d` @type ^`boolean` := v4 @kind boolean;
  #L47693a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableUsing` v5 @kind this, `io.reactivex.Observer` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableUsing;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47694c.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L476950.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L476956.  v0:= temp @kind object;
  #L476958.  v1:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L47695c.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L476962.  v1:= temp @kind object;
  #L476964.  v2:= "The sourceSupplier returned a null ObservableSource" @kind object;
  #L476968.  call temp:= `requireNonNull`(v1, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47696e.  v1:= temp @kind object;
  #L476970.  v1:= (`io.reactivex.ObservableSource`) v1 @kind object;
  #L476974.  v2:= new `io.reactivex.internal.operators.observable.ObservableUsing$a`;
  #L476978.  v3:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.c` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L47697c.  v4:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.d` @type ^`boolean` @kind boolean;
  #L476980.  call `<init>`(v2, v6, v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableUsing$a;.<init>:(Lio/reactivex/Observer;Ljava/lang/Object;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L476986.  call `subscribe`(v1, v2) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L47698c.  return @kind void;
  #L47698e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L476990.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L476996.  v2:= v5.`io.reactivex.internal.operators.observable.ObservableUsing.c` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L47699a.  call `accept`(v2, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4769a0.  call `error`(v1, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L4769a6.  return @kind void;
  #L4769a8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4769aa.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4769b0.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L4769b4.  v3:= 2I;
  #L4769b6.  v3:= new `java.lang.Throwable`[v3];
  #L4769ba.  v4:= 0I;
  #L4769bc.  v3[v4]:= v1 @kind object;
  #L4769c0.  v1:= 1I;
  #L4769c2.  v3[v1]:= v0 @kind object;
  #L4769c6.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L4769cc.  call `error`(v2, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L4769d2.  return @kind void;
  #L4769d4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4769d6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4769dc.  call `error`(v0, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L4769e2.  return @kind void;
  catch `java.lang.Throwable` @[L47694c..L476958] goto L4769d4;
  catch `java.lang.Throwable` @[L476958..L476974] goto L47698e;
  catch `java.lang.Throwable` @[L476996..L4769a0] goto L4769a8;
}
