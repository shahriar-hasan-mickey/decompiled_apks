record `io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$a` @kind class @AccessFlag FINAL extends `io.reactivex.observers.DisposableObserver` @kind class {
  `io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$b` `io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$a` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$b` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferExactBoundary$a;.<init>:(Lio/reactivex/internal/operators/observable/ObservableBufferExactBoundary$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L461bf4.  call `<init>`(v0) @signature `Lio/reactivex/observers/DisposableObserver;.<init>:()V` @kind direct;
  #L461bfa.  v0.`io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$b` := v1 @kind object;
  #L461bfe.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferExactBoundary$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L461c10.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$b` @kind object;
  #L461c14.  call `onComplete`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferExactBoundary$b;.onComplete:()V` @kind virtual;
  #L461c1a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferExactBoundary$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L461c2c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$b` @kind object;
  #L461c30.  call `onError`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferExactBoundary$b;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L461c36.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferExactBoundary$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L461c48.  v1:= v0.`io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$b` @kind object;
  #L461c4c.  call `b`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferExactBoundary$b;.b:()V` @kind virtual;
  #L461c52.  return @kind void;
}
