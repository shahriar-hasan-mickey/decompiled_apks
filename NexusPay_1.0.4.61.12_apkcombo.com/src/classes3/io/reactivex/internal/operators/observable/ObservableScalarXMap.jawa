record `io.reactivex.internal.operators.observable.ObservableScalarXMap` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableScalarXMap` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L471d90.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L471d96.  v0:= new `java.lang.IllegalStateException`;
  #L471d9a.  v1:= "No instances!" @kind object;
  #L471d9e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L471da4.  throw v0;
}
procedure `io.reactivex.Observable` `scalarXMap`(`java.lang.Object` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471d6c.  v0:= new `io.reactivex.internal.operators.observable.ObservableScalarXMap$a`;
  #L471d70.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$a;.<init>:(Ljava/lang/Object;Lio/reactivex/functions/Function;)V` @kind direct;
  #L471d76.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L471d7c.  v1:= temp @kind object;
  #L471d7e.  return v1 @kind object;
}
procedure `boolean` `tryScalarXMapSubscribe`(`io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.Observer` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.tryScalarXMapSubscribe:(Lio/reactivex/ObservableSource;Lio/reactivex/Observer;Lio/reactivex/functions/Function;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L471c8c.  v0:= instanceof @variable v1 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L471c90.  if v0 == 0 then goto L471d36;
  #L471c94.  v0:= 1I;
  #L471c96.  v1:= (`java.util.concurrent.Callable`) v1 @kind object;
  #L471c9a.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L471ca0.  v1:= temp @kind object;
  #L471ca2.  if v1 != 0 then goto L471cae;
  #L471ca6.  call `complete`(v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/Observer;)V` @kind static;
  #L471cac.  return v0;
  #L471cae.  call temp:= `apply`(v3, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L471cb4.  v1:= temp @kind object;
  #L471cb6.  v3:= "The mapper returned a null ObservableSource" @kind object;
  #L471cba.  call temp:= `requireNonNull`(v1, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471cc0.  v1:= temp @kind object;
  #L471cc2.  v1:= (`io.reactivex.ObservableSource`) v1 @kind object;
  #L471cc6.  v3:= instanceof @variable v1 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L471cca.  if v3 == 0 then goto L471d0e;
  #L471cce.  v1:= (`java.util.concurrent.Callable`) v1 @kind object;
  #L471cd2.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L471cd8.  v1:= temp @kind object;
  #L471cda.  if v1 != 0 then goto L471ce6;
  #L471cde.  call `complete`(v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/Observer;)V` @kind static;
  #L471ce4.  return v0;
  #L471ce6.  v3:= new `io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable`;
  #L471cea.  call `<init>`(v3, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$ScalarDisposable;.<init>:(Lio/reactivex/Observer;Ljava/lang/Object;)V` @kind direct;
  #L471cf0.  call `onSubscribe`(v2, v3) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L471cf6.  call `run`(v3) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$ScalarDisposable;.run:()V` @kind virtual;
  #L471cfc.  goto L471d14;
  #L471cfe.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L471d00.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L471d06.  call `error`(v1, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L471d0c.  return v0;
  #L471d0e.  call `subscribe`(v1, v2) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L471d14.  return v0;
  #L471d16.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L471d18.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L471d1e.  call `error`(v1, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L471d24.  return v0;
  #L471d26.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L471d28.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L471d2e.  call `error`(v1, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L471d34.  return v0;
  #L471d36.  v1:= 0I;
  #L471d38.  return v1;
  catch `java.lang.Throwable` @[L471c96..L471ca2] goto L471d26;
  catch `java.lang.Throwable` @[L471cae..L471cc6] goto L471d16;
  catch `java.lang.Throwable` @[L471cce..L471cda] goto L471cfe;
}
