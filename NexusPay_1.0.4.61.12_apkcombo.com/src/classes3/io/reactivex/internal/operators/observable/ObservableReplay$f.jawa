record `io.reactivex.internal.operators.observable.ObservableReplay$f` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class {
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableReplay$f.a` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableReplay$f.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableReplay$f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$f;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L470188.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L47018e.  v0.`io.reactivex.internal.operators.observable.ObservableReplay$f.a` @type ^`java.lang.Object` := v1 @kind object;
  #L470192.  return @kind void;
}
