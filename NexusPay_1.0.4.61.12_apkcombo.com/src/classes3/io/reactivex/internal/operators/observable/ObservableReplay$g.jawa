record `io.reactivex.internal.operators.observable.ObservableReplay$g` @kind class @AccessFlag FINAL extends `io.reactivex.observables.ConnectableObservable` @kind class {
  `io.reactivex.observables.ConnectableObservable` `io.reactivex.internal.operators.observable.ObservableReplay$g.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.Observable` `io.reactivex.internal.operators.observable.ObservableReplay$g.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableReplay$g` v0 @kind this, `io.reactivex.observables.ConnectableObservable` v1 @kind object, `io.reactivex.Observable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$g;.<init>:(Lio/reactivex/observables/ConnectableObservable;Lio/reactivex/Observable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47055c.  call `<init>`(v0) @signature `Lio/reactivex/observables/ConnectableObservable;.<init>:()V` @kind direct;
  #L470562.  v0.`io.reactivex.internal.operators.observable.ObservableReplay$g.a` @type ^`io.reactivex.observables.ConnectableObservable` := v1 @kind object;
  #L470566.  v0.`io.reactivex.internal.operators.observable.ObservableReplay$g.b` @type ^`io.reactivex.Observable` := v2 @kind object;
  #L47056a.  return @kind void;
}
procedure `void` `connect`(`io.reactivex.internal.operators.observable.ObservableReplay$g` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$g;.connect:(Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47057c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableReplay$g.a` @type ^`io.reactivex.observables.ConnectableObservable` @kind object;
  #L470580.  call `connect`(v0, v2) @signature `Lio/reactivex/observables/ConnectableObservable;.connect:(Lio/reactivex/functions/Consumer;)V` @kind virtual;
  #L470586.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableReplay$g` v1 @kind this, `io.reactivex.Observer` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$g;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L470598.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableReplay$g.b` @type ^`io.reactivex.Observable` @kind object;
  #L47059c.  call `subscribe`(v0, v2) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L4705a2.  return @kind void;
}
