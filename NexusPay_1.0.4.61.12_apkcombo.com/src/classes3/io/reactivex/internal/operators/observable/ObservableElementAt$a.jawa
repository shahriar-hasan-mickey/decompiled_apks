record `io.reactivex.internal.operators.observable.ObservableElementAt$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableElementAt$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableElementAt$a.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableElementAt$a.d` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableElementAt$a.e` @AccessFlag ;
  `long` `io.reactivex.internal.operators.observable.ObservableElementAt$a.f` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableElementAt$a.g` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableElementAt$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$a;.<init>:(Lio/reactivex/Observer;JLjava/lang/Object;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L466d7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L466d82.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L466d86.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt$a.b` @type ^`long` := v2 @kind wide;
  #L466d8a.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt$a.c` @type ^`java.lang.Object` := v4 @kind object;
  #L466d8e.  v0.`io.reactivex.internal.operators.observable.ObservableElementAt$a.d` @type ^`boolean` := v5 @kind boolean;
  #L466d92.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableElementAt$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466da4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L466da8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L466dae.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableElementAt$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466d5c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L466d60.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L466d66.  v0:= temp;
  #L466d68.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableElementAt$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L466dc0.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$a.g` @type ^`boolean` @kind boolean;
  #L466dc4.  if v0 != 0 then goto L466e0c;
  #L466dc8.  v0:= 1I;
  #L466dca.  v2.`io.reactivex.internal.operators.observable.ObservableElementAt$a.g` @type ^`boolean` := v0 @kind boolean;
  #L466dce.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$a.c` @type ^`java.lang.Object` @kind object;
  #L466dd2.  if v0 != 0 then goto L466df4;
  #L466dd6.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$a.d` @type ^`boolean` @kind boolean;
  #L466dda.  if v1 == 0 then goto L466df4;
  #L466dde.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L466de2.  v1:= new `java.util.NoSuchElementException`;
  #L466de6.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L466dec.  call `onError`(v0, v1) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L466df2.  goto L466e0c;
  #L466df4.  if v0 == 0 then goto L466e02;
  #L466df8.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L466dfc.  call `onNext`(v1, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L466e02.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L466e06.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L466e0c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableElementAt$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466e20.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.g` @type ^`boolean` @kind boolean;
  #L466e24.  if v0 == 0 then goto L466e30;
  #L466e28.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L466e2e.  return @kind void;
  #L466e30.  v0:= 1I;
  #L466e32.  v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.g` @type ^`boolean` := v0 @kind boolean;
  #L466e36.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L466e3a.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L466e40.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableElementAt$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L466e54.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.g` @type ^`boolean` @kind boolean;
  #L466e58.  if v0 == 0 then goto L466e5e;
  #L466e5c.  return @kind void;
  #L466e5e.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.f` @type ^`long` @kind wide;
  #L466e62.  v2:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.b` @type ^`long` @kind wide;
  #L466e66.  v4:= lcmp(v0, v2);
  #L466e6a.  if v4 != 0 then goto L466e94;
  #L466e6e.  v0:= 1I;
  #L466e70.  v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.g` @type ^`boolean` := v0 @kind boolean;
  #L466e74.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L466e78.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L466e7e.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L466e82.  call `onNext`(v0, v6) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L466e88.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L466e8c.  call `onComplete`(v6) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L466e92.  return @kind void;
  #L466e94.  v2:= 1L;
  #L466e98.  v0:= v0 + v2 @kind long;
  #L466e9a.  v5.`io.reactivex.internal.operators.observable.ObservableElementAt$a.f` @type ^`long` := v0 @kind wide;
  #L466e9e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableElementAt$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAt$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466eb0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L466eb4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L466eba.  v0:= temp;
  #L466ebc.  if v0 == 0 then goto L466ece;
  #L466ec0.  v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.e` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L466ec4.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableElementAt$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L466ec8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L466ece.  return @kind void;
}
