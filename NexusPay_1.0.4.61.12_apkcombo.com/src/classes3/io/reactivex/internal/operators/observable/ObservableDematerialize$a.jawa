record `io.reactivex.internal.operators.observable.ObservableDematerialize$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableDematerialize$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableDematerialize$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableDematerialize$a.c` @AccessFlag ;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableDematerialize$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L46609c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4660a2.  v0.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L4660a6.  v0.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L4660aa.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4660bc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4660c0.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4660c6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46607c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L466080.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L466086.  v0:= temp;
  #L466088.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4660d8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.c` @type ^`boolean` @kind boolean;
  #L4660dc.  if v0 == 0 then goto L4660e2;
  #L4660e0.  return @kind void;
  #L4660e2.  v0:= 1I;
  #L4660e4.  v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.c` @type ^`boolean` := v0 @kind boolean;
  #L4660e8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4660ec.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L4660f2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466104.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.c` @type ^`boolean` @kind boolean;
  #L466108.  if v0 == 0 then goto L466114;
  #L46610c.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L466112.  return @kind void;
  #L466114.  v0:= 1I;
  #L466116.  v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.c` @type ^`boolean` := v0 @kind boolean;
  #L46611a.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46611e.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L466124.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466138.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.c` @type ^`boolean` @kind boolean;
  #L46613c.  if v0 == 0 then goto L466168;
  #L466140.  v0:= instanceof @variable v2 @type ^`io.reactivex.Notification` @kind boolean;
  #L466144.  if v0 == 0 then goto L466166;
  #L466148.  v2:= (`io.reactivex.Notification`) v2 @kind object;
  #L46614c.  call temp:= `isOnError`(v2) @signature `Lio/reactivex/Notification;.isOnError:()Z` @kind virtual;
  #L466152.  v0:= temp;
  #L466154.  if v0 == 0 then goto L466166;
  #L466158.  call temp:= `getError`(v2) @signature `Lio/reactivex/Notification;.getError:()Ljava/lang/Throwable;` @kind virtual;
  #L46615e.  v2:= temp @kind object;
  #L466160.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L466166.  return @kind void;
  #L466168.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L46616c.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L466172.  v2:= temp @kind object;
  #L466174.  v0:= "The selector returned a null Notification" @kind object;
  #L466178.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46617e.  v2:= temp @kind object;
  #L466180.  v2:= (`io.reactivex.Notification`) v2 @kind object;
  #L466184.  call temp:= `isOnError`(v2) @signature `Lio/reactivex/Notification;.isOnError:()Z` @kind virtual;
  #L46618a.  v0:= temp;
  #L46618c.  if v0 == 0 then goto L4661aa;
  #L466190.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L466194.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L46619a.  call temp:= `getError`(v2) @signature `Lio/reactivex/Notification;.getError:()Ljava/lang/Throwable;` @kind virtual;
  #L4661a0.  v2:= temp @kind object;
  #L4661a2.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4661a8.  goto L4661da;
  #L4661aa.  call temp:= `isOnComplete`(v2) @signature `Lio/reactivex/Notification;.isOnComplete:()Z` @kind virtual;
  #L4661b0.  v0:= temp;
  #L4661b2.  if v0 == 0 then goto L4661c8;
  #L4661b6.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4661ba.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4661c0.  call `onComplete`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.onComplete:()V` @kind virtual;
  #L4661c6.  goto L4661da;
  #L4661c8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4661cc.  call temp:= `getValue`(v2) @signature `Lio/reactivex/Notification;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4661d2.  v2:= temp @kind object;
  #L4661d4.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4661da.  return @kind void;
  #L4661dc.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4661de.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4661e4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4661e8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4661ee.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4661f4.  return @kind void;
  catch `java.lang.Throwable` @[L466168..L466184] goto L4661dc;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableDematerialize$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466214.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L466218.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L46621e.  v0:= temp;
  #L466220.  if v0 == 0 then goto L466232;
  #L466224.  v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.d` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L466228.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDematerialize$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46622c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L466232.  return @kind void;
}
