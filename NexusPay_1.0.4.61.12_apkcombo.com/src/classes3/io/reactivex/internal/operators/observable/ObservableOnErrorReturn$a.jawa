record `io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L46dc94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46dc9a.  v0.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L46dc9e.  v0.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L46dca2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46dcb4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46dcb8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L46dcbe.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46dc74.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46dc78.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L46dc7e.  v0:= temp;
  #L46dc80.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46dcd0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46dcd4.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L46dcda.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L46dcec.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L46dcf0.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L46dcf6.  v0:= temp @kind object;
  #L46dcf8.  if v0 != 0 then goto L46dd1c;
  #L46dcfc.  v0:= new `java.lang.NullPointerException`;
  #L46dd00.  v1:= "The supplied value is null" @kind object;
  #L46dd04.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46dd0a.  call temp:= `initCause`(v0, v6) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L46dd10.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46dd14.  call `onError`(v6, v0) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L46dd1a.  return @kind void;
  #L46dd1c.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46dd20.  call `onNext`(v6, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L46dd26.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46dd2a.  call `onComplete`(v6) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L46dd30.  return @kind void;
  #L46dd32.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46dd34.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L46dd3a.  v1:= v5.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46dd3e.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L46dd42.  v3:= 2I;
  #L46dd44.  v3:= new `java.lang.Throwable`[v3];
  #L46dd48.  v4:= 0I;
  #L46dd4a.  v3[v4]:= v6 @kind object;
  #L46dd4e.  v6:= 1I;
  #L46dd50.  v3[v6]:= v0 @kind object;
  #L46dd54.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L46dd5a.  call `onError`(v1, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L46dd60.  return @kind void;
  catch `java.lang.Throwable` @[L46dcec..L46dcf8] goto L46dd32;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46dd80.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46dd84.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L46dd8a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46dd9c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46dda0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L46dda6.  v0:= temp;
  #L46dda8.  if v0 == 0 then goto L46ddba;
  #L46ddac.  v1.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L46ddb0.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableOnErrorReturn$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46ddb4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L46ddba.  return @kind void;
}
