record `io.reactivex.internal.operators.observable.ObservableHide$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableHide$a.a` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableHide$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableHide$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableHide$a;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L46ae18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46ae1e.  v0.`io.reactivex.internal.operators.observable.ObservableHide$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L46ae22.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableHide$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableHide$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46ae34.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableHide$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46ae38.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L46ae3e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableHide$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableHide$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46adf8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableHide$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46adfc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L46ae02.  v0:= temp;
  #L46ae04.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableHide$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableHide$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46ae50.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableHide$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46ae54.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L46ae5a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableHide$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableHide$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46ae6c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableHide$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46ae70.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L46ae76.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableHide$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableHide$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46ae88.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableHide$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46ae8c.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L46ae92.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableHide$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableHide$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46aea4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableHide$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46aea8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L46aeae.  v0:= temp;
  #L46aeb0.  if v0 == 0 then goto L46aec2;
  #L46aeb4.  v1.`io.reactivex.internal.operators.observable.ObservableHide$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L46aeb8.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableHide$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46aebc.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L46aec2.  return @kind void;
}
