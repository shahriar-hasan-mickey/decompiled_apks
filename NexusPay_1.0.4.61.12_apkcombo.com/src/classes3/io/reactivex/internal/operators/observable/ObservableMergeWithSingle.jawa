record `io.reactivex.internal.operators.observable.ObservableMergeWithSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.SingleSource` `io.reactivex.internal.operators.observable.ObservableMergeWithSingle.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableMergeWithSingle` v0 @kind this, `io.reactivex.Observable` v1 @kind object, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithSingle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/SingleSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L46d504.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L46d50a.  v0.`io.reactivex.internal.operators.observable.ObservableMergeWithSingle.a` @type ^`io.reactivex.SingleSource` := v2 @kind object;
  #L46d50e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableMergeWithSingle` v1 @kind this, `io.reactivex.Observer` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithSingle;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L46d520.  v0:= new `io.reactivex.internal.operators.observable.ObservableMergeWithSingle$a`;
  #L46d524.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithSingle$a;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L46d52a.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L46d530.  v2:= v1.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L46d534.  call `subscribe`(v2, v0) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L46d53a.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableMergeWithSingle.a` @type ^`io.reactivex.SingleSource` @kind object;
  #L46d53e.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableMergeWithSingle$a.c` @type ^`io.reactivex.internal.operators.observable.ObservableMergeWithSingle$a$a` @kind object;
  #L46d542.  call `subscribe`(v2, v0) @signature `Lio/reactivex/SingleSource;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind interface;
  #L46d548.  return @kind void;
}
