record `io.reactivex.internal.operators.observable.ObservableGroupBy` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableGroupBy.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableGroupBy.b` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableGroupBy.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableGroupBy.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableGroupBy` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L46a4d4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L46a4da.  v0.`io.reactivex.internal.operators.observable.ObservableGroupBy.a` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L46a4de.  v0.`io.reactivex.internal.operators.observable.ObservableGroupBy.b` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L46a4e2.  v0.`io.reactivex.internal.operators.observable.ObservableGroupBy.c` @type ^`int` := v4;
  #L46a4e6.  v0.`io.reactivex.internal.operators.observable.ObservableGroupBy.d` @type ^`boolean` := v5 @kind boolean;
  #L46a4ea.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableGroupBy` v8 @kind this, `io.reactivex.Observer` v9 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L46a4fc.  v0:= v8.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L46a500.  v7:= new `io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver`;
  #L46a504.  v3:= v8.`io.reactivex.internal.operators.observable.ObservableGroupBy.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L46a508.  v4:= v8.`io.reactivex.internal.operators.observable.ObservableGroupBy.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L46a50c.  v5:= v8.`io.reactivex.internal.operators.observable.ObservableGroupBy.c` @type ^`int`;
  #L46a510.  v6:= v8.`io.reactivex.internal.operators.observable.ObservableGroupBy.d` @type ^`boolean` @kind boolean;
  #L46a514.  v1:= v7 @kind object;
  #L46a516.  v2:= v9 @kind object;
  #L46a518.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$GroupByObserver;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L46a51e.  call `subscribe`(v0, v7) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L46a524.  return @kind void;
}
