record `io.reactivex.internal.operators.observable.ObservableDelay` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `long` `io.reactivex.internal.operators.observable.ObservableDelay.a` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableDelay.b` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableDelay.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableDelay.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDelay` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L465ffc.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L466002.  v0.`io.reactivex.internal.operators.observable.ObservableDelay.a` @type ^`long` := v2 @kind wide;
  #L466006.  v0.`io.reactivex.internal.operators.observable.ObservableDelay.b` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L46600a.  v0.`io.reactivex.internal.operators.observable.ObservableDelay.c` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L46600e.  v0.`io.reactivex.internal.operators.observable.ObservableDelay.d` @type ^`boolean` := v6 @kind boolean;
  #L466012.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableDelay` v8 @kind this, `io.reactivex.Observer` v9 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L466024.  v0:= v8.`io.reactivex.internal.operators.observable.ObservableDelay.d` @type ^`boolean` @kind boolean;
  #L466028.  if v0 == 0 then goto L466030;
  #L46602c.  v2:= v9 @kind object;
  #L46602e.  goto L46603c;
  #L466030.  v0:= new `io.reactivex.observers.SerializedObserver`;
  #L466034.  call `<init>`(v0, v9) @signature `Lio/reactivex/observers/SerializedObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L46603a.  v2:= v0 @kind object;
  #L46603c.  v9:= v8.`io.reactivex.internal.operators.observable.ObservableDelay.c` @type ^`io.reactivex.Scheduler` @kind object;
  #L466040.  call temp:= `createWorker`(v9) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L466046.  v6:= temp @kind object;
  #L466048.  v9:= v8.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L46604c.  v0:= new `io.reactivex.internal.operators.observable.ObservableDelay$a`;
  #L466050.  v3:= v8.`io.reactivex.internal.operators.observable.ObservableDelay.a` @type ^`long` @kind wide;
  #L466054.  v5:= v8.`io.reactivex.internal.operators.observable.ObservableDelay.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L466058.  v7:= v8.`io.reactivex.internal.operators.observable.ObservableDelay.d` @type ^`boolean` @kind boolean;
  #L46605c.  v1:= v0 @kind object;
  #L46605e.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay$a;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;Z)V` @kind direct;
  #L466064.  call `subscribe`(v9, v0) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L46606a.  return @kind void;
}
