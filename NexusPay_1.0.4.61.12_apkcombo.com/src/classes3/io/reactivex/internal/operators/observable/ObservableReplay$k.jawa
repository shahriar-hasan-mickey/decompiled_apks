record `io.reactivex.internal.operators.observable.ObservableReplay$k` @kind class @AccessFlag FINAL extends `io.reactivex.ObservableSource` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.observable.ObservableReplay$k.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.observable.ObservableReplay$b` `io.reactivex.internal.operators.observable.ObservableReplay$k.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableReplay$k` v0 @kind this, `java.util.concurrent.atomic.AtomicReference` v1 @kind object, `io.reactivex.internal.operators.observable.ObservableReplay$b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$k;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/internal/operators/observable/ObservableReplay$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4704b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4704ba.  v0.`io.reactivex.internal.operators.observable.ObservableReplay$k.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L4704be.  v0.`io.reactivex.internal.operators.observable.ObservableReplay$k.b` @type ^`io.reactivex.internal.operators.observable.ObservableReplay$b` := v2 @kind object;
  #L4704c2.  return @kind void;
}
procedure `void` `subscribe`(`io.reactivex.internal.operators.observable.ObservableReplay$k` v3 @kind this, `io.reactivex.Observer` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$k;.subscribe:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4704d4.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableReplay$k.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4704d8.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4704de.  v0:= temp @kind object;
  #L4704e0.  v0:= (`io.reactivex.internal.operators.observable.ObservableReplay$j`) v0 @kind object;
  #L4704e4.  if v0 != 0 then goto L470514;
  #L4704e8.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableReplay$k.b` @type ^`io.reactivex.internal.operators.observable.ObservableReplay$b` @kind object;
  #L4704ec.  call temp:= `call`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$b;.call:()Lio/reactivex/internal/operators/observable/ObservableReplay$h;` @kind interface;
  #L4704f2.  v0:= temp @kind object;
  #L4704f4.  v1:= new `io.reactivex.internal.operators.observable.ObservableReplay$j`;
  #L4704f8.  call `<init>`(v1, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$j;.<init>:(Lio/reactivex/internal/operators/observable/ObservableReplay$h;)V` @kind direct;
  #L4704fe.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableReplay$k.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L470502.  v2:= 0I;
  #L470504.  call temp:= `compareAndSet`(v0, v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L47050a.  v0:= temp;
  #L47050c.  if v0 != 0 then goto L470512;
  #L470510.  goto L4704d4;
  #L470512.  v0:= v1 @kind object;
  #L470514.  v1:= new `io.reactivex.internal.operators.observable.ObservableReplay$d`;
  #L470518.  call `<init>`(v1, v0, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$d;.<init>:(Lio/reactivex/internal/operators/observable/ObservableReplay$j;Lio/reactivex/Observer;)V` @kind direct;
  #L47051e.  call `onSubscribe`(v4, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L470524.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$j;.a:(Lio/reactivex/internal/operators/observable/ObservableReplay$d;)Z` @kind virtual;
  #L47052a.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$d;.isDisposed:()Z` @kind virtual;
  #L470530.  v4:= temp;
  #L470532.  if v4 == 0 then goto L47053e;
  #L470536.  call `b`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$j;.b:(Lio/reactivex/internal/operators/observable/ObservableReplay$d;)V` @kind virtual;
  #L47053c.  return @kind void;
  #L47053e.  v4:= v0.`io.reactivex.internal.operators.observable.ObservableReplay$j.a` @type ^`io.reactivex.internal.operators.observable.ObservableReplay$h` @kind object;
  #L470542.  call `c`(v4, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$h;.c:(Lio/reactivex/internal/operators/observable/ObservableReplay$d;)V` @kind interface;
  #L470548.  return @kind void;
}
