record `io.reactivex.internal.operators.observable.ObservableDoFinally$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.BasicIntQueueDisposable` @kind class, `io.reactivex.Observer` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableDoFinally$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.observable.ObservableDoFinally$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableDoFinally$a.c` @AccessFlag ;
  `io.reactivex.internal.fuseable.QueueDisposable` `io.reactivex.internal.operators.observable.ObservableDoFinally$a.d` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableDoFinally$a.e` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableDoFinally$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Action;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L466918.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BasicIntQueueDisposable;.<init>:()V` @kind direct;
  #L46691e.  v0.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L466922.  v0.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.b` @type ^`io.reactivex.functions.Action` := v2 @kind object;
  #L466926.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L466a1c.  v0:= 0I;
  #L466a1e.  v1:= 1I;
  #L466a20.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z` @kind virtual;
  #L466a26.  v0:= temp;
  #L466a28.  if v0 == 0 then goto L466a46;
  #L466a2c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.b` @type ^`io.reactivex.functions.Action` @kind object;
  #L466a30.  call `run`(v0) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L466a36.  goto L466a46;
  #L466a38.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L466a3a.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L466a40.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L466a46.  return @kind void;
  catch `java.lang.Throwable` @[L466a2c..L466a36] goto L466a38;
}
procedure `void` `clear`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466938.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.d` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L46693c.  call `clear`(v0) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L466942.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466954.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L466958.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L46695e.  call `a`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.a:()V` @kind virtual;
  #L466964.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466868.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46686c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L466872.  v0:= temp;
  #L466874.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466888.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.d` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L46688c.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.isEmpty:()Z` @kind interface;
  #L466892.  v0:= temp;
  #L466894.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L466978.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46697c.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L466982.  call `a`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.a:()V` @kind virtual;
  #L466988.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46699c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4669a0.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L4669a6.  call `a`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.a:()V` @kind virtual;
  #L4669ac.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4669c0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4669c4.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4669ca.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4669dc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4669e0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4669e6.  v0:= temp;
  #L4669e8.  if v0 == 0 then goto L466a0a;
  #L4669ec.  v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L4669f0.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind boolean;
  #L4669f4.  if v0 == 0 then goto L466a00;
  #L4669f8.  v2:= (`io.reactivex.internal.fuseable.QueueDisposable`) v2 @kind object;
  #L4669fc.  v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.d` @type ^`io.reactivex.internal.fuseable.QueueDisposable` := v2 @kind object;
  #L466a00.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L466a04.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L466a0a.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4668e8.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.d` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L4668ec.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4668f2.  v0:= temp @kind object;
  #L4668f4.  if v0 != 0 then goto L466906;
  #L4668f8.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.e` @type ^`boolean` @kind boolean;
  #L4668fc.  if v1 == 0 then goto L466906;
  #L466900.  call `a`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.a:()V` @kind virtual;
  #L466906.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.observable.ObservableDoFinally$a` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4668a8.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.d` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L4668ac.  v1:= 0I;
  #L4668ae.  if v0 == 0 then goto L4668d4;
  #L4668b2.  v2:= v4 ^& 4;
  #L4668b6.  if v2 != 0 then goto L4668d4;
  #L4668ba.  call temp:= `requestFusion`(v0, v4) @signature `Lio/reactivex/internal/fuseable/QueueFuseable;.requestFusion:(I)I` @kind interface;
  #L4668c0.  v4:= temp;
  #L4668c2.  if v4 == 0 then goto L4668d2;
  #L4668c6.  v0:= 1I;
  #L4668c8.  if v4 != v0 then goto L4668ce;
  #L4668cc.  v1:= 1I;
  #L4668ce.  v3.`io.reactivex.internal.operators.observable.ObservableDoFinally$a.e` @type ^`boolean` := v1 @kind boolean;
  #L4668d2.  return v4;
  #L4668d4.  return v1;
}
