record `io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.a` @AccessFlag FINAL;
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.b` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchIfEmpty$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4737c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4737ce.  v0.`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L4737d2.  v0.`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.b` @type ^`io.reactivex.ObservableSource` := v2 @kind object;
  #L4737d6.  v1:= 1I;
  #L4737d8.  v0.`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.d` @type ^`boolean` := v1 @kind boolean;
  #L4737dc.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L4737e0.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L4737e6.  v0.`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L4737ea.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchIfEmpty$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4737fc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.d` @type ^`boolean` @kind boolean;
  #L473800.  if v0 == 0 then goto L473816;
  #L473804.  v0:= 0I;
  #L473806.  v1.`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.d` @type ^`boolean` := v0 @kind boolean;
  #L47380a.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.b` @type ^`io.reactivex.ObservableSource` @kind object;
  #L47380e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L473814.  goto L473820;
  #L473816.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L47381a.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L473820.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchIfEmpty$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L473834.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L473838.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47383e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchIfEmpty$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L473850.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.d` @type ^`boolean` @kind boolean;
  #L473854.  if v0 == 0 then goto L47385e;
  #L473858.  v0:= 0I;
  #L47385a.  v1.`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.d` @type ^`boolean` := v0 @kind boolean;
  #L47385e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L473862.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L473868.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchIfEmpty$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47387c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$a.c` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L473880.  call temp:= `update`(v0, v2) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.update:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L473886.  return @kind void;
}
