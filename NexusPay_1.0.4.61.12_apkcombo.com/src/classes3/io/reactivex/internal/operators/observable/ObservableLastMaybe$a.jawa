record `io.reactivex.internal.operators.observable.ObservableLastMaybe$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.MaybeObserver` `io.reactivex.internal.operators.observable.ObservableLastMaybe$a.a` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @AccessFlag ;
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableLastMaybe$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$a` v0 @kind this, `io.reactivex.MaybeObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$a;.<init>:(Lio/reactivex/MaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L46c2c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46c2c6.  v0.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.MaybeObserver` := v1 @kind object;
  #L46c2ca.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46c2dc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46c2e0.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L46c2e6.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L46c2ea.  v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L46c2ee.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46c29c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46c2a0.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L46c2a4.  if v0 != v1 then goto L46c2ac;
  #L46c2a8.  v0:= 1I;
  #L46c2aa.  goto L46c2ae;
  #L46c2ac.  v0:= 0I;
  #L46c2ae.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46c300.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L46c304.  v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L46c308.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` @kind object;
  #L46c30c.  if v0 == 0 then goto L46c322;
  #L46c310.  v1:= 0I;
  #L46c312.  v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L46c316.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L46c31a.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/MaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L46c320.  goto L46c32c;
  #L46c322.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L46c326.  call `onComplete`(v0) @signature `Lio/reactivex/MaybeObserver;.onComplete:()V` @kind interface;
  #L46c32c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46c340.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L46c344.  v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L46c348.  v0:= 0I;
  #L46c34a.  v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` := v0 @kind object;
  #L46c34e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L46c352.  call `onError`(v0, v2) @signature `Lio/reactivex/MaybeObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L46c358.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L46c36c.  v0.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.c` @type ^`java.lang.Object` := v1 @kind object;
  #L46c370.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableLastMaybe$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46c384.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46c388.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L46c38e.  v0:= temp;
  #L46c390.  if v0 == 0 then goto L46c3a2;
  #L46c394.  v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L46c398.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableLastMaybe$a.a` @type ^`io.reactivex.MaybeObserver` @kind object;
  #L46c39c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/MaybeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L46c3a2.  return @kind void;
}
