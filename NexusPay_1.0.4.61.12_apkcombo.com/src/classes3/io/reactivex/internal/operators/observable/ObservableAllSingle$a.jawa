record `io.reactivex.internal.operators.observable.ObservableAllSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.observable.ObservableAllSingle$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Predicate` `io.reactivex.internal.operators.observable.ObservableAllSingle$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableAllSingle$a.c` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableAllSingle$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableAllSingle$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.<init>:(Lio/reactivex/SingleObserver;Lio/reactivex/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4600f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4600fe.  v0.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L460102.  v0.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.b` @type ^`io.reactivex.functions.Predicate` := v2 @kind object;
  #L460106.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableAllSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460118.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46011c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L460122.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableAllSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4600d8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4600dc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4600e2.  v0:= temp;
  #L4600e4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableAllSingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L460134.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L460138.  if v0 == 0 then goto L46013e;
  #L46013c.  return @kind void;
  #L46013e.  v0:= 1I;
  #L460140.  v2.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L460144.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L460148.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L46014c.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L460152.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableAllSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460164.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L460168.  if v0 == 0 then goto L460174;
  #L46016c.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L460172.  return @kind void;
  #L460174.  v0:= 1I;
  #L460176.  v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` := v0 @kind boolean;
  #L46017a.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L46017e.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L460184.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableAllSingle$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460198.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` @kind boolean;
  #L46019c.  if v0 == 0 then goto L4601a2;
  #L4601a0.  return @kind void;
  #L4601a2.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.b` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L4601a6.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4601ac.  v2:= temp;
  #L4601ae.  if v2 != 0 then goto L4601d0;
  #L4601b2.  v2:= 1I;
  #L4601b4.  v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.d` @type ^`boolean` := v2 @kind boolean;
  #L4601b8.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4601bc.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4601c2.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L4601c6.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L4601ca.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4601d0.  return @kind void;
  #L4601d2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4601d4.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4601da.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4601de.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4601e4.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4601ea.  return @kind void;
  catch `java.lang.Throwable` @[L4601a2..L4601ae] goto L4601d2;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableAllSingle$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460208.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46020c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L460212.  v0:= temp;
  #L460214.  if v0 == 0 then goto L460226;
  #L460218.  v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L46021c.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAllSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L460220.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L460226.  return @kind void;
}
