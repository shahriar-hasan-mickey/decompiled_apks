record `io.reactivex.internal.operators.observable.ObservableCreate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `io.reactivex.ObservableOnSubscribe` `io.reactivex.internal.operators.observable.ObservableCreate.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableCreate` v0 @kind this, `io.reactivex.ObservableOnSubscribe` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCreate;.<init>:(Lio/reactivex/ObservableOnSubscribe;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4654d0.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L4654d6.  v0.`io.reactivex.internal.operators.observable.ObservableCreate.a` @type ^`io.reactivex.ObservableOnSubscribe` := v1 @kind object;
  #L4654da.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableCreate` v1 @kind this, `io.reactivex.Observer` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCreate;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4654ec.  v0:= new `io.reactivex.internal.operators.observable.ObservableCreate$a`;
  #L4654f0.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableCreate$a;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L4654f6.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4654fc.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableCreate.a` @type ^`io.reactivex.ObservableOnSubscribe` @kind object;
  #L465500.  call `subscribe`(v2, v0) @signature `Lio/reactivex/ObservableOnSubscribe;.subscribe:(Lio/reactivex/ObservableEmitter;)V` @kind interface;
  #L465506.  goto L465516;
  #L465508.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46550a.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L465510.  call `onError`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableCreate$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L465516.  return @kind void;
  catch `java.lang.Throwable` @[L4654fc..L465506] goto L465508;
}
