record `io.reactivex.internal.operators.observable.ObservableLift` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.ObservableOperator` `io.reactivex.internal.operators.observable.ObservableLift.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableLift` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableOperator` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLift;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableOperator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L46c57c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L46c582.  v0.`io.reactivex.internal.operators.observable.ObservableLift.a` @type ^`io.reactivex.ObservableOperator` := v2 @kind object;
  #L46c586.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableLift` v2 @kind this, `io.reactivex.Observer` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableLift;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46c598.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableLift.a` @type ^`io.reactivex.ObservableOperator` @kind object;
  #L46c59c.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/ObservableOperator;.apply:(Lio/reactivex/Observer;)Lio/reactivex/Observer;` @kind interface;
  #L46c5a2.  v3:= temp @kind object;
  #L46c5a4.  v0:= new `java.lang.StringBuilder`;
  #L46c5a8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46c5ae.  v1:= "Operator " @kind object;
  #L46c5b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46c5b8.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableLift.a` @type ^`io.reactivex.ObservableOperator` @kind object;
  #L46c5bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46c5c2.  v1:= " returned a null Observer" @kind object;
  #L46c5c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46c5cc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46c5d2.  v0:= temp @kind object;
  #L46c5d4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c5da.  v3:= temp @kind object;
  #L46c5dc.  v3:= (`io.reactivex.Observer`) v3 @kind object;
  #L46c5e0.  v0:= v2.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L46c5e4.  call `subscribe`(v0, v3) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L46c5ea.  return @kind void;
  #L46c5ec.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46c5ee.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L46c5f4.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L46c5fa.  v0:= new `java.lang.NullPointerException`;
  #L46c5fe.  v1:= "Actually not, but can't throw other exceptions due to RS" @kind object;
  #L46c602.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46c608.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L46c60e.  throw v0;
  #L46c610.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L46c612.  throw v3;
  catch `java.lang.NullPointerException` @[L46c598..L46c5e0] goto L46c610;
  catch `java.lang.Throwable` @[L46c598..L46c5e0] goto L46c5ec;
}
