record `io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4692b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4692be.  v0.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L4692c2.  v0.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L4692c6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4692d8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4692dc.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4692e2.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4692e6.  v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L4692ea.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L469298.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46929c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4692a2.  v0:= temp;
  #L4692a4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4692fc.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L469300.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L469304.  if v0 != v1 then goto L46930a;
  #L469308.  return @kind void;
  #L46930a.  v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L46930e.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L469312.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L469318.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46932c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L469330.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L469334.  if v0 != v1 then goto L469340;
  #L469338.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L46933e.  return @kind void;
  #L469340.  v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` := v1 @kind object;
  #L469344.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L469348.  call `onError`(v0, v3) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L46934e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L469360.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L469364.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L469368.  if v0 != v1 then goto L46936e;
  #L46936c.  return @kind void;
  #L46936e.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L469372.  call temp:= `apply`(v0, v4) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L469378.  v4:= temp @kind object;
  #L46937a.  v4:= (`java.lang.Iterable`) v4 @kind object;
  #L46937e.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L469384.  v4:= temp @kind object;
  #L469386.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L46938a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L469390.  v1:= temp;
  #L469392.  if v1 == 0 then goto L4693ca;
  #L469396.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L46939c.  v1:= temp @kind object;
  #L46939e.  v2:= "The iterator returned a null value" @kind object;
  #L4693a2.  call temp:= `requireNonNull`(v1, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4693a8.  v1:= temp @kind object;
  #L4693aa.  call `onNext`(v0, v1) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4693b0.  goto L46938a;
  #L4693b2.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4693b4.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4693ba.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4693be.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4693c4.  call `onError`(v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4693ca.  return @kind void;
  #L4693cc.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4693ce.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4693d4.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4693d8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4693de.  call `onError`(v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4693e4.  return @kind void;
  #L4693e6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4693e8.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4693ee.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4693f2.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4693f8.  call `onError`(v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4693fe.  return @kind void;
  catch `java.lang.Throwable` @[L46936e..L469386] goto L4693e6;
  catch `java.lang.Throwable` @[L46938a..L469392] goto L4693cc;
  catch `java.lang.Throwable` @[L469396..L4693aa] goto L4693b2;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L469430.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L469434.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L46943a.  v0:= temp;
  #L46943c.  if v0 == 0 then goto L46944e;
  #L469440.  v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L469444.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableFlattenIterable$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L469448.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L46944e.  return @kind void;
}
