record `io.reactivex.internal.operators.observable.ObservableSampleWithObservable$b` @kind class @AccessFlag FINAL extends `io.reactivex.internal.operators.observable.ObservableSampleWithObservable$c` @kind class {
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableSampleWithObservable$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$b` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$b;.<init>:(Lio/reactivex/Observer;Lio/reactivex/ObservableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L471710.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$c;.<init>:(Lio/reactivex/Observer;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L471716.  return @kind void;
}
procedure `void` `b`(`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$b;.b:()V` @AccessFlag  {
    temp;
    v0;

  #L471728.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$c.a` @type ^`io.reactivex.Observer` @kind object;
  #L47172c.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L471732.  return @kind void;
}
procedure `void` `e`(`io.reactivex.internal.operators.observable.ObservableSampleWithObservable$b` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$b;.e:()V` @AccessFlag  {
    temp;

  #L471744.  call `c`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable$c;.c:()V` @kind virtual;
  #L47174a.  return @kind void;
}
