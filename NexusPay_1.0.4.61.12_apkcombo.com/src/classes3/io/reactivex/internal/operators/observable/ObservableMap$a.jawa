record `io.reactivex.internal.operators.observable.ObservableMap$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.BasicFuseableObserver` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableMap$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableMap$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMap$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L46c690.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L46c696.  v0.`io.reactivex.internal.operators.observable.ObservableMap$a.a` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L46c69a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableMap$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMap$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46c6ac.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.done` @type ^`boolean` @kind boolean;
  #L46c6b0.  if v0 == 0 then goto L46c6b6;
  #L46c6b4.  return @kind void;
  #L46c6b6.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.sourceMode` @type ^`int`;
  #L46c6ba.  if v0 == 0 then goto L46c6cc;
  #L46c6be.  v2:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L46c6c2.  v0:= 0I;
  #L46c6c4.  call `onNext`(v2, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L46c6ca.  return @kind void;
  #L46c6cc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableMap$a.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L46c6d0.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L46c6d6.  v2:= temp @kind object;
  #L46c6d8.  v0:= "The mapper function returned a null value." @kind object;
  #L46c6dc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c6e2.  v2:= temp @kind object;
  #L46c6e4.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L46c6e8.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L46c6ee.  return @kind void;
  #L46c6f0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46c6f2.  call `fail`(v1, v2) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L46c6f8.  return @kind void;
  catch `java.lang.Throwable` @[L46c6cc..L46c6e4] goto L46c6f0;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.ObservableMap$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableMap$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46c650.  v0:= v2.`io.reactivex.internal.observers.BasicFuseableObserver.qd` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L46c654.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L46c65a.  v0:= temp @kind object;
  #L46c65c.  if v0 == 0 then goto L46c67a;
  #L46c660.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableMap$a.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L46c664.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L46c66a.  v0:= temp @kind object;
  #L46c66c.  v1:= "The mapper function returned a null value." @kind object;
  #L46c670.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L46c676.  v0:= temp @kind object;
  #L46c678.  goto L46c67c;
  #L46c67a.  v0:= 0I;
  #L46c67c.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.observable.ObservableMap$a` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/observable/ObservableMap$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L46c634.  call temp:= `transitiveBoundaryFusion`(v0, v1) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.transitiveBoundaryFusion:(I)I` @kind virtual;
  #L46c63a.  v1:= temp;
  #L46c63c.  return v1;
}
