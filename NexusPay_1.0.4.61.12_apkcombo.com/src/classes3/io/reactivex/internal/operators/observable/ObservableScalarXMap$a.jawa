record `io.reactivex.internal.operators.observable.ObservableScalarXMap$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observable` @kind class {
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableScalarXMap$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableScalarXMap$a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableScalarXMap$a` v0 @kind this, `java.lang.Object` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$a;.<init>:(Ljava/lang/Object;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L471bc8.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L471bce.  v0.`io.reactivex.internal.operators.observable.ObservableScalarXMap$a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L471bd2.  v0.`io.reactivex.internal.operators.observable.ObservableScalarXMap$a.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L471bd6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableScalarXMap$a` v2 @kind this, `io.reactivex.Observer` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$a;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L471be8.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableScalarXMap$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L471bec.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableScalarXMap$a.a` @type ^`java.lang.Object` @kind object;
  #L471bf0.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L471bf6.  v0:= temp @kind object;
  #L471bf8.  v1:= "The mapper returned a null ObservableSource" @kind object;
  #L471bfc.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L471c02.  v0:= temp @kind object;
  #L471c04.  v0:= (`io.reactivex.ObservableSource`) v0 @kind object;
  #L471c08.  v1:= instanceof @variable v0 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L471c0c.  if v1 == 0 then goto L471c50;
  #L471c10.  v0:= (`java.util.concurrent.Callable`) v0 @kind object;
  #L471c14.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L471c1a.  v0:= temp @kind object;
  #L471c1c.  if v0 != 0 then goto L471c28;
  #L471c20.  call `complete`(v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/Observer;)V` @kind static;
  #L471c26.  return @kind void;
  #L471c28.  v1:= new `io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable`;
  #L471c2c.  call `<init>`(v1, v3, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$ScalarDisposable;.<init>:(Lio/reactivex/Observer;Ljava/lang/Object;)V` @kind direct;
  #L471c32.  call `onSubscribe`(v3, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L471c38.  call `run`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$ScalarDisposable;.run:()V` @kind virtual;
  #L471c3e.  goto L471c56;
  #L471c40.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L471c42.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L471c48.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L471c4e.  return @kind void;
  #L471c50.  call `subscribe`(v0, v3) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L471c56.  return @kind void;
  #L471c58.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L471c5a.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L471c60.  return @kind void;
  catch `java.lang.Throwable` @[L471be8..L471c08] goto L471c58;
  catch `java.lang.Throwable` @[L471c10..L471c1c] goto L471c40;
}
