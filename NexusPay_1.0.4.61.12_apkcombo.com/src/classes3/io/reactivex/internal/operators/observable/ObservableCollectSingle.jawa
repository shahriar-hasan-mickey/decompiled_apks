record `io.reactivex.internal.operators.observable.ObservableCollectSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class, `io.reactivex.internal.fuseable.FuseToObservable` @kind interface {
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableCollectSingle.a` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableCollectSingle.b` @AccessFlag FINAL;
  `io.reactivex.functions.BiConsumer` `io.reactivex.internal.operators.observable.ObservableCollectSingle.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableCollectSingle` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCollectSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4633b4.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L4633ba.  v0.`io.reactivex.internal.operators.observable.ObservableCollectSingle.a` @type ^`io.reactivex.ObservableSource` := v1 @kind object;
  #L4633be.  v0.`io.reactivex.internal.operators.observable.ObservableCollectSingle.b` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L4633c2.  v0.`io.reactivex.internal.operators.observable.ObservableCollectSingle.c` @type ^`io.reactivex.functions.BiConsumer` := v3 @kind object;
  #L4633c6.  return @kind void;
}
procedure `io.reactivex.Observable` `fuseToObservable`(`io.reactivex.internal.operators.observable.ObservableCollectSingle` v4 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableCollectSingle;.fuseToObservable:()Lio/reactivex/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L463384.  v0:= new `io.reactivex.internal.operators.observable.ObservableCollect`;
  #L463388.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableCollectSingle.a` @type ^`io.reactivex.ObservableSource` @kind object;
  #L46338c.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableCollectSingle.b` @type ^`java.util.concurrent.Callable` @kind object;
  #L463390.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableCollectSingle.c` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L463394.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableCollect;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L46339a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4633a0.  v0:= temp @kind object;
  #L4633a2.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableCollectSingle` v4 @kind this, `io.reactivex.SingleObserver` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCollectSingle;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4633d8.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableCollectSingle.b` @type ^`java.util.concurrent.Callable` @kind object;
  #L4633dc.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L4633e2.  v0:= temp @kind object;
  #L4633e4.  v1:= "The initialSupplier returned a null value" @kind object;
  #L4633e8.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4633ee.  v0:= temp @kind object;
  #L4633f0.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableCollectSingle.a` @type ^`io.reactivex.ObservableSource` @kind object;
  #L4633f4.  v2:= new `io.reactivex.internal.operators.observable.ObservableCollectSingle$a`;
  #L4633f8.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableCollectSingle.c` @type ^`io.reactivex.functions.BiConsumer` @kind object;
  #L4633fc.  call `<init>`(v2, v5, v0, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableCollectSingle$a;.<init>:(Lio/reactivex/SingleObserver;Ljava/lang/Object;Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L463402.  call `subscribe`(v1, v2) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L463408.  return @kind void;
  #L46340a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46340c.  call `error`(v0, v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/SingleObserver;)V` @kind static;
  #L463412.  return @kind void;
  catch `java.lang.Throwable` @[L4633d8..L4633f0] goto L46340a;
}
