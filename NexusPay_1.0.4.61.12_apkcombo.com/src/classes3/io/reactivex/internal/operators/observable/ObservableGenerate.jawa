record `io.reactivex.internal.operators.observable.ObservableGenerate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableGenerate.a` @AccessFlag FINAL;
  `io.reactivex.functions.BiFunction` `io.reactivex.internal.operators.observable.ObservableGenerate.b` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.observable.ObservableGenerate.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableGenerate` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableGenerate;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L469dd4.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L469dda.  v0.`io.reactivex.internal.operators.observable.ObservableGenerate.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L469dde.  v0.`io.reactivex.internal.operators.observable.ObservableGenerate.b` @type ^`io.reactivex.functions.BiFunction` := v2 @kind object;
  #L469de2.  v0.`io.reactivex.internal.operators.observable.ObservableGenerate.c` @type ^`io.reactivex.functions.Consumer` := v3 @kind object;
  #L469de6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableGenerate` v4 @kind this, `io.reactivex.Observer` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableGenerate;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L469df8.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableGenerate.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L469dfc.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L469e02.  v0:= temp @kind object;
  #L469e04.  v1:= new `io.reactivex.internal.operators.observable.ObservableGenerate$a`;
  #L469e08.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableGenerate.b` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L469e0c.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableGenerate.c` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L469e10.  call `<init>`(v1, v5, v2, v3, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableGenerate$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;Ljava/lang/Object;)V` @kind direct;
  #L469e16.  call `onSubscribe`(v5, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L469e1c.  call `b`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableGenerate$a;.b:()V` @kind virtual;
  #L469e22.  return @kind void;
  #L469e24.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L469e26.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L469e2c.  call `error`(v0, v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L469e32.  return @kind void;
  catch `java.lang.Throwable` @[L469df8..L469e04] goto L469e24;
}
