record `io.reactivex.internal.operators.observable.ObservableInternalHelper$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.Callable` @kind interface {
  `io.reactivex.Observable` `io.reactivex.internal.operators.observable.ObservableInternalHelper$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableInternalHelper$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$a` v0 @kind this, `io.reactivex.Observable` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$a;.<init>:(Lio/reactivex/Observable;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L46b188.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46b18e.  v0.`io.reactivex.internal.operators.observable.ObservableInternalHelper$a.a` @type ^`io.reactivex.Observable` := v1 @kind object;
  #L46b192.  v0.`io.reactivex.internal.operators.observable.ObservableInternalHelper$a.b` @type ^`int` := v2;
  #L46b196.  return @kind void;
}
procedure `io.reactivex.observables.ConnectableObservable` `a`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$a;.a:()Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46b148.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableInternalHelper$a.a` @type ^`io.reactivex.Observable` @kind object;
  #L46b14c.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableInternalHelper$a.b` @type ^`int`;
  #L46b150.  call temp:= `replay`(v0, v1) @signature `Lio/reactivex/Observable;.replay:(I)Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L46b156.  v0:= temp @kind object;
  #L46b158.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$a;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L46b16c.  call temp:= `a`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$a;.a:()Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L46b172.  v0:= temp @kind object;
  #L46b174.  return v0 @kind object;
}
