record `io.reactivex.internal.operators.observable.ObservableConcatWithMaybe` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.MaybeSource` `io.reactivex.internal.operators.observable.ObservableConcatWithMaybe.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableConcatWithMaybe` v0 @kind this, `io.reactivex.Observable` v1 @kind object, `io.reactivex.MaybeSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatWithMaybe;.<init>:(Lio/reactivex/Observable;Lio/reactivex/MaybeSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L464b7c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L464b82.  v0.`io.reactivex.internal.operators.observable.ObservableConcatWithMaybe.a` @type ^`io.reactivex.MaybeSource` := v2 @kind object;
  #L464b86.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableConcatWithMaybe` v3 @kind this, `io.reactivex.Observer` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatWithMaybe;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L464b98.  v0:= v3.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L464b9c.  v1:= new `io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$a`;
  #L464ba0.  v2:= v3.`io.reactivex.internal.operators.observable.ObservableConcatWithMaybe.a` @type ^`io.reactivex.MaybeSource` @kind object;
  #L464ba4.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatWithMaybe$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/MaybeSource;)V` @kind direct;
  #L464baa.  call `subscribe`(v0, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L464bb0.  return @kind void;
}
