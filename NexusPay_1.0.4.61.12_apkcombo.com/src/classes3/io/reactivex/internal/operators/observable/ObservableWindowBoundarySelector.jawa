record `io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector.b` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySelector;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4778d4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4778da.  v0.`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector.a` @type ^`io.reactivex.ObservableSource` := v2 @kind object;
  #L4778de.  v0.`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector.b` @type ^`io.reactivex.functions.Function` := v3 @kind object;
  #L4778e2.  v0.`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector.c` @type ^`int` := v4;
  #L4778e6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector` v5 @kind this, `io.reactivex.Observer` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySelector;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4778f8.  v0:= v5.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L4778fc.  v1:= new `io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$c`;
  #L477900.  v2:= new `io.reactivex.observers.SerializedObserver`;
  #L477904.  call `<init>`(v2, v6) @signature `Lio/reactivex/observers/SerializedObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L47790a.  v6:= v5.`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector.a` @type ^`io.reactivex.ObservableSource` @kind object;
  #L47790e.  v3:= v5.`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L477912.  v4:= v5.`io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector.c` @type ^`int`;
  #L477916.  call `<init>`(v1, v2, v6, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySelector$c;.<init>:(Lio/reactivex/Observer;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)V` @kind direct;
  #L47791c.  call `subscribe`(v0, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L477922.  return @kind void;
}
