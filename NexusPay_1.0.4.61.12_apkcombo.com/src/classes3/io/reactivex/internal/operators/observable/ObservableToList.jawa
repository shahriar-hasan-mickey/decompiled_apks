record `io.reactivex.internal.operators.observable.ObservableToList` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableToList.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableToList` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableToList;.<init>:(Lio/reactivex/ObservableSource;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4764b8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4764be.  call temp:= `createArrayList`(v2) @signature `Lio/reactivex/internal/functions/Functions;.createArrayList:(I)Ljava/util/concurrent/Callable;` @kind static;
  #L4764c4.  v1:= temp @kind object;
  #L4764c6.  v0.`io.reactivex.internal.operators.observable.ObservableToList.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L4764ca.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableToList` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableToList;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4764dc.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4764e2.  v0.`io.reactivex.internal.operators.observable.ObservableToList.a` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L4764e6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableToList` v3 @kind this, `io.reactivex.Observer` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableToList;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4764f8.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableToList.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L4764fc.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L476502.  v0:= temp @kind object;
  #L476504.  v1:= "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L476508.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47650e.  v0:= temp @kind object;
  #L476510.  v0:= (`java.util.Collection`) v0 @kind object;
  #L476514.  v1:= v3.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L476518.  v2:= new `io.reactivex.internal.operators.observable.ObservableToList$a`;
  #L47651c.  call `<init>`(v2, v4, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableToList$a;.<init>:(Lio/reactivex/Observer;Ljava/util/Collection;)V` @kind direct;
  #L476522.  call `subscribe`(v1, v2) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L476528.  return @kind void;
  #L47652a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47652c.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L476532.  call `error`(v0, v4) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/Observer;)V` @kind static;
  #L476538.  return @kind void;
  catch `java.lang.Throwable` @[L4764f8..L476514] goto L47652a;
}
