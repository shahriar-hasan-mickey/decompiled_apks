record `io.reactivex.internal.operators.observable.ObservableFilter$a` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.BasicFuseableObserver` @kind class {
  `io.reactivex.functions.Predicate` `io.reactivex.internal.operators.observable.ObservableFilter$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableFilter$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFilter$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L467400.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L467406.  v0.`io.reactivex.internal.operators.observable.ObservableFilter$a.a` @type ^`io.reactivex.functions.Predicate` := v2 @kind object;
  #L46740a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableFilter$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFilter$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46741c.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.sourceMode` @type ^`int`;
  #L467420.  if v0 != 0 then goto L46744a;
  #L467424.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFilter$a.a` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L467428.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L46742e.  v0:= temp;
  #L467430.  if v0 == 0 then goto L467456;
  #L467434.  v0:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L467438.  call `onNext`(v0, v2) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L46743e.  goto L467456;
  #L467440.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L467442.  call `fail`(v1, v2) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.fail:(Ljava/lang/Throwable;)V` @kind virtual;
  #L467448.  return @kind void;
  #L46744a.  v2:= v1.`io.reactivex.internal.observers.BasicFuseableObserver.downstream` @type ^`io.reactivex.Observer` @kind object;
  #L46744e.  v0:= 0I;
  #L467450.  call `onNext`(v2, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L467456.  return @kind void;
  catch `java.lang.Throwable` @[L467424..L467430] goto L467440;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.ObservableFilter$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFilter$a;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4673cc.  v0:= v2.`io.reactivex.internal.observers.BasicFuseableObserver.qd` @type ^`io.reactivex.internal.fuseable.QueueDisposable` @kind object;
  #L4673d0.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L4673d6.  v0:= temp @kind object;
  #L4673d8.  if v0 == 0 then goto L4673ec;
  #L4673dc.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableFilter$a.a` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L4673e0.  call temp:= `test`(v1, v0) @signature `Lio/reactivex/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4673e6.  v1:= temp;
  #L4673e8.  if v1 == 0 then goto L4673cc;
  #L4673ec.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.observable.ObservableFilter$a` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/observable/ObservableFilter$a;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L4673b0.  call temp:= `transitiveBoundaryFusion`(v0, v1) @signature `Lio/reactivex/internal/observers/BasicFuseableObserver;.transitiveBoundaryFusion:(I)I` @kind virtual;
  #L4673b6.  v1:= temp;
  #L4673b8.  return v1;
}
