record `io.reactivex.internal.operators.observable.ObservableAny$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableAny$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Predicate` `io.reactivex.internal.operators.observable.ObservableAny$a.b` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableAny$a.c` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableAny$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableAny$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Predicate;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4606e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4606ee.  v0.`io.reactivex.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L4606f2.  v0.`io.reactivex.internal.operators.observable.ObservableAny$a.b` @type ^`io.reactivex.functions.Predicate` := v2 @kind object;
  #L4606f6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableAny$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460708.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L46070c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L460712.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableAny$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4606c8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4606cc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4606d2.  v0:= temp;
  #L4606d4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableAny$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L460724.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` @kind boolean;
  #L460728.  if v0 != 0 then goto L46074a;
  #L46072c.  v0:= 1I;
  #L46072e.  v2.`io.reactivex.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` := v0 @kind boolean;
  #L460732.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L460736.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L46073a.  call `onNext`(v0, v1) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L460740.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L460744.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L46074a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableAny$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46075c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` @kind boolean;
  #L460760.  if v0 == 0 then goto L46076c;
  #L460764.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L46076a.  return @kind void;
  #L46076c.  v0:= 1I;
  #L46076e.  v1.`io.reactivex.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` := v0 @kind boolean;
  #L460772.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L460776.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L46077c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableAny$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460790.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` @kind boolean;
  #L460794.  if v0 == 0 then goto L46079a;
  #L460798.  return @kind void;
  #L46079a.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.b` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L46079e.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L4607a4.  v2:= temp;
  #L4607a6.  if v2 == 0 then goto L4607d2;
  #L4607aa.  v2:= 1I;
  #L4607ac.  v1.`io.reactivex.internal.operators.observable.ObservableAny$a.d` @type ^`boolean` := v2 @kind boolean;
  #L4607b0.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4607b4.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4607ba.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4607be.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4607c2.  call `onNext`(v2, v0) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L4607c8.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L4607cc.  call `onComplete`(v2) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L4607d2.  return @kind void;
  #L4607d4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4607d6.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4607dc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4607e0.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4607e6.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4607ec.  return @kind void;
  catch `java.lang.Throwable` @[L46079a..L4607a6] goto L4607d4;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableAny$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAny$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46080c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L460810.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L460816.  v0:= temp;
  #L460818.  if v0 == 0 then goto L46082a;
  #L46081c.  v1.`io.reactivex.internal.operators.observable.ObservableAny$a.c` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L460820.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableAny$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L460824.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L46082a.  return @kind void;
}
