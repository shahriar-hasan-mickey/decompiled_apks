record `io.reactivex.internal.operators.observable.ObservableWindowBoundary` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableWindowBoundary.a` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableWindowBoundary.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableWindowBoundary` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundary;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L477ea0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L477ea6.  v0.`io.reactivex.internal.operators.observable.ObservableWindowBoundary.a` @type ^`io.reactivex.ObservableSource` := v2 @kind object;
  #L477eaa.  v0.`io.reactivex.internal.operators.observable.ObservableWindowBoundary.b` @type ^`int` := v3;
  #L477eae.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableWindowBoundary` v2 @kind this, `io.reactivex.Observer` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundary;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L477ec0.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowBoundary$b`;
  #L477ec4.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableWindowBoundary.b` @type ^`int`;
  #L477ec8.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundary$b;.<init>:(Lio/reactivex/Observer;I)V` @kind direct;
  #L477ece.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L477ed4.  v3:= v2.`io.reactivex.internal.operators.observable.ObservableWindowBoundary.a` @type ^`io.reactivex.ObservableSource` @kind object;
  #L477ed8.  v1:= v0.`io.reactivex.internal.operators.observable.ObservableWindowBoundary$b.c` @type ^`io.reactivex.internal.operators.observable.ObservableWindowBoundary$a` @kind object;
  #L477edc.  call `subscribe`(v3, v1) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L477ee2.  v3:= v2.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L477ee6.  call `subscribe`(v3, v0) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L477eec.  return @kind void;
}
