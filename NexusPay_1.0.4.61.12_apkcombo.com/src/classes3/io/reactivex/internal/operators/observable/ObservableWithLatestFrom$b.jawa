record `io.reactivex.internal.operators.observable.ObservableWithLatestFrom$b` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface {
  `io.reactivex.internal.operators.observable.ObservableWithLatestFrom$a` `io.reactivex.internal.operators.observable.ObservableWithLatestFrom$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$b` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableWithLatestFrom` v1 @kind object, `io.reactivex.internal.operators.observable.ObservableWithLatestFrom$a` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$b;.<init>:(Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom;Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L478e88.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L478e8e.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$b.a` @type ^`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$a` := v2 @kind object;
  #L478e92.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$b` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L478ea4.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L478eb8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$b.a` @type ^`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$a` @kind object;
  #L478ebc.  call `a`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$a;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L478ec2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L478ed4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$b.a` @type ^`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$a` @kind object;
  #L478ed8.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L478ede.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$b` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$b;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L478ef0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$b.a` @type ^`io.reactivex.internal.operators.observable.ObservableWithLatestFrom$a` @kind object;
  #L478ef4.  call temp:= `b`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom$a;.b:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L478efa.  return @kind void;
}
