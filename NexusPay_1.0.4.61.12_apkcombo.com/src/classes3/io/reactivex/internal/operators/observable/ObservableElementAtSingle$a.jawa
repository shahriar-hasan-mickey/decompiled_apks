record `io.reactivex.internal.operators.observable.ObservableElementAtSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.a` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.c` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.d` @AccessFlag ;
  `long` `io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.e` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtSingle$a;.<init>:(Lio/reactivex/SingleObserver;JLjava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4670c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4670c6.  v0.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.a` @type ^`io.reactivex.SingleObserver` := v1 @kind object;
  #L4670ca.  v0.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.b` @type ^`long` := v2 @kind wide;
  #L4670ce.  v0.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.c` @type ^`java.lang.Object` := v4 @kind object;
  #L4670d2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtSingle$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4670e4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4670e8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4670ee.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtSingle$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4670a0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4670a4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4670aa.  v0:= temp;
  #L4670ac.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L467100.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.f` @type ^`boolean` @kind boolean;
  #L467104.  if v0 != 0 then goto L467136;
  #L467108.  v0:= 1I;
  #L46710a.  v2.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.f` @type ^`boolean` := v0 @kind boolean;
  #L46710e.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.c` @type ^`java.lang.Object` @kind object;
  #L467112.  if v0 == 0 then goto L467122;
  #L467116.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L46711a.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L467120.  goto L467136;
  #L467122.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L467126.  v1:= new `java.util.NoSuchElementException`;
  #L46712a.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L467130.  call `onError`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L467136.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L467148.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.f` @type ^`boolean` @kind boolean;
  #L46714c.  if v0 == 0 then goto L467158;
  #L467150.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L467156.  return @kind void;
  #L467158.  v0:= 1I;
  #L46715a.  v1.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.f` @type ^`boolean` := v0 @kind boolean;
  #L46715e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L467162.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L467168.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtSingle$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L46717c.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.f` @type ^`boolean` @kind boolean;
  #L467180.  if v0 == 0 then goto L467186;
  #L467184.  return @kind void;
  #L467186.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.e` @type ^`long` @kind wide;
  #L46718a.  v2:= v5.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.b` @type ^`long` @kind wide;
  #L46718e.  v4:= lcmp(v0, v2);
  #L467192.  if v4 != 0 then goto L4671b2;
  #L467196.  v0:= 1I;
  #L467198.  v5.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.f` @type ^`boolean` := v0 @kind boolean;
  #L46719c.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4671a0.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4671a6.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L4671aa.  call `onSuccess`(v0, v6) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L4671b0.  return @kind void;
  #L4671b2.  v2:= 1L;
  #L4671b6.  v0:= v0 + v2 @kind long;
  #L4671b8.  v5.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.e` @type ^`long` := v0 @kind wide;
  #L4671bc.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtSingle$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4671d0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4671d4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L4671da.  v0:= temp;
  #L4671dc.  if v0 == 0 then goto L4671ee;
  #L4671e0.  v1.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.d` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L4671e4.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableElementAtSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L4671e8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L4671ee.  return @kind void;
}
