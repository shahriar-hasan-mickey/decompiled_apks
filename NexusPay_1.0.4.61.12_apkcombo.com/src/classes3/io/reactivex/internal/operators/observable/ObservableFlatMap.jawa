record `io.reactivex.internal.operators.observable.ObservableFlatMap` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.observable.ObservableFlatMap.a` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableFlatMap.b` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableFlatMap.c` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableFlatMap.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableFlatMap` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 , `int` v5 ) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L469220.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L469226.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMap.a` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L46922a.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMap.b` @type ^`boolean` := v3 @kind boolean;
  #L46922e.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMap.c` @type ^`int` := v4;
  #L469232.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMap.d` @type ^`int` := v5;
  #L469236.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableFlatMap` v8 @kind this, `io.reactivex.Observer` v9 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L469248.  v0:= v8.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L46924c.  v1:= v8.`io.reactivex.internal.operators.observable.ObservableFlatMap.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L469250.  call temp:= `tryScalarXMapSubscribe`(v0, v9, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.tryScalarXMapSubscribe:(Lio/reactivex/ObservableSource;Lio/reactivex/Observer;Lio/reactivex/functions/Function;)Z` @kind static;
  #L469256.  v0:= temp;
  #L469258.  if v0 == 0 then goto L46925e;
  #L46925c.  return @kind void;
  #L46925e.  v0:= v8.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L469262.  v7:= new `io.reactivex.internal.operators.observable.ObservableFlatMap$b`;
  #L469266.  v3:= v8.`io.reactivex.internal.operators.observable.ObservableFlatMap.a` @type ^`io.reactivex.functions.Function` @kind object;
  #L46926a.  v4:= v8.`io.reactivex.internal.operators.observable.ObservableFlatMap.b` @type ^`boolean` @kind boolean;
  #L46926e.  v5:= v8.`io.reactivex.internal.operators.observable.ObservableFlatMap.c` @type ^`int`;
  #L469272.  v6:= v8.`io.reactivex.internal.operators.observable.ObservableFlatMap.d` @type ^`int`;
  #L469276.  v1:= v7 @kind object;
  #L469278.  v2:= v9 @kind object;
  #L46927a.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap$b;.<init>:(Lio/reactivex/Observer;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L469280.  call `subscribe`(v0, v7) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L469286.  return @kind void;
}
