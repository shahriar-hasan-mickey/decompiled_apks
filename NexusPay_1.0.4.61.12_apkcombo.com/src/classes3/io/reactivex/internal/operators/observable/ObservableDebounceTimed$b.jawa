record `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` @kind class @AccessFlag FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.a` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.c` @AccessFlag FINAL;
  `io.reactivex.Scheduler$Worker` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.d` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.e` @AccessFlag ;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.f` @AccessFlag ;
  `long` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.g` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.h` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler$Worker` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L46590c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L465912.  v0.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L465916.  v0.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.b` @type ^`long` := v2 @kind wide;
  #L46591a.  v0.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.c` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L46591e.  v0.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.d` @type ^`io.reactivex.Scheduler$Worker` := v5 @kind object;
  #L465922.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v3 @kind this, `long` v4 , `java.lang.Object` v6 @kind object, `io.reactivex.internal.operators.observable.ObservableDebounceTimed$a` v7 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.a:(JLjava/lang/Object;Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$a;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L46595c.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.g` @type ^`long` @kind wide;
  #L465960.  v2:= lcmp(v4, v0);
  #L465964.  if v2 != 0 then goto L465978;
  #L465968.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L46596c.  call `onNext`(v4, v6) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L465972.  call `dispose`(v7) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$a;.dispose:()V` @kind virtual;
  #L465978.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L465934.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L465938.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L46593e.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.d` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L465942.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L465948.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4658ec.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.d` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L4658f0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L4658f6.  v0:= temp;
  #L4658f8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46598c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.h` @type ^`boolean` @kind boolean;
  #L465990.  if v0 == 0 then goto L465996;
  #L465994.  return @kind void;
  #L465996.  v0:= 1I;
  #L465998.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.h` @type ^`boolean` := v0 @kind boolean;
  #L46599c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4659a0.  if v0 == 0 then goto L4659aa;
  #L4659a4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4659aa.  v0:= (`io.reactivex.internal.operators.observable.ObservableDebounceTimed$a`) v0 @kind object;
  #L4659ae.  if v0 == 0 then goto L4659b8;
  #L4659b2.  call `run`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$a;.run:()V` @kind virtual;
  #L4659b8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L4659bc.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L4659c2.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.d` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L4659c6.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4659cc.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4659e0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.h` @type ^`boolean` @kind boolean;
  #L4659e4.  if v0 == 0 then goto L4659f0;
  #L4659e8.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4659ee.  return @kind void;
  #L4659f0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L4659f4.  if v0 == 0 then goto L4659fe;
  #L4659f8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4659fe.  v0:= 1I;
  #L465a00.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.h` @type ^`boolean` := v0 @kind boolean;
  #L465a04.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L465a08.  call `onError`(v0, v2) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L465a0e.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.d` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L465a12.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L465a18.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L465a2c.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.h` @type ^`boolean` @kind boolean;
  #L465a30.  if v0 == 0 then goto L465a36;
  #L465a34.  return @kind void;
  #L465a36.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.g` @type ^`long` @kind wide;
  #L465a3a.  v2:= 1L;
  #L465a3e.  v0:= v0 + v2 @kind long;
  #L465a40.  v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.g` @type ^`long` := v0 @kind wide;
  #L465a44.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.f` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L465a48.  if v2 == 0 then goto L465a52;
  #L465a4c.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L465a52.  v2:= new `io.reactivex.internal.operators.observable.ObservableDebounceTimed$a`;
  #L465a56.  call `<init>`(v2, v5, v0, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$a;.<init>:(Ljava/lang/Object;JLio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;)V` @kind direct;
  #L465a5c.  v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.f` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L465a60.  v5:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.d` @type ^`io.reactivex.Scheduler$Worker` @kind object;
  #L465a64.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.b` @type ^`long` @kind wide;
  #L465a68.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L465a6c.  call temp:= `schedule`(v5, v2, v0, v3) @signature `Lio/reactivex/Scheduler$Worker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L465a72.  v5:= temp @kind object;
  #L465a74.  call `a`(v2, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$a;.a:(Lio/reactivex/disposables/Disposable;)V` @kind virtual;
  #L465a7a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed$b;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L465a8c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.e` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L465a90.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L465a96.  v0:= temp;
  #L465a98.  if v0 == 0 then goto L465aaa;
  #L465a9c.  v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.e` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L465aa0.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDebounceTimed$b.a` @type ^`io.reactivex.Observer` @kind object;
  #L465aa4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L465aaa.  return @kind void;
}
