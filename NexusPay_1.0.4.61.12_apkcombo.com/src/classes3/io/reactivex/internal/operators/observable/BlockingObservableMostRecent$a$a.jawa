record `io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.lang.Object` `io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @AccessFlag PRIVATE;
  `io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a` `io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a` v0 @kind this, `io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$a$a;.<init>:(Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L45fb10.  v0.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a.b` @type ^`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a` := v1 @kind object;
  #L45fb14.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45fb1a.  return @kind void;
}
procedure `boolean` `hasNext`(`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$a$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45fa4c.  v0:= v1.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a.b` @type ^`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a` @kind object;
  #L45fa50.  v0:= v0.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a.b` @type ^`java.lang.Object` @kind object;
  #L45fa54.  v1.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L45fa58.  call temp:= `isComplete`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L45fa5e.  v0:= temp;
  #L45fa60.  v0:= v0 ^~ 1;
  #L45fa64.  return v0;
}
procedure `java.lang.Object` `next`(`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$a$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45fa78.  v0:= 0I;
  #L45fa7a.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L45fa7e.  if v1 != 0 then goto L45fa8e;
  #L45fa82.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a.b` @type ^`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a` @kind object;
  #L45fa86.  v1:= v1.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a.b` @type ^`java.lang.Object` @kind object;
  #L45fa8a.  v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L45fa8e.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L45fa92.  call temp:= `isComplete`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.isComplete:(Ljava/lang/Object;)Z` @kind static;
  #L45fa98.  v1:= temp;
  #L45fa9a.  if v1 != 0 then goto L45fad6;
  #L45fa9e.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L45faa2.  call temp:= `isError`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L45faa8.  v1:= temp;
  #L45faaa.  if v1 != 0 then goto L45fac0;
  #L45faae.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L45fab2.  call temp:= `getValue`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.getValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45fab8.  v1:= temp @kind object;
  #L45faba.  v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L45fabe.  return v1 @kind object;
  #L45fac0.  v1:= v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` @kind object;
  #L45fac4.  call temp:= `getError`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L45faca.  v1:= temp @kind object;
  #L45facc.  call temp:= `wrapOrThrow`(v1) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L45fad2.  v1:= temp @kind object;
  #L45fad4.  throw v1;
  #L45fad6.  v1:= new `java.util.NoSuchElementException`;
  #L45fada.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L45fae0.  throw v1;
  #L45fae2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45fae4.  v2.`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a.a` @type ^`java.lang.Object` := v0 @kind object;
  #L45fae8.  throw v1;
  catch `java.lang.Throwable` @[L45fa7a..L45faba] goto L45fae2;
  catch `java.lang.Throwable` @[L45fac0..L45fae2] goto L45fae2;
}
procedure `void` `remove`(`io.reactivex.internal.operators.observable.BlockingObservableMostRecent$a$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent$a$a;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45fb2c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L45fb30.  v1:= "Read only iterator" @kind object;
  #L45fb34.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45fb3a.  throw v0;
}
