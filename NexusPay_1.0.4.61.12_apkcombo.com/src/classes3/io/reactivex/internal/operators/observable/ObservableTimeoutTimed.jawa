record `io.reactivex.internal.operators.observable.ObservableTimeoutTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `long` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed.a` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed.b` @AccessFlag FINAL;
  `io.reactivex.Scheduler` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed.c` @AccessFlag FINAL;
  `io.reactivex.ObservableSource` `io.reactivex.internal.operators.observable.ObservableTimeoutTimed.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed` v0 @kind this, `io.reactivex.Observable` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed;.<init>:(Lio/reactivex/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/ObservableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L475f88.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L475f8e.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.a` @type ^`long` := v2 @kind wide;
  #L475f92.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.b` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L475f96.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.c` @type ^`io.reactivex.Scheduler` := v5 @kind object;
  #L475f9a.  v0.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.d` @type ^`io.reactivex.ObservableSource` := v6 @kind object;
  #L475f9e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableTimeoutTimed` v10 @kind this, `io.reactivex.Observer` v11 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L475fb0.  v0:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.d` @type ^`io.reactivex.ObservableSource` @kind object;
  #L475fb4.  v1:= 0L;
  #L475fb8.  if v0 != 0 then goto L475ff6;
  #L475fbc.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$c`;
  #L475fc0.  v5:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.a` @type ^`long` @kind wide;
  #L475fc4.  v7:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L475fc8.  v3:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.c` @type ^`io.reactivex.Scheduler` @kind object;
  #L475fcc.  call temp:= `createWorker`(v3) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L475fd2.  v8:= temp @kind object;
  #L475fd4.  v3:= v0 @kind object;
  #L475fd6.  v4:= v11 @kind object;
  #L475fd8.  call `<init>`(v3, v4, v5, v7, v8) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$c;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;)V` @kind direct;
  #L475fde.  call `onSubscribe`(v11, v0) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L475fe4.  call `c`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$c;.c:(J)V` @kind virtual;
  #L475fea.  v11:= v10.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L475fee.  call `subscribe`(v11, v0) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L475ff4.  goto L476032;
  #L475ff6.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeoutTimed$b`;
  #L475ffa.  v5:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.a` @type ^`long` @kind wide;
  #L475ffe.  v7:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L476002.  v3:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.c` @type ^`io.reactivex.Scheduler` @kind object;
  #L476006.  call temp:= `createWorker`(v3) @signature `Lio/reactivex/Scheduler;.createWorker:()Lio/reactivex/Scheduler$Worker;` @kind virtual;
  #L47600c.  v8:= temp @kind object;
  #L47600e.  v9:= v10.`io.reactivex.internal.operators.observable.ObservableTimeoutTimed.d` @type ^`io.reactivex.ObservableSource` @kind object;
  #L476012.  v3:= v0 @kind object;
  #L476014.  v4:= v11 @kind object;
  #L476016.  call `<init>`(v3, v4, v5, v7, v8, v9) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$b;.<init>:(Lio/reactivex/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L47601c.  call `onSubscribe`(v11, v0) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L476022.  call `c`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed$b;.c:(J)V` @kind virtual;
  #L476028.  v11:= v10.`io.reactivex.internal.operators.observable.a.source` @type ^`io.reactivex.ObservableSource` @kind object;
  #L47602c.  call `subscribe`(v11, v0) @signature `Lio/reactivex/ObservableSource;.subscribe:(Lio/reactivex/Observer;)V` @kind interface;
  #L476032.  return @kind void;
}
