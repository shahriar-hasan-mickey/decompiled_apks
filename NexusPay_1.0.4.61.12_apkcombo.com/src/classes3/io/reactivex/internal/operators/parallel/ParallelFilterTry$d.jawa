record `io.reactivex.internal.operators.parallel.ParallelFilterTry$d` @kind class @AccessFlag FINAL extends `io.reactivex.internal.operators.parallel.ParallelFilterTry$b` @kind class {
  `org.reactivestreams.Subscriber` `io.reactivex.internal.operators.parallel.ParallelFilterTry$d.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelFilterTry$d` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object, `io.reactivex.functions.Predicate` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Predicate;Lio/reactivex/functions/BiFunction;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47abf8.  call `<init>`(v0, v2, v3) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$b;.<init>:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L47abfe.  v0.`io.reactivex.internal.operators.parallel.ParallelFilterTry$d.e` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L47ac02.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.parallel.ParallelFilterTry$d` v1 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ac14.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.d` @type ^`boolean` @kind boolean;
  #L47ac18.  if v0 != 0 then goto L47ac2c;
  #L47ac1c.  v0:= 1I;
  #L47ac1e.  v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.d` @type ^`boolean` := v0 @kind boolean;
  #L47ac22.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$d.e` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L47ac26.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L47ac2c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.parallel.ParallelFilterTry$d` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ac40.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.d` @type ^`boolean` @kind boolean;
  #L47ac44.  if v0 == 0 then goto L47ac50;
  #L47ac48.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L47ac4e.  return @kind void;
  #L47ac50.  v0:= 1I;
  #L47ac52.  v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.d` @type ^`boolean` := v0 @kind boolean;
  #L47ac56.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$d.e` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L47ac5a.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L47ac60.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.parallel.ParallelFilterTry$d` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ac74.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.c` @type ^`org.reactivestreams.Subscription` @kind object;
  #L47ac78.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L47ac7e.  v0:= temp;
  #L47ac80.  if v0 == 0 then goto L47ac92;
  #L47ac84.  v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.c` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L47ac88.  v2:= v1.`io.reactivex.internal.operators.parallel.ParallelFilterTry$d.e` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L47ac8c.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L47ac92.  return @kind void;
}
procedure `boolean` `tryOnNext`(`io.reactivex.internal.operators.parallel.ParallelFilterTry$d` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L47ab08.  v0:= v9.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.d` @type ^`boolean` @kind boolean;
  #L47ab0c.  v1:= 0I;
  #L47ab0e.  if v0 != 0 then goto L47abce;
  #L47ab12.  v2:= 0L;
  #L47ab16.  v0:= 1I;
  #L47ab18.  v4:= v9.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.a` @type ^`io.reactivex.functions.Predicate` @kind object;
  #L47ab1c.  call temp:= `test`(v4, v10) @signature `Lio/reactivex/functions/Predicate;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L47ab22.  v2:= temp;
  #L47ab24.  if v2 == 0 then goto L47ab34;
  #L47ab28.  v1:= v9.`io.reactivex.internal.operators.parallel.ParallelFilterTry$d.e` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L47ab2c.  call `onNext`(v1, v10) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L47ab32.  return v0;
  #L47ab34.  return v1;
  #L47ab36.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47ab38.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47ab3e.  v5:= 2I;
  #L47ab40.  v6:= v9.`io.reactivex.internal.operators.parallel.ParallelFilterTry$b.b` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L47ab44.  v7:= 1L;
  #L47ab48.  v2:= v2 + v7 @kind long;
  #L47ab4a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L47ab50.  v7:= temp @kind object;
  #L47ab52.  call temp:= `apply`(v6, v7, v4) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L47ab58.  v6:= temp @kind object;
  #L47ab5a.  v7:= "The errorHandler returned a null item" @kind object;
  #L47ab5e.  call temp:= `requireNonNull`(v6, v7) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47ab64.  v6:= temp @kind object;
  #L47ab66.  v6:= (`io.reactivex.parallel.ParallelFailureHandling`) v6 @kind object;
  #L47ab6a.  v7:= `@@io.reactivex.internal.operators.parallel.ParallelFilterTry$a.a` @type ^`int`[] @kind object;
  #L47ab6e.  call temp:= `ordinal`(v6) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L47ab74.  v6:= temp;
  #L47ab76.  v6:= v7[v6];
  #L47ab7a.  if v6 == v0 then goto L47ab16;
  #L47ab7e.  if v6 == v5 then goto L47aba2;
  #L47ab82.  v10:= 3I;
  #L47ab84.  if v6 == v10 then goto L47ab96;
  #L47ab88.  call `cancel`(v9) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$b;.cancel:()V` @kind virtual;
  #L47ab8e.  call `onError`(v9, v4) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L47ab94.  return v1;
  #L47ab96.  call `cancel`(v9) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$b;.cancel:()V` @kind virtual;
  #L47ab9c.  call `onComplete`(v9) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.onComplete:()V` @kind virtual;
  #L47aba2.  return v1;
  #L47aba4.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47aba6.  call `throwIfFatal`(v10) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L47abac.  call `cancel`(v9) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$b;.cancel:()V` @kind virtual;
  #L47abb2.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L47abb6.  v3:= new `java.lang.Throwable`[v5];
  #L47abba.  v3[v1]:= v4 @kind object;
  #L47abbe.  v3[v0]:= v10 @kind object;
  #L47abc2.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L47abc8.  call `onError`(v9, v2) @signature `Lio/reactivex/internal/operators/parallel/ParallelFilterTry$d;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L47abce.  return v1;
  catch `java.lang.Throwable` @[L47ab18..L47ab24] goto L47ab36;
  catch `java.lang.Throwable` @[L47ab40..L47ab6a] goto L47aba4;
}
