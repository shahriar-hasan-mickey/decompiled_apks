record `io.reactivex.internal.operators.parallel.ParallelPeek` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.parallel.ParallelFlowable` @kind class {
  `io.reactivex.parallel.ParallelFlowable` `io.reactivex.internal.operators.parallel.ParallelPeek.a` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.parallel.ParallelPeek.b` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.parallel.ParallelPeek.c` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.parallel.ParallelPeek.d` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.parallel.ParallelPeek.e` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.parallel.ParallelPeek.f` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.parallel.ParallelPeek.g` @AccessFlag FINAL;
  `io.reactivex.functions.LongConsumer` `io.reactivex.internal.operators.parallel.ParallelPeek.h` @AccessFlag FINAL;
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.parallel.ParallelPeek.i` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelPeek` v0 @kind this, `io.reactivex.parallel.ParallelFlowable` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Consumer` v4 @kind object, `io.reactivex.functions.Action` v5 @kind object, `io.reactivex.functions.Action` v6 @kind object, `io.reactivex.functions.Consumer` v7 @kind object, `io.reactivex.functions.LongConsumer` v8 @kind object, `io.reactivex.functions.Action` v9 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelPeek;.<init>:(Lio/reactivex/parallel/ParallelFlowable;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/LongConsumer;Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47cbf4.  call `<init>`(v0) @signature `Lio/reactivex/parallel/ParallelFlowable;.<init>:()V` @kind direct;
  #L47cbfa.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.a` @type ^`io.reactivex.parallel.ParallelFlowable` := v1 @kind object;
  #L47cbfe.  v1:= "onNext is null" @kind object;
  #L47cc02.  call temp:= `requireNonNull`(v2, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47cc08.  v1:= temp @kind object;
  #L47cc0a.  v1:= (`io.reactivex.functions.Consumer`) v1 @kind object;
  #L47cc0e.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.b` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L47cc12.  v1:= "onAfterNext is null" @kind object;
  #L47cc16.  call temp:= `requireNonNull`(v3, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47cc1c.  v1:= temp @kind object;
  #L47cc1e.  v1:= (`io.reactivex.functions.Consumer`) v1 @kind object;
  #L47cc22.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.c` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L47cc26.  v1:= "onError is null" @kind object;
  #L47cc2a.  call temp:= `requireNonNull`(v4, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47cc30.  v1:= temp @kind object;
  #L47cc32.  v1:= (`io.reactivex.functions.Consumer`) v1 @kind object;
  #L47cc36.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.d` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L47cc3a.  v1:= "onComplete is null" @kind object;
  #L47cc3e.  call temp:= `requireNonNull`(v5, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47cc44.  v1:= temp @kind object;
  #L47cc46.  v1:= (`io.reactivex.functions.Action`) v1 @kind object;
  #L47cc4a.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.e` @type ^`io.reactivex.functions.Action` := v1 @kind object;
  #L47cc4e.  v1:= "onAfterTerminated is null" @kind object;
  #L47cc52.  call temp:= `requireNonNull`(v6, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47cc58.  v1:= temp @kind object;
  #L47cc5a.  v1:= (`io.reactivex.functions.Action`) v1 @kind object;
  #L47cc5e.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.f` @type ^`io.reactivex.functions.Action` := v1 @kind object;
  #L47cc62.  v1:= "onSubscribe is null" @kind object;
  #L47cc66.  call temp:= `requireNonNull`(v7, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47cc6c.  v1:= temp @kind object;
  #L47cc6e.  v1:= (`io.reactivex.functions.Consumer`) v1 @kind object;
  #L47cc72.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.g` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L47cc76.  v1:= "onRequest is null" @kind object;
  #L47cc7a.  call temp:= `requireNonNull`(v8, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47cc80.  v1:= temp @kind object;
  #L47cc82.  v1:= (`io.reactivex.functions.LongConsumer`) v1 @kind object;
  #L47cc86.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.h` @type ^`io.reactivex.functions.LongConsumer` := v1 @kind object;
  #L47cc8a.  v1:= "onCancel is null" @kind object;
  #L47cc8e.  call temp:= `requireNonNull`(v9, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L47cc94.  v1:= temp @kind object;
  #L47cc96.  v1:= (`io.reactivex.functions.Action`) v1 @kind object;
  #L47cc9a.  v0.`io.reactivex.internal.operators.parallel.ParallelPeek.i` @type ^`io.reactivex.functions.Action` := v1 @kind object;
  #L47cc9e.  return @kind void;
}
procedure `int` `parallelism`(`io.reactivex.internal.operators.parallel.ParallelPeek` v1 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelPeek;.parallelism:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47cbd4.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelPeek.a` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L47cbd8.  call temp:= `parallelism`(v0) @signature `Lio/reactivex/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L47cbde.  v0:= temp;
  #L47cbe0.  return v0;
}
procedure `void` `subscribe`(`io.reactivex.internal.operators.parallel.ParallelPeek` v5 @kind this, `org.reactivestreams.Subscriber`[] v6 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelPeek;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47ccb0.  call temp:= `validate`(v5, v6) @signature `Lio/reactivex/parallel/ParallelFlowable;.validate:([Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L47ccb6.  v0:= temp;
  #L47ccb8.  if v0 != 0 then goto L47ccbe;
  #L47ccbc.  return @kind void;
  #L47ccbe.  v0:= length @variable v6;
  #L47ccc0.  v1:= new `org.reactivestreams.Subscriber`[v0];
  #L47ccc4.  v2:= 0I;
  #L47ccc6.  if v2 >= v0 then goto L47cce2;
  #L47ccca.  v3:= new `io.reactivex.internal.operators.parallel.ParallelPeek$a`;
  #L47ccce.  v4:= v6[v2] @kind object;
  #L47ccd2.  call `<init>`(v3, v4, v5) @signature `Lio/reactivex/internal/operators/parallel/ParallelPeek$a;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/internal/operators/parallel/ParallelPeek;)V` @kind direct;
  #L47ccd8.  v1[v2]:= v3 @kind object;
  #L47ccdc.  v2:= v2 + 1;
  #L47cce0.  goto L47ccc6;
  #L47cce2.  v6:= v5.`io.reactivex.internal.operators.parallel.ParallelPeek.a` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L47cce6.  call `subscribe`(v6, v1) @signature `Lio/reactivex/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L47ccec.  return @kind void;
}
