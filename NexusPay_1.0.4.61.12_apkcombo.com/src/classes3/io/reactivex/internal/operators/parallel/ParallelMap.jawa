record `io.reactivex.internal.operators.parallel.ParallelMap` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.parallel.ParallelFlowable` @kind class {
  `io.reactivex.parallel.ParallelFlowable` `io.reactivex.internal.operators.parallel.ParallelMap.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.parallel.ParallelMap.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelMap` v0 @kind this, `io.reactivex.parallel.ParallelFlowable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelMap;.<init>:(Lio/reactivex/parallel/ParallelFlowable;Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47c888.  call `<init>`(v0) @signature `Lio/reactivex/parallel/ParallelFlowable;.<init>:()V` @kind direct;
  #L47c88e.  v0.`io.reactivex.internal.operators.parallel.ParallelMap.a` @type ^`io.reactivex.parallel.ParallelFlowable` := v1 @kind object;
  #L47c892.  v0.`io.reactivex.internal.operators.parallel.ParallelMap.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L47c896.  return @kind void;
}
procedure `int` `parallelism`(`io.reactivex.internal.operators.parallel.ParallelMap` v1 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelMap;.parallelism:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47c868.  v0:= v1.`io.reactivex.internal.operators.parallel.ParallelMap.a` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L47c86c.  call temp:= `parallelism`(v0) @signature `Lio/reactivex/parallel/ParallelFlowable;.parallelism:()I` @kind virtual;
  #L47c872.  v0:= temp;
  #L47c874.  return v0;
}
procedure `void` `subscribe`(`io.reactivex.internal.operators.parallel.ParallelMap` v6 @kind this, `org.reactivestreams.Subscriber`[] v7 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelMap;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47c8a8.  call temp:= `validate`(v6, v7) @signature `Lio/reactivex/parallel/ParallelFlowable;.validate:([Lorg/reactivestreams/Subscriber;)Z` @kind virtual;
  #L47c8ae.  v0:= temp;
  #L47c8b0.  if v0 != 0 then goto L47c8b6;
  #L47c8b4.  return @kind void;
  #L47c8b6.  v0:= length @variable v7;
  #L47c8b8.  v1:= new `org.reactivestreams.Subscriber`[v0];
  #L47c8bc.  v2:= 0I;
  #L47c8be.  if v2 >= v0 then goto L47c8fe;
  #L47c8c2.  v3:= v7[v2] @kind object;
  #L47c8c6.  v4:= instanceof @variable v3 @type ^`io.reactivex.internal.fuseable.ConditionalSubscriber` @kind boolean;
  #L47c8ca.  if v4 == 0 then goto L47c8e6;
  #L47c8ce.  v4:= new `io.reactivex.internal.operators.parallel.ParallelMap$a`;
  #L47c8d2.  v3:= (`io.reactivex.internal.fuseable.ConditionalSubscriber`) v3 @kind object;
  #L47c8d6.  v5:= v6.`io.reactivex.internal.operators.parallel.ParallelMap.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L47c8da.  call `<init>`(v4, v3, v5) @signature `Lio/reactivex/internal/operators/parallel/ParallelMap$a;.<init>:(Lio/reactivex/internal/fuseable/ConditionalSubscriber;Lio/reactivex/functions/Function;)V` @kind direct;
  #L47c8e0.  v1[v2]:= v4 @kind object;
  #L47c8e4.  goto L47c8f8;
  #L47c8e6.  v4:= new `io.reactivex.internal.operators.parallel.ParallelMap$b`;
  #L47c8ea.  v5:= v6.`io.reactivex.internal.operators.parallel.ParallelMap.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L47c8ee.  call `<init>`(v4, v3, v5) @signature `Lio/reactivex/internal/operators/parallel/ParallelMap$b;.<init>:(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)V` @kind direct;
  #L47c8f4.  v1[v2]:= v4 @kind object;
  #L47c8f8.  v2:= v2 + 1;
  #L47c8fc.  goto L47c8be;
  #L47c8fe.  v7:= v6.`io.reactivex.internal.operators.parallel.ParallelMap.a` @type ^`io.reactivex.parallel.ParallelFlowable` @kind object;
  #L47c902.  call `subscribe`(v7, v1) @signature `Lio/reactivex/parallel/ParallelFlowable;.subscribe:([Lorg/reactivestreams/Subscriber;)V` @kind virtual;
  #L47c908.  return @kind void;
}
