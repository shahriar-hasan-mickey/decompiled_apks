record `io.reactivex.internal.operators.completable.CompletableFromPublisher` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `org.reactivestreams.Publisher` `io.reactivex.internal.operators.completable.CompletableFromPublisher.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableFromPublisher` v0 @kind this, `org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42dd98.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L42dd9e.  v0.`io.reactivex.internal.operators.completable.CompletableFromPublisher.a` @type ^`org.reactivestreams.Publisher` := v1 @kind object;
  #L42dda2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableFromPublisher` v2 @kind this, `io.reactivex.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableFromPublisher;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L42ddb4.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableFromPublisher.a` @type ^`org.reactivestreams.Publisher` @kind object;
  #L42ddb8.  v1:= new `io.reactivex.internal.operators.completable.CompletableFromPublisher$a`;
  #L42ddbc.  call `<init>`(v1, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableFromPublisher$a;.<init>:(Lio/reactivex/CompletableObserver;)V` @kind direct;
  #L42ddc2.  call `subscribe`(v0, v1) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L42ddc8.  return @kind void;
}
