record `io.reactivex.internal.operators.completable.CompletableTimeout$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.internal.operators.completable.CompletableTimeout$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.operators.completable.CompletableTimeout$a.b` @AccessFlag FINAL;
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableTimeout$a.c` @AccessFlag FINAL;
  `io.reactivex.internal.operators.completable.CompletableTimeout` `io.reactivex.internal.operators.completable.CompletableTimeout$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableTimeout$a` v0 @kind this, `io.reactivex.internal.operators.completable.CompletableTimeout` v1 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v2 @kind object, `io.reactivex.disposables.CompositeDisposable` v3 @kind object, `io.reactivex.CompletableObserver` v4 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableTimeout$a;.<init>:(Lio/reactivex/internal/operators/completable/CompletableTimeout;Ljava/util/concurrent/atomic/AtomicBoolean;Lio/reactivex/disposables/CompositeDisposable;Lio/reactivex/CompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42f6c4.  v0.`io.reactivex.internal.operators.completable.CompletableTimeout$a.d` @type ^`io.reactivex.internal.operators.completable.CompletableTimeout` := v1 @kind object;
  #L42f6c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42f6ce.  v0.`io.reactivex.internal.operators.completable.CompletableTimeout$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v2 @kind object;
  #L42f6d2.  v0.`io.reactivex.internal.operators.completable.CompletableTimeout$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` := v3 @kind object;
  #L42f6d6.  v0.`io.reactivex.internal.operators.completable.CompletableTimeout$a.c` @type ^`io.reactivex.CompletableObserver` := v4 @kind object;
  #L42f6da.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.completable.CompletableTimeout$a` v5 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableTimeout$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L42f6ec.  v0:= v5.`io.reactivex.internal.operators.completable.CompletableTimeout$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L42f6f0.  v1:= 0I;
  #L42f6f2.  v2:= 1I;
  #L42f6f4.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L42f6fa.  v0:= temp;
  #L42f6fc.  if v0 == 0 then goto L42f750;
  #L42f700.  v0:= v5.`io.reactivex.internal.operators.completable.CompletableTimeout$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L42f704.  call `clear`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.clear:()V` @kind virtual;
  #L42f70a.  v0:= v5.`io.reactivex.internal.operators.completable.CompletableTimeout$a.d` @type ^`io.reactivex.internal.operators.completable.CompletableTimeout` @kind object;
  #L42f70e.  v0:= v0.`io.reactivex.internal.operators.completable.CompletableTimeout.e` @type ^`io.reactivex.CompletableSource` @kind object;
  #L42f712.  if v0 != 0 then goto L42f740;
  #L42f716.  v0:= v5.`io.reactivex.internal.operators.completable.CompletableTimeout$a.c` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42f71a.  v1:= new `java.util.concurrent.TimeoutException`;
  #L42f71e.  v2:= v5.`io.reactivex.internal.operators.completable.CompletableTimeout$a.d` @type ^`io.reactivex.internal.operators.completable.CompletableTimeout` @kind object;
  #L42f722.  v3:= v2.`io.reactivex.internal.operators.completable.CompletableTimeout.b` @type ^`long` @kind wide;
  #L42f726.  v2:= v2.`io.reactivex.internal.operators.completable.CompletableTimeout.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L42f72a.  call temp:= `timeoutMessage`(v3, v2) @signature `Lio/reactivex/internal/util/ExceptionHelper;.timeoutMessage:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/String;` @kind static;
  #L42f730.  v2:= temp @kind object;
  #L42f732.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/TimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42f738.  call `onError`(v0, v1) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42f73e.  goto L42f750;
  #L42f740.  v1:= new `io.reactivex.internal.operators.completable.CompletableTimeout$a$a`;
  #L42f744.  call `<init>`(v1, v5) @signature `Lio/reactivex/internal/operators/completable/CompletableTimeout$a$a;.<init>:(Lio/reactivex/internal/operators/completable/CompletableTimeout$a;)V` @kind direct;
  #L42f74a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L42f750.  return @kind void;
}
