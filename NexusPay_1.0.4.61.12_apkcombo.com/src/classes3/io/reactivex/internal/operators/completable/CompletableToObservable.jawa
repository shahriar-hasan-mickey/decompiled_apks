record `io.reactivex.internal.operators.completable.CompletableToObservable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observable` @kind class {
  `io.reactivex.CompletableSource` `io.reactivex.internal.operators.completable.CompletableToObservable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableToObservable` v0 @kind this, `io.reactivex.CompletableSource` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable;.<init>:(Lio/reactivex/CompletableSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42fb18.  call `<init>`(v0) @signature `Lio/reactivex/Observable;.<init>:()V` @kind direct;
  #L42fb1e.  v0.`io.reactivex.internal.operators.completable.CompletableToObservable.a` @type ^`io.reactivex.CompletableSource` := v1 @kind object;
  #L42fb22.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableToObservable` v2 @kind this, `io.reactivex.Observer` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L42fb34.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableToObservable.a` @type ^`io.reactivex.CompletableSource` @kind object;
  #L42fb38.  v1:= new `io.reactivex.internal.operators.completable.CompletableToObservable$a`;
  #L42fb3c.  call `<init>`(v1, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable$a;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L42fb42.  call `subscribe`(v0, v1) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L42fb48.  return @kind void;
}
