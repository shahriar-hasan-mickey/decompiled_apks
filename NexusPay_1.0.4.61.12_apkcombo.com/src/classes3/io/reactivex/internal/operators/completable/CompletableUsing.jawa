record `io.reactivex.internal.operators.completable.CompletableUsing` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.completable.CompletableUsing.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.completable.CompletableUsing.b` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.completable.CompletableUsing.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.completable.CompletableUsing.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableUsing` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42fe54.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L42fe5a.  v0.`io.reactivex.internal.operators.completable.CompletableUsing.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L42fe5e.  v0.`io.reactivex.internal.operators.completable.CompletableUsing.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L42fe62.  v0.`io.reactivex.internal.operators.completable.CompletableUsing.c` @type ^`io.reactivex.functions.Consumer` := v3 @kind object;
  #L42fe66.  v0.`io.reactivex.internal.operators.completable.CompletableUsing.d` @type ^`boolean` := v4 @kind boolean;
  #L42fe6a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableUsing` v5 @kind this, `io.reactivex.CompletableObserver` v6 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L42fe7c.  v0:= v5.`io.reactivex.internal.operators.completable.CompletableUsing.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L42fe80.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L42fe86.  v0:= temp @kind object;
  #L42fe88.  v1:= v5.`io.reactivex.internal.operators.completable.CompletableUsing.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L42fe8c.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42fe92.  v1:= temp @kind object;
  #L42fe94.  v2:= "The completableFunction returned a null CompletableSource" @kind object;
  #L42fe98.  call temp:= `requireNonNull`(v1, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42fe9e.  v1:= temp @kind object;
  #L42fea0.  v1:= (`io.reactivex.CompletableSource`) v1 @kind object;
  #L42fea4.  v2:= new `io.reactivex.internal.operators.completable.CompletableUsing$a`;
  #L42fea8.  v3:= v5.`io.reactivex.internal.operators.completable.CompletableUsing.c` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42feac.  v4:= v5.`io.reactivex.internal.operators.completable.CompletableUsing.d` @type ^`boolean` @kind boolean;
  #L42feb0.  call `<init>`(v2, v6, v0, v3, v4) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.<init>:(Lio/reactivex/CompletableObserver;Ljava/lang/Object;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L42feb6.  call `subscribe`(v1, v2) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L42febc.  return @kind void;
  #L42febe.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42fec0.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42fec6.  v2:= v5.`io.reactivex.internal.operators.completable.CompletableUsing.d` @type ^`boolean` @kind boolean;
  #L42feca.  if v2 == 0 then goto L42ff06;
  #L42fece.  v2:= v5.`io.reactivex.internal.operators.completable.CompletableUsing.c` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42fed2.  call `accept`(v2, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L42fed8.  goto L42ff06;
  #L42feda.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42fedc.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42fee2.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L42fee6.  v3:= 2I;
  #L42fee8.  v3:= new `java.lang.Throwable`[v3];
  #L42feec.  v4:= 0I;
  #L42feee.  v3[v4]:= v1 @kind object;
  #L42fef2.  v1:= 1I;
  #L42fef4.  v3[v1]:= v0 @kind object;
  #L42fef8.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L42fefe.  call `error`(v2, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/CompletableObserver;)V` @kind static;
  #L42ff04.  return @kind void;
  #L42ff06.  call `error`(v1, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/CompletableObserver;)V` @kind static;
  #L42ff0c.  v6:= v5.`io.reactivex.internal.operators.completable.CompletableUsing.d` @type ^`boolean` @kind boolean;
  #L42ff10.  if v6 != 0 then goto L42ff2e;
  #L42ff14.  v6:= v5.`io.reactivex.internal.operators.completable.CompletableUsing.c` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42ff18.  call `accept`(v6, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L42ff1e.  goto L42ff2e;
  #L42ff20.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42ff22.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42ff28.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42ff2e.  return @kind void;
  #L42ff30.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42ff32.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42ff38.  call `error`(v0, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/CompletableObserver;)V` @kind static;
  #L42ff3e.  return @kind void;
  catch `java.lang.Throwable` @[L42fe7c..L42fe88] goto L42ff30;
  catch `java.lang.Throwable` @[L42fe88..L42fea4] goto L42febe;
  catch `java.lang.Throwable` @[L42fece..L42fed8] goto L42feda;
  catch `java.lang.Throwable` @[L42ff14..L42ff1e] goto L42ff20;
}
