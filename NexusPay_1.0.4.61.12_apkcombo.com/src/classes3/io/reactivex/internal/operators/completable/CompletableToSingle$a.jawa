record `io.reactivex.internal.operators.completable.CompletableToSingle$a` @kind class @AccessFlag FINAL extends `io.reactivex.CompletableObserver` @kind interface {
  `io.reactivex.SingleObserver` `io.reactivex.internal.operators.completable.CompletableToSingle$a.a` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.completable.CompletableToSingle` `io.reactivex.internal.operators.completable.CompletableToSingle$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableToSingle$a` v0 @kind this, `io.reactivex.internal.operators.completable.CompletableToSingle` v1 @kind object, `io.reactivex.SingleObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle$a;.<init>:(Lio/reactivex/internal/operators/completable/CompletableToSingle;Lio/reactivex/SingleObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42fb5c.  v0.`io.reactivex.internal.operators.completable.CompletableToSingle$a.b` @type ^`io.reactivex.internal.operators.completable.CompletableToSingle` := v1 @kind object;
  #L42fb60.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42fb66.  v0.`io.reactivex.internal.operators.completable.CompletableToSingle$a.a` @type ^`io.reactivex.SingleObserver` := v2 @kind object;
  #L42fb6a.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableToSingle$a` v3 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42fb7c.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableToSingle$a.b` @type ^`io.reactivex.internal.operators.completable.CompletableToSingle` @kind object;
  #L42fb80.  v1:= v0.`io.reactivex.internal.operators.completable.CompletableToSingle.b` @type ^`java.util.concurrent.Callable` @kind object;
  #L42fb84.  if v1 == 0 then goto L42fba6;
  #L42fb88.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L42fb8e.  v0:= temp @kind object;
  #L42fb90.  goto L42fbaa;
  #L42fb92.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42fb94.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42fb9a.  v1:= v3.`io.reactivex.internal.operators.completable.CompletableToSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L42fb9e.  call `onError`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42fba4.  return @kind void;
  #L42fba6.  v0:= v0.`io.reactivex.internal.operators.completable.CompletableToSingle.c` @type ^`java.lang.Object` @kind object;
  #L42fbaa.  if v0 != 0 then goto L42fbc8;
  #L42fbae.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableToSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L42fbb2.  v1:= new `java.lang.NullPointerException`;
  #L42fbb6.  v2:= "The value supplied is null" @kind object;
  #L42fbba.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42fbc0.  call `onError`(v0, v1) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42fbc6.  goto L42fbd2;
  #L42fbc8.  v1:= v3.`io.reactivex.internal.operators.completable.CompletableToSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L42fbcc.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/SingleObserver;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L42fbd2.  return @kind void;
  catch `java.lang.Throwable` @[L42fb88..L42fb90] goto L42fb92;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableToSingle$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42fbf0.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableToSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L42fbf4.  call `onError`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42fbfa.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableToSingle$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42fc0c.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableToSingle$a.a` @type ^`io.reactivex.SingleObserver` @kind object;
  #L42fc10.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/SingleObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42fc16.  return @kind void;
}
