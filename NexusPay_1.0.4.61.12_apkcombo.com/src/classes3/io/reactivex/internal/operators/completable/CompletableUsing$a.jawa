record `io.reactivex.internal.operators.completable.CompletableUsing$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableUsing$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Consumer` `io.reactivex.internal.operators.completable.CompletableUsing$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.completable.CompletableUsing$a.c` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.completable.CompletableUsing$a.d` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableUsing$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableUsing$a` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object, `java.lang.Object` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.<init>:(Lio/reactivex/CompletableObserver;Ljava/lang/Object;Lio/reactivex/functions/Consumer;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42fc94.  call `<init>`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L42fc9a.  v0.`io.reactivex.internal.operators.completable.CompletableUsing$a.a` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L42fc9e.  v0.`io.reactivex.internal.operators.completable.CompletableUsing$a.b` @type ^`io.reactivex.functions.Consumer` := v3 @kind object;
  #L42fca2.  v0.`io.reactivex.internal.operators.completable.CompletableUsing$a.c` @type ^`boolean` := v4 @kind boolean;
  #L42fca6.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.completable.CompletableUsing$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L42fce4.  call temp:= `getAndSet`(v2, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L42fcea.  v0:= temp @kind object;
  #L42fcec.  if v0 == v2 then goto L42fd0a;
  #L42fcf0.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableUsing$a.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42fcf4.  call `accept`(v1, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L42fcfa.  goto L42fd0a;
  #L42fcfc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42fcfe.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42fd04.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42fd0a.  return @kind void;
  catch `java.lang.Throwable` @[L42fcf0..L42fcfa] goto L42fcfc;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableUsing$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42fcb8.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableUsing$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42fcbc.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42fcc2.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42fcc6.  v1.`io.reactivex.internal.operators.completable.CompletableUsing$a.d` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42fcca.  call `a`(v1) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.a:()V` @kind virtual;
  #L42fcd0.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableUsing$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42fc74.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableUsing$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42fc78.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L42fc7e.  v0:= temp;
  #L42fc80.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableUsing$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42fd28.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42fd2c.  v2.`io.reactivex.internal.operators.completable.CompletableUsing$a.d` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42fd30.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableUsing$a.c` @type ^`boolean` @kind boolean;
  #L42fd34.  if v0 == 0 then goto L42fd64;
  #L42fd38.  call temp:= `getAndSet`(v2, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L42fd3e.  v0:= temp @kind object;
  #L42fd40.  if v0 == v2 then goto L42fd62;
  #L42fd44.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableUsing$a.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42fd48.  call `accept`(v1, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L42fd4e.  goto L42fd64;
  #L42fd50.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42fd52.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42fd58.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableUsing$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42fd5c.  call `onError`(v1, v0) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42fd62.  return @kind void;
  #L42fd64.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableUsing$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42fd68.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L42fd6e.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableUsing$a.c` @type ^`boolean` @kind boolean;
  #L42fd72.  if v0 != 0 then goto L42fd7c;
  #L42fd76.  call `a`(v2) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.a:()V` @kind virtual;
  #L42fd7c.  return @kind void;
  catch `java.lang.Throwable` @[L42fd44..L42fd4e] goto L42fd50;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableUsing$a` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42fd9c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42fda0.  v4.`io.reactivex.internal.operators.completable.CompletableUsing$a.d` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42fda4.  v0:= v4.`io.reactivex.internal.operators.completable.CompletableUsing$a.c` @type ^`boolean` @kind boolean;
  #L42fda8.  if v0 == 0 then goto L42fdee;
  #L42fdac.  call temp:= `getAndSet`(v4, v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L42fdb2.  v0:= temp @kind object;
  #L42fdb4.  if v0 == v4 then goto L42fdec;
  #L42fdb8.  v1:= v4.`io.reactivex.internal.operators.completable.CompletableUsing$a.b` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42fdbc.  call `accept`(v1, v0) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L42fdc2.  goto L42fdee;
  #L42fdc4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42fdc6.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42fdcc.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L42fdd0.  v2:= 2I;
  #L42fdd2.  v2:= new `java.lang.Throwable`[v2];
  #L42fdd6.  v3:= 0I;
  #L42fdd8.  v2[v3]:= v5 @kind object;
  #L42fddc.  v5:= 1I;
  #L42fdde.  v2[v5]:= v0 @kind object;
  #L42fde2.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L42fde8.  v5:= v1 @kind object;
  #L42fdea.  goto L42fdee;
  #L42fdec.  return @kind void;
  #L42fdee.  v0:= v4.`io.reactivex.internal.operators.completable.CompletableUsing$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42fdf2.  call `onError`(v0, v5) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42fdf8.  v5:= v4.`io.reactivex.internal.operators.completable.CompletableUsing$a.c` @type ^`boolean` @kind boolean;
  #L42fdfc.  if v5 != 0 then goto L42fe06;
  #L42fe00.  call `a`(v4) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.a:()V` @kind virtual;
  #L42fe06.  return @kind void;
  catch `java.lang.Throwable` @[L42fdb8..L42fdc2] goto L42fdc4;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableUsing$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42fe24.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableUsing$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42fe28.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42fe2e.  v0:= temp;
  #L42fe30.  if v0 == 0 then goto L42fe42;
  #L42fe34.  v1.`io.reactivex.internal.operators.completable.CompletableUsing$a.d` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42fe38.  v2:= v1.`io.reactivex.internal.operators.completable.CompletableUsing$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42fe3c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42fe42.  return @kind void;
}
