record `io.reactivex.internal.operators.completable.CompletableDetach$a` @kind class @AccessFlag FINAL extends `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableDetach$a.a` @AccessFlag ;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.completable.CompletableDetach$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableDetach$a` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableDetach$a;.<init>:(Lio/reactivex/CompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42d4d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42d4da.  v0.`io.reactivex.internal.operators.completable.CompletableDetach$a.a` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L42d4de.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableDetach$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableDetach$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42d4f0.  v0:= 0I;
  #L42d4f2.  v1.`io.reactivex.internal.operators.completable.CompletableDetach$a.a` @type ^`io.reactivex.CompletableObserver` := v0 @kind object;
  #L42d4f6.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDetach$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42d4fa.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42d500.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42d504.  v1.`io.reactivex.internal.operators.completable.CompletableDetach$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42d508.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableDetach$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableDetach$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42d4b4.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDetach$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42d4b8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L42d4be.  v0:= temp;
  #L42d4c0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableDetach$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableDetach$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42d51c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42d520.  v2.`io.reactivex.internal.operators.completable.CompletableDetach$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42d524.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableDetach$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42d528.  if v0 == 0 then goto L42d538;
  #L42d52c.  v1:= 0I;
  #L42d52e.  v2.`io.reactivex.internal.operators.completable.CompletableDetach$a.a` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L42d532.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L42d538.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableDetach$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableDetach$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42d54c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42d550.  v2.`io.reactivex.internal.operators.completable.CompletableDetach$a.b` @type ^`io.reactivex.disposables.Disposable` := v0 @kind object;
  #L42d554.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableDetach$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42d558.  if v0 == 0 then goto L42d568;
  #L42d55c.  v1:= 0I;
  #L42d55e.  v2.`io.reactivex.internal.operators.completable.CompletableDetach$a.a` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L42d562.  call `onError`(v0, v3) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42d568.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableDetach$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableDetach$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42d57c.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDetach$a.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42d580.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42d586.  v0:= temp;
  #L42d588.  if v0 == 0 then goto L42d59a;
  #L42d58c.  v1.`io.reactivex.internal.operators.completable.CompletableDetach$a.b` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42d590.  v2:= v1.`io.reactivex.internal.operators.completable.CompletableDetach$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42d594.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42d59a.  return @kind void;
}
