record `io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a` @kind class @AccessFlag FINAL extends `io.reactivex.CompletableObserver` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a.a` @AccessFlag FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a.b` @AccessFlag FINAL;
  `io.reactivex.internal.util.AtomicThrowable` `io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a.c` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object, `io.reactivex.disposables.CompositeDisposable` v2 @kind object, `io.reactivex.internal.util.AtomicThrowable` v3 @kind object, `java.util.concurrent.atomic.AtomicInteger` v4 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorArray$a;.<init>:(Lio/reactivex/CompletableObserver;Lio/reactivex/disposables/CompositeDisposable;Lio/reactivex/internal/util/AtomicThrowable;Ljava/util/concurrent/atomic/AtomicInteger;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42e694.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42e69a.  v0.`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a.a` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L42e69e.  v0.`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` := v2 @kind object;
  #L42e6a2.  v0.`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a.c` @type ^`io.reactivex.internal.util.AtomicThrowable` := v3 @kind object;
  #L42e6a6.  v0.`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a.d` @type ^`java.util.concurrent.atomic.AtomicInteger` := v4 @kind object;
  #L42e6aa.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorArray$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L42e720.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L42e724.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L42e72a.  v0:= temp;
  #L42e72c.  if v0 != 0 then goto L42e756;
  #L42e730.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a.c` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L42e734.  call temp:= `terminate`(v0) @signature `Lio/reactivex/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L42e73a.  v0:= temp @kind object;
  #L42e73c.  if v0 != 0 then goto L42e74c;
  #L42e740.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42e744.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L42e74a.  goto L42e756;
  #L42e74c.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42e750.  call `onError`(v1, v0) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42e756.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a` v0 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorArray$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L42e6bc.  call `a`(v0) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorArray$a;.a:()V` @kind virtual;
  #L42e6c2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorArray$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e6d4.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a.c` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L42e6d8.  call temp:= `addThrowable`(v0, v2) @signature `Lio/reactivex/internal/util/AtomicThrowable;.addThrowable:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L42e6de.  v0:= temp;
  #L42e6e0.  if v0 == 0 then goto L42e6ec;
  #L42e6e4.  call `a`(v1) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorArray$a;.a:()V` @kind virtual;
  #L42e6ea.  goto L42e6f2;
  #L42e6ec.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42e6f2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorArray$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e704.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L42e708.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/disposables/CompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L42e70e.  return @kind void;
}
