record `io.reactivex.internal.operators.completable.CompletableAmb$a` @kind class @AccessFlag FINAL extends `io.reactivex.CompletableObserver` @kind interface {
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.internal.operators.completable.CompletableAmb$a.a` @AccessFlag FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.operators.completable.CompletableAmb$a.b` @AccessFlag FINAL;
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableAmb$a.c` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.internal.operators.completable.CompletableAmb$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableAmb$a` v0 @kind this, `java.util.concurrent.atomic.AtomicBoolean` v1 @kind object, `io.reactivex.disposables.CompositeDisposable` v2 @kind object, `io.reactivex.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb$a;.<init>:(Ljava/util/concurrent/atomic/AtomicBoolean;Lio/reactivex/disposables/CompositeDisposable;Lio/reactivex/CompletableObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42c260.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42c266.  v0.`io.reactivex.internal.operators.completable.CompletableAmb$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v1 @kind object;
  #L42c26a.  v0.`io.reactivex.internal.operators.completable.CompletableAmb$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` := v2 @kind object;
  #L42c26e.  v0.`io.reactivex.internal.operators.completable.CompletableAmb$a.c` @type ^`io.reactivex.CompletableObserver` := v3 @kind object;
  #L42c272.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableAmb$a` v3 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42c284.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L42c288.  v1:= 0I;
  #L42c28a.  v2:= 1I;
  #L42c28c.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L42c292.  v0:= temp;
  #L42c294.  if v0 == 0 then goto L42c2ba;
  #L42c298.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L42c29c.  v1:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42c2a0.  call temp:= `delete`(v0, v1) @signature `Lio/reactivex/disposables/CompositeDisposable;.delete:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L42c2a6.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L42c2aa.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L42c2b0.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.c` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42c2b4.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L42c2ba.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableAmb$a` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42c2cc.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L42c2d0.  v1:= 0I;
  #L42c2d2.  v2:= 1I;
  #L42c2d4.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L42c2da.  v0:= temp;
  #L42c2dc.  if v0 == 0 then goto L42c304;
  #L42c2e0.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L42c2e4.  v1:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.d` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L42c2e8.  call temp:= `delete`(v0, v1) @signature `Lio/reactivex/disposables/CompositeDisposable;.delete:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L42c2ee.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L42c2f2.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L42c2f8.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableAmb$a.c` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42c2fc.  call `onError`(v0, v4) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42c302.  goto L42c30a;
  #L42c304.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42c30a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableAmb$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c31c.  v1.`io.reactivex.internal.operators.completable.CompletableAmb$a.d` @type ^`io.reactivex.disposables.Disposable` := v2 @kind object;
  #L42c320.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableAmb$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L42c324.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/disposables/CompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L42c32a.  return @kind void;
}
