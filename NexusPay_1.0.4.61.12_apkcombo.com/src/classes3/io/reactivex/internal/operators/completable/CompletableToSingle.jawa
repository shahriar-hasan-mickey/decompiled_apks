record `io.reactivex.internal.operators.completable.CompletableToSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Single` @kind class {
  `io.reactivex.CompletableSource` `io.reactivex.internal.operators.completable.CompletableToSingle.a` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.completable.CompletableToSingle.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.completable.CompletableToSingle.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableToSingle` v0 @kind this, `io.reactivex.CompletableSource` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle;.<init>:(Lio/reactivex/CompletableSource;Ljava/util/concurrent/Callable;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42fc28.  call `<init>`(v0) @signature `Lio/reactivex/Single;.<init>:()V` @kind direct;
  #L42fc2e.  v0.`io.reactivex.internal.operators.completable.CompletableToSingle.a` @type ^`io.reactivex.CompletableSource` := v1 @kind object;
  #L42fc32.  v0.`io.reactivex.internal.operators.completable.CompletableToSingle.c` @type ^`java.lang.Object` := v3 @kind object;
  #L42fc36.  v0.`io.reactivex.internal.operators.completable.CompletableToSingle.b` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L42fc3a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableToSingle` v2 @kind this, `io.reactivex.SingleObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L42fc4c.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableToSingle.a` @type ^`io.reactivex.CompletableSource` @kind object;
  #L42fc50.  v1:= new `io.reactivex.internal.operators.completable.CompletableToSingle$a`;
  #L42fc54.  call `<init>`(v1, v2, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle$a;.<init>:(Lio/reactivex/internal/operators/completable/CompletableToSingle;Lio/reactivex/SingleObserver;)V` @kind direct;
  #L42fc5a.  call `subscribe`(v0, v1) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L42fc60.  return @kind void;
}
