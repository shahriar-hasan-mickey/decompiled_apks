record `io.reactivex.internal.operators.completable.CompletableResumeNext$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableResumeNext$a.a` @AccessFlag FINAL;
  `io.reactivex.functions.Function` `io.reactivex.internal.operators.completable.CompletableResumeNext$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.completable.CompletableResumeNext$a.c` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableResumeNext$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableResumeNext$a` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext$a;.<init>:(Lio/reactivex/CompletableObserver;Lio/reactivex/functions/Function;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42f138.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L42f13e.  v0.`io.reactivex.internal.operators.completable.CompletableResumeNext$a.a` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L42f142.  v0.`io.reactivex.internal.operators.completable.CompletableResumeNext$a.b` @type ^`io.reactivex.functions.Function` := v2 @kind object;
  #L42f146.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableResumeNext$a` v0 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L42f158.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L42f15e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableResumeNext$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f110.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L42f116.  v0:= temp @kind object;
  #L42f118.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L42f11c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42f122.  v0:= temp;
  #L42f124.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableResumeNext$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f170.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableResumeNext$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42f174.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L42f17a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableResumeNext$a` v6 @kind this, `java.lang.Throwable` v7 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L42f18c.  v0:= v6.`io.reactivex.internal.operators.completable.CompletableResumeNext$a.c` @type ^`boolean` @kind boolean;
  #L42f190.  if v0 == 0 then goto L42f1a0;
  #L42f194.  v0:= v6.`io.reactivex.internal.operators.completable.CompletableResumeNext$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42f198.  call `onError`(v0, v7) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42f19e.  return @kind void;
  #L42f1a0.  v0:= 1I;
  #L42f1a2.  v6.`io.reactivex.internal.operators.completable.CompletableResumeNext$a.c` @type ^`boolean` := v0 @kind boolean;
  #L42f1a6.  v1:= v6.`io.reactivex.internal.operators.completable.CompletableResumeNext$a.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L42f1aa.  call temp:= `apply`(v1, v7) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42f1b0.  v1:= temp @kind object;
  #L42f1b2.  v2:= "The errorMapper returned a null CompletableSource" @kind object;
  #L42f1b6.  call temp:= `requireNonNull`(v1, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42f1bc.  v1:= temp @kind object;
  #L42f1be.  v1:= (`io.reactivex.CompletableSource`) v1 @kind object;
  #L42f1c2.  call `subscribe`(v1, v6) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L42f1c8.  return @kind void;
  #L42f1ca.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42f1cc.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42f1d2.  v2:= v6.`io.reactivex.internal.operators.completable.CompletableResumeNext$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42f1d6.  v3:= new `io.reactivex.exceptions.CompositeException`;
  #L42f1da.  v4:= 2I;
  #L42f1dc.  v4:= new `java.lang.Throwable`[v4];
  #L42f1e0.  v5:= 0I;
  #L42f1e2.  v4[v5]:= v7 @kind object;
  #L42f1e6.  v4[v0]:= v1 @kind object;
  #L42f1ea.  call `<init>`(v3, v4) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L42f1f0.  call `onError`(v2, v3) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42f1f6.  return @kind void;
  catch `java.lang.Throwable` @[L42f1a6..L42f1c2] goto L42f1ca;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableResumeNext$a` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L42f214.  call temp:= `replace`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42f21a.  return @kind void;
}
