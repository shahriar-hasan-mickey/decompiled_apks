record `io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `java.lang.Iterable` `io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable` v0 @kind this, `java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorIterable;.<init>:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42e840.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L42e846.  v0.`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable.a` @type ^`java.lang.Iterable` := v1 @kind object;
  #L42e84a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable` v6 @kind this, `io.reactivex.CompletableObserver` v7 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorIterable;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L42e85c.  v0:= new `io.reactivex.disposables.CompositeDisposable`;
  #L42e860.  call `<init>`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L42e866.  call `onSubscribe`(v7, v0) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42e86c.  v1:= v6.`io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable.a` @type ^`java.lang.Iterable` @kind object;
  #L42e870.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42e876.  v1:= temp @kind object;
  #L42e878.  v2:= "The source iterator returned is null" @kind object;
  #L42e87c.  call temp:= `requireNonNull`(v1, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42e882.  v1:= temp @kind object;
  #L42e884.  v1:= (`java.util.Iterator`) v1 @kind object;
  #L42e888.  v2:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L42e88c.  v3:= 1I;
  #L42e88e.  call `<init>`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L42e894.  v3:= new `io.reactivex.internal.util.AtomicThrowable`;
  #L42e898.  call `<init>`(v3) @signature `Lio/reactivex/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L42e89e.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L42e8a4.  v4:= temp;
  #L42e8a6.  if v4 == 0 then goto L42e8ac;
  #L42e8aa.  return @kind void;
  #L42e8ac.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42e8b2.  v4:= temp;
  #L42e8b4.  if v4 != 0 then goto L42e8ba;
  #L42e8b8.  goto L42e924;
  #L42e8ba.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L42e8c0.  v4:= temp;
  #L42e8c2.  if v4 == 0 then goto L42e8c8;
  #L42e8c6.  return @kind void;
  #L42e8c8.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42e8ce.  v4:= temp @kind object;
  #L42e8d0.  v5:= "The iterator returned a null CompletableSource" @kind object;
  #L42e8d4.  call temp:= `requireNonNull`(v4, v5) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42e8da.  v4:= temp @kind object;
  #L42e8dc.  v4:= (`io.reactivex.CompletableSource`) v4 @kind object;
  #L42e8e0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L42e8e6.  v5:= temp;
  #L42e8e8.  if v5 == 0 then goto L42e8ee;
  #L42e8ec.  return @kind void;
  #L42e8ee.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L42e8f4.  v5:= new `io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$a`;
  #L42e8f8.  call `<init>`(v5, v7, v0, v3, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorArray$a;.<init>:(Lio/reactivex/CompletableObserver;Lio/reactivex/disposables/CompositeDisposable;Lio/reactivex/internal/util/AtomicThrowable;Ljava/util/concurrent/atomic/AtomicInteger;)V` @kind direct;
  #L42e8fe.  call `subscribe`(v4, v5) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L42e904.  goto L42e89e;
  #L42e906.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e908.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42e90e.  call temp:= `addThrowable`(v3, v0) @signature `Lio/reactivex/internal/util/AtomicThrowable;.addThrowable:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L42e914.  goto L42e924;
  #L42e916.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e918.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42e91e.  call temp:= `addThrowable`(v3, v0) @signature `Lio/reactivex/internal/util/AtomicThrowable;.addThrowable:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L42e924.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L42e92a.  v0:= temp;
  #L42e92c.  if v0 != 0 then goto L42e94a;
  #L42e930.  call temp:= `terminate`(v3) @signature `Lio/reactivex/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L42e936.  v0:= temp @kind object;
  #L42e938.  if v0 != 0 then goto L42e944;
  #L42e93c.  call `onComplete`(v7) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L42e942.  goto L42e94a;
  #L42e944.  call `onError`(v7, v0) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42e94a.  return @kind void;
  #L42e94c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e94e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42e954.  call `onError`(v7, v0) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42e95a.  return @kind void;
  catch `java.lang.Throwable` @[L42e86c..L42e888] goto L42e94c;
  catch `java.lang.Throwable` @[L42e8ac..L42e8b4] goto L42e916;
  catch `java.lang.Throwable` @[L42e8c8..L42e8e0] goto L42e906;
}
