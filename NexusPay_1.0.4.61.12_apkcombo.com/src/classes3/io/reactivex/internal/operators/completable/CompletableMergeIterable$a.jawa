record `io.reactivex.internal.operators.completable.CompletableMergeIterable$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicBoolean` @kind class, `io.reactivex.CompletableObserver` @kind interface {
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.operators.completable.CompletableMergeIterable$a.a` @AccessFlag FINAL;
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableMergeIterable$a.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `io.reactivex.internal.operators.completable.CompletableMergeIterable$a.c` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableMergeIterable$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableMergeIterable$a` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object, `io.reactivex.disposables.CompositeDisposable` v2 @kind object, `java.util.concurrent.atomic.AtomicInteger` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeIterable$a;.<init>:(Lio/reactivex/CompletableObserver;Lio/reactivex/disposables/CompositeDisposable;Ljava/util/concurrent/atomic/AtomicInteger;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42e98c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L42e992.  v0.`io.reactivex.internal.operators.completable.CompletableMergeIterable$a.b` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L42e996.  v0.`io.reactivex.internal.operators.completable.CompletableMergeIterable$a.a` @type ^`io.reactivex.disposables.CompositeDisposable` := v2 @kind object;
  #L42e99a.  v0.`io.reactivex.internal.operators.completable.CompletableMergeIterable$a.c` @type ^`java.util.concurrent.atomic.AtomicInteger` := v3 @kind object;
  #L42e99e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableMergeIterable$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeIterable$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42e9b0.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableMergeIterable$a.c` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L42e9b4.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L42e9ba.  v0:= temp;
  #L42e9bc.  if v0 != 0 then goto L42e9da;
  #L42e9c0.  v0:= 0I;
  #L42e9c2.  v1:= 1I;
  #L42e9c4.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L42e9ca.  v0:= temp;
  #L42e9cc.  if v0 == 0 then goto L42e9da;
  #L42e9d0.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableMergeIterable$a.b` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42e9d4.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L42e9da.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableMergeIterable$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeIterable$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42e9ec.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableMergeIterable$a.a` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L42e9f0.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L42e9f6.  v0:= 0I;
  #L42e9f8.  v1:= 1I;
  #L42e9fa.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L42ea00.  v0:= temp;
  #L42ea02.  if v0 == 0 then goto L42ea12;
  #L42ea06.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableMergeIterable$a.b` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42ea0a.  call `onError`(v0, v3) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42ea10.  goto L42ea18;
  #L42ea12.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42ea18.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableMergeIterable$a` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeIterable$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ea2c.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableMergeIterable$a.a` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L42ea30.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/disposables/CompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L42ea36.  return @kind void;
}
