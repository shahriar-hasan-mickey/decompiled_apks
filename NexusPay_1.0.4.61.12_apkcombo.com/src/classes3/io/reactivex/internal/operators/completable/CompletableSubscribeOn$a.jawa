record `io.reactivex.internal.operators.completable.CompletableSubscribeOn$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.CompletableObserver` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `java.lang.Runnable` @kind interface {
  `io.reactivex.CompletableObserver` `io.reactivex.internal.operators.completable.CompletableSubscribeOn$a.a` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.completable.CompletableSubscribeOn$a.b` @AccessFlag FINAL;
  `io.reactivex.CompletableSource` `io.reactivex.internal.operators.completable.CompletableSubscribeOn$a.c` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableSubscribeOn$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableSubscribeOn$a` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$a;.<init>:(Lio/reactivex/CompletableObserver;Lio/reactivex/CompletableSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42f2a4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L42f2aa.  v0.`io.reactivex.internal.operators.completable.CompletableSubscribeOn$a.a` @type ^`io.reactivex.CompletableObserver` := v1 @kind object;
  #L42f2ae.  v0.`io.reactivex.internal.operators.completable.CompletableSubscribeOn$a.c` @type ^`io.reactivex.CompletableSource` := v2 @kind object;
  #L42f2b2.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L42f2b6.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L42f2bc.  v0.`io.reactivex.internal.operators.completable.CompletableSubscribeOn$a.b` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L42f2c0.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableSubscribeOn$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f2d4.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L42f2da.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableSubscribeOn$a.b` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L42f2de.  call `dispose`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.dispose:()V` @kind virtual;
  #L42f2e4.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableSubscribeOn$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f27c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L42f282.  v0:= temp @kind object;
  #L42f284.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L42f288.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42f28e.  v0:= temp;
  #L42f290.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableSubscribeOn$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f2f8.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableSubscribeOn$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42f2fc.  call `onComplete`(v0) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L42f302.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableSubscribeOn$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f314.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableSubscribeOn$a.a` @type ^`io.reactivex.CompletableObserver` @kind object;
  #L42f318.  call `onError`(v0, v2) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42f31e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableSubscribeOn$a` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$a;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L42f330.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L42f336.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.completable.CompletableSubscribeOn$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f348.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableSubscribeOn$a.c` @type ^`io.reactivex.CompletableSource` @kind object;
  #L42f34c.  call `subscribe`(v0, v1) @signature `Lio/reactivex/CompletableSource;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind interface;
  #L42f352.  return @kind void;
}
