record `io.reactivex.internal.operators.completable.CompletableFromAction` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Completable` @kind class {
  `io.reactivex.functions.Action` `io.reactivex.internal.operators.completable.CompletableFromAction.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableFromAction` v0 @kind this, `io.reactivex.functions.Action` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableFromAction;.<init>:(Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42dad0.  call `<init>`(v0) @signature `Lio/reactivex/Completable;.<init>:()V` @kind direct;
  #L42dad6.  v0.`io.reactivex.internal.operators.completable.CompletableFromAction.a` @type ^`io.reactivex.functions.Action` := v1 @kind object;
  #L42dada.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.completable.CompletableFromAction` v2 @kind this, `io.reactivex.CompletableObserver` v3 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableFromAction;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L42daec.  call temp:= `empty`() @signature `Lio/reactivex/disposables/Disposables;.empty:()Lio/reactivex/disposables/Disposable;` @kind static;
  #L42daf2.  v0:= temp @kind object;
  #L42daf4.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/CompletableObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L42dafa.  v1:= v2.`io.reactivex.internal.operators.completable.CompletableFromAction.a` @type ^`io.reactivex.functions.Action` @kind object;
  #L42dafe.  call `run`(v1) @signature `Lio/reactivex/functions/Action;.run:()V` @kind interface;
  #L42db04.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L42db0a.  v0:= temp;
  #L42db0c.  if v0 != 0 then goto L42db16;
  #L42db10.  call `onComplete`(v3) @signature `Lio/reactivex/CompletableObserver;.onComplete:()V` @kind interface;
  #L42db16.  return @kind void;
  #L42db18.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42db1a.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42db20.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L42db26.  v0:= temp;
  #L42db28.  if v0 != 0 then goto L42db34;
  #L42db2c.  call `onError`(v3, v1) @signature `Lio/reactivex/CompletableObserver;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L42db32.  goto L42db3a;
  #L42db34.  call `onError`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L42db3a.  return @kind void;
  catch `java.lang.Throwable` @[L42dafa..L42db04] goto L42db18;
}
