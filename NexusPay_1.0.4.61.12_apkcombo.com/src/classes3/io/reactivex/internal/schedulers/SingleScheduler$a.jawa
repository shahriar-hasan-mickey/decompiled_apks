record `io.reactivex.internal.schedulers.SingleScheduler$a` @kind class @AccessFlag FINAL extends `io.reactivex.Scheduler$Worker` @kind class {
  `java.util.concurrent.ScheduledExecutorService` `io.reactivex.internal.schedulers.SingleScheduler$a.a` @AccessFlag FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.schedulers.SingleScheduler$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.schedulers.SingleScheduler$a.c` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.SingleScheduler$a` v0 @kind this, `java.util.concurrent.ScheduledExecutorService` v1 @kind object) @signature `Lio/reactivex/internal/schedulers/SingleScheduler$a;.<init>:(Ljava/util/concurrent/ScheduledExecutorService;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4860c4.  call `<init>`(v0) @signature `Lio/reactivex/Scheduler$Worker;.<init>:()V` @kind direct;
  #L4860ca.  v0.`io.reactivex.internal.schedulers.SingleScheduler$a.a` @type ^`java.util.concurrent.ScheduledExecutorService` := v1 @kind object;
  #L4860ce.  v1:= new `io.reactivex.disposables.CompositeDisposable`;
  #L4860d2.  call `<init>`(v1) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L4860d8.  v0.`io.reactivex.internal.schedulers.SingleScheduler$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` := v1 @kind object;
  #L4860dc.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.schedulers.SingleScheduler$a` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/SingleScheduler$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4860f0.  v0:= v1.`io.reactivex.internal.schedulers.SingleScheduler$a.c` @type ^`boolean` @kind boolean;
  #L4860f4.  if v0 != 0 then goto L486108;
  #L4860f8.  v0:= 1I;
  #L4860fa.  v1.`io.reactivex.internal.schedulers.SingleScheduler$a.c` @type ^`boolean` := v0 @kind boolean;
  #L4860fe.  v0:= v1.`io.reactivex.internal.schedulers.SingleScheduler$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L486102.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L486108.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.schedulers.SingleScheduler$a` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/SingleScheduler$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48601c.  v0:= v1.`io.reactivex.internal.schedulers.SingleScheduler$a.c` @type ^`boolean` @kind boolean;
  #L486020.  return v0;
}
procedure `io.reactivex.disposables.Disposable` `schedule`(`io.reactivex.internal.schedulers.SingleScheduler$a` v3 @kind this, `java.lang.Runnable` v4 @kind object, `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object) @signature `Lio/reactivex/internal/schedulers/SingleScheduler$a;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L486034.  v0:= v3.`io.reactivex.internal.schedulers.SingleScheduler$a.c` @type ^`boolean` @kind boolean;
  #L486038.  if v0 == 0 then goto L486042;
  #L48603c.  v4:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L486040.  return v4 @kind object;
  #L486042.  call temp:= `onSchedule`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L486048.  v4:= temp @kind object;
  #L48604a.  v0:= new `io.reactivex.internal.schedulers.ScheduledRunnable`;
  #L48604e.  v1:= v3.`io.reactivex.internal.schedulers.SingleScheduler$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L486052.  call `<init>`(v0, v4, v1) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.<init>:(Ljava/lang/Runnable;Lio/reactivex/internal/disposables/DisposableContainer;)V` @kind direct;
  #L486058.  v4:= v3.`io.reactivex.internal.schedulers.SingleScheduler$a.b` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L48605c.  call temp:= `add`(v4, v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L486062.  v1:= 0L;
  #L486066.  v4:= lcmp(v5, v1);
  #L48606a.  if v4 > 0 then goto L48607c;
  #L48606e.  v4:= v3.`io.reactivex.internal.schedulers.SingleScheduler$a.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L486072.  call temp:= `submit`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L486078.  v4:= temp @kind object;
  #L48607a.  goto L486088;
  #L48607c.  v4:= v3.`io.reactivex.internal.schedulers.SingleScheduler$a.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L486080.  call temp:= `schedule`(v4, v0, v5, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L486086.  v4:= temp @kind object;
  #L486088.  call `setFuture`(v0, v4) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L48608e.  return v0 @kind object;
  #L486090.  v4:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L486092.  call `dispose`(v3) @signature `Lio/reactivex/internal/schedulers/SingleScheduler$a;.dispose:()V` @kind virtual;
  #L486098.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48609e.  v4:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L4860a2.  return v4 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L48606e..L48608e] goto L486090;
}
