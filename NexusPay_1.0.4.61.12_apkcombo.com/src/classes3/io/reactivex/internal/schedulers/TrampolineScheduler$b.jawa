record `io.reactivex.internal.schedulers.TrampolineScheduler$b` @kind class @AccessFlag FINAL extends `java.lang.Comparable` @kind interface {
  `java.lang.Runnable` `io.reactivex.internal.schedulers.TrampolineScheduler$b.a` @AccessFlag FINAL;
  `long` `io.reactivex.internal.schedulers.TrampolineScheduler$b.b` @AccessFlag FINAL;
  `int` `io.reactivex.internal.schedulers.TrampolineScheduler$b.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.schedulers.TrampolineScheduler$b.d` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.TrampolineScheduler$b` v0 @kind this, `java.lang.Runnable` v1 @kind object, `java.lang.Long` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/internal/schedulers/TrampolineScheduler$b;.<init>:(Ljava/lang/Runnable;Ljava/lang/Long;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L486510.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L486516.  v0.`io.reactivex.internal.schedulers.TrampolineScheduler$b.a` @type ^`java.lang.Runnable` := v1 @kind object;
  #L48651a.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L486520.  v1:= temp @kind wide;
  #L486522.  v0.`io.reactivex.internal.schedulers.TrampolineScheduler$b.b` @type ^`long` := v1 @kind wide;
  #L486526.  v0.`io.reactivex.internal.schedulers.TrampolineScheduler$b.c` @type ^`int` := v3;
  #L48652a.  return @kind void;
}
procedure `int` `a`(`io.reactivex.internal.schedulers.TrampolineScheduler$b` v4 @kind this, `io.reactivex.internal.schedulers.TrampolineScheduler$b` v5 @kind object) @signature `Lio/reactivex/internal/schedulers/TrampolineScheduler$b;.a:(Lio/reactivex/internal/schedulers/TrampolineScheduler$b;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4864b8.  v0:= v4.`io.reactivex.internal.schedulers.TrampolineScheduler$b.b` @type ^`long` @kind wide;
  #L4864bc.  v2:= v5.`io.reactivex.internal.schedulers.TrampolineScheduler$b.b` @type ^`long` @kind wide;
  #L4864c0.  call temp:= `compare`(v0, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.compare:(JJ)I` @kind static;
  #L4864c6.  v0:= temp;
  #L4864c8.  if v0 != 0 then goto L4864de;
  #L4864cc.  v0:= v4.`io.reactivex.internal.schedulers.TrampolineScheduler$b.c` @type ^`int`;
  #L4864d0.  v5:= v5.`io.reactivex.internal.schedulers.TrampolineScheduler$b.c` @type ^`int`;
  #L4864d4.  call temp:= `compare`(v0, v5) @signature `Lio/reactivex/internal/functions/ObjectHelper;.compare:(II)I` @kind static;
  #L4864da.  v5:= temp;
  #L4864dc.  return v5;
  #L4864de.  return v0;
}
procedure `int` `compareTo`(`io.reactivex.internal.schedulers.TrampolineScheduler$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/schedulers/TrampolineScheduler$b;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4864f0.  v1:= (`io.reactivex.internal.schedulers.TrampolineScheduler$b`) v1 @kind object;
  #L4864f4.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/internal/schedulers/TrampolineScheduler$b;.a:(Lio/reactivex/internal/schedulers/TrampolineScheduler$b;)I` @kind virtual;
  #L4864fa.  v1:= temp;
  #L4864fc.  return v1;
}
