record `io.reactivex.internal.schedulers.IoScheduler$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `long` `io.reactivex.internal.schedulers.IoScheduler$a.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentLinkedQueue` `io.reactivex.internal.schedulers.IoScheduler$a.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.disposables.CompositeDisposable` `io.reactivex.internal.schedulers.IoScheduler$a.c` @AccessFlag FINAL;
  `java.util.concurrent.ScheduledExecutorService` `io.reactivex.internal.schedulers.IoScheduler$a.d` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Future` `io.reactivex.internal.schedulers.IoScheduler$a.e` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ThreadFactory` `io.reactivex.internal.schedulers.IoScheduler$a.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.IoScheduler$a` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `java.util.concurrent.ThreadFactory` v11 @kind object) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.<init>:(JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L484ae8.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L484aee.  if v10 == 0 then goto L484afc;
  #L484af2.  call temp:= `toNanos`(v10, v8) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L484af8.  v8:= temp @kind wide;
  #L484afa.  goto L484b00;
  #L484afc.  v8:= 0L;
  #L484b00.  v7.`io.reactivex.internal.schedulers.IoScheduler$a.a` @type ^`long` := v8 @kind wide;
  #L484b04.  v8:= new `java.util.concurrent.ConcurrentLinkedQueue`;
  #L484b08.  call `<init>`(v8) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V` @kind direct;
  #L484b0e.  v7.`io.reactivex.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` := v8 @kind object;
  #L484b12.  v8:= new `io.reactivex.disposables.CompositeDisposable`;
  #L484b16.  call `<init>`(v8) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @kind direct;
  #L484b1c.  v7.`io.reactivex.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.disposables.CompositeDisposable` := v8 @kind object;
  #L484b20.  v7.`io.reactivex.internal.schedulers.IoScheduler$a.f` @type ^`java.util.concurrent.ThreadFactory` := v11 @kind object;
  #L484b24.  v8:= 0I;
  #L484b26.  if v10 == 0 then goto L484b50;
  #L484b2a.  v8:= 1I;
  #L484b2c.  v9:= `@@io.reactivex.internal.schedulers.IoScheduler.f` @type ^`io.reactivex.internal.schedulers.RxThreadFactory` @kind object;
  #L484b30.  call temp:= `newScheduledThreadPool`(v8, v9) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L484b36.  v8:= temp @kind object;
  #L484b38.  v4:= v7.`io.reactivex.internal.schedulers.IoScheduler$a.a` @type ^`long` @kind wide;
  #L484b3c.  v6:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L484b40.  v0:= v8 @kind object;
  #L484b42.  v1:= v7 @kind object;
  #L484b44.  v2:= v4 @kind wide;
  #L484b46.  call temp:= `scheduleWithFixedDelay`(v0, v1, v2, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L484b4c.  v9:= temp @kind object;
  #L484b4e.  goto L484b52;
  #L484b50.  v9:= v8 @kind object;
  #L484b52.  v7.`io.reactivex.internal.schedulers.IoScheduler$a.d` @type ^`java.util.concurrent.ScheduledExecutorService` := v8 @kind object;
  #L484b56.  v7.`io.reactivex.internal.schedulers.IoScheduler$a.e` @type ^`java.util.concurrent.Future` := v9 @kind object;
  #L484b5a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.schedulers.IoScheduler$a` v7 @kind this) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L484b6c.  v0:= v7.`io.reactivex.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L484b70.  call temp:= `isEmpty`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L484b76.  v0:= temp;
  #L484b78.  if v0 != 0 then goto L484bd4;
  #L484b7c.  call temp:= `c`(v7) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.c:()J` @kind virtual;
  #L484b82.  v0:= temp @kind wide;
  #L484b84.  v2:= v7.`io.reactivex.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L484b88.  call temp:= `iterator`(v2) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L484b8e.  v2:= temp @kind object;
  #L484b90.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L484b96.  v3:= temp;
  #L484b98.  if v3 == 0 then goto L484bd4;
  #L484b9c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L484ba2.  v3:= temp @kind object;
  #L484ba4.  v3:= (`io.reactivex.internal.schedulers.IoScheduler$c`) v3 @kind object;
  #L484ba8.  call temp:= `a`(v3) @signature `Lio/reactivex/internal/schedulers/IoScheduler$c;.a:()J` @kind virtual;
  #L484bae.  v4:= temp @kind wide;
  #L484bb0.  v6:= lcmp(v4, v0);
  #L484bb4.  if v6 > 0 then goto L484bd4;
  #L484bb8.  v4:= v7.`io.reactivex.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L484bbc.  call temp:= `remove`(v4, v3) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L484bc2.  v4:= temp;
  #L484bc4.  if v4 == 0 then goto L484b90;
  #L484bc8.  v4:= v7.`io.reactivex.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L484bcc.  call temp:= `remove`(v4, v3) @signature `Lio/reactivex/disposables/CompositeDisposable;.remove:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L484bd2.  goto L484b90;
  #L484bd4.  return @kind void;
}
procedure `io.reactivex.internal.schedulers.IoScheduler$c` `b`(`io.reactivex.internal.schedulers.IoScheduler$a` v2 @kind this) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.b:()Lio/reactivex/internal/schedulers/IoScheduler$c;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L484a64.  v0:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L484a68.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.isDisposed:()Z` @kind virtual;
  #L484a6e.  v0:= temp;
  #L484a70.  if v0 == 0 then goto L484a7a;
  #L484a74.  v0:= `@@io.reactivex.internal.schedulers.IoScheduler.i` @type ^`io.reactivex.internal.schedulers.IoScheduler$c` @kind object;
  #L484a78.  return v0 @kind object;
  #L484a7a.  v0:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L484a7e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L484a84.  v0:= temp;
  #L484a86.  if v0 != 0 then goto L484aa0;
  #L484a8a.  v0:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L484a8e.  call temp:= `poll`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L484a94.  v0:= temp @kind object;
  #L484a96.  v0:= (`io.reactivex.internal.schedulers.IoScheduler$c`) v0 @kind object;
  #L484a9a.  if v0 == 0 then goto L484a7a;
  #L484a9e.  return v0 @kind object;
  #L484aa0.  v0:= new `io.reactivex.internal.schedulers.IoScheduler$c`;
  #L484aa4.  v1:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.f` @type ^`java.util.concurrent.ThreadFactory` @kind object;
  #L484aa8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/schedulers/IoScheduler$c;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L484aae.  v1:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L484ab2.  call temp:= `add`(v1, v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L484ab8.  return v0 @kind object;
}
procedure `long` `c`(`io.reactivex.internal.schedulers.IoScheduler$a` v2 @kind this) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.c:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L484acc.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L484ad2.  v0:= temp @kind wide;
  #L484ad4.  return v0 @kind wide;
}
procedure `void` `d`(`io.reactivex.internal.schedulers.IoScheduler$a` v4 @kind this, `io.reactivex.internal.schedulers.IoScheduler$c` v5 @kind object) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.d:(Lio/reactivex/internal/schedulers/IoScheduler$c;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L484be8.  call temp:= `c`(v4) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.c:()J` @kind virtual;
  #L484bee.  v0:= temp @kind wide;
  #L484bf0.  v2:= v4.`io.reactivex.internal.schedulers.IoScheduler$a.a` @type ^`long` @kind wide;
  #L484bf4.  v0:= v0 + v2 @kind long;
  #L484bf6.  call `b`(v5, v0) @signature `Lio/reactivex/internal/schedulers/IoScheduler$c;.b:(J)V` @kind virtual;
  #L484bfc.  v0:= v4.`io.reactivex.internal.schedulers.IoScheduler$a.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L484c00.  call temp:= `offer`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L484c06.  return @kind void;
}
procedure `void` `e`(`io.reactivex.internal.schedulers.IoScheduler$a` v2 @kind this) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.e:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L484c30.  v0:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.c` @type ^`io.reactivex.disposables.CompositeDisposable` @kind object;
  #L484c34.  call `dispose`(v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @kind virtual;
  #L484c3a.  v0:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.e` @type ^`java.util.concurrent.Future` @kind object;
  #L484c3e.  if v0 == 0 then goto L484c4a;
  #L484c42.  v1:= 1I;
  #L484c44.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L484c4a.  v0:= v2.`io.reactivex.internal.schedulers.IoScheduler$a.d` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L484c4e.  if v0 == 0 then goto L484c58;
  #L484c52.  call temp:= `shutdownNow`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L484c58.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.schedulers.IoScheduler$a` v0 @kind this) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.run:()V` @AccessFlag PUBLIC {
    temp;

  #L484c18.  call `a`(v0) @signature `Lio/reactivex/internal/schedulers/IoScheduler$a;.a:()V` @kind virtual;
  #L484c1e.  return @kind void;
}
