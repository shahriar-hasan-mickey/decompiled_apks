record `io.reactivex.internal.schedulers.NewThreadWorker` @kind class @AccessFlag PUBLIC extends `io.reactivex.Scheduler$Worker` @kind class, `io.reactivex.disposables.Disposable` @kind interface {
  `java.util.concurrent.ScheduledExecutorService` `io.reactivex.internal.schedulers.NewThreadWorker.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.reactivex.internal.schedulers.NewThreadWorker.b` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.NewThreadWorker` v0 @kind this, `java.util.concurrent.ThreadFactory` v1 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4852b4.  call `<init>`(v0) @signature `Lio/reactivex/Scheduler$Worker;.<init>:()V` @kind direct;
  #L4852ba.  call temp:= `create`(v1) @signature `Lio/reactivex/internal/schedulers/SchedulerPoolFactory;.create:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L4852c0.  v1:= temp @kind object;
  #L4852c2.  v0.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` := v1 @kind object;
  #L4852c6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.schedulers.NewThreadWorker` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4852d8.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.b` @type ^`boolean` @kind boolean;
  #L4852dc.  if v0 != 0 then goto L4852f0;
  #L4852e0.  v0:= 1I;
  #L4852e2.  v1.`io.reactivex.internal.schedulers.NewThreadWorker.b` @type ^`boolean` := v0 @kind boolean;
  #L4852e6.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L4852ea.  call temp:= `shutdownNow`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L4852f0.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.schedulers.NewThreadWorker` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L485094.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.b` @type ^`boolean` @kind boolean;
  #L485098.  return v0;
}
procedure `io.reactivex.disposables.Disposable` `schedule`(`io.reactivex.internal.schedulers.NewThreadWorker` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.schedule:(Ljava/lang/Runnable;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4850ac.  v0:= 0L;
  #L4850b0.  v2:= 0I;
  #L4850b2.  call temp:= `schedule`(v3, v4, v0, v2) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L4850b8.  v4:= temp @kind object;
  #L4850ba.  return v4 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `schedule`(`io.reactivex.internal.schedulers.NewThreadWorker` v6 @kind this, `java.lang.Runnable` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4850cc.  v0:= v6.`io.reactivex.internal.schedulers.NewThreadWorker.b` @type ^`boolean` @kind boolean;
  #L4850d0.  if v0 == 0 then goto L4850da;
  #L4850d4.  v7:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L4850d8.  return v7 @kind object;
  #L4850da.  v5:= 0I;
  #L4850dc.  v0:= v6 @kind object;
  #L4850de.  v1:= v7 @kind object;
  #L4850e0.  v2:= v8 @kind wide;
  #L4850e2.  v4:= v10 @kind object;
  #L4850e4.  call temp:= `scheduleActual`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.scheduleActual:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/internal/disposables/DisposableContainer;)Lio/reactivex/internal/schedulers/ScheduledRunnable;` @kind virtual;
  #L4850ea.  v7:= temp @kind object;
  #L4850ec.  return v7 @kind object;
}
procedure `io.reactivex.internal.schedulers.ScheduledRunnable` `scheduleActual`(`io.reactivex.internal.schedulers.NewThreadWorker` v3 @kind this, `java.lang.Runnable` v4 @kind object, `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object, `io.reactivex.internal.disposables.DisposableContainer` v8 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.scheduleActual:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/internal/disposables/DisposableContainer;)Lio/reactivex/internal/schedulers/ScheduledRunnable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48522c.  call temp:= `onSchedule`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L485232.  v4:= temp @kind object;
  #L485234.  v0:= new `io.reactivex.internal.schedulers.ScheduledRunnable`;
  #L485238.  call `<init>`(v0, v4, v8) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.<init>:(Ljava/lang/Runnable;Lio/reactivex/internal/disposables/DisposableContainer;)V` @kind direct;
  #L48523e.  if v8 == 0 then goto L485250;
  #L485242.  call temp:= `add`(v8, v0) @signature `Lio/reactivex/internal/disposables/DisposableContainer;.add:(Lio/reactivex/disposables/Disposable;)Z` @kind interface;
  #L485248.  v4:= temp;
  #L48524a.  if v4 != 0 then goto L485250;
  #L48524e.  return v0 @kind object;
  #L485250.  v1:= 0L;
  #L485254.  v4:= lcmp(v5, v1);
  #L485258.  if v4 > 0 then goto L48526a;
  #L48525c.  v4:= v3.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L485260.  call temp:= `submit`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L485266.  v4:= temp @kind object;
  #L485268.  goto L485276;
  #L48526a.  v4:= v3.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L48526e.  call temp:= `schedule`(v4, v0, v5, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L485274.  v4:= temp @kind object;
  #L485276.  call `setFuture`(v0, v4) @signature `Lio/reactivex/internal/schedulers/ScheduledRunnable;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L48527c.  goto L485290;
  #L48527e.  v4:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L485280.  if v8 == 0 then goto L48528a;
  #L485284.  call temp:= `remove`(v8, v0) @signature `Lio/reactivex/internal/disposables/DisposableContainer;.remove:(Lio/reactivex/disposables/Disposable;)Z` @kind interface;
  #L48528a.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L485290.  return v0 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L48525c..L48527c] goto L48527e;
}
procedure `io.reactivex.disposables.Disposable` `scheduleDirect`(`io.reactivex.internal.schedulers.NewThreadWorker` v3 @kind this, `java.lang.Runnable` v4 @kind object, `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L485100.  v0:= new `io.reactivex.internal.schedulers.ScheduledDirectTask`;
  #L485104.  call temp:= `onSchedule`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L48510a.  v4:= temp @kind object;
  #L48510c.  call `<init>`(v0, v4) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectTask;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L485112.  v1:= 0L;
  #L485116.  v4:= lcmp(v5, v1);
  #L48511a.  if v4 > 0 then goto L48512c;
  #L48511e.  v4:= v3.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L485122.  call temp:= `submit`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L485128.  v4:= temp @kind object;
  #L48512a.  goto L485138;
  #L48512c.  v4:= v3.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L485130.  call temp:= `schedule`(v4, v0, v5, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L485136.  v4:= temp @kind object;
  #L485138.  call `setFuture`(v0, v4) @signature `Lio/reactivex/internal/schedulers/a;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L48513e.  return v0 @kind object;
  #L485140.  v4:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L485142.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L485148.  v4:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L48514c.  return v4 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L48511e..L48513e] goto L485140;
}
procedure `io.reactivex.disposables.Disposable` `schedulePeriodicallyDirect`(`io.reactivex.internal.schedulers.NewThreadWorker` v8 @kind this, `java.lang.Runnable` v9 @kind object, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L485170.  call temp:= `onSchedule`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L485176.  v9:= temp @kind object;
  #L485178.  v0:= 0L;
  #L48517c.  v2:= lcmp(v12, v0);
  #L485180.  if v2 > 0 then goto L4851ca;
  #L485184.  v12:= new `io.reactivex.internal.schedulers.c`;
  #L485188.  v13:= v8.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L48518c.  call `<init>`(v12, v9, v13) @signature `Lio/reactivex/internal/schedulers/c;.<init>:(Ljava/lang/Runnable;Ljava/util/concurrent/ExecutorService;)V` @kind direct;
  #L485192.  v9:= lcmp(v10, v0);
  #L485196.  if v9 > 0 then goto L4851a8;
  #L48519a.  v9:= v8.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L48519e.  call temp:= `submit`(v9, v12) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L4851a4.  v9:= temp @kind object;
  #L4851a6.  goto L4851b4;
  #L4851a8.  v9:= v8.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L4851ac.  call temp:= `schedule`(v9, v12, v10, v14) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L4851b2.  v9:= temp @kind object;
  #L4851b4.  call `b`(v12, v9) @signature `Lio/reactivex/internal/schedulers/c;.b:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L4851ba.  return v12 @kind object;
  #L4851bc.  v9:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L4851be.  call `onError`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4851c4.  v9:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L4851c8.  return v9 @kind object;
  #L4851ca.  v7:= new `io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask`;
  #L4851ce.  call `<init>`(v7, v9) @signature `Lio/reactivex/internal/schedulers/ScheduledDirectPeriodicTask;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L4851d4.  v0:= v8.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L4851d8.  v1:= v7 @kind object;
  #L4851da.  v2:= v10 @kind wide;
  #L4851dc.  v4:= v12 @kind wide;
  #L4851de.  v6:= v14 @kind object;
  #L4851e0.  call temp:= `scheduleAtFixedRate`(v0, v1, v2, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L4851e6.  v9:= temp @kind object;
  #L4851e8.  call `setFuture`(v7, v9) @signature `Lio/reactivex/internal/schedulers/a;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L4851ee.  return v7 @kind object;
  #L4851f0.  v9:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L4851f2.  call `onError`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L4851f8.  v9:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L4851fc.  return v9 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L48519a..L4851ba] goto L4851bc;
  catch `java.util.concurrent.RejectedExecutionException` @[L4851d4..L4851ee] goto L4851f0;
}
procedure `void` `shutdown`(`io.reactivex.internal.schedulers.NewThreadWorker` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/NewThreadWorker;.shutdown:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L485304.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.b` @type ^`boolean` @kind boolean;
  #L485308.  if v0 != 0 then goto L48531c;
  #L48530c.  v0:= 1I;
  #L48530e.  v1.`io.reactivex.internal.schedulers.NewThreadWorker.b` @type ^`boolean` := v0 @kind boolean;
  #L485312.  v0:= v1.`io.reactivex.internal.schedulers.NewThreadWorker.a` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L485316.  call `shutdown`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L48531c.  return @kind void;
}
