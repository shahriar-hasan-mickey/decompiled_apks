record `io.reactivex.internal.subscribers.InnerQueuedSubscriber` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.a` @AccessFlag FINAL;
  `int` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.b` @AccessFlag FINAL;
  `int` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.c` @AccessFlag FINAL;
  `io.reactivex.internal.fuseable.SimpleQueue` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.d` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.e` @AccessFlag VOLATILE;
  `long` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.f` @AccessFlag ;
  `int` `io.reactivex.internal.subscribers.InnerQueuedSubscriber.g` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.subscribers.InnerQueuedSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v0 @kind this, `io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.<init>:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L487754.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L48775a.  v0.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` := v1 @kind object;
  #L48775e.  v0.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.b` @type ^`int` := v2;
  #L487762.  v1:= v2 ^> 2;
  #L487766.  v2:= v2 - v1 @kind int;
  #L487768.  v0.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.c` @type ^`int` := v2;
  #L48776c.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v0 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L487780.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L487786.  return @kind void;
}
procedure `boolean` `isDone`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487724.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.e` @type ^`boolean` @kind boolean;
  #L487728.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487798.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L48779c.  call `innerComplete`(v0, v1) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.innerComplete:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;)V` @kind interface;
  #L4877a2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4877b4.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L4877b8.  call `innerError`(v0, v1, v2) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.innerError:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;Ljava/lang/Throwable;)V` @kind interface;
  #L4877be.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4877d0.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.g` @type ^`int`;
  #L4877d4.  if v0 != 0 then goto L4877e4;
  #L4877d8.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L4877dc.  call `innerNext`(v0, v1, v2) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.innerNext:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;Ljava/lang/Object;)V` @kind interface;
  #L4877e2.  goto L4877ee;
  #L4877e4.  v2:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L4877e8.  call `drain`(v2) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.drain:()V` @kind interface;
  #L4877ee.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v3 @kind this, `org.reactivestreams.Subscription` v4 @kind object) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L487800.  call temp:= `setOnce`(v3, v4) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L487806.  v0:= temp;
  #L487808.  if v0 == 0 then goto L487876;
  #L48780c.  v0:= instanceof @variable v4 @type ^`io.reactivex.internal.fuseable.QueueSubscription` @kind boolean;
  #L487810.  if v0 == 0 then goto L48785c;
  #L487814.  v0:= v4 @kind object;
  #L487816.  v0:= (`io.reactivex.internal.fuseable.QueueSubscription`) v0 @kind object;
  #L48781a.  v1:= 3I;
  #L48781c.  call temp:= `requestFusion`(v0, v1) @signature `Lio/reactivex/internal/fuseable/QueueFuseable;.requestFusion:(I)I` @kind interface;
  #L487822.  v1:= temp;
  #L487824.  v2:= 1I;
  #L487826.  if v1 != v2 then goto L487842;
  #L48782a.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.g` @type ^`int` := v1;
  #L48782e.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.d` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L487832.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.e` @type ^`boolean` := v2 @kind boolean;
  #L487836.  v4:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.a` @type ^`io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport` @kind object;
  #L48783a.  call `innerComplete`(v4, v3) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriberSupport;.innerComplete:(Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;)V` @kind interface;
  #L487840.  return @kind void;
  #L487842.  v2:= 2I;
  #L487844.  if v1 != v2 then goto L48785c;
  #L487848.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.g` @type ^`int` := v1;
  #L48784c.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.d` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L487850.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.b` @type ^`int`;
  #L487854.  call `request`(v4, v0) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.request:(Lorg/reactivestreams/Subscription;I)V` @kind static;
  #L48785a.  return @kind void;
  #L48785c.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.b` @type ^`int`;
  #L487860.  call temp:= `createQueue`(v0) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.createQueue:(I)Lio/reactivex/internal/fuseable/SimpleQueue;` @kind static;
  #L487866.  v0:= temp @kind object;
  #L487868.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.d` @type ^`io.reactivex.internal.fuseable.SimpleQueue` := v0 @kind object;
  #L48786c.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.b` @type ^`int`;
  #L487870.  call `request`(v4, v0) @signature `Lio/reactivex/internal/util/QueueDrainHelper;.request:(Lorg/reactivestreams/Subscription;I)V` @kind static;
  #L487876.  return @kind void;
}
procedure `io.reactivex.internal.fuseable.SimpleQueue` `queue`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.queue:()Lio/reactivex/internal/fuseable/SimpleQueue;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48773c.  v0:= v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.d` @type ^`io.reactivex.internal.fuseable.SimpleQueue` @kind object;
  #L487740.  return v0 @kind object;
}
procedure `void` `request`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L487888.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.g` @type ^`int`;
  #L48788c.  v1:= 1I;
  #L48788e.  if v0 == v1 then goto L4878c6;
  #L487892.  v0:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` @kind wide;
  #L487896.  v0:= v0 + v4 @kind long;
  #L487898.  v4:= v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.c` @type ^`int`;
  #L48789c.  v4:= (`long`) v4 @kind i2l;
  #L48789e.  v2:= lcmp(v0, v4);
  #L4878a2.  if v2 < 0 then goto L4878c2;
  #L4878a6.  v4:= 0L;
  #L4878aa.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` := v4 @kind wide;
  #L4878ae.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4878b4.  v4:= temp @kind object;
  #L4878b6.  v4:= (`org.reactivestreams.Subscription`) v4 @kind object;
  #L4878ba.  call `request`(v4, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L4878c0.  goto L4878c6;
  #L4878c2.  v3.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` := v0 @kind wide;
  #L4878c6.  return @kind void;
}
procedure `void` `requestOne`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v5 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.requestOne:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4878d8.  v0:= v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.g` @type ^`int`;
  #L4878dc.  v1:= 1I;
  #L4878de.  if v0 == v1 then goto L48791a;
  #L4878e2.  v0:= v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` @kind wide;
  #L4878e6.  v2:= 1L;
  #L4878ea.  v0:= v0 + v2 @kind long;
  #L4878ec.  v2:= v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.c` @type ^`int`;
  #L4878f0.  v2:= (`long`) v2 @kind i2l;
  #L4878f2.  v4:= lcmp(v0, v2);
  #L4878f6.  if v4 != 0 then goto L487916;
  #L4878fa.  v2:= 0L;
  #L4878fe.  v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` := v2 @kind wide;
  #L487902.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L487908.  v2:= temp @kind object;
  #L48790a.  v2:= (`org.reactivestreams.Subscription`) v2 @kind object;
  #L48790e.  call `request`(v2, v0) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L487914.  goto L48791a;
  #L487916.  v5.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.f` @type ^`long` := v0 @kind wide;
  #L48791a.  return @kind void;
}
procedure `void` `setDone`(`io.reactivex.internal.subscribers.InnerQueuedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/InnerQueuedSubscriber;.setDone:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48792c.  v0:= 1I;
  #L48792e.  v1.`io.reactivex.internal.subscribers.InnerQueuedSubscriber.e` @type ^`boolean` := v0 @kind boolean;
  #L487932.  return @kind void;
}
