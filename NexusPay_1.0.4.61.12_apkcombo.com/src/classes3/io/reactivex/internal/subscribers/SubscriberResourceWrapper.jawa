record `io.reactivex.internal.subscribers.SubscriberResourceWrapper` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.disposables.Disposable` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.internal.subscribers.SubscriberResourceWrapper.a` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.subscribers.SubscriberResourceWrapper.b` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.subscribers.SubscriberResourceWrapper.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L488264.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L48826a.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L48826e.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L488274.  v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L488278.  v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.a` @type ^`org.reactivestreams.Subscriber` := v2 @kind object;
  #L48827c.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v0 @kind this) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L488290.  call `dispose`(v0) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.dispose:()V` @kind virtual;
  #L488296.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4882a8.  v0:= v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4882ac.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4882b2.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4882b8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v2 @kind this) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L488238.  v0:= v2.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L48823c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L488242.  v0:= temp @kind object;
  #L488244.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L488248.  if v0 != v1 then goto L488250;
  #L48824c.  v0:= 1I;
  #L48824e.  goto L488252;
  #L488250.  v0:= 0I;
  #L488252.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4882cc.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4882d2.  v0:= v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4882d6.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L4882dc.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4882f0.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L4882f6.  v0:= v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L4882fa.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L488300.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L488314.  v0:= v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L488318.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L48831e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L488330.  v0:= v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L488334.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L48833a.  v2:= temp;
  #L48833c.  if v2 == 0 then goto L48834a;
  #L488340.  v2:= v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L488344.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L48834a.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48835c.  call temp:= `validate`(v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L488362.  v0:= temp;
  #L488364.  if v0 == 0 then goto L48837e;
  #L488368.  v0:= v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L48836c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L488372.  v0:= temp @kind object;
  #L488374.  v0:= (`org.reactivestreams.Subscription`) v0 @kind object;
  #L488378.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L48837e.  return @kind void;
}
procedure `void` `setResource`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v0 @kind this, `io.reactivex.disposables.Disposable` v1 @kind object) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.setResource:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;

  #L488390.  call temp:= `set`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L488396.  return @kind void;
}
