record `io.reactivex.internal.subscribers.BasicFuseableSubscriber` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.FlowableSubscriber` @kind interface, `io.reactivex.internal.fuseable.QueueSubscription` @kind interface {
  `boolean` `io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @AccessFlag PROTECTED;
  `org.reactivestreams.Subscriber` `io.reactivex.internal.subscribers.BasicFuseableSubscriber.downstream` @AccessFlag PROTECTED_FINAL;
  `io.reactivex.internal.fuseable.QueueSubscription` `io.reactivex.internal.subscribers.BasicFuseableSubscriber.qs` @AccessFlag PROTECTED;
  `int` `io.reactivex.internal.subscribers.BasicFuseableSubscriber.sourceMode` @AccessFlag PROTECTED;
  `org.reactivestreams.Subscription` `io.reactivex.internal.subscribers.BasicFuseableSubscriber.upstream` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L486ac4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L486aca.  v0.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L486ace.  return @kind void;
}
procedure `void` `afterDownstream`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v0 @kind this) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.afterDownstream:()V` @AccessFlag PROTECTED {
    temp;

  #L486ae0.  return @kind void;
}
procedure `boolean` `beforeDownstream`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.beforeDownstream:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L486a18.  v0:= 1I;
  #L486a1a.  return v0;
}
procedure `void` `cancel`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L486af4.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L486af8.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L486afe.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L486b10.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.internal.fuseable.QueueSubscription` @kind object;
  #L486b14.  call `clear`(v0) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.clear:()V` @kind interface;
  #L486b1a.  return @kind void;
}
procedure `void` `fail`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.fail:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L486b2c.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L486b32.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L486b36.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L486b3c.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L486b42.  return @kind void;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L486a2c.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.internal.fuseable.QueueSubscription` @kind object;
  #L486a30.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/internal/fuseable/SimpleQueue;.isEmpty:()Z` @kind interface;
  #L486a36.  v0:= temp;
  #L486a38.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L486a4c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L486a50.  v0:= "Should not be called!" @kind object;
  #L486a54.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L486a5a.  throw v2;
}
procedure `boolean` `offer`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L486a6c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L486a70.  v2:= "Should not be called!" @kind object;
  #L486a74.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L486a7a.  throw v1;
}
procedure `void` `onComplete`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L486b54.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L486b58.  if v0 == 0 then goto L486b5e;
  #L486b5c.  return @kind void;
  #L486b5e.  v0:= 1I;
  #L486b60.  v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L486b64.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L486b68.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L486b6e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L486b80.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` @kind boolean;
  #L486b84.  if v0 == 0 then goto L486b90;
  #L486b88.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L486b8e.  return @kind void;
  #L486b90.  v0:= 1I;
  #L486b92.  v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L486b96.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L486b9a.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L486ba0.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `org.reactivestreams.Subscription` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L486bb4.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L486bb8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L486bbe.  v0:= temp;
  #L486bc0.  if v0 == 0 then goto L486bf4;
  #L486bc4.  v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` := v2 @kind object;
  #L486bc8.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.QueueSubscription` @kind boolean;
  #L486bcc.  if v0 == 0 then goto L486bd8;
  #L486bd0.  v2:= (`io.reactivex.internal.fuseable.QueueSubscription`) v2 @kind object;
  #L486bd4.  v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.internal.fuseable.QueueSubscription` := v2 @kind object;
  #L486bd8.  call temp:= `beforeDownstream`(v1) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.beforeDownstream:()Z` @kind virtual;
  #L486bde.  v2:= temp;
  #L486be0.  if v2 == 0 then goto L486bf4;
  #L486be4.  v2:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.downstream` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L486be8.  call `onSubscribe`(v2, v1) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L486bee.  call `afterDownstream`(v1) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.afterDownstream:()V` @kind virtual;
  #L486bf4.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L486c08.  v0:= v1.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.upstream` @type ^`org.reactivestreams.Subscription` @kind object;
  #L486c0c.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L486c12.  return @kind void;
}
procedure `int` `transitiveBoundaryFusion`(`io.reactivex.internal.subscribers.BasicFuseableSubscriber` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/internal/subscribers/BasicFuseableSubscriber;.transitiveBoundaryFusion:(I)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L486a8c.  v0:= v2.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.qs` @type ^`io.reactivex.internal.fuseable.QueueSubscription` @kind object;
  #L486a90.  if v0 == 0 then goto L486aae;
  #L486a94.  v1:= v3 ^& 4;
  #L486a98.  if v1 != 0 then goto L486aae;
  #L486a9c.  call temp:= `requestFusion`(v0, v3) @signature `Lio/reactivex/internal/fuseable/QueueFuseable;.requestFusion:(I)I` @kind interface;
  #L486aa2.  v3:= temp;
  #L486aa4.  if v3 == 0 then goto L486aac;
  #L486aa8.  v2.`io.reactivex.internal.subscribers.BasicFuseableSubscriber.sourceMode` @type ^`int` := v3;
  #L486aac.  return v3;
  #L486aae.  v3:= 0I;
  #L486ab0.  return v3;
}
