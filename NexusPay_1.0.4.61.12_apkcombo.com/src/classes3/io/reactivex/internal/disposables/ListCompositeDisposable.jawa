record `io.reactivex.internal.disposables.ListCompositeDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.disposables.Disposable` @kind interface, `io.reactivex.internal.disposables.DisposableContainer` @kind interface {
  `java.util.List` `io.reactivex.internal.disposables.ListCompositeDisposable.a` @AccessFlag ;
  `boolean` `io.reactivex.internal.disposables.ListCompositeDisposable.b` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.internal.disposables.ListCompositeDisposable` v0 @kind this) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42894c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L428952.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.disposables.ListCompositeDisposable` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.<init>:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4289bc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4289c2.  v0:= "resources is null" @kind object;
  #L4289c6.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4289cc.  v0:= new `java.util.LinkedList`;
  #L4289d0.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L4289d6.  v2.`io.reactivex.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` := v0 @kind object;
  #L4289da.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4289e0.  v3:= temp @kind object;
  #L4289e2.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4289e8.  v0:= temp;
  #L4289ea.  if v0 == 0 then goto L428a10;
  #L4289ee.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4289f4.  v0:= temp @kind object;
  #L4289f6.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4289fa.  v1:= "Disposable item is null" @kind object;
  #L4289fe.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L428a04.  v1:= v2.`io.reactivex.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` @kind object;
  #L428a08.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L428a0e.  goto L4289e2;
  #L428a10.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.disposables.ListCompositeDisposable` v4 @kind this, `io.reactivex.disposables.Disposable`[] v5 @kind object) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.<init>:([Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L428964.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42896a.  v0:= "resources is null" @kind object;
  #L42896e.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L428974.  v0:= new `java.util.LinkedList`;
  #L428978.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L42897e.  v4.`io.reactivex.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` := v0 @kind object;
  #L428982.  v0:= length @variable v5;
  #L428984.  v1:= 0I;
  #L428986.  if v1 >= v0 then goto L4289a8;
  #L42898a.  v2:= v5[v1] @kind object;
  #L42898e.  v3:= "Disposable item is null" @kind object;
  #L428992.  call temp:= `requireNonNull`(v2, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L428998.  v3:= v4.`io.reactivex.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` @kind object;
  #L42899c.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4289a2.  v1:= v1 + 1;
  #L4289a6.  goto L428986;
  #L4289a8.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.disposables.ListCompositeDisposable` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.a:(Ljava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L428ad8.  if v3 != 0 then goto L428ade;
  #L428adc.  return @kind void;
  #L428ade.  v0:= 0I;
  #L428ae0.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L428ae6.  v3:= temp @kind object;
  #L428ae8.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L428aee.  v1:= temp;
  #L428af0.  if v1 == 0 then goto L428b26;
  #L428af4.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L428afa.  v1:= temp @kind object;
  #L428afc.  v1:= (`io.reactivex.disposables.Disposable`) v1 @kind object;
  #L428b00.  call `dispose`(v1) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L428b06.  goto L428ae8;
  #L428b08.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L428b0a.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L428b10.  if v0 != 0 then goto L428b1e;
  #L428b14.  v0:= new `java.util.ArrayList`;
  #L428b18.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L428b1e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L428b24.  goto L428ae8;
  #L428b26.  if v0 == 0 then goto L428b5c;
  #L428b2a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L428b30.  v3:= temp;
  #L428b32.  v1:= 1I;
  #L428b34.  if v3 != v1 then goto L428b50;
  #L428b38.  v3:= 0I;
  #L428b3a.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L428b40.  v3:= temp @kind object;
  #L428b42.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L428b46.  call temp:= `wrapOrThrow`(v3) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L428b4c.  v3:= temp @kind object;
  #L428b4e.  throw v3;
  #L428b50.  v3:= new `io.reactivex.exceptions.CompositeException`;
  #L428b54.  call `<init>`(v3, v0) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L428b5a.  throw v3;
  #L428b5c.  return @kind void;
  catch `java.lang.Throwable` @[L428b00..L428b06] goto L428b08;
}
procedure `boolean` `add`(`io.reactivex.internal.disposables.ListCompositeDisposable` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428794.  v0:= "d is null" @kind object;
  #L428798.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42879e.  v0:= v1.`io.reactivex.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4287a2.  if v0 != 0 then goto L4287dc;
  #L4287a6.  @monitorenter v1
  #L4287a8.  v0:= v1.`io.reactivex.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4287ac.  if v0 != 0 then goto L4287d2;
  #L4287b0.  v0:= v1.`io.reactivex.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` @kind object;
  #L4287b4.  if v0 != 0 then goto L4287c6;
  #L4287b8.  v0:= new `java.util.LinkedList`;
  #L4287bc.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L4287c2.  v1.`io.reactivex.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` := v0 @kind object;
  #L4287c6.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4287cc.  v2:= 1I;
  #L4287ce.  @monitorexit v1
  #L4287d0.  return v2;
  #L4287d2.  @monitorexit v1
  #L4287d4.  goto L4287dc;
  #L4287d6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4287d8.  @monitorexit v1
  #L4287da.  throw v2;
  #L4287dc.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4287e2.  v2:= 0I;
  #L4287e4.  return v2;
  catch `java.lang.Throwable` @[L4287a8..L4287da] goto L4287d6;
}
procedure `boolean` `addAll`(`io.reactivex.internal.disposables.ListCompositeDisposable` v5 @kind this, `io.reactivex.disposables.Disposable`[] v6 @kind object) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.addAll:([Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L428804.  v0:= "ds is null" @kind object;
  #L428808.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42880e.  v0:= v5.`io.reactivex.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L428812.  v1:= 0I;
  #L428814.  if v0 != 0 then goto L428868;
  #L428818.  @monitorenter v5
  #L42881a.  v0:= v5.`io.reactivex.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L42881e.  if v0 != 0 then goto L42885e;
  #L428822.  v0:= v5.`io.reactivex.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` @kind object;
  #L428826.  if v0 != 0 then goto L428838;
  #L42882a.  v0:= new `java.util.LinkedList`;
  #L42882e.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L428834.  v5.`io.reactivex.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` := v0 @kind object;
  #L428838.  v2:= length @variable v6;
  #L42883a.  if v1 >= v2 then goto L428858;
  #L42883e.  v3:= v6[v1] @kind object;
  #L428842.  v4:= "d is null" @kind object;
  #L428846.  call temp:= `requireNonNull`(v3, v4) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42884c.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L428852.  v1:= v1 + 1;
  #L428856.  goto L42883a;
  #L428858.  @monitorexit v5
  #L42885a.  v6:= 1I;
  #L42885c.  return v6;
  #L42885e.  @monitorexit v5
  #L428860.  goto L428868;
  #L428862.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L428864.  @monitorexit v5
  #L428866.  throw v6;
  #L428868.  v0:= length @variable v6;
  #L42886a.  v2:= 0I;
  #L42886c.  if v2 >= v0 then goto L428880;
  #L428870.  v3:= v6[v2] @kind object;
  #L428874.  call `dispose`(v3) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L42887a.  v2:= v2 + 1;
  #L42887e.  goto L42886c;
  #L428880.  return v1;
  catch `java.lang.Throwable` @[L42881a..L428866] goto L428862;
}
procedure `void` `clear`(`io.reactivex.internal.disposables.ListCompositeDisposable` v2 @kind this) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L428a24.  v0:= v2.`io.reactivex.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L428a28.  if v0 == 0 then goto L428a2e;
  #L428a2c.  return @kind void;
  #L428a2e.  @monitorenter v2
  #L428a30.  v0:= v2.`io.reactivex.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L428a34.  if v0 == 0 then goto L428a3c;
  #L428a38.  @monitorexit v2
  #L428a3a.  return @kind void;
  #L428a3c.  v0:= v2.`io.reactivex.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` @kind object;
  #L428a40.  v1:= 0I;
  #L428a42.  v2.`io.reactivex.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` := v1 @kind object;
  #L428a46.  @monitorexit v2
  #L428a48.  call `a`(v2, v0) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.a:(Ljava/util/List;)V` @kind virtual;
  #L428a4e.  return @kind void;
  #L428a50.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L428a52.  @monitorexit v2
  #L428a54.  throw v0;
  catch `java.lang.Throwable` @[L428a30..L428a48] goto L428a50;
  catch `java.lang.Throwable` @[L428a52..L428a54] goto L428a50;
}
procedure `boolean` `delete`(`io.reactivex.internal.disposables.ListCompositeDisposable` v2 @kind this, `io.reactivex.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.delete:(Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4288a0.  v0:= "Disposable item is null" @kind object;
  #L4288a4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4288aa.  v0:= v2.`io.reactivex.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4288ae.  v1:= 0I;
  #L4288b0.  if v0 == 0 then goto L4288b6;
  #L4288b4.  return v1;
  #L4288b6.  @monitorenter v2
  #L4288b8.  v0:= v2.`io.reactivex.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4288bc.  if v0 == 0 then goto L4288c4;
  #L4288c0.  @monitorexit v2
  #L4288c2.  return v1;
  #L4288c4.  v0:= v2.`io.reactivex.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` @kind object;
  #L4288c8.  if v0 == 0 then goto L4288e0;
  #L4288cc.  call temp:= `remove`(v0, v3) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L4288d2.  v3:= temp;
  #L4288d4.  if v3 != 0 then goto L4288da;
  #L4288d8.  goto L4288e0;
  #L4288da.  @monitorexit v2
  #L4288dc.  v3:= 1I;
  #L4288de.  return v3;
  #L4288e0.  @monitorexit v2
  #L4288e2.  return v1;
  #L4288e4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4288e6.  @monitorexit v2
  #L4288e8.  throw v3;
  catch `java.lang.Throwable` @[L4288b8..L4288e8] goto L4288e4;
}
procedure `void` `dispose`(`io.reactivex.internal.disposables.ListCompositeDisposable` v2 @kind this) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L428a7c.  v0:= v2.`io.reactivex.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L428a80.  if v0 == 0 then goto L428a86;
  #L428a84.  return @kind void;
  #L428a86.  @monitorenter v2
  #L428a88.  v0:= v2.`io.reactivex.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L428a8c.  if v0 == 0 then goto L428a94;
  #L428a90.  @monitorexit v2
  #L428a92.  return @kind void;
  #L428a94.  v0:= 1I;
  #L428a96.  v2.`io.reactivex.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` := v0 @kind boolean;
  #L428a9a.  v0:= v2.`io.reactivex.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` @kind object;
  #L428a9e.  v1:= 0I;
  #L428aa0.  v2.`io.reactivex.internal.disposables.ListCompositeDisposable.a` @type ^`java.util.List` := v1 @kind object;
  #L428aa4.  @monitorexit v2
  #L428aa6.  call `a`(v2, v0) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.a:(Ljava/util/List;)V` @kind virtual;
  #L428aac.  return @kind void;
  #L428aae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L428ab0.  @monitorexit v2
  #L428ab2.  throw v0;
  catch `java.lang.Throwable` @[L428a88..L428aa6] goto L428aae;
  catch `java.lang.Throwable` @[L428ab0..L428ab2] goto L428aae;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.disposables.ListCompositeDisposable` v1 @kind this) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428908.  v0:= v1.`io.reactivex.internal.disposables.ListCompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L42890c.  return v0;
}
procedure `boolean` `remove`(`io.reactivex.internal.disposables.ListCompositeDisposable` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.remove:(Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428920.  call temp:= `delete`(v1, v2) @signature `Lio/reactivex/internal/disposables/ListCompositeDisposable;.delete:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L428926.  v0:= temp;
  #L428928.  if v0 == 0 then goto L428936;
  #L42892c.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L428932.  v2:= 1I;
  #L428934.  return v2;
  #L428936.  v2:= 0I;
  #L428938.  return v2;
}
