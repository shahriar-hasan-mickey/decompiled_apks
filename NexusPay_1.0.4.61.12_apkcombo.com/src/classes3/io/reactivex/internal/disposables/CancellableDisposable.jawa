record `io.reactivex.internal.disposables.CancellableDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.disposables.Disposable` @kind interface {
}
global `long` `@@io.reactivex.internal.disposables.CancellableDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.disposables.CancellableDisposable` v0 @kind this, `io.reactivex.functions.Cancellable` v1 @kind object) @signature `Lio/reactivex/internal/disposables/CancellableDisposable;.<init>:(Lio/reactivex/functions/Cancellable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L428208.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L42820e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.disposables.CancellableDisposable` v1 @kind this) @signature `Lio/reactivex/internal/disposables/CancellableDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428220.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L428226.  v0:= temp @kind object;
  #L428228.  if v0 == 0 then goto L428254;
  #L42822c.  v0:= 0I;
  #L42822e.  call temp:= `getAndSet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L428234.  v0:= temp @kind object;
  #L428236.  v0:= (`io.reactivex.functions.Cancellable`) v0 @kind object;
  #L42823a.  if v0 == 0 then goto L428254;
  #L42823e.  call `cancel`(v0) @signature `Lio/reactivex/functions/Cancellable;.cancel:()V` @kind interface;
  #L428244.  goto L428254;
  #L428246.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L428248.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42824e.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L428254.  return @kind void;
  catch `java.lang.Exception` @[L42823e..L428244] goto L428246;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.disposables.CancellableDisposable` v1 @kind this) @signature `Lio/reactivex/internal/disposables/CancellableDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4281e4.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4281ea.  v0:= temp @kind object;
  #L4281ec.  if v0 != 0 then goto L4281f4;
  #L4281f0.  v0:= 1I;
  #L4281f2.  goto L4281f6;
  #L4281f4.  v0:= 0I;
  #L4281f6.  return v0;
}
