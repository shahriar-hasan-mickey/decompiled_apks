record `io.reactivex.internal.disposables.ArrayCompositeDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReferenceArray` @kind class, `io.reactivex.disposables.Disposable` @kind interface {
}
global `long` `@@io.reactivex.internal.disposables.ArrayCompositeDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L428164.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L42816a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v4 @kind this) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42817c.  v0:= 0I;
  #L42817e.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L428184.  v1:= temp @kind object;
  #L428186.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L42818a.  if v1 == v2 then goto L4281d2;
  #L42818e.  call temp:= `length`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L428194.  v1:= temp;
  #L428196.  if v0 >= v1 then goto L4281d2;
  #L42819a.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4281a0.  v2:= temp @kind object;
  #L4281a2.  v2:= (`io.reactivex.disposables.Disposable`) v2 @kind object;
  #L4281a6.  v3:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4281aa.  if v2 == v3 then goto L4281cc;
  #L4281ae.  call temp:= `getAndSet`(v4, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.getAndSet:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4281b4.  v2:= temp @kind object;
  #L4281b6.  v2:= (`io.reactivex.disposables.Disposable`) v2 @kind object;
  #L4281ba.  v3:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4281be.  if v2 == v3 then goto L4281cc;
  #L4281c2.  if v2 == 0 then goto L4281cc;
  #L4281c6.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4281cc.  v0:= v0 + 1;
  #L4281d0.  goto L428196;
  #L4281d2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v3 @kind this) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4280b8.  v0:= 0I;
  #L4280ba.  call temp:= `get`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4280c0.  v1:= temp @kind object;
  #L4280c2.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4280c6.  if v1 != v2 then goto L4280cc;
  #L4280ca.  v0:= 1I;
  #L4280cc.  return v0;
}
procedure `io.reactivex.disposables.Disposable` `replaceResource`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v2 @kind this, `int` v3 , `io.reactivex.disposables.Disposable` v4 @kind object) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.replaceResource:(ILio/reactivex/disposables/Disposable;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L428128.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L42812e.  v0:= temp @kind object;
  #L428130.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L428134.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L428138.  if v0 != v1 then goto L428146;
  #L42813c.  call `dispose`(v4) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L428142.  v3:= 0I;
  #L428144.  return v3 @kind object;
  #L428146.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L42814c.  v1:= temp;
  #L42814e.  if v1 == 0 then goto L428128;
  #L428152.  return v0 @kind object;
}
procedure `boolean` `setResource`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v2 @kind this, `int` v3 , `io.reactivex.disposables.Disposable` v4 @kind object) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.setResource:(ILio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4280e0.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4280e6.  v0:= temp @kind object;
  #L4280e8.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4280ec.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4280f0.  if v0 != v1 then goto L4280fe;
  #L4280f4.  call `dispose`(v4) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4280fa.  v3:= 0I;
  #L4280fc.  return v3;
  #L4280fe.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L428104.  v1:= temp;
  #L428106.  if v1 == 0 then goto L4280e0;
  #L42810a.  if v0 == 0 then goto L428114;
  #L42810e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L428114.  v3:= 1I;
  #L428116.  return v3;
}
