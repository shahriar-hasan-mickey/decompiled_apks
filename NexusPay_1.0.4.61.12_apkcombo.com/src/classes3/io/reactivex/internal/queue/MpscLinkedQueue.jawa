record `io.reactivex.internal.queue.MpscLinkedQueue` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.fuseable.SimplePlainQueue` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.queue.MpscLinkedQueue.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.queue.MpscLinkedQueue.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L482e18.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L482e1e.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L482e22.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L482e28.  v1.`io.reactivex.internal.queue.MpscLinkedQueue.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L482e2c.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L482e30.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L482e36.  v1.`io.reactivex.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L482e3a.  v0:= new `io.reactivex.internal.queue.MpscLinkedQueue$a`;
  #L482e3e.  call `<init>`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$a;.<init>:()V` @kind direct;
  #L482e44.  call `g`(v1, v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L482e4a.  call temp:= `h`(v1, v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.h:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L482e50.  return @kind void;
}
procedure `io.reactivex.internal.queue.MpscLinkedQueue$a` `a`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.a:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L482d24.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L482d28.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L482d2e.  v0:= temp @kind object;
  #L482d30.  v0:= (`io.reactivex.internal.queue.MpscLinkedQueue$a`) v0 @kind object;
  #L482d34.  return v0 @kind object;
}
procedure `void` `clear`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L482e64.  call temp:= `poll`(v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L482e6a.  v0:= temp @kind object;
  #L482e6c.  if v0 == 0 then goto L482e7e;
  #L482e70.  call temp:= `isEmpty`(v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L482e76.  v0:= temp;
  #L482e78.  if v0 != 0 then goto L482e7e;
  #L482e7c.  goto L482e64;
  #L482e7e.  return @kind void;
}
procedure `io.reactivex.internal.queue.MpscLinkedQueue$a` `e`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.e:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L482d48.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L482d4c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L482d52.  v0:= temp @kind object;
  #L482d54.  v0:= (`io.reactivex.internal.queue.MpscLinkedQueue$a`) v0 @kind object;
  #L482d58.  return v0 @kind object;
}
procedure `io.reactivex.internal.queue.MpscLinkedQueue$a` `f`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.f:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L482d6c.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L482d70.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L482d76.  v0:= temp @kind object;
  #L482d78.  v0:= (`io.reactivex.internal.queue.MpscLinkedQueue$a`) v0 @kind object;
  #L482d7c.  return v0 @kind object;
}
procedure `void` `g`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this, `io.reactivex.internal.queue.MpscLinkedQueue$a` v2 @kind object) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)V` @AccessFlag  {
    temp;
    v0;

  #L482e90.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L482e94.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L482e9a.  return @kind void;
}
procedure `io.reactivex.internal.queue.MpscLinkedQueue$a` `h`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this, `io.reactivex.internal.queue.MpscLinkedQueue$a` v2 @kind object) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.h:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @AccessFlag  {
    temp;
    v0;

  #L482d90.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L482d94.  call temp:= `getAndSet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L482d9a.  v2:= temp @kind object;
  #L482d9c.  v2:= (`io.reactivex.internal.queue.MpscLinkedQueue$a`) v2 @kind object;
  #L482da0.  return v2 @kind object;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.queue.MpscLinkedQueue` v2 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L482c98.  call temp:= `e`(v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.e:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L482c9e.  v0:= temp @kind object;
  #L482ca0.  call temp:= `f`(v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.f:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L482ca6.  v1:= temp @kind object;
  #L482ca8.  if v0 != v1 then goto L482cb0;
  #L482cac.  v0:= 1I;
  #L482cae.  goto L482cb2;
  #L482cb0.  v0:= 0I;
  #L482cb2.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L482cc4.  if v2 == 0 then goto L482ce4;
  #L482cc8.  v0:= new `io.reactivex.internal.queue.MpscLinkedQueue$a`;
  #L482ccc.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L482cd2.  call temp:= `h`(v1, v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.h:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L482cd8.  v2:= temp @kind object;
  #L482cda.  call `d`(v2, v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$a;.d:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L482ce0.  v2:= 1I;
  #L482ce2.  return v2;
  #L482ce4.  v2:= new `java.lang.NullPointerException`;
  #L482ce8.  v0:= "Null is not a valid element" @kind object;
  #L482cec.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L482cf2.  throw v2;
}
procedure `boolean` `offer`(`io.reactivex.internal.queue.MpscLinkedQueue` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L482d04.  call temp:= `offer`(v0, v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L482d0a.  call temp:= `offer`(v0, v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L482d10.  v1:= 1I;
  #L482d12.  return v1;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.queue.MpscLinkedQueue` v2 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L482db4.  call temp:= `a`(v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.a:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L482dba.  v0:= temp @kind object;
  #L482dbc.  call temp:= `c`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$a;.c:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L482dc2.  v1:= temp @kind object;
  #L482dc4.  if v1 == 0 then goto L482dd8;
  #L482dc8.  call temp:= `a`(v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$a;.a:()Ljava/lang/Object;` @kind virtual;
  #L482dce.  v0:= temp @kind object;
  #L482dd0.  call `g`(v2, v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L482dd6.  return v0 @kind object;
  #L482dd8.  call temp:= `f`(v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.f:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L482dde.  v1:= temp @kind object;
  #L482de0.  if v0 == v1 then goto L482e02;
  #L482de4.  call temp:= `c`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$a;.c:()Lio/reactivex/internal/queue/MpscLinkedQueue$a;` @kind virtual;
  #L482dea.  v1:= temp @kind object;
  #L482dec.  if v1 != 0 then goto L482df2;
  #L482df0.  goto L482de4;
  #L482df2.  call temp:= `a`(v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$a;.a:()Ljava/lang/Object;` @kind virtual;
  #L482df8.  v0:= temp @kind object;
  #L482dfa.  call `g`(v2, v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.g:(Lio/reactivex/internal/queue/MpscLinkedQueue$a;)V` @kind virtual;
  #L482e00.  return v0 @kind object;
  #L482e02.  v0:= 0I;
  #L482e04.  return v0 @kind object;
}
