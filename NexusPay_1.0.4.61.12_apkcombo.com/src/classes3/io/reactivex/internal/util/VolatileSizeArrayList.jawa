record `io.reactivex.internal.util.VolatileSizeArrayList` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface {
  `java.util.ArrayList` `io.reactivex.internal.util.VolatileSizeArrayList.a` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.util.VolatileSizeArrayList.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L48b984.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L48b98a.  v0:= new `java.util.ArrayList`;
  #L48b98e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L48b994.  v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` := v0 @kind object;
  #L48b998.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L48b9ac.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L48b9b2.  v0:= new `java.util.ArrayList`;
  #L48b9b6.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L48b9bc.  v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` := v0 @kind object;
  #L48b9c0.  return @kind void;
}
procedure `void` `add`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b9d4.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b9d8.  call `add`(v0, v2, v3) @signature `Ljava/util/ArrayList;.add:(ILjava/lang/Object;)V` @kind virtual;
  #L48b9de.  v2:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b9e2.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L48b9e8.  v2:= temp;
  #L48b9ea.  call `lazySet`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L48b9f0.  return @kind void;
}
procedure `boolean` `add`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b5f8.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b5fc.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L48b602.  v2:= temp;
  #L48b604.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b608.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L48b60e.  v0:= temp;
  #L48b610.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L48b616.  return v2;
}
procedure `boolean` `addAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.util.Collection` v3 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b628.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b62c.  call temp:= `addAll`(v0, v2, v3) @signature `Ljava/util/ArrayList;.addAll:(ILjava/util/Collection;)Z` @kind virtual;
  #L48b632.  v2:= temp;
  #L48b634.  v3:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b638.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L48b63e.  v3:= temp;
  #L48b640.  call `lazySet`(v1, v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L48b646.  return v2;
}
procedure `boolean` `addAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b658.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b65c.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L48b662.  v2:= temp;
  #L48b664.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b668.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L48b66e.  v0:= temp;
  #L48b670.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L48b676.  return v2;
}
procedure `void` `clear`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48ba04.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48ba08.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L48ba0e.  v0:= 0I;
  #L48ba10.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L48ba16.  return @kind void;
}
procedure `boolean` `contains`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b688.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b68c.  call temp:= `contains`(v0, v2) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L48b692.  v2:= temp;
  #L48b694.  return v2;
}
procedure `boolean` `containsAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b6a8.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b6ac.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/ArrayList;.containsAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L48b6b2.  v2:= temp;
  #L48b6b4.  return v2;
}
procedure `boolean` `equals`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b6c8.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.util.VolatileSizeArrayList` @kind boolean;
  #L48b6cc.  if v0 == 0 then goto L48b6e6;
  #L48b6d0.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b6d4.  v2:= (`io.reactivex.internal.util.VolatileSizeArrayList`) v2 @kind object;
  #L48b6d8.  v2:= v2.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b6dc.  call temp:= `equals`(v0, v2) @signature `Ljava/util/ArrayList;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48b6e2.  v2:= temp;
  #L48b6e4.  return v2;
  #L48b6e6.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b6ea.  call temp:= `equals`(v0, v2) @signature `Ljava/util/ArrayList;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48b6f0.  v2:= temp;
  #L48b6f2.  return v2;
}
procedure `java.lang.Object` `get`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b834.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b838.  call temp:= `get`(v0, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L48b83e.  v2:= temp @kind object;
  #L48b840.  return v2 @kind object;
}
procedure `int` `hashCode`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b7b8.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b7bc.  call temp:= `hashCode`(v0) @signature `Ljava/util/ArrayList;.hashCode:()I` @kind virtual;
  #L48b7c2.  v0:= temp;
  #L48b7c4.  return v0;
}
procedure `int` `indexOf`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b7d8.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b7dc.  call temp:= `indexOf`(v0, v2) @signature `Ljava/util/ArrayList;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L48b7e2.  v2:= temp;
  #L48b7e4.  return v2;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b704.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L48b70a.  v0:= temp;
  #L48b70c.  if v0 != 0 then goto L48b714;
  #L48b710.  v0:= 1I;
  #L48b712.  goto L48b716;
  #L48b714.  v0:= 0I;
  #L48b716.  return v0;
}
procedure `java.util.Iterator` `iterator`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b904.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b908.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L48b90e.  v0:= temp @kind object;
  #L48b910.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b7f8.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b7fc.  call temp:= `lastIndexOf`(v0, v2) @signature `Ljava/util/ArrayList;.lastIndexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L48b802.  v2:= temp;
  #L48b804.  return v2;
}
procedure `java.util.ListIterator` `listIterator`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b944.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b948.  call temp:= `listIterator`(v0) @signature `Ljava/util/ArrayList;.listIterator:()Ljava/util/ListIterator;` @kind virtual;
  #L48b94e.  v0:= temp @kind object;
  #L48b950.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b964.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b968.  call temp:= `listIterator`(v0, v2) @signature `Ljava/util/ArrayList;.listIterator:(I)Ljava/util/ListIterator;` @kind virtual;
  #L48b96e.  v2:= temp @kind object;
  #L48b970.  return v2 @kind object;
}
procedure `java.lang.Object` `remove`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b854.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b858.  call temp:= `remove`(v0, v2) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L48b85e.  v2:= temp @kind object;
  #L48b860.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b864.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L48b86a.  v0:= temp;
  #L48b86c.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L48b872.  return v2 @kind object;
}
procedure `boolean` `remove`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b728.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b72c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/ArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L48b732.  v2:= temp;
  #L48b734.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b738.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L48b73e.  v0:= temp;
  #L48b740.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L48b746.  return v2;
}
procedure `boolean` `removeAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b758.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b75c.  call temp:= `removeAll`(v0, v2) @signature `Ljava/util/ArrayList;.removeAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L48b762.  v2:= temp;
  #L48b764.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b768.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L48b76e.  v0:= temp;
  #L48b770.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L48b776.  return v2;
}
procedure `boolean` `retainAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b788.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b78c.  call temp:= `retainAll`(v0, v2) @signature `Ljava/util/ArrayList;.retainAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L48b792.  v2:= temp;
  #L48b794.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b798.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L48b79e.  v0:= temp;
  #L48b7a0.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L48b7a6.  return v2;
}
procedure `java.lang.Object` `set`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b884.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b888.  call temp:= `set`(v0, v2, v3) @signature `Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L48b88e.  v2:= temp @kind object;
  #L48b890.  return v2 @kind object;
}
procedure `int` `size`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b818.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L48b81e.  v0:= temp;
  #L48b820.  return v0;
}
procedure `java.util.List` `subList`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b924.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b928.  call temp:= `subList`(v0, v2, v3) @signature `Ljava/util/ArrayList;.subList:(II)Ljava/util/List;` @kind virtual;
  #L48b92e.  v2:= temp @kind object;
  #L48b930.  return v2 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b8a4.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b8a8.  call temp:= `toArray`(v0) @signature `Ljava/util/ArrayList;.toArray:()[Ljava/lang/Object;` @kind virtual;
  #L48b8ae.  v0:= temp @kind object;
  #L48b8b0.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b8c4.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b8c8.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L48b8ce.  v2:= temp @kind object;
  #L48b8d0.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b8e4.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.a` @type ^`java.util.ArrayList` @kind object;
  #L48b8e8.  call temp:= `toString`(v0) @signature `Ljava/util/ArrayList;.toString:()Ljava/lang/String;` @kind virtual;
  #L48b8ee.  v0:= temp @kind object;
  #L48b8f0.  return v0 @kind object;
}
