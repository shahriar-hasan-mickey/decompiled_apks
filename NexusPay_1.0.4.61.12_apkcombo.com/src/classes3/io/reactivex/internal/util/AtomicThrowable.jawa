record `io.reactivex.internal.util.AtomicThrowable` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class {
}
global `long` `@@io.reactivex.internal.util.AtomicThrowable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.util.AtomicThrowable` v0 @kind this) @signature `Lio/reactivex/internal/util/AtomicThrowable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L489824.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L48982a.  return @kind void;
}
procedure `boolean` `addThrowable`(`io.reactivex.internal.util.AtomicThrowable` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/internal/util/AtomicThrowable;.addThrowable:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;

  #L4897c4.  call temp:= `addThrowable`(v0, v1) @signature `Lio/reactivex/internal/util/ExceptionHelper;.addThrowable:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Throwable;)Z` @kind static;
  #L4897ca.  v1:= temp;
  #L4897cc.  return v1;
}
procedure `boolean` `isTerminated`(`io.reactivex.internal.util.AtomicThrowable` v2 @kind this) @signature `Lio/reactivex/internal/util/AtomicThrowable;.isTerminated:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4897e0.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4897e6.  v0:= temp @kind object;
  #L4897e8.  v1:= `@@io.reactivex.internal.util.ExceptionHelper.TERMINATED` @type ^`java.lang.Throwable` @kind object;
  #L4897ec.  if v0 != v1 then goto L4897f4;
  #L4897f0.  v0:= 1I;
  #L4897f2.  goto L4897f6;
  #L4897f4.  v0:= 0I;
  #L4897f6.  return v0;
}
procedure `java.lang.Throwable` `terminate`(`io.reactivex.internal.util.AtomicThrowable` v1 @kind this) @signature `Lio/reactivex/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L489808.  call temp:= `terminate`(v1) @signature `Lio/reactivex/internal/util/ExceptionHelper;.terminate:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Throwable;` @kind static;
  #L48980e.  v0:= temp @kind object;
  #L489810.  return v0 @kind object;
}
