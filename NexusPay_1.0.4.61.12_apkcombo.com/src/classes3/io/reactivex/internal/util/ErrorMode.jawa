record `io.reactivex.internal.util.ErrorMode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.reactivex.internal.util.ErrorMode`[] `@@io.reactivex.internal.util.ErrorMode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.internal.util.ErrorMode` `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.internal.util.ErrorMode` `@@io.reactivex.internal.util.ErrorMode.END` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.internal.util.ErrorMode` `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/util/ErrorMode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L489fe0.  v0:= new `io.reactivex.internal.util.ErrorMode`;
  #L489fe4.  v1:= "IMMEDIATE" @kind object;
  #L489fe8.  v2:= 0I;
  #L489fea.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/util/ErrorMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L489ff0.  `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` := v0 @kind object;
  #L489ff4.  v0:= new `io.reactivex.internal.util.ErrorMode`;
  #L489ff8.  v1:= "BOUNDARY" @kind object;
  #L489ffc.  v3:= 1I;
  #L489ffe.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/internal/util/ErrorMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L48a004.  `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` := v0 @kind object;
  #L48a008.  v0:= new `io.reactivex.internal.util.ErrorMode`;
  #L48a00c.  v1:= "END" @kind object;
  #L48a010.  v4:= 2I;
  #L48a012.  call `<init>`(v0, v1, v4) @signature `Lio/reactivex/internal/util/ErrorMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L48a018.  `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` := v0 @kind object;
  #L48a01c.  v1:= 3I;
  #L48a01e.  v1:= new `io.reactivex.internal.util.ErrorMode`[v1];
  #L48a022.  v5:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L48a026.  v1[v2]:= v5 @kind object;
  #L48a02a.  v2:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L48a02e.  v1[v3]:= v2 @kind object;
  #L48a032.  v1[v4]:= v0 @kind object;
  #L48a036.  `@@io.reactivex.internal.util.ErrorMode.$VALUES` @type ^`io.reactivex.internal.util.ErrorMode`[] := v1 @kind object;
  #L48a03a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.util.ErrorMode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/util/ErrorMode;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L48a04c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L48a052.  return @kind void;
}
procedure `io.reactivex.internal.util.ErrorMode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/util/ErrorMode;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/util/ErrorMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L489f98.  v0:= constclass @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L489f9c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L489fa2.  v1:= temp @kind object;
  #L489fa4.  v1:= (`io.reactivex.internal.util.ErrorMode`) v1 @kind object;
  #L489fa8.  return v1 @kind object;
}
procedure `io.reactivex.internal.util.ErrorMode`[] `values`() @signature `Lio/reactivex/internal/util/ErrorMode;.values:()[Lio/reactivex/internal/util/ErrorMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L489fbc.  v0:= `@@io.reactivex.internal.util.ErrorMode.$VALUES` @type ^`io.reactivex.internal.util.ErrorMode`[] @kind object;
  #L489fc0.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/util/ErrorMode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L489fc6.  v0:= temp @kind object;
  #L489fc8.  v0:= (`io.reactivex.internal.util.ErrorMode`[]) v0 @kind object;
  #L489fcc.  return v0 @kind object;
}
