record `io.reactivex.internal.util.SorterFunction` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.functions.Function` @kind interface {
  `java.util.Comparator` `io.reactivex.internal.util.SorterFunction.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.util.SorterFunction` v0 @kind this, `java.util.Comparator` v1 @kind object) @signature `Lio/reactivex/internal/util/SorterFunction;.<init>:(Ljava/util/Comparator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48b5dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48b5e2.  v0.`io.reactivex.internal.util.SorterFunction.a` @type ^`java.util.Comparator` := v1 @kind object;
  #L48b5e6.  return @kind void;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.util.SorterFunction` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/util/SorterFunction;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48b5a0.  v1:= (`java.util.List`) v1 @kind object;
  #L48b5a4.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/internal/util/SorterFunction;.apply:(Ljava/util/List;)Ljava/util/List;` @kind virtual;
  #L48b5aa.  v1:= temp @kind object;
  #L48b5ac.  return v1 @kind object;
}
procedure `java.util.List` `apply`(`io.reactivex.internal.util.SorterFunction` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lio/reactivex/internal/util/SorterFunction;.apply:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b5c0.  v0:= v1.`io.reactivex.internal.util.SorterFunction.a` @type ^`java.util.Comparator` @kind object;
  #L48b5c4.  call `sort`(v2, v0) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L48b5ca.  return v2 @kind object;
}
