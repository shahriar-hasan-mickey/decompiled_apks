record `io.reactivex.internal.util.LinkedArrayList` @kind class @AccessFlag PUBLIC {
  `int` `io.reactivex.internal.util.LinkedArrayList.a` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.internal.util.LinkedArrayList.b` @AccessFlag ;
  `java.lang.Object`[] `io.reactivex.internal.util.LinkedArrayList.c` @AccessFlag ;
  `int` `io.reactivex.internal.util.LinkedArrayList.d` @AccessFlag VOLATILE;
  `int` `io.reactivex.internal.util.LinkedArrayList.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.util.LinkedArrayList` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/util/LinkedArrayList;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48a5ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48a5f2.  v0.`io.reactivex.internal.util.LinkedArrayList.a` @type ^`int` := v1;
  #L48a5f6.  return @kind void;
}
procedure `void` `add`(`io.reactivex.internal.util.LinkedArrayList` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/util/LinkedArrayList;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48a608.  v0:= v4.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int`;
  #L48a60c.  v1:= 0I;
  #L48a60e.  v2:= 1I;
  #L48a610.  if v0 != 0 then goto L48a634;
  #L48a614.  v0:= v4.`io.reactivex.internal.util.LinkedArrayList.a` @type ^`int`;
  #L48a618.  v0:= v0 + v2 @kind int;
  #L48a61a.  v0:= new `java.lang.Object`[v0];
  #L48a61e.  v4.`io.reactivex.internal.util.LinkedArrayList.b` @type ^`java.lang.Object`[] := v0 @kind object;
  #L48a622.  v4.`io.reactivex.internal.util.LinkedArrayList.c` @type ^`java.lang.Object`[] := v0 @kind object;
  #L48a626.  v0[v1]:= v5 @kind object;
  #L48a62a.  v4.`io.reactivex.internal.util.LinkedArrayList.e` @type ^`int` := v2;
  #L48a62e.  v4.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int` := v2;
  #L48a632.  goto L48a680;
  #L48a634.  v0:= v4.`io.reactivex.internal.util.LinkedArrayList.e` @type ^`int`;
  #L48a638.  v3:= v4.`io.reactivex.internal.util.LinkedArrayList.a` @type ^`int`;
  #L48a63c.  if v0 != v3 then goto L48a668;
  #L48a640.  v0:= v3 + 1;
  #L48a644.  v0:= new `java.lang.Object`[v0];
  #L48a648.  v0[v1]:= v5 @kind object;
  #L48a64c.  v5:= v4.`io.reactivex.internal.util.LinkedArrayList.c` @type ^`java.lang.Object`[] @kind object;
  #L48a650.  v5[v3]:= v0 @kind object;
  #L48a654.  v4.`io.reactivex.internal.util.LinkedArrayList.c` @type ^`java.lang.Object`[] := v0 @kind object;
  #L48a658.  v4.`io.reactivex.internal.util.LinkedArrayList.e` @type ^`int` := v2;
  #L48a65c.  v5:= v4.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int`;
  #L48a660.  v5:= v5 + v2 @kind int;
  #L48a662.  v4.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int` := v5;
  #L48a666.  goto L48a680;
  #L48a668.  v1:= v4.`io.reactivex.internal.util.LinkedArrayList.c` @type ^`java.lang.Object`[] @kind object;
  #L48a66c.  v1[v0]:= v5 @kind object;
  #L48a670.  v0:= v0 + v2 @kind int;
  #L48a672.  v4.`io.reactivex.internal.util.LinkedArrayList.e` @type ^`int` := v0;
  #L48a676.  v5:= v4.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int`;
  #L48a67a.  v5:= v5 + v2 @kind int;
  #L48a67c.  v4.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int` := v5;
  #L48a680.  return @kind void;
}
procedure `java.lang.Object`[] `head`(`io.reactivex.internal.util.LinkedArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/LinkedArrayList;.head:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48a570.  v0:= v1.`io.reactivex.internal.util.LinkedArrayList.b` @type ^`java.lang.Object`[] @kind object;
  #L48a574.  return v0 @kind object;
}
procedure `int` `size`(`io.reactivex.internal.util.LinkedArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/LinkedArrayList;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48a558.  v0:= v1.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int`;
  #L48a55c.  return v0;
}
procedure `java.lang.String` `toString`(`io.reactivex.internal.util.LinkedArrayList` v8 @kind this) @signature `Lio/reactivex/internal/util/LinkedArrayList;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L48a588.  v0:= v8.`io.reactivex.internal.util.LinkedArrayList.a` @type ^`int`;
  #L48a58c.  v1:= v8.`io.reactivex.internal.util.LinkedArrayList.d` @type ^`int`;
  #L48a590.  v2:= new `java.util.ArrayList`;
  #L48a594.  v3:= v1 + 1;
  #L48a598.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L48a59e.  call temp:= `head`(v8) @signature `Lio/reactivex/internal/util/LinkedArrayList;.head:()[Ljava/lang/Object;` @kind virtual;
  #L48a5a4.  v3:= temp @kind object;
  #L48a5a6.  v4:= 0I;
  #L48a5a8.  v5:= 0I;
  #L48a5aa.  v6:= 0I;
  #L48a5ac.  if v5 >= v1 then goto L48a5d0;
  #L48a5b0.  v7:= v3[v6] @kind object;
  #L48a5b4.  call temp:= `add`(v2, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L48a5ba.  v5:= v5 + 1;
  #L48a5be.  v6:= v6 + 1;
  #L48a5c2.  if v6 != v0 then goto L48a5ac;
  #L48a5c6.  v3:= v3[v0] @kind object;
  #L48a5ca.  v3:= (`java.lang.Object`[]) v3 @kind object;
  #L48a5ce.  goto L48a5aa;
  #L48a5d0.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48a5d6.  v0:= temp @kind object;
  #L48a5d8.  return v0 @kind object;
}
