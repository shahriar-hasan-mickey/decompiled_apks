record `io.reactivex.Notification` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `io.reactivex.Notification.a` @AccessFlag FINAL;
}
global `io.reactivex.Notification` `@@io.reactivex.Notification.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/Notification;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L41d838.  v0:= new `io.reactivex.Notification`;
  #L41d83c.  v1:= 0I;
  #L41d83e.  call `<init>`(v0, v1) @signature `Lio/reactivex/Notification;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L41d844.  `@@io.reactivex.Notification.b` @type ^`io.reactivex.Notification` := v0 @kind object;
  #L41d848.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.Notification` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Notification;.<init>:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L41d85c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41d862.  v0.`io.reactivex.Notification.a` @type ^`java.lang.Object` := v1 @kind object;
  #L41d866.  return @kind void;
}
procedure `io.reactivex.Notification` `createOnComplete`() @signature `Lio/reactivex/Notification;.createOnComplete:()Lio/reactivex/Notification;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41d6d8.  v0:= `@@io.reactivex.Notification.b` @type ^`io.reactivex.Notification` @kind object;
  #L41d6dc.  return v0 @kind object;
}
procedure `io.reactivex.Notification` `createOnError`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/Notification;.createOnError:(Ljava/lang/Throwable;)Lio/reactivex/Notification;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41d6f0.  v0:= "error is null" @kind object;
  #L41d6f4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41d6fa.  v0:= new `io.reactivex.Notification`;
  #L41d6fe.  call temp:= `error`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L41d704.  v1:= temp @kind object;
  #L41d706.  call `<init>`(v0, v1) @signature `Lio/reactivex/Notification;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L41d70c.  return v0 @kind object;
}
procedure `io.reactivex.Notification` `createOnNext`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Notification;.createOnNext:(Ljava/lang/Object;)Lio/reactivex/Notification;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41d720.  v0:= "value is null" @kind object;
  #L41d724.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41d72a.  v0:= new `io.reactivex.Notification`;
  #L41d72e.  call `<init>`(v0, v1) @signature `Lio/reactivex/Notification;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L41d734.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.reactivex.Notification` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Notification;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41d610.  v0:= instanceof @variable v2 @type ^`io.reactivex.Notification` @kind boolean;
  #L41d614.  if v0 == 0 then goto L41d62e;
  #L41d618.  v2:= (`io.reactivex.Notification`) v2 @kind object;
  #L41d61c.  v0:= v1.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L41d620.  v2:= v2.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L41d624.  call temp:= `equals`(v0, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L41d62a.  v2:= temp;
  #L41d62c.  return v2;
  #L41d62e.  v2:= 0I;
  #L41d630.  return v2;
}
procedure `java.lang.Throwable` `getError`(`io.reactivex.Notification` v2 @kind this) @signature `Lio/reactivex/Notification;.getError:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41d808.  v0:= v2.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L41d80c.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L41d812.  v1:= temp;
  #L41d814.  if v1 == 0 then goto L41d822;
  #L41d818.  call temp:= `getError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L41d81e.  v0:= temp @kind object;
  #L41d820.  return v0 @kind object;
  #L41d822.  v0:= 0I;
  #L41d824.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41d748.  v0:= v1.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L41d74c.  if v0 == 0 then goto L41d762;
  #L41d750.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L41d756.  v0:= temp;
  #L41d758.  if v0 != 0 then goto L41d762;
  #L41d75c.  v0:= v1.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L41d760.  return v0 @kind object;
  #L41d762.  v0:= 0I;
  #L41d764.  return v0 @kind object;
}
procedure `int` `hashCode`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41d6b0.  v0:= v1.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L41d6b4.  if v0 == 0 then goto L41d6c2;
  #L41d6b8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L41d6be.  v0:= temp;
  #L41d6c0.  goto L41d6c4;
  #L41d6c2.  v0:= 0I;
  #L41d6c4.  return v0;
}
procedure `boolean` `isOnComplete`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.isOnComplete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41d644.  v0:= v1.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L41d648.  if v0 != 0 then goto L41d650;
  #L41d64c.  v0:= 1I;
  #L41d64e.  goto L41d652;
  #L41d650.  v0:= 0I;
  #L41d652.  return v0;
}
procedure `boolean` `isOnError`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.isOnError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41d664.  v0:= v1.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L41d668.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L41d66e.  v0:= temp;
  #L41d670.  return v0;
}
procedure `boolean` `isOnNext`(`io.reactivex.Notification` v1 @kind this) @signature `Lio/reactivex/Notification;.isOnNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41d684.  v0:= v1.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L41d688.  if v0 == 0 then goto L41d69c;
  #L41d68c.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L41d692.  v0:= temp;
  #L41d694.  if v0 != 0 then goto L41d69c;
  #L41d698.  v0:= 1I;
  #L41d69a.  goto L41d69e;
  #L41d69c.  v0:= 0I;
  #L41d69e.  return v0;
}
procedure `java.lang.String` `toString`(`io.reactivex.Notification` v4 @kind this) @signature `Lio/reactivex/Notification;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41d778.  v0:= v4.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L41d77c.  if v0 != 0 then goto L41d786;
  #L41d780.  v0:= "OnCompleteNotification" @kind object;
  #L41d784.  return v0 @kind object;
  #L41d786.  call temp:= `isError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.isError:(Ljava/lang/Object;)Z` @kind static;
  #L41d78c.  v1:= temp;
  #L41d78e.  v2:= "]" @kind object;
  #L41d792.  if v1 == 0 then goto L41d7c8;
  #L41d796.  v1:= new `java.lang.StringBuilder`;
  #L41d79a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41d7a0.  v3:= "OnErrorNotification[" @kind object;
  #L41d7a4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41d7aa.  call temp:= `getError`(v0) @signature `Lio/reactivex/internal/util/NotificationLite;.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L41d7b0.  v0:= temp @kind object;
  #L41d7b2.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41d7b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41d7be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41d7c4.  v0:= temp @kind object;
  #L41d7c6.  return v0 @kind object;
  #L41d7c8.  v0:= new `java.lang.StringBuilder`;
  #L41d7cc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41d7d2.  v1:= "OnNextNotification[" @kind object;
  #L41d7d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41d7dc.  v1:= v4.`io.reactivex.Notification.a` @type ^`java.lang.Object` @kind object;
  #L41d7e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41d7e6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41d7ec.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41d7f2.  v0:= temp @kind object;
  #L41d7f4.  return v0 @kind object;
}
