record `io.reactivex.MaybeEmitter` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `boolean` `isDisposed`() @signature `Lio/reactivex/MaybeEmitter;.isDisposed:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `onComplete`() @signature `Lio/reactivex/MaybeEmitter;.onComplete:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `onError`(`java.lang.Throwable` v0 @kind object) @signature `Lio/reactivex/MaybeEmitter;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `onSuccess`(`java.lang.Object` v0 @kind object) @signature `Lio/reactivex/MaybeEmitter;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setCancellable`(`io.reactivex.functions.Cancellable` v0 @kind object) @signature `Lio/reactivex/MaybeEmitter;.setCancellable:(Lio/reactivex/functions/Cancellable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setDisposable`(`io.reactivex.disposables.Disposable` v0 @kind object) @signature `Lio/reactivex/MaybeEmitter;.setDisposable:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `tryOnError`(`java.lang.Throwable` v0 @kind object) @signature `Lio/reactivex/MaybeEmitter;.tryOnError:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
