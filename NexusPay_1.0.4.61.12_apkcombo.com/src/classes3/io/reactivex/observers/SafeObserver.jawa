record `io.reactivex.observers.SafeObserver` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.Observer` @kind interface, `io.reactivex.disposables.Disposable` @kind interface {
  `io.reactivex.Observer` `io.reactivex.observers.SafeObserver.a` @AccessFlag FINAL;
  `io.reactivex.disposables.Disposable` `io.reactivex.observers.SafeObserver.b` @AccessFlag ;
  `boolean` `io.reactivex.observers.SafeObserver.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.observers.SafeObserver` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/observers/SafeObserver;.<init>:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48d8c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48d8ce.  v0.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L48d8d2.  return @kind void;
}
procedure `void` `a`(`io.reactivex.observers.SafeObserver` v6 @kind this) @signature `Lio/reactivex/observers/SafeObserver;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L48d958.  v0:= new `java.lang.NullPointerException`;
  #L48d95c.  v1:= "Subscription not set!" @kind object;
  #L48d960.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48d966.  v1:= 1I;
  #L48d968.  v2:= 0I;
  #L48d96a.  v3:= 2I;
  #L48d96c.  v4:= v6.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L48d970.  v5:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L48d974.  call `onSubscribe`(v4, v5) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L48d97a.  v4:= v6.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L48d97e.  call `onError`(v4, v0) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L48d984.  goto L48d9aa;
  #L48d986.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48d988.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48d98e.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L48d992.  v3:= new `java.lang.Throwable`[v3];
  #L48d996.  v3[v2]:= v0 @kind object;
  #L48d99a.  v3[v1]:= v4 @kind object;
  #L48d99e.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L48d9a4.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48d9aa.  return @kind void;
  #L48d9ac.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48d9ae.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48d9b4.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L48d9b8.  v3:= new `java.lang.Throwable`[v3];
  #L48d9bc.  v3[v2]:= v0 @kind object;
  #L48d9c0.  v3[v1]:= v4 @kind object;
  #L48d9c4.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L48d9ca.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48d9d0.  return @kind void;
  catch `java.lang.Throwable` @[L48d96c..L48d97a] goto L48d9ac;
  catch `java.lang.Throwable` @[L48d97a..L48d984] goto L48d986;
}
procedure `void` `b`(`io.reactivex.observers.SafeObserver` v6 @kind this) @signature `Lio/reactivex/observers/SafeObserver;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L48dc10.  v0:= 1I;
  #L48dc12.  v6.`io.reactivex.observers.SafeObserver.c` @type ^`boolean` := v0 @kind boolean;
  #L48dc16.  v1:= new `java.lang.NullPointerException`;
  #L48dc1a.  v2:= "Subscription not set!" @kind object;
  #L48dc1e.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48dc24.  v2:= 0I;
  #L48dc26.  v3:= 2I;
  #L48dc28.  v4:= v6.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L48dc2c.  v5:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L48dc30.  call `onSubscribe`(v4, v5) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L48dc36.  v4:= v6.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L48dc3a.  call `onError`(v4, v1) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L48dc40.  goto L48dc66;
  #L48dc42.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48dc44.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48dc4a.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L48dc4e.  v3:= new `java.lang.Throwable`[v3];
  #L48dc52.  v3[v2]:= v1 @kind object;
  #L48dc56.  v3[v0]:= v4 @kind object;
  #L48dc5a.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L48dc60.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48dc66.  return @kind void;
  #L48dc68.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48dc6a.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48dc70.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L48dc74.  v3:= new `java.lang.Throwable`[v3];
  #L48dc78.  v3[v2]:= v1 @kind object;
  #L48dc7c.  v3[v0]:= v4 @kind object;
  #L48dc80.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L48dc86.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48dc8c.  return @kind void;
  catch `java.lang.Throwable` @[L48dc28..L48dc36] goto L48dc68;
  catch `java.lang.Throwable` @[L48dc36..L48dc40] goto L48dc42;
}
procedure `void` `dispose`(`io.reactivex.observers.SafeObserver` v1 @kind this) @signature `Lio/reactivex/observers/SafeObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d8e4.  v0:= v1.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L48d8e8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L48d8ee.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.observers.SafeObserver` v1 @kind this) @signature `Lio/reactivex/observers/SafeObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d8a8.  v0:= v1.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L48d8ac.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/Disposable;.isDisposed:()Z` @kind interface;
  #L48d8b2.  v0:= temp;
  #L48d8b4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.observers.SafeObserver` v1 @kind this) @signature `Lio/reactivex/observers/SafeObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d900.  v0:= v1.`io.reactivex.observers.SafeObserver.c` @type ^`boolean` @kind boolean;
  #L48d904.  if v0 == 0 then goto L48d90a;
  #L48d908.  return @kind void;
  #L48d90a.  v0:= 1I;
  #L48d90c.  v1.`io.reactivex.observers.SafeObserver.c` @type ^`boolean` := v0 @kind boolean;
  #L48d910.  v0:= v1.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L48d914.  if v0 != 0 then goto L48d920;
  #L48d918.  call `a`(v1) @signature `Lio/reactivex/observers/SafeObserver;.a:()V` @kind virtual;
  #L48d91e.  return @kind void;
  #L48d920.  v0:= v1.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L48d924.  call `onComplete`(v0) @signature `Lio/reactivex/Observer;.onComplete:()V` @kind interface;
  #L48d92a.  goto L48d93a;
  #L48d92c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48d92e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48d934.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48d93a.  return @kind void;
  catch `java.lang.Throwable` @[L48d920..L48d92a] goto L48d92c;
}
procedure `void` `onError`(`io.reactivex.observers.SafeObserver` v8 @kind this, `java.lang.Throwable` v9 @kind object) @signature `Lio/reactivex/observers/SafeObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L48d9fc.  v0:= v8.`io.reactivex.observers.SafeObserver.c` @type ^`boolean` @kind boolean;
  #L48da00.  if v0 == 0 then goto L48da0c;
  #L48da04.  call `onError`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48da0a.  return @kind void;
  #L48da0c.  v0:= 1I;
  #L48da0e.  v8.`io.reactivex.observers.SafeObserver.c` @type ^`boolean` := v0 @kind boolean;
  #L48da12.  v1:= v8.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L48da16.  v2:= 0I;
  #L48da18.  v3:= 2I;
  #L48da1a.  if v1 != 0 then goto L48dab2;
  #L48da1e.  v1:= new `java.lang.NullPointerException`;
  #L48da22.  v4:= "Subscription not set!" @kind object;
  #L48da26.  call `<init>`(v1, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48da2c.  v4:= 3I;
  #L48da2e.  v5:= v8.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L48da32.  v6:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L48da36.  call `onSubscribe`(v5, v6) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L48da3c.  v5:= v8.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L48da40.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L48da44.  v7:= new `java.lang.Throwable`[v3];
  #L48da48.  v7[v2]:= v9 @kind object;
  #L48da4c.  v7[v0]:= v1 @kind object;
  #L48da50.  call `<init>`(v6, v7) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L48da56.  call `onError`(v5, v6) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L48da5c.  goto L48da86;
  #L48da5e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48da60.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48da66.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L48da6a.  v4:= new `java.lang.Throwable`[v4];
  #L48da6e.  v4[v2]:= v9 @kind object;
  #L48da72.  v4[v0]:= v1 @kind object;
  #L48da76.  v4[v3]:= v5 @kind object;
  #L48da7a.  call `<init>`(v6, v4) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L48da80.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48da86.  return @kind void;
  #L48da88.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48da8a.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48da90.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L48da94.  v4:= new `java.lang.Throwable`[v4];
  #L48da98.  v4[v2]:= v9 @kind object;
  #L48da9c.  v4[v0]:= v1 @kind object;
  #L48daa0.  v4[v3]:= v5 @kind object;
  #L48daa4.  call `<init>`(v6, v4) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L48daaa.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48dab0.  return @kind void;
  #L48dab2.  if v9 != 0 then goto L48dac4;
  #L48dab6.  v9:= new `java.lang.NullPointerException`;
  #L48daba.  v1:= "onError called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L48dabe.  call `<init>`(v9, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48dac4.  v1:= v8.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L48dac8.  call `onError`(v1, v9) @signature `Lio/reactivex/Observer;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L48dace.  goto L48daf4;
  #L48dad0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48dad2.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48dad8.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L48dadc.  v3:= new `java.lang.Throwable`[v3];
  #L48dae0.  v3[v2]:= v9 @kind object;
  #L48dae4.  v3[v0]:= v1 @kind object;
  #L48dae8.  call `<init>`(v4, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L48daee.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48daf4.  return @kind void;
  catch `java.lang.Throwable` @[L48da2e..L48da3c] goto L48da88;
  catch `java.lang.Throwable` @[L48da3c..L48da5c] goto L48da5e;
  catch `java.lang.Throwable` @[L48dac4..L48dace] goto L48dad0;
}
procedure `void` `onNext`(`io.reactivex.observers.SafeObserver` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/observers/SafeObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48db28.  v0:= v5.`io.reactivex.observers.SafeObserver.c` @type ^`boolean` @kind boolean;
  #L48db2c.  if v0 == 0 then goto L48db32;
  #L48db30.  return @kind void;
  #L48db32.  v0:= v5.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L48db36.  if v0 != 0 then goto L48db42;
  #L48db3a.  call `b`(v5) @signature `Lio/reactivex/observers/SafeObserver;.b:()V` @kind virtual;
  #L48db40.  return @kind void;
  #L48db42.  v0:= 1I;
  #L48db44.  v1:= 0I;
  #L48db46.  v2:= 2I;
  #L48db48.  if v6 != 0 then goto L48db92;
  #L48db4c.  v6:= new `java.lang.NullPointerException`;
  #L48db50.  v3:= "onNext called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L48db54.  call `<init>`(v6, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48db5a.  v3:= v5.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L48db5e.  call `dispose`(v3) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L48db64.  call `onError`(v5, v6) @signature `Lio/reactivex/observers/SafeObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L48db6a.  return @kind void;
  #L48db6c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48db6e.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48db74.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L48db78.  v2:= new `java.lang.Throwable`[v2];
  #L48db7c.  v2[v1]:= v6 @kind object;
  #L48db80.  v2[v0]:= v3 @kind object;
  #L48db84.  call `<init>`(v4, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L48db8a.  call `onError`(v5, v4) @signature `Lio/reactivex/observers/SafeObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L48db90.  return @kind void;
  #L48db92.  v3:= v5.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L48db96.  call `onNext`(v3, v6) @signature `Lio/reactivex/Observer;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L48db9c.  goto L48dbb6;
  #L48db9e.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48dba0.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48dba6.  v3:= v5.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L48dbaa.  call `dispose`(v3) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L48dbb0.  call `onError`(v5, v6) @signature `Lio/reactivex/observers/SafeObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L48dbb6.  return @kind void;
  #L48dbb8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48dbba.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48dbc0.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L48dbc4.  v2:= new `java.lang.Throwable`[v2];
  #L48dbc8.  v2[v1]:= v6 @kind object;
  #L48dbcc.  v2[v0]:= v3 @kind object;
  #L48dbd0.  call `<init>`(v4, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L48dbd6.  call `onError`(v5, v4) @signature `Lio/reactivex/observers/SafeObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L48dbdc.  return @kind void;
  catch `java.lang.Throwable` @[L48db5a..L48db64] goto L48db6c;
  catch `java.lang.Throwable` @[L48db92..L48db9c] goto L48db9e;
  catch `java.lang.Throwable` @[L48dba6..L48dbb0] goto L48dbb8;
}
procedure `void` `onSubscribe`(`io.reactivex.observers.SafeObserver` v5 @kind this, `io.reactivex.disposables.Disposable` v6 @kind object) @signature `Lio/reactivex/observers/SafeObserver;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48dcb8.  v0:= v5.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` @kind object;
  #L48dcbc.  call temp:= `validate`(v0, v6) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L48dcc2.  v0:= temp;
  #L48dcc4.  if v0 == 0 then goto L48dd1c;
  #L48dcc8.  v5.`io.reactivex.observers.SafeObserver.b` @type ^`io.reactivex.disposables.Disposable` := v6 @kind object;
  #L48dccc.  v0:= v5.`io.reactivex.observers.SafeObserver.a` @type ^`io.reactivex.Observer` @kind object;
  #L48dcd0.  call `onSubscribe`(v0, v5) @signature `Lio/reactivex/Observer;.onSubscribe:(Lio/reactivex/disposables/Disposable;)V` @kind interface;
  #L48dcd6.  goto L48dd1c;
  #L48dcd8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48dcda.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48dce0.  v1:= 1I;
  #L48dce2.  v5.`io.reactivex.observers.SafeObserver.c` @type ^`boolean` := v1 @kind boolean;
  #L48dce6.  call `dispose`(v6) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L48dcec.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48dcf2.  goto L48dd1c;
  #L48dcf4.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48dcf6.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L48dcfc.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L48dd00.  v3:= 2I;
  #L48dd02.  v3:= new `java.lang.Throwable`[v3];
  #L48dd06.  v4:= 0I;
  #L48dd08.  v3[v4]:= v0 @kind object;
  #L48dd0c.  v3[v1]:= v6 @kind object;
  #L48dd10.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L48dd16.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L48dd1c.  return @kind void;
  catch `java.lang.Throwable` @[L48dccc..L48dcd6] goto L48dcd8;
  catch `java.lang.Throwable` @[L48dce6..L48dcec] goto L48dcf4;
}
