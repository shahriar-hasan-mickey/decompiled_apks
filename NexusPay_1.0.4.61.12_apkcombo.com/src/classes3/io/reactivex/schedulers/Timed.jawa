record `io.reactivex.schedulers.Timed` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `io.reactivex.schedulers.Timed.a` @AccessFlag FINAL;
  `long` `io.reactivex.schedulers.Timed.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.schedulers.Timed.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.schedulers.Timed` v0 @kind this, `java.lang.Object` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/schedulers/Timed;.<init>:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L5274fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L527502.  v0.`io.reactivex.schedulers.Timed.a` @type ^`java.lang.Object` := v1 @kind object;
  #L527506.  v0.`io.reactivex.schedulers.Timed.b` @type ^`long` := v2 @kind wide;
  #L52750a.  v1:= "unit is null" @kind object;
  #L52750e.  call temp:= `requireNonNull`(v4, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L527514.  v1:= temp @kind object;
  #L527516.  v1:= (`java.util.concurrent.TimeUnit`) v1 @kind object;
  #L52751a.  v0.`io.reactivex.schedulers.Timed.c` @type ^`java.util.concurrent.TimeUnit` := v1 @kind object;
  #L52751e.  return @kind void;
}
procedure `boolean` `equals`(`io.reactivex.schedulers.Timed` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/schedulers/Timed;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L527378.  v0:= instanceof @variable v7 @type ^`io.reactivex.schedulers.Timed` @kind boolean;
  #L52737c.  v1:= 0I;
  #L52737e.  if v0 == 0 then goto L5273c0;
  #L527382.  v7:= (`io.reactivex.schedulers.Timed`) v7 @kind object;
  #L527386.  v0:= v6.`io.reactivex.schedulers.Timed.a` @type ^`java.lang.Object` @kind object;
  #L52738a.  v2:= v7.`io.reactivex.schedulers.Timed.a` @type ^`java.lang.Object` @kind object;
  #L52738e.  call temp:= `equals`(v0, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L527394.  v0:= temp;
  #L527396.  if v0 == 0 then goto L5273c0;
  #L52739a.  v2:= v6.`io.reactivex.schedulers.Timed.b` @type ^`long` @kind wide;
  #L52739e.  v4:= v7.`io.reactivex.schedulers.Timed.b` @type ^`long` @kind wide;
  #L5273a2.  v0:= lcmp(v2, v4);
  #L5273a6.  if v0 != 0 then goto L5273c0;
  #L5273aa.  v0:= v6.`io.reactivex.schedulers.Timed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L5273ae.  v7:= v7.`io.reactivex.schedulers.Timed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L5273b2.  call temp:= `equals`(v0, v7) @signature `Lio/reactivex/internal/functions/ObjectHelper;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L5273b8.  v7:= temp;
  #L5273ba.  if v7 == 0 then goto L5273c0;
  #L5273be.  v1:= 1I;
  #L5273c0.  return v1;
}
procedure `int` `hashCode`(`io.reactivex.schedulers.Timed` v6 @kind this) @signature `Lio/reactivex/schedulers/Timed;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L5273d4.  v0:= v6.`io.reactivex.schedulers.Timed.a` @type ^`java.lang.Object` @kind object;
  #L5273d8.  if v0 == 0 then goto L5273e6;
  #L5273dc.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L5273e2.  v0:= temp;
  #L5273e4.  goto L5273e8;
  #L5273e6.  v0:= 0I;
  #L5273e8.  v1:= 31I;
  #L5273ec.  v0:= v0 * 31;
  #L5273f0.  v2:= v6.`io.reactivex.schedulers.Timed.b` @type ^`long` @kind wide;
  #L5273f4.  v4:= v2 ^>> v1 @kind long;
  #L5273f8.  v2:= v2 ^~ v4 @kind long;
  #L5273fa.  v3:= (`int`) v2 @kind l2i;
  #L5273fc.  v0:= v0 + v3 @kind int;
  #L5273fe.  v0:= v0 * 31;
  #L527402.  v1:= v6.`io.reactivex.schedulers.Timed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L527406.  call temp:= `hashCode`(v1) @signature `Ljava/util/concurrent/TimeUnit;.hashCode:()I` @kind virtual;
  #L52740c.  v1:= temp;
  #L52740e.  v0:= v0 + v1 @kind int;
  #L527410.  return v0;
}
procedure `long` `time`(`io.reactivex.schedulers.Timed` v2 @kind this) @signature `Lio/reactivex/schedulers/Timed;.time:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5274c0.  v0:= v2.`io.reactivex.schedulers.Timed.b` @type ^`long` @kind wide;
  #L5274c4.  return v0 @kind wide;
}
procedure `long` `time`(`io.reactivex.schedulers.Timed` v3 @kind this, `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/schedulers/Timed;.time:(Ljava/util/concurrent/TimeUnit;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L5274d8.  v0:= v3.`io.reactivex.schedulers.Timed.b` @type ^`long` @kind wide;
  #L5274dc.  v2:= v3.`io.reactivex.schedulers.Timed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L5274e0.  call temp:= `convert`(v4, v0, v2) @signature `Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L5274e6.  v0:= temp @kind wide;
  #L5274e8.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`io.reactivex.schedulers.Timed` v3 @kind this) @signature `Lio/reactivex/schedulers/Timed;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L52743c.  v0:= new `java.lang.StringBuilder`;
  #L527440.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L527446.  v1:= "Timed[time=" @kind object;
  #L52744a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L527450.  v1:= v3.`io.reactivex.schedulers.Timed.b` @type ^`long` @kind wide;
  #L527454.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L52745a.  v1:= ", unit=" @kind object;
  #L52745e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L527464.  v1:= v3.`io.reactivex.schedulers.Timed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L527468.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L52746e.  v1:= ", value=" @kind object;
  #L527472.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L527478.  v1:= v3.`io.reactivex.schedulers.Timed.a` @type ^`java.lang.Object` @kind object;
  #L52747c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L527482.  v1:= "]" @kind object;
  #L527486.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L52748c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L527492.  v0:= temp @kind object;
  #L527494.  return v0 @kind object;
}
procedure `java.util.concurrent.TimeUnit` `unit`(`io.reactivex.schedulers.Timed` v1 @kind this) @signature `Lio/reactivex/schedulers/Timed;.unit:()Ljava/util/concurrent/TimeUnit;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5274a8.  v0:= v1.`io.reactivex.schedulers.Timed.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L5274ac.  return v0 @kind object;
}
procedure `java.lang.Object` `value`(`io.reactivex.schedulers.Timed` v1 @kind this) @signature `Lio/reactivex/schedulers/Timed;.value:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L527424.  v0:= v1.`io.reactivex.schedulers.Timed.a` @type ^`java.lang.Object` @kind object;
  #L527428.  return v0 @kind object;
}
