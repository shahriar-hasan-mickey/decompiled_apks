record `io.reactivex.schedulers.Schedulers` @kind class @AccessFlag PUBLIC_FINAL {
}
global `io.reactivex.Scheduler` `@@io.reactivex.schedulers.Schedulers.a` @AccessFlag STATIC_FINAL;
global `io.reactivex.Scheduler` `@@io.reactivex.schedulers.Schedulers.b` @AccessFlag STATIC_FINAL;
global `io.reactivex.Scheduler` `@@io.reactivex.schedulers.Schedulers.c` @AccessFlag STATIC_FINAL;
global `io.reactivex.Scheduler` `@@io.reactivex.schedulers.Schedulers.d` @AccessFlag STATIC_FINAL;
global `io.reactivex.Scheduler` `@@io.reactivex.schedulers.Schedulers.e` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/schedulers/Schedulers;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L526e3c.  v0:= new `io.reactivex.schedulers.Schedulers$h`;
  #L526e40.  call `<init>`(v0) @signature `Lio/reactivex/schedulers/Schedulers$h;.<init>:()V` @kind direct;
  #L526e46.  call temp:= `initSingleScheduler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.initSingleScheduler:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L526e4c.  v0:= temp @kind object;
  #L526e4e.  `@@io.reactivex.schedulers.Schedulers.a` @type ^`io.reactivex.Scheduler` := v0 @kind object;
  #L526e52.  v0:= new `io.reactivex.schedulers.Schedulers$b`;
  #L526e56.  call `<init>`(v0) @signature `Lio/reactivex/schedulers/Schedulers$b;.<init>:()V` @kind direct;
  #L526e5c.  call temp:= `initComputationScheduler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.initComputationScheduler:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L526e62.  v0:= temp @kind object;
  #L526e64.  `@@io.reactivex.schedulers.Schedulers.b` @type ^`io.reactivex.Scheduler` := v0 @kind object;
  #L526e68.  v0:= new `io.reactivex.schedulers.Schedulers$c`;
  #L526e6c.  call `<init>`(v0) @signature `Lio/reactivex/schedulers/Schedulers$c;.<init>:()V` @kind direct;
  #L526e72.  call temp:= `initIoScheduler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.initIoScheduler:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L526e78.  v0:= temp @kind object;
  #L526e7a.  `@@io.reactivex.schedulers.Schedulers.c` @type ^`io.reactivex.Scheduler` := v0 @kind object;
  #L526e7e.  call temp:= `instance`() @signature `Lio/reactivex/internal/schedulers/TrampolineScheduler;.instance:()Lio/reactivex/internal/schedulers/TrampolineScheduler;` @kind static;
  #L526e84.  v0:= temp @kind object;
  #L526e86.  `@@io.reactivex.schedulers.Schedulers.d` @type ^`io.reactivex.Scheduler` := v0 @kind object;
  #L526e8a.  v0:= new `io.reactivex.schedulers.Schedulers$f`;
  #L526e8e.  call `<init>`(v0) @signature `Lio/reactivex/schedulers/Schedulers$f;.<init>:()V` @kind direct;
  #L526e94.  call temp:= `initNewThreadScheduler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.initNewThreadScheduler:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L526e9a.  v0:= temp @kind object;
  #L526e9c.  `@@io.reactivex.schedulers.Schedulers.e` @type ^`io.reactivex.Scheduler` := v0 @kind object;
  #L526ea0.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.schedulers.Schedulers` v2 @kind this) @signature `Lio/reactivex/schedulers/Schedulers;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L526eb4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L526eba.  v0:= new `java.lang.IllegalStateException`;
  #L526ebe.  v1:= "No instances!" @kind object;
  #L526ec2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L526ec8.  throw v0;
}
procedure `io.reactivex.Scheduler` `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L526d68.  v0:= `@@io.reactivex.schedulers.Schedulers.b` @type ^`io.reactivex.Scheduler` @kind object;
  #L526d6c.  call temp:= `onComputationScheduler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onComputationScheduler:(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;` @kind static;
  #L526d72.  v0:= temp @kind object;
  #L526d74.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `from`(`java.util.concurrent.Executor` v2 @kind object) @signature `Lio/reactivex/schedulers/Schedulers;.from:(Ljava/util/concurrent/Executor;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L526d88.  v0:= new `io.reactivex.internal.schedulers.ExecutorScheduler`;
  #L526d8c.  v1:= 0I;
  #L526d8e.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler;.<init>:(Ljava/util/concurrent/Executor;Z)V` @kind direct;
  #L526d94.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `from`(`java.util.concurrent.Executor` v1 @kind object, `boolean` v2 ) @signature `Lio/reactivex/schedulers/Schedulers;.from:(Ljava/util/concurrent/Executor;Z)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L526da8.  v0:= new `io.reactivex.internal.schedulers.ExecutorScheduler`;
  #L526dac.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/schedulers/ExecutorScheduler;.<init>:(Ljava/util/concurrent/Executor;Z)V` @kind direct;
  #L526db2.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `io`() @signature `Lio/reactivex/schedulers/Schedulers;.io:()Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L526dc4.  v0:= `@@io.reactivex.schedulers.Schedulers.c` @type ^`io.reactivex.Scheduler` @kind object;
  #L526dc8.  call temp:= `onIoScheduler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onIoScheduler:(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;` @kind static;
  #L526dce.  v0:= temp @kind object;
  #L526dd0.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `newThread`() @signature `Lio/reactivex/schedulers/Schedulers;.newThread:()Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L526de4.  v0:= `@@io.reactivex.schedulers.Schedulers.e` @type ^`io.reactivex.Scheduler` @kind object;
  #L526de8.  call temp:= `onNewThreadScheduler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onNewThreadScheduler:(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;` @kind static;
  #L526dee.  v0:= temp @kind object;
  #L526df0.  return v0 @kind object;
}
procedure `void` `shutdown`() @signature `Lio/reactivex/schedulers/Schedulers;.shutdown:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L526edc.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L526ee2.  v0:= temp @kind object;
  #L526ee4.  call `shutdown`(v0) @signature `Lio/reactivex/Scheduler;.shutdown:()V` @kind virtual;
  #L526eea.  call temp:= `io`() @signature `Lio/reactivex/schedulers/Schedulers;.io:()Lio/reactivex/Scheduler;` @kind static;
  #L526ef0.  v0:= temp @kind object;
  #L526ef2.  call `shutdown`(v0) @signature `Lio/reactivex/Scheduler;.shutdown:()V` @kind virtual;
  #L526ef8.  call temp:= `newThread`() @signature `Lio/reactivex/schedulers/Schedulers;.newThread:()Lio/reactivex/Scheduler;` @kind static;
  #L526efe.  v0:= temp @kind object;
  #L526f00.  call `shutdown`(v0) @signature `Lio/reactivex/Scheduler;.shutdown:()V` @kind virtual;
  #L526f06.  call temp:= `single`() @signature `Lio/reactivex/schedulers/Schedulers;.single:()Lio/reactivex/Scheduler;` @kind static;
  #L526f0c.  v0:= temp @kind object;
  #L526f0e.  call `shutdown`(v0) @signature `Lio/reactivex/Scheduler;.shutdown:()V` @kind virtual;
  #L526f14.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L526f1a.  v0:= temp @kind object;
  #L526f1c.  call `shutdown`(v0) @signature `Lio/reactivex/Scheduler;.shutdown:()V` @kind virtual;
  #L526f22.  call `shutdown`() @signature `Lio/reactivex/internal/schedulers/SchedulerPoolFactory;.shutdown:()V` @kind static;
  #L526f28.  return @kind void;
}
procedure `io.reactivex.Scheduler` `single`() @signature `Lio/reactivex/schedulers/Schedulers;.single:()Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L526e04.  v0:= `@@io.reactivex.schedulers.Schedulers.a` @type ^`io.reactivex.Scheduler` @kind object;
  #L526e08.  call temp:= `onSingleScheduler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSingleScheduler:(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;` @kind static;
  #L526e0e.  v0:= temp @kind object;
  #L526e10.  return v0 @kind object;
}
procedure `void` `start`() @signature `Lio/reactivex/schedulers/Schedulers;.start:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L526f3c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L526f42.  v0:= temp @kind object;
  #L526f44.  call `start`(v0) @signature `Lio/reactivex/Scheduler;.start:()V` @kind virtual;
  #L526f4a.  call temp:= `io`() @signature `Lio/reactivex/schedulers/Schedulers;.io:()Lio/reactivex/Scheduler;` @kind static;
  #L526f50.  v0:= temp @kind object;
  #L526f52.  call `start`(v0) @signature `Lio/reactivex/Scheduler;.start:()V` @kind virtual;
  #L526f58.  call temp:= `newThread`() @signature `Lio/reactivex/schedulers/Schedulers;.newThread:()Lio/reactivex/Scheduler;` @kind static;
  #L526f5e.  v0:= temp @kind object;
  #L526f60.  call `start`(v0) @signature `Lio/reactivex/Scheduler;.start:()V` @kind virtual;
  #L526f66.  call temp:= `single`() @signature `Lio/reactivex/schedulers/Schedulers;.single:()Lio/reactivex/Scheduler;` @kind static;
  #L526f6c.  v0:= temp @kind object;
  #L526f6e.  call `start`(v0) @signature `Lio/reactivex/Scheduler;.start:()V` @kind virtual;
  #L526f74.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L526f7a.  v0:= temp @kind object;
  #L526f7c.  call `start`(v0) @signature `Lio/reactivex/Scheduler;.start:()V` @kind virtual;
  #L526f82.  call `start`() @signature `Lio/reactivex/internal/schedulers/SchedulerPoolFactory;.start:()V` @kind static;
  #L526f88.  return @kind void;
}
procedure `io.reactivex.Scheduler` `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L526e24.  v0:= `@@io.reactivex.schedulers.Schedulers.d` @type ^`io.reactivex.Scheduler` @kind object;
  #L526e28.  return v0 @kind object;
}
