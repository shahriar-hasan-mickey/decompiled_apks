record `io.reactivex.schedulers.TestScheduler$b` @kind class @AccessFlag FINAL extends `java.lang.Comparable` @kind interface {
  `long` `io.reactivex.schedulers.TestScheduler$b.a` @AccessFlag FINAL;
  `java.lang.Runnable` `io.reactivex.schedulers.TestScheduler$b.b` @AccessFlag FINAL;
  `io.reactivex.schedulers.TestScheduler$a` `io.reactivex.schedulers.TestScheduler$b.c` @AccessFlag FINAL;
  `long` `io.reactivex.schedulers.TestScheduler$b.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.schedulers.TestScheduler$b` v0 @kind this, `io.reactivex.schedulers.TestScheduler$a` v1 @kind object, `long` v2 , `java.lang.Runnable` v4 @kind object, `long` v5 ) @signature `Lio/reactivex/schedulers/TestScheduler$b;.<init>:(Lio/reactivex/schedulers/TestScheduler$a;JLjava/lang/Runnable;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5271d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5271da.  v0.`io.reactivex.schedulers.TestScheduler$b.a` @type ^`long` := v2 @kind wide;
  #L5271de.  v0.`io.reactivex.schedulers.TestScheduler$b.b` @type ^`java.lang.Runnable` := v4 @kind object;
  #L5271e2.  v0.`io.reactivex.schedulers.TestScheduler$b.c` @type ^`io.reactivex.schedulers.TestScheduler$a` := v1 @kind object;
  #L5271e6.  v0.`io.reactivex.schedulers.TestScheduler$b.d` @type ^`long` := v5 @kind wide;
  #L5271ea.  return @kind void;
}
procedure `int` `a`(`io.reactivex.schedulers.TestScheduler$b` v5 @kind this, `io.reactivex.schedulers.TestScheduler$b` v6 @kind object) @signature `Lio/reactivex/schedulers/TestScheduler$b;.a:(Lio/reactivex/schedulers/TestScheduler$b;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L527130.  v0:= v5.`io.reactivex.schedulers.TestScheduler$b.a` @type ^`long` @kind wide;
  #L527134.  v2:= v6.`io.reactivex.schedulers.TestScheduler$b.a` @type ^`long` @kind wide;
  #L527138.  v4:= lcmp(v0, v2);
  #L52713c.  if v4 != 0 then goto L527152;
  #L527140.  v0:= v5.`io.reactivex.schedulers.TestScheduler$b.d` @type ^`long` @kind wide;
  #L527144.  v2:= v6.`io.reactivex.schedulers.TestScheduler$b.d` @type ^`long` @kind wide;
  #L527148.  call temp:= `compare`(v0, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.compare:(JJ)I` @kind static;
  #L52714e.  v6:= temp;
  #L527150.  return v6;
  #L527152.  call temp:= `compare`(v0, v2) @signature `Lio/reactivex/internal/functions/ObjectHelper;.compare:(JJ)I` @kind static;
  #L527158.  v6:= temp;
  #L52715a.  return v6;
}
procedure `int` `compareTo`(`io.reactivex.schedulers.TestScheduler$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/schedulers/TestScheduler$b;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L52716c.  v1:= (`io.reactivex.schedulers.TestScheduler$b`) v1 @kind object;
  #L527170.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/schedulers/TestScheduler$b;.a:(Lio/reactivex/schedulers/TestScheduler$b;)I` @kind virtual;
  #L527176.  v1:= temp;
  #L527178.  return v1;
}
procedure `java.lang.String` `toString`(`io.reactivex.schedulers.TestScheduler$b` v3 @kind this) @signature `Lio/reactivex/schedulers/TestScheduler$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L52718c.  v0:= 2I;
  #L52718e.  v0:= new `java.lang.Object`[v0];
  #L527192.  v1:= v3.`io.reactivex.schedulers.TestScheduler$b.a` @type ^`long` @kind wide;
  #L527196.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L52719c.  v1:= temp @kind object;
  #L52719e.  v2:= 0I;
  #L5271a0.  v0[v2]:= v1 @kind object;
  #L5271a4.  v1:= v3.`io.reactivex.schedulers.TestScheduler$b.b` @type ^`java.lang.Runnable` @kind object;
  #L5271a8.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L5271ae.  v1:= temp @kind object;
  #L5271b0.  v2:= 1I;
  #L5271b2.  v0[v2]:= v1 @kind object;
  #L5271b6.  v1:= "TimedRunnable(time = %d, run = %s)" @kind object;
  #L5271ba.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L5271c0.  v0:= temp @kind object;
  #L5271c2.  return v0 @kind object;
}
