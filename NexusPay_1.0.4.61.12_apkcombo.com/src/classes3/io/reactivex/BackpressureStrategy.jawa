record `io.reactivex.BackpressureStrategy` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.reactivex.BackpressureStrategy`[] `@@io.reactivex.BackpressureStrategy.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.BUFFER` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.DROP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.LATEST` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.BackpressureStrategy` `@@io.reactivex.BackpressureStrategy.MISSING` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/BackpressureStrategy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L41302c.  v0:= new `io.reactivex.BackpressureStrategy`;
  #L413030.  v1:= "MISSING" @kind object;
  #L413034.  v2:= 0I;
  #L413036.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L41303c.  `@@io.reactivex.BackpressureStrategy.MISSING` @type ^`io.reactivex.BackpressureStrategy` := v0 @kind object;
  #L413040.  v0:= new `io.reactivex.BackpressureStrategy`;
  #L413044.  v1:= "ERROR" @kind object;
  #L413048.  v3:= 1I;
  #L41304a.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L413050.  `@@io.reactivex.BackpressureStrategy.ERROR` @type ^`io.reactivex.BackpressureStrategy` := v0 @kind object;
  #L413054.  v0:= new `io.reactivex.BackpressureStrategy`;
  #L413058.  v1:= "BUFFER" @kind object;
  #L41305c.  v4:= 2I;
  #L41305e.  call `<init>`(v0, v1, v4) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L413064.  `@@io.reactivex.BackpressureStrategy.BUFFER` @type ^`io.reactivex.BackpressureStrategy` := v0 @kind object;
  #L413068.  v0:= new `io.reactivex.BackpressureStrategy`;
  #L41306c.  v1:= "DROP" @kind object;
  #L413070.  v5:= 3I;
  #L413072.  call `<init>`(v0, v1, v5) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L413078.  `@@io.reactivex.BackpressureStrategy.DROP` @type ^`io.reactivex.BackpressureStrategy` := v0 @kind object;
  #L41307c.  v0:= new `io.reactivex.BackpressureStrategy`;
  #L413080.  v1:= "LATEST" @kind object;
  #L413084.  v6:= 4I;
  #L413086.  call `<init>`(v0, v1, v6) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L41308c.  `@@io.reactivex.BackpressureStrategy.LATEST` @type ^`io.reactivex.BackpressureStrategy` := v0 @kind object;
  #L413090.  v1:= 5I;
  #L413092.  v1:= new `io.reactivex.BackpressureStrategy`[v1];
  #L413096.  v7:= `@@io.reactivex.BackpressureStrategy.MISSING` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L41309a.  v1[v2]:= v7 @kind object;
  #L41309e.  v2:= `@@io.reactivex.BackpressureStrategy.ERROR` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L4130a2.  v1[v3]:= v2 @kind object;
  #L4130a6.  v2:= `@@io.reactivex.BackpressureStrategy.BUFFER` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L4130aa.  v1[v4]:= v2 @kind object;
  #L4130ae.  v2:= `@@io.reactivex.BackpressureStrategy.DROP` @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L4130b2.  v1[v5]:= v2 @kind object;
  #L4130b6.  v1[v6]:= v0 @kind object;
  #L4130ba.  `@@io.reactivex.BackpressureStrategy.$VALUES` @type ^`io.reactivex.BackpressureStrategy`[] := v1 @kind object;
  #L4130be.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.BackpressureStrategy` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/BackpressureStrategy;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4130d0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4130d6.  return @kind void;
}
procedure `io.reactivex.BackpressureStrategy` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/BackpressureStrategy;.valueOf:(Ljava/lang/String;)Lio/reactivex/BackpressureStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L412fe4.  v0:= constclass @type ^`io.reactivex.BackpressureStrategy` @kind object;
  #L412fe8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L412fee.  v1:= temp @kind object;
  #L412ff0.  v1:= (`io.reactivex.BackpressureStrategy`) v1 @kind object;
  #L412ff4.  return v1 @kind object;
}
procedure `io.reactivex.BackpressureStrategy`[] `values`() @signature `Lio/reactivex/BackpressureStrategy;.values:()[Lio/reactivex/BackpressureStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413008.  v0:= `@@io.reactivex.BackpressureStrategy.$VALUES` @type ^`io.reactivex.BackpressureStrategy`[] @kind object;
  #L41300c.  call temp:= `clone`(v0) @signature `[Lio/reactivex/BackpressureStrategy;.clone:()Ljava/lang/Object;` @kind virtual;
  #L413012.  v0:= temp @kind object;
  #L413014.  v0:= (`io.reactivex.BackpressureStrategy`[]) v0 @kind object;
  #L413018.  return v0 @kind object;
}
