record `io.reactivex.parallel.ParallelFailureHandling` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.functions.BiFunction` @kind interface {
}
global `io.reactivex.parallel.ParallelFailureHandling`[] `@@io.reactivex.parallel.ParallelFailureHandling.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.parallel.ParallelFailureHandling` `@@io.reactivex.parallel.ParallelFailureHandling.ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.parallel.ParallelFailureHandling` `@@io.reactivex.parallel.ParallelFailureHandling.RETRY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.parallel.ParallelFailureHandling` `@@io.reactivex.parallel.ParallelFailureHandling.SKIP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.reactivex.parallel.ParallelFailureHandling` `@@io.reactivex.parallel.ParallelFailureHandling.STOP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/parallel/ParallelFailureHandling;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L48e714.  v0:= new `io.reactivex.parallel.ParallelFailureHandling`;
  #L48e718.  v1:= "STOP" @kind object;
  #L48e71c.  v2:= 0I;
  #L48e71e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L48e724.  `@@io.reactivex.parallel.ParallelFailureHandling.STOP` @type ^`io.reactivex.parallel.ParallelFailureHandling` := v0 @kind object;
  #L48e728.  v0:= new `io.reactivex.parallel.ParallelFailureHandling`;
  #L48e72c.  v1:= "ERROR" @kind object;
  #L48e730.  v3:= 1I;
  #L48e732.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L48e738.  `@@io.reactivex.parallel.ParallelFailureHandling.ERROR` @type ^`io.reactivex.parallel.ParallelFailureHandling` := v0 @kind object;
  #L48e73c.  v0:= new `io.reactivex.parallel.ParallelFailureHandling`;
  #L48e740.  v1:= "SKIP" @kind object;
  #L48e744.  v4:= 2I;
  #L48e746.  call `<init>`(v0, v1, v4) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L48e74c.  `@@io.reactivex.parallel.ParallelFailureHandling.SKIP` @type ^`io.reactivex.parallel.ParallelFailureHandling` := v0 @kind object;
  #L48e750.  v0:= new `io.reactivex.parallel.ParallelFailureHandling`;
  #L48e754.  v1:= "RETRY" @kind object;
  #L48e758.  v5:= 3I;
  #L48e75a.  call `<init>`(v0, v1, v5) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L48e760.  `@@io.reactivex.parallel.ParallelFailureHandling.RETRY` @type ^`io.reactivex.parallel.ParallelFailureHandling` := v0 @kind object;
  #L48e764.  v1:= 4I;
  #L48e766.  v1:= new `io.reactivex.parallel.ParallelFailureHandling`[v1];
  #L48e76a.  v6:= `@@io.reactivex.parallel.ParallelFailureHandling.STOP` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L48e76e.  v1[v2]:= v6 @kind object;
  #L48e772.  v2:= `@@io.reactivex.parallel.ParallelFailureHandling.ERROR` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L48e776.  v1[v3]:= v2 @kind object;
  #L48e77a.  v2:= `@@io.reactivex.parallel.ParallelFailureHandling.SKIP` @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L48e77e.  v1[v4]:= v2 @kind object;
  #L48e782.  v1[v5]:= v0 @kind object;
  #L48e786.  `@@io.reactivex.parallel.ParallelFailureHandling.$VALUES` @type ^`io.reactivex.parallel.ParallelFailureHandling`[] := v1 @kind object;
  #L48e78a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.parallel.ParallelFailureHandling` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L48e79c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L48e7a2.  return @kind void;
}
procedure `io.reactivex.parallel.ParallelFailureHandling` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.valueOf:(Ljava/lang/String;)Lio/reactivex/parallel/ParallelFailureHandling;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48e6a8.  v0:= constclass @type ^`io.reactivex.parallel.ParallelFailureHandling` @kind object;
  #L48e6ac.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L48e6b2.  v1:= temp @kind object;
  #L48e6b4.  v1:= (`io.reactivex.parallel.ParallelFailureHandling`) v1 @kind object;
  #L48e6b8.  return v1 @kind object;
}
procedure `io.reactivex.parallel.ParallelFailureHandling`[] `values`() @signature `Lio/reactivex/parallel/ParallelFailureHandling;.values:()[Lio/reactivex/parallel/ParallelFailureHandling;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48e6cc.  v0:= `@@io.reactivex.parallel.ParallelFailureHandling.$VALUES` @type ^`io.reactivex.parallel.ParallelFailureHandling`[] @kind object;
  #L48e6d0.  call temp:= `clone`(v0) @signature `[Lio/reactivex/parallel/ParallelFailureHandling;.clone:()Ljava/lang/Object;` @kind virtual;
  #L48e6d6.  v0:= temp @kind object;
  #L48e6d8.  v0:= (`io.reactivex.parallel.ParallelFailureHandling`[]) v0 @kind object;
  #L48e6dc.  return v0 @kind object;
}
procedure `io.reactivex.parallel.ParallelFailureHandling` `apply`(`io.reactivex.parallel.ParallelFailureHandling` v0 @kind this, `java.lang.Long` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.apply:(Ljava/lang/Long;Ljava/lang/Throwable;)Lio/reactivex/parallel/ParallelFailureHandling;` @AccessFlag PUBLIC {
    temp;

  #L48e694.  return v0 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.parallel.ParallelFailureHandling` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48e6f0.  v1:= (`java.lang.Long`) v1 @kind object;
  #L48e6f4.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L48e6f8.  call temp:= `apply`(v0, v1, v2) @signature `Lio/reactivex/parallel/ParallelFailureHandling;.apply:(Ljava/lang/Long;Ljava/lang/Throwable;)Lio/reactivex/parallel/ParallelFailureHandling;` @kind virtual;
  #L48e6fe.  v1:= temp @kind object;
  #L48e700.  return v1 @kind object;
}
