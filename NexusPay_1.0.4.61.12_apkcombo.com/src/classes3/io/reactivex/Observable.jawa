record `io.reactivex.Observable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.ObservableSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.Observable` v0 @kind this) @signature `Lio/reactivex/Observable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4241b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4241b6.  return @kind void;
}
procedure `io.reactivex.Observable` `a`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Consumer` v8 @kind object, `io.reactivex.functions.Consumer` v9 @kind object, `io.reactivex.functions.Action` v10 @kind object, `io.reactivex.functions.Action` v11 @kind object) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41f6d4.  v0:= "onNext is null" @kind object;
  #L41f6d8.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f6de.  v0:= "onError is null" @kind object;
  #L41f6e2.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f6e8.  v0:= "onComplete is null" @kind object;
  #L41f6ec.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f6f2.  v0:= "onAfterTerminate is null" @kind object;
  #L41f6f6.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f6fc.  v0:= new `io.reactivex.internal.operators.observable.ObservableDoOnEach`;
  #L41f700.  v1:= v0 @kind object;
  #L41f702.  v2:= v7 @kind object;
  #L41f704.  v3:= v8 @kind object;
  #L41f706.  v4:= v9 @kind object;
  #L41f708.  v5:= v10 @kind object;
  #L41f70a.  v6:= v11 @kind object;
  #L41f70c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnEach;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)V` @kind direct;
  #L41f712.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f718.  v8:= temp @kind object;
  #L41f71a.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Observable;.amb:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41dc5c.  v0:= "sources is null" @kind object;
  #L41dc60.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41dc66.  v0:= new `io.reactivex.internal.operators.observable.ObservableAmb`;
  #L41dc6a.  v1:= 0I;
  #L41dc6c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableAmb;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L41dc72.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41dc78.  v2:= temp @kind object;
  #L41dc7a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `ambArray`(`io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.ambArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41dc8c.  v0:= "sources is null" @kind object;
  #L41dc90.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41dc96.  v0:= length @variable v2;
  #L41dc98.  if v0 != 0 then goto L41dca6;
  #L41dc9c.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L41dca2.  v2:= temp @kind object;
  #L41dca4.  return v2 @kind object;
  #L41dca6.  v1:= 1I;
  #L41dca8.  if v0 != v1 then goto L41dcbc;
  #L41dcac.  v0:= 0I;
  #L41dcae.  v2:= v2[v0] @kind object;
  #L41dcb2.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41dcb8.  v2:= temp @kind object;
  #L41dcba.  return v2 @kind object;
  #L41dcbc.  v0:= new `io.reactivex.internal.operators.observable.ObservableAmb`;
  #L41dcc0.  v1:= 0I;
  #L41dcc2.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableAmb;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L41dcc8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41dcce.  v2:= temp @kind object;
  #L41dcd0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `b`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.ObservableSource` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object) @signature `Lio/reactivex/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4225f8.  v0:= "timeUnit is null" @kind object;
  #L4225fc.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422602.  v0:= "scheduler is null" @kind object;
  #L422606.  call temp:= `requireNonNull`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42260c.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeoutTimed`;
  #L422610.  v1:= v0 @kind object;
  #L422612.  v2:= v8 @kind object;
  #L422614.  v3:= v9 @kind wide;
  #L422616.  v5:= v11 @kind object;
  #L422618.  v6:= v13 @kind object;
  #L42261a.  v7:= v12 @kind object;
  #L42261c.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeoutTimed;.<init>:(Lio/reactivex/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L422622.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422628.  v9:= temp @kind object;
  #L42262a.  return v9 @kind object;
}
procedure `int` `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41d924.  call temp:= `bufferSize`() @signature `Lio/reactivex/Flowable;.bufferSize:()I` @kind static;
  #L41d92a.  v0:= temp;
  #L41d92c.  return v0;
}
procedure `io.reactivex.Observable` `c`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.c:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4225c8.  v0:= "itemTimeoutIndicator is null" @kind object;
  #L4225cc.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4225d2.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeout`;
  #L4225d6.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeout;.<init>:(Lio/reactivex/Observable;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4225dc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4225e2.  v2:= temp @kind object;
  #L4225e4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.ObservableSource` v10 @kind object, `io.reactivex.ObservableSource` v11 @kind object, `io.reactivex.functions.Function9` v12 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function9;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L41e16c.  v0:= "source1 is null" @kind object;
  #L41e170.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e176.  v0:= "source2 is null" @kind object;
  #L41e17a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e180.  v0:= "source3 is null" @kind object;
  #L41e184.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e18a.  v0:= "source4 is null" @kind object;
  #L41e18e.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e194.  v0:= "source5 is null" @kind object;
  #L41e198.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e19e.  v0:= "source6 is null" @kind object;
  #L41e1a2.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e1a8.  v0:= "source7 is null" @kind object;
  #L41e1ac.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e1b2.  v0:= "source8 is null" @kind object;
  #L41e1b6.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e1bc.  v0:= "source9 is null" @kind object;
  #L41e1c0.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e1c6.  call temp:= `toFunction`(v12) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function9;)Lio/reactivex/functions/Function;` @kind static;
  #L41e1cc.  v12:= temp @kind object;
  #L41e1ce.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e1d4.  v0:= temp;
  #L41e1d6.  v1:= 9I;
  #L41e1da.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L41e1de.  v2:= 0I;
  #L41e1e0.  v1[v2]:= v3 @kind object;
  #L41e1e4.  v3:= 1I;
  #L41e1e6.  v1[v3]:= v4 @kind object;
  #L41e1ea.  v3:= 2I;
  #L41e1ec.  v1[v3]:= v5 @kind object;
  #L41e1f0.  v3:= 3I;
  #L41e1f2.  v1[v3]:= v6 @kind object;
  #L41e1f6.  v3:= 4I;
  #L41e1f8.  v1[v3]:= v7 @kind object;
  #L41e1fc.  v3:= 5I;
  #L41e1fe.  v1[v3]:= v8 @kind object;
  #L41e202.  v3:= 6I;
  #L41e204.  v1[v3]:= v9 @kind object;
  #L41e208.  v3:= 7I;
  #L41e20a.  v1[v3]:= v10 @kind object;
  #L41e20e.  v3:= 8I;
  #L41e212.  v1[v3]:= v11 @kind object;
  #L41e216.  call temp:= `combineLatest`(v12, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41e21c.  v3:= temp @kind object;
  #L41e21e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.ObservableSource` v10 @kind object, `io.reactivex.functions.Function8` v11 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function8;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L41e230.  v0:= "source1 is null" @kind object;
  #L41e234.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e23a.  v0:= "source2 is null" @kind object;
  #L41e23e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e244.  v0:= "source3 is null" @kind object;
  #L41e248.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e24e.  v0:= "source4 is null" @kind object;
  #L41e252.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e258.  v0:= "source5 is null" @kind object;
  #L41e25c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e262.  v0:= "source6 is null" @kind object;
  #L41e266.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e26c.  v0:= "source7 is null" @kind object;
  #L41e270.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e276.  v0:= "source8 is null" @kind object;
  #L41e27a.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e280.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function8;)Lio/reactivex/functions/Function;` @kind static;
  #L41e286.  v11:= temp @kind object;
  #L41e288.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e28e.  v0:= temp;
  #L41e290.  v1:= 8I;
  #L41e294.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L41e298.  v2:= 0I;
  #L41e29a.  v1[v2]:= v3 @kind object;
  #L41e29e.  v3:= 1I;
  #L41e2a0.  v1[v3]:= v4 @kind object;
  #L41e2a4.  v3:= 2I;
  #L41e2a6.  v1[v3]:= v5 @kind object;
  #L41e2aa.  v3:= 3I;
  #L41e2ac.  v1[v3]:= v6 @kind object;
  #L41e2b0.  v3:= 4I;
  #L41e2b2.  v1[v3]:= v7 @kind object;
  #L41e2b6.  v3:= 5I;
  #L41e2b8.  v1[v3]:= v8 @kind object;
  #L41e2bc.  v3:= 6I;
  #L41e2be.  v1[v3]:= v9 @kind object;
  #L41e2c2.  v3:= 7I;
  #L41e2c4.  v1[v3]:= v10 @kind object;
  #L41e2c8.  call temp:= `combineLatest`(v11, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41e2ce.  v3:= temp @kind object;
  #L41e2d0.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.functions.Function7` v10 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function7;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L41e2e4.  v0:= "source1 is null" @kind object;
  #L41e2e8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e2ee.  v0:= "source2 is null" @kind object;
  #L41e2f2.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e2f8.  v0:= "source3 is null" @kind object;
  #L41e2fc.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e302.  v0:= "source4 is null" @kind object;
  #L41e306.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e30c.  v0:= "source5 is null" @kind object;
  #L41e310.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e316.  v0:= "source6 is null" @kind object;
  #L41e31a.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e320.  v0:= "source7 is null" @kind object;
  #L41e324.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e32a.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function7;)Lio/reactivex/functions/Function;` @kind static;
  #L41e330.  v10:= temp @kind object;
  #L41e332.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e338.  v0:= temp;
  #L41e33a.  v1:= 7I;
  #L41e33c.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L41e340.  v2:= 0I;
  #L41e342.  v1[v2]:= v3 @kind object;
  #L41e346.  v3:= 1I;
  #L41e348.  v1[v3]:= v4 @kind object;
  #L41e34c.  v3:= 2I;
  #L41e34e.  v1[v3]:= v5 @kind object;
  #L41e352.  v3:= 3I;
  #L41e354.  v1[v3]:= v6 @kind object;
  #L41e358.  v3:= 4I;
  #L41e35a.  v1[v3]:= v7 @kind object;
  #L41e35e.  v3:= 5I;
  #L41e360.  v1[v3]:= v8 @kind object;
  #L41e364.  v3:= 6I;
  #L41e366.  v1[v3]:= v9 @kind object;
  #L41e36a.  call temp:= `combineLatest`(v10, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41e370.  v3:= temp @kind object;
  #L41e372.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.functions.Function6` v9 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function6;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L41e384.  v0:= "source1 is null" @kind object;
  #L41e388.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e38e.  v0:= "source2 is null" @kind object;
  #L41e392.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e398.  v0:= "source3 is null" @kind object;
  #L41e39c.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e3a2.  v0:= "source4 is null" @kind object;
  #L41e3a6.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e3ac.  v0:= "source5 is null" @kind object;
  #L41e3b0.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e3b6.  v0:= "source6 is null" @kind object;
  #L41e3ba.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e3c0.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function6;)Lio/reactivex/functions/Function;` @kind static;
  #L41e3c6.  v9:= temp @kind object;
  #L41e3c8.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e3ce.  v0:= temp;
  #L41e3d0.  v1:= 6I;
  #L41e3d2.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L41e3d6.  v2:= 0I;
  #L41e3d8.  v1[v2]:= v3 @kind object;
  #L41e3dc.  v3:= 1I;
  #L41e3de.  v1[v3]:= v4 @kind object;
  #L41e3e2.  v3:= 2I;
  #L41e3e4.  v1[v3]:= v5 @kind object;
  #L41e3e8.  v3:= 3I;
  #L41e3ea.  v1[v3]:= v6 @kind object;
  #L41e3ee.  v3:= 4I;
  #L41e3f0.  v1[v3]:= v7 @kind object;
  #L41e3f4.  v3:= 5I;
  #L41e3f6.  v1[v3]:= v8 @kind object;
  #L41e3fa.  call temp:= `combineLatest`(v9, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41e400.  v3:= temp @kind object;
  #L41e402.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.functions.Function5` v8 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function5;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L41e414.  v0:= "source1 is null" @kind object;
  #L41e418.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e41e.  v0:= "source2 is null" @kind object;
  #L41e422.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e428.  v0:= "source3 is null" @kind object;
  #L41e42c.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e432.  v0:= "source4 is null" @kind object;
  #L41e436.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e43c.  v0:= "source5 is null" @kind object;
  #L41e440.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e446.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function5;)Lio/reactivex/functions/Function;` @kind static;
  #L41e44c.  v8:= temp @kind object;
  #L41e44e.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e454.  v0:= temp;
  #L41e456.  v1:= 5I;
  #L41e458.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L41e45c.  v2:= 0I;
  #L41e45e.  v1[v2]:= v3 @kind object;
  #L41e462.  v3:= 1I;
  #L41e464.  v1[v3]:= v4 @kind object;
  #L41e468.  v3:= 2I;
  #L41e46a.  v1[v3]:= v5 @kind object;
  #L41e46e.  v3:= 3I;
  #L41e470.  v1[v3]:= v6 @kind object;
  #L41e474.  v3:= 4I;
  #L41e476.  v1[v3]:= v7 @kind object;
  #L41e47a.  call temp:= `combineLatest`(v8, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41e480.  v3:= temp @kind object;
  #L41e482.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.functions.Function4` v7 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function4;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L41e494.  v0:= "source1 is null" @kind object;
  #L41e498.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e49e.  v0:= "source2 is null" @kind object;
  #L41e4a2.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e4a8.  v0:= "source3 is null" @kind object;
  #L41e4ac.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e4b2.  v0:= "source4 is null" @kind object;
  #L41e4b6.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e4bc.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function4;)Lio/reactivex/functions/Function;` @kind static;
  #L41e4c2.  v7:= temp @kind object;
  #L41e4c4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e4ca.  v0:= temp;
  #L41e4cc.  v1:= 4I;
  #L41e4ce.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L41e4d2.  v2:= 0I;
  #L41e4d4.  v1[v2]:= v3 @kind object;
  #L41e4d8.  v3:= 1I;
  #L41e4da.  v1[v3]:= v4 @kind object;
  #L41e4de.  v3:= 2I;
  #L41e4e0.  v1[v3]:= v5 @kind object;
  #L41e4e4.  v3:= 3I;
  #L41e4e6.  v1[v3]:= v6 @kind object;
  #L41e4ea.  call temp:= `combineLatest`(v7, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41e4f0.  v3:= temp @kind object;
  #L41e4f2.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.functions.Function3` v6 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function3;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L41e504.  v0:= "source1 is null" @kind object;
  #L41e508.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e50e.  v0:= "source2 is null" @kind object;
  #L41e512.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e518.  v0:= "source3 is null" @kind object;
  #L41e51c.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e522.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function3;)Lio/reactivex/functions/Function;` @kind static;
  #L41e528.  v6:= temp @kind object;
  #L41e52a.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e530.  v0:= temp;
  #L41e532.  v1:= 3I;
  #L41e534.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L41e538.  v2:= 0I;
  #L41e53a.  v1[v2]:= v3 @kind object;
  #L41e53e.  v3:= 1I;
  #L41e540.  v1[v3]:= v4 @kind object;
  #L41e544.  v3:= 2I;
  #L41e546.  v1[v3]:= v5 @kind object;
  #L41e54a.  call temp:= `combineLatest`(v6, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41e550.  v3:= temp @kind object;
  #L41e552.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.functions.BiFunction` v5 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L41e564.  v0:= "source1 is null" @kind object;
  #L41e568.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e56e.  v0:= "source2 is null" @kind object;
  #L41e572.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e578.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L41e57e.  v5:= temp @kind object;
  #L41e580.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e586.  v0:= temp;
  #L41e588.  v1:= 2I;
  #L41e58a.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L41e58e.  v2:= 0I;
  #L41e590.  v1[v2]:= v3 @kind object;
  #L41e594.  v3:= 1I;
  #L41e596.  v1[v3]:= v4 @kind object;
  #L41e59a.  call temp:= `combineLatest`(v5, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41e5a0.  v3:= temp @kind object;
  #L41e5a2.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.functions.Function` v0 @kind object, `int` v1 , `io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L41e638.  call temp:= `combineLatest`(v2, v0, v1) @signature `Lio/reactivex/Observable;.combineLatest:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L41e63e.  v0:= temp @kind object;
  #L41e640.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`java.lang.Iterable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41e654.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e65a.  v0:= temp;
  #L41e65c.  call temp:= `combineLatest`(v1, v2, v0) @signature `Lio/reactivex/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L41e662.  v1:= temp @kind object;
  #L41e664.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`java.lang.Iterable` v7 @kind object, `io.reactivex.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/Observable;.combineLatest:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41e678.  v0:= "sources is null" @kind object;
  #L41e67c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e682.  v0:= "combiner is null" @kind object;
  #L41e686.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e68c.  v0:= "bufferSize" @kind object;
  #L41e690.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41e696.  v5:= v9 ^< 1;
  #L41e69a.  v9:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest`;
  #L41e69e.  v2:= 0I;
  #L41e6a0.  v6:= 0I;
  #L41e6a2.  v1:= v9 @kind object;
  #L41e6a4.  v3:= v7 @kind object;
  #L41e6a6.  v4:= v8 @kind object;
  #L41e6a8.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L41e6ae.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41e6b4.  v7:= temp @kind object;
  #L41e6b6.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource`[] v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatest:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41e5b4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e5ba.  v0:= temp;
  #L41e5bc.  call temp:= `combineLatest`(v1, v2, v0) @signature `Lio/reactivex/Observable;.combineLatest:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L41e5c2.  v1:= temp @kind object;
  #L41e5c4.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `combineLatest`(`io.reactivex.ObservableSource`[] v7 @kind object, `io.reactivex.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/Observable;.combineLatest:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41e5d8.  v0:= "sources is null" @kind object;
  #L41e5dc.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e5e2.  v0:= length @variable v7;
  #L41e5e4.  if v0 != 0 then goto L41e5f2;
  #L41e5e8.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L41e5ee.  v7:= temp @kind object;
  #L41e5f0.  return v7 @kind object;
  #L41e5f2.  v0:= "combiner is null" @kind object;
  #L41e5f6.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e5fc.  v0:= "bufferSize" @kind object;
  #L41e600.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41e606.  v5:= v9 ^< 1;
  #L41e60a.  v9:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest`;
  #L41e60e.  v3:= 0I;
  #L41e610.  v6:= 0I;
  #L41e612.  v1:= v9 @kind object;
  #L41e614.  v2:= v7 @kind object;
  #L41e616.  v4:= v8 @kind object;
  #L41e618.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L41e61e.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41e624.  v7:= temp @kind object;
  #L41e626.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`io.reactivex.functions.Function` v0 @kind object, `int` v1 , `io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatestDelayError:(Lio/reactivex/functions/Function;I[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L41e744.  call temp:= `combineLatestDelayError`(v2, v0, v1) @signature `Lio/reactivex/Observable;.combineLatestDelayError:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L41e74a.  v0:= temp @kind object;
  #L41e74c.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`java.lang.Iterable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41e760.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e766.  v0:= temp;
  #L41e768.  call temp:= `combineLatestDelayError`(v1, v2, v0) @signature `Lio/reactivex/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L41e76e.  v1:= temp @kind object;
  #L41e770.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`java.lang.Iterable` v7 @kind object, `io.reactivex.functions.Function` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/Observable;.combineLatestDelayError:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41e784.  v0:= "sources is null" @kind object;
  #L41e788.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e78e.  v0:= "combiner is null" @kind object;
  #L41e792.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e798.  v0:= "bufferSize" @kind object;
  #L41e79c.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41e7a2.  v5:= v9 ^< 1;
  #L41e7a6.  v9:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest`;
  #L41e7aa.  v2:= 0I;
  #L41e7ac.  v6:= 1I;
  #L41e7ae.  v1:= v9 @kind object;
  #L41e7b0.  v3:= v7 @kind object;
  #L41e7b2.  v4:= v8 @kind object;
  #L41e7b4.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L41e7ba.  call temp:= `onAssembly`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41e7c0.  v7:= temp @kind object;
  #L41e7c2.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`io.reactivex.ObservableSource`[] v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.combineLatestDelayError:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41e6c8.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e6ce.  v0:= temp;
  #L41e6d0.  call temp:= `combineLatestDelayError`(v1, v2, v0) @signature `Lio/reactivex/Observable;.combineLatestDelayError:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind static;
  #L41e6d6.  v1:= temp @kind object;
  #L41e6d8.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `combineLatestDelayError`(`io.reactivex.ObservableSource`[] v6 @kind object, `io.reactivex.functions.Function` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/Observable;.combineLatestDelayError:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41e6ec.  v0:= "bufferSize" @kind object;
  #L41e6f0.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41e6f6.  v0:= "combiner is null" @kind object;
  #L41e6fa.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e700.  v0:= length @variable v6;
  #L41e702.  if v0 != 0 then goto L41e710;
  #L41e706.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L41e70c.  v6:= temp @kind object;
  #L41e70e.  return v6 @kind object;
  #L41e710.  v4:= v8 ^< 1;
  #L41e714.  v8:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest`;
  #L41e718.  v2:= 0I;
  #L41e71a.  v5:= 1I;
  #L41e71c.  v0:= v8 @kind object;
  #L41e71e.  v1:= v6 @kind object;
  #L41e720.  v3:= v7 @kind object;
  #L41e722.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L41e728.  call temp:= `onAssembly`(v8) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41e72e.  v6:= temp @kind object;
  #L41e730.  return v6 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41e808.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e80e.  v0:= temp;
  #L41e810.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind static;
  #L41e816.  v1:= temp @kind object;
  #L41e818.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L41e82c.  v0:= "sources is null" @kind object;
  #L41e830.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e836.  v0:= "prefetch" @kind object;
  #L41e83a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41e840.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L41e844.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L41e84a.  v1:= temp @kind object;
  #L41e84c.  v2:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41e850.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L41e856.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41e85c.  v3:= temp @kind object;
  #L41e85e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41e870.  v0:= "source1 is null" @kind object;
  #L41e874.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e87a.  v0:= "source2 is null" @kind object;
  #L41e87e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e884.  v0:= 2I;
  #L41e886.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L41e88a.  v1:= 0I;
  #L41e88c.  v0[v1]:= v2 @kind object;
  #L41e890.  v2:= 1I;
  #L41e892.  v0[v2]:= v3 @kind object;
  #L41e896.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41e89c.  v2:= temp @kind object;
  #L41e89e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41e8b0.  v0:= "source1 is null" @kind object;
  #L41e8b4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e8ba.  v0:= "source2 is null" @kind object;
  #L41e8be.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e8c4.  v0:= "source3 is null" @kind object;
  #L41e8c8.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e8ce.  v0:= 3I;
  #L41e8d0.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L41e8d4.  v1:= 0I;
  #L41e8d6.  v0[v1]:= v2 @kind object;
  #L41e8da.  v2:= 1I;
  #L41e8dc.  v0[v2]:= v3 @kind object;
  #L41e8e0.  v2:= 2I;
  #L41e8e2.  v0[v2]:= v4 @kind object;
  #L41e8e6.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41e8ec.  v2:= temp @kind object;
  #L41e8ee.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41e900.  v0:= "source1 is null" @kind object;
  #L41e904.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e90a.  v0:= "source2 is null" @kind object;
  #L41e90e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e914.  v0:= "source3 is null" @kind object;
  #L41e918.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e91e.  v0:= "source4 is null" @kind object;
  #L41e922.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e928.  v0:= 4I;
  #L41e92a.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L41e92e.  v1:= 0I;
  #L41e930.  v0[v1]:= v2 @kind object;
  #L41e934.  v2:= 1I;
  #L41e936.  v0[v2]:= v3 @kind object;
  #L41e93a.  v2:= 2I;
  #L41e93c.  v0[v2]:= v4 @kind object;
  #L41e940.  v2:= 3I;
  #L41e942.  v0[v2]:= v5 @kind object;
  #L41e946.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41e94c.  v2:= temp @kind object;
  #L41e94e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/Observable;.concat:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L41e960.  v0:= "sources is null" @kind object;
  #L41e964.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e96a.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L41e970.  v3:= temp @kind object;
  #L41e972.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L41e978.  v0:= temp @kind object;
  #L41e97a.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e980.  v1:= temp;
  #L41e982.  v2:= 0I;
  #L41e984.  call temp:= `concatMapDelayError`(v3, v0, v1, v2) @signature `Lio/reactivex/Observable;.concatMapDelayError:(Lio/reactivex/functions/Function;IZ)Lio/reactivex/Observable;` @kind virtual;
  #L41e98a.  v3:= temp @kind object;
  #L41e98c.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatArray`(`io.reactivex.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41e9a0.  v0:= length @variable v4;
  #L41e9a2.  if v0 != 0 then goto L41e9b0;
  #L41e9a6.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L41e9ac.  v4:= temp @kind object;
  #L41e9ae.  return v4 @kind object;
  #L41e9b0.  v0:= length @variable v4;
  #L41e9b2.  v1:= 1I;
  #L41e9b4.  if v0 != v1 then goto L41e9c8;
  #L41e9b8.  v0:= 0I;
  #L41e9ba.  v4:= v4[v0] @kind object;
  #L41e9be.  call temp:= `wrap`(v4) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41e9c4.  v4:= temp @kind object;
  #L41e9c6.  return v4 @kind object;
  #L41e9c8.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L41e9cc.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L41e9d2.  v4:= temp @kind object;
  #L41e9d4.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L41e9da.  v1:= temp @kind object;
  #L41e9dc.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41e9e2.  v2:= temp;
  #L41e9e4.  v3:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41e9e8.  call `<init>`(v0, v4, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L41e9ee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41e9f4.  v4:= temp @kind object;
  #L41e9f6.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `concatArrayDelayError`(`io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.concatArrayDelayError:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41ea08.  v0:= length @variable v2;
  #L41ea0a.  if v0 != 0 then goto L41ea18;
  #L41ea0e.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L41ea14.  v2:= temp @kind object;
  #L41ea16.  return v2 @kind object;
  #L41ea18.  v0:= length @variable v2;
  #L41ea1a.  v1:= 1I;
  #L41ea1c.  if v0 != v1 then goto L41ea30;
  #L41ea20.  v0:= 0I;
  #L41ea22.  v2:= v2[v0] @kind object;
  #L41ea26.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41ea2c.  v2:= temp @kind object;
  #L41ea2e.  return v2 @kind object;
  #L41ea30.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L41ea36.  v2:= temp @kind object;
  #L41ea38.  call temp:= `concatDelayError`(v2) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41ea3e.  v2:= temp @kind object;
  #L41ea40.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatArrayEager`(`int` v2 , `int` v3 , `io.reactivex.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/Observable;.concatArrayEager:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41ea54.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L41ea5a.  v4:= temp @kind object;
  #L41ea5c.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L41ea62.  v0:= temp @kind object;
  #L41ea64.  v1:= 0I;
  #L41ea66.  call temp:= `concatMapEagerDelayError`(v4, v0, v2, v3, v1) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;IIZ)Lio/reactivex/Observable;` @kind virtual;
  #L41ea6c.  v2:= temp @kind object;
  #L41ea6e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatArrayEager`(`io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.concatArrayEager:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41ea80.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41ea86.  v0:= temp;
  #L41ea88.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41ea8e.  v1:= temp;
  #L41ea90.  call temp:= `concatArrayEager`(v0, v1, v2) @signature `Lio/reactivex/Observable;.concatArrayEager:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41ea96.  v2:= temp @kind object;
  #L41ea98.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatArrayEagerDelayError`(`int` v2 , `int` v3 , `io.reactivex.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/Observable;.concatArrayEagerDelayError:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41eaac.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L41eab2.  v4:= temp @kind object;
  #L41eab4.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L41eaba.  v0:= temp @kind object;
  #L41eabc.  v1:= 1I;
  #L41eabe.  call temp:= `concatMapEagerDelayError`(v4, v0, v2, v3, v1) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;IIZ)Lio/reactivex/Observable;` @kind virtual;
  #L41eac4.  v2:= temp @kind object;
  #L41eac6.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatArrayEagerDelayError`(`io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.concatArrayEagerDelayError:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41ead8.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41eade.  v0:= temp;
  #L41eae0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41eae6.  v1:= temp;
  #L41eae8.  call temp:= `concatArrayEagerDelayError`(v0, v1, v2) @signature `Lio/reactivex/Observable;.concatArrayEagerDelayError:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41eaee.  v2:= temp @kind object;
  #L41eaf0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatDelayError`(`io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41eb04.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41eb0a.  v0:= temp;
  #L41eb0c.  v1:= 1I;
  #L41eb0e.  call temp:= `concatDelayError`(v2, v0, v1) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;IZ)Lio/reactivex/Observable;` @kind static;
  #L41eb14.  v2:= temp @kind object;
  #L41eb16.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatDelayError`(`io.reactivex.ObservableSource` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;IZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41eb28.  v0:= "sources is null" @kind object;
  #L41eb2c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41eb32.  v0:= "prefetch is null" @kind object;
  #L41eb36.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41eb3c.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L41eb40.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L41eb46.  v1:= temp @kind object;
  #L41eb48.  if v4 == 0 then goto L41eb52;
  #L41eb4c.  v4:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41eb50.  goto L41eb56;
  #L41eb52.  v4:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41eb56.  call `<init>`(v0, v2, v1, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L41eb5c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41eb62.  v2:= temp @kind object;
  #L41eb64.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Observable;.concatDelayError:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41eb78.  v0:= "sources is null" @kind object;
  #L41eb7c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41eb82.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L41eb88.  v1:= temp @kind object;
  #L41eb8a.  call temp:= `concatDelayError`(v1) @signature `Lio/reactivex/Observable;.concatDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41eb90.  v1:= temp @kind object;
  #L41eb92.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `concatEager`(`io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatEager:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41eba4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41ebaa.  v0:= temp;
  #L41ebac.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41ebb2.  v1:= temp;
  #L41ebb4.  call temp:= `concatEager`(v2, v0, v1) @signature `Lio/reactivex/Observable;.concatEager:(Lio/reactivex/ObservableSource;II)Lio/reactivex/Observable;` @kind static;
  #L41ebba.  v2:= temp @kind object;
  #L41ebbc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatEager`(`io.reactivex.ObservableSource` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lio/reactivex/Observable;.concatEager:(Lio/reactivex/ObservableSource;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41ebd0.  call temp:= `wrap`(v1) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41ebd6.  v1:= temp @kind object;
  #L41ebd8.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L41ebde.  v0:= temp @kind object;
  #L41ebe0.  call temp:= `concatMapEager`(v1, v0, v2, v3) @signature `Lio/reactivex/Observable;.concatMapEager:(Lio/reactivex/functions/Function;II)Lio/reactivex/Observable;` @kind virtual;
  #L41ebe6.  v1:= temp @kind object;
  #L41ebe8.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `concatEager`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Observable;.concatEager:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41ebfc.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41ec02.  v0:= temp;
  #L41ec04.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41ec0a.  v1:= temp;
  #L41ec0c.  call temp:= `concatEager`(v2, v0, v1) @signature `Lio/reactivex/Observable;.concatEager:(Ljava/lang/Iterable;II)Lio/reactivex/Observable;` @kind static;
  #L41ec12.  v2:= temp @kind object;
  #L41ec14.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatEager`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.concatEager:(Ljava/lang/Iterable;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41ec28.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L41ec2e.  v2:= temp @kind object;
  #L41ec30.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L41ec36.  v0:= temp @kind object;
  #L41ec38.  v1:= 0I;
  #L41ec3a.  call temp:= `concatMapEagerDelayError`(v2, v0, v3, v4, v1) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;IIZ)Lio/reactivex/Observable;` @kind virtual;
  #L41ec40.  v2:= temp @kind object;
  #L41ec42.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `create`(`io.reactivex.ObservableOnSubscribe` v1 @kind object) @signature `Lio/reactivex/Observable;.create:(Lio/reactivex/ObservableOnSubscribe;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41f144.  v0:= "source is null" @kind object;
  #L41f148.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f14e.  v0:= new `io.reactivex.internal.operators.observable.ObservableCreate`;
  #L41f152.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableCreate;.<init>:(Lio/reactivex/ObservableOnSubscribe;)V` @kind direct;
  #L41f158.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f15e.  v1:= temp @kind object;
  #L41f160.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `defer`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Observable;.defer:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41f238.  v0:= "supplier is null" @kind object;
  #L41f23c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f242.  v0:= new `io.reactivex.internal.operators.observable.ObservableDefer`;
  #L41f246.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDefer;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L41f24c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f252.  v1:= temp @kind object;
  #L41f254.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41f80c.  v0:= `@@io.reactivex.internal.operators.observable.ObservableEmpty.INSTANCE` @type ^`io.reactivex.Observable` @kind object;
  #L41f810.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f816.  v0:= temp @kind object;
  #L41f818.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/Observable;.error:(Ljava/lang/Throwable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41f82c.  v0:= "exception is null" @kind object;
  #L41f830.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f836.  call temp:= `justCallable`(v1) @signature `Lio/reactivex/internal/functions/Functions;.justCallable:(Ljava/lang/Object;)Ljava/util/concurrent/Callable;` @kind static;
  #L41f83c.  v1:= temp @kind object;
  #L41f83e.  call temp:= `error`(v1) @signature `Lio/reactivex/Observable;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind static;
  #L41f844.  v1:= temp @kind object;
  #L41f846.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `error`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Observable;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41f858.  v0:= "errorSupplier is null" @kind object;
  #L41f85c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f862.  v0:= new `io.reactivex.internal.operators.observable.ObservableError`;
  #L41f866.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableError;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L41f86c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f872.  v1:= temp @kind object;
  #L41f874.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromArray`(`java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41fc4c.  v0:= "items is null" @kind object;
  #L41fc50.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fc56.  v0:= length @variable v2;
  #L41fc58.  if v0 != 0 then goto L41fc66;
  #L41fc5c.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L41fc62.  v2:= temp @kind object;
  #L41fc64.  return v2 @kind object;
  #L41fc66.  v0:= length @variable v2;
  #L41fc68.  v1:= 1I;
  #L41fc6a.  if v0 != v1 then goto L41fc7e;
  #L41fc6e.  v0:= 0I;
  #L41fc70.  v2:= v2[v0] @kind object;
  #L41fc74.  call temp:= `just`(v2) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L41fc7a.  v2:= temp @kind object;
  #L41fc7c.  return v2 @kind object;
  #L41fc7e.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromArray`;
  #L41fc82.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFromArray;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L41fc88.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41fc8e.  v2:= temp @kind object;
  #L41fc90.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Observable;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41fca4.  v0:= "supplier is null" @kind object;
  #L41fca8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fcae.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromCallable`;
  #L41fcb2.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L41fcb8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41fcbe.  v1:= temp @kind object;
  #L41fcc0.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromFuture`(`java.util.concurrent.Future` v4 @kind object) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41fcd4.  v0:= "future is null" @kind object;
  #L41fcd8.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fcde.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromFuture`;
  #L41fce2.  v1:= 0L;
  #L41fce6.  v3:= 0I;
  #L41fce8.  call `<init>`(v0, v4, v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L41fcee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41fcf4.  v4:= temp @kind object;
  #L41fcf6.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41fd34.  v0:= "future is null" @kind object;
  #L41fd38.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fd3e.  v0:= "unit is null" @kind object;
  #L41fd42.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fd48.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromFuture`;
  #L41fd4c.  call `<init>`(v0, v1, v2, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableFromFuture;.<init>:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L41fd52.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41fd58.  v1:= temp @kind object;
  #L41fd5a.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41fd6c.  v0:= "scheduler is null" @kind object;
  #L41fd70.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fd76.  call temp:= `fromFuture`(v1, v2, v4) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind static;
  #L41fd7c.  v1:= temp @kind object;
  #L41fd7e.  call temp:= `subscribeOn`(v1, v5) @signature `Lio/reactivex/Observable;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L41fd84.  v1:= temp @kind object;
  #L41fd86.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41fd08.  v0:= "scheduler is null" @kind object;
  #L41fd0c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fd12.  call temp:= `fromFuture`(v1) @signature `Lio/reactivex/Observable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Observable;` @kind static;
  #L41fd18.  v1:= temp @kind object;
  #L41fd1a.  call temp:= `subscribeOn`(v1, v2) @signature `Lio/reactivex/Observable;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L41fd20.  v1:= temp @kind object;
  #L41fd22.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromIterable`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41fd98.  v0:= "source is null" @kind object;
  #L41fd9c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fda2.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromIterable`;
  #L41fda6.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L41fdac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41fdb2.  v1:= temp @kind object;
  #L41fdb4.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Observable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41fdc8.  v0:= "publisher is null" @kind object;
  #L41fdcc.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fdd2.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromPublisher`;
  #L41fdd6.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L41fddc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41fde2.  v1:= temp @kind object;
  #L41fde4.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Observable;.generate:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41fdf8.  v0:= "generator is null" @kind object;
  #L41fdfc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fe02.  call temp:= `nullSupplier`() @signature `Lio/reactivex/internal/functions/Functions;.nullSupplier:()Ljava/util/concurrent/Callable;` @kind static;
  #L41fe08.  v0:= temp @kind object;
  #L41fe0a.  call temp:= `simpleGenerator`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.simpleGenerator:(Lio/reactivex/functions/Consumer;)Lio/reactivex/functions/BiFunction;` @kind static;
  #L41fe10.  v2:= temp @kind object;
  #L41fe12.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L41fe18.  v1:= temp @kind object;
  #L41fe1a.  call temp:= `generate`(v0, v2, v1) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @kind static;
  #L41fe20.  v2:= temp @kind object;
  #L41fe22.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41fe34.  v0:= "generator is null" @kind object;
  #L41fe38.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fe3e.  call temp:= `simpleBiGenerator`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.simpleBiGenerator:(Lio/reactivex/functions/BiConsumer;)Lio/reactivex/functions/BiFunction;` @kind static;
  #L41fe44.  v2:= temp @kind object;
  #L41fe46.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L41fe4c.  v0:= temp @kind object;
  #L41fe4e.  call temp:= `generate`(v1, v2, v0) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @kind static;
  #L41fe54.  v1:= temp @kind object;
  #L41fe56.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.BiConsumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41fe68.  v0:= "generator is null" @kind object;
  #L41fe6c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fe72.  call temp:= `simpleBiGenerator`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.simpleBiGenerator:(Lio/reactivex/functions/BiConsumer;)Lio/reactivex/functions/BiFunction;` @kind static;
  #L41fe78.  v2:= temp @kind object;
  #L41fe7a.  call temp:= `generate`(v1, v2, v3) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @kind static;
  #L41fe80.  v1:= temp @kind object;
  #L41fe82.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41fe94.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L41fe9a.  v0:= temp @kind object;
  #L41fe9c.  call temp:= `generate`(v1, v2, v0) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @kind static;
  #L41fea2.  v1:= temp @kind object;
  #L41fea4.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `generate`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.generate:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41feb8.  v0:= "initialState is null" @kind object;
  #L41febc.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fec2.  v0:= "generator is null" @kind object;
  #L41fec6.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fecc.  v0:= "disposeState is null" @kind object;
  #L41fed0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fed6.  v0:= new `io.reactivex.internal.operators.observable.ObservableGenerate`;
  #L41feda.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableGenerate;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L41fee0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41fee6.  v1:= temp @kind object;
  #L41fee8.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `interval`(`long` v6 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4200b4.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L4200ba.  v5:= temp @kind object;
  #L4200bc.  v0:= v6 @kind wide;
  #L4200be.  v2:= v8 @kind wide;
  #L4200c0.  v4:= v10 @kind object;
  #L4200c2.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L4200c8.  v6:= temp @kind object;
  #L4200ca.  return v6 @kind object;
}
procedure `io.reactivex.Observable` `interval`(`long` v8 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4200dc.  v0:= "unit is null" @kind object;
  #L4200e0.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4200e6.  v0:= "scheduler is null" @kind object;
  #L4200ea.  call temp:= `requireNonNull`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4200f0.  v0:= new `io.reactivex.internal.operators.observable.ObservableInterval`;
  #L4200f4.  v1:= 0L;
  #L4200f8.  call temp:= `max`(v1, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L4200fe.  v8:= temp @kind wide;
  #L420100.  call temp:= `max`(v1, v10) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L420106.  v4:= temp @kind wide;
  #L420108.  v1:= v0 @kind object;
  #L42010a.  v2:= v8 @kind wide;
  #L42010c.  v6:= v12 @kind object;
  #L42010e.  v7:= v13 @kind object;
  #L420110.  call `<init>`(v1, v2, v4, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableInterval;.<init>:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L420116.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L42011c.  v8:= temp @kind object;
  #L42011e.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `interval`(`long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object) @signature `Lio/reactivex/Observable;.interval:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L420068.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L42006e.  v5:= temp @kind object;
  #L420070.  v0:= v6 @kind wide;
  #L420072.  v2:= v6 @kind wide;
  #L420074.  v4:= v8 @kind object;
  #L420076.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L42007c.  v6:= temp @kind object;
  #L42007e.  return v6 @kind object;
}
procedure `io.reactivex.Observable` `interval`(`long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object, `io.reactivex.Scheduler` v9 @kind object) @signature `Lio/reactivex/Observable;.interval:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L420090.  v0:= v6 @kind wide;
  #L420092.  v2:= v6 @kind wide;
  #L420094.  v4:= v8 @kind object;
  #L420096.  v5:= v9 @kind object;
  #L420098.  call temp:= `interval`(v0, v2, v4, v5) @signature `Lio/reactivex/Observable;.interval:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L42009e.  v6:= temp @kind object;
  #L4200a0.  return v6 @kind object;
}
procedure `io.reactivex.Observable` `intervalRange`(`long` v10 , `long` v12 , `long` v14 , `long` v16 , `java.util.concurrent.TimeUnit` v18 @kind object) @signature `Lio/reactivex/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L420130.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L420136.  v9:= temp @kind object;
  #L420138.  v0:= v10 @kind wide;
  #L42013a.  v2:= v12 @kind wide;
  #L42013c.  v4:= v14 @kind wide;
  #L42013e.  v6:= v16 @kind wide;
  #L420142.  v8:= v18 @kind object;
  #L420146.  call temp:= `intervalRange`(v0, v2, v4, v6, v8, v9) @signature `Lio/reactivex/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L42014c.  v0:= temp @kind object;
  #L42014e.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `intervalRange`(`long` v16 , `long` v18 , `long` v20 , `long` v22 , `java.util.concurrent.TimeUnit` v24 @kind object, `io.reactivex.Scheduler` v25 @kind object) @signature `Lio/reactivex/Observable;.intervalRange:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L420160.  v0:= v18 @kind wide;
  #L420164.  v2:= v20 @kind wide;
  #L420168.  v9:= v24 @kind object;
  #L42016c.  v10:= v25 @kind object;
  #L420170.  v4:= 0L;
  #L420174.  v6:= lcmp(v0, v4);
  #L420178.  if v6 < 0 then goto L42020e;
  #L42017c.  if v6 != 0 then goto L420192;
  #L420180.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L420186.  v0:= temp @kind object;
  #L420188.  call temp:= `delay`(v0, v2, v9, v10) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L42018e.  v0:= temp @kind object;
  #L420190.  return v0 @kind object;
  #L420192.  v6:= 1L;
  #L420196.  v0:= v0 - v6 @kind long;
  #L420198.  v6:= v16 + v0 @kind long;
  #L42019c.  v0:= lcmp(v16, v4);
  #L4201a0.  if v0 <= 0 then goto L4201be;
  #L4201a4.  v0:= lcmp(v6, v4);
  #L4201a8.  if v0 < 0 then goto L4201ae;
  #L4201ac.  goto L4201be;
  #L4201ae.  v0:= new `java.lang.IllegalArgumentException`;
  #L4201b2.  v1:= "Overflow! start + count is bigger than Long.MAX_VALUE" @kind object;
  #L4201b6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4201bc.  throw v0;
  #L4201be.  v0:= "unit is null" @kind object;
  #L4201c2.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4201c8.  v0:= "scheduler is null" @kind object;
  #L4201cc.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4201d2.  v11:= new `io.reactivex.internal.operators.observable.ObservableIntervalRange`;
  #L4201d6.  call temp:= `max`(v4, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L4201dc.  v12:= temp @kind wide;
  #L4201de.  v0:= v22 @kind wide;
  #L4201e2.  call temp:= `max`(v4, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L4201e8.  v14:= temp @kind wide;
  #L4201ea.  v0:= v11 @kind object;
  #L4201ec.  v1:= v16 @kind wide;
  #L4201f0.  v3:= v6 @kind wide;
  #L4201f2.  v5:= v12 @kind wide;
  #L4201f4.  v7:= v14 @kind wide;
  #L4201f6.  v9:= v24 @kind object;
  #L4201fa.  v10:= v25 @kind object;
  #L4201fe.  call `<init>`(v0, v1, v3, v5, v7, v9, v10) @signature `Lio/reactivex/internal/operators/observable/ObservableIntervalRange;.<init>:(JJJJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L420204.  call temp:= `onAssembly`(v11) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L42020a.  v0:= temp @kind object;
  #L42020c.  return v0 @kind object;
  #L42020e.  v2:= new `java.lang.IllegalArgumentException`;
  #L420212.  v3:= new `java.lang.StringBuilder`;
  #L420216.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42021c.  v4:= "count >= 0 required but it was " @kind object;
  #L420220.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L420226.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L42022c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L420232.  v0:= temp @kind object;
  #L420234.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42023a.  throw v2;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4202a4.  v0:= "item is null" @kind object;
  #L4202a8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4202ae.  v0:= new `io.reactivex.internal.operators.observable.ObservableJust`;
  #L4202b2.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableJust;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4202b8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4202be.  v1:= temp @kind object;
  #L4202c0.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4202d4.  v0:= "item1 is null" @kind object;
  #L4202d8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4202de.  v0:= "item2 is null" @kind object;
  #L4202e2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4202e8.  v0:= 2I;
  #L4202ea.  v0:= new `java.lang.Object`[v0];
  #L4202ee.  v1:= 0I;
  #L4202f0.  v0[v1]:= v2 @kind object;
  #L4202f4.  v2:= 1I;
  #L4202f6.  v0[v2]:= v3 @kind object;
  #L4202fa.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L420300.  v2:= temp @kind object;
  #L420302.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L420314.  v0:= "item1 is null" @kind object;
  #L420318.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42031e.  v0:= "item2 is null" @kind object;
  #L420322.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420328.  v0:= "item3 is null" @kind object;
  #L42032c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420332.  v0:= 3I;
  #L420334.  v0:= new `java.lang.Object`[v0];
  #L420338.  v1:= 0I;
  #L42033a.  v0[v1]:= v2 @kind object;
  #L42033e.  v2:= 1I;
  #L420340.  v0[v2]:= v3 @kind object;
  #L420344.  v2:= 2I;
  #L420346.  v0[v2]:= v4 @kind object;
  #L42034a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L420350.  v2:= temp @kind object;
  #L420352.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L420364.  v0:= "item1 is null" @kind object;
  #L420368.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42036e.  v0:= "item2 is null" @kind object;
  #L420372.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420378.  v0:= "item3 is null" @kind object;
  #L42037c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420382.  v0:= "item4 is null" @kind object;
  #L420386.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42038c.  v0:= 4I;
  #L42038e.  v0:= new `java.lang.Object`[v0];
  #L420392.  v1:= 0I;
  #L420394.  v0[v1]:= v2 @kind object;
  #L420398.  v2:= 1I;
  #L42039a.  v0[v2]:= v3 @kind object;
  #L42039e.  v2:= 2I;
  #L4203a0.  v0[v2]:= v4 @kind object;
  #L4203a4.  v2:= 3I;
  #L4203a6.  v0[v2]:= v5 @kind object;
  #L4203aa.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L4203b0.  v2:= temp @kind object;
  #L4203b2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4203c4.  v0:= "item1 is null" @kind object;
  #L4203c8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4203ce.  v0:= "item2 is null" @kind object;
  #L4203d2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4203d8.  v0:= "item3 is null" @kind object;
  #L4203dc.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4203e2.  v0:= "item4 is null" @kind object;
  #L4203e6.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4203ec.  v0:= "item5 is null" @kind object;
  #L4203f0.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4203f6.  v0:= 5I;
  #L4203f8.  v0:= new `java.lang.Object`[v0];
  #L4203fc.  v1:= 0I;
  #L4203fe.  v0[v1]:= v2 @kind object;
  #L420402.  v2:= 1I;
  #L420404.  v0[v2]:= v3 @kind object;
  #L420408.  v2:= 2I;
  #L42040a.  v0[v2]:= v4 @kind object;
  #L42040e.  v2:= 3I;
  #L420410.  v0[v2]:= v5 @kind object;
  #L420414.  v2:= 4I;
  #L420416.  v0[v2]:= v6 @kind object;
  #L42041a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L420420.  v2:= temp @kind object;
  #L420422.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L420434.  v0:= "item1 is null" @kind object;
  #L420438.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42043e.  v0:= "item2 is null" @kind object;
  #L420442.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420448.  v0:= "item3 is null" @kind object;
  #L42044c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420452.  v0:= "item4 is null" @kind object;
  #L420456.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42045c.  v0:= "item5 is null" @kind object;
  #L420460.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420466.  v0:= "item6 is null" @kind object;
  #L42046a.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420470.  v0:= 6I;
  #L420472.  v0:= new `java.lang.Object`[v0];
  #L420476.  v1:= 0I;
  #L420478.  v0[v1]:= v2 @kind object;
  #L42047c.  v2:= 1I;
  #L42047e.  v0[v2]:= v3 @kind object;
  #L420482.  v2:= 2I;
  #L420484.  v0[v2]:= v4 @kind object;
  #L420488.  v2:= 3I;
  #L42048a.  v0[v2]:= v5 @kind object;
  #L42048e.  v2:= 4I;
  #L420490.  v0[v2]:= v6 @kind object;
  #L420494.  v2:= 5I;
  #L420496.  v0[v2]:= v7 @kind object;
  #L42049a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L4204a0.  v2:= temp @kind object;
  #L4204a2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4204b4.  v0:= "item1 is null" @kind object;
  #L4204b8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4204be.  v0:= "item2 is null" @kind object;
  #L4204c2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4204c8.  v0:= "item3 is null" @kind object;
  #L4204cc.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4204d2.  v0:= "item4 is null" @kind object;
  #L4204d6.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4204dc.  v0:= "item5 is null" @kind object;
  #L4204e0.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4204e6.  v0:= "item6 is null" @kind object;
  #L4204ea.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4204f0.  v0:= "item7 is null" @kind object;
  #L4204f4.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4204fa.  v0:= 7I;
  #L4204fc.  v0:= new `java.lang.Object`[v0];
  #L420500.  v1:= 0I;
  #L420502.  v0[v1]:= v2 @kind object;
  #L420506.  v2:= 1I;
  #L420508.  v0[v2]:= v3 @kind object;
  #L42050c.  v2:= 2I;
  #L42050e.  v0[v2]:= v4 @kind object;
  #L420512.  v2:= 3I;
  #L420514.  v0[v2]:= v5 @kind object;
  #L420518.  v2:= 4I;
  #L42051a.  v0[v2]:= v6 @kind object;
  #L42051e.  v2:= 5I;
  #L420520.  v0[v2]:= v7 @kind object;
  #L420524.  v2:= 6I;
  #L420526.  v0[v2]:= v8 @kind object;
  #L42052a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L420530.  v2:= temp @kind object;
  #L420532.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L420544.  v0:= "item1 is null" @kind object;
  #L420548.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42054e.  v0:= "item2 is null" @kind object;
  #L420552.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420558.  v0:= "item3 is null" @kind object;
  #L42055c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420562.  v0:= "item4 is null" @kind object;
  #L420566.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42056c.  v0:= "item5 is null" @kind object;
  #L420570.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420576.  v0:= "item6 is null" @kind object;
  #L42057a.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420580.  v0:= "item7 is null" @kind object;
  #L420584.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42058a.  v0:= "item8 is null" @kind object;
  #L42058e.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420594.  v0:= 8I;
  #L420598.  v0:= new `java.lang.Object`[v0];
  #L42059c.  v1:= 0I;
  #L42059e.  v0[v1]:= v2 @kind object;
  #L4205a2.  v2:= 1I;
  #L4205a4.  v0[v2]:= v3 @kind object;
  #L4205a8.  v2:= 2I;
  #L4205aa.  v0[v2]:= v4 @kind object;
  #L4205ae.  v2:= 3I;
  #L4205b0.  v0[v2]:= v5 @kind object;
  #L4205b4.  v2:= 4I;
  #L4205b6.  v0[v2]:= v6 @kind object;
  #L4205ba.  v2:= 5I;
  #L4205bc.  v0[v2]:= v7 @kind object;
  #L4205c0.  v2:= 6I;
  #L4205c2.  v0[v2]:= v8 @kind object;
  #L4205c6.  v2:= 7I;
  #L4205c8.  v0[v2]:= v9 @kind object;
  #L4205cc.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L4205d2.  v2:= temp @kind object;
  #L4205d4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4205e8.  v0:= "item1 is null" @kind object;
  #L4205ec.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4205f2.  v0:= "item2 is null" @kind object;
  #L4205f6.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4205fc.  v0:= "item3 is null" @kind object;
  #L420600.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420606.  v0:= "item4 is null" @kind object;
  #L42060a.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420610.  v0:= "item5 is null" @kind object;
  #L420614.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42061a.  v0:= "item6 is null" @kind object;
  #L42061e.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420624.  v0:= "item7 is null" @kind object;
  #L420628.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42062e.  v0:= "item8 is null" @kind object;
  #L420632.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420638.  v0:= "item9 is null" @kind object;
  #L42063c.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420642.  v0:= 9I;
  #L420646.  v0:= new `java.lang.Object`[v0];
  #L42064a.  v1:= 0I;
  #L42064c.  v0[v1]:= v2 @kind object;
  #L420650.  v2:= 1I;
  #L420652.  v0[v2]:= v3 @kind object;
  #L420656.  v2:= 2I;
  #L420658.  v0[v2]:= v4 @kind object;
  #L42065c.  v2:= 3I;
  #L42065e.  v0[v2]:= v5 @kind object;
  #L420662.  v2:= 4I;
  #L420664.  v0[v2]:= v6 @kind object;
  #L420668.  v2:= 5I;
  #L42066a.  v0[v2]:= v7 @kind object;
  #L42066e.  v2:= 6I;
  #L420670.  v0[v2]:= v8 @kind object;
  #L420674.  v2:= 7I;
  #L420676.  v0[v2]:= v9 @kind object;
  #L42067a.  v2:= 8I;
  #L42067e.  v0[v2]:= v10 @kind object;
  #L420682.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L420688.  v2:= temp @kind object;
  #L42068a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `just`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `java.lang.Object` v11 @kind object) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L42069c.  v0:= "item1 is null" @kind object;
  #L4206a0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4206a6.  v0:= "item2 is null" @kind object;
  #L4206aa.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4206b0.  v0:= "item3 is null" @kind object;
  #L4206b4.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4206ba.  v0:= "item4 is null" @kind object;
  #L4206be.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4206c4.  v0:= "item5 is null" @kind object;
  #L4206c8.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4206ce.  v0:= "item6 is null" @kind object;
  #L4206d2.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4206d8.  v0:= "item7 is null" @kind object;
  #L4206dc.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4206e2.  v0:= "item8 is null" @kind object;
  #L4206e6.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4206ec.  v0:= "item9 is null" @kind object;
  #L4206f0.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4206f6.  v0:= "item10 is null" @kind object;
  #L4206fa.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420700.  v0:= 10I;
  #L420704.  v0:= new `java.lang.Object`[v0];
  #L420708.  v1:= 0I;
  #L42070a.  v0[v1]:= v2 @kind object;
  #L42070e.  v2:= 1I;
  #L420710.  v0[v2]:= v3 @kind object;
  #L420714.  v2:= 2I;
  #L420716.  v0[v2]:= v4 @kind object;
  #L42071a.  v2:= 3I;
  #L42071c.  v0[v2]:= v5 @kind object;
  #L420720.  v2:= 4I;
  #L420722.  v0[v2]:= v6 @kind object;
  #L420726.  v2:= 5I;
  #L420728.  v0[v2]:= v7 @kind object;
  #L42072c.  v2:= 6I;
  #L42072e.  v0[v2]:= v8 @kind object;
  #L420732.  v2:= 7I;
  #L420734.  v0[v2]:= v9 @kind object;
  #L420738.  v2:= 8I;
  #L42073c.  v0[v2]:= v10 @kind object;
  #L420740.  v2:= 9I;
  #L420744.  v0[v2]:= v11 @kind object;
  #L420748.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L42074e.  v2:= temp @kind object;
  #L420750.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v7 @kind object) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4207e8.  v0:= "sources is null" @kind object;
  #L4207ec.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4207f2.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L4207f6.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L4207fc.  v3:= temp @kind object;
  #L4207fe.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L420804.  v6:= temp;
  #L420806.  v4:= 0I;
  #L420808.  v5:= 2147483647I;
  #L42080e.  v1:= v0 @kind object;
  #L420810.  v2:= v7 @kind object;
  #L420812.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L420818.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L42081e.  v7:= temp @kind object;
  #L420820.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L420834.  v0:= "sources is null" @kind object;
  #L420838.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42083e.  v0:= "maxConcurrency" @kind object;
  #L420842.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L420848.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L42084c.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420852.  v3:= temp @kind object;
  #L420854.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L42085a.  v6:= temp;
  #L42085c.  v4:= 0I;
  #L42085e.  v1:= v0 @kind object;
  #L420860.  v2:= v7 @kind object;
  #L420862.  v5:= v8;
  #L420864.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L42086a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420870.  v7:= temp @kind object;
  #L420872.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L420884.  v0:= "source1 is null" @kind object;
  #L420888.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42088e.  v0:= "source2 is null" @kind object;
  #L420892.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420898.  v0:= 2I;
  #L42089a.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L42089e.  v2:= 0I;
  #L4208a0.  v1[v2]:= v3 @kind object;
  #L4208a4.  v3:= 1I;
  #L4208a6.  v1[v3]:= v4 @kind object;
  #L4208aa.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L4208b0.  v3:= temp @kind object;
  #L4208b2.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L4208b8.  v4:= temp @kind object;
  #L4208ba.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L4208c0.  v3:= temp @kind object;
  #L4208c2.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4208d4.  v0:= "source1 is null" @kind object;
  #L4208d8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4208de.  v0:= "source2 is null" @kind object;
  #L4208e2.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4208e8.  v0:= "source3 is null" @kind object;
  #L4208ec.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4208f2.  v0:= 3I;
  #L4208f4.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L4208f8.  v2:= 0I;
  #L4208fa.  v1[v2]:= v3 @kind object;
  #L4208fe.  v3:= 1I;
  #L420900.  v1[v3]:= v4 @kind object;
  #L420904.  v3:= 2I;
  #L420906.  v1[v3]:= v5 @kind object;
  #L42090a.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L420910.  v3:= temp @kind object;
  #L420912.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420918.  v4:= temp @kind object;
  #L42091a.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L420920.  v3:= temp @kind object;
  #L420922.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L420934.  v0:= "source1 is null" @kind object;
  #L420938.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42093e.  v0:= "source2 is null" @kind object;
  #L420942.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420948.  v0:= "source3 is null" @kind object;
  #L42094c.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420952.  v0:= "source4 is null" @kind object;
  #L420956.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42095c.  v0:= 4I;
  #L42095e.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L420962.  v2:= 0I;
  #L420964.  v1[v2]:= v3 @kind object;
  #L420968.  v3:= 1I;
  #L42096a.  v1[v3]:= v4 @kind object;
  #L42096e.  v3:= 2I;
  #L420970.  v1[v3]:= v5 @kind object;
  #L420974.  v3:= 3I;
  #L420976.  v1[v3]:= v6 @kind object;
  #L42097a.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L420980.  v3:= temp @kind object;
  #L420982.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420988.  v4:= temp @kind object;
  #L42098a.  call temp:= `flatMap`(v3, v4, v2, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L420990.  v3:= temp @kind object;
  #L420992.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Observable;.merge:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4209a4.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L4209aa.  v1:= temp @kind object;
  #L4209ac.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L4209b2.  v0:= temp @kind object;
  #L4209b4.  call temp:= `flatMap`(v1, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L4209ba.  v1:= temp @kind object;
  #L4209bc.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`java.lang.Iterable` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/Observable;.merge:(Ljava/lang/Iterable;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4209d0.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L4209d6.  v1:= temp @kind object;
  #L4209d8.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L4209de.  v0:= temp @kind object;
  #L4209e0.  call temp:= `flatMap`(v1, v0, v2) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L4209e6.  v1:= temp @kind object;
  #L4209e8.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `merge`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.merge:(Ljava/lang/Iterable;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4209fc.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L420a02.  v2:= temp @kind object;
  #L420a04.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420a0a.  v0:= temp @kind object;
  #L420a0c.  v1:= 0I;
  #L420a0e.  call temp:= `flatMap`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L420a14.  v2:= temp @kind object;
  #L420a16.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeArray`(`int` v2 , `int` v3 , `io.reactivex.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/Observable;.mergeArray:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L420a28.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L420a2e.  v4:= temp @kind object;
  #L420a30.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420a36.  v0:= temp @kind object;
  #L420a38.  v1:= 0I;
  #L420a3a.  call temp:= `flatMap`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L420a40.  v2:= temp @kind object;
  #L420a42.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeArray`(`io.reactivex.ObservableSource`[] v2 @kind object) @signature `Lio/reactivex/Observable;.mergeArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L420a54.  call temp:= `fromArray`(v2) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L420a5a.  v0:= temp @kind object;
  #L420a5c.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420a62.  v1:= temp @kind object;
  #L420a64.  v2:= length @variable v2;
  #L420a66.  call temp:= `flatMap`(v0, v1, v2) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L420a6c.  v2:= temp @kind object;
  #L420a6e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeArrayDelayError`(`int` v2 , `int` v3 , `io.reactivex.ObservableSource`[] v4 @kind object) @signature `Lio/reactivex/Observable;.mergeArrayDelayError:(II[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L420a80.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L420a86.  v4:= temp @kind object;
  #L420a88.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420a8e.  v0:= temp @kind object;
  #L420a90.  v1:= 1I;
  #L420a92.  call temp:= `flatMap`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L420a98.  v2:= temp @kind object;
  #L420a9a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeArrayDelayError`(`io.reactivex.ObservableSource`[] v3 @kind object) @signature `Lio/reactivex/Observable;.mergeArrayDelayError:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L420aac.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L420ab2.  v0:= temp @kind object;
  #L420ab4.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420aba.  v1:= temp @kind object;
  #L420abc.  v3:= length @variable v3;
  #L420abe.  v2:= 1I;
  #L420ac0.  call temp:= `flatMap`(v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L420ac6.  v3:= temp @kind object;
  #L420ac8.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v7 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L420adc.  v0:= "sources is null" @kind object;
  #L420ae0.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420ae6.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L420aea.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420af0.  v3:= temp @kind object;
  #L420af2.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L420af8.  v6:= temp;
  #L420afa.  v4:= 1I;
  #L420afc.  v5:= 2147483647I;
  #L420b02.  v1:= v0 @kind object;
  #L420b04.  v2:= v7 @kind object;
  #L420b06.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L420b0c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420b12.  v7:= temp @kind object;
  #L420b14.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v7 @kind object, `int` v8 ) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L420b28.  v0:= "sources is null" @kind object;
  #L420b2c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420b32.  v0:= "maxConcurrency" @kind object;
  #L420b36.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L420b3c.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L420b40.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420b46.  v3:= temp @kind object;
  #L420b48.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L420b4e.  v6:= temp;
  #L420b50.  v4:= 1I;
  #L420b52.  v1:= v0 @kind object;
  #L420b54.  v2:= v7 @kind object;
  #L420b56.  v5:= v8;
  #L420b58.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L420b5e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420b64.  v7:= temp @kind object;
  #L420b66.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L420b78.  v0:= "source1 is null" @kind object;
  #L420b7c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420b82.  v0:= "source2 is null" @kind object;
  #L420b86.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420b8c.  v0:= 2I;
  #L420b8e.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L420b92.  v2:= 0I;
  #L420b94.  v1[v2]:= v3 @kind object;
  #L420b98.  v3:= 1I;
  #L420b9a.  v1[v3]:= v4 @kind object;
  #L420b9e.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L420ba4.  v4:= temp @kind object;
  #L420ba6.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420bac.  v1:= temp @kind object;
  #L420bae.  call temp:= `flatMap`(v4, v1, v3, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L420bb4.  v3:= temp @kind object;
  #L420bb6.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L420bc8.  v0:= "source1 is null" @kind object;
  #L420bcc.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420bd2.  v0:= "source2 is null" @kind object;
  #L420bd6.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420bdc.  v0:= "source3 is null" @kind object;
  #L420be0.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420be6.  v0:= 3I;
  #L420be8.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L420bec.  v2:= 0I;
  #L420bee.  v1[v2]:= v3 @kind object;
  #L420bf2.  v3:= 1I;
  #L420bf4.  v1[v3]:= v4 @kind object;
  #L420bf8.  v4:= 2I;
  #L420bfa.  v1[v4]:= v5 @kind object;
  #L420bfe.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L420c04.  v4:= temp @kind object;
  #L420c06.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420c0c.  v5:= temp @kind object;
  #L420c0e.  call temp:= `flatMap`(v4, v5, v3, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L420c14.  v3:= temp @kind object;
  #L420c16.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L420c28.  v0:= "source1 is null" @kind object;
  #L420c2c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420c32.  v0:= "source2 is null" @kind object;
  #L420c36.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420c3c.  v0:= "source3 is null" @kind object;
  #L420c40.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420c46.  v0:= "source4 is null" @kind object;
  #L420c4a.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420c50.  v0:= 4I;
  #L420c52.  v1:= new `io.reactivex.ObservableSource`[v0];
  #L420c56.  v2:= 0I;
  #L420c58.  v1[v2]:= v3 @kind object;
  #L420c5c.  v3:= 1I;
  #L420c5e.  v1[v3]:= v4 @kind object;
  #L420c62.  v4:= 2I;
  #L420c64.  v1[v4]:= v5 @kind object;
  #L420c68.  v4:= 3I;
  #L420c6a.  v1[v4]:= v6 @kind object;
  #L420c6e.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L420c74.  v4:= temp @kind object;
  #L420c76.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420c7c.  v5:= temp @kind object;
  #L420c7e.  call temp:= `flatMap`(v4, v5, v3, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L420c84.  v3:= temp @kind object;
  #L420c86.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Observable;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L420c98.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L420c9e.  v2:= temp @kind object;
  #L420ca0.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420ca6.  v0:= temp @kind object;
  #L420ca8.  v1:= 1I;
  #L420caa.  call temp:= `flatMap`(v2, v0, v1) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @kind virtual;
  #L420cb0.  v2:= temp @kind object;
  #L420cb2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.mergeDelayError:(Ljava/lang/Iterable;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L420cc4.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L420cca.  v2:= temp @kind object;
  #L420ccc.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420cd2.  v0:= temp @kind object;
  #L420cd4.  v1:= 1I;
  #L420cd6.  call temp:= `flatMap`(v2, v0, v1, v3) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L420cdc.  v2:= temp @kind object;
  #L420cde.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeDelayError`(`java.lang.Iterable` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.mergeDelayError:(Ljava/lang/Iterable;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L420cf0.  call temp:= `fromIterable`(v2) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L420cf6.  v2:= temp @kind object;
  #L420cf8.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L420cfe.  v0:= temp @kind object;
  #L420d00.  v1:= 1I;
  #L420d02.  call temp:= `flatMap`(v2, v0, v1, v3, v4) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L420d08.  v2:= temp @kind object;
  #L420d0a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `never`() @signature `Lio/reactivex/Observable;.never:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L420dd0.  v0:= `@@io.reactivex.internal.operators.observable.ObservableNever.INSTANCE` @type ^`io.reactivex.Observable` @kind object;
  #L420dd4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420dda.  v0:= temp @kind object;
  #L420ddc.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `range`(`int` v5 , `int` v6 ) @signature `Lio/reactivex/Observable;.range:(II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L420fe8.  if v6 < 0 then goto L42104e;
  #L420fec.  if v6 != 0 then goto L420ffa;
  #L420ff0.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L420ff6.  v5:= temp @kind object;
  #L420ff8.  return v5 @kind object;
  #L420ffa.  v0:= 1I;
  #L420ffc.  if v6 != v0 then goto L421012;
  #L421000.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L421006.  v5:= temp @kind object;
  #L421008.  call temp:= `just`(v5) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L42100e.  v5:= temp @kind object;
  #L421010.  return v5 @kind object;
  #L421012.  v0:= (`long`) v5 @kind i2l;
  #L421014.  v2:= v6 + -1;
  #L421018.  v2:= (`long`) v2 @kind i2l;
  #L42101a.  v0:= v0 + v2 @kind long;
  #L42101c.  v2:= 2147483647L;
  #L421022.  v4:= lcmp(v0, v2);
  #L421026.  if v4 > 0 then goto L42103e;
  #L42102a.  v0:= new `io.reactivex.internal.operators.observable.ObservableRange`;
  #L42102e.  call `<init>`(v0, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableRange;.<init>:(II)V` @kind direct;
  #L421034.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L42103a.  v5:= temp @kind object;
  #L42103c.  return v5 @kind object;
  #L42103e.  v5:= new `java.lang.IllegalArgumentException`;
  #L421042.  v6:= "Integer overflow" @kind object;
  #L421046.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42104c.  throw v5;
  #L42104e.  v5:= new `java.lang.IllegalArgumentException`;
  #L421052.  v0:= new `java.lang.StringBuilder`;
  #L421056.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42105c.  v1:= "count >= 0 required but it was " @kind object;
  #L421060.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L421066.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L42106c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L421072.  v6:= temp @kind object;
  #L421074.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42107a.  throw v5;
}
procedure `io.reactivex.Observable` `rangeLong`(`long` v5 , `long` v7 ) @signature `Lio/reactivex/Observable;.rangeLong:(JJ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L42108c.  v0:= 0L;
  #L421090.  v2:= lcmp(v7, v0);
  #L421094.  if v2 < 0 then goto L421100;
  #L421098.  if v2 != 0 then goto L4210a6;
  #L42109c.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L4210a2.  v5:= temp @kind object;
  #L4210a4.  return v5 @kind object;
  #L4210a6.  v2:= 1L;
  #L4210aa.  v4:= lcmp(v7, v2);
  #L4210ae.  if v4 != 0 then goto L4210c4;
  #L4210b2.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4210b8.  v5:= temp @kind object;
  #L4210ba.  call temp:= `just`(v5) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L4210c0.  v5:= temp @kind object;
  #L4210c2.  return v5 @kind object;
  #L4210c4.  v2:= v7 - v2 @kind long;
  #L4210c8.  v2:= v2 + v5 @kind long;
  #L4210ca.  v4:= lcmp(v5, v0);
  #L4210ce.  if v4 <= 0 then goto L4210ec;
  #L4210d2.  v4:= lcmp(v2, v0);
  #L4210d6.  if v4 < 0 then goto L4210dc;
  #L4210da.  goto L4210ec;
  #L4210dc.  v5:= new `java.lang.IllegalArgumentException`;
  #L4210e0.  v6:= "Overflow! start + count is bigger than Long.MAX_VALUE" @kind object;
  #L4210e4.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4210ea.  throw v5;
  #L4210ec.  v0:= new `io.reactivex.internal.operators.observable.ObservableRangeLong`;
  #L4210f0.  call `<init>`(v0, v5, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableRangeLong;.<init>:(JJ)V` @kind direct;
  #L4210f6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4210fc.  v5:= temp @kind object;
  #L4210fe.  return v5 @kind object;
  #L421100.  v5:= new `java.lang.IllegalArgumentException`;
  #L421104.  v6:= new `java.lang.StringBuilder`;
  #L421108.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42110e.  v0:= "count >= 0 required but it was " @kind object;
  #L421112.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L421118.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L42111e.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L421124.  v6:= temp @kind object;
  #L421126.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42112c.  throw v5;
}
procedure `io.reactivex.Single` `sequenceEqual`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L423818.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/functions/BiPredicate;` @kind static;
  #L42381e.  v0:= temp @kind object;
  #L423820.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L423826.  v1:= temp;
  #L423828.  call temp:= `sequenceEqual`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)Lio/reactivex/Single;` @kind static;
  #L42382e.  v2:= temp @kind object;
  #L423830.  return v2 @kind object;
}
procedure `io.reactivex.Single` `sequenceEqual`(`io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;I)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L423844.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/functions/BiPredicate;` @kind static;
  #L42384a.  v0:= temp @kind object;
  #L42384c.  call temp:= `sequenceEqual`(v1, v2, v0, v3) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)Lio/reactivex/Single;` @kind static;
  #L423852.  v1:= temp @kind object;
  #L423854.  return v1 @kind object;
}
procedure `io.reactivex.Single` `sequenceEqual`(`io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L423868.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L42386e.  v0:= temp;
  #L423870.  call temp:= `sequenceEqual`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)Lio/reactivex/Single;` @kind static;
  #L423876.  v1:= temp @kind object;
  #L423878.  return v1 @kind object;
}
procedure `io.reactivex.Single` `sequenceEqual`(`io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.BiPredicate` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.sequenceEqual:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42388c.  v0:= "source1 is null" @kind object;
  #L423890.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423896.  v0:= "source2 is null" @kind object;
  #L42389a.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4238a0.  v0:= "isEqual is null" @kind object;
  #L4238a4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4238aa.  v0:= "bufferSize" @kind object;
  #L4238ae.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4238b4.  v0:= new `io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle`;
  #L4238b8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableSequenceEqualSingle;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiPredicate;I)V` @kind direct;
  #L4238be.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4238c4.  v1:= temp @kind object;
  #L4238c6.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `switchOnNext`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.switchOnNext:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L421db4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L421dba.  v0:= temp;
  #L421dbc.  call temp:= `switchOnNext`(v1, v0) @signature `Lio/reactivex/Observable;.switchOnNext:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind static;
  #L421dc2.  v1:= temp @kind object;
  #L421dc4.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `switchOnNext`(`io.reactivex.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.switchOnNext:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L421dd8.  v0:= "sources is null" @kind object;
  #L421ddc.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421de2.  v0:= "bufferSize" @kind object;
  #L421de6.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L421dec.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchMap`;
  #L421df0.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L421df6.  v1:= temp @kind object;
  #L421df8.  v2:= 0I;
  #L421dfa.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L421e00.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421e06.  v3:= temp @kind object;
  #L421e08.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchOnNextDelayError`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.switchOnNextDelayError:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L421e1c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L421e22.  v0:= temp;
  #L421e24.  call temp:= `switchOnNextDelayError`(v1, v0) @signature `Lio/reactivex/Observable;.switchOnNextDelayError:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind static;
  #L421e2a.  v1:= temp @kind object;
  #L421e2c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `switchOnNextDelayError`(`io.reactivex.ObservableSource` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.switchOnNextDelayError:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L421e40.  v0:= "sources is null" @kind object;
  #L421e44.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421e4a.  v0:= "prefetch" @kind object;
  #L421e4e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L421e54.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchMap`;
  #L421e58.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L421e5e.  v1:= temp @kind object;
  #L421e60.  v2:= 1I;
  #L421e62.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L421e68.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421e6e.  v3:= temp @kind object;
  #L421e70.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42263c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L422642.  v0:= temp @kind object;
  #L422644.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L42264a.  v1:= temp @kind object;
  #L42264c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `timer`(`long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.Scheduler` v6 @kind object) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L422660.  v0:= "unit is null" @kind object;
  #L422664.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42266a.  v0:= "scheduler is null" @kind object;
  #L42266e.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422674.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimer`;
  #L422678.  v1:= 0L;
  #L42267c.  call temp:= `max`(v3, v1) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L422682.  v3:= temp @kind wide;
  #L422684.  call `<init>`(v0, v3, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L42268a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422690.  v3:= temp @kind object;
  #L422692.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `unsafeCreate`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.unsafeCreate:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L422748.  v0:= "onSubscribe is null" @kind object;
  #L42274c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422752.  v0:= instanceof @variable v1 @type ^`io.reactivex.Observable` @kind boolean;
  #L422756.  if v0 != 0 then goto L42276e;
  #L42275a.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromUnsafeSource`;
  #L42275e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromUnsafeSource;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L422764.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L42276a.  v1:= temp @kind object;
  #L42276c.  return v1 @kind object;
  #L42276e.  v1:= new `java.lang.IllegalArgumentException`;
  #L422772.  v0:= "unsafeCreate(Observable) should be upgraded" @kind object;
  #L422776.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42277c.  throw v1;
}
procedure `io.reactivex.Observable` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4227c0.  v0:= 1I;
  #L4227c2.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Observable;` @kind static;
  #L4227c8.  v1:= temp @kind object;
  #L4227ca.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Observable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4227dc.  v0:= "resourceSupplier is null" @kind object;
  #L4227e0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4227e6.  v0:= "sourceSupplier is null" @kind object;
  #L4227ea.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4227f0.  v0:= "disposer is null" @kind object;
  #L4227f4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4227fa.  v0:= new `io.reactivex.internal.operators.observable.ObservableUsing`;
  #L4227fe.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L422804.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L42280a.  v1:= temp @kind object;
  #L42280c.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `wrap`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L422e04.  v0:= "source is null" @kind object;
  #L422e08.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422e0e.  v0:= instanceof @variable v1 @type ^`io.reactivex.Observable` @kind boolean;
  #L422e12.  if v0 == 0 then goto L422e24;
  #L422e16.  v1:= (`io.reactivex.Observable`) v1 @kind object;
  #L422e1a.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422e20.  v1:= temp @kind object;
  #L422e22.  return v1 @kind object;
  #L422e24.  v0:= new `io.reactivex.internal.operators.observable.ObservableFromUnsafeSource`;
  #L422e28.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFromUnsafeSource;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L422e2e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422e34.  v1:= temp @kind object;
  #L422e36.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.ObservableSource` v10 @kind object, `io.reactivex.ObservableSource` v11 @kind object, `io.reactivex.functions.Function9` v12 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function9;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L422e48.  v0:= "source1 is null" @kind object;
  #L422e4c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422e52.  v0:= "source2 is null" @kind object;
  #L422e56.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422e5c.  v0:= "source3 is null" @kind object;
  #L422e60.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422e66.  v0:= "source4 is null" @kind object;
  #L422e6a.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422e70.  v0:= "source5 is null" @kind object;
  #L422e74.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422e7a.  v0:= "source6 is null" @kind object;
  #L422e7e.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422e84.  v0:= "source7 is null" @kind object;
  #L422e88.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422e8e.  v0:= "source8 is null" @kind object;
  #L422e92.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422e98.  v0:= "source9 is null" @kind object;
  #L422e9c.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422ea2.  call temp:= `toFunction`(v12) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function9;)Lio/reactivex/functions/Function;` @kind static;
  #L422ea8.  v12:= temp @kind object;
  #L422eaa.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L422eb0.  v0:= temp;
  #L422eb2.  v1:= 9I;
  #L422eb6.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L422eba.  v2:= 0I;
  #L422ebc.  v1[v2]:= v3 @kind object;
  #L422ec0.  v3:= 1I;
  #L422ec2.  v1[v3]:= v4 @kind object;
  #L422ec6.  v3:= 2I;
  #L422ec8.  v1[v3]:= v5 @kind object;
  #L422ecc.  v3:= 3I;
  #L422ece.  v1[v3]:= v6 @kind object;
  #L422ed2.  v3:= 4I;
  #L422ed4.  v1[v3]:= v7 @kind object;
  #L422ed8.  v3:= 5I;
  #L422eda.  v1[v3]:= v8 @kind object;
  #L422ede.  v3:= 6I;
  #L422ee0.  v1[v3]:= v9 @kind object;
  #L422ee4.  v3:= 7I;
  #L422ee6.  v1[v3]:= v10 @kind object;
  #L422eea.  v3:= 8I;
  #L422eee.  v1[v3]:= v11 @kind object;
  #L422ef2.  call temp:= `zipArray`(v12, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L422ef8.  v3:= temp @kind object;
  #L422efa.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.ObservableSource` v10 @kind object, `io.reactivex.functions.Function8` v11 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function8;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L422f0c.  v0:= "source1 is null" @kind object;
  #L422f10.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422f16.  v0:= "source2 is null" @kind object;
  #L422f1a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422f20.  v0:= "source3 is null" @kind object;
  #L422f24.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422f2a.  v0:= "source4 is null" @kind object;
  #L422f2e.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422f34.  v0:= "source5 is null" @kind object;
  #L422f38.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422f3e.  v0:= "source6 is null" @kind object;
  #L422f42.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422f48.  v0:= "source7 is null" @kind object;
  #L422f4c.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422f52.  v0:= "source8 is null" @kind object;
  #L422f56.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422f5c.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function8;)Lio/reactivex/functions/Function;` @kind static;
  #L422f62.  v11:= temp @kind object;
  #L422f64.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L422f6a.  v0:= temp;
  #L422f6c.  v1:= 8I;
  #L422f70.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L422f74.  v2:= 0I;
  #L422f76.  v1[v2]:= v3 @kind object;
  #L422f7a.  v3:= 1I;
  #L422f7c.  v1[v3]:= v4 @kind object;
  #L422f80.  v3:= 2I;
  #L422f82.  v1[v3]:= v5 @kind object;
  #L422f86.  v3:= 3I;
  #L422f88.  v1[v3]:= v6 @kind object;
  #L422f8c.  v3:= 4I;
  #L422f8e.  v1[v3]:= v7 @kind object;
  #L422f92.  v3:= 5I;
  #L422f94.  v1[v3]:= v8 @kind object;
  #L422f98.  v3:= 6I;
  #L422f9a.  v1[v3]:= v9 @kind object;
  #L422f9e.  v3:= 7I;
  #L422fa0.  v1[v3]:= v10 @kind object;
  #L422fa4.  call temp:= `zipArray`(v11, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L422faa.  v3:= temp @kind object;
  #L422fac.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.ObservableSource` v9 @kind object, `io.reactivex.functions.Function7` v10 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function7;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L422fc0.  v0:= "source1 is null" @kind object;
  #L422fc4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422fca.  v0:= "source2 is null" @kind object;
  #L422fce.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422fd4.  v0:= "source3 is null" @kind object;
  #L422fd8.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422fde.  v0:= "source4 is null" @kind object;
  #L422fe2.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422fe8.  v0:= "source5 is null" @kind object;
  #L422fec.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422ff2.  v0:= "source6 is null" @kind object;
  #L422ff6.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422ffc.  v0:= "source7 is null" @kind object;
  #L423000.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423006.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function7;)Lio/reactivex/functions/Function;` @kind static;
  #L42300c.  v10:= temp @kind object;
  #L42300e.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L423014.  v0:= temp;
  #L423016.  v1:= 7I;
  #L423018.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L42301c.  v2:= 0I;
  #L42301e.  v1[v2]:= v3 @kind object;
  #L423022.  v3:= 1I;
  #L423024.  v1[v3]:= v4 @kind object;
  #L423028.  v3:= 2I;
  #L42302a.  v1[v3]:= v5 @kind object;
  #L42302e.  v3:= 3I;
  #L423030.  v1[v3]:= v6 @kind object;
  #L423034.  v3:= 4I;
  #L423036.  v1[v3]:= v7 @kind object;
  #L42303a.  v3:= 5I;
  #L42303c.  v1[v3]:= v8 @kind object;
  #L423040.  v3:= 6I;
  #L423042.  v1[v3]:= v9 @kind object;
  #L423046.  call temp:= `zipArray`(v10, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L42304c.  v3:= temp @kind object;
  #L42304e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.functions.Function6` v9 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function6;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L423060.  v0:= "source1 is null" @kind object;
  #L423064.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42306a.  v0:= "source2 is null" @kind object;
  #L42306e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423074.  v0:= "source3 is null" @kind object;
  #L423078.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42307e.  v0:= "source4 is null" @kind object;
  #L423082.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423088.  v0:= "source5 is null" @kind object;
  #L42308c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423092.  v0:= "source6 is null" @kind object;
  #L423096.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42309c.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function6;)Lio/reactivex/functions/Function;` @kind static;
  #L4230a2.  v9:= temp @kind object;
  #L4230a4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L4230aa.  v0:= temp;
  #L4230ac.  v1:= 6I;
  #L4230ae.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L4230b2.  v2:= 0I;
  #L4230b4.  v1[v2]:= v3 @kind object;
  #L4230b8.  v3:= 1I;
  #L4230ba.  v1[v3]:= v4 @kind object;
  #L4230be.  v3:= 2I;
  #L4230c0.  v1[v3]:= v5 @kind object;
  #L4230c4.  v3:= 3I;
  #L4230c6.  v1[v3]:= v6 @kind object;
  #L4230ca.  v3:= 4I;
  #L4230cc.  v1[v3]:= v7 @kind object;
  #L4230d0.  v3:= 5I;
  #L4230d2.  v1[v3]:= v8 @kind object;
  #L4230d6.  call temp:= `zipArray`(v9, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L4230dc.  v3:= temp @kind object;
  #L4230de.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.ObservableSource` v7 @kind object, `io.reactivex.functions.Function5` v8 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function5;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4230f0.  v0:= "source1 is null" @kind object;
  #L4230f4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4230fa.  v0:= "source2 is null" @kind object;
  #L4230fe.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423104.  v0:= "source3 is null" @kind object;
  #L423108.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42310e.  v0:= "source4 is null" @kind object;
  #L423112.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423118.  v0:= "source5 is null" @kind object;
  #L42311c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423122.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function5;)Lio/reactivex/functions/Function;` @kind static;
  #L423128.  v8:= temp @kind object;
  #L42312a.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L423130.  v0:= temp;
  #L423132.  v1:= 5I;
  #L423134.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L423138.  v2:= 0I;
  #L42313a.  v1[v2]:= v3 @kind object;
  #L42313e.  v3:= 1I;
  #L423140.  v1[v3]:= v4 @kind object;
  #L423144.  v3:= 2I;
  #L423146.  v1[v3]:= v5 @kind object;
  #L42314a.  v3:= 3I;
  #L42314c.  v1[v3]:= v6 @kind object;
  #L423150.  v3:= 4I;
  #L423152.  v1[v3]:= v7 @kind object;
  #L423156.  call temp:= `zipArray`(v8, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L42315c.  v3:= temp @kind object;
  #L42315e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.functions.Function4` v7 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function4;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L423170.  v0:= "source1 is null" @kind object;
  #L423174.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42317a.  v0:= "source2 is null" @kind object;
  #L42317e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423184.  v0:= "source3 is null" @kind object;
  #L423188.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42318e.  v0:= "source4 is null" @kind object;
  #L423192.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423198.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function4;)Lio/reactivex/functions/Function;` @kind static;
  #L42319e.  v7:= temp @kind object;
  #L4231a0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L4231a6.  v0:= temp;
  #L4231a8.  v1:= 4I;
  #L4231aa.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L4231ae.  v2:= 0I;
  #L4231b0.  v1[v2]:= v3 @kind object;
  #L4231b4.  v3:= 1I;
  #L4231b6.  v1[v3]:= v4 @kind object;
  #L4231ba.  v3:= 2I;
  #L4231bc.  v1[v3]:= v5 @kind object;
  #L4231c0.  v3:= 3I;
  #L4231c2.  v1[v3]:= v6 @kind object;
  #L4231c6.  call temp:= `zipArray`(v7, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L4231cc.  v3:= temp @kind object;
  #L4231ce.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.functions.Function3` v6 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function3;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4231e0.  v0:= "source1 is null" @kind object;
  #L4231e4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4231ea.  v0:= "source2 is null" @kind object;
  #L4231ee.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4231f4.  v0:= "source3 is null" @kind object;
  #L4231f8.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4231fe.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function3;)Lio/reactivex/functions/Function;` @kind static;
  #L423204.  v6:= temp @kind object;
  #L423206.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L42320c.  v0:= temp;
  #L42320e.  v1:= 3I;
  #L423210.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L423214.  v2:= 0I;
  #L423216.  v1[v2]:= v3 @kind object;
  #L42321a.  v3:= 1I;
  #L42321c.  v1[v3]:= v4 @kind object;
  #L423220.  v3:= 2I;
  #L423222.  v1[v3]:= v5 @kind object;
  #L423226.  call temp:= `zipArray`(v6, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L42322c.  v3:= temp @kind object;
  #L42322e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.functions.BiFunction` v5 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L423240.  v0:= "source1 is null" @kind object;
  #L423244.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42324a.  v0:= "source2 is null" @kind object;
  #L42324e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423254.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L42325a.  v5:= temp @kind object;
  #L42325c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L423262.  v0:= temp;
  #L423264.  v1:= 2I;
  #L423266.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L42326a.  v2:= 0I;
  #L42326c.  v1[v2]:= v3 @kind object;
  #L423270.  v3:= 1I;
  #L423272.  v1[v3]:= v4 @kind object;
  #L423276.  call temp:= `zipArray`(v5, v2, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L42327c.  v3:= temp @kind object;
  #L42327e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.functions.BiFunction` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L423290.  v0:= "source1 is null" @kind object;
  #L423294.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42329a.  v0:= "source2 is null" @kind object;
  #L42329e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4232a4.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L4232aa.  v5:= temp @kind object;
  #L4232ac.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L4232b2.  v0:= temp;
  #L4232b4.  v1:= 2I;
  #L4232b6.  v1:= new `io.reactivex.ObservableSource`[v1];
  #L4232ba.  v2:= 0I;
  #L4232bc.  v1[v2]:= v3 @kind object;
  #L4232c0.  v3:= 1I;
  #L4232c2.  v1[v3]:= v4 @kind object;
  #L4232c6.  call temp:= `zipArray`(v5, v6, v0, v1) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L4232cc.  v3:= temp @kind object;
  #L4232ce.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.functions.BiFunction` v4 @kind object, `boolean` v5 , `int` v6 ) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4232e0.  v0:= "source1 is null" @kind object;
  #L4232e4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4232ea.  v0:= "source2 is null" @kind object;
  #L4232ee.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4232f4.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L4232fa.  v4:= temp @kind object;
  #L4232fc.  v0:= 2I;
  #L4232fe.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L423302.  v1:= 0I;
  #L423304.  v0[v1]:= v2 @kind object;
  #L423308.  v2:= 1I;
  #L42330a.  v0[v2]:= v3 @kind object;
  #L42330e.  call temp:= `zipArray`(v4, v5, v6, v0) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L423314.  v2:= temp @kind object;
  #L423316.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L423328.  v0:= "zipper is null" @kind object;
  #L42332c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423332.  v0:= "sources is null" @kind object;
  #L423336.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42333c.  v0:= new `io.reactivex.internal.operators.observable.ObservableToList`;
  #L423340.  v1:= 16I;
  #L423344.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableToList;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L42334a.  call temp:= `zipIterable`(v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.zipIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/Function;` @kind static;
  #L423350.  v2:= temp @kind object;
  #L423352.  call temp:= `flatMap`(v0, v2) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L423358.  v2:= temp @kind object;
  #L42335a.  call temp:= `onAssembly`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L423360.  v2:= temp @kind object;
  #L423362.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `zip`(`java.lang.Iterable` v7 @kind object, `io.reactivex.functions.Function` v8 @kind object) @signature `Lio/reactivex/Observable;.zip:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L423374.  v0:= "zipper is null" @kind object;
  #L423378.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42337e.  v0:= "sources is null" @kind object;
  #L423382.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423388.  v0:= new `io.reactivex.internal.operators.observable.ObservableZip`;
  #L42338c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L423392.  v5:= temp;
  #L423394.  v2:= 0I;
  #L423396.  v6:= 0I;
  #L423398.  v1:= v0 @kind object;
  #L42339a.  v3:= v7 @kind object;
  #L42339c.  v4:= v8 @kind object;
  #L42339e.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L4233a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4233aa.  v7:= temp @kind object;
  #L4233ac.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `zipArray`(`io.reactivex.functions.Function` v7 @kind object, `boolean` v8 , `int` v9 , `io.reactivex.ObservableSource`[] v10 @kind object) @signature `Lio/reactivex/Observable;.zipArray:(Lio/reactivex/functions/Function;ZI[Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4233c0.  v0:= length @variable v10;
  #L4233c2.  if v0 != 0 then goto L4233d0;
  #L4233c6.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L4233cc.  v7:= temp @kind object;
  #L4233ce.  return v7 @kind object;
  #L4233d0.  v0:= "zipper is null" @kind object;
  #L4233d4.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4233da.  v0:= "bufferSize" @kind object;
  #L4233de.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4233e4.  v0:= new `io.reactivex.internal.operators.observable.ObservableZip`;
  #L4233e8.  v3:= 0I;
  #L4233ea.  v1:= v0 @kind object;
  #L4233ec.  v2:= v10 @kind object;
  #L4233ee.  v4:= v7 @kind object;
  #L4233f0.  v5:= v9;
  #L4233f2.  v6:= v8;
  #L4233f4.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L4233fa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L423400.  v7:= temp @kind object;
  #L423402.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `zipIterable`(`java.lang.Iterable` v7 @kind object, `io.reactivex.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lio/reactivex/Observable;.zipIterable:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L423414.  v0:= "zipper is null" @kind object;
  #L423418.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42341e.  v0:= "sources is null" @kind object;
  #L423422.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423428.  v0:= "bufferSize" @kind object;
  #L42342c.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L423432.  v0:= new `io.reactivex.internal.operators.observable.ObservableZip`;
  #L423436.  v2:= 0I;
  #L423438.  v1:= v0 @kind object;
  #L42343a.  v3:= v7 @kind object;
  #L42343c.  v4:= v8 @kind object;
  #L42343e.  v5:= v10;
  #L423440.  v6:= v9;
  #L423442.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableZip;.<init>:([Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L423448.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L42344e.  v7:= temp @kind object;
  #L423450.  return v7 @kind object;
}
procedure `io.reactivex.Single` `all`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.all:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423510.  v0:= "predicate is null" @kind object;
  #L423514.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42351a.  v0:= new `io.reactivex.internal.operators.observable.ObservableAllSingle`;
  #L42351e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableAllSingle;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L423524.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42352a.  v2:= temp @kind object;
  #L42352c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `ambWith`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.ambWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41dce4.  v0:= "other is null" @kind object;
  #L41dce8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41dcee.  v0:= 2I;
  #L41dcf0.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L41dcf4.  v1:= 0I;
  #L41dcf6.  v0[v1]:= v2 @kind object;
  #L41dcfa.  v1:= 1I;
  #L41dcfc.  v0[v1]:= v3 @kind object;
  #L41dd00.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/Observable;.ambArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41dd06.  v3:= temp @kind object;
  #L41dd08.  return v3 @kind object;
}
procedure `io.reactivex.Single` `any`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.any:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423540.  v0:= "predicate is null" @kind object;
  #L423544.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42354a.  v0:= new `io.reactivex.internal.operators.observable.ObservableAnySingle`;
  #L42354e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableAnySingle;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L423554.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42355a.  v2:= temp @kind object;
  #L42355c.  return v2 @kind object;
}
procedure `java.lang.Object` `as`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableConverter` v2 @kind object) @signature `Lio/reactivex/Observable;.as:(Lio/reactivex/ObservableConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423fe4.  v0:= "converter is null" @kind object;
  #L423fe8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423fee.  v2:= temp @kind object;
  #L423ff0.  v2:= (`io.reactivex.ObservableConverter`) v2 @kind object;
  #L423ff4.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/ObservableConverter;.apply:(Lio/reactivex/Observable;)Ljava/lang/Object;` @kind interface;
  #L423ffa.  v2:= temp @kind object;
  #L423ffc.  return v2 @kind object;
}
procedure `java.lang.Object` `blockingFirst`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingFirst:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L424010.  v0:= new `io.reactivex.internal.observers.BlockingFirstObserver`;
  #L424014.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.<init>:()V` @kind direct;
  #L42401a.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L424020.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L424026.  v0:= temp @kind object;
  #L424028.  if v0 == 0 then goto L42402e;
  #L42402c.  return v0 @kind object;
  #L42402e.  v0:= new `java.util.NoSuchElementException`;
  #L424032.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L424038.  throw v0;
}
procedure `java.lang.Object` `blockingFirst`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.blockingFirst:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42404c.  v0:= new `io.reactivex.internal.observers.BlockingFirstObserver`;
  #L424050.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingFirstObserver;.<init>:()V` @kind direct;
  #L424056.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L42405c.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L424062.  v0:= temp @kind object;
  #L424064.  if v0 == 0 then goto L42406a;
  #L424068.  v2:= v0 @kind object;
  #L42406a.  return v2 @kind object;
}
procedure `void` `blockingForEach`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.blockingForEach:(Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4241c8.  call temp:= `blockingIterable`(v2) @signature `Lio/reactivex/Observable;.blockingIterable:()Ljava/lang/Iterable;` @kind virtual;
  #L4241ce.  v0:= temp @kind object;
  #L4241d0.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4241d6.  v0:= temp @kind object;
  #L4241d8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4241de.  v1:= temp;
  #L4241e0.  if v1 == 0 then goto L424210;
  #L4241e4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4241ea.  v1:= temp @kind object;
  #L4241ec.  call `accept`(v3, v1) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4241f2.  goto L4241d8;
  #L4241f4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4241f6.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4241fc.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L424200.  call `dispose`(v0) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L424206.  call temp:= `wrapOrThrow`(v3) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L42420c.  v3:= temp @kind object;
  #L42420e.  throw v3;
  #L424210.  return @kind void;
  catch `java.lang.Throwable` @[L4241e4..L4241f2] goto L4241f4;
}
procedure `java.lang.Iterable` `blockingIterable`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingIterable:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423f44.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L423f4a.  v0:= temp;
  #L423f4c.  call temp:= `blockingIterable`(v1, v0) @signature `Lio/reactivex/Observable;.blockingIterable:(I)Ljava/lang/Iterable;` @kind virtual;
  #L423f52.  v0:= temp @kind object;
  #L423f54.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingIterable`(`io.reactivex.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/Observable;.blockingIterable:(I)Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423f68.  v0:= "bufferSize" @kind object;
  #L423f6c.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L423f72.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableIterable`;
  #L423f76.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableIterable;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L423f7c.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingLast`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingLast:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42407c.  v0:= new `io.reactivex.internal.observers.BlockingLastObserver`;
  #L424080.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingLastObserver;.<init>:()V` @kind direct;
  #L424086.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L42408c.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L424092.  v0:= temp @kind object;
  #L424094.  if v0 == 0 then goto L42409a;
  #L424098.  return v0 @kind object;
  #L42409a.  v0:= new `java.util.NoSuchElementException`;
  #L42409e.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4240a4.  throw v0;
}
procedure `java.lang.Object` `blockingLast`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.blockingLast:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4240b8.  v0:= new `io.reactivex.internal.observers.BlockingLastObserver`;
  #L4240bc.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingLastObserver;.<init>:()V` @kind direct;
  #L4240c2.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L4240c8.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingBaseObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L4240ce.  v0:= temp @kind object;
  #L4240d0.  if v0 == 0 then goto L4240d6;
  #L4240d4.  v2:= v0 @kind object;
  #L4240d6.  return v2 @kind object;
}
procedure `java.lang.Iterable` `blockingLatest`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingLatest:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423f90.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableLatest`;
  #L423f94.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableLatest;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L423f9a.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingMostRecent`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.blockingMostRecent:(Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423fac.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableMostRecent`;
  #L423fb0.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableMostRecent;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L423fb6.  return v0 @kind object;
}
procedure `java.lang.Iterable` `blockingNext`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingNext:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423fc8.  v0:= new `io.reactivex.internal.operators.observable.BlockingObservableNext`;
  #L423fcc.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/BlockingObservableNext;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L423fd2.  return v0 @kind object;
}
procedure `java.lang.Object` `blockingSingle`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.blockingSingle:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4240e8.  call temp:= `singleElement`(v1) @signature `Lio/reactivex/Observable;.singleElement:()Lio/reactivex/Maybe;` @kind virtual;
  #L4240ee.  v0:= temp @kind object;
  #L4240f0.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/Maybe;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L4240f6.  v0:= temp @kind object;
  #L4240f8.  if v0 == 0 then goto L4240fe;
  #L4240fc.  return v0 @kind object;
  #L4240fe.  v0:= new `java.util.NoSuchElementException`;
  #L424102.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L424108.  throw v0;
}
procedure `java.lang.Object` `blockingSingle`(`io.reactivex.Observable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Observable;.blockingSingle:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L42411c.  call temp:= `single`(v0, v1) @signature `Lio/reactivex/Observable;.single:(Ljava/lang/Object;)Lio/reactivex/Single;` @kind virtual;
  #L424122.  v1:= temp @kind object;
  #L424124.  call temp:= `blockingGet`(v1) @signature `Lio/reactivex/Single;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L42412a.  v1:= temp @kind object;
  #L42412c.  return v1 @kind object;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v0 @kind this) @signature `Lio/reactivex/Observable;.blockingSubscribe:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L424230.  call `subscribe`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;)V` @kind static;
  #L424236.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/Observable;.blockingSubscribe:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L424248.  call `subscribe`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;Lio/reactivex/Observer;)V` @kind static;
  #L42424e.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.blockingSubscribe:(Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L424260.  v0:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L424264.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L424268.  call `subscribe`(v2, v3, v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind static;
  #L42426e.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.blockingSubscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L424280.  v0:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L424284.  call `subscribe`(v1, v2, v3, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind static;
  #L42428a.  return @kind void;
}
procedure `void` `blockingSubscribe`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.functions.Consumer` v1 @kind object, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Action` v3 @kind object) @signature `Lio/reactivex/Observable;.blockingSubscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L42429c.  call `subscribe`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableBlockingSubscribe;.subscribe:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind static;
  #L4242a2.  return @kind void;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/Observable;.buffer:(I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L41dd1c.  call temp:= `buffer`(v0, v1, v1) @signature `Lio/reactivex/Observable;.buffer:(II)Lio/reactivex/Observable;` @kind virtual;
  #L41dd22.  v1:= temp @kind object;
  #L41dd24.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/reactivex/Observable;.buffer:(II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41dd38.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L41dd3e.  v0:= temp @kind object;
  #L41dd40.  call temp:= `buffer`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.buffer:(IILjava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L41dd46.  v2:= temp @kind object;
  #L41dd48.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `int` v2 , `int` v3 , `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.buffer:(IILjava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41dd5c.  v0:= "count" @kind object;
  #L41dd60.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41dd66.  v0:= "skip" @kind object;
  #L41dd6a.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41dd70.  v0:= "bufferSupplier is null" @kind object;
  #L41dd74.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41dd7a.  v0:= new `io.reactivex.internal.operators.observable.ObservableBuffer`;
  #L41dd7e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableBuffer;.<init>:(Lio/reactivex/ObservableSource;IILjava/util/concurrent/Callable;)V` @kind direct;
  #L41dd84.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41dd8a.  v2:= temp @kind object;
  #L41dd8c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v0 @kind this, `int` v1 , `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/Observable;.buffer:(ILjava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L41dda0.  call temp:= `buffer`(v0, v1, v1, v2) @signature `Lio/reactivex/Observable;.buffer:(IILjava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L41dda6.  v1:= temp @kind object;
  #L41dda8.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L41e030.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L41e036.  v6:= temp @kind object;
  #L41e038.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L41e03e.  v7:= temp @kind object;
  #L41e040.  v0:= v8 @kind object;
  #L41e042.  v1:= v9 @kind wide;
  #L41e044.  v3:= v11 @kind wide;
  #L41e046.  v5:= v13 @kind object;
  #L41e048.  call temp:= `buffer`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L41e04e.  v9:= temp @kind object;
  #L41e050.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.Scheduler` v14 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L41e064.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L41e06a.  v7:= temp @kind object;
  #L41e06c.  v0:= v8 @kind object;
  #L41e06e.  v1:= v9 @kind wide;
  #L41e070.  v3:= v11 @kind wide;
  #L41e072.  v5:= v13 @kind object;
  #L41e074.  v6:= v14 @kind object;
  #L41e076.  call temp:= `buffer`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L41e07c.  v9:= temp @kind object;
  #L41e07e.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v12 @kind this, `long` v13 , `long` v15 , `java.util.concurrent.TimeUnit` v17 @kind object, `io.reactivex.Scheduler` v18 @kind object, `java.util.concurrent.Callable` v19 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L41e090.  v0:= "unit is null" @kind object;
  #L41e094.  v7:= v17 @kind object;
  #L41e098.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e09e.  v0:= "scheduler is null" @kind object;
  #L41e0a2.  v8:= v18 @kind object;
  #L41e0a6.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e0ac.  v0:= "bufferSupplier is null" @kind object;
  #L41e0b0.  v9:= v19 @kind object;
  #L41e0b4.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e0ba.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferTimed`;
  #L41e0be.  v10:= 2147483647I;
  #L41e0c4.  v11:= 0I;
  #L41e0c6.  v1:= v0 @kind object;
  #L41e0c8.  v2:= v12 @kind object;
  #L41e0ca.  v3:= v13 @kind wide;
  #L41e0cc.  v5:= v15 @kind wide;
  #L41e0ce.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;IZ)V` @kind direct;
  #L41e0d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41e0da.  v0:= temp @kind object;
  #L41e0dc.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41df08.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L41df0e.  v4:= temp @kind object;
  #L41df10.  v5:= 2147483647I;
  #L41df16.  v0:= v6 @kind object;
  #L41df18.  v1:= v7 @kind wide;
  #L41df1a.  v3:= v9 @kind object;
  #L41df1c.  call temp:= `buffer`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @kind virtual;
  #L41df22.  v7:= temp @kind object;
  #L41df24.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `int` v10 ) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41df38.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L41df3e.  v4:= temp @kind object;
  #L41df40.  v0:= v6 @kind object;
  #L41df42.  v1:= v7 @kind wide;
  #L41df44.  v3:= v9 @kind object;
  #L41df46.  v5:= v10;
  #L41df48.  call temp:= `buffer`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @kind virtual;
  #L41df4e.  v7:= temp @kind object;
  #L41df50.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L41df64.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L41df6a.  v6:= temp @kind object;
  #L41df6c.  v5:= 2147483647I;
  #L41df72.  v7:= 0I;
  #L41df74.  v0:= v8 @kind object;
  #L41df76.  v1:= v9 @kind wide;
  #L41df78.  v3:= v11 @kind object;
  #L41df7a.  v4:= v12 @kind object;
  #L41df7c.  call temp:= `buffer`(v0, v1, v3, v4, v5, v6, v7) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ILjava/util/concurrent/Callable;Z)Lio/reactivex/Observable;` @kind virtual;
  #L41df82.  v9:= temp @kind object;
  #L41df84.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `int` v13 ) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L41df98.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L41df9e.  v6:= temp @kind object;
  #L41dfa0.  v7:= 0I;
  #L41dfa2.  v0:= v8 @kind object;
  #L41dfa4.  v1:= v9 @kind wide;
  #L41dfa6.  v3:= v11 @kind object;
  #L41dfa8.  v4:= v12 @kind object;
  #L41dfaa.  v5:= v13;
  #L41dfac.  call temp:= `buffer`(v0, v1, v3, v4, v5, v6, v7) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ILjava/util/concurrent/Callable;Z)Lio/reactivex/Observable;` @kind virtual;
  #L41dfb2.  v9:= temp @kind object;
  #L41dfb4.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v12 @kind this, `long` v13 , `java.util.concurrent.TimeUnit` v15 @kind object, `io.reactivex.Scheduler` v16 @kind object, `int` v17 , `java.util.concurrent.Callable` v18 @kind object, `boolean` v19 ) @signature `Lio/reactivex/Observable;.buffer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ILjava/util/concurrent/Callable;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L41dfc8.  v0:= "unit is null" @kind object;
  #L41dfcc.  v7:= v15 @kind object;
  #L41dfce.  call temp:= `requireNonNull`(v15, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41dfd4.  v0:= "scheduler is null" @kind object;
  #L41dfd8.  v8:= v16 @kind object;
  #L41dfdc.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41dfe2.  v0:= "bufferSupplier is null" @kind object;
  #L41dfe6.  v9:= v18 @kind object;
  #L41dfea.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41dff0.  v0:= "count" @kind object;
  #L41dff4.  v10:= v17;
  #L41dff8.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41dffe.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferTimed`;
  #L41e002.  v1:= v0 @kind object;
  #L41e004.  v2:= v12 @kind object;
  #L41e006.  v3:= v13 @kind wide;
  #L41e008.  v5:= v13 @kind wide;
  #L41e00a.  v11:= v19;
  #L41e00e.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Ljava/util/concurrent/Callable;IZ)V` @kind direct;
  #L41e014.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41e01a.  v0:= temp @kind object;
  #L41e01c.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41ddbc.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L41ddc2.  v0:= temp @kind object;
  #L41ddc4.  call temp:= `buffer`(v1, v2, v0) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L41ddca.  v2:= temp @kind object;
  #L41ddcc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41dde0.  v0:= "initialCapacity" @kind object;
  #L41dde4.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41ddea.  call temp:= `createArrayList`(v3) @signature `Lio/reactivex/internal/functions/Functions;.createArrayList:(I)Ljava/util/concurrent/Callable;` @kind static;
  #L41ddf0.  v3:= temp @kind object;
  #L41ddf2.  call temp:= `buffer`(v1, v2, v3) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L41ddf8.  v2:= temp @kind object;
  #L41ddfa.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41de0c.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L41de12.  v0:= temp @kind object;
  #L41de14.  call temp:= `buffer`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L41de1a.  v2:= temp @kind object;
  #L41de1c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41de30.  v0:= "openingIndicator is null" @kind object;
  #L41de34.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41de3a.  v0:= "closingIndicator is null" @kind object;
  #L41de3e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41de44.  v0:= "bufferSupplier is null" @kind object;
  #L41de48.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41de4e.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferBoundary`;
  #L41de52.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferBoundary;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L41de58.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41de5e.  v2:= temp @kind object;
  #L41de60.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41de74.  v0:= "boundary is null" @kind object;
  #L41de78.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41de7e.  v0:= "bufferSupplier is null" @kind object;
  #L41de82.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41de88.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferExactBoundary`;
  #L41de8c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferExactBoundary;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L41de92.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41de98.  v2:= temp @kind object;
  #L41de9a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41deac.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L41deb2.  v0:= temp @kind object;
  #L41deb4.  call temp:= `buffer`(v1, v2, v0) @signature `Lio/reactivex/Observable;.buffer:(Ljava/util/concurrent/Callable;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L41deba.  v2:= temp @kind object;
  #L41debc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `buffer`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lio/reactivex/Observable;.buffer:(Ljava/util/concurrent/Callable;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41ded0.  v0:= "boundarySupplier is null" @kind object;
  #L41ded4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41deda.  v0:= "bufferSupplier is null" @kind object;
  #L41dede.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41dee4.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier`;
  #L41dee8.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferBoundarySupplier;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L41deee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41def4.  v2:= temp @kind object;
  #L41def6.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `cache`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.cache:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41e0f0.  v0:= 16I;
  #L41e0f4.  call temp:= `cacheWithInitialCapacity`(v1, v0) @signature `Lio/reactivex/Observable;.cacheWithInitialCapacity:(I)Lio/reactivex/Observable;` @kind virtual;
  #L41e0fa.  v0:= temp @kind object;
  #L41e0fc.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `cacheWithInitialCapacity`(`io.reactivex.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/Observable;.cacheWithInitialCapacity:(I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41e110.  v0:= "initialCapacity" @kind object;
  #L41e114.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41e11a.  v0:= new `io.reactivex.internal.operators.observable.ObservableCache`;
  #L41e11e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableCache;.<init>:(Lio/reactivex/Observable;I)V` @kind direct;
  #L41e124.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41e12a.  v2:= temp @kind object;
  #L41e12c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `cast`(`io.reactivex.Observable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/Observable;.cast:(Ljava/lang/Class;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41e140.  v0:= "clazz is null" @kind object;
  #L41e144.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e14a.  call temp:= `castFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.castFunction:(Ljava/lang/Class;)Lio/reactivex/functions/Function;` @kind static;
  #L41e150.  v2:= temp @kind object;
  #L41e152.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L41e158.  v2:= temp @kind object;
  #L41e15a.  return v2 @kind object;
}
procedure `io.reactivex.Single` `collect`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423570.  v0:= "initialValueSupplier is null" @kind object;
  #L423574.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42357a.  v0:= "collector is null" @kind object;
  #L42357e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423584.  v0:= new `io.reactivex.internal.operators.observable.ObservableCollectSingle`;
  #L423588.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableCollectSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L42358e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L423594.  v2:= temp @kind object;
  #L423596.  return v2 @kind object;
}
procedure `io.reactivex.Single` `collectInto`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.functions.BiConsumer` v3 @kind object) @signature `Lio/reactivex/Observable;.collectInto:(Ljava/lang/Object;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4235a8.  v0:= "initialValue is null" @kind object;
  #L4235ac.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4235b2.  call temp:= `justCallable`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justCallable:(Ljava/lang/Object;)Ljava/util/concurrent/Callable;` @kind static;
  #L4235b8.  v2:= temp @kind object;
  #L4235ba.  call temp:= `collect`(v1, v2, v3) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L4235c0.  v2:= temp @kind object;
  #L4235c2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `compose`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableTransformer` v2 @kind object) @signature `Lio/reactivex/Observable;.compose:(Lio/reactivex/ObservableTransformer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41e7d4.  v0:= "composer is null" @kind object;
  #L41e7d8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41e7de.  v2:= temp @kind object;
  #L41e7e0.  v2:= (`io.reactivex.ObservableTransformer`) v2 @kind object;
  #L41e7e4.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/ObservableTransformer;.apply:(Lio/reactivex/Observable;)Lio/reactivex/ObservableSource;` @kind interface;
  #L41e7ea.  v2:= temp @kind object;
  #L41e7ec.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Observable;.wrap:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41e7f2.  v2:= temp @kind object;
  #L41e7f4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.concatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41ec54.  v0:= 2I;
  #L41ec56.  call temp:= `concatMap`(v1, v2, v0) @signature `Lio/reactivex/Observable;.concatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L41ec5c.  v2:= temp @kind object;
  #L41ec5e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMap`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.concatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41ec70.  v0:= "mapper is null" @kind object;
  #L41ec74.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41ec7a.  v0:= "prefetch" @kind object;
  #L41ec7e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41ec84.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L41ec88.  if v0 == 0 then goto L41ecb2;
  #L41ec8c.  v4:= v2 @kind object;
  #L41ec8e.  v4:= (`io.reactivex.internal.fuseable.ScalarCallable`) v4 @kind object;
  #L41ec92.  call temp:= `call`(v4) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L41ec98.  v4:= temp @kind object;
  #L41ec9a.  if v4 != 0 then goto L41eca8;
  #L41ec9e.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L41eca4.  v3:= temp @kind object;
  #L41eca6.  return v3 @kind object;
  #L41eca8.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L41ecae.  v3:= temp @kind object;
  #L41ecb0.  return v3 @kind object;
  #L41ecb2.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L41ecb6.  v1:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41ecba.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L41ecc0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41ecc6.  v3:= temp @kind object;
  #L41ecc8.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `concatMapCompletable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.concatMapCompletable:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41d940.  v0:= 2I;
  #L41d942.  call temp:= `concatMapCompletable`(v1, v2, v0) @signature `Lio/reactivex/Observable;.concatMapCompletable:(Lio/reactivex/functions/Function;I)Lio/reactivex/Completable;` @kind virtual;
  #L41d948.  v2:= temp @kind object;
  #L41d94a.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `concatMapCompletable`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.concatMapCompletable:(Lio/reactivex/functions/Function;I)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41d95c.  v0:= "mapper is null" @kind object;
  #L41d960.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41d966.  v0:= "capacityHint" @kind object;
  #L41d96a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41d970.  v0:= new `io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable`;
  #L41d974.  v1:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41d978.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;I)V` @kind direct;
  #L41d97e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L41d984.  v3:= temp @kind object;
  #L41d986.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `concatMapCompletableDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.concatMapCompletableDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41d998.  v0:= 1I;
  #L41d99a.  v1:= 2I;
  #L41d99c.  call temp:= `concatMapCompletableDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.concatMapCompletableDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Completable;` @kind virtual;
  #L41d9a2.  v3:= temp @kind object;
  #L41d9a4.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `concatMapCompletableDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.concatMapCompletableDelayError:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41d9b8.  v0:= 2I;
  #L41d9ba.  call temp:= `concatMapCompletableDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.concatMapCompletableDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Completable;` @kind virtual;
  #L41d9c0.  v2:= temp @kind object;
  #L41d9c2.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `concatMapCompletableDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.concatMapCompletableDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41d9d4.  v0:= "mapper is null" @kind object;
  #L41d9d8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41d9de.  v0:= "prefetch" @kind object;
  #L41d9e2.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41d9e8.  v0:= new `io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable`;
  #L41d9ec.  if v3 == 0 then goto L41d9f6;
  #L41d9f0.  v3:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41d9f4.  goto L41d9fa;
  #L41d9f6.  v3:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41d9fa.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;I)V` @kind direct;
  #L41da00.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L41da06.  v2:= temp @kind object;
  #L41da08.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.concatMapDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41ecdc.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41ece2.  v0:= temp;
  #L41ece4.  v1:= 1I;
  #L41ece6.  call temp:= `concatMapDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.concatMapDelayError:(Lio/reactivex/functions/Function;IZ)Lio/reactivex/Observable;` @kind virtual;
  #L41ecec.  v3:= temp @kind object;
  #L41ecee.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lio/reactivex/Observable;.concatMapDelayError:(Lio/reactivex/functions/Function;IZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41ed00.  v0:= "mapper is null" @kind object;
  #L41ed04.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41ed0a.  v0:= "prefetch" @kind object;
  #L41ed0e.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41ed14.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L41ed18.  if v0 == 0 then goto L41ed42;
  #L41ed1c.  v3:= v1 @kind object;
  #L41ed1e.  v3:= (`io.reactivex.internal.fuseable.ScalarCallable`) v3 @kind object;
  #L41ed22.  call temp:= `call`(v3) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L41ed28.  v3:= temp @kind object;
  #L41ed2a.  if v3 != 0 then goto L41ed38;
  #L41ed2e.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L41ed34.  v2:= temp @kind object;
  #L41ed36.  return v2 @kind object;
  #L41ed38.  call temp:= `scalarXMap`(v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L41ed3e.  v2:= temp @kind object;
  #L41ed40.  return v2 @kind object;
  #L41ed42.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L41ed46.  if v4 == 0 then goto L41ed50;
  #L41ed4a.  v4:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41ed4e.  goto L41ed54;
  #L41ed50.  v4:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41ed54.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L41ed5a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41ed60.  v2:= temp @kind object;
  #L41ed62.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapEager`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.concatMapEager:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41ed74.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41ed7a.  v0:= temp;
  #L41ed7c.  v1:= 2147483647I;
  #L41ed82.  call temp:= `concatMapEager`(v2, v3, v1, v0) @signature `Lio/reactivex/Observable;.concatMapEager:(Lio/reactivex/functions/Function;II)Lio/reactivex/Observable;` @kind virtual;
  #L41ed88.  v3:= temp @kind object;
  #L41ed8a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapEager`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lio/reactivex/Observable;.concatMapEager:(Lio/reactivex/functions/Function;II)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41ed9c.  v0:= "mapper is null" @kind object;
  #L41eda0.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41eda6.  v0:= "maxConcurrency" @kind object;
  #L41edaa.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41edb0.  v0:= "prefetch" @kind object;
  #L41edb4.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41edba.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMapEager`;
  #L41edbe.  v4:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41edc2.  v1:= v0 @kind object;
  #L41edc4.  v2:= v7 @kind object;
  #L41edc6.  v3:= v8 @kind object;
  #L41edc8.  v5:= v9;
  #L41edca.  v6:= v10;
  #L41edcc.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMapEager;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;II)V` @kind direct;
  #L41edd2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41edd8.  v8:= temp @kind object;
  #L41edda.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `concatMapEagerDelayError`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `int` v9 , `int` v10 , `boolean` v11 ) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;IIZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41ee14.  v0:= "mapper is null" @kind object;
  #L41ee18.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41ee1e.  v0:= "maxConcurrency" @kind object;
  #L41ee22.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41ee28.  v0:= "prefetch" @kind object;
  #L41ee2c.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41ee32.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMapEager`;
  #L41ee36.  if v11 == 0 then goto L41ee40;
  #L41ee3a.  v11:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41ee3e.  goto L41ee44;
  #L41ee40.  v11:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41ee44.  v4:= v11 @kind object;
  #L41ee46.  v1:= v0 @kind object;
  #L41ee48.  v2:= v7 @kind object;
  #L41ee4a.  v3:= v8 @kind object;
  #L41ee4c.  v5:= v9;
  #L41ee4e.  v6:= v10;
  #L41ee50.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMapEager;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;II)V` @kind direct;
  #L41ee56.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41ee5c.  v8:= temp @kind object;
  #L41ee5e.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `concatMapEagerDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41edec.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41edf2.  v0:= temp;
  #L41edf4.  v1:= 2147483647I;
  #L41edfa.  call temp:= `concatMapEagerDelayError`(v2, v3, v1, v0, v4) @signature `Lio/reactivex/Observable;.concatMapEagerDelayError:(Lio/reactivex/functions/Function;IIZ)Lio/reactivex/Observable;` @kind virtual;
  #L41ee00.  v3:= temp @kind object;
  #L41ee02.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapIterable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.concatMapIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41ee70.  v0:= "mapper is null" @kind object;
  #L41ee74.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41ee7a.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlattenIterable`;
  #L41ee7e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L41ee84.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41ee8a.  v2:= temp @kind object;
  #L41ee8c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapIterable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.concatMapIterable:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41eea0.  v0:= "mapper is null" @kind object;
  #L41eea4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41eeaa.  v0:= "prefetch" @kind object;
  #L41eeae.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41eeb4.  call temp:= `flatMapIntoIterable`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.flatMapIntoIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/Function;` @kind static;
  #L41eeba.  v2:= temp @kind object;
  #L41eebc.  call temp:= `concatMap`(v1, v2, v3) @signature `Lio/reactivex/Observable;.concatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L41eec2.  v2:= temp @kind object;
  #L41eec4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapMaybe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.concatMapMaybe:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41eed8.  v0:= 2I;
  #L41eeda.  call temp:= `concatMapMaybe`(v1, v2, v0) @signature `Lio/reactivex/Observable;.concatMapMaybe:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L41eee0.  v2:= temp @kind object;
  #L41eee2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapMaybe`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.concatMapMaybe:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41eef4.  v0:= "mapper is null" @kind object;
  #L41eef8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41eefe.  v0:= "prefetch" @kind object;
  #L41ef02.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41ef08.  v0:= new `io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe`;
  #L41ef0c.  v1:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41ef10.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapMaybe;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;I)V` @kind direct;
  #L41ef16.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41ef1c.  v3:= temp @kind object;
  #L41ef1e.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapMaybeDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.concatMapMaybeDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41ef30.  v0:= 1I;
  #L41ef32.  v1:= 2I;
  #L41ef34.  call temp:= `concatMapMaybeDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.concatMapMaybeDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L41ef3a.  v3:= temp @kind object;
  #L41ef3c.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapMaybeDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.concatMapMaybeDelayError:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41ef50.  v0:= 2I;
  #L41ef52.  call temp:= `concatMapMaybeDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.concatMapMaybeDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L41ef58.  v2:= temp @kind object;
  #L41ef5a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapMaybeDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.concatMapMaybeDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41ef6c.  v0:= "mapper is null" @kind object;
  #L41ef70.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41ef76.  v0:= "prefetch" @kind object;
  #L41ef7a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41ef80.  v0:= new `io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe`;
  #L41ef84.  if v3 == 0 then goto L41ef8e;
  #L41ef88.  v3:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41ef8c.  goto L41ef92;
  #L41ef8e.  v3:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41ef92.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapMaybe;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;I)V` @kind direct;
  #L41ef98.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41ef9e.  v2:= temp @kind object;
  #L41efa0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapSingle`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.concatMapSingle:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41efb4.  v0:= 2I;
  #L41efb6.  call temp:= `concatMapSingle`(v1, v2, v0) @signature `Lio/reactivex/Observable;.concatMapSingle:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L41efbc.  v2:= temp @kind object;
  #L41efbe.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapSingle`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.concatMapSingle:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41efd0.  v0:= "mapper is null" @kind object;
  #L41efd4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41efda.  v0:= "prefetch" @kind object;
  #L41efde.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41efe4.  v0:= new `io.reactivex.internal.operators.mixed.ObservableConcatMapSingle`;
  #L41efe8.  v1:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41efec.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapSingle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;I)V` @kind direct;
  #L41eff2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41eff8.  v3:= temp @kind object;
  #L41effa.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapSingleDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.concatMapSingleDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41f00c.  v0:= 1I;
  #L41f00e.  v1:= 2I;
  #L41f010.  call temp:= `concatMapSingleDelayError`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.concatMapSingleDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L41f016.  v3:= temp @kind object;
  #L41f018.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concatMapSingleDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.concatMapSingleDelayError:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f02c.  v0:= 2I;
  #L41f02e.  call temp:= `concatMapSingleDelayError`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.concatMapSingleDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L41f034.  v2:= temp @kind object;
  #L41f036.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatMapSingleDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.concatMapSingleDelayError:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f048.  v0:= "mapper is null" @kind object;
  #L41f04c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f052.  v0:= "prefetch" @kind object;
  #L41f056.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41f05c.  v0:= new `io.reactivex.internal.operators.mixed.ObservableConcatMapSingle`;
  #L41f060.  if v3 == 0 then goto L41f06a;
  #L41f064.  v3:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41f068.  goto L41f06e;
  #L41f06a.  v3:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L41f06e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapSingle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Lio/reactivex/internal/util/ErrorMode;I)V` @kind direct;
  #L41f074.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f07a.  v2:= temp @kind object;
  #L41f07c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f090.  v0:= "other is null" @kind object;
  #L41f094.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f09a.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatWithCompletable`;
  #L41f09e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatWithCompletable;.<init>:(Lio/reactivex/Observable;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L41f0a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f0aa.  v2:= temp @kind object;
  #L41f0ac.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.MaybeSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatWith:(Lio/reactivex/MaybeSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f0c0.  v0:= "other is null" @kind object;
  #L41f0c4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f0ca.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatWithMaybe`;
  #L41f0ce.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatWithMaybe;.<init>:(Lio/reactivex/Observable;Lio/reactivex/MaybeSource;)V` @kind direct;
  #L41f0d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f0da.  v2:= temp @kind object;
  #L41f0dc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f0f0.  v0:= "other is null" @kind object;
  #L41f0f4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f0fa.  call temp:= `concat`(v1, v2) @signature `Lio/reactivex/Observable;.concat:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41f100.  v2:= temp @kind object;
  #L41f102.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `concatWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Observable;.concatWith:(Lio/reactivex/SingleSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f114.  v0:= "other is null" @kind object;
  #L41f118.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f11e.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatWithSingle`;
  #L41f122.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatWithSingle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/SingleSource;)V` @kind direct;
  #L41f128.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f12e.  v2:= temp @kind object;
  #L41f130.  return v2 @kind object;
}
procedure `io.reactivex.Single` `contains`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.contains:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4235d4.  v0:= "element is null" @kind object;
  #L4235d8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4235de.  call temp:= `equalsWith`(v2) @signature `Lio/reactivex/internal/functions/Functions;.equalsWith:(Ljava/lang/Object;)Lio/reactivex/functions/Predicate;` @kind static;
  #L4235e4.  v2:= temp @kind object;
  #L4235e6.  call temp:= `any`(v1, v2) @signature `Lio/reactivex/Observable;.any:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @kind virtual;
  #L4235ec.  v2:= temp @kind object;
  #L4235ee.  return v2 @kind object;
}
procedure `io.reactivex.Single` `count`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.count:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423600.  v0:= new `io.reactivex.internal.operators.observable.ObservableCountSingle`;
  #L423604.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableCountSingle;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L42360a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L423610.  v0:= temp @kind object;
  #L423612.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `debounce`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f1a4.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L41f1aa.  v0:= temp @kind object;
  #L41f1ac.  call temp:= `debounce`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L41f1b2.  v2:= temp @kind object;
  #L41f1b4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `debounce`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41f1c8.  v0:= "unit is null" @kind object;
  #L41f1cc.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f1d2.  v0:= "scheduler is null" @kind object;
  #L41f1d6.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f1dc.  v0:= new `io.reactivex.internal.operators.observable.ObservableDebounceTimed`;
  #L41f1e0.  v1:= v0 @kind object;
  #L41f1e2.  v2:= v7 @kind object;
  #L41f1e4.  v3:= v8 @kind wide;
  #L41f1e6.  v5:= v10 @kind object;
  #L41f1e8.  v6:= v11 @kind object;
  #L41f1ea.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounceTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L41f1f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f1f6.  v8:= temp @kind object;
  #L41f1f8.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `debounce`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.debounce:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f174.  v0:= "debounceSelector is null" @kind object;
  #L41f178.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f17e.  v0:= new `io.reactivex.internal.operators.observable.ObservableDebounce`;
  #L41f182.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDebounce;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L41f188.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f18e.  v2:= temp @kind object;
  #L41f190.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `defaultIfEmpty`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.defaultIfEmpty:(Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f20c.  v0:= "defaultItem is null" @kind object;
  #L41f210.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f216.  call temp:= `just`(v2) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L41f21c.  v2:= temp @kind object;
  #L41f21e.  call temp:= `switchIfEmpty`(v1, v2) @signature `Lio/reactivex/Observable;.switchIfEmpty:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L41f224.  v2:= temp @kind object;
  #L41f226.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41f2b8.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L41f2be.  v4:= temp @kind object;
  #L41f2c0.  v5:= 0I;
  #L41f2c2.  v0:= v6 @kind object;
  #L41f2c4.  v1:= v7 @kind wide;
  #L41f2c6.  v3:= v9 @kind object;
  #L41f2c8.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L41f2ce.  v7:= temp @kind object;
  #L41f2d0.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41f310.  v5:= 0I;
  #L41f312.  v0:= v6 @kind object;
  #L41f314.  v1:= v7 @kind wide;
  #L41f316.  v3:= v9 @kind object;
  #L41f318.  v4:= v10 @kind object;
  #L41f31a.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L41f320.  v7:= temp @kind object;
  #L41f322.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L41f334.  v0:= "unit is null" @kind object;
  #L41f338.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f33e.  v0:= "scheduler is null" @kind object;
  #L41f342.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f348.  v0:= new `io.reactivex.internal.operators.observable.ObservableDelay`;
  #L41f34c.  v1:= v0 @kind object;
  #L41f34e.  v2:= v8 @kind object;
  #L41f350.  v3:= v9 @kind wide;
  #L41f352.  v5:= v11 @kind object;
  #L41f354.  v6:= v12 @kind object;
  #L41f356.  v7:= v13;
  #L41f358.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableDelay;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L41f35e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f364.  v9:= temp @kind object;
  #L41f366.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41f2e4.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L41f2ea.  v4:= temp @kind object;
  #L41f2ec.  v0:= v6 @kind object;
  #L41f2ee.  v1:= v7 @kind wide;
  #L41f2f0.  v3:= v9 @kind object;
  #L41f2f2.  v5:= v10;
  #L41f2f4.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L41f2fa.  v7:= temp @kind object;
  #L41f2fc.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.delay:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L41f268.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/Observable;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L41f26e.  v1:= temp @kind object;
  #L41f270.  call temp:= `delay`(v1, v2) @signature `Lio/reactivex/Observable;.delay:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L41f276.  v1:= temp @kind object;
  #L41f278.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `delay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.delay:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f28c.  v0:= "itemDelay is null" @kind object;
  #L41f290.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f296.  call temp:= `itemDelay`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.itemDelay:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/Function;` @kind static;
  #L41f29c.  v2:= temp @kind object;
  #L41f29e.  call temp:= `flatMap`(v1, v2) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L41f2a4.  v2:= temp @kind object;
  #L41f2a6.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `delaySubscription`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f3a8.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L41f3ae.  v0:= temp @kind object;
  #L41f3b0.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L41f3b6.  v2:= temp @kind object;
  #L41f3b8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `delaySubscription`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L41f3cc.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L41f3d2.  v1:= temp @kind object;
  #L41f3d4.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/Observable;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L41f3da.  v1:= temp @kind object;
  #L41f3dc.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `delaySubscription`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f378.  v0:= "other is null" @kind object;
  #L41f37c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f382.  v0:= new `io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther`;
  #L41f386.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDelaySubscriptionOther;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L41f38c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f392.  v2:= temp @kind object;
  #L41f394.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `dematerialize`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.dematerialize:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41f3f0.  v0:= new `io.reactivex.internal.operators.observable.ObservableDematerialize`;
  #L41f3f4.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L41f3fa.  v1:= temp @kind object;
  #L41f3fc.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L41f402.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f408.  v0:= temp @kind object;
  #L41f40a.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `dematerialize`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.dematerialize:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f41c.  v0:= "selector is null" @kind object;
  #L41f420.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f426.  v0:= new `io.reactivex.internal.operators.observable.ObservableDematerialize`;
  #L41f42a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDematerialize;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L41f430.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f436.  v2:= temp @kind object;
  #L41f438.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `distinct`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.distinct:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41f44c.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L41f452.  v0:= temp @kind object;
  #L41f454.  call temp:= `createHashSet`() @signature `Lio/reactivex/internal/functions/Functions;.createHashSet:()Ljava/util/concurrent/Callable;` @kind static;
  #L41f45a.  v1:= temp @kind object;
  #L41f45c.  call temp:= `distinct`(v2, v0, v1) @signature `Lio/reactivex/Observable;.distinct:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L41f462.  v0:= temp @kind object;
  #L41f464.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `distinct`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.distinct:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f478.  call temp:= `createHashSet`() @signature `Lio/reactivex/internal/functions/Functions;.createHashSet:()Ljava/util/concurrent/Callable;` @kind static;
  #L41f47e.  v0:= temp @kind object;
  #L41f480.  call temp:= `distinct`(v1, v2, v0) @signature `Lio/reactivex/Observable;.distinct:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @kind virtual;
  #L41f486.  v2:= temp @kind object;
  #L41f488.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `distinct`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lio/reactivex/Observable;.distinct:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f49c.  v0:= "keySelector is null" @kind object;
  #L41f4a0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f4a6.  v0:= "collectionSupplier is null" @kind object;
  #L41f4aa.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f4b0.  v0:= new `io.reactivex.internal.operators.observable.ObservableDistinct`;
  #L41f4b4.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableDistinct;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L41f4ba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f4c0.  v2:= temp @kind object;
  #L41f4c2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `distinctUntilChanged`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.distinctUntilChanged:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f4d4.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L41f4da.  v0:= temp @kind object;
  #L41f4dc.  call temp:= `distinctUntilChanged`(v1, v0) @signature `Lio/reactivex/Observable;.distinctUntilChanged:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L41f4e2.  v0:= temp @kind object;
  #L41f4e4.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `distinctUntilChanged`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/Observable;.distinctUntilChanged:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41f4f8.  v0:= "comparer is null" @kind object;
  #L41f4fc.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f502.  v0:= new `io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged`;
  #L41f506.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L41f50c.  v1:= temp @kind object;
  #L41f50e.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableDistinctUntilChanged;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiPredicate;)V` @kind direct;
  #L41f514.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f51a.  v3:= temp @kind object;
  #L41f51c.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `distinctUntilChanged`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.distinctUntilChanged:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41f530.  v0:= "keySelector is null" @kind object;
  #L41f534.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f53a.  v0:= new `io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged`;
  #L41f53e.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/functions/BiPredicate;` @kind static;
  #L41f544.  v1:= temp @kind object;
  #L41f546.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDistinctUntilChanged;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiPredicate;)V` @kind direct;
  #L41f54c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f552.  v3:= temp @kind object;
  #L41f554.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `doAfterNext`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Observable;.doAfterNext:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f568.  v0:= "onAfterNext is null" @kind object;
  #L41f56c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f572.  v0:= new `io.reactivex.internal.operators.observable.ObservableDoAfterNext`;
  #L41f576.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDoAfterNext;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L41f57c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f582.  v2:= temp @kind object;
  #L41f584.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doAfterTerminate`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.doAfterTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L41f598.  v0:= "onFinally is null" @kind object;
  #L41f59c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f5a2.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L41f5a8.  v0:= temp @kind object;
  #L41f5aa.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L41f5b0.  v1:= temp @kind object;
  #L41f5b2.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L41f5b6.  call temp:= `a`(v3, v0, v1, v2, v4) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L41f5bc.  v4:= temp @kind object;
  #L41f5be.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `doFinally`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Observable;.doFinally:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f5d0.  v0:= "onFinally is null" @kind object;
  #L41f5d4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f5da.  v0:= new `io.reactivex.internal.operators.observable.ObservableDoFinally`;
  #L41f5de.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L41f5e4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f5ea.  v2:= temp @kind object;
  #L41f5ec.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doOnComplete`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.doOnComplete:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L41f600.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L41f606.  v0:= temp @kind object;
  #L41f608.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L41f60e.  v1:= temp @kind object;
  #L41f610.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L41f614.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L41f61a.  v4:= temp @kind object;
  #L41f61c.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `doOnDispose`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Observable;.doOnDispose:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f630.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L41f636.  v0:= temp @kind object;
  #L41f638.  call temp:= `doOnLifecycle`(v1, v0, v2) @signature `Lio/reactivex/Observable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind virtual;
  #L41f63e.  v2:= temp @kind object;
  #L41f640.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doOnEach`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.Observer` v4 @kind object) @signature `Lio/reactivex/Observable;.doOnEach:(Lio/reactivex/Observer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L41f654.  v0:= "observer is null" @kind object;
  #L41f658.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f65e.  call temp:= `observerOnNext`(v4) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.observerOnNext:(Lio/reactivex/Observer;)Lio/reactivex/functions/Consumer;` @kind static;
  #L41f664.  v0:= temp @kind object;
  #L41f666.  call temp:= `observerOnError`(v4) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.observerOnError:(Lio/reactivex/Observer;)Lio/reactivex/functions/Consumer;` @kind static;
  #L41f66c.  v1:= temp @kind object;
  #L41f66e.  call temp:= `observerOnComplete`(v4) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.observerOnComplete:(Lio/reactivex/Observer;)Lio/reactivex/functions/Action;` @kind static;
  #L41f674.  v4:= temp @kind object;
  #L41f676.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L41f67a.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L41f680.  v4:= temp @kind object;
  #L41f682.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `doOnEach`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/Observable;.doOnEach:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L41f694.  v0:= "onNotification is null" @kind object;
  #L41f698.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f69e.  call temp:= `notificationOnNext`(v4) @signature `Lio/reactivex/internal/functions/Functions;.notificationOnNext:(Lio/reactivex/functions/Consumer;)Lio/reactivex/functions/Consumer;` @kind static;
  #L41f6a4.  v0:= temp @kind object;
  #L41f6a6.  call temp:= `notificationOnError`(v4) @signature `Lio/reactivex/internal/functions/Functions;.notificationOnError:(Lio/reactivex/functions/Consumer;)Lio/reactivex/functions/Consumer;` @kind static;
  #L41f6ac.  v1:= temp @kind object;
  #L41f6ae.  call temp:= `notificationOnComplete`(v4) @signature `Lio/reactivex/internal/functions/Functions;.notificationOnComplete:(Lio/reactivex/functions/Consumer;)Lio/reactivex/functions/Action;` @kind static;
  #L41f6b4.  v4:= temp @kind object;
  #L41f6b6.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L41f6ba.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L41f6c0.  v4:= temp @kind object;
  #L41f6c2.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `doOnError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.doOnError:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41f72c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L41f732.  v0:= temp @kind object;
  #L41f734.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L41f738.  call temp:= `a`(v2, v0, v3, v1, v1) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L41f73e.  v3:= temp @kind object;
  #L41f740.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `doOnLifecycle`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Action` v3 @kind object) @signature `Lio/reactivex/Observable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f754.  v0:= "onSubscribe is null" @kind object;
  #L41f758.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f75e.  v0:= "onDispose is null" @kind object;
  #L41f762.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f768.  v0:= new `io.reactivex.internal.operators.observable.ObservableDoOnLifecycle`;
  #L41f76c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableDoOnLifecycle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind direct;
  #L41f772.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f778.  v2:= temp @kind object;
  #L41f77a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doOnNext`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.doOnNext:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41f78c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L41f792.  v0:= temp @kind object;
  #L41f794.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L41f798.  call temp:= `a`(v2, v3, v0, v1, v1) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L41f79e.  v3:= temp @kind object;
  #L41f7a0.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `doOnSubscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Observable;.doOnSubscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f7b4.  v0:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L41f7b8.  call temp:= `doOnLifecycle`(v1, v2, v0) @signature `Lio/reactivex/Observable;.doOnLifecycle:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind virtual;
  #L41f7be.  v2:= temp @kind object;
  #L41f7c0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `doOnTerminate`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.doOnTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L41f7d4.  v0:= "onTerminate is null" @kind object;
  #L41f7d8.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f7de.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L41f7e4.  v0:= temp @kind object;
  #L41f7e6.  call temp:= `actionConsumer`(v4) @signature `Lio/reactivex/internal/functions/Functions;.actionConsumer:(Lio/reactivex/functions/Action;)Lio/reactivex/functions/Consumer;` @kind static;
  #L41f7ec.  v1:= temp @kind object;
  #L41f7ee.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L41f7f2.  call temp:= `a`(v3, v0, v1, v4, v2) @signature `Lio/reactivex/Observable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Observable;` @kind direct;
  #L41f7f8.  v4:= temp @kind object;
  #L41f7fa.  return v4 @kind object;
}
procedure `io.reactivex.Maybe` `elementAt`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.elementAt:(J)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L41db64.  v0:= 0L;
  #L41db68.  v2:= lcmp(v4, v0);
  #L41db6c.  if v2 < 0 then goto L41db84;
  #L41db70.  v0:= new `io.reactivex.internal.operators.observable.ObservableElementAtMaybe`;
  #L41db74.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtMaybe;.<init>:(Lio/reactivex/ObservableSource;J)V` @kind direct;
  #L41db7a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L41db80.  v4:= temp @kind object;
  #L41db82.  return v4 @kind object;
  #L41db84.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L41db88.  v1:= new `java.lang.StringBuilder`;
  #L41db8c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41db92.  v2:= "index >= 0 required but it was " @kind object;
  #L41db96.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41db9c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L41dba2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41dba8.  v4:= temp @kind object;
  #L41dbaa.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41dbb0.  throw v0;
}
procedure `io.reactivex.Single` `elementAt`(`io.reactivex.Observable` v3 @kind this, `long` v4 , `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/Observable;.elementAt:(JLjava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L423624.  v0:= 0L;
  #L423628.  v2:= lcmp(v4, v0);
  #L42362c.  if v2 < 0 then goto L42364e;
  #L423630.  v0:= "defaultItem is null" @kind object;
  #L423634.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42363a.  v0:= new `io.reactivex.internal.operators.observable.ObservableElementAtSingle`;
  #L42363e.  call `<init>`(v0, v3, v4, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtSingle;.<init>:(Lio/reactivex/ObservableSource;JLjava/lang/Object;)V` @kind direct;
  #L423644.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42364a.  v4:= temp @kind object;
  #L42364c.  return v4 @kind object;
  #L42364e.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L423652.  v0:= new `java.lang.StringBuilder`;
  #L423656.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42365c.  v1:= "index >= 0 required but it was " @kind object;
  #L423660.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L423666.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L42366c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L423672.  v4:= temp @kind object;
  #L423674.  call `<init>`(v6, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42367a.  throw v6;
}
procedure `io.reactivex.Single` `elementAtOrError`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.elementAtOrError:(J)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L42368c.  v0:= 0L;
  #L423690.  v2:= lcmp(v4, v0);
  #L423694.  if v2 < 0 then goto L4236ae;
  #L423698.  v0:= new `io.reactivex.internal.operators.observable.ObservableElementAtSingle`;
  #L42369c.  v1:= 0I;
  #L42369e.  call `<init>`(v0, v3, v4, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableElementAtSingle;.<init>:(Lio/reactivex/ObservableSource;JLjava/lang/Object;)V` @kind direct;
  #L4236a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4236aa.  v4:= temp @kind object;
  #L4236ac.  return v4 @kind object;
  #L4236ae.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L4236b2.  v1:= new `java.lang.StringBuilder`;
  #L4236b6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4236bc.  v2:= "index >= 0 required but it was " @kind object;
  #L4236c0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4236c6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4236cc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4236d2.  v4:= temp @kind object;
  #L4236d4.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4236da.  throw v0;
}
procedure `io.reactivex.Observable` `filter`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.filter:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f888.  v0:= "predicate is null" @kind object;
  #L41f88c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f892.  v0:= new `io.reactivex.internal.operators.observable.ObservableFilter`;
  #L41f896.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFilter;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L41f89c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f8a2.  v2:= temp @kind object;
  #L41f8a4.  return v2 @kind object;
}
procedure `io.reactivex.Single` `first`(`io.reactivex.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Observable;.first:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4236ec.  v0:= 0L;
  #L4236f0.  call temp:= `elementAt`(v2, v0, v3) @signature `Lio/reactivex/Observable;.elementAt:(JLjava/lang/Object;)Lio/reactivex/Single;` @kind virtual;
  #L4236f6.  v3:= temp @kind object;
  #L4236f8.  return v3 @kind object;
}
procedure `io.reactivex.Maybe` `firstElement`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.firstElement:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41dbc4.  v0:= 0L;
  #L41dbc8.  call temp:= `elementAt`(v2, v0) @signature `Lio/reactivex/Observable;.elementAt:(J)Lio/reactivex/Maybe;` @kind virtual;
  #L41dbce.  v0:= temp @kind object;
  #L41dbd0.  return v0 @kind object;
}
procedure `io.reactivex.Single` `firstOrError`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.firstOrError:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L42370c.  v0:= 0L;
  #L423710.  call temp:= `elementAtOrError`(v2, v0) @signature `Lio/reactivex/Observable;.elementAtOrError:(J)Lio/reactivex/Single;` @kind virtual;
  #L423716.  v0:= temp @kind object;
  #L423718.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f8b8.  v0:= 0I;
  #L41f8ba.  call temp:= `flatMap`(v1, v2, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @kind virtual;
  #L41f8c0.  v2:= temp @kind object;
  #L41f8c2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41f994.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41f99a.  v0:= temp;
  #L41f99c.  v1:= 0I;
  #L41f99e.  call temp:= `flatMap`(v2, v3, v1, v4, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L41f9a4.  v3:= temp @kind object;
  #L41f9a6.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `io.reactivex.functions.BiFunction` v8 @kind object) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41f9b8.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41f9be.  v4:= temp;
  #L41f9c0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41f9c6.  v5:= temp;
  #L41f9c8.  v3:= 0I;
  #L41f9ca.  v0:= v6 @kind object;
  #L41f9cc.  v1:= v7 @kind object;
  #L41f9ce.  v2:= v8 @kind object;
  #L41f9d0.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L41f9d6.  v7:= temp @kind object;
  #L41f9d8.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `io.reactivex.functions.BiFunction` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41fa84.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41fa8a.  v5:= temp;
  #L41fa8c.  v3:= 0I;
  #L41fa8e.  v0:= v6 @kind object;
  #L41fa90.  v1:= v7 @kind object;
  #L41fa92.  v2:= v8 @kind object;
  #L41fa94.  v4:= v9;
  #L41fa96.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L41fa9c.  v7:= temp @kind object;
  #L41fa9e.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `io.reactivex.functions.BiFunction` v8 @kind object, `boolean` v9 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41f9ec.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41f9f2.  v4:= temp;
  #L41f9f4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41f9fa.  v5:= temp;
  #L41f9fc.  v0:= v6 @kind object;
  #L41f9fe.  v1:= v7 @kind object;
  #L41fa00.  v2:= v8 @kind object;
  #L41fa02.  v3:= v9;
  #L41fa04.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L41fa0a.  v7:= temp @kind object;
  #L41fa0c.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `io.reactivex.functions.BiFunction` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41fa20.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41fa26.  v5:= temp;
  #L41fa28.  v0:= v6 @kind object;
  #L41fa2a.  v1:= v7 @kind object;
  #L41fa2c.  v2:= v8 @kind object;
  #L41fa2e.  v3:= v9;
  #L41fa30.  v4:= v10;
  #L41fa32.  call temp:= `flatMap`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L41fa38.  v7:= temp @kind object;
  #L41fa3a.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41fa4c.  v0:= "mapper is null" @kind object;
  #L41fa50.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fa56.  v0:= "combiner is null" @kind object;
  #L41fa5a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fa60.  call temp:= `flatMapWithCombiner`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.flatMapWithCombiner:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L41fa66.  v2:= temp @kind object;
  #L41fa68.  call temp:= `flatMap`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L41fa6e.  v2:= temp @kind object;
  #L41fa70.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41fab0.  v0:= "onNextMapper is null" @kind object;
  #L41fab4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41faba.  v0:= "onErrorMapper is null" @kind object;
  #L41fabe.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fac4.  v0:= "onCompleteSupplier is null" @kind object;
  #L41fac8.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41face.  v0:= new `io.reactivex.internal.operators.observable.ObservableMapNotification`;
  #L41fad2.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableMapNotification;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L41fad8.  call temp:= `merge`(v0) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L41fade.  v2:= temp @kind object;
  #L41fae0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object, `int` v5 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41faf4.  v0:= "onNextMapper is null" @kind object;
  #L41faf8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fafe.  v0:= "onErrorMapper is null" @kind object;
  #L41fb02.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fb08.  v0:= "onCompleteSupplier is null" @kind object;
  #L41fb0c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fb12.  v0:= new `io.reactivex.internal.operators.observable.ObservableMapNotification`;
  #L41fb16.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableMapNotification;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L41fb1c.  call temp:= `merge`(v0, v5) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind static;
  #L41fb22.  v2:= temp @kind object;
  #L41fb24.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f8d4.  v0:= 2147483647I;
  #L41f8da.  call temp:= `flatMap`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L41f8e0.  v2:= temp @kind object;
  #L41f8e2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41f8f4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41f8fa.  v0:= temp;
  #L41f8fc.  call temp:= `flatMap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L41f902.  v2:= temp @kind object;
  #L41f904.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMap`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `boolean` v9 , `int` v10 , `int` v11 ) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;ZII)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41f918.  v0:= "mapper is null" @kind object;
  #L41f91c.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41f922.  v0:= "maxConcurrency" @kind object;
  #L41f926.  call temp:= `verifyPositive`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41f92c.  v0:= "bufferSize" @kind object;
  #L41f930.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41f936.  v0:= instanceof @variable v7 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L41f93a.  if v0 == 0 then goto L41f964;
  #L41f93e.  v9:= v7 @kind object;
  #L41f940.  v9:= (`io.reactivex.internal.fuseable.ScalarCallable`) v9 @kind object;
  #L41f944.  call temp:= `call`(v9) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L41f94a.  v9:= temp @kind object;
  #L41f94c.  if v9 != 0 then goto L41f95a;
  #L41f950.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L41f956.  v8:= temp @kind object;
  #L41f958.  return v8 @kind object;
  #L41f95a.  call temp:= `scalarXMap`(v9, v8) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L41f960.  v8:= temp @kind object;
  #L41f962.  return v8 @kind object;
  #L41f964.  v6:= new `io.reactivex.internal.operators.observable.ObservableFlatMap`;
  #L41f968.  v0:= v6 @kind object;
  #L41f96a.  v1:= v7 @kind object;
  #L41f96c.  v2:= v8 @kind object;
  #L41f96e.  v3:= v9;
  #L41f970.  v4:= v10;
  #L41f972.  v5:= v11;
  #L41f974.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L41f97a.  call temp:= `onAssembly`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41f980.  v8:= temp @kind object;
  #L41f982.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `flatMapCompletable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMapCompletable:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41da1c.  v0:= 0I;
  #L41da1e.  call temp:= `flatMapCompletable`(v1, v2, v0) @signature `Lio/reactivex/Observable;.flatMapCompletable:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Completable;` @kind virtual;
  #L41da24.  v2:= temp @kind object;
  #L41da26.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `flatMapCompletable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.flatMapCompletable:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41da38.  v0:= "mapper is null" @kind object;
  #L41da3c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41da42.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable`;
  #L41da46.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletableCompletable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L41da4c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L41da52.  v2:= temp @kind object;
  #L41da54.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapIterable`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMapIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41fb38.  v0:= "mapper is null" @kind object;
  #L41fb3c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fb42.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlattenIterable`;
  #L41fb46.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFlattenIterable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L41fb4c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41fb52.  v2:= temp @kind object;
  #L41fb54.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapIterable`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `io.reactivex.functions.BiFunction` v9 @kind object) @signature `Lio/reactivex/Observable;.flatMapIterable:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41fb68.  v0:= "mapper is null" @kind object;
  #L41fb6c.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fb72.  v0:= "resultSelector is null" @kind object;
  #L41fb76.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fb7c.  call temp:= `flatMapIntoIterable`(v8) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.flatMapIntoIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/Function;` @kind static;
  #L41fb82.  v2:= temp @kind object;
  #L41fb84.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41fb8a.  v5:= temp;
  #L41fb8c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41fb92.  v6:= temp;
  #L41fb94.  v4:= 0I;
  #L41fb96.  v1:= v7 @kind object;
  #L41fb98.  v3:= v9 @kind object;
  #L41fb9a.  call temp:= `flatMap`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.flatMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;ZII)Lio/reactivex/Observable;` @kind virtual;
  #L41fba0.  v8:= temp @kind object;
  #L41fba2.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `flatMapMaybe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMapMaybe:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41fbb4.  v0:= 0I;
  #L41fbb6.  call temp:= `flatMapMaybe`(v1, v2, v0) @signature `Lio/reactivex/Observable;.flatMapMaybe:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @kind virtual;
  #L41fbbc.  v2:= temp @kind object;
  #L41fbbe.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapMaybe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.flatMapMaybe:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41fbd0.  v0:= "mapper is null" @kind object;
  #L41fbd4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fbda.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMapMaybe`;
  #L41fbde.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapMaybe;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L41fbe4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41fbea.  v2:= temp @kind object;
  #L41fbec.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapSingle`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.flatMapSingle:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41fc00.  v0:= 0I;
  #L41fc02.  call temp:= `flatMapSingle`(v1, v2, v0) @signature `Lio/reactivex/Observable;.flatMapSingle:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @kind virtual;
  #L41fc08.  v2:= temp @kind object;
  #L41fc0a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapSingle`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.flatMapSingle:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41fc1c.  v0:= "mapper is null" @kind object;
  #L41fc20.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fc26.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMapSingle`;
  #L41fc2a.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapSingle;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L41fc30.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41fc36.  v2:= temp @kind object;
  #L41fc38.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `forEach`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.functions.Consumer` v1 @kind object) @signature `Lio/reactivex/Observable;.forEach:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L423be4.  call temp:= `subscribe`(v0, v1) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L423bea.  v1:= temp @kind object;
  #L423bec.  return v1 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `forEachWhile`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L423c00.  v0:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L423c04.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L423c08.  call temp:= `forEachWhile`(v2, v3, v0, v1) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L423c0e.  v3:= temp @kind object;
  #L423c10.  return v3 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `forEachWhile`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423c24.  v0:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L423c28.  call temp:= `forEachWhile`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L423c2e.  v2:= temp @kind object;
  #L423c30.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `forEachWhile`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.forEachWhile:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423c44.  v0:= "onNext is null" @kind object;
  #L423c48.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423c4e.  v0:= "onError is null" @kind object;
  #L423c52.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423c58.  v0:= "onComplete is null" @kind object;
  #L423c5c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423c62.  v0:= new `io.reactivex.internal.observers.ForEachWhileObserver`;
  #L423c66.  call `<init>`(v0, v2, v3, v4) @signature `Lio/reactivex/internal/observers/ForEachWhileObserver;.<init>:(Lio/reactivex/functions/Predicate;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind direct;
  #L423c6c.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L423c72.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Function` v4 @kind object) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L41fefc.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L41ff02.  v0:= temp @kind object;
  #L41ff04.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41ff0a.  v1:= temp;
  #L41ff0c.  v2:= 0I;
  #L41ff0e.  call temp:= `groupBy`(v3, v4, v0, v2, v1) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L41ff14.  v4:= temp @kind object;
  #L41ff16.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.functions.Function` v4 @kind object) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41ff54.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41ff5a.  v0:= temp;
  #L41ff5c.  v1:= 0I;
  #L41ff5e.  call temp:= `groupBy`(v2, v3, v4, v1, v0) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L41ff64.  v3:= temp @kind object;
  #L41ff66.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41ff78.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41ff7e.  v0:= temp;
  #L41ff80.  call temp:= `groupBy`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L41ff86.  v2:= temp @kind object;
  #L41ff88.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `io.reactivex.functions.Function` v9 @kind object, `boolean` v10 , `int` v11 ) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41ff9c.  v0:= "keySelector is null" @kind object;
  #L41ffa0.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41ffa6.  v0:= "valueSelector is null" @kind object;
  #L41ffaa.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41ffb0.  v0:= "bufferSize" @kind object;
  #L41ffb4.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L41ffba.  v0:= new `io.reactivex.internal.operators.observable.ObservableGroupBy`;
  #L41ffbe.  v1:= v0 @kind object;
  #L41ffc0.  v2:= v7 @kind object;
  #L41ffc2.  v3:= v8 @kind object;
  #L41ffc4.  v4:= v9 @kind object;
  #L41ffc6.  v5:= v11;
  #L41ffc8.  v6:= v10;
  #L41ffca.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L41ffd0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L41ffd6.  v8:= temp @kind object;
  #L41ffd8.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `groupBy`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41ff28.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L41ff2e.  v0:= temp @kind object;
  #L41ff30.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L41ff36.  v1:= temp;
  #L41ff38.  call temp:= `groupBy`(v2, v3, v0, v4, v1) @signature `Lio/reactivex/Observable;.groupBy:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L41ff3e.  v3:= temp @kind object;
  #L41ff40.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `groupJoin`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.functions.Function` v9 @kind object, `io.reactivex.functions.Function` v10 @kind object, `io.reactivex.functions.BiFunction` v11 @kind object) @signature `Lio/reactivex/Observable;.groupJoin:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41ffec.  v0:= "other is null" @kind object;
  #L41fff0.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41fff6.  v0:= "leftEnd is null" @kind object;
  #L41fffa.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420000.  v0:= "rightEnd is null" @kind object;
  #L420004.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42000a.  v0:= "resultSelector is null" @kind object;
  #L42000e.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420014.  v0:= new `io.reactivex.internal.operators.observable.ObservableGroupJoin`;
  #L420018.  v1:= v0 @kind object;
  #L42001a.  v2:= v7 @kind object;
  #L42001c.  v3:= v8 @kind object;
  #L42001e.  v4:= v9 @kind object;
  #L420020.  v5:= v10 @kind object;
  #L420022.  v6:= v11 @kind object;
  #L420024.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupJoin;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L42002a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420030.  v8:= temp @kind object;
  #L420032.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `hide`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.hide:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420044.  v0:= new `io.reactivex.internal.operators.observable.ObservableHide`;
  #L420048.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableHide;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L42004e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420054.  v0:= temp @kind object;
  #L420056.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `ignoreElements`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.ignoreElements:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41da68.  v0:= new `io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable`;
  #L41da6c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElementsCompletable;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L41da72.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L41da78.  v0:= temp @kind object;
  #L41da7a.  return v0 @kind object;
}
procedure `io.reactivex.Single` `isEmpty`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.isEmpty:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42372c.  call temp:= `alwaysFalse`() @signature `Lio/reactivex/internal/functions/Functions;.alwaysFalse:()Lio/reactivex/functions/Predicate;` @kind static;
  #L423732.  v0:= temp @kind object;
  #L423734.  call temp:= `all`(v1, v0) @signature `Lio/reactivex/Observable;.all:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @kind virtual;
  #L42373a.  v0:= temp @kind object;
  #L42373c.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `join`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.ObservableSource` v8 @kind object, `io.reactivex.functions.Function` v9 @kind object, `io.reactivex.functions.Function` v10 @kind object, `io.reactivex.functions.BiFunction` v11 @kind object) @signature `Lio/reactivex/Observable;.join:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L42024c.  v0:= "other is null" @kind object;
  #L420250.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420256.  v0:= "leftEnd is null" @kind object;
  #L42025a.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420260.  v0:= "rightEnd is null" @kind object;
  #L420264.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42026a.  v0:= "resultSelector is null" @kind object;
  #L42026e.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420274.  v0:= new `io.reactivex.internal.operators.observable.ObservableJoin`;
  #L420278.  v1:= v0 @kind object;
  #L42027a.  v2:= v7 @kind object;
  #L42027c.  v3:= v8 @kind object;
  #L42027e.  v4:= v9 @kind object;
  #L420280.  v5:= v10 @kind object;
  #L420282.  v6:= v11 @kind object;
  #L420284.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableJoin;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L42028a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420290.  v8:= temp @kind object;
  #L420292.  return v8 @kind object;
}
procedure `io.reactivex.Single` `last`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.last:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423750.  v0:= "defaultItem is null" @kind object;
  #L423754.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42375a.  v0:= new `io.reactivex.internal.operators.observable.ObservableLastSingle`;
  #L42375e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableLastSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L423764.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42376a.  v2:= temp @kind object;
  #L42376c.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `lastElement`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.lastElement:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41dbe4.  v0:= new `io.reactivex.internal.operators.observable.ObservableLastMaybe`;
  #L41dbe8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableLastMaybe;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L41dbee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L41dbf4.  v0:= temp @kind object;
  #L41dbf6.  return v0 @kind object;
}
procedure `io.reactivex.Single` `lastOrError`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.lastOrError:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L423780.  v0:= new `io.reactivex.internal.operators.observable.ObservableLastSingle`;
  #L423784.  v1:= 0I;
  #L423786.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableLastSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L42378c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L423792.  v0:= temp @kind object;
  #L423794.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `lift`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableOperator` v2 @kind object) @signature `Lio/reactivex/Observable;.lift:(Lio/reactivex/ObservableOperator;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420764.  v0:= "lifter is null" @kind object;
  #L420768.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42076e.  v0:= new `io.reactivex.internal.operators.observable.ObservableLift`;
  #L420772.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableLift;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableOperator;)V` @kind direct;
  #L420778.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L42077e.  v2:= temp @kind object;
  #L420780.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `map`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420794.  v0:= "mapper is null" @kind object;
  #L420798.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42079e.  v0:= new `io.reactivex.internal.operators.observable.ObservableMap`;
  #L4207a2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L4207a8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4207ae.  v2:= temp @kind object;
  #L4207b0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `materialize`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.materialize:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4207c4.  v0:= new `io.reactivex.internal.operators.observable.ObservableMaterialize`;
  #L4207c8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableMaterialize;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4207ce.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4207d4.  v0:= temp @kind object;
  #L4207d6.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `mergeWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.mergeWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420d1c.  v0:= "other is null" @kind object;
  #L420d20.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420d26.  v0:= new `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable`;
  #L420d2a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable;.<init>:(Lio/reactivex/Observable;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L420d30.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420d36.  v2:= temp @kind object;
  #L420d38.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.MaybeSource` v2 @kind object) @signature `Lio/reactivex/Observable;.mergeWith:(Lio/reactivex/MaybeSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420d4c.  v0:= "other is null" @kind object;
  #L420d50.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420d56.  v0:= new `io.reactivex.internal.operators.observable.ObservableMergeWithMaybe`;
  #L420d5a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithMaybe;.<init>:(Lio/reactivex/Observable;Lio/reactivex/MaybeSource;)V` @kind direct;
  #L420d60.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420d66.  v2:= temp @kind object;
  #L420d68.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.mergeWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420d7c.  v0:= "other is null" @kind object;
  #L420d80.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420d86.  call temp:= `merge`(v1, v2) @signature `Lio/reactivex/Observable;.merge:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L420d8c.  v2:= temp @kind object;
  #L420d8e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `mergeWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Observable;.mergeWith:(Lio/reactivex/SingleSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420da0.  v0:= "other is null" @kind object;
  #L420da4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420daa.  v0:= new `io.reactivex.internal.operators.observable.ObservableMergeWithSingle`;
  #L420dae.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithSingle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/SingleSource;)V` @kind direct;
  #L420db4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420dba.  v2:= temp @kind object;
  #L420dbc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `observeOn`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L420df0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L420df6.  v0:= temp;
  #L420df8.  v1:= 0I;
  #L420dfa.  call temp:= `observeOn`(v2, v3, v1, v0) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L420e00.  v3:= temp @kind object;
  #L420e02.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `observeOn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420e14.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L420e1a.  v0:= temp;
  #L420e1c.  call temp:= `observeOn`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L420e22.  v2:= temp @kind object;
  #L420e24.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `observeOn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.observeOn:(Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420e38.  v0:= "scheduler is null" @kind object;
  #L420e3c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420e42.  v0:= "bufferSize" @kind object;
  #L420e46.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L420e4c.  v0:= new `io.reactivex.internal.operators.observable.ObservableObserveOn`;
  #L420e50.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableObserveOn;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;ZI)V` @kind direct;
  #L420e56.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420e5c.  v2:= temp @kind object;
  #L420e5e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `ofType`(`io.reactivex.Observable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/Observable;.ofType:(Ljava/lang/Class;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420e70.  v0:= "clazz is null" @kind object;
  #L420e74.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420e7a.  call temp:= `isInstanceOf`(v2) @signature `Lio/reactivex/internal/functions/Functions;.isInstanceOf:(Ljava/lang/Class;)Lio/reactivex/functions/Predicate;` @kind static;
  #L420e80.  v0:= temp @kind object;
  #L420e82.  call temp:= `filter`(v1, v0) @signature `Lio/reactivex/Observable;.filter:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L420e88.  v0:= temp @kind object;
  #L420e8a.  call temp:= `cast`(v0, v2) @signature `Lio/reactivex/Observable;.cast:(Ljava/lang/Class;)Lio/reactivex/Observable;` @kind virtual;
  #L420e90.  v2:= temp @kind object;
  #L420e92.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `onErrorResumeNext`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.onErrorResumeNext:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420ea4.  v0:= "next is null" @kind object;
  #L420ea8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420eae.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/functions/Function;` @kind static;
  #L420eb4.  v2:= temp @kind object;
  #L420eb6.  call temp:= `onErrorResumeNext`(v1, v2) @signature `Lio/reactivex/Observable;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L420ebc.  v2:= temp @kind object;
  #L420ebe.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `onErrorResumeNext`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L420ed0.  v0:= "resumeFunction is null" @kind object;
  #L420ed4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420eda.  v0:= new `io.reactivex.internal.operators.observable.ObservableOnErrorNext`;
  #L420ede.  v1:= 0I;
  #L420ee0.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorNext;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L420ee6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420eec.  v3:= temp @kind object;
  #L420eee.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `onErrorReturn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.onErrorReturn:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420f00.  v0:= "valueSupplier is null" @kind object;
  #L420f04.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420f0a.  v0:= new `io.reactivex.internal.operators.observable.ObservableOnErrorReturn`;
  #L420f0e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorReturn;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L420f14.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420f1a.  v2:= temp @kind object;
  #L420f1c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `onErrorReturnItem`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.onErrorReturnItem:(Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420f30.  v0:= "item is null" @kind object;
  #L420f34.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420f3a.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/functions/Function;` @kind static;
  #L420f40.  v2:= temp @kind object;
  #L420f42.  call temp:= `onErrorReturn`(v1, v2) @signature `Lio/reactivex/Observable;.onErrorReturn:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L420f48.  v2:= temp @kind object;
  #L420f4a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `onExceptionResumeNext`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.onExceptionResumeNext:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L420f5c.  v0:= "next is null" @kind object;
  #L420f60.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420f66.  v0:= new `io.reactivex.internal.operators.observable.ObservableOnErrorNext`;
  #L420f6a.  call temp:= `justFunction`(v3) @signature `Lio/reactivex/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/functions/Function;` @kind static;
  #L420f70.  v3:= temp @kind object;
  #L420f72.  v1:= 1I;
  #L420f74.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableOnErrorNext;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L420f7a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420f80.  v3:= temp @kind object;
  #L420f82.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `onTerminateDetach`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.onTerminateDetach:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420f94.  v0:= new `io.reactivex.internal.operators.observable.ObservableDetach`;
  #L420f98.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDetach;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L420f9e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420fa4.  v0:= temp @kind object;
  #L420fa6.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `publish`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.publish:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420fb8.  v0:= "selector is null" @kind object;
  #L420fbc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L420fc2.  v0:= new `io.reactivex.internal.operators.observable.ObservablePublishSelector`;
  #L420fc6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservablePublishSelector;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L420fcc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L420fd2.  v2:= temp @kind object;
  #L420fd4.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `publish`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.publish:()Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423d7c.  call temp:= `create`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservablePublish;.create:(Lio/reactivex/ObservableSource;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L423d82.  v0:= temp @kind object;
  #L423d84.  return v0 @kind object;
}
procedure `io.reactivex.Maybe` `reduce`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/Observable;.reduce:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41dc08.  v0:= "reducer is null" @kind object;
  #L41dc0c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41dc12.  v0:= new `io.reactivex.internal.operators.observable.ObservableReduceMaybe`;
  #L41dc16.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceMaybe;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L41dc1c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L41dc22.  v2:= temp @kind object;
  #L41dc24.  return v2 @kind object;
}
procedure `io.reactivex.Single` `reduce`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.reduce:(Ljava/lang/Object;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4237a8.  v0:= "seed is null" @kind object;
  #L4237ac.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4237b2.  v0:= "reducer is null" @kind object;
  #L4237b6.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4237bc.  v0:= new `io.reactivex.internal.operators.observable.ObservableReduceSeedSingle`;
  #L4237c0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceSeedSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L4237c6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4237cc.  v2:= temp @kind object;
  #L4237ce.  return v2 @kind object;
}
procedure `io.reactivex.Single` `reduceWith`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.reduceWith:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4237e0.  v0:= "seedSupplier is null" @kind object;
  #L4237e4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4237ea.  v0:= "reducer is null" @kind object;
  #L4237ee.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4237f4.  v0:= new `io.reactivex.internal.operators.observable.ObservableReduceWithSingle`;
  #L4237f8.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableReduceWithSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L4237fe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L423804.  v2:= temp @kind object;
  #L423806.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `repeat`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.repeat:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L421140.  v0:= 9223372036854775807L;
  #L42114a.  call temp:= `repeat`(v2, v0) @signature `Lio/reactivex/Observable;.repeat:(J)Lio/reactivex/Observable;` @kind virtual;
  #L421150.  v0:= temp @kind object;
  #L421152.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `repeat`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.repeat:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L421164.  v0:= 0L;
  #L421168.  v2:= lcmp(v4, v0);
  #L42116c.  if v2 < 0 then goto L421192;
  #L421170.  if v2 != 0 then goto L42117e;
  #L421174.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L42117a.  v4:= temp @kind object;
  #L42117c.  return v4 @kind object;
  #L42117e.  v0:= new `io.reactivex.internal.operators.observable.ObservableRepeat`;
  #L421182.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeat;.<init>:(Lio/reactivex/Observable;J)V` @kind direct;
  #L421188.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L42118e.  v4:= temp @kind object;
  #L421190.  return v4 @kind object;
  #L421192.  v0:= new `java.lang.IllegalArgumentException`;
  #L421196.  v1:= new `java.lang.StringBuilder`;
  #L42119a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4211a0.  v2:= "times >= 0 required but it was " @kind object;
  #L4211a4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4211aa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4211b0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4211b6.  v4:= temp @kind object;
  #L4211b8.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4211be.  throw v0;
}
procedure `io.reactivex.Observable` `repeatUntil`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/Observable;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4211d0.  v0:= "stop is null" @kind object;
  #L4211d4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4211da.  v0:= new `io.reactivex.internal.operators.observable.ObservableRepeatUntil`;
  #L4211de.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatUntil;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/BooleanSupplier;)V` @kind direct;
  #L4211e4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4211ea.  v2:= temp @kind object;
  #L4211ec.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `repeatWhen`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L421200.  v0:= "handler is null" @kind object;
  #L421204.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42120a.  v0:= new `io.reactivex.internal.operators.observable.ObservableRepeatWhen`;
  #L42120e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatWhen;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L421214.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L42121a.  v2:= temp @kind object;
  #L42121c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L421230.  v0:= "selector is null" @kind object;
  #L421234.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42123a.  call temp:= `replayCallable`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;)Ljava/util/concurrent/Callable;` @kind static;
  #L421240.  v0:= temp @kind object;
  #L421242.  call temp:= `multicastSelector`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L421248.  v2:= temp @kind object;
  #L42124a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42125c.  v0:= "selector is null" @kind object;
  #L421260.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421266.  v0:= "bufferSize" @kind object;
  #L42126a.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L421270.  call temp:= `replayCallable`(v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;I)Ljava/util/concurrent/Callable;` @kind static;
  #L421276.  v3:= temp @kind object;
  #L421278.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L42127e.  v2:= temp @kind object;
  #L421280.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v7 @kind this, `io.reactivex.functions.Function` v8 @kind object, `int` v9 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4212dc.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L4212e2.  v6:= temp @kind object;
  #L4212e4.  v0:= v7 @kind object;
  #L4212e6.  v1:= v8 @kind object;
  #L4212e8.  v2:= v9;
  #L4212ea.  v3:= v10 @kind wide;
  #L4212ec.  v5:= v12 @kind object;
  #L4212ee.  call temp:= `replay`(v0, v1, v2, v3, v5, v6) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L4212f4.  v8:= temp @kind object;
  #L4212f6.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `int` v8 , `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L421308.  v0:= "selector is null" @kind object;
  #L42130c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421312.  v0:= "bufferSize" @kind object;
  #L421316.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L42131c.  v0:= "unit is null" @kind object;
  #L421320.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421326.  v0:= "scheduler is null" @kind object;
  #L42132a.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421330.  v0:= v6 @kind object;
  #L421332.  v1:= v8;
  #L421334.  v2:= v9 @kind wide;
  #L421336.  v4:= v11 @kind object;
  #L421338.  v5:= v12 @kind object;
  #L42133a.  call temp:= `replayCallable`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Ljava/util/concurrent/Callable;` @kind static;
  #L421340.  v8:= temp @kind object;
  #L421342.  call temp:= `multicastSelector`(v8, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L421348.  v7:= temp @kind object;
  #L42134a.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `int` v3 , `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;ILio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L421294.  v0:= "selector is null" @kind object;
  #L421298.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42129e.  v0:= "scheduler is null" @kind object;
  #L4212a2.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4212a8.  v0:= "bufferSize" @kind object;
  #L4212ac.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4212b2.  call temp:= `replayCallable`(v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;I)Ljava/util/concurrent/Callable;` @kind static;
  #L4212b8.  v3:= temp @kind object;
  #L4212ba.  call temp:= `replayFunction`(v2, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayFunction:(Lio/reactivex/functions/Function;Lio/reactivex/Scheduler;)Lio/reactivex/functions/Function;` @kind static;
  #L4212c0.  v2:= temp @kind object;
  #L4212c2.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L4212c8.  v2:= temp @kind object;
  #L4212ca.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v6 @kind this, `io.reactivex.functions.Function` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L42139c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L4213a2.  v5:= temp @kind object;
  #L4213a4.  v0:= v6 @kind object;
  #L4213a6.  v1:= v7 @kind object;
  #L4213a8.  v2:= v8 @kind wide;
  #L4213aa.  v4:= v10 @kind object;
  #L4213ac.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L4213b2.  v7:= temp @kind object;
  #L4213b4.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.Scheduler` v6 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4213c8.  v0:= "selector is null" @kind object;
  #L4213cc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4213d2.  v0:= "unit is null" @kind object;
  #L4213d6.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4213dc.  v0:= "scheduler is null" @kind object;
  #L4213e0.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4213e6.  call temp:= `replayCallable`(v1, v3, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Ljava/util/concurrent/Callable;` @kind static;
  #L4213ec.  v3:= temp @kind object;
  #L4213ee.  call temp:= `multicastSelector`(v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L4213f4.  v2:= temp @kind object;
  #L4213f6.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/functions/Function;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42135c.  v0:= "selector is null" @kind object;
  #L421360.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421366.  v0:= "scheduler is null" @kind object;
  #L42136a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421370.  call temp:= `replayCallable`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayCallable:(Lio/reactivex/Observable;)Ljava/util/concurrent/Callable;` @kind static;
  #L421376.  v0:= temp @kind object;
  #L421378.  call temp:= `replayFunction`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper;.replayFunction:(Lio/reactivex/functions/Function;Lio/reactivex/Scheduler;)Lio/reactivex/functions/Function;` @kind static;
  #L42137e.  v2:= temp @kind object;
  #L421380.  call temp:= `multicastSelector`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.multicastSelector:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L421386.  v2:= temp @kind object;
  #L421388.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.replay:()Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423d98.  call temp:= `createFrom`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.createFrom:(Lio/reactivex/ObservableSource;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L423d9e.  v0:= temp @kind object;
  #L423da0.  return v0 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/Observable;.replay:(I)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423db4.  v0:= "bufferSize" @kind object;
  #L423db8.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L423dbe.  call temp:= `create`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/ObservableSource;I)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L423dc4.  v2:= temp @kind object;
  #L423dc6.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L423e04.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L423e0a.  v5:= temp @kind object;
  #L423e0c.  v0:= v6 @kind object;
  #L423e0e.  v1:= v7;
  #L423e10.  v2:= v8 @kind wide;
  #L423e12.  v4:= v10 @kind object;
  #L423e14.  call temp:= `replay`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L423e1a.  v7:= temp @kind object;
  #L423e1c.  return v7 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v6 @kind this, `int` v7 , `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.replay:(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L423e30.  v0:= "bufferSize" @kind object;
  #L423e34.  call temp:= `verifyPositive`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L423e3a.  v0:= "unit is null" @kind object;
  #L423e3e.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423e44.  v0:= "scheduler is null" @kind object;
  #L423e48.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423e4e.  v0:= v6 @kind object;
  #L423e50.  v1:= v8 @kind wide;
  #L423e52.  v3:= v10 @kind object;
  #L423e54.  v4:= v11 @kind object;
  #L423e56.  v5:= v7;
  #L423e58.  call temp:= `create`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L423e5e.  v7:= temp @kind object;
  #L423e60.  return v7 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `int` v2 , `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.replay:(ILio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423dd8.  v0:= "bufferSize" @kind object;
  #L423ddc.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L423de2.  call temp:= `replay`(v1, v2) @signature `Lio/reactivex/Observable;.replay:(I)Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L423de8.  v2:= temp @kind object;
  #L423dea.  call temp:= `observeOn`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.observeOn:(Lio/reactivex/observables/ConnectableObservable;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L423df0.  v2:= temp @kind object;
  #L423df2.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.replay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423ea0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L423ea6.  v0:= temp @kind object;
  #L423ea8.  call temp:= `replay`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L423eae.  v2:= temp @kind object;
  #L423eb0.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object) @signature `Lio/reactivex/Observable;.replay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423ec4.  v0:= "unit is null" @kind object;
  #L423ec8.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423ece.  v0:= "scheduler is null" @kind object;
  #L423ed2.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423ed8.  call temp:= `create`(v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.create:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L423ede.  v2:= temp @kind object;
  #L423ee0.  return v2 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `replay`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.replay:(Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423e74.  v0:= "scheduler is null" @kind object;
  #L423e78.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423e7e.  call temp:= `replay`(v1) @signature `Lio/reactivex/Observable;.replay:()Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L423e84.  v0:= temp @kind object;
  #L423e86.  call temp:= `observeOn`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay;.observeOn:(Lio/reactivex/observables/ConnectableObservable;Lio/reactivex/Scheduler;)Lio/reactivex/observables/ConnectableObservable;` @kind static;
  #L423e8c.  v2:= temp @kind object;
  #L423e8e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v3 @kind this) @signature `Lio/reactivex/Observable;.retry:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L421408.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/functions/Predicate;` @kind static;
  #L42140e.  v0:= temp @kind object;
  #L421410.  v1:= 9223372036854775807L;
  #L42141a.  call temp:= `retry`(v3, v1, v0) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L421420.  v0:= temp @kind object;
  #L421422.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Observable;.retry:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L421488.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/functions/Predicate;` @kind static;
  #L42148e.  v0:= temp @kind object;
  #L421490.  call temp:= `retry`(v1, v2, v0) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L421496.  v2:= temp @kind object;
  #L421498.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v3 @kind this, `long` v4 , `io.reactivex.functions.Predicate` v6 @kind object) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4214ac.  v0:= 0L;
  #L4214b0.  v2:= lcmp(v4, v0);
  #L4214b4.  if v2 < 0 then goto L4214d6;
  #L4214b8.  v0:= "predicate is null" @kind object;
  #L4214bc.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4214c2.  v0:= new `io.reactivex.internal.operators.observable.ObservableRetryPredicate`;
  #L4214c6.  call `<init>`(v0, v3, v4, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryPredicate;.<init>:(Lio/reactivex/Observable;JLio/reactivex/functions/Predicate;)V` @kind direct;
  #L4214cc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4214d2.  v4:= temp @kind object;
  #L4214d4.  return v4 @kind object;
  #L4214d6.  v6:= new `java.lang.IllegalArgumentException`;
  #L4214da.  v0:= new `java.lang.StringBuilder`;
  #L4214de.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4214e4.  v1:= "times >= 0 required but it was " @kind object;
  #L4214e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4214ee.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4214f4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4214fa.  v4:= temp @kind object;
  #L4214fc.  call `<init>`(v6, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L421502.  throw v6;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/Observable;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L421434.  v0:= "predicate is null" @kind object;
  #L421438.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42143e.  v0:= new `io.reactivex.internal.operators.observable.ObservableRetryBiPredicate`;
  #L421442.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryBiPredicate;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/BiPredicate;)V` @kind direct;
  #L421448.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L42144e.  v2:= temp @kind object;
  #L421450.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `retry`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Predicate` v3 @kind object) @signature `Lio/reactivex/Observable;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L421464.  v0:= 9223372036854775807L;
  #L42146e.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L421474.  v3:= temp @kind object;
  #L421476.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `retryUntil`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.BooleanSupplier` v3 @kind object) @signature `Lio/reactivex/Observable;.retryUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L421514.  v0:= "stop is null" @kind object;
  #L421518.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42151e.  call temp:= `predicateReverseFor`(v3) @signature `Lio/reactivex/internal/functions/Functions;.predicateReverseFor:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/functions/Predicate;` @kind static;
  #L421524.  v3:= temp @kind object;
  #L421526.  v0:= 9223372036854775807L;
  #L421530.  call temp:= `retry`(v2, v0, v3) @signature `Lio/reactivex/Observable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @kind virtual;
  #L421536.  v3:= temp @kind object;
  #L421538.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `retryWhen`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42154c.  v0:= "handler is null" @kind object;
  #L421550.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421556.  v0:= new `io.reactivex.internal.operators.observable.ObservableRetryWhen`;
  #L42155a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryWhen;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L421560.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421566.  v2:= temp @kind object;
  #L421568.  return v2 @kind object;
}
procedure `void` `safeSubscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Observer` v2 @kind object) @signature `Lio/reactivex/Observable;.safeSubscribe:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4242b4.  v0:= "observer is null" @kind object;
  #L4242b8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4242be.  v0:= instanceof @variable v2 @type ^`io.reactivex.observers.SafeObserver` @kind boolean;
  #L4242c2.  if v0 == 0 then goto L4242ce;
  #L4242c6.  call `subscribe`(v1, v2) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L4242cc.  goto L4242de;
  #L4242ce.  v0:= new `io.reactivex.observers.SafeObserver`;
  #L4242d2.  call `<init>`(v0, v2) @signature `Lio/reactivex/observers/SafeObserver;.<init>:(Lio/reactivex/Observer;)V` @kind direct;
  #L4242d8.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L4242de.  return @kind void;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4215dc.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L4215e2.  v0:= temp @kind object;
  #L4215e4.  call temp:= `sample`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L4215ea.  v2:= temp @kind object;
  #L4215ec.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L42162c.  v0:= "unit is null" @kind object;
  #L421630.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421636.  v0:= "scheduler is null" @kind object;
  #L42163a.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421640.  v0:= new `io.reactivex.internal.operators.observable.ObservableSampleTimed`;
  #L421644.  v7:= 0I;
  #L421646.  v1:= v0 @kind object;
  #L421648.  v2:= v8 @kind object;
  #L42164a.  v3:= v9 @kind wide;
  #L42164c.  v5:= v11 @kind object;
  #L42164e.  v6:= v12 @kind object;
  #L421650.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L421656.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L42165c.  v9:= temp @kind object;
  #L42165e.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L421670.  v0:= "unit is null" @kind object;
  #L421674.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42167a.  v0:= "scheduler is null" @kind object;
  #L42167e.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421684.  v0:= new `io.reactivex.internal.operators.observable.ObservableSampleTimed`;
  #L421688.  v1:= v0 @kind object;
  #L42168a.  v2:= v8 @kind object;
  #L42168c.  v3:= v9 @kind wide;
  #L42168e.  v5:= v11 @kind object;
  #L421690.  v6:= v12 @kind object;
  #L421692.  v7:= v13;
  #L421694.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L42169a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4216a0.  v9:= temp @kind object;
  #L4216a2.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L421600.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L421606.  v4:= temp @kind object;
  #L421608.  v0:= v6 @kind object;
  #L42160a.  v1:= v7 @kind wide;
  #L42160c.  v3:= v9 @kind object;
  #L42160e.  v5:= v10;
  #L421610.  call temp:= `sample`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L421616.  v7:= temp @kind object;
  #L421618.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.sample:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L42157c.  v0:= "sampler is null" @kind object;
  #L421580.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421586.  v0:= new `io.reactivex.internal.operators.observable.ObservableSampleWithObservable`;
  #L42158a.  v1:= 0I;
  #L42158c.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Z)V` @kind direct;
  #L421592.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421598.  v3:= temp @kind object;
  #L42159a.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `sample`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.sample:(Lio/reactivex/ObservableSource;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4215ac.  v0:= "sampler is null" @kind object;
  #L4215b0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4215b6.  v0:= new `io.reactivex.internal.operators.observable.ObservableSampleWithObservable`;
  #L4215ba.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleWithObservable;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Z)V` @kind direct;
  #L4215c0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4215c6.  v2:= temp @kind object;
  #L4215c8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `scan`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/Observable;.scan:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4216b4.  v0:= "accumulator is null" @kind object;
  #L4216b8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4216be.  v0:= new `io.reactivex.internal.operators.observable.ObservableScan`;
  #L4216c2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableScan;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L4216c8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4216ce.  v2:= temp @kind object;
  #L4216d0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `scan`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.scan:(Ljava/lang/Object;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4216e4.  v0:= "initialValue is null" @kind object;
  #L4216e8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4216ee.  call temp:= `justCallable`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justCallable:(Ljava/lang/Object;)Ljava/util/concurrent/Callable;` @kind static;
  #L4216f4.  v2:= temp @kind object;
  #L4216f6.  call temp:= `scanWith`(v1, v2, v3) @signature `Lio/reactivex/Observable;.scanWith:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @kind virtual;
  #L4216fc.  v2:= temp @kind object;
  #L4216fe.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `scanWith`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.scanWith:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L421710.  v0:= "seedSupplier is null" @kind object;
  #L421714.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42171a.  v0:= "accumulator is null" @kind object;
  #L42171e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421724.  v0:= new `io.reactivex.internal.operators.observable.ObservableScanSeed`;
  #L421728.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableScanSeed;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L42172e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421734.  v2:= temp @kind object;
  #L421736.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `serialize`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.serialize:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L421748.  v0:= new `io.reactivex.internal.operators.observable.ObservableSerialized`;
  #L42174c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSerialized;.<init>:(Lio/reactivex/Observable;)V` @kind direct;
  #L421752.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421758.  v0:= temp @kind object;
  #L42175a.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `share`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.share:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42176c.  call temp:= `publish`(v1) @signature `Lio/reactivex/Observable;.publish:()Lio/reactivex/observables/ConnectableObservable;` @kind virtual;
  #L421772.  v0:= temp @kind object;
  #L421774.  call temp:= `refCount`(v0) @signature `Lio/reactivex/observables/ConnectableObservable;.refCount:()Lio/reactivex/Observable;` @kind virtual;
  #L42177a.  v0:= temp @kind object;
  #L42177c.  return v0 @kind object;
}
procedure `io.reactivex.Single` `single`(`io.reactivex.Observable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Observable;.single:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4238d8.  v0:= "defaultItem is null" @kind object;
  #L4238dc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4238e2.  v0:= new `io.reactivex.internal.operators.observable.ObservableSingleSingle`;
  #L4238e6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L4238ec.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4238f2.  v2:= temp @kind object;
  #L4238f4.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `singleElement`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.singleElement:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41dc38.  v0:= new `io.reactivex.internal.operators.observable.ObservableSingleMaybe`;
  #L41dc3c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSingleMaybe;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L41dc42.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L41dc48.  v0:= temp @kind object;
  #L41dc4a.  return v0 @kind object;
}
procedure `io.reactivex.Single` `singleOrError`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.singleOrError:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L423908.  v0:= new `io.reactivex.internal.operators.observable.ObservableSingleSingle`;
  #L42390c.  v1:= 0I;
  #L42390e.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L423914.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42391a.  v0:= temp @kind object;
  #L42391c.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `skip`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.skip:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L421790.  v0:= 0L;
  #L421794.  v2:= lcmp(v4, v0);
  #L421798.  if v2 > 0 then goto L4217a6;
  #L42179c.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4217a2.  v4:= temp @kind object;
  #L4217a4.  return v4 @kind object;
  #L4217a6.  v0:= new `io.reactivex.internal.operators.observable.ObservableSkip`;
  #L4217aa.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableSkip;.<init>:(Lio/reactivex/ObservableSource;J)V` @kind direct;
  #L4217b0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4217b6.  v4:= temp @kind object;
  #L4217b8.  return v4 @kind object;
}
procedure `io.reactivex.Observable` `skip`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.skip:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4217cc.  call temp:= `timer`(v1, v3) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind static;
  #L4217d2.  v1:= temp @kind object;
  #L4217d4.  call temp:= `skipUntil`(v0, v1) @signature `Lio/reactivex/Observable;.skipUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L4217da.  v1:= temp @kind object;
  #L4217dc.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `skip`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.skip:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4217f0.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L4217f6.  v1:= temp @kind object;
  #L4217f8.  call temp:= `skipUntil`(v0, v1) @signature `Lio/reactivex/Observable;.skipUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L4217fe.  v1:= temp @kind object;
  #L421800.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/Observable;.skipLast:(I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L421814.  if v4 < 0 then goto L42183a;
  #L421818.  if v4 != 0 then goto L421826;
  #L42181c.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421822.  v4:= temp @kind object;
  #L421824.  return v4 @kind object;
  #L421826.  v0:= new `io.reactivex.internal.operators.observable.ObservableSkipLast`;
  #L42182a.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipLast;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L421830.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421836.  v4:= temp @kind object;
  #L421838.  return v4 @kind object;
  #L42183a.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L42183e.  v1:= new `java.lang.StringBuilder`;
  #L421842.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L421848.  v2:= "count >= 0 required but it was " @kind object;
  #L42184c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L421852.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L421858.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42185e.  v4:= temp @kind object;
  #L421860.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L421866.  throw v0;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L421878.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L42187e.  v4:= temp @kind object;
  #L421880.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L421886.  v6:= temp;
  #L421888.  v5:= 0I;
  #L42188a.  v0:= v7 @kind object;
  #L42188c.  v1:= v8 @kind wide;
  #L42188e.  v3:= v10 @kind object;
  #L421890.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L421896.  v8:= temp @kind object;
  #L421898.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4218e0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L4218e6.  v6:= temp;
  #L4218e8.  v5:= 0I;
  #L4218ea.  v0:= v7 @kind object;
  #L4218ec.  v1:= v8 @kind wide;
  #L4218ee.  v3:= v10 @kind object;
  #L4218f0.  v4:= v11 @kind object;
  #L4218f2.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L4218f8.  v8:= temp @kind object;
  #L4218fa.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L42190c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L421912.  v6:= temp;
  #L421914.  v0:= v7 @kind object;
  #L421916.  v1:= v8 @kind wide;
  #L421918.  v3:= v10 @kind object;
  #L42191a.  v4:= v11 @kind object;
  #L42191c.  v5:= v12;
  #L42191e.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L421924.  v8:= temp @kind object;
  #L421926.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L421938.  v0:= "unit is null" @kind object;
  #L42193c.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421942.  v0:= "scheduler is null" @kind object;
  #L421946.  call temp:= `requireNonNull`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42194c.  v0:= "bufferSize" @kind object;
  #L421950.  call temp:= `verifyPositive`(v15, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L421956.  v7:= v15 ^< 1;
  #L42195a.  v15:= new `io.reactivex.internal.operators.observable.ObservableSkipLastTimed`;
  #L42195e.  v1:= v15 @kind object;
  #L421960.  v2:= v9 @kind object;
  #L421962.  v3:= v10 @kind wide;
  #L421964.  v5:= v12 @kind object;
  #L421966.  v6:= v13 @kind object;
  #L421968.  v8:= v14;
  #L42196a.  call `<init>`(v1, v2, v3, v5, v6, v7, v8) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipLastTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @kind direct;
  #L421970.  call temp:= `onAssembly`(v15) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421976.  v10:= temp @kind object;
  #L421978.  return v10 @kind object;
}
procedure `io.reactivex.Observable` `skipLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `boolean` v11 ) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4218ac.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L4218b2.  v4:= temp @kind object;
  #L4218b4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L4218ba.  v6:= temp;
  #L4218bc.  v0:= v7 @kind object;
  #L4218be.  v1:= v8 @kind wide;
  #L4218c0.  v3:= v10 @kind object;
  #L4218c2.  v5:= v11;
  #L4218c4.  call temp:= `skipLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.skipLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L4218ca.  v8:= temp @kind object;
  #L4218cc.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `skipUntil`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.skipUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42198c.  v0:= "other is null" @kind object;
  #L421990.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421996.  v0:= new `io.reactivex.internal.operators.observable.ObservableSkipUntil`;
  #L42199a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipUntil;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4219a0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4219a6.  v2:= temp @kind object;
  #L4219a8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `skipWhile`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.skipWhile:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4219bc.  v0:= "predicate is null" @kind object;
  #L4219c0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4219c6.  v0:= new `io.reactivex.internal.operators.observable.ObservableSkipWhile`;
  #L4219ca.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSkipWhile;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L4219d0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4219d6.  v2:= temp @kind object;
  #L4219d8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `sorted`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.sorted:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4219ec.  call temp:= `toList`(v2) @signature `Lio/reactivex/Observable;.toList:()Lio/reactivex/Single;` @kind virtual;
  #L4219f2.  v0:= temp @kind object;
  #L4219f4.  call temp:= `toObservable`(v0) @signature `Lio/reactivex/Single;.toObservable:()Lio/reactivex/Observable;` @kind virtual;
  #L4219fa.  v0:= temp @kind object;
  #L4219fc.  call temp:= `naturalComparator`() @signature `Lio/reactivex/internal/functions/Functions;.naturalComparator:()Ljava/util/Comparator;` @kind static;
  #L421a02.  v1:= temp @kind object;
  #L421a04.  call temp:= `listSorter`(v1) @signature `Lio/reactivex/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/functions/Function;` @kind static;
  #L421a0a.  v1:= temp @kind object;
  #L421a0c.  call temp:= `map`(v0, v1) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L421a12.  v0:= temp @kind object;
  #L421a14.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L421a1a.  v1:= temp @kind object;
  #L421a1c.  call temp:= `flatMapIterable`(v0, v1) @signature `Lio/reactivex/Observable;.flatMapIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L421a22.  v0:= temp @kind object;
  #L421a24.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `sorted`(`io.reactivex.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/Observable;.sorted:(Ljava/util/Comparator;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L421a38.  v0:= "sortFunction is null" @kind object;
  #L421a3c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421a42.  call temp:= `toList`(v1) @signature `Lio/reactivex/Observable;.toList:()Lio/reactivex/Single;` @kind virtual;
  #L421a48.  v0:= temp @kind object;
  #L421a4a.  call temp:= `toObservable`(v0) @signature `Lio/reactivex/Single;.toObservable:()Lio/reactivex/Observable;` @kind virtual;
  #L421a50.  v0:= temp @kind object;
  #L421a52.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/functions/Function;` @kind static;
  #L421a58.  v2:= temp @kind object;
  #L421a5a.  call temp:= `map`(v0, v2) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L421a60.  v2:= temp @kind object;
  #L421a62.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L421a68.  v0:= temp @kind object;
  #L421a6a.  call temp:= `flatMapIterable`(v2, v0) @signature `Lio/reactivex/Observable;.flatMapIterable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L421a70.  v2:= temp @kind object;
  #L421a72.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `startWith`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.startWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L421a84.  v0:= "other is null" @kind object;
  #L421a88.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421a8e.  v0:= 2I;
  #L421a90.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L421a94.  v1:= 0I;
  #L421a96.  v0[v1]:= v3 @kind object;
  #L421a9a.  v3:= 1I;
  #L421a9c.  v0[v3]:= v2 @kind object;
  #L421aa0.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L421aa6.  v3:= temp @kind object;
  #L421aa8.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `startWith`(`io.reactivex.Observable` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/Observable;.startWith:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L421abc.  v0:= 2I;
  #L421abe.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L421ac2.  call temp:= `fromIterable`(v3) @signature `Lio/reactivex/Observable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;` @kind static;
  #L421ac8.  v3:= temp @kind object;
  #L421aca.  v1:= 0I;
  #L421acc.  v0[v1]:= v3 @kind object;
  #L421ad0.  v3:= 1I;
  #L421ad2.  v0[v3]:= v2 @kind object;
  #L421ad6.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L421adc.  v3:= temp @kind object;
  #L421ade.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `startWith`(`io.reactivex.Observable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Observable;.startWith:(Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L421af0.  v0:= "item is null" @kind object;
  #L421af4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421afa.  v0:= 2I;
  #L421afc.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L421b00.  call temp:= `just`(v3) @signature `Lio/reactivex/Observable;.just:(Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L421b06.  v3:= temp @kind object;
  #L421b08.  v1:= 0I;
  #L421b0a.  v0[v1]:= v3 @kind object;
  #L421b0e.  v3:= 1I;
  #L421b10.  v0[v3]:= v2 @kind object;
  #L421b14.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L421b1a.  v3:= temp @kind object;
  #L421b1c.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `startWithArray`(`io.reactivex.Observable` v2 @kind this, `java.lang.Object`[] v3 @kind object) @signature `Lio/reactivex/Observable;.startWithArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L421b30.  call temp:= `fromArray`(v3) @signature `Lio/reactivex/Observable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Observable;` @kind static;
  #L421b36.  v3:= temp @kind object;
  #L421b38.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L421b3e.  v0:= temp @kind object;
  #L421b40.  if v3 != v0 then goto L421b4e;
  #L421b44.  call temp:= `onAssembly`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421b4a.  v3:= temp @kind object;
  #L421b4c.  return v3 @kind object;
  #L421b4e.  v0:= 2I;
  #L421b50.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L421b54.  v1:= 0I;
  #L421b56.  v0[v1]:= v3 @kind object;
  #L421b5a.  v3:= 1I;
  #L421b5c.  v0[v3]:= v2 @kind object;
  #L421b60.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Observable;.concatArray:([Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind static;
  #L421b66.  v3:= temp @kind object;
  #L421b68.  return v3 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v4 @kind this) @signature `Lio/reactivex/Observable;.subscribe:()Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L423c84.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L423c8a.  v0:= temp @kind object;
  #L423c8c.  v1:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L423c90.  v2:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L423c94.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L423c9a.  v3:= temp @kind object;
  #L423c9c.  call temp:= `subscribe`(v4, v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L423ca2.  v0:= temp @kind object;
  #L423ca4.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L423cb8.  v0:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L423cbc.  v1:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L423cc0.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L423cc6.  v2:= temp @kind object;
  #L423cc8.  call temp:= `subscribe`(v3, v4, v0, v1, v2) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L423cce.  v4:= temp @kind object;
  #L423cd0.  return v4 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Consumer` v4 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L423ce4.  v0:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L423ce8.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L423cee.  v1:= temp @kind object;
  #L423cf0.  call temp:= `subscribe`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L423cf6.  v3:= temp @kind object;
  #L423cf8.  return v3 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Action` v4 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423d0c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L423d12.  v0:= temp @kind object;
  #L423d14.  call temp:= `subscribe`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L423d1a.  v2:= temp @kind object;
  #L423d1c.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `io.reactivex.functions.Action` v4 @kind object, `io.reactivex.functions.Consumer` v5 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423d30.  v0:= "onNext is null" @kind object;
  #L423d34.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423d3a.  v0:= "onError is null" @kind object;
  #L423d3e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423d44.  v0:= "onComplete is null" @kind object;
  #L423d48.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423d4e.  v0:= "onSubscribe is null" @kind object;
  #L423d52.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423d58.  v0:= new `io.reactivex.internal.observers.LambdaObserver`;
  #L423d5c.  call `<init>`(v0, v2, v3, v4, v5) @signature `Lio/reactivex/internal/observers/LambdaObserver;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L423d62.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L423d68.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.Observer` v3 @kind object) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4242f0.  v0:= "observer is null" @kind object;
  #L4242f4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4242fa.  call temp:= `onSubscribe`(v2, v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Observable;Lio/reactivex/Observer;)Lio/reactivex/Observer;` @kind static;
  #L424300.  v3:= temp @kind object;
  #L424302.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null Observer. Please change the handler provided to RxJavaPlugins.setOnObservableSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L424306.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42430c.  call `subscribeActual`(v2, v3) @signature `Lio/reactivex/Observable;.subscribeActual:(Lio/reactivex/Observer;)V` @kind virtual;
  #L424312.  return @kind void;
  #L424314.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L424316.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L42431c.  call `onError`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L424322.  v0:= new `java.lang.NullPointerException`;
  #L424326.  v1:= "Actually not, but can't throw other exceptions due to RS" @kind object;
  #L42432a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L424330.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L424336.  throw v0;
  #L424338.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L42433a.  throw v3;
  catch `java.lang.NullPointerException` @[L4242fa..L424312] goto L424338;
  catch `java.lang.Throwable` @[L4242fa..L424312] goto L424314;
}
procedure `void` `subscribeActual`(`io.reactivex.Observer` v0 @kind object) @signature `Lio/reactivex/Observable;.subscribeActual:(Lio/reactivex/Observer;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.Observable` `subscribeOn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L421b7c.  v0:= "scheduler is null" @kind object;
  #L421b80.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421b86.  v0:= new `io.reactivex.internal.operators.observable.ObservableSubscribeOn`;
  #L421b8a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSubscribeOn;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L421b90.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421b96.  v2:= temp @kind object;
  #L421b98.  return v2 @kind object;
}
procedure `io.reactivex.Observer` `subscribeWith`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.Observer` v1 @kind object) @signature `Lio/reactivex/Observable;.subscribeWith:(Lio/reactivex/Observer;)Lio/reactivex/Observer;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4234f8.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L4234fe.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `switchIfEmpty`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.switchIfEmpty:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L421bac.  v0:= "other is null" @kind object;
  #L421bb0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421bb6.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty`;
  #L421bba.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchIfEmpty;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L421bc0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421bc6.  v2:= temp @kind object;
  #L421bc8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `switchMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.switchMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L421bdc.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L421be2.  v0:= temp;
  #L421be4.  call temp:= `switchMap`(v1, v2, v0) @signature `Lio/reactivex/Observable;.switchMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L421bea.  v2:= temp @kind object;
  #L421bec.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `switchMap`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.switchMap:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L421c00.  v0:= "mapper is null" @kind object;
  #L421c04.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421c0a.  v0:= "bufferSize" @kind object;
  #L421c0e.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L421c14.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L421c18.  if v0 == 0 then goto L421c42;
  #L421c1c.  v4:= v2 @kind object;
  #L421c1e.  v4:= (`io.reactivex.internal.fuseable.ScalarCallable`) v4 @kind object;
  #L421c22.  call temp:= `call`(v4) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L421c28.  v4:= temp @kind object;
  #L421c2a.  if v4 != 0 then goto L421c38;
  #L421c2e.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L421c34.  v3:= temp @kind object;
  #L421c36.  return v3 @kind object;
  #L421c38.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L421c3e.  v3:= temp @kind object;
  #L421c40.  return v3 @kind object;
  #L421c42.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchMap`;
  #L421c46.  v1:= 0I;
  #L421c48.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L421c4e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421c54.  v3:= temp @kind object;
  #L421c56.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `switchMapCompletable`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.switchMapCompletable:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41da8c.  v0:= "mapper is null" @kind object;
  #L41da90.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41da96.  v0:= new `io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable`;
  #L41da9a.  v1:= 0I;
  #L41da9c.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/mixed/ObservableSwitchMapCompletable;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L41daa2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L41daa8.  v3:= temp @kind object;
  #L41daaa.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `switchMapCompletableDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.switchMapCompletableDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41dabc.  v0:= "mapper is null" @kind object;
  #L41dac0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41dac6.  v0:= new `io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable`;
  #L41daca.  v1:= 1I;
  #L41dacc.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/mixed/ObservableSwitchMapCompletable;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L41dad2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L41dad8.  v3:= temp @kind object;
  #L41dada.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchMapDelayError`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.switchMapDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L421c68.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L421c6e.  v0:= temp;
  #L421c70.  call temp:= `switchMapDelayError`(v1, v2, v0) @signature `Lio/reactivex/Observable;.switchMapDelayError:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L421c76.  v2:= temp @kind object;
  #L421c78.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `switchMapDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.switchMapDelayError:(Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L421c8c.  v0:= "mapper is null" @kind object;
  #L421c90.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421c96.  v0:= "bufferSize" @kind object;
  #L421c9a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L421ca0.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.fuseable.ScalarCallable` @kind boolean;
  #L421ca4.  if v0 == 0 then goto L421cce;
  #L421ca8.  v4:= v2 @kind object;
  #L421caa.  v4:= (`io.reactivex.internal.fuseable.ScalarCallable`) v4 @kind object;
  #L421cae.  call temp:= `call`(v4) @signature `Lio/reactivex/internal/fuseable/ScalarCallable;.call:()Ljava/lang/Object;` @kind interface;
  #L421cb4.  v4:= temp @kind object;
  #L421cb6.  if v4 != 0 then goto L421cc4;
  #L421cba.  call temp:= `empty`() @signature `Lio/reactivex/Observable;.empty:()Lio/reactivex/Observable;` @kind static;
  #L421cc0.  v3:= temp @kind object;
  #L421cc2.  return v3 @kind object;
  #L421cc4.  call temp:= `scalarXMap`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.scalarXMap:(Ljava/lang/Object;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind static;
  #L421cca.  v3:= temp @kind object;
  #L421ccc.  return v3 @kind object;
  #L421cce.  v0:= new `io.reactivex.internal.operators.observable.ObservableSwitchMap`;
  #L421cd2.  v1:= 1I;
  #L421cd4.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSwitchMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;IZ)V` @kind direct;
  #L421cda.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421ce0.  v3:= temp @kind object;
  #L421ce2.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchMapMaybe`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.switchMapMaybe:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L421cf4.  v0:= "mapper is null" @kind object;
  #L421cf8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421cfe.  v0:= new `io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe`;
  #L421d02.  v1:= 0I;
  #L421d04.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/mixed/ObservableSwitchMapMaybe;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L421d0a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421d10.  v3:= temp @kind object;
  #L421d12.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchMapMaybeDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.switchMapMaybeDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L421d24.  v0:= "mapper is null" @kind object;
  #L421d28.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421d2e.  v0:= new `io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe`;
  #L421d32.  v1:= 1I;
  #L421d34.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/mixed/ObservableSwitchMapMaybe;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L421d3a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421d40.  v3:= temp @kind object;
  #L421d42.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchMapSingle`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.switchMapSingle:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L421d54.  v0:= "mapper is null" @kind object;
  #L421d58.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421d5e.  v0:= new `io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle`;
  #L421d62.  v1:= 0I;
  #L421d64.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/mixed/ObservableSwitchMapSingle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L421d6a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421d70.  v3:= temp @kind object;
  #L421d72.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `switchMapSingleDelayError`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.switchMapSingleDelayError:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L421d84.  v0:= "mapper is null" @kind object;
  #L421d88.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L421d8e.  v0:= new `io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle`;
  #L421d92.  v1:= 1I;
  #L421d94.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/mixed/ObservableSwitchMapSingle;.<init>:(Lio/reactivex/Observable;Lio/reactivex/functions/Function;Z)V` @kind direct;
  #L421d9a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421da0.  v3:= temp @kind object;
  #L421da2.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `take`(`io.reactivex.Observable` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/Observable;.take:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L421e84.  v0:= 0L;
  #L421e88.  v2:= lcmp(v4, v0);
  #L421e8c.  if v2 < 0 then goto L421ea4;
  #L421e90.  v0:= new `io.reactivex.internal.operators.observable.ObservableTake`;
  #L421e94.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableTake;.<init>:(Lio/reactivex/ObservableSource;J)V` @kind direct;
  #L421e9a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421ea0.  v4:= temp @kind object;
  #L421ea2.  return v4 @kind object;
  #L421ea4.  v0:= new `java.lang.IllegalArgumentException`;
  #L421ea8.  v1:= new `java.lang.StringBuilder`;
  #L421eac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L421eb2.  v2:= "count >= 0 required but it was " @kind object;
  #L421eb6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L421ebc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L421ec2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L421ec8.  v4:= temp @kind object;
  #L421eca.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L421ed0.  throw v0;
}
procedure `io.reactivex.Observable` `take`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.take:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L421ee4.  call temp:= `timer`(v1, v3) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind static;
  #L421eea.  v1:= temp @kind object;
  #L421eec.  call temp:= `takeUntil`(v0, v1) @signature `Lio/reactivex/Observable;.takeUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L421ef2.  v1:= temp @kind object;
  #L421ef4.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `take`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.take:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L421f08.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L421f0e.  v1:= temp @kind object;
  #L421f10.  call temp:= `takeUntil`(v0, v1) @signature `Lio/reactivex/Observable;.takeUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L421f16.  v1:= temp @kind object;
  #L421f18.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/Observable;.takeLast:(I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L421f2c.  if v4 < 0 then goto L421f76;
  #L421f30.  if v4 != 0 then goto L421f48;
  #L421f34.  v4:= new `io.reactivex.internal.operators.observable.ObservableIgnoreElements`;
  #L421f38.  call `<init>`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableIgnoreElements;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L421f3e.  call temp:= `onAssembly`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421f44.  v4:= temp @kind object;
  #L421f46.  return v4 @kind object;
  #L421f48.  v0:= 1I;
  #L421f4a.  if v4 != v0 then goto L421f62;
  #L421f4e.  v4:= new `io.reactivex.internal.operators.observable.ObservableTakeLastOne`;
  #L421f52.  call `<init>`(v4, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastOne;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L421f58.  call temp:= `onAssembly`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421f5e.  v4:= temp @kind object;
  #L421f60.  return v4 @kind object;
  #L421f62.  v0:= new `io.reactivex.internal.operators.observable.ObservableTakeLast`;
  #L421f66.  call `<init>`(v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLast;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L421f6c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L421f72.  v4:= temp @kind object;
  #L421f74.  return v4 @kind object;
  #L421f76.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L421f7a.  v1:= new `java.lang.StringBuilder`;
  #L421f7e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L421f84.  v2:= "count >= 0 required but it was " @kind object;
  #L421f88.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L421f8e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L421f94.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L421f9a.  v4:= temp @kind object;
  #L421f9c.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L421fa2.  throw v0;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4220a4.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L4220aa.  v6:= temp @kind object;
  #L4220ac.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L4220b2.  v8:= temp;
  #L4220b4.  v7:= 0I;
  #L4220b6.  v0:= v9 @kind object;
  #L4220b8.  v1:= v10 @kind wide;
  #L4220ba.  v3:= v12 @kind wide;
  #L4220bc.  v5:= v14 @kind object;
  #L4220be.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L4220c4.  v10:= temp @kind object;
  #L4220c6.  return v10 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object, `io.reactivex.Scheduler` v15 @kind object) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4220d8.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L4220de.  v8:= temp;
  #L4220e0.  v7:= 0I;
  #L4220e2.  v0:= v9 @kind object;
  #L4220e4.  v1:= v10 @kind wide;
  #L4220e6.  v3:= v12 @kind wide;
  #L4220e8.  v5:= v14 @kind object;
  #L4220ea.  v6:= v15 @kind object;
  #L4220ec.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L4220f2.  v10:= temp @kind object;
  #L4220f4.  return v10 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v11 @kind this, `long` v12 , `long` v14 , `java.util.concurrent.TimeUnit` v16 @kind object, `io.reactivex.Scheduler` v17 @kind object, `boolean` v18 , `int` v19 ) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L422108.  v2:= v12 @kind wide;
  #L42210a.  v0:= "unit is null" @kind object;
  #L42210e.  v6:= v16 @kind object;
  #L422112.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422118.  v0:= "scheduler is null" @kind object;
  #L42211c.  v7:= v17 @kind object;
  #L422120.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422126.  v0:= "bufferSize" @kind object;
  #L42212a.  v8:= v19;
  #L42212e.  call temp:= `verifyPositive`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L422134.  v0:= 0L;
  #L422138.  v4:= lcmp(v2, v0);
  #L42213c.  if v4 < 0 then goto L42216c;
  #L422140.  v10:= new `io.reactivex.internal.operators.observable.ObservableTakeLastTimed`;
  #L422144.  v0:= v10 @kind object;
  #L422146.  v1:= v11 @kind object;
  #L422148.  v2:= v12 @kind wide;
  #L42214a.  v4:= v14 @kind wide;
  #L42214c.  v6:= v16 @kind object;
  #L422150.  v7:= v17 @kind object;
  #L422154.  v8:= v19;
  #L422158.  v9:= v18;
  #L42215c.  call `<init>`(v0, v1, v2, v4, v6, v7, v8, v9) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;IZ)V` @kind direct;
  #L422162.  call temp:= `onAssembly`(v10) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422168.  v0:= temp @kind object;
  #L42216a.  return v0 @kind object;
  #L42216c.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L422170.  v1:= new `java.lang.StringBuilder`;
  #L422174.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42217a.  v4:= "count >= 0 required but it was " @kind object;
  #L42217e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L422184.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L42218a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L422190.  v1:= temp @kind object;
  #L422192.  call `<init>`(v0, v1) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L422198.  throw v0;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L421fb4.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L421fba.  v4:= temp @kind object;
  #L421fbc.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L421fc2.  v6:= temp;
  #L421fc4.  v5:= 0I;
  #L421fc6.  v0:= v7 @kind object;
  #L421fc8.  v1:= v8 @kind wide;
  #L421fca.  v3:= v10 @kind object;
  #L421fcc.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L421fd2.  v8:= temp @kind object;
  #L421fd4.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L42201c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L422022.  v6:= temp;
  #L422024.  v5:= 0I;
  #L422026.  v0:= v7 @kind object;
  #L422028.  v1:= v8 @kind wide;
  #L42202a.  v3:= v10 @kind object;
  #L42202c.  v4:= v11 @kind object;
  #L42202e.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L422034.  v8:= temp @kind object;
  #L422036.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object, `boolean` v12 ) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L422048.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L42204e.  v6:= temp;
  #L422050.  v0:= v7 @kind object;
  #L422052.  v1:= v8 @kind wide;
  #L422054.  v3:= v10 @kind object;
  #L422056.  v4:= v11 @kind object;
  #L422058.  v5:= v12;
  #L42205a.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L422060.  v8:= temp @kind object;
  #L422062.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L422074.  v1:= 9223372036854775807L;
  #L42207e.  v0:= v9 @kind object;
  #L422080.  v3:= v10 @kind wide;
  #L422082.  v5:= v12 @kind object;
  #L422084.  v6:= v13 @kind object;
  #L422086.  v7:= v14;
  #L422088.  v8:= v15;
  #L42208a.  call temp:= `takeLast`(v0, v1, v3, v5, v6, v7, v8) @signature `Lio/reactivex/Observable;.takeLast:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L422090.  v10:= temp @kind object;
  #L422092.  return v10 @kind object;
}
procedure `io.reactivex.Observable` `takeLast`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `boolean` v11 ) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L421fe8.  call temp:= `trampoline`() @signature `Lio/reactivex/schedulers/Schedulers;.trampoline:()Lio/reactivex/Scheduler;` @kind static;
  #L421fee.  v4:= temp @kind object;
  #L421ff0.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L421ff6.  v6:= temp;
  #L421ff8.  v0:= v7 @kind object;
  #L421ffa.  v1:= v8 @kind wide;
  #L421ffc.  v3:= v10 @kind object;
  #L421ffe.  v5:= v11;
  #L422000.  call temp:= `takeLast`(v0, v1, v3, v4, v5, v6) @signature `Lio/reactivex/Observable;.takeLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;ZI)Lio/reactivex/Observable;` @kind virtual;
  #L422006.  v8:= temp @kind object;
  #L422008.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `takeUntil`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.takeUntil:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4221ac.  v0:= "other is null" @kind object;
  #L4221b0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4221b6.  v0:= new `io.reactivex.internal.operators.observable.ObservableTakeUntil`;
  #L4221ba.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeUntil;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4221c0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4221c6.  v2:= temp @kind object;
  #L4221c8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `takeUntil`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.takeUntil:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4221dc.  v0:= "stopPredicate is null" @kind object;
  #L4221e0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4221e6.  v0:= new `io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate`;
  #L4221ea.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeUntilPredicate;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L4221f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4221f6.  v2:= temp @kind object;
  #L4221f8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `takeWhile`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Observable;.takeWhile:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42220c.  v0:= "predicate is null" @kind object;
  #L422210.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422216.  v0:= new `io.reactivex.internal.operators.observable.ObservableTakeWhile`;
  #L42221a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeWhile;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L422220.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422226.  v2:= temp @kind object;
  #L422228.  return v2 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.test:()Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423ef4.  v0:= new `io.reactivex.observers.TestObserver`;
  #L423ef8.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L423efe.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L423f04.  return v0 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Observable` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/Observable;.test:(Z)Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423f18.  v0:= new `io.reactivex.observers.TestObserver`;
  #L423f1c.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L423f22.  if v2 == 0 then goto L423f2c;
  #L423f26.  call `dispose`(v0) @signature `Lio/reactivex/observers/TestObserver;.dispose:()V` @kind virtual;
  #L423f2c.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Observable;.subscribe:(Lio/reactivex/Observer;)V` @kind virtual;
  #L423f32.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `throttleFirst`(`io.reactivex.Observable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42223c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L422242.  v0:= temp @kind object;
  #L422244.  call temp:= `throttleFirst`(v1, v2, v4, v0) @signature `Lio/reactivex/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L42224a.  v2:= temp @kind object;
  #L42224c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `throttleFirst`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.Scheduler` v11 @kind object) @signature `Lio/reactivex/Observable;.throttleFirst:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L422260.  v0:= "unit is null" @kind object;
  #L422264.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42226a.  v0:= "scheduler is null" @kind object;
  #L42226e.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422274.  v0:= new `io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed`;
  #L422278.  v1:= v0 @kind object;
  #L42227a.  v2:= v7 @kind object;
  #L42227c.  v3:= v8 @kind wide;
  #L42227e.  v5:= v10 @kind object;
  #L422280.  v6:= v11 @kind object;
  #L422282.  call `<init>`(v1, v2, v3, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleFirstTimed;.<init>:(Lio/reactivex/ObservableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L422288.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L42228e.  v8:= temp @kind object;
  #L422290.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `throttleLast`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.throttleLast:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4222a4.  call temp:= `sample`(v0, v1, v3) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind virtual;
  #L4222aa.  v1:= temp @kind object;
  #L4222ac.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `throttleLast`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.throttleLast:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4222c0.  call temp:= `sample`(v0, v1, v3, v4) @signature `Lio/reactivex/Observable;.sample:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L4222c6.  v1:= temp @kind object;
  #L4222c8.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `throttleLatest`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4222dc.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L4222e2.  v4:= temp @kind object;
  #L4222e4.  v5:= 0I;
  #L4222e6.  v0:= v6 @kind object;
  #L4222e8.  v1:= v7 @kind wide;
  #L4222ea.  v3:= v9 @kind object;
  #L4222ec.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L4222f2.  v7:= temp @kind object;
  #L4222f4.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `throttleLatest`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L422334.  v5:= 0I;
  #L422336.  v0:= v6 @kind object;
  #L422338.  v1:= v7 @kind wide;
  #L42233a.  v3:= v9 @kind object;
  #L42233c.  v4:= v10 @kind object;
  #L42233e.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L422344.  v7:= temp @kind object;
  #L422346.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `throttleLatest`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L422358.  v0:= "unit is null" @kind object;
  #L42235c.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422362.  v0:= "scheduler is null" @kind object;
  #L422366.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42236c.  v0:= new `io.reactivex.internal.operators.observable.ObservableThrottleLatest`;
  #L422370.  v1:= v0 @kind object;
  #L422372.  v2:= v8 @kind object;
  #L422374.  v3:= v9 @kind wide;
  #L422376.  v5:= v11 @kind object;
  #L422378.  v6:= v12 @kind object;
  #L42237a.  v7:= v13;
  #L42237c.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleLatest;.<init>:(Lio/reactivex/Observable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L422382.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422388.  v9:= temp @kind object;
  #L42238a.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `throttleLatest`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L422308.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L42230e.  v4:= temp @kind object;
  #L422310.  v0:= v6 @kind object;
  #L422312.  v1:= v7 @kind wide;
  #L422314.  v3:= v9 @kind object;
  #L422316.  v5:= v10;
  #L422318.  call temp:= `throttleLatest`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.throttleLatest:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Observable;` @kind virtual;
  #L42231e.  v7:= temp @kind object;
  #L422320.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `throttleWithTimeout`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Observable;.throttleWithTimeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L42239c.  call temp:= `debounce`(v0, v1, v3) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @kind virtual;
  #L4223a2.  v1:= temp @kind object;
  #L4223a4.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `throttleWithTimeout`(`io.reactivex.Observable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Observable;.throttleWithTimeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4223b8.  call temp:= `debounce`(v0, v1, v3, v4) @signature `Lio/reactivex/Observable;.debounce:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L4223be.  v1:= temp @kind object;
  #L4223c0.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `timeInterval`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.timeInterval:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4223d4.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4223d8.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L4223de.  v1:= temp @kind object;
  #L4223e0.  call temp:= `timeInterval`(v2, v0, v1) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L4223e6.  v0:= temp @kind object;
  #L4223e8.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `timeInterval`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.timeInterval:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4223fc.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L422400.  call temp:= `timeInterval`(v1, v0, v2) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L422406.  v2:= temp @kind object;
  #L422408.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeInterval`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42241c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L422422.  v0:= temp @kind object;
  #L422424.  call temp:= `timeInterval`(v1, v2, v0) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L42242a.  v2:= temp @kind object;
  #L42242c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeInterval`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.timeInterval:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L422440.  v0:= "unit is null" @kind object;
  #L422444.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42244a.  v0:= "scheduler is null" @kind object;
  #L42244e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422454.  v0:= new `io.reactivex.internal.operators.observable.ObservableTimeInterval`;
  #L422458.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableTimeInterval;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L42245e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422464.  v2:= temp @kind object;
  #L422466.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L422514.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L42251a.  v5:= temp @kind object;
  #L42251c.  v4:= 0I;
  #L42251e.  v0:= v6 @kind object;
  #L422520.  v1:= v7 @kind wide;
  #L422522.  v3:= v9 @kind object;
  #L422524.  call temp:= `b`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind direct;
  #L42252a.  v7:= temp @kind object;
  #L42252c.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.ObservableSource` v11 @kind object) @signature `Lio/reactivex/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L422540.  v0:= "other is null" @kind object;
  #L422544.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42254a.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L422550.  v6:= temp @kind object;
  #L422552.  v1:= v7 @kind object;
  #L422554.  v2:= v8 @kind wide;
  #L422556.  v4:= v10 @kind object;
  #L422558.  v5:= v11 @kind object;
  #L42255a.  call temp:= `b`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind direct;
  #L422560.  v8:= temp @kind object;
  #L422562.  return v8 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L422574.  v4:= 0I;
  #L422576.  v0:= v6 @kind object;
  #L422578.  v1:= v7 @kind wide;
  #L42257a.  v3:= v9 @kind object;
  #L42257c.  v5:= v10 @kind object;
  #L42257e.  call temp:= `b`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind direct;
  #L422584.  v7:= temp @kind object;
  #L422586.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object, `io.reactivex.ObservableSource` v11 @kind object) @signature `Lio/reactivex/Observable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L422598.  v0:= "other is null" @kind object;
  #L42259c.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4225a2.  v0:= v6 @kind object;
  #L4225a4.  v1:= v7 @kind wide;
  #L4225a6.  v3:= v9 @kind object;
  #L4225a8.  v4:= v11 @kind object;
  #L4225aa.  v5:= v10 @kind object;
  #L4225ac.  call temp:= `b`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Observable;.b:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind direct;
  #L4225b2.  v7:= temp @kind object;
  #L4225b4.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.timeout:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L422478.  v0:= "firstTimeoutIndicator is null" @kind object;
  #L42247c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422482.  v0:= 0I;
  #L422484.  call temp:= `c`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.c:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind direct;
  #L42248a.  v2:= temp @kind object;
  #L42248c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Observable;.timeout:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4224a0.  v0:= "firstTimeoutIndicator is null" @kind object;
  #L4224a4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4224aa.  v0:= "other is null" @kind object;
  #L4224ae.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4224b4.  call temp:= `c`(v1, v2, v3, v4) @signature `Lio/reactivex/Observable;.c:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind direct;
  #L4224ba.  v2:= temp @kind object;
  #L4224bc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.timeout:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4224d0.  v0:= 0I;
  #L4224d2.  call temp:= `c`(v1, v0, v2, v0) @signature `Lio/reactivex/Observable;.c:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind direct;
  #L4224d8.  v2:= temp @kind object;
  #L4224da.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timeout`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.ObservableSource` v3 @kind object) @signature `Lio/reactivex/Observable;.timeout:(Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4224ec.  v0:= "other is null" @kind object;
  #L4224f0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4224f6.  v0:= 0I;
  #L4224f8.  call temp:= `c`(v1, v0, v2, v3) @signature `Lio/reactivex/Observable;.c:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind direct;
  #L4224fe.  v2:= temp @kind object;
  #L422500.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timestamp`(`io.reactivex.Observable` v2 @kind this) @signature `Lio/reactivex/Observable;.timestamp:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4226a4.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4226a8.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L4226ae.  v1:= temp @kind object;
  #L4226b0.  call temp:= `timestamp`(v2, v0, v1) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L4226b6.  v0:= temp @kind object;
  #L4226b8.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `timestamp`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.timestamp:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4226cc.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4226d0.  call temp:= `timestamp`(v1, v0, v2) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L4226d6.  v2:= temp @kind object;
  #L4226d8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timestamp`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4226ec.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L4226f2.  v0:= temp @kind object;
  #L4226f4.  call temp:= `timestamp`(v1, v2, v0) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind virtual;
  #L4226fa.  v2:= temp @kind object;
  #L4226fc.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `timestamp`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.Scheduler` v3 @kind object) @signature `Lio/reactivex/Observable;.timestamp:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L422710.  v0:= "unit is null" @kind object;
  #L422714.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42271a.  v0:= "scheduler is null" @kind object;
  #L42271e.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422724.  call temp:= `timestampWith`(v2, v3) @signature `Lio/reactivex/internal/functions/Functions;.timestampWith:(Ljava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/functions/Function;` @kind static;
  #L42272a.  v2:= temp @kind object;
  #L42272c.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/Observable;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L422732.  v2:= temp @kind object;
  #L422734.  return v2 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.to:(Lio/reactivex/functions/Function;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L424140.  v0:= "converter is null" @kind object;
  #L424144.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42414a.  v2:= temp @kind object;
  #L42414c.  v2:= (`io.reactivex.functions.Function`) v2 @kind object;
  #L424150.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L424156.  v2:= temp @kind object;
  #L424158.  return v2 @kind object;
  #L42415a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42415c.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L424162.  call temp:= `wrapOrThrow`(v2) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L424168.  v2:= temp @kind object;
  #L42416a.  throw v2;
  catch `java.lang.Throwable` @[L424140..L424158] goto L42415a;
}
procedure `io.reactivex.Flowable` `toFlowable`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.BackpressureStrategy` v3 @kind object) @signature `Lio/reactivex/Observable;.toFlowable:(Lio/reactivex/BackpressureStrategy;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41daec.  v0:= new `io.reactivex.internal.operators.flowable.FlowableFromObservable`;
  #L41daf0.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromObservable;.<init>:(Lio/reactivex/Observable;)V` @kind direct;
  #L41daf6.  v1:= `@@io.reactivex.Observable$a.a` @type ^`int`[] @kind object;
  #L41dafa.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L41db00.  v3:= temp;
  #L41db02.  v3:= v1[v3];
  #L41db06.  v1:= 1I;
  #L41db08.  if v3 == v1 then goto L41db48;
  #L41db0c.  v1:= 2I;
  #L41db0e.  if v3 == v1 then goto L41db3e;
  #L41db12.  v1:= 3I;
  #L41db14.  if v3 == v1 then goto L41db3c;
  #L41db18.  v1:= 4I;
  #L41db1a.  if v3 == v1 then goto L41db28;
  #L41db1e.  call temp:= `onBackpressureBuffer`(v0) @signature `Lio/reactivex/Flowable;.onBackpressureBuffer:()Lio/reactivex/Flowable;` @kind virtual;
  #L41db24.  v3:= temp @kind object;
  #L41db26.  return v3 @kind object;
  #L41db28.  v3:= new `io.reactivex.internal.operators.flowable.FlowableOnBackpressureError`;
  #L41db2c.  call `<init>`(v3, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnBackpressureError;.<init>:(Lio/reactivex/Flowable;)V` @kind direct;
  #L41db32.  call temp:= `onAssembly`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L41db38.  v3:= temp @kind object;
  #L41db3a.  return v3 @kind object;
  #L41db3c.  return v0 @kind object;
  #L41db3e.  call temp:= `onBackpressureLatest`(v0) @signature `Lio/reactivex/Flowable;.onBackpressureLatest:()Lio/reactivex/Flowable;` @kind virtual;
  #L41db44.  v3:= temp @kind object;
  #L41db46.  return v3 @kind object;
  #L41db48.  call temp:= `onBackpressureDrop`(v0) @signature `Lio/reactivex/Flowable;.onBackpressureDrop:()Lio/reactivex/Flowable;` @kind virtual;
  #L41db4e.  v3:= temp @kind object;
  #L41db50.  return v3 @kind object;
}
procedure `java.util.concurrent.Future` `toFuture`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.toFuture:()Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L424188.  v0:= new `io.reactivex.internal.observers.FutureObserver`;
  #L42418c.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/FutureObserver;.<init>:()V` @kind direct;
  #L424192.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/Observable;.subscribeWith:(Lio/reactivex/Observer;)Lio/reactivex/Observer;` @kind virtual;
  #L424198.  v0:= temp @kind object;
  #L42419a.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L42419e.  return v0 @kind object;
}
procedure `io.reactivex.Single` `toList`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.toList:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423930.  v0:= 16I;
  #L423934.  call temp:= `toList`(v1, v0) @signature `Lio/reactivex/Observable;.toList:(I)Lio/reactivex/Single;` @kind virtual;
  #L42393a.  v0:= temp @kind object;
  #L42393c.  return v0 @kind object;
}
procedure `io.reactivex.Single` `toList`(`io.reactivex.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/Observable;.toList:(I)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423950.  v0:= "capacityHint" @kind object;
  #L423954.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L42395a.  v0:= new `io.reactivex.internal.operators.observable.ObservableToListSingle`;
  #L42395e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableToListSingle;.<init>:(Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L423964.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42396a.  v2:= temp @kind object;
  #L42396c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toList`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/Observable;.toList:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423980.  v0:= "collectionSupplier is null" @kind object;
  #L423984.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42398a.  v0:= new `io.reactivex.internal.operators.observable.ObservableToListSingle`;
  #L42398e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableToListSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L423994.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42399a.  v2:= temp @kind object;
  #L42399c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Observable;.toMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4239b0.  v0:= "keySelector is null" @kind object;
  #L4239b4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4239ba.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L4239c0.  v0:= temp @kind object;
  #L4239c2.  call temp:= `toMapKeySelector`(v2) @signature `Lio/reactivex/internal/functions/Functions;.toMapKeySelector:(Lio/reactivex/functions/Function;)Lio/reactivex/functions/BiConsumer;` @kind static;
  #L4239c8.  v2:= temp @kind object;
  #L4239ca.  call temp:= `collect`(v1, v0, v2) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L4239d0.  v2:= temp @kind object;
  #L4239d2.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.toMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4239e4.  v0:= "keySelector is null" @kind object;
  #L4239e8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4239ee.  v0:= "valueSelector is null" @kind object;
  #L4239f2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4239f8.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L4239fe.  v0:= temp @kind object;
  #L423a00.  call temp:= `toMapKeyValueSelector`(v2, v3) @signature `Lio/reactivex/internal/functions/Functions;.toMapKeyValueSelector:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/functions/BiConsumer;` @kind static;
  #L423a06.  v2:= temp @kind object;
  #L423a08.  call temp:= `collect`(v1, v0, v2) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L423a0e.  v2:= temp @kind object;
  #L423a10.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.toMap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423a24.  v0:= "keySelector is null" @kind object;
  #L423a28.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423a2e.  v0:= "valueSelector is null" @kind object;
  #L423a32.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423a38.  v0:= "mapSupplier is null" @kind object;
  #L423a3c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423a42.  call temp:= `toMapKeyValueSelector`(v2, v3) @signature `Lio/reactivex/internal/functions/Functions;.toMapKeyValueSelector:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/functions/BiConsumer;` @kind static;
  #L423a48.  v2:= temp @kind object;
  #L423a4a.  call temp:= `collect`(v1, v4, v2) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L423a50.  v2:= temp @kind object;
  #L423a52.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMultimap`(`io.reactivex.Observable` v3 @kind this, `io.reactivex.functions.Function` v4 @kind object) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L423a64.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L423a6a.  v0:= temp @kind object;
  #L423a6c.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L423a72.  v1:= temp @kind object;
  #L423a74.  call temp:= `asFunction`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/functions/Function;` @kind static;
  #L423a7a.  v2:= temp @kind object;
  #L423a7c.  call temp:= `toMultimap`(v3, v4, v0, v1, v2) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L423a82.  v4:= temp @kind object;
  #L423a84.  return v4 @kind object;
}
procedure `io.reactivex.Single` `toMultimap`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object, `io.reactivex.functions.Function` v4 @kind object) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L423a98.  call temp:= `asCallable`() @signature `Lio/reactivex/internal/util/HashMapSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @kind static;
  #L423a9e.  v0:= temp @kind object;
  #L423aa0.  call temp:= `asFunction`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/functions/Function;` @kind static;
  #L423aa6.  v1:= temp @kind object;
  #L423aa8.  call temp:= `toMultimap`(v2, v3, v4, v0, v1) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L423aae.  v3:= temp @kind object;
  #L423ab0.  return v3 @kind object;
}
procedure `io.reactivex.Single` `toMultimap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423ac4.  call temp:= `asFunction`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/functions/Function;` @kind static;
  #L423aca.  v0:= temp @kind object;
  #L423acc.  call temp:= `toMultimap`(v1, v2, v3, v4, v0) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L423ad2.  v2:= temp @kind object;
  #L423ad4.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toMultimap`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object, `io.reactivex.functions.Function` v5 @kind object) @signature `Lio/reactivex/Observable;.toMultimap:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423ae8.  v0:= "keySelector is null" @kind object;
  #L423aec.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423af2.  v0:= "valueSelector is null" @kind object;
  #L423af6.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423afc.  v0:= "mapSupplier is null" @kind object;
  #L423b00.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423b06.  v0:= "collectionFactory is null" @kind object;
  #L423b0a.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423b10.  call temp:= `toMultimapKeyValueSelector`(v2, v3, v5) @signature `Lio/reactivex/internal/functions/Functions;.toMultimapKeyValueSelector:(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;)Lio/reactivex/functions/BiConsumer;` @kind static;
  #L423b16.  v2:= temp @kind object;
  #L423b18.  call temp:= `collect`(v1, v4, v2) @signature `Lio/reactivex/Observable;.collect:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @kind virtual;
  #L423b1e.  v2:= temp @kind object;
  #L423b20.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toSortedList`(`io.reactivex.Observable` v1 @kind this) @signature `Lio/reactivex/Observable;.toSortedList:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423b34.  call temp:= `naturalOrder`() @signature `Lio/reactivex/internal/functions/Functions;.naturalOrder:()Ljava/util/Comparator;` @kind static;
  #L423b3a.  v0:= temp @kind object;
  #L423b3c.  call temp:= `toSortedList`(v1, v0) @signature `Lio/reactivex/Observable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/Single;` @kind virtual;
  #L423b42.  v0:= temp @kind object;
  #L423b44.  return v0 @kind object;
}
procedure `io.reactivex.Single` `toSortedList`(`io.reactivex.Observable` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/Observable;.toSortedList:(I)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423b58.  call temp:= `naturalOrder`() @signature `Lio/reactivex/internal/functions/Functions;.naturalOrder:()Ljava/util/Comparator;` @kind static;
  #L423b5e.  v0:= temp @kind object;
  #L423b60.  call temp:= `toSortedList`(v1, v0, v2) @signature `Lio/reactivex/Observable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/Single;` @kind virtual;
  #L423b66.  v2:= temp @kind object;
  #L423b68.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toSortedList`(`io.reactivex.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lio/reactivex/Observable;.toSortedList:(Ljava/util/Comparator;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423b7c.  v0:= "comparator is null" @kind object;
  #L423b80.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423b86.  call temp:= `toList`(v1) @signature `Lio/reactivex/Observable;.toList:()Lio/reactivex/Single;` @kind virtual;
  #L423b8c.  v0:= temp @kind object;
  #L423b8e.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/functions/Function;` @kind static;
  #L423b94.  v2:= temp @kind object;
  #L423b96.  call temp:= `map`(v0, v2) @signature `Lio/reactivex/Single;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L423b9c.  v2:= temp @kind object;
  #L423b9e.  return v2 @kind object;
}
procedure `io.reactivex.Single` `toSortedList`(`io.reactivex.Observable` v1 @kind this, `java.util.Comparator` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.toSortedList:(Ljava/util/Comparator;I)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423bb0.  v0:= "comparator is null" @kind object;
  #L423bb4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L423bba.  call temp:= `toList`(v1, v3) @signature `Lio/reactivex/Observable;.toList:(I)Lio/reactivex/Single;` @kind virtual;
  #L423bc0.  v3:= temp @kind object;
  #L423bc2.  call temp:= `listSorter`(v2) @signature `Lio/reactivex/internal/functions/Functions;.listSorter:(Ljava/util/Comparator;)Lio/reactivex/functions/Function;` @kind static;
  #L423bc8.  v2:= temp @kind object;
  #L423bca.  call temp:= `map`(v3, v2) @signature `Lio/reactivex/Single;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L423bd0.  v2:= temp @kind object;
  #L423bd2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `unsubscribeOn`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Observable;.unsubscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L422790.  v0:= "scheduler is null" @kind object;
  #L422794.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42279a.  v0:= new `io.reactivex.internal.operators.observable.ObservableUnsubscribeOn`;
  #L42279e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableUnsubscribeOn;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L4227a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4227aa.  v2:= temp @kind object;
  #L4227ac.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v6 @kind this, `long` v7 ) @signature `Lio/reactivex/Observable;.window:(J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L422940.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L422946.  v5:= temp;
  #L422948.  v0:= v6 @kind object;
  #L42294a.  v1:= v7 @kind wide;
  #L42294c.  v3:= v7 @kind wide;
  #L42294e.  call temp:= `window`(v0, v1, v3, v5) @signature `Lio/reactivex/Observable;.window:(JJI)Lio/reactivex/Observable;` @kind virtual;
  #L422954.  v7:= temp @kind object;
  #L422956.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v6 @kind this, `long` v7 , `long` v9 ) @signature `Lio/reactivex/Observable;.window:(JJ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L422ae4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L422aea.  v5:= temp;
  #L422aec.  v0:= v6 @kind object;
  #L422aee.  v1:= v7 @kind wide;
  #L422af0.  v3:= v9 @kind wide;
  #L422af2.  call temp:= `window`(v0, v1, v3, v5) @signature `Lio/reactivex/Observable;.window:(JJI)Lio/reactivex/Observable;` @kind virtual;
  #L422af8.  v7:= temp @kind object;
  #L422afa.  return v7 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `int` v13 ) @signature `Lio/reactivex/Observable;.window:(JJI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L422b0c.  v0:= "count" @kind object;
  #L422b10.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L422b16.  v0:= "skip" @kind object;
  #L422b1a.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L422b20.  v0:= "bufferSize" @kind object;
  #L422b24.  call temp:= `verifyPositive`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L422b2a.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindow`;
  #L422b2e.  v1:= v0 @kind object;
  #L422b30.  v2:= v8 @kind object;
  #L422b32.  v3:= v9 @kind wide;
  #L422b34.  v5:= v11 @kind wide;
  #L422b36.  v7:= v13;
  #L422b38.  call `<init>`(v1, v2, v3, v5, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableWindow;.<init>:(Lio/reactivex/ObservableSource;JJI)V` @kind direct;
  #L422b3e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422b44.  v9:= temp @kind object;
  #L422b46.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L422b58.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L422b5e.  v6:= temp @kind object;
  #L422b60.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L422b66.  v7:= temp;
  #L422b68.  v0:= v8 @kind object;
  #L422b6a.  v1:= v9 @kind wide;
  #L422b6c.  v3:= v11 @kind wide;
  #L422b6e.  v5:= v13 @kind object;
  #L422b70.  call temp:= `window`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @kind virtual;
  #L422b76.  v9:= temp @kind object;
  #L422b78.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `long` v11 , `java.util.concurrent.TimeUnit` v13 @kind object, `io.reactivex.Scheduler` v14 @kind object) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L422b8c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L422b92.  v7:= temp;
  #L422b94.  v0:= v8 @kind object;
  #L422b96.  v1:= v9 @kind wide;
  #L422b98.  v3:= v11 @kind wide;
  #L422b9a.  v5:= v13 @kind object;
  #L422b9c.  v6:= v14 @kind object;
  #L422b9e.  call temp:= `window`(v0, v1, v3, v5, v6, v7) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @kind virtual;
  #L422ba4.  v9:= temp @kind object;
  #L422ba6.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v13 @kind this, `long` v14 , `long` v16 , `java.util.concurrent.TimeUnit` v18 @kind object, `io.reactivex.Scheduler` v19 @kind object, `int` v20 ) @signature `Lio/reactivex/Observable;.window:(JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L422bb8.  v0:= "timespan" @kind object;
  #L422bbc.  v3:= v14 @kind wide;
  #L422bbe.  call temp:= `verifyPositive`(v14, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L422bc4.  v0:= "timeskip" @kind object;
  #L422bc8.  v5:= v16 @kind wide;
  #L422bcc.  call temp:= `verifyPositive`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L422bd2.  v0:= "bufferSize" @kind object;
  #L422bd6.  v11:= v20;
  #L422bda.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L422be0.  v0:= "scheduler is null" @kind object;
  #L422be4.  v8:= v19 @kind object;
  #L422be8.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422bee.  v0:= "unit is null" @kind object;
  #L422bf2.  v7:= v18 @kind object;
  #L422bf6.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422bfc.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowTimed`;
  #L422c00.  v9:= 9223372036854775807L;
  #L422c0a.  v12:= 0I;
  #L422c0c.  v1:= v0 @kind object;
  #L422c0e.  v2:= v13 @kind object;
  #L422c10.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v11, v12) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JIZ)V` @kind direct;
  #L422c16.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422c1c.  v0:= temp @kind object;
  #L422c1e.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L422968.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L42296e.  v4:= temp @kind object;
  #L422970.  v5:= 9223372036854775807L;
  #L42297a.  v7:= 0I;
  #L42297c.  v0:= v8 @kind object;
  #L42297e.  v1:= v9 @kind wide;
  #L422980.  v3:= v11 @kind object;
  #L422982.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L422988.  v9:= temp @kind object;
  #L42298a.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `long` v12 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L422a8c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L422a92.  v4:= temp @kind object;
  #L422a94.  v7:= 0I;
  #L422a96.  v0:= v8 @kind object;
  #L422a98.  v1:= v9 @kind wide;
  #L422a9a.  v3:= v11 @kind object;
  #L422a9c.  v5:= v12 @kind wide;
  #L422a9e.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L422aa4.  v9:= temp @kind object;
  #L422aa6.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `long` v12 , `boolean` v14 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;JZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L422ab8.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L422abe.  v4:= temp @kind object;
  #L422ac0.  v0:= v8 @kind object;
  #L422ac2.  v1:= v9 @kind wide;
  #L422ac4.  v3:= v11 @kind object;
  #L422ac6.  v5:= v12 @kind wide;
  #L422ac8.  v7:= v14;
  #L422aca.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L422ad0.  v9:= temp @kind object;
  #L422ad2.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L42299c.  v5:= 9223372036854775807L;
  #L4229a6.  v7:= 0I;
  #L4229a8.  v0:= v8 @kind object;
  #L4229aa.  v1:= v9 @kind wide;
  #L4229ac.  v3:= v11 @kind object;
  #L4229ae.  v4:= v12 @kind object;
  #L4229b0.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L4229b6.  v9:= temp @kind object;
  #L4229b8.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `long` v13 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;J)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4229cc.  v7:= 0I;
  #L4229ce.  v0:= v8 @kind object;
  #L4229d0.  v1:= v9 @kind wide;
  #L4229d2.  v3:= v11 @kind object;
  #L4229d4.  v4:= v12 @kind object;
  #L4229d6.  v5:= v13 @kind wide;
  #L4229d8.  call temp:= `window`(v0, v1, v3, v4, v5, v7) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @kind virtual;
  #L4229de.  v9:= temp @kind object;
  #L4229e0.  return v9 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v9 @kind this, `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `io.reactivex.Scheduler` v13 @kind object, `long` v14 , `boolean` v16 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZ)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4229f4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L4229fa.  v8:= temp;
  #L4229fc.  v0:= v9 @kind object;
  #L4229fe.  v1:= v10 @kind wide;
  #L422a00.  v3:= v12 @kind object;
  #L422a02.  v4:= v13 @kind object;
  #L422a04.  v5:= v14 @kind wide;
  #L422a06.  v7:= v16;
  #L422a0a.  call temp:= `window`(v0, v1, v3, v4, v5, v7, v8) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZI)Lio/reactivex/Observable;` @kind virtual;
  #L422a10.  v0:= temp @kind object;
  #L422a12.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v13 @kind this, `long` v14 , `java.util.concurrent.TimeUnit` v16 @kind object, `io.reactivex.Scheduler` v17 @kind object, `long` v18 , `boolean` v20 , `int` v21 ) @signature `Lio/reactivex/Observable;.window:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L422a24.  v0:= "bufferSize" @kind object;
  #L422a28.  v11:= v21;
  #L422a2c.  call temp:= `verifyPositive`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L422a32.  v0:= "scheduler is null" @kind object;
  #L422a36.  v8:= v17 @kind object;
  #L422a3a.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422a40.  v0:= "unit is null" @kind object;
  #L422a44.  v7:= v16 @kind object;
  #L422a48.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422a4e.  v0:= "count" @kind object;
  #L422a52.  v9:= v18 @kind wide;
  #L422a56.  call temp:= `verifyPositive`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(JLjava/lang/String;)J` @kind static;
  #L422a5c.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowTimed`;
  #L422a60.  v1:= v0 @kind object;
  #L422a62.  v2:= v13 @kind object;
  #L422a64.  v3:= v14 @kind wide;
  #L422a66.  v5:= v14 @kind wide;
  #L422a68.  v12:= v20;
  #L422a6c.  call `<init>`(v1, v2, v3, v5, v7, v8, v9, v11, v12) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowTimed;.<init>:(Lio/reactivex/ObservableSource;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;JIZ)V` @kind direct;
  #L422a72.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422a78.  v0:= temp @kind object;
  #L422a7a.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L422820.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L422826.  v0:= temp;
  #L422828.  call temp:= `window`(v1, v2, v0) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @kind virtual;
  #L42282e.  v2:= temp @kind object;
  #L422830.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L422844.  v0:= "boundary is null" @kind object;
  #L422848.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42284e.  v0:= "bufferSize" @kind object;
  #L422852.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L422858.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowBoundary`;
  #L42285c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundary;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;I)V` @kind direct;
  #L422862.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422868.  v2:= temp @kind object;
  #L42286a.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42287c.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L422882.  v0:= temp;
  #L422884.  call temp:= `window`(v1, v2, v3, v0) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @kind virtual;
  #L42288a.  v2:= temp @kind object;
  #L42288c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Observable;.window:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4228a0.  v0:= "openingIndicator is null" @kind object;
  #L4228a4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4228aa.  v0:= "closingIndicator is null" @kind object;
  #L4228ae.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4228b4.  v0:= "bufferSize" @kind object;
  #L4228b8.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4228be.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector`;
  #L4228c2.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySelector;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;I)V` @kind direct;
  #L4228c8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4228ce.  v2:= temp @kind object;
  #L4228d0.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/Observable;.window:(Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4228e4.  call temp:= `bufferSize`() @signature `Lio/reactivex/Observable;.bufferSize:()I` @kind static;
  #L4228ea.  v0:= temp;
  #L4228ec.  call temp:= `window`(v1, v2, v0) @signature `Lio/reactivex/Observable;.window:(Ljava/util/concurrent/Callable;I)Lio/reactivex/Observable;` @kind virtual;
  #L4228f2.  v2:= temp @kind object;
  #L4228f4.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `window`(`io.reactivex.Observable` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/Observable;.window:(Ljava/util/concurrent/Callable;I)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L422908.  v0:= "boundary is null" @kind object;
  #L42290c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422912.  v0:= "bufferSize" @kind object;
  #L422916.  call temp:= `verifyPositive`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L42291c.  v0:= new `io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier`;
  #L422920.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableWindowBoundarySupplier;.<init>:(Lio/reactivex/ObservableSource;Ljava/util/concurrent/Callable;I)V` @kind direct;
  #L422926.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L42292c.  v2:= temp @kind object;
  #L42292e.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.ObservableSource` v6 @kind object, `io.reactivex.functions.Function5` v7 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function5;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L422c30.  v0:= "o1 is null" @kind object;
  #L422c34.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422c3a.  v0:= "o2 is null" @kind object;
  #L422c3e.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422c44.  v0:= "o3 is null" @kind object;
  #L422c48.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422c4e.  v0:= "o4 is null" @kind object;
  #L422c52.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422c58.  v0:= "combiner is null" @kind object;
  #L422c5c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422c62.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function5;)Lio/reactivex/functions/Function;` @kind static;
  #L422c68.  v7:= temp @kind object;
  #L422c6a.  v0:= 4I;
  #L422c6c.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L422c70.  v1:= 0I;
  #L422c72.  v0[v1]:= v3 @kind object;
  #L422c76.  v3:= 1I;
  #L422c78.  v0[v3]:= v4 @kind object;
  #L422c7c.  v3:= 2I;
  #L422c7e.  v0[v3]:= v5 @kind object;
  #L422c82.  v3:= 3I;
  #L422c84.  v0[v3]:= v6 @kind object;
  #L422c88.  call temp:= `withLatestFrom`(v2, v0, v7) @signature `Lio/reactivex/Observable;.withLatestFrom:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L422c8e.  v3:= temp @kind object;
  #L422c90.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.ObservableSource` v5 @kind object, `io.reactivex.functions.Function4` v6 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function4;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L422ca4.  v0:= "o1 is null" @kind object;
  #L422ca8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422cae.  v0:= "o2 is null" @kind object;
  #L422cb2.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422cb8.  v0:= "o3 is null" @kind object;
  #L422cbc.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422cc2.  v0:= "combiner is null" @kind object;
  #L422cc6.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422ccc.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function4;)Lio/reactivex/functions/Function;` @kind static;
  #L422cd2.  v6:= temp @kind object;
  #L422cd4.  v0:= 3I;
  #L422cd6.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L422cda.  v1:= 0I;
  #L422cdc.  v0[v1]:= v3 @kind object;
  #L422ce0.  v3:= 1I;
  #L422ce2.  v0[v3]:= v4 @kind object;
  #L422ce6.  v3:= 2I;
  #L422ce8.  v0[v3]:= v5 @kind object;
  #L422cec.  call temp:= `withLatestFrom`(v2, v0, v6) @signature `Lio/reactivex/Observable;.withLatestFrom:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L422cf2.  v3:= temp @kind object;
  #L422cf4.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v2 @kind this, `io.reactivex.ObservableSource` v3 @kind object, `io.reactivex.ObservableSource` v4 @kind object, `io.reactivex.functions.Function3` v5 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function3;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L422d08.  v0:= "o1 is null" @kind object;
  #L422d0c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422d12.  v0:= "o2 is null" @kind object;
  #L422d16.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422d1c.  v0:= "combiner is null" @kind object;
  #L422d20.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422d26.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function3;)Lio/reactivex/functions/Function;` @kind static;
  #L422d2c.  v5:= temp @kind object;
  #L422d2e.  v0:= 2I;
  #L422d30.  v0:= new `io.reactivex.ObservableSource`[v0];
  #L422d34.  v1:= 0I;
  #L422d36.  v0[v1]:= v3 @kind object;
  #L422d3a.  v3:= 1I;
  #L422d3c.  v0[v3]:= v4 @kind object;
  #L422d40.  call temp:= `withLatestFrom`(v2, v0, v5) @signature `Lio/reactivex/Observable;.withLatestFrom:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @kind virtual;
  #L422d46.  v3:= temp @kind object;
  #L422d48.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L422d5c.  v0:= "other is null" @kind object;
  #L422d60.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422d66.  v0:= "combiner is null" @kind object;
  #L422d6a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422d70.  v0:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFrom`;
  #L422d74.  call `<init>`(v0, v1, v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFrom;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L422d7a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422d80.  v2:= temp @kind object;
  #L422d82.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L422dcc.  v0:= "others is null" @kind object;
  #L422dd0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422dd6.  v0:= "combiner is null" @kind object;
  #L422dda.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422de0.  v0:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany`;
  #L422de4.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Iterable;Lio/reactivex/functions/Function;)V` @kind direct;
  #L422dea.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422df0.  v2:= temp @kind object;
  #L422df2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `withLatestFrom`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource`[] v2 @kind object, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Observable;.withLatestFrom:([Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L422d94.  v0:= "others is null" @kind object;
  #L422d98.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422d9e.  v0:= "combiner is null" @kind object;
  #L422da2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L422da8.  v0:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany`;
  #L422dac.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/ObservableSource;[Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L422db2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L422db8.  v2:= temp @kind object;
  #L422dba.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `zipWith`(`io.reactivex.Observable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.zipWith:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L423464.  v0:= "other is null" @kind object;
  #L423468.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42346e.  call temp:= `zip`(v1, v2, v3) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @kind static;
  #L423474.  v2:= temp @kind object;
  #L423476.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `zipWith`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/Observable;.zipWith:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;Z)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L423488.  call temp:= `zip`(v0, v1, v2, v3) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;Z)Lio/reactivex/Observable;` @kind static;
  #L42348e.  v1:= temp @kind object;
  #L423490.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `zipWith`(`io.reactivex.Observable` v0 @kind this, `io.reactivex.ObservableSource` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/Observable;.zipWith:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;ZI)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4234a4.  call temp:= `zip`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/Observable;.zip:(Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/functions/BiFunction;ZI)Lio/reactivex/Observable;` @kind static;
  #L4234aa.  v1:= temp @kind object;
  #L4234ac.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `zipWith`(`io.reactivex.Observable` v1 @kind this, `java.lang.Iterable` v2 @kind object, `io.reactivex.functions.BiFunction` v3 @kind object) @signature `Lio/reactivex/Observable;.zipWith:(Ljava/lang/Iterable;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4234c0.  v0:= "other is null" @kind object;
  #L4234c4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4234ca.  v0:= "zipper is null" @kind object;
  #L4234ce.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4234d4.  v0:= new `io.reactivex.internal.operators.observable.ObservableZipIterable`;
  #L4234d8.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableZipIterable;.<init>:(Lio/reactivex/Observable;Ljava/lang/Iterable;Lio/reactivex/functions/BiFunction;)V` @kind direct;
  #L4234de.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4234e4.  v2:= temp @kind object;
  #L4234e6.  return v2 @kind object;
}
