record `io.reactivex.Single` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.SingleSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.Single` v0 @kind this) @signature `Lio/reactivex/Single;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4265f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4265fa.  return @kind void;
}
procedure `io.reactivex.Single` `a`(`io.reactivex.Single` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `io.reactivex.SingleSource` v13 @kind object) @signature `Lio/reactivex/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L425d84.  v0:= "unit is null" @kind object;
  #L425d88.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425d8e.  v0:= "scheduler is null" @kind object;
  #L425d92.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425d98.  v0:= new `io.reactivex.internal.operators.single.SingleTimeout`;
  #L425d9c.  v1:= v0 @kind object;
  #L425d9e.  v2:= v8 @kind object;
  #L425da0.  v3:= v9 @kind wide;
  #L425da2.  v5:= v11 @kind object;
  #L425da4.  v6:= v12 @kind object;
  #L425da6.  v7:= v13 @kind object;
  #L425da8.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/single/SingleTimeout;.<init>:(Lio/reactivex/SingleSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)V` @kind direct;
  #L425dae.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425db4.  v9:= temp @kind object;
  #L425db6.  return v9 @kind object;
}
procedure `io.reactivex.Single` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Single;.amb:(Ljava/lang/Iterable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L425178.  v0:= "sources is null" @kind object;
  #L42517c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425182.  v0:= new `io.reactivex.internal.operators.single.SingleAmb`;
  #L425186.  v1:= 0I;
  #L425188.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleAmb;.<init>:([Lio/reactivex/SingleSource;Ljava/lang/Iterable;)V` @kind direct;
  #L42518e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425194.  v2:= temp @kind object;
  #L425196.  return v2 @kind object;
}
procedure `io.reactivex.Single` `ambArray`(`io.reactivex.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/Single;.ambArray:([Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4251a8.  v0:= length @variable v2;
  #L4251aa.  if v0 != 0 then goto L4251c0;
  #L4251ae.  call temp:= `emptyThrower`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.emptyThrower:()Ljava/util/concurrent/Callable;` @kind static;
  #L4251b4.  v2:= temp @kind object;
  #L4251b6.  call temp:= `error`(v2) @signature `Lio/reactivex/Single;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @kind static;
  #L4251bc.  v2:= temp @kind object;
  #L4251be.  return v2 @kind object;
  #L4251c0.  v0:= length @variable v2;
  #L4251c2.  v1:= 1I;
  #L4251c4.  if v0 != v1 then goto L4251d8;
  #L4251c8.  v0:= 0I;
  #L4251ca.  v2:= v2[v0] @kind object;
  #L4251ce.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Single;.wrap:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L4251d4.  v2:= temp @kind object;
  #L4251d6.  return v2 @kind object;
  #L4251d8.  v0:= new `io.reactivex.internal.operators.single.SingleAmb`;
  #L4251dc.  v1:= 0I;
  #L4251de.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/single/SingleAmb;.<init>:([Lio/reactivex/SingleSource;Ljava/lang/Iterable;)V` @kind direct;
  #L4251e4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4251ea.  v2:= temp @kind object;
  #L4251ec.  return v2 @kind object;
}
procedure `io.reactivex.Single` `b`(`io.reactivex.Flowable` v2 @kind object) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L425e24.  v0:= new `io.reactivex.internal.operators.flowable.FlowableSingleSingle`;
  #L425e28.  v1:= 0I;
  #L425e2a.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableSingleSingle;.<init>:(Lio/reactivex/Flowable;Ljava/lang/Object;)V` @kind direct;
  #L425e30.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425e36.  v2:= temp @kind object;
  #L425e38.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L424934.  v0:= "source1 is null" @kind object;
  #L424938.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42493e.  v0:= "source2 is null" @kind object;
  #L424942.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424948.  v0:= 2I;
  #L42494a.  v0:= new `io.reactivex.SingleSource`[v0];
  #L42494e.  v1:= 0I;
  #L424950.  v0[v1]:= v2 @kind object;
  #L424954.  v2:= 1I;
  #L424956.  v0[v2]:= v3 @kind object;
  #L42495a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L424960.  v2:= temp @kind object;
  #L424962.  call temp:= `concat`(v2) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L424968.  v2:= temp @kind object;
  #L42496a.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L42497c.  v0:= "source1 is null" @kind object;
  #L424980.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424986.  v0:= "source2 is null" @kind object;
  #L42498a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424990.  v0:= "source3 is null" @kind object;
  #L424994.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42499a.  v0:= 3I;
  #L42499c.  v0:= new `io.reactivex.SingleSource`[v0];
  #L4249a0.  v1:= 0I;
  #L4249a2.  v0[v1]:= v2 @kind object;
  #L4249a6.  v2:= 1I;
  #L4249a8.  v0[v2]:= v3 @kind object;
  #L4249ac.  v2:= 2I;
  #L4249ae.  v0[v2]:= v4 @kind object;
  #L4249b2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L4249b8.  v2:= temp @kind object;
  #L4249ba.  call temp:= `concat`(v2) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L4249c0.  v2:= temp @kind object;
  #L4249c2.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4249d4.  v0:= "source1 is null" @kind object;
  #L4249d8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4249de.  v0:= "source2 is null" @kind object;
  #L4249e2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4249e8.  v0:= "source3 is null" @kind object;
  #L4249ec.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4249f2.  v0:= "source4 is null" @kind object;
  #L4249f6.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4249fc.  v0:= 4I;
  #L4249fe.  v0:= new `io.reactivex.SingleSource`[v0];
  #L424a02.  v1:= 0I;
  #L424a04.  v0[v1]:= v2 @kind object;
  #L424a08.  v2:= 1I;
  #L424a0a.  v0[v2]:= v3 @kind object;
  #L424a0e.  v2:= 2I;
  #L424a10.  v0[v2]:= v4 @kind object;
  #L424a14.  v2:= 3I;
  #L424a16.  v0[v2]:= v5 @kind object;
  #L424a1a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L424a20.  v2:= temp @kind object;
  #L424a22.  call temp:= `concat`(v2) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L424a28.  v2:= temp @kind object;
  #L424a2a.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`java.lang.Iterable` v0 @kind object) @signature `Lio/reactivex/Single;.concat:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L424a3c.  call temp:= `fromIterable`(v0) @signature `Lio/reactivex/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @kind static;
  #L424a42.  v0:= temp @kind object;
  #L424a44.  call temp:= `concat`(v0) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L424a4a.  v0:= temp @kind object;
  #L424a4c.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L424a60.  v0:= 2I;
  #L424a62.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Flowable;` @kind static;
  #L424a68.  v1:= temp @kind object;
  #L424a6a.  return v1 @kind object;
}
procedure `io.reactivex.Flowable` `concat`(`org.reactivestreams.Publisher` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/Single;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L424a7c.  v0:= "sources is null" @kind object;
  #L424a80.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424a86.  v0:= "prefetch" @kind object;
  #L424a8a.  call temp:= `verifyPositive`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L424a90.  v0:= new `io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher`;
  #L424a94.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L424a9a.  v1:= temp @kind object;
  #L424a9c.  v2:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L424aa0.  call `<init>`(v0, v3, v1, v4, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMapPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L424aa6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L424aac.  v3:= temp @kind object;
  #L424aae.  return v3 @kind object;
}
procedure `io.reactivex.Observable` `concat`(`io.reactivex.ObservableSource` v4 @kind object) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4250a0.  v0:= "sources is null" @kind object;
  #L4250a4.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4250aa.  v0:= new `io.reactivex.internal.operators.observable.ObservableConcatMap`;
  #L4250ae.  call temp:= `toObservable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toObservable:()Lio/reactivex/functions/Function;` @kind static;
  #L4250b4.  v1:= temp @kind object;
  #L4250b6.  v2:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L4250ba.  v3:= 2I;
  #L4250bc.  call `<init>`(v0, v4, v1, v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/ObservableSource;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L4250c2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4250c8.  v4:= temp @kind object;
  #L4250ca.  return v4 @kind object;
}
procedure `io.reactivex.Flowable` `concatArray`(`io.reactivex.SingleSource`[] v4 @kind object) @signature `Lio/reactivex/Single;.concatArray:([Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L424ac0.  v0:= new `io.reactivex.internal.operators.flowable.FlowableConcatMap`;
  #L424ac4.  call temp:= `fromArray`(v4) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L424aca.  v4:= temp @kind object;
  #L424acc.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L424ad2.  v1:= temp @kind object;
  #L424ad4.  v2:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L424ad8.  v3:= 2I;
  #L424ada.  call `<init>`(v0, v4, v1, v3, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap;.<init>:(Lio/reactivex/Flowable;Lio/reactivex/functions/Function;ILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L424ae0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L424ae6.  v4:= temp @kind object;
  #L424ae8.  return v4 @kind object;
}
procedure `io.reactivex.Flowable` `concatArrayEager`(`io.reactivex.SingleSource`[] v1 @kind object) @signature `Lio/reactivex/Single;.concatArrayEager:([Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L424afc.  call temp:= `fromArray`(v1) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L424b02.  v1:= temp @kind object;
  #L424b04.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L424b0a.  v0:= temp @kind object;
  #L424b0c.  call temp:= `concatMapEager`(v1, v0) @signature `Lio/reactivex/Flowable;.concatMapEager:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L424b12.  v1:= temp @kind object;
  #L424b14.  return v1 @kind object;
}
procedure `io.reactivex.Flowable` `concatEager`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Single;.concatEager:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L424b28.  call temp:= `fromIterable`(v1) @signature `Lio/reactivex/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @kind static;
  #L424b2e.  v1:= temp @kind object;
  #L424b30.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L424b36.  v0:= temp @kind object;
  #L424b38.  call temp:= `concatMapEager`(v1, v0) @signature `Lio/reactivex/Flowable;.concatMapEager:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L424b3e.  v1:= temp @kind object;
  #L424b40.  return v1 @kind object;
}
procedure `io.reactivex.Flowable` `concatEager`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Single;.concatEager:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L424b54.  call temp:= `fromPublisher`(v1) @signature `Lio/reactivex/Flowable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L424b5a.  v1:= temp @kind object;
  #L424b5c.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L424b62.  v0:= temp @kind object;
  #L424b64.  call temp:= `concatMapEager`(v1, v0) @signature `Lio/reactivex/Flowable;.concatMapEager:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L424b6a.  v1:= temp @kind object;
  #L424b6c.  return v1 @kind object;
}
procedure `io.reactivex.Single` `create`(`io.reactivex.SingleOnSubscribe` v1 @kind object) @signature `Lio/reactivex/Single;.create:(Lio/reactivex/SingleOnSubscribe;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L425318.  v0:= "source is null" @kind object;
  #L42531c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425322.  v0:= new `io.reactivex.internal.operators.single.SingleCreate`;
  #L425326.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleCreate;.<init>:(Lio/reactivex/SingleOnSubscribe;)V` @kind direct;
  #L42532c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425332.  v1:= temp @kind object;
  #L425334.  return v1 @kind object;
}
procedure `io.reactivex.Single` `defer`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Single;.defer:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L425348.  v0:= "singleSupplier is null" @kind object;
  #L42534c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425352.  v0:= new `io.reactivex.internal.operators.single.SingleDefer`;
  #L425356.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleDefer;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L42535c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425362.  v1:= temp @kind object;
  #L425364.  return v1 @kind object;
}
procedure `io.reactivex.Single` `equals`(`io.reactivex.SingleSource` v1 @kind object, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Single;.equals:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4256f0.  v0:= "first is null" @kind object;
  #L4256f4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4256fa.  v0:= "second is null" @kind object;
  #L4256fe.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425704.  v0:= new `io.reactivex.internal.operators.single.SingleEquals`;
  #L425708.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleEquals;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)V` @kind direct;
  #L42570e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425714.  v1:= temp @kind object;
  #L425716.  return v1 @kind object;
}
procedure `io.reactivex.Single` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/Single;.error:(Ljava/lang/Throwable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L425728.  v0:= "exception is null" @kind object;
  #L42572c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425732.  call temp:= `justCallable`(v1) @signature `Lio/reactivex/internal/functions/Functions;.justCallable:(Ljava/lang/Object;)Ljava/util/concurrent/Callable;` @kind static;
  #L425738.  v1:= temp @kind object;
  #L42573a.  call temp:= `error`(v1) @signature `Lio/reactivex/Single;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @kind static;
  #L425740.  v1:= temp @kind object;
  #L425742.  return v1 @kind object;
}
procedure `io.reactivex.Single` `error`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Single;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L425754.  v0:= "errorSupplier is null" @kind object;
  #L425758.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42575e.  v0:= new `io.reactivex.internal.operators.single.SingleError`;
  #L425762.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleError;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L425768.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42576e.  v1:= temp @kind object;
  #L425770.  return v1 @kind object;
}
procedure `io.reactivex.Single` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Single;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4257b4.  v0:= "callable is null" @kind object;
  #L4257b8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4257be.  v0:= new `io.reactivex.internal.operators.single.SingleFromCallable`;
  #L4257c2.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L4257c8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4257ce.  v1:= temp @kind object;
  #L4257d0.  return v1 @kind object;
}
procedure `io.reactivex.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object) @signature `Lio/reactivex/Single;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4257e4.  call temp:= `fromFuture`(v0) @signature `Lio/reactivex/Flowable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Flowable;` @kind static;
  #L4257ea.  v0:= temp @kind object;
  #L4257ec.  call temp:= `b`(v0) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L4257f2.  v0:= temp @kind object;
  #L4257f4.  return v0 @kind object;
}
procedure `io.reactivex.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Single;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L42582c.  call temp:= `fromFuture`(v0, v1, v3) @signature `Lio/reactivex/Flowable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Flowable;` @kind static;
  #L425832.  v0:= temp @kind object;
  #L425834.  call temp:= `b`(v0) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L42583a.  v0:= temp @kind object;
  #L42583c.  return v0 @kind object;
}
procedure `io.reactivex.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Single;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L425850.  call temp:= `fromFuture`(v0, v1, v3, v4) @signature `Lio/reactivex/Flowable;.fromFuture:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Flowable;` @kind static;
  #L425856.  v0:= temp @kind object;
  #L425858.  call temp:= `b`(v0) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L42585e.  v0:= temp @kind object;
  #L425860.  return v0 @kind object;
}
procedure `io.reactivex.Single` `fromFuture`(`java.util.concurrent.Future` v0 @kind object, `io.reactivex.Scheduler` v1 @kind object) @signature `Lio/reactivex/Single;.fromFuture:(Ljava/util/concurrent/Future;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L425808.  call temp:= `fromFuture`(v0, v1) @signature `Lio/reactivex/Flowable;.fromFuture:(Ljava/util/concurrent/Future;Lio/reactivex/Scheduler;)Lio/reactivex/Flowable;` @kind static;
  #L42580e.  v0:= temp @kind object;
  #L425810.  call temp:= `b`(v0) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L425816.  v0:= temp @kind object;
  #L425818.  return v0 @kind object;
}
procedure `io.reactivex.Single` `fromObservable`(`io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Single;.fromObservable:(Lio/reactivex/ObservableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L425874.  v0:= "observableSource is null" @kind object;
  #L425878.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42587e.  v0:= new `io.reactivex.internal.operators.observable.ObservableSingleSingle`;
  #L425882.  v1:= 0I;
  #L425884.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableSingleSingle;.<init>:(Lio/reactivex/ObservableSource;Ljava/lang/Object;)V` @kind direct;
  #L42588a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425890.  v2:= temp @kind object;
  #L425892.  return v2 @kind object;
}
procedure `io.reactivex.Single` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Single;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4258a4.  v0:= "publisher is null" @kind object;
  #L4258a8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4258ae.  v0:= new `io.reactivex.internal.operators.single.SingleFromPublisher`;
  #L4258b2.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L4258b8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4258be.  v1:= temp @kind object;
  #L4258c0.  return v1 @kind object;
}
procedure `io.reactivex.Single` `just`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/Single;.just:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4258f8.  v0:= "item is null" @kind object;
  #L4258fc.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425902.  v0:= new `io.reactivex.internal.operators.single.SingleJust`;
  #L425906.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleJust;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L42590c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425912.  v1:= temp @kind object;
  #L425914.  return v1 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L424bfc.  v0:= "source1 is null" @kind object;
  #L424c00.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424c06.  v0:= "source2 is null" @kind object;
  #L424c0a.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424c10.  v0:= 2I;
  #L424c12.  v0:= new `io.reactivex.SingleSource`[v0];
  #L424c16.  v1:= 0I;
  #L424c18.  v0[v1]:= v2 @kind object;
  #L424c1c.  v2:= 1I;
  #L424c1e.  v0[v2]:= v3 @kind object;
  #L424c22.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L424c28.  v2:= temp @kind object;
  #L424c2a.  call temp:= `merge`(v2) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L424c30.  v2:= temp @kind object;
  #L424c32.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L424c44.  v0:= "source1 is null" @kind object;
  #L424c48.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424c4e.  v0:= "source2 is null" @kind object;
  #L424c52.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424c58.  v0:= "source3 is null" @kind object;
  #L424c5c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424c62.  v0:= 3I;
  #L424c64.  v0:= new `io.reactivex.SingleSource`[v0];
  #L424c68.  v1:= 0I;
  #L424c6a.  v0[v1]:= v2 @kind object;
  #L424c6e.  v2:= 1I;
  #L424c70.  v0[v2]:= v3 @kind object;
  #L424c74.  v2:= 2I;
  #L424c76.  v0[v2]:= v4 @kind object;
  #L424c7a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L424c80.  v2:= temp @kind object;
  #L424c82.  call temp:= `merge`(v2) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L424c88.  v2:= temp @kind object;
  #L424c8a.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L424c9c.  v0:= "source1 is null" @kind object;
  #L424ca0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424ca6.  v0:= "source2 is null" @kind object;
  #L424caa.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424cb0.  v0:= "source3 is null" @kind object;
  #L424cb4.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424cba.  v0:= "source4 is null" @kind object;
  #L424cbe.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424cc4.  v0:= 4I;
  #L424cc6.  v0:= new `io.reactivex.SingleSource`[v0];
  #L424cca.  v1:= 0I;
  #L424ccc.  v0[v1]:= v2 @kind object;
  #L424cd0.  v2:= 1I;
  #L424cd2.  v0[v2]:= v3 @kind object;
  #L424cd6.  v2:= 2I;
  #L424cd8.  v0[v2]:= v4 @kind object;
  #L424cdc.  v2:= 3I;
  #L424cde.  v0[v2]:= v5 @kind object;
  #L424ce2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L424ce8.  v2:= temp @kind object;
  #L424cea.  call temp:= `merge`(v2) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L424cf0.  v2:= temp @kind object;
  #L424cf2.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`java.lang.Iterable` v0 @kind object) @signature `Lio/reactivex/Single;.merge:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L424d04.  call temp:= `fromIterable`(v0) @signature `Lio/reactivex/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @kind static;
  #L424d0a.  v0:= temp @kind object;
  #L424d0c.  call temp:= `merge`(v0) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L424d12.  v0:= temp @kind object;
  #L424d14.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `merge`(`org.reactivestreams.Publisher` v7 @kind object) @signature `Lio/reactivex/Single;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L424d28.  v0:= "sources is null" @kind object;
  #L424d2c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424d32.  v0:= new `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher`;
  #L424d36.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L424d3c.  v3:= temp @kind object;
  #L424d3e.  call temp:= `bufferSize`() @signature `Lio/reactivex/Flowable;.bufferSize:()I` @kind static;
  #L424d44.  v6:= temp;
  #L424d46.  v4:= 0I;
  #L424d48.  v5:= 2147483647I;
  #L424d4e.  v1:= v0 @kind object;
  #L424d50.  v2:= v7 @kind object;
  #L424d52.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlatMapPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L424d58.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L424d5e.  v7:= temp @kind object;
  #L424d60.  return v7 @kind object;
}
procedure `io.reactivex.Single` `merge`(`io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4259ac.  v0:= "source is null" @kind object;
  #L4259b0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4259b6.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMap`;
  #L4259ba.  call temp:= `identity`() @signature `Lio/reactivex/internal/functions/Functions;.identity:()Lio/reactivex/functions/Function;` @kind static;
  #L4259c0.  v1:= temp @kind object;
  #L4259c2.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/single/SingleFlatMap;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L4259c8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4259ce.  v2:= temp @kind object;
  #L4259d0.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `mergeDelayError`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object) @signature `Lio/reactivex/Single;.mergeDelayError:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L424d74.  v0:= "source1 is null" @kind object;
  #L424d78.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424d7e.  v0:= "source2 is null" @kind object;
  #L424d82.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424d88.  v0:= 2I;
  #L424d8a.  v0:= new `io.reactivex.SingleSource`[v0];
  #L424d8e.  v1:= 0I;
  #L424d90.  v0[v1]:= v2 @kind object;
  #L424d94.  v2:= 1I;
  #L424d96.  v0[v2]:= v3 @kind object;
  #L424d9a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L424da0.  v2:= temp @kind object;
  #L424da2.  call temp:= `mergeDelayError`(v2) @signature `Lio/reactivex/Single;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L424da8.  v2:= temp @kind object;
  #L424daa.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `mergeDelayError`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object) @signature `Lio/reactivex/Single;.mergeDelayError:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L424dbc.  v0:= "source1 is null" @kind object;
  #L424dc0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424dc6.  v0:= "source2 is null" @kind object;
  #L424dca.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424dd0.  v0:= "source3 is null" @kind object;
  #L424dd4.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424dda.  v0:= 3I;
  #L424ddc.  v0:= new `io.reactivex.SingleSource`[v0];
  #L424de0.  v1:= 0I;
  #L424de2.  v0[v1]:= v2 @kind object;
  #L424de6.  v2:= 1I;
  #L424de8.  v0[v2]:= v3 @kind object;
  #L424dec.  v2:= 2I;
  #L424dee.  v0[v2]:= v4 @kind object;
  #L424df2.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L424df8.  v2:= temp @kind object;
  #L424dfa.  call temp:= `mergeDelayError`(v2) @signature `Lio/reactivex/Single;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L424e00.  v2:= temp @kind object;
  #L424e02.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `mergeDelayError`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object) @signature `Lio/reactivex/Single;.mergeDelayError:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L424e14.  v0:= "source1 is null" @kind object;
  #L424e18.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424e1e.  v0:= "source2 is null" @kind object;
  #L424e22.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424e28.  v0:= "source3 is null" @kind object;
  #L424e2c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424e32.  v0:= "source4 is null" @kind object;
  #L424e36.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424e3c.  v0:= 4I;
  #L424e3e.  v0:= new `io.reactivex.SingleSource`[v0];
  #L424e42.  v1:= 0I;
  #L424e44.  v0[v1]:= v2 @kind object;
  #L424e48.  v2:= 1I;
  #L424e4a.  v0[v2]:= v3 @kind object;
  #L424e4e.  v2:= 2I;
  #L424e50.  v0[v2]:= v4 @kind object;
  #L424e54.  v2:= 3I;
  #L424e56.  v0[v2]:= v5 @kind object;
  #L424e5a.  call temp:= `fromArray`(v0) @signature `Lio/reactivex/Flowable;.fromArray:([Ljava/lang/Object;)Lio/reactivex/Flowable;` @kind static;
  #L424e60.  v2:= temp @kind object;
  #L424e62.  call temp:= `mergeDelayError`(v2) @signature `Lio/reactivex/Single;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L424e68.  v2:= temp @kind object;
  #L424e6a.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `mergeDelayError`(`java.lang.Iterable` v0 @kind object) @signature `Lio/reactivex/Single;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L424e7c.  call temp:= `fromIterable`(v0) @signature `Lio/reactivex/Flowable;.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Flowable;` @kind static;
  #L424e82.  v0:= temp @kind object;
  #L424e84.  call temp:= `mergeDelayError`(v0) @signature `Lio/reactivex/Single;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind static;
  #L424e8a.  v0:= temp @kind object;
  #L424e8c.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `mergeDelayError`(`org.reactivestreams.Publisher` v7 @kind object) @signature `Lio/reactivex/Single;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L424ea0.  v0:= "sources is null" @kind object;
  #L424ea4.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424eaa.  v0:= new `io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher`;
  #L424eae.  call temp:= `toFlowable`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper;.toFlowable:()Lio/reactivex/functions/Function;` @kind static;
  #L424eb4.  v3:= temp @kind object;
  #L424eb6.  call temp:= `bufferSize`() @signature `Lio/reactivex/Flowable;.bufferSize:()I` @kind static;
  #L424ebc.  v6:= temp;
  #L424ebe.  v4:= 1I;
  #L424ec0.  v5:= 2147483647I;
  #L424ec6.  v1:= v0 @kind object;
  #L424ec8.  v2:= v7 @kind object;
  #L424eca.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableFlatMapPublisher;.<init>:(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Function;ZII)V` @kind direct;
  #L424ed0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L424ed6.  v7:= temp @kind object;
  #L424ed8.  return v7 @kind object;
}
procedure `io.reactivex.Single` `never`() @signature `Lio/reactivex/Single;.never:()Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4259e4.  v0:= `@@io.reactivex.internal.operators.single.SingleNever.INSTANCE` @type ^`io.reactivex.Single` @kind object;
  #L4259e8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4259ee.  v0:= temp @kind object;
  #L4259f0.  return v0 @kind object;
}
procedure `io.reactivex.Single` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Single;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L425dc8.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L425dce.  v0:= temp @kind object;
  #L425dd0.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/Single;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @kind static;
  #L425dd6.  v1:= temp @kind object;
  #L425dd8.  return v1 @kind object;
}
procedure `io.reactivex.Single` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Single;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L425dec.  v0:= "unit is null" @kind object;
  #L425df0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425df6.  v0:= "scheduler is null" @kind object;
  #L425dfa.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425e00.  v0:= new `io.reactivex.internal.operators.single.SingleTimer`;
  #L425e04.  call `<init>`(v0, v1, v3, v4) @signature `Lio/reactivex/internal/operators/single/SingleTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L425e0a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425e10.  v1:= temp @kind object;
  #L425e12.  return v1 @kind object;
}
procedure `io.reactivex.Single` `unsafeCreate`(`io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Single;.unsafeCreate:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L425e4c.  v0:= "onSubscribe is null" @kind object;
  #L425e50.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425e56.  v0:= instanceof @variable v1 @type ^`io.reactivex.Single` @kind boolean;
  #L425e5a.  if v0 != 0 then goto L425e72;
  #L425e5e.  v0:= new `io.reactivex.internal.operators.single.SingleFromUnsafeSource`;
  #L425e62.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleFromUnsafeSource;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L425e68.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425e6e.  v1:= temp @kind object;
  #L425e70.  return v1 @kind object;
  #L425e72.  v1:= new `java.lang.IllegalArgumentException`;
  #L425e76.  v0:= "unsafeCreate(Single) should be upgraded" @kind object;
  #L425e7a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L425e80.  throw v1;
}
procedure `io.reactivex.Single` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Single;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L425ec4.  v0:= 1I;
  #L425ec6.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/Single;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Single;` @kind static;
  #L425ecc.  v1:= temp @kind object;
  #L425ece.  return v1 @kind object;
}
procedure `io.reactivex.Single` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Single;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L425ee0.  v0:= "resourceSupplier is null" @kind object;
  #L425ee4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425eea.  v0:= "singleFunction is null" @kind object;
  #L425eee.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425ef4.  v0:= "disposer is null" @kind object;
  #L425ef8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425efe.  v0:= new `io.reactivex.internal.operators.single.SingleUsing`;
  #L425f02.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/single/SingleUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L425f08.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425f0e.  v1:= temp @kind object;
  #L425f10.  return v1 @kind object;
}
procedure `io.reactivex.Single` `wrap`(`io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Single;.wrap:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L425f24.  v0:= "source is null" @kind object;
  #L425f28.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425f2e.  v0:= instanceof @variable v1 @type ^`io.reactivex.Single` @kind boolean;
  #L425f32.  if v0 == 0 then goto L425f44;
  #L425f36.  v1:= (`io.reactivex.Single`) v1 @kind object;
  #L425f3a.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425f40.  v1:= temp @kind object;
  #L425f42.  return v1 @kind object;
  #L425f44.  v0:= new `io.reactivex.internal.operators.single.SingleFromUnsafeSource`;
  #L425f48.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleFromUnsafeSource;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L425f4e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425f54.  v1:= temp @kind object;
  #L425f56.  return v1 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.SingleSource` v7 @kind object, `io.reactivex.SingleSource` v8 @kind object, `io.reactivex.SingleSource` v9 @kind object, `io.reactivex.SingleSource` v10 @kind object, `io.reactivex.functions.Function9` v11 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function9;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L425f68.  v0:= "source1 is null" @kind object;
  #L425f6c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425f72.  v0:= "source2 is null" @kind object;
  #L425f76.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425f7c.  v0:= "source3 is null" @kind object;
  #L425f80.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425f86.  v0:= "source4 is null" @kind object;
  #L425f8a.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425f90.  v0:= "source5 is null" @kind object;
  #L425f94.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425f9a.  v0:= "source6 is null" @kind object;
  #L425f9e.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425fa4.  v0:= "source7 is null" @kind object;
  #L425fa8.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425fae.  v0:= "source8 is null" @kind object;
  #L425fb2.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425fb8.  v0:= "source9 is null" @kind object;
  #L425fbc.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425fc2.  call temp:= `toFunction`(v11) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function9;)Lio/reactivex/functions/Function;` @kind static;
  #L425fc8.  v11:= temp @kind object;
  #L425fca.  v0:= 9I;
  #L425fce.  v0:= new `io.reactivex.SingleSource`[v0];
  #L425fd2.  v1:= 0I;
  #L425fd4.  v0[v1]:= v2 @kind object;
  #L425fd8.  v2:= 1I;
  #L425fda.  v0[v2]:= v3 @kind object;
  #L425fde.  v2:= 2I;
  #L425fe0.  v0[v2]:= v4 @kind object;
  #L425fe4.  v2:= 3I;
  #L425fe6.  v0[v2]:= v5 @kind object;
  #L425fea.  v2:= 4I;
  #L425fec.  v0[v2]:= v6 @kind object;
  #L425ff0.  v2:= 5I;
  #L425ff2.  v0[v2]:= v7 @kind object;
  #L425ff6.  v2:= 6I;
  #L425ff8.  v0[v2]:= v8 @kind object;
  #L425ffc.  v2:= 7I;
  #L425ffe.  v0[v2]:= v9 @kind object;
  #L426002.  v2:= 8I;
  #L426006.  v0[v2]:= v10 @kind object;
  #L42600a.  call temp:= `zipArray`(v11, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L426010.  v2:= temp @kind object;
  #L426012.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.SingleSource` v7 @kind object, `io.reactivex.SingleSource` v8 @kind object, `io.reactivex.SingleSource` v9 @kind object, `io.reactivex.functions.Function8` v10 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function8;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L426024.  v0:= "source1 is null" @kind object;
  #L426028.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42602e.  v0:= "source2 is null" @kind object;
  #L426032.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426038.  v0:= "source3 is null" @kind object;
  #L42603c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426042.  v0:= "source4 is null" @kind object;
  #L426046.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42604c.  v0:= "source5 is null" @kind object;
  #L426050.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426056.  v0:= "source6 is null" @kind object;
  #L42605a.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426060.  v0:= "source7 is null" @kind object;
  #L426064.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42606a.  v0:= "source8 is null" @kind object;
  #L42606e.  call temp:= `requireNonNull`(v9, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426074.  call temp:= `toFunction`(v10) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function8;)Lio/reactivex/functions/Function;` @kind static;
  #L42607a.  v10:= temp @kind object;
  #L42607c.  v0:= 8I;
  #L426080.  v0:= new `io.reactivex.SingleSource`[v0];
  #L426084.  v1:= 0I;
  #L426086.  v0[v1]:= v2 @kind object;
  #L42608a.  v2:= 1I;
  #L42608c.  v0[v2]:= v3 @kind object;
  #L426090.  v2:= 2I;
  #L426092.  v0[v2]:= v4 @kind object;
  #L426096.  v2:= 3I;
  #L426098.  v0[v2]:= v5 @kind object;
  #L42609c.  v2:= 4I;
  #L42609e.  v0[v2]:= v6 @kind object;
  #L4260a2.  v2:= 5I;
  #L4260a4.  v0[v2]:= v7 @kind object;
  #L4260a8.  v2:= 6I;
  #L4260aa.  v0[v2]:= v8 @kind object;
  #L4260ae.  v2:= 7I;
  #L4260b0.  v0[v2]:= v9 @kind object;
  #L4260b4.  call temp:= `zipArray`(v10, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L4260ba.  v2:= temp @kind object;
  #L4260bc.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.SingleSource` v7 @kind object, `io.reactivex.SingleSource` v8 @kind object, `io.reactivex.functions.Function7` v9 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function7;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4260d0.  v0:= "source1 is null" @kind object;
  #L4260d4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4260da.  v0:= "source2 is null" @kind object;
  #L4260de.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4260e4.  v0:= "source3 is null" @kind object;
  #L4260e8.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4260ee.  v0:= "source4 is null" @kind object;
  #L4260f2.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4260f8.  v0:= "source5 is null" @kind object;
  #L4260fc.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426102.  v0:= "source6 is null" @kind object;
  #L426106.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42610c.  v0:= "source7 is null" @kind object;
  #L426110.  call temp:= `requireNonNull`(v8, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426116.  call temp:= `toFunction`(v9) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function7;)Lio/reactivex/functions/Function;` @kind static;
  #L42611c.  v9:= temp @kind object;
  #L42611e.  v0:= 7I;
  #L426120.  v0:= new `io.reactivex.SingleSource`[v0];
  #L426124.  v1:= 0I;
  #L426126.  v0[v1]:= v2 @kind object;
  #L42612a.  v2:= 1I;
  #L42612c.  v0[v2]:= v3 @kind object;
  #L426130.  v2:= 2I;
  #L426132.  v0[v2]:= v4 @kind object;
  #L426136.  v2:= 3I;
  #L426138.  v0[v2]:= v5 @kind object;
  #L42613c.  v2:= 4I;
  #L42613e.  v0[v2]:= v6 @kind object;
  #L426142.  v2:= 5I;
  #L426144.  v0[v2]:= v7 @kind object;
  #L426148.  v2:= 6I;
  #L42614a.  v0[v2]:= v8 @kind object;
  #L42614e.  call temp:= `zipArray`(v9, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L426154.  v2:= temp @kind object;
  #L426156.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.SingleSource` v7 @kind object, `io.reactivex.functions.Function6` v8 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function6;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L426168.  v0:= "source1 is null" @kind object;
  #L42616c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426172.  v0:= "source2 is null" @kind object;
  #L426176.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42617c.  v0:= "source3 is null" @kind object;
  #L426180.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426186.  v0:= "source4 is null" @kind object;
  #L42618a.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426190.  v0:= "source5 is null" @kind object;
  #L426194.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42619a.  v0:= "source6 is null" @kind object;
  #L42619e.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4261a4.  call temp:= `toFunction`(v8) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function6;)Lio/reactivex/functions/Function;` @kind static;
  #L4261aa.  v8:= temp @kind object;
  #L4261ac.  v0:= 6I;
  #L4261ae.  v0:= new `io.reactivex.SingleSource`[v0];
  #L4261b2.  v1:= 0I;
  #L4261b4.  v0[v1]:= v2 @kind object;
  #L4261b8.  v2:= 1I;
  #L4261ba.  v0[v2]:= v3 @kind object;
  #L4261be.  v2:= 2I;
  #L4261c0.  v0[v2]:= v4 @kind object;
  #L4261c4.  v2:= 3I;
  #L4261c6.  v0[v2]:= v5 @kind object;
  #L4261ca.  v2:= 4I;
  #L4261cc.  v0[v2]:= v6 @kind object;
  #L4261d0.  v2:= 5I;
  #L4261d2.  v0[v2]:= v7 @kind object;
  #L4261d6.  call temp:= `zipArray`(v8, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L4261dc.  v2:= temp @kind object;
  #L4261de.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object, `io.reactivex.functions.Function5` v7 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function5;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4261f0.  v0:= "source1 is null" @kind object;
  #L4261f4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4261fa.  v0:= "source2 is null" @kind object;
  #L4261fe.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426204.  v0:= "source3 is null" @kind object;
  #L426208.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42620e.  v0:= "source4 is null" @kind object;
  #L426212.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426218.  v0:= "source5 is null" @kind object;
  #L42621c.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426222.  call temp:= `toFunction`(v7) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function5;)Lio/reactivex/functions/Function;` @kind static;
  #L426228.  v7:= temp @kind object;
  #L42622a.  v0:= 5I;
  #L42622c.  v0:= new `io.reactivex.SingleSource`[v0];
  #L426230.  v1:= 0I;
  #L426232.  v0[v1]:= v2 @kind object;
  #L426236.  v2:= 1I;
  #L426238.  v0[v2]:= v3 @kind object;
  #L42623c.  v2:= 2I;
  #L42623e.  v0[v2]:= v4 @kind object;
  #L426242.  v2:= 3I;
  #L426244.  v0[v2]:= v5 @kind object;
  #L426248.  v2:= 4I;
  #L42624a.  v0[v2]:= v6 @kind object;
  #L42624e.  call temp:= `zipArray`(v7, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L426254.  v2:= temp @kind object;
  #L426256.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.SingleSource` v5 @kind object, `io.reactivex.functions.Function4` v6 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function4;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L426268.  v0:= "source1 is null" @kind object;
  #L42626c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426272.  v0:= "source2 is null" @kind object;
  #L426276.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42627c.  v0:= "source3 is null" @kind object;
  #L426280.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426286.  v0:= "source4 is null" @kind object;
  #L42628a.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426290.  call temp:= `toFunction`(v6) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function4;)Lio/reactivex/functions/Function;` @kind static;
  #L426296.  v6:= temp @kind object;
  #L426298.  v0:= 4I;
  #L42629a.  v0:= new `io.reactivex.SingleSource`[v0];
  #L42629e.  v1:= 0I;
  #L4262a0.  v0[v1]:= v2 @kind object;
  #L4262a4.  v2:= 1I;
  #L4262a6.  v0[v2]:= v3 @kind object;
  #L4262aa.  v2:= 2I;
  #L4262ac.  v0[v2]:= v4 @kind object;
  #L4262b0.  v2:= 3I;
  #L4262b2.  v0[v2]:= v5 @kind object;
  #L4262b6.  call temp:= `zipArray`(v6, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L4262bc.  v2:= temp @kind object;
  #L4262be.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.SingleSource` v4 @kind object, `io.reactivex.functions.Function3` v5 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/Function3;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4262d0.  v0:= "source1 is null" @kind object;
  #L4262d4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4262da.  v0:= "source2 is null" @kind object;
  #L4262de.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4262e4.  v0:= "source3 is null" @kind object;
  #L4262e8.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4262ee.  call temp:= `toFunction`(v5) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/Function3;)Lio/reactivex/functions/Function;` @kind static;
  #L4262f4.  v5:= temp @kind object;
  #L4262f6.  v0:= 3I;
  #L4262f8.  v0:= new `io.reactivex.SingleSource`[v0];
  #L4262fc.  v1:= 0I;
  #L4262fe.  v0[v1]:= v2 @kind object;
  #L426302.  v2:= 1I;
  #L426304.  v0[v2]:= v3 @kind object;
  #L426308.  v2:= 2I;
  #L42630a.  v0[v2]:= v4 @kind object;
  #L42630e.  call temp:= `zipArray`(v5, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L426314.  v2:= temp @kind object;
  #L426316.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`io.reactivex.SingleSource` v2 @kind object, `io.reactivex.SingleSource` v3 @kind object, `io.reactivex.functions.BiFunction` v4 @kind object) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L426328.  v0:= "source1 is null" @kind object;
  #L42632c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426332.  v0:= "source2 is null" @kind object;
  #L426336.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42633c.  call temp:= `toFunction`(v4) @signature `Lio/reactivex/internal/functions/Functions;.toFunction:(Lio/reactivex/functions/BiFunction;)Lio/reactivex/functions/Function;` @kind static;
  #L426342.  v4:= temp @kind object;
  #L426344.  v0:= 2I;
  #L426346.  v0:= new `io.reactivex.SingleSource`[v0];
  #L42634a.  v1:= 0I;
  #L42634c.  v0[v1]:= v2 @kind object;
  #L426350.  v2:= 1I;
  #L426352.  v0[v2]:= v3 @kind object;
  #L426356.  call temp:= `zipArray`(v4, v0) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L42635c.  v2:= temp @kind object;
  #L42635e.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zip`(`java.lang.Iterable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.zip:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L426370.  v0:= "zipper is null" @kind object;
  #L426374.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42637a.  v0:= "sources is null" @kind object;
  #L42637e.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426384.  v0:= new `io.reactivex.internal.operators.single.SingleZipIterable`;
  #L426388.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleZipIterable;.<init>:(Ljava/lang/Iterable;Lio/reactivex/functions/Function;)V` @kind direct;
  #L42638e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L426394.  v1:= temp @kind object;
  #L426396.  return v1 @kind object;
}
procedure `io.reactivex.Single` `zipArray`(`io.reactivex.functions.Function` v1 @kind object, `io.reactivex.SingleSource`[] v2 @kind object) @signature `Lio/reactivex/Single;.zipArray:(Lio/reactivex/functions/Function;[Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4263a8.  v0:= "zipper is null" @kind object;
  #L4263ac.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4263b2.  v0:= "sources is null" @kind object;
  #L4263b6.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4263bc.  v0:= length @variable v2;
  #L4263be.  if v0 != 0 then goto L4263d6;
  #L4263c2.  v1:= new `java.util.NoSuchElementException`;
  #L4263c6.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4263cc.  call temp:= `error`(v1) @signature `Lio/reactivex/Single;.error:(Ljava/lang/Throwable;)Lio/reactivex/Single;` @kind static;
  #L4263d2.  v1:= temp @kind object;
  #L4263d4.  return v1 @kind object;
  #L4263d6.  v0:= new `io.reactivex.internal.operators.single.SingleZipArray`;
  #L4263da.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/single/SingleZipArray;.<init>:([Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L4263e0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4263e6.  v1:= temp @kind object;
  #L4263e8.  return v1 @kind object;
}
procedure `io.reactivex.Single` `ambWith`(`io.reactivex.Single` v2 @kind this, `io.reactivex.SingleSource` v3 @kind object) @signature `Lio/reactivex/Single;.ambWith:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L425200.  v0:= "other is null" @kind object;
  #L425204.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42520a.  v0:= 2I;
  #L42520c.  v0:= new `io.reactivex.SingleSource`[v0];
  #L425210.  v1:= 0I;
  #L425212.  v0[v1]:= v2 @kind object;
  #L425216.  v1:= 1I;
  #L425218.  v0[v1]:= v3 @kind object;
  #L42521c.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/Single;.ambArray:([Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L425222.  v3:= temp @kind object;
  #L425224.  return v3 @kind object;
}
procedure `java.lang.Object` `as`(`io.reactivex.Single` v1 @kind this, `io.reactivex.SingleConverter` v2 @kind object) @signature `Lio/reactivex/Single;.as:(Lio/reactivex/SingleConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42652c.  v0:= "converter is null" @kind object;
  #L426530.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426536.  v2:= temp @kind object;
  #L426538.  v2:= (`io.reactivex.SingleConverter`) v2 @kind object;
  #L42653c.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/SingleConverter;.apply:(Lio/reactivex/Single;)Ljava/lang/Object;` @kind interface;
  #L426542.  v2:= temp @kind object;
  #L426544.  return v2 @kind object;
}
procedure `java.lang.Object` `blockingGet`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.blockingGet:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L426558.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L42655c.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L426562.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L426568.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L42656e.  v0:= temp @kind object;
  #L426570.  return v0 @kind object;
}
procedure `io.reactivex.Single` `cache`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.cache:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425238.  v0:= new `io.reactivex.internal.operators.single.SingleCache`;
  #L42523c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleCache;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L425242.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425248.  v0:= temp @kind object;
  #L42524a.  return v0 @kind object;
}
procedure `io.reactivex.Single` `cast`(`io.reactivex.Single` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lio/reactivex/Single;.cast:(Ljava/lang/Class;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42525c.  v0:= "clazz is null" @kind object;
  #L425260.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425266.  call temp:= `castFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.castFunction:(Ljava/lang/Class;)Lio/reactivex/functions/Function;` @kind static;
  #L42526c.  v2:= temp @kind object;
  #L42526e.  call temp:= `map`(v1, v2) @signature `Lio/reactivex/Single;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L425274.  v2:= temp @kind object;
  #L425276.  return v2 @kind object;
}
procedure `io.reactivex.Single` `compose`(`io.reactivex.Single` v1 @kind this, `io.reactivex.SingleTransformer` v2 @kind object) @signature `Lio/reactivex/Single;.compose:(Lio/reactivex/SingleTransformer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425288.  v0:= "transformer is null" @kind object;
  #L42528c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425292.  v2:= temp @kind object;
  #L425294.  v2:= (`io.reactivex.SingleTransformer`) v2 @kind object;
  #L425298.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/SingleTransformer;.apply:(Lio/reactivex/Single;)Lio/reactivex/SingleSource;` @kind interface;
  #L42529e.  v2:= temp @kind object;
  #L4252a0.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Single;.wrap:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind static;
  #L4252a6.  v2:= temp @kind object;
  #L4252a8.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `concatWith`(`io.reactivex.Single` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Single;.concatWith:(Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L424b80.  call temp:= `concat`(v0, v1) @signature `Lio/reactivex/Single;.concat:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @kind static;
  #L424b86.  v1:= temp @kind object;
  #L424b88.  return v1 @kind object;
}
procedure `io.reactivex.Single` `contains`(`io.reactivex.Single` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/Single;.contains:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4252bc.  call temp:= `equalsPredicate`() @signature `Lio/reactivex/internal/functions/ObjectHelper;.equalsPredicate:()Lio/reactivex/functions/BiPredicate;` @kind static;
  #L4252c2.  v0:= temp @kind object;
  #L4252c4.  call temp:= `contains`(v1, v2, v0) @signature `Lio/reactivex/Single;.contains:(Ljava/lang/Object;Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Single;` @kind virtual;
  #L4252ca.  v2:= temp @kind object;
  #L4252cc.  return v2 @kind object;
}
procedure `io.reactivex.Single` `contains`(`io.reactivex.Single` v1 @kind this, `java.lang.Object` v2 @kind object, `io.reactivex.functions.BiPredicate` v3 @kind object) @signature `Lio/reactivex/Single;.contains:(Ljava/lang/Object;Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4252e0.  v0:= "value is null" @kind object;
  #L4252e4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4252ea.  v0:= "comparer is null" @kind object;
  #L4252ee.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4252f4.  v0:= new `io.reactivex.internal.operators.single.SingleContains`;
  #L4252f8.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/single/SingleContains;.<init>:(Lio/reactivex/SingleSource;Ljava/lang/Object;Lio/reactivex/functions/BiPredicate;)V` @kind direct;
  #L4252fe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425304.  v2:= temp @kind object;
  #L425306.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delay`(`io.reactivex.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L425378.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L42537e.  v4:= temp @kind object;
  #L425380.  v5:= 0I;
  #L425382.  v0:= v6 @kind object;
  #L425384.  v1:= v7 @kind wide;
  #L425386.  v3:= v9 @kind object;
  #L425388.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Single;` @kind virtual;
  #L42538e.  v7:= temp @kind object;
  #L425390.  return v7 @kind object;
}
procedure `io.reactivex.Single` `delay`(`io.reactivex.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4253d0.  v5:= 0I;
  #L4253d2.  v0:= v6 @kind object;
  #L4253d4.  v1:= v7 @kind wide;
  #L4253d6.  v3:= v9 @kind object;
  #L4253d8.  v4:= v10 @kind object;
  #L4253da.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Single;` @kind virtual;
  #L4253e0.  v7:= temp @kind object;
  #L4253e2.  return v7 @kind object;
}
procedure `io.reactivex.Single` `delay`(`io.reactivex.Single` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4253f4.  v0:= "unit is null" @kind object;
  #L4253f8.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4253fe.  v0:= "scheduler is null" @kind object;
  #L425402.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425408.  v0:= new `io.reactivex.internal.operators.single.SingleDelay`;
  #L42540c.  v1:= v0 @kind object;
  #L42540e.  v2:= v8 @kind object;
  #L425410.  v3:= v9 @kind wide;
  #L425412.  v5:= v11 @kind object;
  #L425414.  v6:= v12 @kind object;
  #L425416.  v7:= v13;
  #L425418.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/single/SingleDelay;.<init>:(Lio/reactivex/SingleSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L42541e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425424.  v9:= temp @kind object;
  #L425426.  return v9 @kind object;
}
procedure `io.reactivex.Single` `delay`(`io.reactivex.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `boolean` v10 ) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;Z)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4253a4.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L4253aa.  v4:= temp @kind object;
  #L4253ac.  v0:= v6 @kind object;
  #L4253ae.  v1:= v7 @kind wide;
  #L4253b0.  v3:= v9 @kind object;
  #L4253b2.  v5:= v10;
  #L4253b4.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Single;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Single;` @kind virtual;
  #L4253ba.  v7:= temp @kind object;
  #L4253bc.  return v7 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4254c8.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L4254ce.  v0:= temp @kind object;
  #L4254d0.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @kind virtual;
  #L4254d6.  v2:= temp @kind object;
  #L4254d8.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4254ec.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/Observable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Observable;` @kind static;
  #L4254f2.  v1:= temp @kind object;
  #L4254f4.  call temp:= `delaySubscription`(v0, v1) @signature `Lio/reactivex/Single;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Single;` @kind virtual;
  #L4254fa.  v1:= temp @kind object;
  #L4254fc.  return v1 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(Lio/reactivex/CompletableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425438.  v0:= "other is null" @kind object;
  #L42543c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425442.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithCompletable`;
  #L425446.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithCompletable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L42544c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425452.  v2:= temp @kind object;
  #L425454.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(Lio/reactivex/ObservableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425468.  v0:= "other is null" @kind object;
  #L42546c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425472.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithObservable`;
  #L425476.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithObservable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L42547c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425482.  v2:= temp @kind object;
  #L425484.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425498.  v0:= "other is null" @kind object;
  #L42549c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4254a2.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithSingle`;
  #L4254a6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithSingle;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)V` @kind direct;
  #L4254ac.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4254b2.  v2:= temp @kind object;
  #L4254b4.  return v2 @kind object;
}
procedure `io.reactivex.Single` `delaySubscription`(`io.reactivex.Single` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Single;.delaySubscription:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425510.  v0:= "other is null" @kind object;
  #L425514.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42551a.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithPublisher`;
  #L42551e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithPublisher;.<init>:(Lio/reactivex/SingleSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L425524.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42552a.  v2:= temp @kind object;
  #L42552c.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `dematerialize`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.dematerialize:(Lio/reactivex/functions/Function;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L424fd4.  v0:= "selector is null" @kind object;
  #L424fd8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424fde.  v0:= new `io.reactivex.internal.operators.single.SingleDematerialize`;
  #L424fe2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDematerialize;.<init>:(Lio/reactivex/Single;Lio/reactivex/functions/Function;)V` @kind direct;
  #L424fe8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L424fee.  v2:= temp @kind object;
  #L424ff0.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doAfterSuccess`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.doAfterSuccess:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425540.  v0:= "onAfterSuccess is null" @kind object;
  #L425544.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42554a.  v0:= new `io.reactivex.internal.operators.single.SingleDoAfterSuccess`;
  #L42554e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterSuccess;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L425554.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42555a.  v2:= temp @kind object;
  #L42555c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doAfterTerminate`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Single;.doAfterTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425570.  v0:= "onAfterTerminate is null" @kind object;
  #L425574.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42557a.  v0:= new `io.reactivex.internal.operators.single.SingleDoAfterTerminate`;
  #L42557e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoAfterTerminate;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L425584.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42558a.  v2:= temp @kind object;
  #L42558c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doFinally`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Single;.doFinally:(Lio/reactivex/functions/Action;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4255a0.  v0:= "onFinally is null" @kind object;
  #L4255a4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4255aa.  v0:= new `io.reactivex.internal.operators.single.SingleDoFinally`;
  #L4255ae.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoFinally;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L4255b4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4255ba.  v2:= temp @kind object;
  #L4255bc.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnDispose`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Single;.doOnDispose:(Lio/reactivex/functions/Action;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4255d0.  v0:= "onDispose is null" @kind object;
  #L4255d4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4255da.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnDispose`;
  #L4255de.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnDispose;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L4255e4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4255ea.  v2:= temp @kind object;
  #L4255ec.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnError`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.doOnError:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425600.  v0:= "onError is null" @kind object;
  #L425604.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42560a.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnError`;
  #L42560e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnError;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L425614.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42561a.  v2:= temp @kind object;
  #L42561c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnEvent`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/Single;.doOnEvent:(Lio/reactivex/functions/BiConsumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425630.  v0:= "onEvent is null" @kind object;
  #L425634.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42563a.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnEvent`;
  #L42563e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnEvent;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L425644.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42564a.  v2:= temp @kind object;
  #L42564c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnSubscribe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.doOnSubscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425660.  v0:= "onSubscribe is null" @kind object;
  #L425664.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42566a.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnSubscribe`;
  #L42566e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnSubscribe;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L425674.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42567a.  v2:= temp @kind object;
  #L42567c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnSuccess`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.doOnSuccess:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425690.  v0:= "onSuccess is null" @kind object;
  #L425694.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42569a.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnSuccess`;
  #L42569e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnSuccess;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L4256a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4256aa.  v2:= temp @kind object;
  #L4256ac.  return v2 @kind object;
}
procedure `io.reactivex.Single` `doOnTerminate`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Single;.doOnTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4256c0.  v0:= "onTerminate is null" @kind object;
  #L4256c4.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4256ca.  v0:= new `io.reactivex.internal.operators.single.SingleDoOnTerminate`;
  #L4256ce.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleDoOnTerminate;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L4256d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4256da.  v2:= temp @kind object;
  #L4256dc.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `filter`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Single;.filter:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425004.  v0:= "predicate is null" @kind object;
  #L425008.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42500e.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFilterSingle`;
  #L425012.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeFilterSingle;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L425018.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L42501e.  v2:= temp @kind object;
  #L425020.  return v2 @kind object;
}
procedure `io.reactivex.Single` `flatMap`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMap:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425784.  v0:= "mapper is null" @kind object;
  #L425788.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42578e.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMap`;
  #L425792.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMap;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L425798.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L42579e.  v2:= temp @kind object;
  #L4257a0.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `flatMapCompletable`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMapCompletable:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4248bc.  v0:= "mapper is null" @kind object;
  #L4248c0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4248c6.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMapCompletable`;
  #L4248ca.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapCompletable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L4248d0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L4248d6.  v2:= temp @kind object;
  #L4248d8.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `flatMapMaybe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMapMaybe:(Lio/reactivex/functions/Function;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425034.  v0:= "mapper is null" @kind object;
  #L425038.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42503e.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMapMaybe`;
  #L425042.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapMaybe;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L425048.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L42504e.  v2:= temp @kind object;
  #L425050.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flatMapObservable`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMapObservable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4250dc.  v0:= "mapper is null" @kind object;
  #L4250e0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4250e6.  v0:= new `io.reactivex.internal.operators.mixed.SingleFlatMapObservable`;
  #L4250ea.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/mixed/SingleFlatMapObservable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L4250f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4250f6.  v2:= temp @kind object;
  #L4250f8.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `flatMapPublisher`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flatMapPublisher:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L424b9c.  v0:= "mapper is null" @kind object;
  #L424ba0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424ba6.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMapPublisher`;
  #L424baa.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapPublisher;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L424bb0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L424bb6.  v2:= temp @kind object;
  #L424bb8.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `flattenAsFlowable`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flattenAsFlowable:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L424bcc.  v0:= "mapper is null" @kind object;
  #L424bd0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L424bd6.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable`;
  #L424bda.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapIterableFlowable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L424be0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L424be6.  v2:= temp @kind object;
  #L424be8.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `flattenAsObservable`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.flattenAsObservable:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42510c.  v0:= "mapper is null" @kind object;
  #L425110.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425116.  v0:= new `io.reactivex.internal.operators.single.SingleFlatMapIterableObservable`;
  #L42511a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapIterableObservable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L425120.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L425126.  v2:= temp @kind object;
  #L425128.  return v2 @kind object;
}
procedure `io.reactivex.Single` `hide`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.hide:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4258d4.  v0:= new `io.reactivex.internal.operators.single.SingleHide`;
  #L4258d8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleHide;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L4258de.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4258e4.  v0:= temp @kind object;
  #L4258e6.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `ignoreElement`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.ignoreElement:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4248ec.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromSingle`;
  #L4248f0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromSingle;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L4248f6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L4248fc.  v0:= temp @kind object;
  #L4248fe.  return v0 @kind object;
}
procedure `io.reactivex.Single` `lift`(`io.reactivex.Single` v1 @kind this, `io.reactivex.SingleOperator` v2 @kind object) @signature `Lio/reactivex/Single;.lift:(Lio/reactivex/SingleOperator;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425928.  v0:= "lift is null" @kind object;
  #L42592c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425932.  v0:= new `io.reactivex.internal.operators.single.SingleLift`;
  #L425936.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleLift;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/SingleOperator;)V` @kind direct;
  #L42593c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425942.  v2:= temp @kind object;
  #L425944.  return v2 @kind object;
}
procedure `io.reactivex.Single` `map`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425958.  v0:= "mapper is null" @kind object;
  #L42595c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425962.  v0:= new `io.reactivex.internal.operators.single.SingleMap`;
  #L425966.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleMap;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L42596c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425972.  v2:= temp @kind object;
  #L425974.  return v2 @kind object;
}
procedure `io.reactivex.Single` `materialize`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.materialize:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425988.  v0:= new `io.reactivex.internal.operators.single.SingleMaterialize`;
  #L42598c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleMaterialize;.<init>:(Lio/reactivex/Single;)V` @kind direct;
  #L425992.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425998.  v0:= temp @kind object;
  #L42599a.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `mergeWith`(`io.reactivex.Single` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Single;.mergeWith:(Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L424eec.  call temp:= `merge`(v0, v1) @signature `Lio/reactivex/Single;.merge:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;)Lio/reactivex/Flowable;` @kind static;
  #L424ef2.  v1:= temp @kind object;
  #L424ef4.  return v1 @kind object;
}
procedure `io.reactivex.Single` `observeOn`(`io.reactivex.Single` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Single;.observeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425a04.  v0:= "scheduler is null" @kind object;
  #L425a08.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425a0e.  v0:= new `io.reactivex.internal.operators.single.SingleObserveOn`;
  #L425a12.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleObserveOn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L425a18.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425a1e.  v2:= temp @kind object;
  #L425a20.  return v2 @kind object;
}
procedure `io.reactivex.Single` `onErrorResumeNext`(`io.reactivex.Single` v1 @kind this, `io.reactivex.Single` v2 @kind object) @signature `Lio/reactivex/Single;.onErrorResumeNext:(Lio/reactivex/Single;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425a34.  v0:= "resumeSingleInCaseOfError is null" @kind object;
  #L425a38.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425a3e.  call temp:= `justFunction`(v2) @signature `Lio/reactivex/internal/functions/Functions;.justFunction:(Ljava/lang/Object;)Lio/reactivex/functions/Function;` @kind static;
  #L425a44.  v2:= temp @kind object;
  #L425a46.  call temp:= `onErrorResumeNext`(v1, v2) @signature `Lio/reactivex/Single;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @kind virtual;
  #L425a4c.  v2:= temp @kind object;
  #L425a4e.  return v2 @kind object;
}
procedure `io.reactivex.Single` `onErrorResumeNext`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425a60.  v0:= "resumeFunctionInCaseOfError is null" @kind object;
  #L425a64.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425a6a.  v0:= new `io.reactivex.internal.operators.single.SingleResumeNext`;
  #L425a6e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L425a74.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425a7a.  v2:= temp @kind object;
  #L425a7c.  return v2 @kind object;
}
procedure `io.reactivex.Single` `onErrorReturn`(`io.reactivex.Single` v2 @kind this, `io.reactivex.functions.Function` v3 @kind object) @signature `Lio/reactivex/Single;.onErrorReturn:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L425a90.  v0:= "resumeFunction is null" @kind object;
  #L425a94.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425a9a.  v0:= new `io.reactivex.internal.operators.single.SingleOnErrorReturn`;
  #L425a9e.  v1:= 0I;
  #L425aa0.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/single/SingleOnErrorReturn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;Ljava/lang/Object;)V` @kind direct;
  #L425aa6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425aac.  v3:= temp @kind object;
  #L425aae.  return v3 @kind object;
}
procedure `io.reactivex.Single` `onErrorReturnItem`(`io.reactivex.Single` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Single;.onErrorReturnItem:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L425ac0.  v0:= "value is null" @kind object;
  #L425ac4.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425aca.  v0:= new `io.reactivex.internal.operators.single.SingleOnErrorReturn`;
  #L425ace.  v1:= 0I;
  #L425ad0.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/internal/operators/single/SingleOnErrorReturn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/functions/Function;Ljava/lang/Object;)V` @kind direct;
  #L425ad6.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425adc.  v3:= temp @kind object;
  #L425ade.  return v3 @kind object;
}
procedure `io.reactivex.Single` `onTerminateDetach`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.onTerminateDetach:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425af0.  v0:= new `io.reactivex.internal.operators.single.SingleDetach`;
  #L425af4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleDetach;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L425afa.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425b00.  v0:= temp @kind object;
  #L425b02.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `repeat`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.repeat:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L424f08.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L424f0e.  v0:= temp @kind object;
  #L424f10.  call temp:= `repeat`(v0) @signature `Lio/reactivex/Flowable;.repeat:()Lio/reactivex/Flowable;` @kind virtual;
  #L424f16.  v0:= temp @kind object;
  #L424f18.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `repeat`(`io.reactivex.Single` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Single;.repeat:(J)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L424f2c.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L424f32.  v0:= temp @kind object;
  #L424f34.  call temp:= `repeat`(v0, v2) @signature `Lio/reactivex/Flowable;.repeat:(J)Lio/reactivex/Flowable;` @kind virtual;
  #L424f3a.  v2:= temp @kind object;
  #L424f3c.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `repeatUntil`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/Single;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L424f50.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L424f56.  v0:= temp @kind object;
  #L424f58.  call temp:= `repeatUntil`(v0, v2) @signature `Lio/reactivex/Flowable;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Flowable;` @kind virtual;
  #L424f5e.  v2:= temp @kind object;
  #L424f60.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `repeatWhen`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L424f74.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L424f7a.  v0:= temp @kind object;
  #L424f7c.  call temp:= `repeatWhen`(v0, v2) @signature `Lio/reactivex/Flowable;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L424f82.  v2:= temp @kind object;
  #L424f84.  return v2 @kind object;
}
procedure `io.reactivex.Single` `retry`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.retry:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425b14.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L425b1a.  v0:= temp @kind object;
  #L425b1c.  call temp:= `retry`(v0) @signature `Lio/reactivex/Flowable;.retry:()Lio/reactivex/Flowable;` @kind virtual;
  #L425b22.  v0:= temp @kind object;
  #L425b24.  call temp:= `b`(v0) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L425b2a.  v0:= temp @kind object;
  #L425b2c.  return v0 @kind object;
}
procedure `io.reactivex.Single` `retry`(`io.reactivex.Single` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Single;.retry:(J)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425b98.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L425b9e.  v0:= temp @kind object;
  #L425ba0.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(J)Lio/reactivex/Flowable;` @kind virtual;
  #L425ba6.  v2:= temp @kind object;
  #L425ba8.  call temp:= `b`(v2) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L425bae.  v2:= temp @kind object;
  #L425bb0.  return v2 @kind object;
}
procedure `io.reactivex.Single` `retry`(`io.reactivex.Single` v1 @kind this, `long` v2 , `io.reactivex.functions.Predicate` v4 @kind object) @signature `Lio/reactivex/Single;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425bc4.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L425bca.  v0:= temp @kind object;
  #L425bcc.  call temp:= `retry`(v0, v2, v4) @signature `Lio/reactivex/Flowable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L425bd2.  v2:= temp @kind object;
  #L425bd4.  call temp:= `b`(v2) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L425bda.  v2:= temp @kind object;
  #L425bdc.  return v2 @kind object;
}
procedure `io.reactivex.Single` `retry`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/Single;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425b40.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L425b46.  v0:= temp @kind object;
  #L425b48.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L425b4e.  v2:= temp @kind object;
  #L425b50.  call temp:= `b`(v2) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L425b56.  v2:= temp @kind object;
  #L425b58.  return v2 @kind object;
}
procedure `io.reactivex.Single` `retry`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Single;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425b6c.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L425b72.  v0:= temp @kind object;
  #L425b74.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L425b7a.  v2:= temp @kind object;
  #L425b7c.  call temp:= `b`(v2) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L425b82.  v2:= temp @kind object;
  #L425b84.  return v2 @kind object;
}
procedure `io.reactivex.Single` `retryWhen`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425bf0.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L425bf6.  v0:= temp @kind object;
  #L425bf8.  call temp:= `retryWhen`(v0, v2) @signature `Lio/reactivex/Flowable;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L425bfe.  v2:= temp @kind object;
  #L425c00.  call temp:= `b`(v2) @signature `Lio/reactivex/Single;.b:(Lio/reactivex/Flowable;)Lio/reactivex/Single;` @kind static;
  #L425c06.  v2:= temp @kind object;
  #L425c08.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Single` v2 @kind this) @signature `Lio/reactivex/Single;.subscribe:()Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L426430.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L426436.  v0:= temp @kind object;
  #L426438.  v1:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L42643c.  call temp:= `subscribe`(v2, v0, v1) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L426442.  v0:= temp @kind object;
  #L426444.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.BiConsumer` v2 @kind object) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/BiConsumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L426458.  v0:= "onCallback is null" @kind object;
  #L42645c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426462.  v0:= new `io.reactivex.internal.observers.BiConsumerSingleObserver`;
  #L426466.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.<init>:(Lio/reactivex/functions/BiConsumer;)V` @kind direct;
  #L42646c.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L426472.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L426484.  v0:= `@@io.reactivex.internal.functions.Functions.ON_ERROR_MISSING` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L426488.  call temp:= `subscribe`(v1, v2, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @kind virtual;
  #L42648e.  v2:= temp @kind object;
  #L426490.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4264a4.  v0:= "onSuccess is null" @kind object;
  #L4264a8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4264ae.  v0:= "onError is null" @kind object;
  #L4264b2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4264b8.  v0:= new `io.reactivex.internal.observers.ConsumerSingleObserver`;
  #L4264bc.  call `<init>`(v0, v2, v3) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L4264c2.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L4264c8.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.Single` v2 @kind this, `io.reactivex.SingleObserver` v3 @kind object) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L42660c.  v0:= "observer is null" @kind object;
  #L426610.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426616.  call temp:= `onSubscribe`(v2, v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Single;Lio/reactivex/SingleObserver;)Lio/reactivex/SingleObserver;` @kind static;
  #L42661c.  v3:= temp @kind object;
  #L42661e.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null SingleObserver. Please check the handler provided to RxJavaPlugins.setOnSingleSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L426622.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426628.  call `subscribeActual`(v2, v3) @signature `Lio/reactivex/Single;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L42662e.  return @kind void;
  #L426630.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L426632.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L426638.  v0:= new `java.lang.NullPointerException`;
  #L42663c.  v1:= "subscribeActual failed" @kind object;
  #L426640.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L426646.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L42664c.  throw v0;
  #L42664e.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L426650.  throw v3;
  catch `java.lang.NullPointerException` @[L426628..L42662e] goto L42664e;
  catch `java.lang.Throwable` @[L426628..L42662e] goto L426630;
}
procedure `void` `subscribeActual`(`io.reactivex.SingleObserver` v0 @kind object) @signature `Lio/reactivex/Single;.subscribeActual:(Lio/reactivex/SingleObserver;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.Single` `subscribeOn`(`io.reactivex.Single` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Single;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425c1c.  v0:= "scheduler is null" @kind object;
  #L425c20.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425c26.  v0:= new `io.reactivex.internal.operators.single.SingleSubscribeOn`;
  #L425c2a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleSubscribeOn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L425c30.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425c36.  v2:= temp @kind object;
  #L425c38.  return v2 @kind object;
}
procedure `io.reactivex.SingleObserver` `subscribeWith`(`io.reactivex.Single` v0 @kind this, `io.reactivex.SingleObserver` v1 @kind object) @signature `Lio/reactivex/Single;.subscribeWith:(Lio/reactivex/SingleObserver;)Lio/reactivex/SingleObserver;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L426418.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L42641e.  return v1 @kind object;
}
procedure `io.reactivex.Single` `takeUntil`(`io.reactivex.Single` v1 @kind this, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/Single;.takeUntil:(Lio/reactivex/CompletableSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425c4c.  v0:= "other is null" @kind object;
  #L425c50.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425c56.  v0:= new `io.reactivex.internal.operators.completable.CompletableToFlowable`;
  #L425c5a.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableToFlowable;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L425c60.  call temp:= `takeUntil`(v1, v0) @signature `Lio/reactivex/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @kind virtual;
  #L425c66.  v2:= temp @kind object;
  #L425c68.  return v2 @kind object;
}
procedure `io.reactivex.Single` `takeUntil`(`io.reactivex.Single` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Single;.takeUntil:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425c7c.  v0:= "other is null" @kind object;
  #L425c80.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425c86.  v0:= new `io.reactivex.internal.operators.single.SingleToFlowable`;
  #L425c8a.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/single/SingleToFlowable;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L425c90.  call temp:= `takeUntil`(v1, v0) @signature `Lio/reactivex/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @kind virtual;
  #L425c96.  v2:= temp @kind object;
  #L425c98.  return v2 @kind object;
}
procedure `io.reactivex.Single` `takeUntil`(`io.reactivex.Single` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Single;.takeUntil:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425cac.  v0:= "other is null" @kind object;
  #L425cb0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425cb6.  v0:= new `io.reactivex.internal.operators.single.SingleTakeUntil`;
  #L425cba.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleTakeUntil;.<init>:(Lio/reactivex/SingleSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L425cc0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425cc6.  v2:= temp @kind object;
  #L425cc8.  return v2 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.test:()Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4264dc.  v0:= new `io.reactivex.observers.TestObserver`;
  #L4264e0.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L4264e6.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L4264ec.  return v0 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Single` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/Single;.test:(Z)Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L426500.  v0:= new `io.reactivex.observers.TestObserver`;
  #L426504.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L42650a.  if v2 == 0 then goto L426514;
  #L42650e.  call `cancel`(v0) @signature `Lio/reactivex/observers/TestObserver;.cancel:()V` @kind virtual;
  #L426514.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Single;.subscribe:(Lio/reactivex/SingleObserver;)V` @kind virtual;
  #L42651a.  return v0 @kind object;
}
procedure `io.reactivex.Single` `timeout`(`io.reactivex.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Single;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L425cdc.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L425ce2.  v4:= temp @kind object;
  #L425ce4.  v5:= 0I;
  #L425ce6.  v0:= v6 @kind object;
  #L425ce8.  v1:= v7 @kind wide;
  #L425cea.  v3:= v9 @kind object;
  #L425cec.  call temp:= `a`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind direct;
  #L425cf2.  v7:= temp @kind object;
  #L425cf4.  return v7 @kind object;
}
procedure `io.reactivex.Single` `timeout`(`io.reactivex.Single` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L425d08.  v5:= 0I;
  #L425d0a.  v0:= v6 @kind object;
  #L425d0c.  v1:= v7 @kind wide;
  #L425d0e.  v3:= v9 @kind object;
  #L425d10.  v4:= v10 @kind object;
  #L425d12.  call temp:= `a`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind direct;
  #L425d18.  v7:= temp @kind object;
  #L425d1a.  return v7 @kind object;
}
procedure `io.reactivex.Single` `timeout`(`io.reactivex.Single` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `io.reactivex.SingleSource` v6 @kind object) @signature `Lio/reactivex/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425d2c.  v0:= "other is null" @kind object;
  #L425d30.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425d36.  call temp:= `a`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind direct;
  #L425d3c.  v2:= temp @kind object;
  #L425d3e.  return v2 @kind object;
}
procedure `io.reactivex.Single` `timeout`(`io.reactivex.Single` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.SingleSource` v11 @kind object) @signature `Lio/reactivex/Single;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L425d50.  v0:= "other is null" @kind object;
  #L425d54.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425d5a.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L425d60.  v5:= temp @kind object;
  #L425d62.  v1:= v7 @kind object;
  #L425d64.  v2:= v8 @kind wide;
  #L425d66.  v4:= v10 @kind object;
  #L425d68.  v6:= v11 @kind object;
  #L425d6a.  call temp:= `a`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Single;.a:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @kind direct;
  #L425d70.  v8:= temp @kind object;
  #L425d72.  return v8 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.Single` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Single;.to:(Lio/reactivex/functions/Function;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L426584.  v0:= "convert is null" @kind object;
  #L426588.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42658e.  v2:= temp @kind object;
  #L426590.  v2:= (`io.reactivex.functions.Function`) v2 @kind object;
  #L426594.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42659a.  v2:= temp @kind object;
  #L42659c.  return v2 @kind object;
  #L42659e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4265a0.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4265a6.  call temp:= `wrapOrThrow`(v2) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L4265ac.  v2:= temp @kind object;
  #L4265ae.  throw v2;
  catch `java.lang.Throwable` @[L426584..L42659c] goto L42659e;
}
procedure `io.reactivex.Completable` `toCompletable`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toCompletable:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L424910.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromSingle`;
  #L424914.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromSingle;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L42491a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L424920.  v0:= temp @kind object;
  #L424922.  return v0 @kind object;
}
procedure `io.reactivex.Flowable` `toFlowable`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toFlowable:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L424f98.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToFlowable` @kind boolean;
  #L424f9c.  if v0 == 0 then goto L424fb0;
  #L424fa0.  v0:= v1 @kind object;
  #L424fa2.  v0:= (`io.reactivex.internal.fuseable.FuseToFlowable`) v0 @kind object;
  #L424fa6.  call temp:= `fuseToFlowable`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToFlowable;.fuseToFlowable:()Lio/reactivex/Flowable;` @kind interface;
  #L424fac.  v0:= temp @kind object;
  #L424fae.  return v0 @kind object;
  #L424fb0.  v0:= new `io.reactivex.internal.operators.single.SingleToFlowable`;
  #L424fb4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleToFlowable;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L424fba.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L424fc0.  v0:= temp @kind object;
  #L424fc2.  return v0 @kind object;
}
procedure `java.util.concurrent.Future` `toFuture`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toFuture:()Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4265cc.  v0:= new `io.reactivex.internal.observers.FutureSingleObserver`;
  #L4265d0.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/FutureSingleObserver;.<init>:()V` @kind direct;
  #L4265d6.  call temp:= `subscribeWith`(v1, v0) @signature `Lio/reactivex/Single;.subscribeWith:(Lio/reactivex/SingleObserver;)Lio/reactivex/SingleObserver;` @kind virtual;
  #L4265dc.  v0:= temp @kind object;
  #L4265de.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L4265e2.  return v0 @kind object;
}
procedure `io.reactivex.Maybe` `toMaybe`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toMaybe:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425064.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToMaybe` @kind boolean;
  #L425068.  if v0 == 0 then goto L42507c;
  #L42506c.  v0:= v1 @kind object;
  #L42506e.  v0:= (`io.reactivex.internal.fuseable.FuseToMaybe`) v0 @kind object;
  #L425072.  call temp:= `fuseToMaybe`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToMaybe;.fuseToMaybe:()Lio/reactivex/Maybe;` @kind interface;
  #L425078.  v0:= temp @kind object;
  #L42507a.  return v0 @kind object;
  #L42507c.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFromSingle`;
  #L425080.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromSingle;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L425086.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L42508c.  v0:= temp @kind object;
  #L42508e.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `toObservable`(`io.reactivex.Single` v1 @kind this) @signature `Lio/reactivex/Single;.toObservable:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42513c.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToObservable` @kind boolean;
  #L425140.  if v0 == 0 then goto L425154;
  #L425144.  v0:= v1 @kind object;
  #L425146.  v0:= (`io.reactivex.internal.fuseable.FuseToObservable`) v0 @kind object;
  #L42514a.  call temp:= `fuseToObservable`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToObservable;.fuseToObservable:()Lio/reactivex/Observable;` @kind interface;
  #L425150.  v0:= temp @kind object;
  #L425152.  return v0 @kind object;
  #L425154.  v0:= new `io.reactivex.internal.operators.single.SingleToObservable`;
  #L425158.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleToObservable;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L42515e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L425164.  v0:= temp @kind object;
  #L425166.  return v0 @kind object;
}
procedure `io.reactivex.Single` `unsubscribeOn`(`io.reactivex.Single` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Single;.unsubscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425e94.  v0:= "scheduler is null" @kind object;
  #L425e98.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L425e9e.  v0:= new `io.reactivex.internal.operators.single.SingleUnsubscribeOn`;
  #L425ea2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleUnsubscribeOn;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L425ea8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L425eae.  v2:= temp @kind object;
  #L425eb0.  return v2 @kind object;
}
procedure `io.reactivex.Single` `zipWith`(`io.reactivex.Single` v0 @kind this, `io.reactivex.SingleSource` v1 @kind object, `io.reactivex.functions.BiFunction` v2 @kind object) @signature `Lio/reactivex/Single;.zipWith:(Lio/reactivex/SingleSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4263fc.  call temp:= `zip`(v0, v1, v2) @signature `Lio/reactivex/Single;.zip:(Lio/reactivex/SingleSource;Lio/reactivex/SingleSource;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Single;` @kind static;
  #L426402.  v1:= temp @kind object;
  #L426404.  return v1 @kind object;
}
