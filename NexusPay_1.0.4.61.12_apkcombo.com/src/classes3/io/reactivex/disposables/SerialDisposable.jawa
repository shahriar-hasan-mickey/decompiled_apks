record `io.reactivex.disposables.SerialDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.disposables.Disposable` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.disposables.SerialDisposable.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.disposables.SerialDisposable` v1 @kind this) @signature `Lio/reactivex/disposables/SerialDisposable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4276d0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4276d6.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L4276da.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L4276e0.  v1.`io.reactivex.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L4276e4.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.disposables.SerialDisposable` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/disposables/SerialDisposable;.<init>:(Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4276f8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4276fe.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L427702.  call `<init>`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L427708.  v1.`io.reactivex.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L42770c.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.disposables.SerialDisposable` v1 @kind this) @signature `Lio/reactivex/disposables/SerialDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L427720.  v0:= v1.`io.reactivex.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L427724.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L42772a.  return @kind void;
}
procedure `io.reactivex.disposables.Disposable` `get`(`io.reactivex.disposables.SerialDisposable` v2 @kind this) @signature `Lio/reactivex/disposables/SerialDisposable;.get:()Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42769c.  v0:= v2.`io.reactivex.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L4276a0.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L4276a6.  v0:= temp @kind object;
  #L4276a8.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4276ac.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L4276b0.  if v0 != v1 then goto L4276bc;
  #L4276b4.  call temp:= `disposed`() @signature `Lio/reactivex/disposables/Disposables;.disposed:()Lio/reactivex/disposables/Disposable;` @kind static;
  #L4276ba.  v0:= temp @kind object;
  #L4276bc.  return v0 @kind object;
}
procedure `boolean` `isDisposed`(`io.reactivex.disposables.SerialDisposable` v1 @kind this) @signature `Lio/reactivex/disposables/SerialDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L427630.  v0:= v1.`io.reactivex.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L427634.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L42763a.  v0:= temp @kind object;
  #L42763c.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L427640.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L427646.  v0:= temp;
  #L427648.  return v0;
}
procedure `boolean` `replace`(`io.reactivex.disposables.SerialDisposable` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/disposables/SerialDisposable;.replace:(Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42765c.  v0:= v1.`io.reactivex.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L427660.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L427666.  v2:= temp;
  #L427668.  return v2;
}
procedure `boolean` `set`(`io.reactivex.disposables.SerialDisposable` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/disposables/SerialDisposable;.set:(Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42767c.  v0:= v1.`io.reactivex.disposables.SerialDisposable.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L427680.  call temp:= `set`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;)Z` @kind static;
  #L427686.  v2:= temp;
  #L427688.  return v2;
}
