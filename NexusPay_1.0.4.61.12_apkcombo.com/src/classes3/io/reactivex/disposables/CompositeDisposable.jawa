record `io.reactivex.disposables.CompositeDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.disposables.Disposable` @kind interface, `io.reactivex.internal.disposables.DisposableContainer` @kind interface {
  `io.reactivex.internal.util.OpenHashSet` `io.reactivex.disposables.CompositeDisposable.a` @AccessFlag ;
  `boolean` `io.reactivex.disposables.CompositeDisposable.b` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.disposables.CompositeDisposable` v0 @kind this) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L427124.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42712a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.disposables.CompositeDisposable` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L427198.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42719e.  v0:= "disposables is null" @kind object;
  #L4271a2.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4271a8.  v0:= new `io.reactivex.internal.util.OpenHashSet`;
  #L4271ac.  call `<init>`(v0) @signature `Lio/reactivex/internal/util/OpenHashSet;.<init>:()V` @kind direct;
  #L4271b2.  v2.`io.reactivex.disposables.CompositeDisposable.a` @type ^`io.reactivex.internal.util.OpenHashSet` := v0 @kind object;
  #L4271b6.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4271bc.  v3:= temp @kind object;
  #L4271be.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4271c4.  v0:= temp;
  #L4271c6.  if v0 == 0 then goto L4271ec;
  #L4271ca.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4271d0.  v0:= temp @kind object;
  #L4271d2.  v0:= (`io.reactivex.disposables.Disposable`) v0 @kind object;
  #L4271d6.  v1:= "A Disposable item in the disposables sequence is null" @kind object;
  #L4271da.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4271e0.  v1:= v2.`io.reactivex.disposables.CompositeDisposable.a` @type ^`io.reactivex.internal.util.OpenHashSet` @kind object;
  #L4271e4.  call temp:= `add`(v1, v0) @signature `Lio/reactivex/internal/util/OpenHashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4271ea.  goto L4271be;
  #L4271ec.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.disposables.CompositeDisposable` v4 @kind this, `io.reactivex.disposables.Disposable`[] v5 @kind object) @signature `Lio/reactivex/disposables/CompositeDisposable;.<init>:([Lio/reactivex/disposables/Disposable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42713c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L427142.  v0:= "disposables is null" @kind object;
  #L427146.  call temp:= `requireNonNull`(v5, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L42714c.  v0:= new `io.reactivex.internal.util.OpenHashSet`;
  #L427150.  v1:= length @variable v5;
  #L427152.  v1:= v1 + 1;
  #L427156.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/util/OpenHashSet;.<init>:(I)V` @kind direct;
  #L42715c.  v4.`io.reactivex.disposables.CompositeDisposable.a` @type ^`io.reactivex.internal.util.OpenHashSet` := v0 @kind object;
  #L427160.  v0:= length @variable v5;
  #L427162.  v1:= 0I;
  #L427164.  if v1 >= v0 then goto L427186;
  #L427168.  v2:= v5[v1] @kind object;
  #L42716c.  v3:= "A Disposable in the disposables array is null" @kind object;
  #L427170.  call temp:= `requireNonNull`(v2, v3) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L427176.  v3:= v4.`io.reactivex.disposables.CompositeDisposable.a` @type ^`io.reactivex.internal.util.OpenHashSet` @kind object;
  #L42717a.  call temp:= `add`(v3, v2) @signature `Lio/reactivex/internal/util/OpenHashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L427180.  v1:= v1 + 1;
  #L427184.  goto L427164;
  #L427186.  return @kind void;
}
procedure `void` `a`(`io.reactivex.disposables.CompositeDisposable` v6 @kind this, `io.reactivex.internal.util.OpenHashSet` v7 @kind object) @signature `Lio/reactivex/disposables/CompositeDisposable;.a:(Lio/reactivex/internal/util/OpenHashSet;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4272b4.  if v7 != 0 then goto L4272ba;
  #L4272b8.  return @kind void;
  #L4272ba.  v0:= 0I;
  #L4272bc.  call temp:= `keys`(v7) @signature `Lio/reactivex/internal/util/OpenHashSet;.keys:()[Ljava/lang/Object;` @kind virtual;
  #L4272c2.  v7:= temp @kind object;
  #L4272c4.  v1:= length @variable v7;
  #L4272c6.  v2:= 0I;
  #L4272c8.  v3:= 0I;
  #L4272ca.  if v3 >= v1 then goto L427308;
  #L4272ce.  v4:= v7[v3] @kind object;
  #L4272d2.  v5:= instanceof @variable v4 @type ^`io.reactivex.disposables.Disposable` @kind boolean;
  #L4272d6.  if v5 == 0 then goto L427302;
  #L4272da.  v4:= (`io.reactivex.disposables.Disposable`) v4 @kind object;
  #L4272de.  call `dispose`(v4) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4272e4.  goto L427302;
  #L4272e6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4272e8.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L4272ee.  if v0 != 0 then goto L4272fc;
  #L4272f2.  v0:= new `java.util.ArrayList`;
  #L4272f6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4272fc.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L427302.  v3:= v3 + 1;
  #L427306.  goto L4272ca;
  #L427308.  if v0 == 0 then goto L42733c;
  #L42730c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L427312.  v7:= temp;
  #L427314.  v1:= 1I;
  #L427316.  if v7 != v1 then goto L427330;
  #L42731a.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L427320.  v7:= temp @kind object;
  #L427322.  v7:= (`java.lang.Throwable`) v7 @kind object;
  #L427326.  call temp:= `wrapOrThrow`(v7) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L42732c.  v7:= temp @kind object;
  #L42732e.  throw v7;
  #L427330.  v7:= new `io.reactivex.exceptions.CompositeException`;
  #L427334.  call `<init>`(v7, v0) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L42733a.  throw v7;
  #L42733c.  return @kind void;
  catch `java.lang.Throwable` @[L4272da..L4272e4] goto L4272e6;
}
procedure `boolean` `add`(`io.reactivex.disposables.CompositeDisposable` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/disposables/CompositeDisposable;.add:(Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L426f18.  v0:= "disposable is null" @kind object;
  #L426f1c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426f22.  v0:= v1.`io.reactivex.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L426f26.  if v0 != 0 then goto L426f60;
  #L426f2a.  @monitorenter v1
  #L426f2c.  v0:= v1.`io.reactivex.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L426f30.  if v0 != 0 then goto L426f56;
  #L426f34.  v0:= v1.`io.reactivex.disposables.CompositeDisposable.a` @type ^`io.reactivex.internal.util.OpenHashSet` @kind object;
  #L426f38.  if v0 != 0 then goto L426f4a;
  #L426f3c.  v0:= new `io.reactivex.internal.util.OpenHashSet`;
  #L426f40.  call `<init>`(v0) @signature `Lio/reactivex/internal/util/OpenHashSet;.<init>:()V` @kind direct;
  #L426f46.  v1.`io.reactivex.disposables.CompositeDisposable.a` @type ^`io.reactivex.internal.util.OpenHashSet` := v0 @kind object;
  #L426f4a.  call temp:= `add`(v0, v2) @signature `Lio/reactivex/internal/util/OpenHashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L426f50.  v2:= 1I;
  #L426f52.  @monitorexit v1
  #L426f54.  return v2;
  #L426f56.  @monitorexit v1
  #L426f58.  goto L426f60;
  #L426f5a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L426f5c.  @monitorexit v1
  #L426f5e.  throw v2;
  #L426f60.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L426f66.  v2:= 0I;
  #L426f68.  return v2;
  catch `java.lang.Throwable` @[L426f2c..L426f5e] goto L426f5a;
}
procedure `boolean` `addAll`(`io.reactivex.disposables.CompositeDisposable` v6 @kind this, `io.reactivex.disposables.Disposable`[] v7 @kind object) @signature `Lio/reactivex/disposables/CompositeDisposable;.addAll:([Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L426f88.  v0:= "disposables is null" @kind object;
  #L426f8c.  call temp:= `requireNonNull`(v7, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426f92.  v0:= v6.`io.reactivex.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L426f96.  v1:= 0I;
  #L426f98.  if v0 != 0 then goto L426ff0;
  #L426f9c.  @monitorenter v6
  #L426f9e.  v0:= v6.`io.reactivex.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L426fa2.  if v0 != 0 then goto L426fe6;
  #L426fa6.  v0:= v6.`io.reactivex.disposables.CompositeDisposable.a` @type ^`io.reactivex.internal.util.OpenHashSet` @kind object;
  #L426faa.  v2:= 1I;
  #L426fac.  if v0 != 0 then goto L426fc2;
  #L426fb0.  v0:= new `io.reactivex.internal.util.OpenHashSet`;
  #L426fb4.  v3:= length @variable v7;
  #L426fb6.  v3:= v3 + v2 @kind int;
  #L426fb8.  call `<init>`(v0, v3) @signature `Lio/reactivex/internal/util/OpenHashSet;.<init>:(I)V` @kind direct;
  #L426fbe.  v6.`io.reactivex.disposables.CompositeDisposable.a` @type ^`io.reactivex.internal.util.OpenHashSet` := v0 @kind object;
  #L426fc2.  v3:= length @variable v7;
  #L426fc4.  if v1 >= v3 then goto L426fe2;
  #L426fc8.  v4:= v7[v1] @kind object;
  #L426fcc.  v5:= "A Disposable in the disposables array is null" @kind object;
  #L426fd0.  call temp:= `requireNonNull`(v4, v5) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426fd6.  call temp:= `add`(v0, v4) @signature `Lio/reactivex/internal/util/OpenHashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L426fdc.  v1:= v1 + 1;
  #L426fe0.  goto L426fc4;
  #L426fe2.  @monitorexit v6
  #L426fe4.  return v2;
  #L426fe6.  @monitorexit v6
  #L426fe8.  goto L426ff0;
  #L426fea.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L426fec.  @monitorexit v6
  #L426fee.  throw v7;
  #L426ff0.  v0:= length @variable v7;
  #L426ff2.  v2:= 0I;
  #L426ff4.  if v2 >= v0 then goto L427008;
  #L426ff8.  v3:= v7[v2] @kind object;
  #L426ffc.  call `dispose`(v3) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L427002.  v2:= v2 + 1;
  #L427006.  goto L426ff4;
  #L427008.  return v1;
  catch `java.lang.Throwable` @[L426f9e..L426fee] goto L426fea;
}
procedure `void` `clear`(`io.reactivex.disposables.CompositeDisposable` v2 @kind this) @signature `Lio/reactivex/disposables/CompositeDisposable;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L427200.  v0:= v2.`io.reactivex.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L427204.  if v0 == 0 then goto L42720a;
  #L427208.  return @kind void;
  #L42720a.  @monitorenter v2
  #L42720c.  v0:= v2.`io.reactivex.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L427210.  if v0 == 0 then goto L427218;
  #L427214.  @monitorexit v2
  #L427216.  return @kind void;
  #L427218.  v0:= v2.`io.reactivex.disposables.CompositeDisposable.a` @type ^`io.reactivex.internal.util.OpenHashSet` @kind object;
  #L42721c.  v1:= 0I;
  #L42721e.  v2.`io.reactivex.disposables.CompositeDisposable.a` @type ^`io.reactivex.internal.util.OpenHashSet` := v1 @kind object;
  #L427222.  @monitorexit v2
  #L427224.  call `a`(v2, v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.a:(Lio/reactivex/internal/util/OpenHashSet;)V` @kind virtual;
  #L42722a.  return @kind void;
  #L42722c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42722e.  @monitorexit v2
  #L427230.  throw v0;
  catch `java.lang.Throwable` @[L42720c..L427224] goto L42722c;
  catch `java.lang.Throwable` @[L42722e..L427230] goto L42722c;
}
procedure `boolean` `delete`(`io.reactivex.disposables.CompositeDisposable` v2 @kind this, `io.reactivex.disposables.Disposable` v3 @kind object) @signature `Lio/reactivex/disposables/CompositeDisposable;.delete:(Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L427028.  v0:= "disposables is null" @kind object;
  #L42702c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L427032.  v0:= v2.`io.reactivex.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L427036.  v1:= 0I;
  #L427038.  if v0 == 0 then goto L42703e;
  #L42703c.  return v1;
  #L42703e.  @monitorenter v2
  #L427040.  v0:= v2.`io.reactivex.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L427044.  if v0 == 0 then goto L42704c;
  #L427048.  @monitorexit v2
  #L42704a.  return v1;
  #L42704c.  v0:= v2.`io.reactivex.disposables.CompositeDisposable.a` @type ^`io.reactivex.internal.util.OpenHashSet` @kind object;
  #L427050.  if v0 == 0 then goto L427068;
  #L427054.  call temp:= `remove`(v0, v3) @signature `Lio/reactivex/internal/util/OpenHashSet;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L42705a.  v3:= temp;
  #L42705c.  if v3 != 0 then goto L427062;
  #L427060.  goto L427068;
  #L427062.  @monitorexit v2
  #L427064.  v3:= 1I;
  #L427066.  return v3;
  #L427068.  @monitorexit v2
  #L42706a.  return v1;
  #L42706c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42706e.  @monitorexit v2
  #L427070.  throw v3;
  catch `java.lang.Throwable` @[L427040..L427070] goto L42706c;
}
procedure `void` `dispose`(`io.reactivex.disposables.CompositeDisposable` v2 @kind this) @signature `Lio/reactivex/disposables/CompositeDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L427258.  v0:= v2.`io.reactivex.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L42725c.  if v0 == 0 then goto L427262;
  #L427260.  return @kind void;
  #L427262.  @monitorenter v2
  #L427264.  v0:= v2.`io.reactivex.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L427268.  if v0 == 0 then goto L427270;
  #L42726c.  @monitorexit v2
  #L42726e.  return @kind void;
  #L427270.  v0:= 1I;
  #L427272.  v2.`io.reactivex.disposables.CompositeDisposable.b` @type ^`boolean` := v0 @kind boolean;
  #L427276.  v0:= v2.`io.reactivex.disposables.CompositeDisposable.a` @type ^`io.reactivex.internal.util.OpenHashSet` @kind object;
  #L42727a.  v1:= 0I;
  #L42727c.  v2.`io.reactivex.disposables.CompositeDisposable.a` @type ^`io.reactivex.internal.util.OpenHashSet` := v1 @kind object;
  #L427280.  @monitorexit v2
  #L427282.  call `a`(v2, v0) @signature `Lio/reactivex/disposables/CompositeDisposable;.a:(Lio/reactivex/internal/util/OpenHashSet;)V` @kind virtual;
  #L427288.  return @kind void;
  #L42728a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42728c.  @monitorexit v2
  #L42728e.  throw v0;
  catch `java.lang.Throwable` @[L427264..L427282] goto L42728a;
  catch `java.lang.Throwable` @[L42728c..L42728e] goto L42728a;
}
procedure `boolean` `isDisposed`(`io.reactivex.disposables.CompositeDisposable` v1 @kind this) @signature `Lio/reactivex/disposables/CompositeDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L427090.  v0:= v1.`io.reactivex.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L427094.  return v0;
}
procedure `boolean` `remove`(`io.reactivex.disposables.CompositeDisposable` v1 @kind this, `io.reactivex.disposables.Disposable` v2 @kind object) @signature `Lio/reactivex/disposables/CompositeDisposable;.remove:(Lio/reactivex/disposables/Disposable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4270a8.  call temp:= `delete`(v1, v2) @signature `Lio/reactivex/disposables/CompositeDisposable;.delete:(Lio/reactivex/disposables/Disposable;)Z` @kind virtual;
  #L4270ae.  v0:= temp;
  #L4270b0.  if v0 == 0 then goto L4270be;
  #L4270b4.  call `dispose`(v2) @signature `Lio/reactivex/disposables/Disposable;.dispose:()V` @kind interface;
  #L4270ba.  v2:= 1I;
  #L4270bc.  return v2;
  #L4270be.  v2:= 0I;
  #L4270c0.  return v2;
}
procedure `int` `size`(`io.reactivex.disposables.CompositeDisposable` v2 @kind this) @signature `Lio/reactivex/disposables/CompositeDisposable;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4270d4.  v0:= v2.`io.reactivex.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4270d8.  v1:= 0I;
  #L4270da.  if v0 == 0 then goto L4270e0;
  #L4270de.  return v1;
  #L4270e0.  @monitorenter v2
  #L4270e2.  v0:= v2.`io.reactivex.disposables.CompositeDisposable.b` @type ^`boolean` @kind boolean;
  #L4270e6.  if v0 == 0 then goto L4270ee;
  #L4270ea.  @monitorexit v2
  #L4270ec.  return v1;
  #L4270ee.  v0:= v2.`io.reactivex.disposables.CompositeDisposable.a` @type ^`io.reactivex.internal.util.OpenHashSet` @kind object;
  #L4270f2.  if v0 == 0 then goto L4270fe;
  #L4270f6.  call temp:= `size`(v0) @signature `Lio/reactivex/internal/util/OpenHashSet;.size:()I` @kind virtual;
  #L4270fc.  v1:= temp;
  #L4270fe.  @monitorexit v2
  #L427100.  return v1;
  #L427102.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L427104.  @monitorexit v2
  #L427106.  throw v0;
  catch `java.lang.Throwable` @[L4270e2..L427106] goto L427102;
}
