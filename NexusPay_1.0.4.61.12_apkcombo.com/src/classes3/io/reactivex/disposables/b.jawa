record `io.reactivex.disposables.b` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.disposables.Disposable` @kind interface {
  `boolean` `io.reactivex.disposables.b.a` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@io.reactivex.disposables.b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.disposables.b` v0 @kind this, `java.util.concurrent.Future` v1 @kind object, `boolean` v2 ) @signature `Lio/reactivex/disposables/b;.<init>:(Ljava/util/concurrent/Future;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4274bc.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4274c2.  v0.`io.reactivex.disposables.b.a` @type ^`boolean` := v2 @kind boolean;
  #L4274c6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.disposables.b` v2 @kind this) @signature `Lio/reactivex/disposables/b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4274d8.  v0:= 0I;
  #L4274da.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4274e0.  v0:= temp @kind object;
  #L4274e2.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L4274e6.  if v0 == 0 then goto L4274f4;
  #L4274ea.  v1:= v2.`io.reactivex.disposables.b.a` @type ^`boolean` @kind boolean;
  #L4274ee.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L4274f4.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.disposables.b` v1 @kind this) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L427484.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L42748a.  v0:= temp @kind object;
  #L42748c.  v0:= (`java.util.concurrent.Future`) v0 @kind object;
  #L427490.  if v0 == 0 then goto L4274a6;
  #L427494.  call temp:= `isDone`(v0) @signature `Ljava/util/concurrent/Future;.isDone:()Z` @kind interface;
  #L42749a.  v0:= temp;
  #L42749c.  if v0 == 0 then goto L4274a2;
  #L4274a0.  goto L4274a6;
  #L4274a2.  v0:= 0I;
  #L4274a4.  goto L4274a8;
  #L4274a6.  v0:= 1I;
  #L4274a8.  return v0;
}
