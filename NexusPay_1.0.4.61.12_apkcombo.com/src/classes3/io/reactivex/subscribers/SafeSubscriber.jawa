record `io.reactivex.subscribers.SafeSubscriber` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.FlowableSubscriber` @kind interface, `org.reactivestreams.Subscription` @kind interface {
  `org.reactivestreams.Subscriber` `io.reactivex.subscribers.SafeSubscriber.a` @AccessFlag FINAL;
  `org.reactivestreams.Subscription` `io.reactivex.subscribers.SafeSubscriber.b` @AccessFlag ;
  `boolean` `io.reactivex.subscribers.SafeSubscriber.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.subscribers.SafeSubscriber` v0 @kind this, `org.reactivestreams.Subscriber` v1 @kind object) @signature `Lio/reactivex/subscribers/SafeSubscriber;.<init>:(Lorg/reactivestreams/Subscriber;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L52b2e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L52b2ea.  v0.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` := v1 @kind object;
  #L52b2ee.  return @kind void;
}
procedure `void` `a`(`io.reactivex.subscribers.SafeSubscriber` v6 @kind this) @signature `Lio/reactivex/subscribers/SafeSubscriber;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L52b390.  v0:= new `java.lang.NullPointerException`;
  #L52b394.  v1:= "Subscription not set!" @kind object;
  #L52b398.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52b39e.  v1:= 1I;
  #L52b3a0.  v2:= 0I;
  #L52b3a2.  v3:= 2I;
  #L52b3a4.  v4:= v6.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L52b3a8.  v5:= `@@io.reactivex.internal.subscriptions.EmptySubscription.INSTANCE` @type ^`io.reactivex.internal.subscriptions.EmptySubscription` @kind object;
  #L52b3ac.  call `onSubscribe`(v4, v5) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L52b3b2.  v4:= v6.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L52b3b6.  call `onError`(v4, v0) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L52b3bc.  goto L52b3e2;
  #L52b3be.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b3c0.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b3c6.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L52b3ca.  v3:= new `java.lang.Throwable`[v3];
  #L52b3ce.  v3[v2]:= v0 @kind object;
  #L52b3d2.  v3[v1]:= v4 @kind object;
  #L52b3d6.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L52b3dc.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52b3e2.  return @kind void;
  #L52b3e4.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b3e6.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b3ec.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L52b3f0.  v3:= new `java.lang.Throwable`[v3];
  #L52b3f4.  v3[v2]:= v0 @kind object;
  #L52b3f8.  v3[v1]:= v4 @kind object;
  #L52b3fc.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L52b402.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52b408.  return @kind void;
  catch `java.lang.Throwable` @[L52b3a4..L52b3b2] goto L52b3e4;
  catch `java.lang.Throwable` @[L52b3b2..L52b3bc] goto L52b3be;
}
procedure `void` `b`(`io.reactivex.subscribers.SafeSubscriber` v6 @kind this) @signature `Lio/reactivex/subscribers/SafeSubscriber;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L52b648.  v0:= 1I;
  #L52b64a.  v6.`io.reactivex.subscribers.SafeSubscriber.c` @type ^`boolean` := v0 @kind boolean;
  #L52b64e.  v1:= new `java.lang.NullPointerException`;
  #L52b652.  v2:= "Subscription not set!" @kind object;
  #L52b656.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52b65c.  v2:= 0I;
  #L52b65e.  v3:= 2I;
  #L52b660.  v4:= v6.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L52b664.  v5:= `@@io.reactivex.internal.subscriptions.EmptySubscription.INSTANCE` @type ^`io.reactivex.internal.subscriptions.EmptySubscription` @kind object;
  #L52b668.  call `onSubscribe`(v4, v5) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L52b66e.  v4:= v6.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L52b672.  call `onError`(v4, v1) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L52b678.  goto L52b69e;
  #L52b67a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b67c.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b682.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L52b686.  v3:= new `java.lang.Throwable`[v3];
  #L52b68a.  v3[v2]:= v1 @kind object;
  #L52b68e.  v3[v0]:= v4 @kind object;
  #L52b692.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L52b698.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52b69e.  return @kind void;
  #L52b6a0.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b6a2.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b6a8.  v5:= new `io.reactivex.exceptions.CompositeException`;
  #L52b6ac.  v3:= new `java.lang.Throwable`[v3];
  #L52b6b0.  v3[v2]:= v1 @kind object;
  #L52b6b4.  v3[v0]:= v4 @kind object;
  #L52b6b8.  call `<init>`(v5, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L52b6be.  call `onError`(v5) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52b6c4.  return @kind void;
  catch `java.lang.Throwable` @[L52b660..L52b66e] goto L52b6a0;
  catch `java.lang.Throwable` @[L52b66e..L52b678] goto L52b67a;
}
procedure `void` `cancel`(`io.reactivex.subscribers.SafeSubscriber` v1 @kind this) @signature `Lio/reactivex/subscribers/SafeSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52b300.  v0:= v1.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L52b304.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L52b30a.  goto L52b31a;
  #L52b30c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b30e.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b314.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52b31a.  return @kind void;
  catch `java.lang.Throwable` @[L52b300..L52b30a] goto L52b30c;
}
procedure `void` `onComplete`(`io.reactivex.subscribers.SafeSubscriber` v1 @kind this) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52b338.  v0:= v1.`io.reactivex.subscribers.SafeSubscriber.c` @type ^`boolean` @kind boolean;
  #L52b33c.  if v0 == 0 then goto L52b342;
  #L52b340.  return @kind void;
  #L52b342.  v0:= 1I;
  #L52b344.  v1.`io.reactivex.subscribers.SafeSubscriber.c` @type ^`boolean` := v0 @kind boolean;
  #L52b348.  v0:= v1.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L52b34c.  if v0 != 0 then goto L52b358;
  #L52b350.  call `a`(v1) @signature `Lio/reactivex/subscribers/SafeSubscriber;.a:()V` @kind virtual;
  #L52b356.  return @kind void;
  #L52b358.  v0:= v1.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L52b35c.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L52b362.  goto L52b372;
  #L52b364.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b366.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b36c.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52b372.  return @kind void;
  catch `java.lang.Throwable` @[L52b358..L52b362] goto L52b364;
}
procedure `void` `onError`(`io.reactivex.subscribers.SafeSubscriber` v8 @kind this, `java.lang.Throwable` v9 @kind object) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L52b434.  v0:= v8.`io.reactivex.subscribers.SafeSubscriber.c` @type ^`boolean` @kind boolean;
  #L52b438.  if v0 == 0 then goto L52b444;
  #L52b43c.  call `onError`(v9) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52b442.  return @kind void;
  #L52b444.  v0:= 1I;
  #L52b446.  v8.`io.reactivex.subscribers.SafeSubscriber.c` @type ^`boolean` := v0 @kind boolean;
  #L52b44a.  v1:= v8.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L52b44e.  v2:= 0I;
  #L52b450.  v3:= 2I;
  #L52b452.  if v1 != 0 then goto L52b4ea;
  #L52b456.  v1:= new `java.lang.NullPointerException`;
  #L52b45a.  v4:= "Subscription not set!" @kind object;
  #L52b45e.  call `<init>`(v1, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52b464.  v4:= 3I;
  #L52b466.  v5:= v8.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L52b46a.  v6:= `@@io.reactivex.internal.subscriptions.EmptySubscription.INSTANCE` @type ^`io.reactivex.internal.subscriptions.EmptySubscription` @kind object;
  #L52b46e.  call `onSubscribe`(v5, v6) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L52b474.  v5:= v8.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L52b478.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L52b47c.  v7:= new `java.lang.Throwable`[v3];
  #L52b480.  v7[v2]:= v9 @kind object;
  #L52b484.  v7[v0]:= v1 @kind object;
  #L52b488.  call `<init>`(v6, v7) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L52b48e.  call `onError`(v5, v6) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L52b494.  goto L52b4be;
  #L52b496.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b498.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b49e.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L52b4a2.  v4:= new `java.lang.Throwable`[v4];
  #L52b4a6.  v4[v2]:= v9 @kind object;
  #L52b4aa.  v4[v0]:= v1 @kind object;
  #L52b4ae.  v4[v3]:= v5 @kind object;
  #L52b4b2.  call `<init>`(v6, v4) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L52b4b8.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52b4be.  return @kind void;
  #L52b4c0.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b4c2.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b4c8.  v6:= new `io.reactivex.exceptions.CompositeException`;
  #L52b4cc.  v4:= new `java.lang.Throwable`[v4];
  #L52b4d0.  v4[v2]:= v9 @kind object;
  #L52b4d4.  v4[v0]:= v1 @kind object;
  #L52b4d8.  v4[v3]:= v5 @kind object;
  #L52b4dc.  call `<init>`(v6, v4) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L52b4e2.  call `onError`(v6) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52b4e8.  return @kind void;
  #L52b4ea.  if v9 != 0 then goto L52b4fc;
  #L52b4ee.  v9:= new `java.lang.NullPointerException`;
  #L52b4f2.  v1:= "onError called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L52b4f6.  call `<init>`(v9, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52b4fc.  v1:= v8.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L52b500.  call `onError`(v1, v9) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L52b506.  goto L52b52c;
  #L52b508.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b50a.  call `throwIfFatal`(v1) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b510.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L52b514.  v3:= new `java.lang.Throwable`[v3];
  #L52b518.  v3[v2]:= v9 @kind object;
  #L52b51c.  v3[v0]:= v1 @kind object;
  #L52b520.  call `<init>`(v4, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L52b526.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52b52c.  return @kind void;
  catch `java.lang.Throwable` @[L52b466..L52b474] goto L52b4c0;
  catch `java.lang.Throwable` @[L52b474..L52b494] goto L52b496;
  catch `java.lang.Throwable` @[L52b4fc..L52b506] goto L52b508;
}
procedure `void` `onNext`(`io.reactivex.subscribers.SafeSubscriber` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L52b560.  v0:= v5.`io.reactivex.subscribers.SafeSubscriber.c` @type ^`boolean` @kind boolean;
  #L52b564.  if v0 == 0 then goto L52b56a;
  #L52b568.  return @kind void;
  #L52b56a.  v0:= v5.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L52b56e.  if v0 != 0 then goto L52b57a;
  #L52b572.  call `b`(v5) @signature `Lio/reactivex/subscribers/SafeSubscriber;.b:()V` @kind virtual;
  #L52b578.  return @kind void;
  #L52b57a.  v0:= 1I;
  #L52b57c.  v1:= 0I;
  #L52b57e.  v2:= 2I;
  #L52b580.  if v6 != 0 then goto L52b5ca;
  #L52b584.  v6:= new `java.lang.NullPointerException`;
  #L52b588.  v3:= "onNext called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L52b58c.  call `<init>`(v6, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52b592.  v3:= v5.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L52b596.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L52b59c.  call `onError`(v5, v6) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L52b5a2.  return @kind void;
  #L52b5a4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b5a6.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b5ac.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L52b5b0.  v2:= new `java.lang.Throwable`[v2];
  #L52b5b4.  v2[v1]:= v6 @kind object;
  #L52b5b8.  v2[v0]:= v3 @kind object;
  #L52b5bc.  call `<init>`(v4, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L52b5c2.  call `onError`(v5, v4) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L52b5c8.  return @kind void;
  #L52b5ca.  v3:= v5.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L52b5ce.  call `onNext`(v3, v6) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L52b5d4.  goto L52b5ee;
  #L52b5d6.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b5d8.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b5de.  v3:= v5.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L52b5e2.  call `cancel`(v3) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L52b5e8.  call `onError`(v5, v6) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L52b5ee.  return @kind void;
  #L52b5f0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b5f2.  call `throwIfFatal`(v3) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b5f8.  v4:= new `io.reactivex.exceptions.CompositeException`;
  #L52b5fc.  v2:= new `java.lang.Throwable`[v2];
  #L52b600.  v2[v1]:= v6 @kind object;
  #L52b604.  v2[v0]:= v3 @kind object;
  #L52b608.  call `<init>`(v4, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L52b60e.  call `onError`(v5, v4) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L52b614.  return @kind void;
  catch `java.lang.Throwable` @[L52b592..L52b59c] goto L52b5a4;
  catch `java.lang.Throwable` @[L52b5ca..L52b5d4] goto L52b5d6;
  catch `java.lang.Throwable` @[L52b5de..L52b5e8] goto L52b5f0;
}
procedure `void` `onSubscribe`(`io.reactivex.subscribers.SafeSubscriber` v5 @kind this, `org.reactivestreams.Subscription` v6 @kind object) @signature `Lio/reactivex/subscribers/SafeSubscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L52b6f0.  v0:= v5.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L52b6f4.  call temp:= `validate`(v0, v6) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z` @kind static;
  #L52b6fa.  v0:= temp;
  #L52b6fc.  if v0 == 0 then goto L52b754;
  #L52b700.  v5.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` := v6 @kind object;
  #L52b704.  v0:= v5.`io.reactivex.subscribers.SafeSubscriber.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L52b708.  call `onSubscribe`(v0, v5) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L52b70e.  goto L52b754;
  #L52b710.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b712.  call `throwIfFatal`(v0) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b718.  v1:= 1I;
  #L52b71a.  v5.`io.reactivex.subscribers.SafeSubscriber.c` @type ^`boolean` := v1 @kind boolean;
  #L52b71e.  call `cancel`(v6) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L52b724.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52b72a.  goto L52b754;
  #L52b72c.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b72e.  call `throwIfFatal`(v6) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b734.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L52b738.  v3:= 2I;
  #L52b73a.  v3:= new `java.lang.Throwable`[v3];
  #L52b73e.  v4:= 0I;
  #L52b740.  v3[v4]:= v0 @kind object;
  #L52b744.  v3[v1]:= v6 @kind object;
  #L52b748.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L52b74e.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52b754.  return @kind void;
  catch `java.lang.Throwable` @[L52b704..L52b70e] goto L52b710;
  catch `java.lang.Throwable` @[L52b71e..L52b724] goto L52b72c;
}
procedure `void` `request`(`io.reactivex.subscribers.SafeSubscriber` v3 @kind this, `long` v4 ) @signature `Lio/reactivex/subscribers/SafeSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L52b780.  v0:= v3.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L52b784.  call `request`(v0, v4) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L52b78a.  goto L52b7a4;
  #L52b78c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b78e.  call `throwIfFatal`(v4) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b794.  v5:= v3.`io.reactivex.subscribers.SafeSubscriber.b` @type ^`org.reactivestreams.Subscription` @kind object;
  #L52b798.  call `cancel`(v5) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L52b79e.  call `onError`(v4) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52b7a4.  return @kind void;
  #L52b7a6.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b7a8.  call `throwIfFatal`(v5) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L52b7ae.  v0:= new `io.reactivex.exceptions.CompositeException`;
  #L52b7b2.  v1:= 2I;
  #L52b7b4.  v1:= new `java.lang.Throwable`[v1];
  #L52b7b8.  v2:= 0I;
  #L52b7ba.  v1[v2]:= v4 @kind object;
  #L52b7be.  v4:= 1I;
  #L52b7c0.  v1[v4]:= v5 @kind object;
  #L52b7c4.  call `<init>`(v0, v1) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L52b7ca.  call `onError`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L52b7d0.  return @kind void;
  catch `java.lang.Throwable` @[L52b780..L52b78a] goto L52b78c;
  catch `java.lang.Throwable` @[L52b794..L52b79e] goto L52b7a6;
}
