record `io.reactivex.subjects.BehaviorSubject$a` @kind class @AccessFlag FINAL extends `io.reactivex.disposables.Disposable` @kind interface, `io.reactivex.internal.util.AppendOnlyLinkedArrayList$NonThrowingPredicate` @kind interface {
  `io.reactivex.Observer` `io.reactivex.subjects.BehaviorSubject$a.a` @AccessFlag FINAL;
  `io.reactivex.subjects.BehaviorSubject` `io.reactivex.subjects.BehaviorSubject$a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.subjects.BehaviorSubject$a.c` @AccessFlag ;
  `boolean` `io.reactivex.subjects.BehaviorSubject$a.d` @AccessFlag ;
  `io.reactivex.internal.util.AppendOnlyLinkedArrayList` `io.reactivex.subjects.BehaviorSubject$a.e` @AccessFlag ;
  `boolean` `io.reactivex.subjects.BehaviorSubject$a.f` @AccessFlag ;
  `boolean` `io.reactivex.subjects.BehaviorSubject$a.g` @AccessFlag VOLATILE;
  `long` `io.reactivex.subjects.BehaviorSubject$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.subjects.BehaviorSubject$a` v0 @kind this, `io.reactivex.Observer` v1 @kind object, `io.reactivex.subjects.BehaviorSubject` v2 @kind object) @signature `Lio/reactivex/subjects/BehaviorSubject$a;.<init>:(Lio/reactivex/Observer;Lio/reactivex/subjects/BehaviorSubject;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L527ab0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L527ab6.  v0.`io.reactivex.subjects.BehaviorSubject$a.a` @type ^`io.reactivex.Observer` := v1 @kind object;
  #L527aba.  v0.`io.reactivex.subjects.BehaviorSubject$a.b` @type ^`io.reactivex.subjects.BehaviorSubject` := v2 @kind object;
  #L527abe.  return @kind void;
}
procedure `void` `a`(`io.reactivex.subjects.BehaviorSubject$a` v4 @kind this) @signature `Lio/reactivex/subjects/BehaviorSubject$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L527afc.  v0:= v4.`io.reactivex.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L527b00.  if v0 == 0 then goto L527b06;
  #L527b04.  return @kind void;
  #L527b06.  @monitorenter v4
  #L527b08.  v0:= v4.`io.reactivex.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L527b0c.  if v0 == 0 then goto L527b14;
  #L527b10.  @monitorexit v4
  #L527b12.  return @kind void;
  #L527b14.  v0:= v4.`io.reactivex.subjects.BehaviorSubject$a.c` @type ^`boolean` @kind boolean;
  #L527b18.  if v0 == 0 then goto L527b20;
  #L527b1c.  @monitorexit v4
  #L527b1e.  return @kind void;
  #L527b20.  v0:= v4.`io.reactivex.subjects.BehaviorSubject$a.b` @type ^`io.reactivex.subjects.BehaviorSubject` @kind object;
  #L527b24.  v1:= v0.`io.reactivex.subjects.BehaviorSubject.d` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L527b28.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L527b2e.  v2:= v0.`io.reactivex.subjects.BehaviorSubject.g` @type ^`long` @kind wide;
  #L527b32.  v4.`io.reactivex.subjects.BehaviorSubject$a.h` @type ^`long` := v2 @kind wide;
  #L527b36.  v0:= v0.`io.reactivex.subjects.BehaviorSubject.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L527b3a.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L527b40.  v0:= temp @kind object;
  #L527b42.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L527b48.  v1:= 1I;
  #L527b4a.  if v0 == 0 then goto L527b52;
  #L527b4e.  v2:= 1I;
  #L527b50.  goto L527b54;
  #L527b52.  v2:= 0I;
  #L527b54.  v4.`io.reactivex.subjects.BehaviorSubject$a.d` @type ^`boolean` := v2 @kind boolean;
  #L527b58.  v4.`io.reactivex.subjects.BehaviorSubject$a.c` @type ^`boolean` := v1 @kind boolean;
  #L527b5c.  @monitorexit v4
  #L527b5e.  if v0 == 0 then goto L527b76;
  #L527b62.  call temp:= `test`(v4, v0) @signature `Lio/reactivex/subjects/BehaviorSubject$a;.test:(Ljava/lang/Object;)Z` @kind virtual;
  #L527b68.  v0:= temp;
  #L527b6a.  if v0 == 0 then goto L527b70;
  #L527b6e.  return @kind void;
  #L527b70.  call `b`(v4) @signature `Lio/reactivex/subjects/BehaviorSubject$a;.b:()V` @kind virtual;
  #L527b76.  return @kind void;
  #L527b78.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L527b7a.  @monitorexit v4
  #L527b7c.  throw v0;
  catch `java.lang.Throwable` @[L527b08..L527b5e] goto L527b78;
  catch `java.lang.Throwable` @[L527b7a..L527b7c] goto L527b78;
}
procedure `void` `b`(`io.reactivex.subjects.BehaviorSubject$a` v2 @kind this) @signature `Lio/reactivex/subjects/BehaviorSubject$a;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L527ba4.  v0:= v2.`io.reactivex.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L527ba8.  if v0 == 0 then goto L527bae;
  #L527bac.  return @kind void;
  #L527bae.  @monitorenter v2
  #L527bb0.  v0:= v2.`io.reactivex.subjects.BehaviorSubject$a.e` @type ^`io.reactivex.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L527bb4.  if v0 != 0 then goto L527bc2;
  #L527bb8.  v0:= 0I;
  #L527bba.  v2.`io.reactivex.subjects.BehaviorSubject$a.d` @type ^`boolean` := v0 @kind boolean;
  #L527bbe.  @monitorexit v2
  #L527bc0.  return @kind void;
  #L527bc2.  v1:= 0I;
  #L527bc4.  v2.`io.reactivex.subjects.BehaviorSubject$a.e` @type ^`io.reactivex.internal.util.AppendOnlyLinkedArrayList` := v1 @kind object;
  #L527bc8.  @monitorexit v2
  #L527bca.  call `forEachWhile`(v0, v2) @signature `Lio/reactivex/internal/util/AppendOnlyLinkedArrayList;.forEachWhile:(Lio/reactivex/internal/util/AppendOnlyLinkedArrayList$NonThrowingPredicate;)V` @kind virtual;
  #L527bd0.  goto L527ba4;
  #L527bd2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L527bd4.  @monitorexit v2
  #L527bd6.  throw v0;
  catch `java.lang.Throwable` @[L527bb0..L527bca] goto L527bd2;
  catch `java.lang.Throwable` @[L527bd4..L527bd6] goto L527bd2;
}
procedure `void` `c`(`io.reactivex.subjects.BehaviorSubject$a` v3 @kind this, `java.lang.Object` v4 @kind object, `long` v5 ) @signature `Lio/reactivex/subjects/BehaviorSubject$a;.c:(Ljava/lang/Object;J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L527bfc.  v0:= v3.`io.reactivex.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L527c00.  if v0 == 0 then goto L527c06;
  #L527c04.  return @kind void;
  #L527c06.  v0:= v3.`io.reactivex.subjects.BehaviorSubject$a.f` @type ^`boolean` @kind boolean;
  #L527c0a.  if v0 != 0 then goto L527c6a;
  #L527c0e.  @monitorenter v3
  #L527c10.  v0:= v3.`io.reactivex.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L527c14.  if v0 == 0 then goto L527c1c;
  #L527c18.  @monitorexit v3
  #L527c1a.  return @kind void;
  #L527c1c.  v0:= v3.`io.reactivex.subjects.BehaviorSubject$a.h` @type ^`long` @kind wide;
  #L527c20.  v2:= lcmp(v0, v5);
  #L527c24.  if v2 != 0 then goto L527c2c;
  #L527c28.  @monitorexit v3
  #L527c2a.  return @kind void;
  #L527c2c.  v5:= v3.`io.reactivex.subjects.BehaviorSubject$a.d` @type ^`boolean` @kind boolean;
  #L527c30.  if v5 == 0 then goto L527c56;
  #L527c34.  v5:= v3.`io.reactivex.subjects.BehaviorSubject$a.e` @type ^`io.reactivex.internal.util.AppendOnlyLinkedArrayList` @kind object;
  #L527c38.  if v5 != 0 then goto L527c4c;
  #L527c3c.  v5:= new `io.reactivex.internal.util.AppendOnlyLinkedArrayList`;
  #L527c40.  v6:= 4I;
  #L527c42.  call `<init>`(v5, v6) @signature `Lio/reactivex/internal/util/AppendOnlyLinkedArrayList;.<init>:(I)V` @kind direct;
  #L527c48.  v3.`io.reactivex.subjects.BehaviorSubject$a.e` @type ^`io.reactivex.internal.util.AppendOnlyLinkedArrayList` := v5 @kind object;
  #L527c4c.  call `add`(v5, v4) @signature `Lio/reactivex/internal/util/AppendOnlyLinkedArrayList;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L527c52.  @monitorexit v3
  #L527c54.  return @kind void;
  #L527c56.  v5:= 1I;
  #L527c58.  v3.`io.reactivex.subjects.BehaviorSubject$a.c` @type ^`boolean` := v5 @kind boolean;
  #L527c5c.  @monitorexit v3
  #L527c5e.  v3.`io.reactivex.subjects.BehaviorSubject$a.f` @type ^`boolean` := v5 @kind boolean;
  #L527c62.  goto L527c6a;
  #L527c64.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L527c66.  @monitorexit v3
  #L527c68.  throw v4;
  #L527c6a.  call temp:= `test`(v3, v4) @signature `Lio/reactivex/subjects/BehaviorSubject$a;.test:(Ljava/lang/Object;)Z` @kind virtual;
  #L527c70.  return @kind void;
  catch `java.lang.Throwable` @[L527c10..L527c5e] goto L527c64;
  catch `java.lang.Throwable` @[L527c66..L527c68] goto L527c64;
}
procedure `void` `dispose`(`io.reactivex.subjects.BehaviorSubject$a` v1 @kind this) @signature `Lio/reactivex/subjects/BehaviorSubject$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L527ad0.  v0:= v1.`io.reactivex.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L527ad4.  if v0 != 0 then goto L527ae8;
  #L527ad8.  v0:= 1I;
  #L527ada.  v1.`io.reactivex.subjects.BehaviorSubject$a.g` @type ^`boolean` := v0 @kind boolean;
  #L527ade.  v0:= v1.`io.reactivex.subjects.BehaviorSubject$a.b` @type ^`io.reactivex.subjects.BehaviorSubject` @kind object;
  #L527ae2.  call `e`(v0, v1) @signature `Lio/reactivex/subjects/BehaviorSubject;.e:(Lio/reactivex/subjects/BehaviorSubject$a;)V` @kind virtual;
  #L527ae8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.subjects.BehaviorSubject$a` v1 @kind this) @signature `Lio/reactivex/subjects/BehaviorSubject$a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L527a64.  v0:= v1.`io.reactivex.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L527a68.  return v0;
}
procedure `boolean` `test`(`io.reactivex.subjects.BehaviorSubject$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/subjects/BehaviorSubject$a;.test:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L527a7c.  v0:= v1.`io.reactivex.subjects.BehaviorSubject$a.g` @type ^`boolean` @kind boolean;
  #L527a80.  if v0 != 0 then goto L527a9a;
  #L527a84.  v0:= v1.`io.reactivex.subjects.BehaviorSubject$a.a` @type ^`io.reactivex.Observer` @kind object;
  #L527a88.  call temp:= `accept`(v2, v0) @signature `Lio/reactivex/internal/util/NotificationLite;.accept:(Ljava/lang/Object;Lio/reactivex/Observer;)Z` @kind static;
  #L527a8e.  v2:= temp;
  #L527a90.  if v2 == 0 then goto L527a96;
  #L527a94.  goto L527a9a;
  #L527a96.  v2:= 0I;
  #L527a98.  goto L527a9c;
  #L527a9a.  v2:= 1I;
  #L527a9c.  return v2;
}
