record `io.reactivex.android.schedulers.a` @kind class @AccessFlag FINAL extends `io.reactivex.Scheduler` @kind class {
  `android.os.Handler` `io.reactivex.android.schedulers.a.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.reactivex.android.schedulers.a.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.android.schedulers.a` v0 @kind this, `android.os.Handler` v1 @kind object, `boolean` v2 ) @signature `Lio/reactivex/android/schedulers/a;.<init>:(Landroid/os/Handler;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L426d74.  call `<init>`(v0) @signature `Lio/reactivex/Scheduler;.<init>:()V` @kind direct;
  #L426d7a.  v0.`io.reactivex.android.schedulers.a.c` @type ^`android.os.Handler` := v1 @kind object;
  #L426d7e.  v0.`io.reactivex.android.schedulers.a.d` @type ^`boolean` := v2 @kind boolean;
  #L426d82.  return @kind void;
}
procedure `io.reactivex.Scheduler$Worker` `createWorker`(`io.reactivex.android.schedulers.a` v3 @kind this) @signature `Lio/reactivex/android/schedulers/a;.createWorker:()Lio/reactivex/Scheduler$Worker;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L426cd0.  v0:= new `io.reactivex.android.schedulers.a$a`;
  #L426cd4.  v1:= v3.`io.reactivex.android.schedulers.a.c` @type ^`android.os.Handler` @kind object;
  #L426cd8.  v2:= v3.`io.reactivex.android.schedulers.a.d` @type ^`boolean` @kind boolean;
  #L426cdc.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/android/schedulers/a$a;.<init>:(Landroid/os/Handler;Z)V` @kind direct;
  #L426ce2.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `scheduleDirect`(`io.reactivex.android.schedulers.a` v2 @kind this, `java.lang.Runnable` v3 @kind object, `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object) @signature `Lio/reactivex/android/schedulers/a;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L426cf4.  if v3 == 0 then goto L426d52;
  #L426cf8.  if v6 == 0 then goto L426d42;
  #L426cfc.  call temp:= `onSchedule`(v3) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L426d02.  v3:= temp @kind object;
  #L426d04.  v0:= new `io.reactivex.android.schedulers.a$b`;
  #L426d08.  v1:= v2.`io.reactivex.android.schedulers.a.c` @type ^`android.os.Handler` @kind object;
  #L426d0c.  call `<init>`(v0, v1, v3) @signature `Lio/reactivex/android/schedulers/a$b;.<init>:(Landroid/os/Handler;Ljava/lang/Runnable;)V` @kind direct;
  #L426d12.  v3:= v2.`io.reactivex.android.schedulers.a.c` @type ^`android.os.Handler` @kind object;
  #L426d16.  call temp:= `obtain`(v3, v0) @signature `Landroid/os/Message;.obtain:(Landroid/os/Handler;Ljava/lang/Runnable;)Landroid/os/Message;` @kind static;
  #L426d1c.  v3:= temp @kind object;
  #L426d1e.  v1:= v2.`io.reactivex.android.schedulers.a.d` @type ^`boolean` @kind boolean;
  #L426d22.  if v1 == 0 then goto L426d2e;
  #L426d26.  v1:= 1I;
  #L426d28.  call `setAsynchronous`(v3, v1) @signature `Landroid/os/Message;.setAsynchronous:(Z)V` @kind virtual;
  #L426d2e.  v1:= v2.`io.reactivex.android.schedulers.a.c` @type ^`android.os.Handler` @kind object;
  #L426d32.  call temp:= `toMillis`(v6, v4) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L426d38.  v4:= temp @kind wide;
  #L426d3a.  call temp:= `sendMessageDelayed`(v1, v3, v4) @signature `Landroid/os/Handler;.sendMessageDelayed:(Landroid/os/Message;J)Z` @kind virtual;
  #L426d40.  return v0 @kind object;
  #L426d42.  v3:= new `java.lang.NullPointerException`;
  #L426d46.  v4:= "unit == null" @kind object;
  #L426d4a.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L426d50.  throw v3;
  #L426d52.  v3:= new `java.lang.NullPointerException`;
  #L426d56.  v4:= "run == null" @kind object;
  #L426d5a.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L426d60.  throw v3;
}
