record `io.reactivex.android.schedulers.AndroidSchedulers` @kind class @AccessFlag PUBLIC_FINAL {
}
global `io.reactivex.Scheduler` `@@io.reactivex.android.schedulers.AndroidSchedulers.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/android/schedulers/AndroidSchedulers;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L426ae4.  v0:= new `io.reactivex.android.schedulers.AndroidSchedulers$a`;
  #L426ae8.  call `<init>`(v0) @signature `Lio/reactivex/android/schedulers/AndroidSchedulers$a;.<init>:()V` @kind direct;
  #L426aee.  call temp:= `initMainThreadScheduler`(v0) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.initMainThreadScheduler:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L426af4.  v0:= temp @kind object;
  #L426af6.  `@@io.reactivex.android.schedulers.AndroidSchedulers.a` @type ^`io.reactivex.Scheduler` := v0 @kind object;
  #L426afa.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.android.schedulers.AndroidSchedulers` v2 @kind this) @signature `Lio/reactivex/android/schedulers/AndroidSchedulers;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L426b0c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L426b12.  v0:= new `java.lang.AssertionError`;
  #L426b16.  v1:= "No instances." @kind object;
  #L426b1a.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L426b20.  throw v0;
}
procedure `io.reactivex.Scheduler` `from`(`android.os.Looper` v1 @kind object) @signature `Lio/reactivex/android/schedulers/AndroidSchedulers;.from:(Landroid/os/Looper;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L426a24.  v0:= 0I;
  #L426a26.  call temp:= `from`(v1, v0) @signature `Lio/reactivex/android/schedulers/AndroidSchedulers;.from:(Landroid/os/Looper;Z)Lio/reactivex/Scheduler;` @kind static;
  #L426a2c.  v1:= temp @kind object;
  #L426a2e.  return v1 @kind object;
}
procedure `io.reactivex.Scheduler` `from`(`android.os.Looper` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/android/schedulers/AndroidSchedulers;.from:(Landroid/os/Looper;Z)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L426a40.  if v3 == 0 then goto L426a92;
  #L426a44.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L426a48.  v1:= 16I;
  #L426a4c.  v2:= 0I;
  #L426a4e.  if v0 >= v1 then goto L426a56;
  #L426a52.  v4:= 0I;
  #L426a54.  goto L426a7c;
  #L426a56.  if v4 == 0 then goto L426a7c;
  #L426a5a.  v1:= 22I;
  #L426a5e.  if v0 >= v1 then goto L426a7c;
  #L426a62.  call temp:= `obtain`() @signature `Landroid/os/Message;.obtain:()Landroid/os/Message;` @kind static;
  #L426a68.  v0:= temp @kind object;
  #L426a6a.  v1:= 1I;
  #L426a6c.  call `setAsynchronous`(v0, v1) @signature `Landroid/os/Message;.setAsynchronous:(Z)V` @kind virtual;
  #L426a72.  goto L426a76;
  #L426a74.  v4:= 0I;
  #L426a76.  call `recycle`(v0) @signature `Landroid/os/Message;.recycle:()V` @kind virtual;
  #L426a7c.  v0:= new `io.reactivex.android.schedulers.a`;
  #L426a80.  v1:= new `android.os.Handler`;
  #L426a84.  call `<init>`(v1, v3) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L426a8a.  call `<init>`(v0, v1, v4) @signature `Lio/reactivex/android/schedulers/a;.<init>:(Landroid/os/Handler;Z)V` @kind direct;
  #L426a90.  return v0 @kind object;
  #L426a92.  v3:= new `java.lang.NullPointerException`;
  #L426a96.  v4:= "looper == null" @kind object;
  #L426a9a.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L426aa0.  throw v3;
  catch `java.lang.NoSuchMethodError` @[L426a6c..L426a72] goto L426a74;
}
procedure `io.reactivex.Scheduler` `mainThread`() @signature `Lio/reactivex/android/schedulers/AndroidSchedulers;.mainThread:()Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L426ac4.  v0:= `@@io.reactivex.android.schedulers.AndroidSchedulers.a` @type ^`io.reactivex.Scheduler` @kind object;
  #L426ac8.  call temp:= `onMainThreadScheduler`(v0) @signature `Lio/reactivex/android/plugins/RxAndroidPlugins;.onMainThreadScheduler:(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;` @kind static;
  #L426ace.  v0:= temp @kind object;
  #L426ad0.  return v0 @kind object;
}
