record `io.reactivex.Completable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.CompletableSource` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.Completable` v0 @kind this) @signature `Lio/reactivex/Completable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4144cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4144d2.  return @kind void;
}
procedure `io.reactivex.Completable` `a`(`io.reactivex.Completable` v9 @kind this, `io.reactivex.functions.Consumer` v10 @kind object, `io.reactivex.functions.Consumer` v11 @kind object, `io.reactivex.functions.Action` v12 @kind object, `io.reactivex.functions.Action` v13 @kind object, `io.reactivex.functions.Action` v14 @kind object, `io.reactivex.functions.Action` v15 @kind object) @signature `Lio/reactivex/Completable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L413604.  v0:= "onSubscribe is null" @kind object;
  #L413608.  call temp:= `requireNonNull`(v10, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41360e.  v0:= "onError is null" @kind object;
  #L413612.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413618.  v0:= "onComplete is null" @kind object;
  #L41361c.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413622.  v0:= "onTerminate is null" @kind object;
  #L413626.  call temp:= `requireNonNull`(v13, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41362c.  v0:= "onAfterTerminate is null" @kind object;
  #L413630.  call temp:= `requireNonNull`(v14, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413636.  v0:= "onDispose is null" @kind object;
  #L41363a.  call temp:= `requireNonNull`(v15, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413640.  v0:= new `io.reactivex.internal.operators.completable.CompletablePeek`;
  #L413644.  v1:= v0 @kind object;
  #L413646.  v2:= v9 @kind object;
  #L413648.  v3:= v10 @kind object;
  #L41364a.  v4:= v11 @kind object;
  #L41364c.  v5:= v12 @kind object;
  #L41364e.  v6:= v13 @kind object;
  #L413650.  v7:= v14 @kind object;
  #L413652.  v8:= v15 @kind object;
  #L413654.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lio/reactivex/internal/operators/completable/CompletablePeek;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)V` @kind direct;
  #L41365a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413660.  v10:= temp @kind object;
  #L413662.  return v10 @kind object;
}
procedure `io.reactivex.Completable` `amb`(`java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/Completable;.amb:(Ljava/lang/Iterable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41311c.  v0:= "sources is null" @kind object;
  #L413120.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413126.  v0:= new `io.reactivex.internal.operators.completable.CompletableAmb`;
  #L41312a.  v1:= 0I;
  #L41312c.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb;.<init>:([Lio/reactivex/CompletableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L413132.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413138.  v2:= temp @kind object;
  #L41313a.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `ambArray`(`io.reactivex.CompletableSource`[] v2 @kind object) @signature `Lio/reactivex/Completable;.ambArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41314c.  v0:= "sources is null" @kind object;
  #L413150.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413156.  v0:= length @variable v2;
  #L413158.  if v0 != 0 then goto L413166;
  #L41315c.  call temp:= `complete`() @signature `Lio/reactivex/Completable;.complete:()Lio/reactivex/Completable;` @kind static;
  #L413162.  v2:= temp @kind object;
  #L413164.  return v2 @kind object;
  #L413166.  v0:= length @variable v2;
  #L413168.  v1:= 1I;
  #L41316a.  if v0 != v1 then goto L41317e;
  #L41316e.  v0:= 0I;
  #L413170.  v2:= v2[v0] @kind object;
  #L413174.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L41317a.  v2:= temp @kind object;
  #L41317c.  return v2 @kind object;
  #L41317e.  v0:= new `io.reactivex.internal.operators.completable.CompletableAmb`;
  #L413182.  v1:= 0I;
  #L413184.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableAmb;.<init>:([Lio/reactivex/CompletableSource;Ljava/lang/Iterable;)V` @kind direct;
  #L41318a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413190.  v2:= temp @kind object;
  #L413192.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `b`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L41397c.  v0:= "sources is null" @kind object;
  #L413980.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413986.  v0:= "maxConcurrency" @kind object;
  #L41398a.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L413990.  v0:= new `io.reactivex.internal.operators.completable.CompletableMerge`;
  #L413994.  call `<init>`(v0, v1, v2, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableMerge;.<init>:(Lorg/reactivestreams/Publisher;IZ)V` @kind direct;
  #L41399a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L4139a0.  v1:= temp @kind object;
  #L4139a2.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `c`(`io.reactivex.Completable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `io.reactivex.CompletableSource` v13 @kind object) @signature `Lio/reactivex/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L413ed4.  v0:= "unit is null" @kind object;
  #L413ed8.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413ede.  v0:= "scheduler is null" @kind object;
  #L413ee2.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413ee8.  v0:= new `io.reactivex.internal.operators.completable.CompletableTimeout`;
  #L413eec.  v1:= v0 @kind object;
  #L413eee.  v2:= v8 @kind object;
  #L413ef0.  v3:= v9 @kind wide;
  #L413ef2.  v5:= v11 @kind object;
  #L413ef4.  v6:= v12 @kind object;
  #L413ef6.  v7:= v13 @kind object;
  #L413ef8.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/completable/CompletableTimeout;.<init>:(Lio/reactivex/CompletableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L413efe.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413f04.  v9:= temp @kind object;
  #L413f06.  return v9 @kind object;
}
procedure `io.reactivex.Completable` `complete`() @signature `Lio/reactivex/Completable;.complete:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413230.  v0:= `@@io.reactivex.internal.operators.completable.CompletableEmpty.INSTANCE` @type ^`io.reactivex.Completable` @kind object;
  #L413234.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L41323a.  v0:= temp @kind object;
  #L41323c.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `concat`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Completable;.concat:(Ljava/lang/Iterable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413284.  v0:= "sources is null" @kind object;
  #L413288.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41328e.  v0:= new `io.reactivex.internal.operators.completable.CompletableConcatIterable`;
  #L413292.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L413298.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L41329e.  v1:= temp @kind object;
  #L4132a0.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `concat`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Completable;.concat:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4132b4.  v0:= 2I;
  #L4132b6.  call temp:= `concat`(v1, v0) @signature `Lio/reactivex/Completable;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Completable;` @kind static;
  #L4132bc.  v1:= temp @kind object;
  #L4132be.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `concat`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/Completable;.concat:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4132d0.  v0:= "sources is null" @kind object;
  #L4132d4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4132da.  v0:= "prefetch" @kind object;
  #L4132de.  call temp:= `verifyPositive`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.verifyPositive:(ILjava/lang/String;)I` @kind static;
  #L4132e4.  v0:= new `io.reactivex.internal.operators.completable.CompletableConcat`;
  #L4132e8.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableConcat;.<init>:(Lorg/reactivestreams/Publisher;I)V` @kind direct;
  #L4132ee.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L4132f4.  v1:= temp @kind object;
  #L4132f6.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `concatArray`(`io.reactivex.CompletableSource`[] v2 @kind object) @signature `Lio/reactivex/Completable;.concatArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L413308.  v0:= "sources is null" @kind object;
  #L41330c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413312.  v0:= length @variable v2;
  #L413314.  if v0 != 0 then goto L413322;
  #L413318.  call temp:= `complete`() @signature `Lio/reactivex/Completable;.complete:()Lio/reactivex/Completable;` @kind static;
  #L41331e.  v2:= temp @kind object;
  #L413320.  return v2 @kind object;
  #L413322.  v0:= length @variable v2;
  #L413324.  v1:= 1I;
  #L413326.  if v0 != v1 then goto L41333a;
  #L41332a.  v0:= 0I;
  #L41332c.  v2:= v2[v0] @kind object;
  #L413330.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L413336.  v2:= temp @kind object;
  #L413338.  return v2 @kind object;
  #L41333a.  v0:= new `io.reactivex.internal.operators.completable.CompletableConcatArray`;
  #L41333e.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray;.<init>:([Lio/reactivex/CompletableSource;)V` @kind direct;
  #L413344.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L41334a.  v2:= temp @kind object;
  #L41334c.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `create`(`io.reactivex.CompletableOnSubscribe` v1 @kind object) @signature `Lio/reactivex/Completable;.create:(Lio/reactivex/CompletableOnSubscribe;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413390.  v0:= "source is null" @kind object;
  #L413394.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41339a.  v0:= new `io.reactivex.internal.operators.completable.CompletableCreate`;
  #L41339e.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableCreate;.<init>:(Lio/reactivex/CompletableOnSubscribe;)V` @kind direct;
  #L4133a4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L4133aa.  v1:= temp @kind object;
  #L4133ac.  return v1 @kind object;
}
procedure `java.lang.NullPointerException` `d`(`java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/Completable;.d:(Ljava/lang/Throwable;)Ljava/lang/NullPointerException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4143d0.  v0:= new `java.lang.NullPointerException`;
  #L4143d4.  v1:= "Actually not, but can't pass out an exception otherwise..." @kind object;
  #L4143d8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4143de.  call temp:= `initCause`(v0, v2) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L4143e4.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `defer`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Completable;.defer:(Ljava/util/concurrent/Callable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4133c0.  v0:= "completableSupplier" @kind object;
  #L4133c4.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4133ca.  v0:= new `io.reactivex.internal.operators.completable.CompletableDefer`;
  #L4133ce.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableDefer;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L4133d4.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L4133da.  v1:= temp @kind object;
  #L4133dc.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `error`(`java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/Completable;.error:(Ljava/lang/Throwable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4136dc.  v0:= "error is null" @kind object;
  #L4136e0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4136e6.  v0:= new `io.reactivex.internal.operators.completable.CompletableError`;
  #L4136ea.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableError;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L4136f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L4136f6.  v1:= temp @kind object;
  #L4136f8.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `error`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Completable;.error:(Ljava/util/concurrent/Callable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41370c.  v0:= "errorSupplier is null" @kind object;
  #L413710.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413716.  v0:= new `io.reactivex.internal.operators.completable.CompletableErrorSupplier`;
  #L41371a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableErrorSupplier;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L413720.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413726.  v1:= temp @kind object;
  #L413728.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromAction`(`io.reactivex.functions.Action` v1 @kind object) @signature `Lio/reactivex/Completable;.fromAction:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41373c.  v0:= "run is null" @kind object;
  #L413740.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413746.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromAction`;
  #L41374a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromAction;.<init>:(Lio/reactivex/functions/Action;)V` @kind direct;
  #L413750.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413756.  v1:= temp @kind object;
  #L413758.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromCallable`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/Completable;.fromCallable:(Ljava/util/concurrent/Callable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41376c.  v0:= "callable is null" @kind object;
  #L413770.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413776.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromCallable`;
  #L41377a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromCallable;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L413780.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413786.  v1:= temp @kind object;
  #L413788.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromFuture`(`java.util.concurrent.Future` v1 @kind object) @signature `Lio/reactivex/Completable;.fromFuture:(Ljava/util/concurrent/Future;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41379c.  v0:= "future is null" @kind object;
  #L4137a0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4137a6.  call temp:= `futureAction`(v1) @signature `Lio/reactivex/internal/functions/Functions;.futureAction:(Ljava/util/concurrent/Future;)Lio/reactivex/functions/Action;` @kind static;
  #L4137ac.  v1:= temp @kind object;
  #L4137ae.  call temp:= `fromAction`(v1) @signature `Lio/reactivex/Completable;.fromAction:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind static;
  #L4137b4.  v1:= temp @kind object;
  #L4137b6.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromMaybe`(`io.reactivex.MaybeSource` v1 @kind object) @signature `Lio/reactivex/Completable;.fromMaybe:(Lio/reactivex/MaybeSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4137c8.  v0:= "maybe is null" @kind object;
  #L4137cc.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4137d2.  v0:= new `io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable`;
  #L4137d6.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeIgnoreElementCompletable;.<init>:(Lio/reactivex/MaybeSource;)V` @kind direct;
  #L4137dc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L4137e2.  v1:= temp @kind object;
  #L4137e4.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromObservable`(`io.reactivex.ObservableSource` v1 @kind object) @signature `Lio/reactivex/Completable;.fromObservable:(Lio/reactivex/ObservableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4137f8.  v0:= "observable is null" @kind object;
  #L4137fc.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413802.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromObservable`;
  #L413806.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromObservable;.<init>:(Lio/reactivex/ObservableSource;)V` @kind direct;
  #L41380c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413812.  v1:= temp @kind object;
  #L413814.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413828.  v0:= "publisher is null" @kind object;
  #L41382c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413832.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromPublisher`;
  #L413836.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromPublisher;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L41383c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413842.  v1:= temp @kind object;
  #L413844.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromRunnable`(`java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/Completable;.fromRunnable:(Ljava/lang/Runnable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413858.  v0:= "run is null" @kind object;
  #L41385c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413862.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromRunnable`;
  #L413866.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromRunnable;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L41386c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413872.  v1:= temp @kind object;
  #L413874.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `fromSingle`(`io.reactivex.SingleSource` v1 @kind object) @signature `Lio/reactivex/Completable;.fromSingle:(Lio/reactivex/SingleSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413888.  v0:= "single is null" @kind object;
  #L41388c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413892.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromSingle`;
  #L413896.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromSingle;.<init>:(Lio/reactivex/SingleSource;)V` @kind direct;
  #L41389c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L4138a2.  v1:= temp @kind object;
  #L4138a4.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `merge`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Completable;.merge:(Ljava/lang/Iterable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41390c.  v0:= "sources is null" @kind object;
  #L413910.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413916.  v0:= new `io.reactivex.internal.operators.completable.CompletableMergeIterable`;
  #L41391a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L413920.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413926.  v1:= temp @kind object;
  #L413928.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `merge`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Completable;.merge:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41393c.  v0:= 2147483647I;
  #L413942.  v1:= 0I;
  #L413944.  call temp:= `b`(v2, v0, v1) @signature `Lio/reactivex/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @kind static;
  #L41394a.  v2:= temp @kind object;
  #L41394c.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `merge`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/Completable;.merge:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413960.  v0:= 0I;
  #L413962.  call temp:= `b`(v1, v2, v0) @signature `Lio/reactivex/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @kind static;
  #L413968.  v1:= temp @kind object;
  #L41396a.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `mergeArray`(`io.reactivex.CompletableSource`[] v2 @kind object) @signature `Lio/reactivex/Completable;.mergeArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4139b4.  v0:= "sources is null" @kind object;
  #L4139b8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4139be.  v0:= length @variable v2;
  #L4139c0.  if v0 != 0 then goto L4139ce;
  #L4139c4.  call temp:= `complete`() @signature `Lio/reactivex/Completable;.complete:()Lio/reactivex/Completable;` @kind static;
  #L4139ca.  v2:= temp @kind object;
  #L4139cc.  return v2 @kind object;
  #L4139ce.  v0:= length @variable v2;
  #L4139d0.  v1:= 1I;
  #L4139d2.  if v0 != v1 then goto L4139e6;
  #L4139d6.  v0:= 0I;
  #L4139d8.  v2:= v2[v0] @kind object;
  #L4139dc.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L4139e2.  v2:= temp @kind object;
  #L4139e4.  return v2 @kind object;
  #L4139e6.  v0:= new `io.reactivex.internal.operators.completable.CompletableMergeArray`;
  #L4139ea.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeArray;.<init>:([Lio/reactivex/CompletableSource;)V` @kind direct;
  #L4139f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L4139f6.  v2:= temp @kind object;
  #L4139f8.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `mergeArrayDelayError`(`io.reactivex.CompletableSource`[] v1 @kind object) @signature `Lio/reactivex/Completable;.mergeArrayDelayError:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413a0c.  v0:= "sources is null" @kind object;
  #L413a10.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413a16.  v0:= new `io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray`;
  #L413a1a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorArray;.<init>:([Lio/reactivex/CompletableSource;)V` @kind direct;
  #L413a20.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413a26.  v1:= temp @kind object;
  #L413a28.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `mergeDelayError`(`java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/Completable;.mergeDelayError:(Ljava/lang/Iterable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413a3c.  v0:= "sources is null" @kind object;
  #L413a40.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413a46.  v0:= new `io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable`;
  #L413a4a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableMergeDelayErrorIterable;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L413a50.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413a56.  v1:= temp @kind object;
  #L413a58.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `mergeDelayError`(`org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Completable;.mergeDelayError:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L413a6c.  v0:= 2147483647I;
  #L413a72.  v1:= 1I;
  #L413a74.  call temp:= `b`(v2, v0, v1) @signature `Lio/reactivex/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @kind static;
  #L413a7a.  v2:= temp @kind object;
  #L413a7c.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `mergeDelayError`(`org.reactivestreams.Publisher` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/Completable;.mergeDelayError:(Lorg/reactivestreams/Publisher;I)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413a90.  v0:= 1I;
  #L413a92.  call temp:= `b`(v1, v2, v0) @signature `Lio/reactivex/Completable;.b:(Lorg/reactivestreams/Publisher;IZ)Lio/reactivex/Completable;` @kind static;
  #L413a98.  v1:= temp @kind object;
  #L413a9a.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `never`() @signature `Lio/reactivex/Completable;.never:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413ae4.  v0:= `@@io.reactivex.internal.operators.completable.CompletableNever.INSTANCE` @type ^`io.reactivex.Completable` @kind object;
  #L413ae8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413aee.  v0:= temp @kind object;
  #L413af0.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/reactivex/Completable;.timer:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413f18.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L413f1e.  v0:= temp @kind object;
  #L413f20.  call temp:= `timer`(v1, v3, v0) @signature `Lio/reactivex/Completable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @kind static;
  #L413f26.  v1:= temp @kind object;
  #L413f28.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `timer`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Completable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413f3c.  v0:= "unit is null" @kind object;
  #L413f40.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413f46.  v0:= "scheduler is null" @kind object;
  #L413f4a.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413f50.  v0:= new `io.reactivex.internal.operators.completable.CompletableTimer`;
  #L413f54.  call `<init>`(v0, v1, v3, v4) @signature `Lio/reactivex/internal/operators/completable/CompletableTimer;.<init>:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V` @kind direct;
  #L413f5a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413f60.  v1:= temp @kind object;
  #L413f62.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `unsafeCreate`(`io.reactivex.CompletableSource` v1 @kind object) @signature `Lio/reactivex/Completable;.unsafeCreate:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413f74.  v0:= "source is null" @kind object;
  #L413f78.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413f7e.  v0:= instanceof @variable v1 @type ^`io.reactivex.Completable` @kind boolean;
  #L413f82.  if v0 != 0 then goto L413f9a;
  #L413f86.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromUnsafeSource`;
  #L413f8a.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromUnsafeSource;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L413f90.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413f96.  v1:= temp @kind object;
  #L413f98.  return v1 @kind object;
  #L413f9a.  v1:= new `java.lang.IllegalArgumentException`;
  #L413f9e.  v0:= "Use of unsafeCreate(Completable)!" @kind object;
  #L413fa2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L413fa8.  throw v1;
}
procedure `io.reactivex.Completable` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Completable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L413fec.  v0:= 1I;
  #L413fee.  call temp:= `using`(v1, v2, v3, v0) @signature `Lio/reactivex/Completable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Completable;` @kind static;
  #L413ff4.  v1:= temp @kind object;
  #L413ff6.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `using`(`java.util.concurrent.Callable` v1 @kind object, `io.reactivex.functions.Function` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/Completable;.using:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L414008.  v0:= "resourceSupplier is null" @kind object;
  #L41400c.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L414012.  v0:= "completableFunction is null" @kind object;
  #L414016.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41401c.  v0:= "disposer is null" @kind object;
  #L414020.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L414026.  v0:= new `io.reactivex.internal.operators.completable.CompletableUsing`;
  #L41402a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/internal/operators/completable/CompletableUsing;.<init>:(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Z)V` @kind direct;
  #L414030.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L414036.  v1:= temp @kind object;
  #L414038.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `wrap`(`io.reactivex.CompletableSource` v1 @kind object) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41404c.  v0:= "source is null" @kind object;
  #L414050.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L414056.  v0:= instanceof @variable v1 @type ^`io.reactivex.Completable` @kind boolean;
  #L41405a.  if v0 == 0 then goto L41406c;
  #L41405e.  v1:= (`io.reactivex.Completable`) v1 @kind object;
  #L414062.  call temp:= `onAssembly`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L414068.  v1:= temp @kind object;
  #L41406a.  return v1 @kind object;
  #L41406c.  v0:= new `io.reactivex.internal.operators.completable.CompletableFromUnsafeSource`;
  #L414070.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableFromUnsafeSource;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L414076.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L41407c.  v1:= temp @kind object;
  #L41407e.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `ambWith`(`io.reactivex.Completable` v2 @kind this, `io.reactivex.CompletableSource` v3 @kind object) @signature `Lio/reactivex/Completable;.ambWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4131a4.  v0:= "other is null" @kind object;
  #L4131a8.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4131ae.  v0:= 2I;
  #L4131b0.  v0:= new `io.reactivex.CompletableSource`[v0];
  #L4131b4.  v1:= 0I;
  #L4131b6.  v0[v1]:= v2 @kind object;
  #L4131ba.  v1:= 1I;
  #L4131bc.  v0[v1]:= v3 @kind object;
  #L4131c0.  call temp:= `ambArray`(v0) @signature `Lio/reactivex/Completable;.ambArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L4131c6.  v3:= temp @kind object;
  #L4131c8.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `andThen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4131dc.  v0:= "next is null" @kind object;
  #L4131e0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4131e6.  v0:= new `io.reactivex.internal.operators.completable.CompletableAndThenCompletable`;
  #L4131ea.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableAndThenCompletable;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L4131f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L4131f6.  v2:= temp @kind object;
  #L4131f8.  return v2 @kind object;
}
procedure `io.reactivex.Flowable` `andThen`(`io.reactivex.Completable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4140a8.  v0:= "next is null" @kind object;
  #L4140ac.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4140b2.  v0:= new `io.reactivex.internal.operators.mixed.CompletableAndThenPublisher`;
  #L4140b6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/mixed/CompletableAndThenPublisher;.<init>:(Lio/reactivex/CompletableSource;Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L4140bc.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L4140c2.  v2:= temp @kind object;
  #L4140c4.  return v2 @kind object;
}
procedure `io.reactivex.Maybe` `andThen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.MaybeSource` v2 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lio/reactivex/MaybeSource;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L414140.  v0:= "next is null" @kind object;
  #L414144.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41414a.  v0:= new `io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable`;
  #L41414e.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayWithCompletable;.<init>:(Lio/reactivex/MaybeSource;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L414154.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L41415a.  v2:= temp @kind object;
  #L41415c.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `andThen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.ObservableSource` v2 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4141ac.  v0:= "next is null" @kind object;
  #L4141b0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4141b6.  v0:= new `io.reactivex.internal.operators.mixed.CompletableAndThenObservable`;
  #L4141ba.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/mixed/CompletableAndThenObservable;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/ObservableSource;)V` @kind direct;
  #L4141c0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L4141c6.  v2:= temp @kind object;
  #L4141c8.  return v2 @kind object;
}
procedure `io.reactivex.Single` `andThen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.SingleSource` v2 @kind object) @signature `Lio/reactivex/Completable;.andThen:(Lio/reactivex/SingleSource;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L414244.  v0:= "next is null" @kind object;
  #L414248.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41424e.  v0:= new `io.reactivex.internal.operators.single.SingleDelayWithCompletable`;
  #L414252.  call `<init>`(v0, v2, v1) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithCompletable;.<init>:(Lio/reactivex/SingleSource;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L414258.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L41425e.  v2:= temp @kind object;
  #L414260.  return v2 @kind object;
}
procedure `java.lang.Object` `as`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableConverter` v2 @kind object) @signature `Lio/reactivex/Completable;.as:(Lio/reactivex/CompletableConverter;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4143f8.  v0:= "converter is null" @kind object;
  #L4143fc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L414402.  v2:= temp @kind object;
  #L414404.  v2:= (`io.reactivex.CompletableConverter`) v2 @kind object;
  #L414408.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/CompletableConverter;.apply:(Lio/reactivex/Completable;)Ljava/lang/Object;` @kind interface;
  #L41440e.  v2:= temp @kind object;
  #L414410.  return v2 @kind object;
}
procedure `void` `blockingAwait`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.blockingAwait:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4144e4.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L4144e8.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L4144ee.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L4144f4.  call temp:= `blockingGet`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingGet:()Ljava/lang/Object;` @kind virtual;
  #L4144fa.  return @kind void;
}
procedure `boolean` `blockingAwait`(`io.reactivex.Completable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Completable;.blockingAwait:(JLjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4130e8.  v0:= "unit is null" @kind object;
  #L4130ec.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4130f2.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L4130f6.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L4130fc.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L413102.  call temp:= `blockingAwait`(v0, v2, v4) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingAwait:(JLjava/util/concurrent/TimeUnit;)Z` @kind virtual;
  #L413108.  v2:= temp;
  #L41310a.  return v2;
}
procedure `java.lang.Throwable` `blockingGet`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.blockingGet:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41446c.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L414470.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L414476.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L41447c.  call temp:= `blockingGetError`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingGetError:()Ljava/lang/Throwable;` @kind virtual;
  #L414482.  v0:= temp @kind object;
  #L414484.  return v0 @kind object;
}
procedure `java.lang.Throwable` `blockingGet`(`io.reactivex.Completable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Completable;.blockingGet:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L414498.  v0:= "unit is null" @kind object;
  #L41449c.  call temp:= `requireNonNull`(v4, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4144a2.  v0:= new `io.reactivex.internal.observers.BlockingMultiObserver`;
  #L4144a6.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.<init>:()V` @kind direct;
  #L4144ac.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L4144b2.  call temp:= `blockingGetError`(v0, v2, v4) @signature `Lio/reactivex/internal/observers/BlockingMultiObserver;.blockingGetError:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Throwable;` @kind virtual;
  #L4144b8.  v2:= temp @kind object;
  #L4144ba.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `cache`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.cache:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41320c.  v0:= new `io.reactivex.internal.operators.completable.CompletableCache`;
  #L413210.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableCache;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L413216.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L41321c.  v0:= temp @kind object;
  #L41321e.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `compose`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableTransformer` v2 @kind object) @signature `Lio/reactivex/Completable;.compose:(Lio/reactivex/CompletableTransformer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413250.  v0:= "transformer is null" @kind object;
  #L413254.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41325a.  v2:= temp @kind object;
  #L41325c.  v2:= (`io.reactivex.CompletableTransformer`) v2 @kind object;
  #L413260.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/CompletableTransformer;.apply:(Lio/reactivex/Completable;)Lio/reactivex/CompletableSource;` @kind interface;
  #L413266.  v2:= temp @kind object;
  #L413268.  call temp:= `wrap`(v2) @signature `Lio/reactivex/Completable;.wrap:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L41326e.  v2:= temp @kind object;
  #L413270.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `concatWith`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/Completable;.concatWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413360.  v0:= "other is null" @kind object;
  #L413364.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41336a.  v0:= new `io.reactivex.internal.operators.completable.CompletableAndThenCompletable`;
  #L41336e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableAndThenCompletable;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L413374.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L41337a.  v2:= temp @kind object;
  #L41337c.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `delay`(`io.reactivex.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4133f0.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L4133f6.  v4:= temp @kind object;
  #L4133f8.  v5:= 0I;
  #L4133fa.  v0:= v6 @kind object;
  #L4133fc.  v1:= v7 @kind wide;
  #L4133fe.  v3:= v9 @kind object;
  #L413400.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Completable;` @kind virtual;
  #L413406.  v7:= temp @kind object;
  #L413408.  return v7 @kind object;
}
procedure `io.reactivex.Completable` `delay`(`io.reactivex.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41341c.  v5:= 0I;
  #L41341e.  v0:= v6 @kind object;
  #L413420.  v1:= v7 @kind wide;
  #L413422.  v3:= v9 @kind object;
  #L413424.  v4:= v10 @kind object;
  #L413426.  call temp:= `delay`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Completable;` @kind virtual;
  #L41342c.  v7:= temp @kind object;
  #L41342e.  return v7 @kind object;
}
procedure `io.reactivex.Completable` `delay`(`io.reactivex.Completable` v8 @kind this, `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object, `io.reactivex.Scheduler` v12 @kind object, `boolean` v13 ) @signature `Lio/reactivex/Completable;.delay:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L413440.  v0:= "unit is null" @kind object;
  #L413444.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41344a.  v0:= "scheduler is null" @kind object;
  #L41344e.  call temp:= `requireNonNull`(v12, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413454.  v0:= new `io.reactivex.internal.operators.completable.CompletableDelay`;
  #L413458.  v1:= v0 @kind object;
  #L41345a.  v2:= v8 @kind object;
  #L41345c.  v3:= v9 @kind wide;
  #L41345e.  v5:= v11 @kind object;
  #L413460.  v6:= v12 @kind object;
  #L413462.  v7:= v13;
  #L413464.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/completable/CompletableDelay;.<init>:(Lio/reactivex/CompletableSource;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V` @kind direct;
  #L41346a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413470.  v9:= temp @kind object;
  #L413472.  return v9 @kind object;
}
procedure `io.reactivex.Completable` `delaySubscription`(`io.reactivex.Completable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/Completable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413484.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L41348a.  v0:= temp @kind object;
  #L41348c.  call temp:= `delaySubscription`(v1, v2, v4, v0) @signature `Lio/reactivex/Completable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @kind virtual;
  #L413492.  v2:= temp @kind object;
  #L413494.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `delaySubscription`(`io.reactivex.Completable` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `io.reactivex.Scheduler` v4 @kind object) @signature `Lio/reactivex/Completable;.delaySubscription:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4134a8.  call temp:= `timer`(v1, v3, v4) @signature `Lio/reactivex/Completable;.timer:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @kind static;
  #L4134ae.  v1:= temp @kind object;
  #L4134b0.  call temp:= `andThen`(v1, v0) @signature `Lio/reactivex/Completable;.andThen:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind virtual;
  #L4134b6.  v1:= temp @kind object;
  #L4134b8.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `doAfterTerminate`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Action` v8 @kind object) @signature `Lio/reactivex/Completable;.doAfterTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4134cc.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L4134d2.  v1:= temp @kind object;
  #L4134d4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L4134da.  v2:= temp @kind object;
  #L4134dc.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L4134e0.  v0:= v7 @kind object;
  #L4134e2.  v3:= v6 @kind object;
  #L4134e4.  v4:= v6 @kind object;
  #L4134e6.  v5:= v8 @kind object;
  #L4134e8.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L4134ee.  v8:= temp @kind object;
  #L4134f0.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doFinally`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Completable;.doFinally:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413504.  v0:= "onFinally is null" @kind object;
  #L413508.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41350e.  v0:= new `io.reactivex.internal.operators.completable.CompletableDoFinally`;
  #L413512.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableDoFinally;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Action;)V` @kind direct;
  #L413518.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L41351e.  v2:= temp @kind object;
  #L413520.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `doOnComplete`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Action` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnComplete:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L413534.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L41353a.  v1:= temp @kind object;
  #L41353c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L413542.  v2:= temp @kind object;
  #L413544.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L413548.  v0:= v7 @kind object;
  #L41354a.  v3:= v8 @kind object;
  #L41354c.  v4:= v6 @kind object;
  #L41354e.  v5:= v6 @kind object;
  #L413550.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L413556.  v8:= temp @kind object;
  #L413558.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doOnDispose`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Action` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnDispose:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41356c.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L413572.  v1:= temp @kind object;
  #L413574.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L41357a.  v2:= temp @kind object;
  #L41357c.  v5:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L413580.  v0:= v7 @kind object;
  #L413582.  v3:= v5 @kind object;
  #L413584.  v4:= v5 @kind object;
  #L413586.  v6:= v8 @kind object;
  #L413588.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L41358e.  v8:= temp @kind object;
  #L413590.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doOnError`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Consumer` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnError:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4135a4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L4135aa.  v1:= temp @kind object;
  #L4135ac.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L4135b0.  v0:= v7 @kind object;
  #L4135b2.  v2:= v8 @kind object;
  #L4135b4.  v3:= v6 @kind object;
  #L4135b6.  v4:= v6 @kind object;
  #L4135b8.  v5:= v6 @kind object;
  #L4135ba.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L4135c0.  v8:= temp @kind object;
  #L4135c2.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doOnEvent`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Consumer` v2 @kind object) @signature `Lio/reactivex/Completable;.doOnEvent:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4135d4.  v0:= "onEvent is null" @kind object;
  #L4135d8.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4135de.  v0:= new `io.reactivex.internal.operators.completable.CompletableDoOnEvent`;
  #L4135e2.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableDoOnEvent;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Consumer;)V` @kind direct;
  #L4135e8.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L4135ee.  v2:= temp @kind object;
  #L4135f0.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `doOnSubscribe`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Consumer` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnSubscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L413674.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L41367a.  v2:= temp @kind object;
  #L41367c.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L413680.  v0:= v7 @kind object;
  #L413682.  v1:= v8 @kind object;
  #L413684.  v3:= v6 @kind object;
  #L413686.  v4:= v6 @kind object;
  #L413688.  v5:= v6 @kind object;
  #L41368a.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L413690.  v8:= temp @kind object;
  #L413692.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `doOnTerminate`(`io.reactivex.Completable` v7 @kind this, `io.reactivex.functions.Action` v8 @kind object) @signature `Lio/reactivex/Completable;.doOnTerminate:(Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4136a4.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L4136aa.  v1:= temp @kind object;
  #L4136ac.  call temp:= `emptyConsumer`() @signature `Lio/reactivex/internal/functions/Functions;.emptyConsumer:()Lio/reactivex/functions/Consumer;` @kind static;
  #L4136b2.  v2:= temp @kind object;
  #L4136b4.  v6:= `@@io.reactivex.internal.functions.Functions.EMPTY_ACTION` @type ^`io.reactivex.functions.Action` @kind object;
  #L4136b8.  v0:= v7 @kind object;
  #L4136ba.  v3:= v6 @kind object;
  #L4136bc.  v4:= v8 @kind object;
  #L4136be.  v5:= v6 @kind object;
  #L4136c0.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/Completable;.a:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)Lio/reactivex/Completable;` @kind direct;
  #L4136c6.  v8:= temp @kind object;
  #L4136c8.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `hide`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.hide:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4138b8.  v0:= new `io.reactivex.internal.operators.completable.CompletableHide`;
  #L4138bc.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableHide;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L4138c2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L4138c8.  v0:= temp @kind object;
  #L4138ca.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `lift`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableOperator` v2 @kind object) @signature `Lio/reactivex/Completable;.lift:(Lio/reactivex/CompletableOperator;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4138dc.  v0:= "onLift is null" @kind object;
  #L4138e0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4138e6.  v0:= new `io.reactivex.internal.operators.completable.CompletableLift`;
  #L4138ea.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableLift;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/CompletableOperator;)V` @kind direct;
  #L4138f0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L4138f6.  v2:= temp @kind object;
  #L4138f8.  return v2 @kind object;
}
procedure `io.reactivex.Single` `materialize`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.materialize:()Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L414274.  v0:= new `io.reactivex.internal.operators.completable.CompletableMaterialize`;
  #L414278.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableMaterialize;.<init>:(Lio/reactivex/Completable;)V` @kind direct;
  #L41427e.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L414284.  v0:= temp @kind object;
  #L414286.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `mergeWith`(`io.reactivex.Completable` v2 @kind this, `io.reactivex.CompletableSource` v3 @kind object) @signature `Lio/reactivex/Completable;.mergeWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L413aac.  v0:= "other is null" @kind object;
  #L413ab0.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413ab6.  v0:= 2I;
  #L413ab8.  v0:= new `io.reactivex.CompletableSource`[v0];
  #L413abc.  v1:= 0I;
  #L413abe.  v0[v1]:= v2 @kind object;
  #L413ac2.  v1:= 1I;
  #L413ac4.  v0[v1]:= v3 @kind object;
  #L413ac8.  call temp:= `mergeArray`(v0) @signature `Lio/reactivex/Completable;.mergeArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L413ace.  v3:= temp @kind object;
  #L413ad0.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `observeOn`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Completable;.observeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413b04.  v0:= "scheduler is null" @kind object;
  #L413b08.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413b0e.  v0:= new `io.reactivex.internal.operators.completable.CompletableObserveOn`;
  #L413b12.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableObserveOn;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L413b18.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413b1e.  v2:= temp @kind object;
  #L413b20.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `onErrorComplete`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.onErrorComplete:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413b34.  call temp:= `alwaysTrue`() @signature `Lio/reactivex/internal/functions/Functions;.alwaysTrue:()Lio/reactivex/functions/Predicate;` @kind static;
  #L413b3a.  v0:= temp @kind object;
  #L413b3c.  call temp:= `onErrorComplete`(v1, v0) @signature `Lio/reactivex/Completable;.onErrorComplete:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Completable;` @kind virtual;
  #L413b42.  v0:= temp @kind object;
  #L413b44.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `onErrorComplete`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Completable;.onErrorComplete:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413b58.  v0:= "predicate is null" @kind object;
  #L413b5c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413b62.  v0:= new `io.reactivex.internal.operators.completable.CompletableOnErrorComplete`;
  #L413b66.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableOnErrorComplete;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Predicate;)V` @kind direct;
  #L413b6c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413b72.  v2:= temp @kind object;
  #L413b74.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `onErrorResumeNext`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Completable;.onErrorResumeNext:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413b88.  v0:= "errorMapper is null" @kind object;
  #L413b8c.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413b92.  v0:= new `io.reactivex.internal.operators.completable.CompletableResumeNext`;
  #L413b96.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Function;)V` @kind direct;
  #L413b9c.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413ba2.  v2:= temp @kind object;
  #L413ba4.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `onTerminateDetach`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.onTerminateDetach:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413bb8.  v0:= new `io.reactivex.internal.operators.completable.CompletableDetach`;
  #L413bbc.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableDetach;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L413bc2.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413bc8.  v0:= temp @kind object;
  #L413bca.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `repeat`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.repeat:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413bdc.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L413be2.  v0:= temp @kind object;
  #L413be4.  call temp:= `repeat`(v0) @signature `Lio/reactivex/Flowable;.repeat:()Lio/reactivex/Flowable;` @kind virtual;
  #L413bea.  v0:= temp @kind object;
  #L413bec.  call temp:= `fromPublisher`(v0) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L413bf2.  v0:= temp @kind object;
  #L413bf4.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `repeat`(`io.reactivex.Completable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Completable;.repeat:(J)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413c08.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L413c0e.  v0:= temp @kind object;
  #L413c10.  call temp:= `repeat`(v0, v2) @signature `Lio/reactivex/Flowable;.repeat:(J)Lio/reactivex/Flowable;` @kind virtual;
  #L413c16.  v2:= temp @kind object;
  #L413c18.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L413c1e.  v2:= temp @kind object;
  #L413c20.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `repeatUntil`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.BooleanSupplier` v2 @kind object) @signature `Lio/reactivex/Completable;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413c34.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L413c3a.  v0:= temp @kind object;
  #L413c3c.  call temp:= `repeatUntil`(v0, v2) @signature `Lio/reactivex/Flowable;.repeatUntil:(Lio/reactivex/functions/BooleanSupplier;)Lio/reactivex/Flowable;` @kind virtual;
  #L413c42.  v2:= temp @kind object;
  #L413c44.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L413c4a.  v2:= temp @kind object;
  #L413c4c.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `repeatWhen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Completable;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413c60.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L413c66.  v0:= temp @kind object;
  #L413c68.  call temp:= `repeatWhen`(v0, v2) @signature `Lio/reactivex/Flowable;.repeatWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L413c6e.  v2:= temp @kind object;
  #L413c70.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L413c76.  v2:= temp @kind object;
  #L413c78.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `retry`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.retry:()Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413c8c.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L413c92.  v0:= temp @kind object;
  #L413c94.  call temp:= `retry`(v0) @signature `Lio/reactivex/Flowable;.retry:()Lio/reactivex/Flowable;` @kind virtual;
  #L413c9a.  v0:= temp @kind object;
  #L413c9c.  call temp:= `fromPublisher`(v0) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L413ca2.  v0:= temp @kind object;
  #L413ca4.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `retry`(`io.reactivex.Completable` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/Completable;.retry:(J)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413d10.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L413d16.  v0:= temp @kind object;
  #L413d18.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(J)Lio/reactivex/Flowable;` @kind virtual;
  #L413d1e.  v2:= temp @kind object;
  #L413d20.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L413d26.  v2:= temp @kind object;
  #L413d28.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `retry`(`io.reactivex.Completable` v1 @kind this, `long` v2 , `io.reactivex.functions.Predicate` v4 @kind object) @signature `Lio/reactivex/Completable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413d3c.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L413d42.  v0:= temp @kind object;
  #L413d44.  call temp:= `retry`(v0, v2, v4) @signature `Lio/reactivex/Flowable;.retry:(JLio/reactivex/functions/Predicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L413d4a.  v2:= temp @kind object;
  #L413d4c.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L413d52.  v2:= temp @kind object;
  #L413d54.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `retry`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.BiPredicate` v2 @kind object) @signature `Lio/reactivex/Completable;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413cb8.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L413cbe.  v0:= temp @kind object;
  #L413cc0.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L413cc6.  v2:= temp @kind object;
  #L413cc8.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L413cce.  v2:= temp @kind object;
  #L413cd0.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `retry`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Predicate` v2 @kind object) @signature `Lio/reactivex/Completable;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413ce4.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L413cea.  v0:= temp @kind object;
  #L413cec.  call temp:= `retry`(v0, v2) @signature `Lio/reactivex/Flowable;.retry:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Flowable;` @kind virtual;
  #L413cf2.  v2:= temp @kind object;
  #L413cf4.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L413cfa.  v2:= temp @kind object;
  #L413cfc.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `retryWhen`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Completable;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413d68.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L413d6e.  v0:= temp @kind object;
  #L413d70.  call temp:= `retryWhen`(v0, v2) @signature `Lio/reactivex/Flowable;.retryWhen:(Lio/reactivex/functions/Function;)Lio/reactivex/Flowable;` @kind virtual;
  #L413d76.  v2:= temp @kind object;
  #L413d78.  call temp:= `fromPublisher`(v2) @signature `Lio/reactivex/Completable;.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Completable;` @kind static;
  #L413d7e.  v2:= temp @kind object;
  #L413d80.  return v2 @kind object;
}
procedure `io.reactivex.Completable` `startWith`(`io.reactivex.Completable` v2 @kind this, `io.reactivex.CompletableSource` v3 @kind object) @signature `Lio/reactivex/Completable;.startWith:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L413d94.  v0:= "other is null" @kind object;
  #L413d98.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413d9e.  v0:= 2I;
  #L413da0.  v0:= new `io.reactivex.CompletableSource`[v0];
  #L413da4.  v1:= 0I;
  #L413da6.  v0[v1]:= v3 @kind object;
  #L413daa.  v3:= 1I;
  #L413dac.  v0[v3]:= v2 @kind object;
  #L413db0.  call temp:= `concatArray`(v0) @signature `Lio/reactivex/Completable;.concatArray:([Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind static;
  #L413db6.  v3:= temp @kind object;
  #L413db8.  return v3 @kind object;
}
procedure `io.reactivex.Flowable` `startWith`(`io.reactivex.Completable` v1 @kind this, `org.reactivestreams.Publisher` v2 @kind object) @signature `Lio/reactivex/Completable;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4140d8.  v0:= "other is null" @kind object;
  #L4140dc.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4140e2.  call temp:= `toFlowable`(v1) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @kind virtual;
  #L4140e8.  v0:= temp @kind object;
  #L4140ea.  call temp:= `startWith`(v0, v2) @signature `Lio/reactivex/Flowable;.startWith:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;` @kind virtual;
  #L4140f0.  v2:= temp @kind object;
  #L4140f2.  return v2 @kind object;
}
procedure `io.reactivex.Observable` `startWith`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.Observable` v2 @kind object) @signature `Lio/reactivex/Completable;.startWith:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4141dc.  v0:= "other is null" @kind object;
  #L4141e0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4141e6.  call temp:= `toObservable`(v1) @signature `Lio/reactivex/Completable;.toObservable:()Lio/reactivex/Observable;` @kind virtual;
  #L4141ec.  v0:= temp @kind object;
  #L4141ee.  call temp:= `concatWith`(v2, v0) @signature `Lio/reactivex/Observable;.concatWith:(Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;` @kind virtual;
  #L4141f4.  v2:= temp @kind object;
  #L4141f6.  return v2 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.subscribe:()Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4142f8.  v0:= new `io.reactivex.internal.observers.EmptyCompletableObserver`;
  #L4142fc.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/EmptyCompletableObserver;.<init>:()V` @kind direct;
  #L414302.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L414308.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/functions/Action;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41431c.  v0:= "onComplete is null" @kind object;
  #L414320.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L414326.  v0:= new `io.reactivex.internal.observers.CallbackCompletableObserver`;
  #L41432a.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.<init>:(Lio/reactivex/functions/Action;)V` @kind direct;
  #L414330.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L414336.  return v0 @kind object;
}
procedure `io.reactivex.disposables.Disposable` `subscribe`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Action` v2 @kind object, `io.reactivex.functions.Consumer` v3 @kind object) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/functions/Action;Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L414348.  v0:= "onError is null" @kind object;
  #L41434c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L414352.  v0:= "onComplete is null" @kind object;
  #L414356.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41435c.  v0:= new `io.reactivex.internal.observers.CallbackCompletableObserver`;
  #L414360.  call `<init>`(v0, v3, v2) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.<init>:(Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Action;)V` @kind direct;
  #L414366.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L41436c.  return v0 @kind object;
}
procedure `void` `subscribe`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableObserver` v2 @kind object) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41450c.  v0:= "observer is null" @kind object;
  #L414510.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L414516.  call temp:= `onSubscribe`(v1, v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Completable;Lio/reactivex/CompletableObserver;)Lio/reactivex/CompletableObserver;` @kind static;
  #L41451c.  v2:= temp @kind object;
  #L41451e.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null CompletableObserver. Please check the handler provided to RxJavaPlugins.setOnCompletableSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L414522.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L414528.  call `subscribeActual`(v1, v2) @signature `Lio/reactivex/Completable;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L41452e.  return @kind void;
  #L414530.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L414532.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L414538.  call `onError`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L41453e.  call temp:= `d`(v2) @signature `Lio/reactivex/Completable;.d:(Ljava/lang/Throwable;)Ljava/lang/NullPointerException;` @kind static;
  #L414544.  v2:= temp @kind object;
  #L414546.  throw v2;
  #L414548.  v2:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L41454a.  throw v2;
  catch `java.lang.NullPointerException` @[L414516..L41452e] goto L414548;
  catch `java.lang.Throwable` @[L414516..L41452e] goto L414530;
}
procedure `void` `subscribeActual`(`io.reactivex.CompletableObserver` v0 @kind object) @signature `Lio/reactivex/Completable;.subscribeActual:(Lio/reactivex/CompletableObserver;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.Completable` `subscribeOn`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Completable;.subscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413dcc.  v0:= "scheduler is null" @kind object;
  #L413dd0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413dd6.  v0:= new `io.reactivex.internal.operators.completable.CompletableSubscribeOn`;
  #L413dda.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableSubscribeOn;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L413de0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413de6.  v2:= temp @kind object;
  #L413de8.  return v2 @kind object;
}
procedure `io.reactivex.CompletableObserver` `subscribeWith`(`io.reactivex.Completable` v0 @kind this, `io.reactivex.CompletableObserver` v1 @kind object) @signature `Lio/reactivex/Completable;.subscribeWith:(Lio/reactivex/CompletableObserver;)Lio/reactivex/CompletableObserver;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L414090.  call `subscribe`(v0, v1) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L414096.  return v1 @kind object;
}
procedure `io.reactivex.Completable` `takeUntil`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.CompletableSource` v2 @kind object) @signature `Lio/reactivex/Completable;.takeUntil:(Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413dfc.  v0:= "other is null" @kind object;
  #L413e00.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413e06.  v0:= new `io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable`;
  #L413e0a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableTakeUntilCompletable;.<init>:(Lio/reactivex/Completable;Lio/reactivex/CompletableSource;)V` @kind direct;
  #L413e10.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413e16.  v2:= temp @kind object;
  #L413e18.  return v2 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.test:()Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L414380.  v0:= new `io.reactivex.observers.TestObserver`;
  #L414384.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L41438a.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L414390.  return v0 @kind object;
}
procedure `io.reactivex.observers.TestObserver` `test`(`io.reactivex.Completable` v1 @kind this, `boolean` v2 ) @signature `Lio/reactivex/Completable;.test:(Z)Lio/reactivex/observers/TestObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4143a4.  v0:= new `io.reactivex.observers.TestObserver`;
  #L4143a8.  call `<init>`(v0) @signature `Lio/reactivex/observers/TestObserver;.<init>:()V` @kind direct;
  #L4143ae.  if v2 == 0 then goto L4143b8;
  #L4143b2.  call `cancel`(v0) @signature `Lio/reactivex/observers/TestObserver;.cancel:()V` @kind virtual;
  #L4143b8.  call `subscribe`(v1, v0) @signature `Lio/reactivex/Completable;.subscribe:(Lio/reactivex/CompletableObserver;)V` @kind virtual;
  #L4143be.  return v0 @kind object;
}
procedure `io.reactivex.Completable` `timeout`(`io.reactivex.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lio/reactivex/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L413e2c.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L413e32.  v4:= temp @kind object;
  #L413e34.  v5:= 0I;
  #L413e36.  v0:= v6 @kind object;
  #L413e38.  v1:= v7 @kind wide;
  #L413e3a.  v3:= v9 @kind object;
  #L413e3c.  call temp:= `c`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind direct;
  #L413e42.  v7:= temp @kind object;
  #L413e44.  return v7 @kind object;
}
procedure `io.reactivex.Completable` `timeout`(`io.reactivex.Completable` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `io.reactivex.CompletableSource` v11 @kind object) @signature `Lio/reactivex/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L413e58.  v0:= "other is null" @kind object;
  #L413e5c.  call temp:= `requireNonNull`(v11, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413e62.  call temp:= `computation`() @signature `Lio/reactivex/schedulers/Schedulers;.computation:()Lio/reactivex/Scheduler;` @kind static;
  #L413e68.  v5:= temp @kind object;
  #L413e6a.  v1:= v7 @kind object;
  #L413e6c.  v2:= v8 @kind wide;
  #L413e6e.  v4:= v10 @kind object;
  #L413e70.  v6:= v11 @kind object;
  #L413e72.  call temp:= `c`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind direct;
  #L413e78.  v8:= temp @kind object;
  #L413e7a.  return v8 @kind object;
}
procedure `io.reactivex.Completable` `timeout`(`io.reactivex.Completable` v6 @kind this, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `io.reactivex.Scheduler` v10 @kind object) @signature `Lio/reactivex/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L413e8c.  v5:= 0I;
  #L413e8e.  v0:= v6 @kind object;
  #L413e90.  v1:= v7 @kind wide;
  #L413e92.  v3:= v9 @kind object;
  #L413e94.  v4:= v10 @kind object;
  #L413e96.  call temp:= `c`(v0, v1, v3, v4, v5) @signature `Lio/reactivex/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind direct;
  #L413e9c.  v7:= temp @kind object;
  #L413e9e.  return v7 @kind object;
}
procedure `io.reactivex.Completable` `timeout`(`io.reactivex.Completable` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.Scheduler` v5 @kind object, `io.reactivex.CompletableSource` v6 @kind object) @signature `Lio/reactivex/Completable;.timeout:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413eb0.  v0:= "other is null" @kind object;
  #L413eb4.  call temp:= `requireNonNull`(v6, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413eba.  call temp:= `c`(v1, v2, v4, v5, v6) @signature `Lio/reactivex/Completable;.c:(JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Lio/reactivex/CompletableSource;)Lio/reactivex/Completable;` @kind direct;
  #L413ec0.  v2:= temp @kind object;
  #L413ec2.  return v2 @kind object;
}
procedure `java.lang.Object` `to`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.functions.Function` v2 @kind object) @signature `Lio/reactivex/Completable;.to:(Lio/reactivex/functions/Function;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L414424.  v0:= "converter is null" @kind object;
  #L414428.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41442e.  v2:= temp @kind object;
  #L414430.  v2:= (`io.reactivex.functions.Function`) v2 @kind object;
  #L414434.  call temp:= `apply`(v2, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L41443a.  v2:= temp @kind object;
  #L41443c.  return v2 @kind object;
  #L41443e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L414440.  call `throwIfFatal`(v2) @signature `Lio/reactivex/exceptions/Exceptions;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L414446.  call temp:= `wrapOrThrow`(v2) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L41444c.  v2:= temp @kind object;
  #L41444e.  throw v2;
  catch `java.lang.Throwable` @[L414424..L41443c] goto L41443e;
}
procedure `io.reactivex.Flowable` `toFlowable`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.toFlowable:()Lio/reactivex/Flowable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L414104.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToFlowable` @kind boolean;
  #L414108.  if v0 == 0 then goto L41411c;
  #L41410c.  v0:= v1 @kind object;
  #L41410e.  v0:= (`io.reactivex.internal.fuseable.FuseToFlowable`) v0 @kind object;
  #L414112.  call temp:= `fuseToFlowable`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToFlowable;.fuseToFlowable:()Lio/reactivex/Flowable;` @kind interface;
  #L414118.  v0:= temp @kind object;
  #L41411a.  return v0 @kind object;
  #L41411c.  v0:= new `io.reactivex.internal.operators.completable.CompletableToFlowable`;
  #L414120.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableToFlowable;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L414126.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @kind static;
  #L41412c.  v0:= temp @kind object;
  #L41412e.  return v0 @kind object;
}
procedure `io.reactivex.Maybe` `toMaybe`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.toMaybe:()Lio/reactivex/Maybe;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L414170.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToMaybe` @kind boolean;
  #L414174.  if v0 == 0 then goto L414188;
  #L414178.  v0:= v1 @kind object;
  #L41417a.  v0:= (`io.reactivex.internal.fuseable.FuseToMaybe`) v0 @kind object;
  #L41417e.  call temp:= `fuseToMaybe`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToMaybe;.fuseToMaybe:()Lio/reactivex/Maybe;` @kind interface;
  #L414184.  v0:= temp @kind object;
  #L414186.  return v0 @kind object;
  #L414188.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFromCompletable`;
  #L41418c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeFromCompletable;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L414192.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @kind static;
  #L414198.  v0:= temp @kind object;
  #L41419a.  return v0 @kind object;
}
procedure `io.reactivex.Observable` `toObservable`(`io.reactivex.Completable` v1 @kind this) @signature `Lio/reactivex/Completable;.toObservable:()Lio/reactivex/Observable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L414208.  v0:= instanceof @variable v1 @type ^`io.reactivex.internal.fuseable.FuseToObservable` @kind boolean;
  #L41420c.  if v0 == 0 then goto L414220;
  #L414210.  v0:= v1 @kind object;
  #L414212.  v0:= (`io.reactivex.internal.fuseable.FuseToObservable`) v0 @kind object;
  #L414216.  call temp:= `fuseToObservable`(v0) @signature `Lio/reactivex/internal/fuseable/FuseToObservable;.fuseToObservable:()Lio/reactivex/Observable;` @kind interface;
  #L41421c.  v0:= temp @kind object;
  #L41421e.  return v0 @kind object;
  #L414220.  v0:= new `io.reactivex.internal.operators.completable.CompletableToObservable`;
  #L414224.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableToObservable;.<init>:(Lio/reactivex/CompletableSource;)V` @kind direct;
  #L41422a.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @kind static;
  #L414230.  v0:= temp @kind object;
  #L414232.  return v0 @kind object;
}
procedure `io.reactivex.Single` `toSingle`(`io.reactivex.Completable` v2 @kind this, `java.util.concurrent.Callable` v3 @kind object) @signature `Lio/reactivex/Completable;.toSingle:(Ljava/util/concurrent/Callable;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L414298.  v0:= "completionValueSupplier is null" @kind object;
  #L41429c.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4142a2.  v0:= new `io.reactivex.internal.operators.completable.CompletableToSingle`;
  #L4142a6.  v1:= 0I;
  #L4142a8.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle;.<init>:(Lio/reactivex/CompletableSource;Ljava/util/concurrent/Callable;Ljava/lang/Object;)V` @kind direct;
  #L4142ae.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4142b4.  v3:= temp @kind object;
  #L4142b6.  return v3 @kind object;
}
procedure `io.reactivex.Single` `toSingleDefault`(`io.reactivex.Completable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/Completable;.toSingleDefault:(Ljava/lang/Object;)Lio/reactivex/Single;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4142c8.  v0:= "completionValue is null" @kind object;
  #L4142cc.  call temp:= `requireNonNull`(v3, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4142d2.  v0:= new `io.reactivex.internal.operators.completable.CompletableToSingle`;
  #L4142d6.  v1:= 0I;
  #L4142d8.  call `<init>`(v0, v2, v1, v3) @signature `Lio/reactivex/internal/operators/completable/CompletableToSingle;.<init>:(Lio/reactivex/CompletableSource;Ljava/util/concurrent/Callable;Ljava/lang/Object;)V` @kind direct;
  #L4142de.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @kind static;
  #L4142e4.  v3:= temp @kind object;
  #L4142e6.  return v3 @kind object;
}
procedure `io.reactivex.Completable` `unsubscribeOn`(`io.reactivex.Completable` v1 @kind this, `io.reactivex.Scheduler` v2 @kind object) @signature `Lio/reactivex/Completable;.unsubscribeOn:(Lio/reactivex/Scheduler;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L413fbc.  v0:= "scheduler is null" @kind object;
  #L413fc0.  call temp:= `requireNonNull`(v2, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L413fc6.  v0:= new `io.reactivex.internal.operators.completable.CompletableDisposeOn`;
  #L413fca.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/completable/CompletableDisposeOn;.<init>:(Lio/reactivex/CompletableSource;Lio/reactivex/Scheduler;)V` @kind direct;
  #L413fd0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @kind static;
  #L413fd6.  v2:= temp @kind object;
  #L413fd8.  return v2 @kind object;
}
