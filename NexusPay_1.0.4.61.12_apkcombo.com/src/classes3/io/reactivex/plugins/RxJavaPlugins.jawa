record `io.reactivex.plugins.RxJavaPlugins` @kind class @AccessFlag PUBLIC_FINAL {
}
global `io.reactivex.functions.Consumer` `@@io.reactivex.plugins.RxJavaPlugins.a` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.b` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.c` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.d` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.e` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.f` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.g` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.h` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.i` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.j` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.k` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.l` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.m` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.n` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.o` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.p` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.q` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.Function` `@@io.reactivex.plugins.RxJavaPlugins.r` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.BiFunction` `@@io.reactivex.plugins.RxJavaPlugins.s` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.BiFunction` `@@io.reactivex.plugins.RxJavaPlugins.t` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.BiFunction` `@@io.reactivex.plugins.RxJavaPlugins.u` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.BiFunction` `@@io.reactivex.plugins.RxJavaPlugins.v` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.BiFunction` `@@io.reactivex.plugins.RxJavaPlugins.w` @AccessFlag STATIC_VOLATILE;
global `io.reactivex.functions.BooleanSupplier` `@@io.reactivex.plugins.RxJavaPlugins.x` @AccessFlag STATIC_VOLATILE;
global `boolean` `@@io.reactivex.plugins.RxJavaPlugins.y` @AccessFlag STATIC_VOLATILE;
global `boolean` `@@io.reactivex.plugins.RxJavaPlugins.z` @AccessFlag STATIC_VOLATILE;
procedure `void` `<init>`(`io.reactivex.plugins.RxJavaPlugins` v2 @kind this) @signature `Lio/reactivex/plugins/RxJavaPlugins;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L48fb00.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48fb06.  v0:= new `java.lang.IllegalStateException`;
  #L48fb0a.  v1:= "No instances!" @kind object;
  #L48fb0e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48fb14.  throw v0;
}
procedure `java.lang.Object` `a`(`io.reactivex.functions.BiFunction` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.a:(Lio/reactivex/functions/BiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L48fa3c.  call temp:= `apply`(v0, v1, v2) @signature `Lio/reactivex/functions/BiFunction;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L48fa42.  v0:= temp @kind object;
  #L48fa44.  return v0 @kind object;
  #L48fa46.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48fa48.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L48fa4e.  v0:= temp @kind object;
  #L48fa50.  throw v0;
  catch `java.lang.Throwable` @[L48fa3c..L48fa44] goto L48fa46;
}
procedure `java.lang.Object` `b`(`io.reactivex.functions.Function` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L48fa70.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/functions/Function;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L48fa76.  v0:= temp @kind object;
  #L48fa78.  return v0 @kind object;
  #L48fa7a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48fa7c.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L48fa82.  v0:= temp @kind object;
  #L48fa84.  throw v0;
  catch `java.lang.Throwable` @[L48fa70..L48fa78] goto L48fa7a;
}
procedure `io.reactivex.Scheduler` `c`(`io.reactivex.functions.Function` v0 @kind object, `java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.c:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag STATIC {
    temp;

  #L48f494.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f49a.  v0:= temp @kind object;
  #L48f49c.  v1:= "Scheduler Callable result can't be null" @kind object;
  #L48f4a0.  call temp:= `requireNonNull`(v0, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L48f4a6.  v0:= temp @kind object;
  #L48f4a8.  v0:= (`io.reactivex.Scheduler`) v0 @kind object;
  #L48f4ac.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `createComputationScheduler`(`java.util.concurrent.ThreadFactory` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.createComputationScheduler:(Ljava/util/concurrent/ThreadFactory;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L48f504.  v0:= new `io.reactivex.internal.schedulers.ComputationScheduler`;
  #L48f508.  v1:= "threadFactory is null" @kind object;
  #L48f50c.  call temp:= `requireNonNull`(v2, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L48f512.  v2:= temp @kind object;
  #L48f514.  v2:= (`java.util.concurrent.ThreadFactory`) v2 @kind object;
  #L48f518.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/schedulers/ComputationScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L48f51e.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `createIoScheduler`(`java.util.concurrent.ThreadFactory` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.createIoScheduler:(Ljava/util/concurrent/ThreadFactory;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L48f530.  v0:= new `io.reactivex.internal.schedulers.IoScheduler`;
  #L48f534.  v1:= "threadFactory is null" @kind object;
  #L48f538.  call temp:= `requireNonNull`(v2, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L48f53e.  v2:= temp @kind object;
  #L48f540.  v2:= (`java.util.concurrent.ThreadFactory`) v2 @kind object;
  #L48f544.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/schedulers/IoScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L48f54a.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `createNewThreadScheduler`(`java.util.concurrent.ThreadFactory` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.createNewThreadScheduler:(Ljava/util/concurrent/ThreadFactory;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L48f55c.  v0:= new `io.reactivex.internal.schedulers.NewThreadScheduler`;
  #L48f560.  v1:= "threadFactory is null" @kind object;
  #L48f564.  call temp:= `requireNonNull`(v2, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L48f56a.  v2:= temp @kind object;
  #L48f56c.  v2:= (`java.util.concurrent.ThreadFactory`) v2 @kind object;
  #L48f570.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/schedulers/NewThreadScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L48f576.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `createSingleScheduler`(`java.util.concurrent.ThreadFactory` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.createSingleScheduler:(Ljava/util/concurrent/ThreadFactory;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L48f588.  v0:= new `io.reactivex.internal.schedulers.SingleScheduler`;
  #L48f58c.  v1:= "threadFactory is null" @kind object;
  #L48f590.  call temp:= `requireNonNull`(v2, v1) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L48f596.  v2:= temp @kind object;
  #L48f598.  v2:= (`java.util.concurrent.ThreadFactory`) v2 @kind object;
  #L48f59c.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/schedulers/SingleScheduler;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L48f5a2.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `d`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.d:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag STATIC {
    temp;
    v0;

  #L48f4c0.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L48f4c6.  v1:= temp @kind object;
  #L48f4c8.  v0:= "Scheduler Callable result can't be null" @kind object;
  #L48f4cc.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L48f4d2.  v1:= temp @kind object;
  #L48f4d4.  v1:= (`io.reactivex.Scheduler`) v1 @kind object;
  #L48f4d8.  return v1 @kind object;
  #L48f4da.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48f4dc.  call temp:= `wrapOrThrow`(v1) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L48f4e2.  v1:= temp @kind object;
  #L48f4e4.  throw v1;
  catch `java.lang.Throwable` @[L48f4c0..L48f4d8] goto L48f4da;
}
procedure `boolean` `e`(`java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.e:(Ljava/lang/Throwable;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L48f2b8.  v0:= instanceof @variable v2 @type ^`io.reactivex.exceptions.OnErrorNotImplementedException` @kind boolean;
  #L48f2bc.  v1:= 1I;
  #L48f2be.  if v0 == 0 then goto L48f2c4;
  #L48f2c2.  return v1;
  #L48f2c4.  v0:= instanceof @variable v2 @type ^`io.reactivex.exceptions.MissingBackpressureException` @kind boolean;
  #L48f2c8.  if v0 == 0 then goto L48f2ce;
  #L48f2cc.  return v1;
  #L48f2ce.  v0:= instanceof @variable v2 @type ^`java.lang.IllegalStateException` @kind boolean;
  #L48f2d2.  if v0 == 0 then goto L48f2d8;
  #L48f2d6.  return v1;
  #L48f2d8.  v0:= instanceof @variable v2 @type ^`java.lang.NullPointerException` @kind boolean;
  #L48f2dc.  if v0 == 0 then goto L48f2e2;
  #L48f2e0.  return v1;
  #L48f2e2.  v0:= instanceof @variable v2 @type ^`java.lang.IllegalArgumentException` @kind boolean;
  #L48f2e6.  if v0 == 0 then goto L48f2ec;
  #L48f2ea.  return v1;
  #L48f2ec.  v2:= instanceof @variable v2 @type ^`io.reactivex.exceptions.CompositeException` @kind boolean;
  #L48f2f0.  if v2 == 0 then goto L48f2f6;
  #L48f2f4.  return v1;
  #L48f2f6.  v2:= 0I;
  #L48f2f8.  return v2;
}
procedure `void` `f`(`java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.f:(Ljava/lang/Throwable;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L490110.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L490116.  v0:= temp @kind object;
  #L490118.  call temp:= `getUncaughtExceptionHandler`(v0) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L49011e.  v1:= temp @kind object;
  #L490120.  call `uncaughtException`(v1, v0, v2) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L490126.  return @kind void;
}
procedure `io.reactivex.functions.Function` `getComputationSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getComputationSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f854.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.g` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f858.  return v0 @kind object;
}
procedure `io.reactivex.functions.Consumer` `getErrorHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getErrorHandler:()Lio/reactivex/functions/Consumer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f83c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.a` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L48f840.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getInitComputationSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getInitComputationSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f86c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f870.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getInitIoSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getInitIoSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f884.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.e` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f888.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getInitNewThreadSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getInitNewThreadSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f89c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.f` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f8a0.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getInitSingleSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getInitSingleSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f8b4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.d` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f8b8.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getIoSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getIoSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f8cc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.i` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f8d0.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getNewThreadSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getNewThreadSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f8e4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.j` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f8e8.  return v0 @kind object;
}
procedure `io.reactivex.functions.BooleanSupplier` `getOnBeforeBlocking`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnBeforeBlocking:()Lio/reactivex/functions/BooleanSupplier;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f824.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.x` @type ^`io.reactivex.functions.BooleanSupplier` @kind object;
  #L48f828.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnCompletableAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnCompletableAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f8fc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.q` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f900.  return v0 @kind object;
}
procedure `io.reactivex.functions.BiFunction` `getOnCompletableSubscribe`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnCompletableSubscribe:()Lio/reactivex/functions/BiFunction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f7ac.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.w` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L48f7b0.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnConnectableFlowableAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnConnectableFlowableAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f914.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.l` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f918.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnConnectableObservableAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnConnectableObservableAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f92c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.n` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f930.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnFlowableAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnFlowableAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f944.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.k` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f948.  return v0 @kind object;
}
procedure `io.reactivex.functions.BiFunction` `getOnFlowableSubscribe`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnFlowableSubscribe:()Lio/reactivex/functions/BiFunction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f7c4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.s` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L48f7c8.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnMaybeAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnMaybeAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f95c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.o` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f960.  return v0 @kind object;
}
procedure `io.reactivex.functions.BiFunction` `getOnMaybeSubscribe`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnMaybeSubscribe:()Lio/reactivex/functions/BiFunction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f7dc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.t` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L48f7e0.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnObservableAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnObservableAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f974.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.m` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f978.  return v0 @kind object;
}
procedure `io.reactivex.functions.BiFunction` `getOnObservableSubscribe`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnObservableSubscribe:()Lio/reactivex/functions/BiFunction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f7f4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.u` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L48f7f8.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnParallelAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnParallelAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f98c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.r` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f990.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getOnSingleAssembly`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnSingleAssembly:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f9a4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.p` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f9a8.  return v0 @kind object;
}
procedure `io.reactivex.functions.BiFunction` `getOnSingleSubscribe`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getOnSingleSubscribe:()Lio/reactivex/functions/BiFunction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f80c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.v` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L48f810.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getScheduleHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getScheduleHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f9bc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f9c0.  return v0 @kind object;
}
procedure `io.reactivex.functions.Function` `getSingleSchedulerHandler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.getSingleSchedulerHandler:()Lio/reactivex/functions/Function;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f9d4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.h` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f9d8.  return v0 @kind object;
}
procedure `io.reactivex.Scheduler` `initComputationScheduler`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.initComputationScheduler:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f5b4.  v0:= "Scheduler Callable can't be null" @kind object;
  #L48f5b8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L48f5be.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.c` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f5c2.  if v0 != 0 then goto L48f5d0;
  #L48f5c6.  call temp:= `d`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.d:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L48f5cc.  v1:= temp @kind object;
  #L48f5ce.  return v1 @kind object;
  #L48f5d0.  call temp:= `c`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.c:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L48f5d6.  v1:= temp @kind object;
  #L48f5d8.  return v1 @kind object;
}
procedure `io.reactivex.Scheduler` `initIoScheduler`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.initIoScheduler:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f5ec.  v0:= "Scheduler Callable can't be null" @kind object;
  #L48f5f0.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L48f5f6.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.e` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f5fa.  if v0 != 0 then goto L48f608;
  #L48f5fe.  call temp:= `d`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.d:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L48f604.  v1:= temp @kind object;
  #L48f606.  return v1 @kind object;
  #L48f608.  call temp:= `c`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.c:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L48f60e.  v1:= temp @kind object;
  #L48f610.  return v1 @kind object;
}
procedure `io.reactivex.Scheduler` `initNewThreadScheduler`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.initNewThreadScheduler:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f624.  v0:= "Scheduler Callable can't be null" @kind object;
  #L48f628.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L48f62e.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.f` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f632.  if v0 != 0 then goto L48f640;
  #L48f636.  call temp:= `d`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.d:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L48f63c.  v1:= temp @kind object;
  #L48f63e.  return v1 @kind object;
  #L48f640.  call temp:= `c`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.c:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L48f646.  v1:= temp @kind object;
  #L48f648.  return v1 @kind object;
}
procedure `io.reactivex.Scheduler` `initSingleScheduler`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.initSingleScheduler:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f65c.  v0:= "Scheduler Callable can't be null" @kind object;
  #L48f660.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L48f666.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.d` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f66a.  if v0 != 0 then goto L48f678;
  #L48f66e.  call temp:= `d`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.d:(Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L48f674.  v1:= temp @kind object;
  #L48f676.  return v1 @kind object;
  #L48f678.  call temp:= `c`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.c:(Lio/reactivex/functions/Function;Ljava/util/concurrent/Callable;)Lio/reactivex/Scheduler;` @kind static;
  #L48f67e.  v1:= temp @kind object;
  #L48f680.  return v1 @kind object;
}
procedure `boolean` `isFailOnNonBlockingScheduler`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.isFailOnNonBlockingScheduler:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f30c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.z` @type ^`boolean` @kind boolean;
  #L48f310.  return v0;
}
procedure `boolean` `isLockdown`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.isLockdown:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f324.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48f328.  return v0;
}
procedure `void` `lockdown`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.lockdown:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fb28.  v0:= 1I;
  #L48fb2a.  `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` := v0 @kind boolean;
  #L48fb2e.  return @kind void;
}
procedure `io.reactivex.Completable` `onAssembly`(`io.reactivex.Completable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Completable;)Lio/reactivex/Completable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f37c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.q` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f380.  if v0 == 0 then goto L48f390;
  #L48f384.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f38a.  v1:= temp @kind object;
  #L48f38c.  v1:= (`io.reactivex.Completable`) v1 @kind object;
  #L48f390.  return v1 @kind object;
}
procedure `io.reactivex.Flowable` `onAssembly`(`io.reactivex.Flowable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f3cc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.k` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f3d0.  if v0 == 0 then goto L48f3e0;
  #L48f3d4.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f3da.  v1:= temp @kind object;
  #L48f3dc.  v1:= (`io.reactivex.Flowable`) v1 @kind object;
  #L48f3e0.  return v1 @kind object;
}
procedure `io.reactivex.Maybe` `onAssembly`(`io.reactivex.Maybe` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Maybe;)Lio/reactivex/Maybe;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f3f4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.o` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f3f8.  if v0 == 0 then goto L48f408;
  #L48f3fc.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f402.  v1:= temp @kind object;
  #L48f404.  v1:= (`io.reactivex.Maybe`) v1 @kind object;
  #L48f408.  return v1 @kind object;
}
procedure `io.reactivex.Observable` `onAssembly`(`io.reactivex.Observable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Observable;)Lio/reactivex/Observable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f444.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.m` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f448.  if v0 == 0 then goto L48f458;
  #L48f44c.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f452.  v1:= temp @kind object;
  #L48f454.  v1:= (`io.reactivex.Observable`) v1 @kind object;
  #L48f458.  return v1 @kind object;
}
procedure `io.reactivex.Single` `onAssembly`(`io.reactivex.Single` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/Single;)Lio/reactivex/Single;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f734.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.p` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f738.  if v0 == 0 then goto L48f748;
  #L48f73c.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f742.  v1:= temp @kind object;
  #L48f744.  v1:= (`io.reactivex.Single`) v1 @kind object;
  #L48f748.  return v1 @kind object;
}
procedure `io.reactivex.flowables.ConnectableFlowable` `onAssembly`(`io.reactivex.flowables.ConnectableFlowable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/flowables/ConnectableFlowable;)Lio/reactivex/flowables/ConnectableFlowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f784.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.l` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f788.  if v0 == 0 then goto L48f798;
  #L48f78c.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f792.  v1:= temp @kind object;
  #L48f794.  v1:= (`io.reactivex.flowables.ConnectableFlowable`) v1 @kind object;
  #L48f798.  return v1 @kind object;
}
procedure `io.reactivex.observables.ConnectableObservable` `onAssembly`(`io.reactivex.observables.ConnectableObservable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/observables/ConnectableObservable;)Lio/reactivex/observables/ConnectableObservable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f9ec.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.n` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f9f0.  if v0 == 0 then goto L48fa00;
  #L48f9f4.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f9fa.  v1:= temp @kind object;
  #L48f9fc.  v1:= (`io.reactivex.observables.ConnectableObservable`) v1 @kind object;
  #L48fa00.  return v1 @kind object;
}
procedure `io.reactivex.parallel.ParallelFlowable` `onAssembly`(`io.reactivex.parallel.ParallelFlowable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/parallel/ParallelFlowable;)Lio/reactivex/parallel/ParallelFlowable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fa14.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.r` @type ^`io.reactivex.functions.Function` @kind object;
  #L48fa18.  if v0 == 0 then goto L48fa28;
  #L48fa1c.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48fa22.  v1:= temp @kind object;
  #L48fa24.  v1:= (`io.reactivex.parallel.ParallelFlowable`) v1 @kind object;
  #L48fa28.  return v1 @kind object;
}
procedure `boolean` `onBeforeBlocking`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.onBeforeBlocking:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f33c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.x` @type ^`io.reactivex.functions.BooleanSupplier` @kind object;
  #L48f340.  if v0 == 0 then goto L48f35a;
  #L48f344.  call temp:= `getAsBoolean`(v0) @signature `Lio/reactivex/functions/BooleanSupplier;.getAsBoolean:()Z` @kind interface;
  #L48f34a.  v0:= temp;
  #L48f34c.  return v0;
  #L48f34e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48f350.  call temp:= `wrapOrThrow`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L48f356.  v0:= temp @kind object;
  #L48f358.  throw v0;
  #L48f35a.  v0:= 0I;
  #L48f35c.  return v0;
  catch `java.lang.Throwable` @[L48f344..L48f34c] goto L48f34e;
}
procedure `io.reactivex.Scheduler` `onComputationScheduler`(`io.reactivex.Scheduler` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onComputationScheduler:(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f694.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.g` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f698.  if v0 != 0 then goto L48f69e;
  #L48f69c.  return v1 @kind object;
  #L48f69e.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f6a4.  v1:= temp @kind object;
  #L48f6a6.  v1:= (`io.reactivex.Scheduler`) v1 @kind object;
  #L48f6aa.  return v1 @kind object;
}
procedure `void` `onError`(`java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L48fb40.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.a` @type ^`io.reactivex.functions.Consumer` @kind object;
  #L48fb44.  if v2 != 0 then goto L48fb58;
  #L48fb48.  v2:= new `java.lang.NullPointerException`;
  #L48fb4c.  v1:= "onError called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L48fb50.  call `<init>`(v2, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48fb56.  goto L48fb70;
  #L48fb58.  call temp:= `e`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.e:(Ljava/lang/Throwable;)Z` @kind static;
  #L48fb5e.  v1:= temp;
  #L48fb60.  if v1 != 0 then goto L48fb70;
  #L48fb64.  v1:= new `io.reactivex.exceptions.UndeliverableException`;
  #L48fb68.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/UndeliverableException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L48fb6e.  v2:= v1 @kind object;
  #L48fb70.  if v0 == 0 then goto L48fb8a;
  #L48fb74.  call `accept`(v0, v2) @signature `Lio/reactivex/functions/Consumer;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L48fb7a.  return @kind void;
  #L48fb7c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48fb7e.  call `printStackTrace`(v0) @signature `Ljava/lang/Throwable;.printStackTrace:()V` @kind virtual;
  #L48fb84.  call `f`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.f:(Ljava/lang/Throwable;)V` @kind static;
  #L48fb8a.  call `printStackTrace`(v2) @signature `Ljava/lang/Throwable;.printStackTrace:()V` @kind virtual;
  #L48fb90.  call `f`(v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.f:(Ljava/lang/Throwable;)V` @kind static;
  #L48fb96.  return @kind void;
  catch `java.lang.Throwable` @[L48fb74..L48fb7a] goto L48fb7c;
}
procedure `io.reactivex.Scheduler` `onIoScheduler`(`io.reactivex.Scheduler` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onIoScheduler:(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f6bc.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.i` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f6c0.  if v0 != 0 then goto L48f6c6;
  #L48f6c4.  return v1 @kind object;
  #L48f6c6.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f6cc.  v1:= temp @kind object;
  #L48f6ce.  v1:= (`io.reactivex.Scheduler`) v1 @kind object;
  #L48f6d2.  return v1 @kind object;
}
procedure `io.reactivex.Scheduler` `onNewThreadScheduler`(`io.reactivex.Scheduler` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onNewThreadScheduler:(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f6e4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.j` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f6e8.  if v0 != 0 then goto L48f6ee;
  #L48f6ec.  return v1 @kind object;
  #L48f6ee.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f6f4.  v1:= temp @kind object;
  #L48f6f6.  v1:= (`io.reactivex.Scheduler`) v1 @kind object;
  #L48f6fa.  return v1 @kind object;
}
procedure `java.lang.Runnable` `onSchedule`(`java.lang.Runnable` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48faa4.  v0:= "run is null" @kind object;
  #L48faa8.  call temp:= `requireNonNull`(v1, v0) @signature `Lio/reactivex/internal/functions/ObjectHelper;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L48faae.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.b` @type ^`io.reactivex.functions.Function` @kind object;
  #L48fab2.  if v0 != 0 then goto L48fab8;
  #L48fab6.  return v1 @kind object;
  #L48fab8.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48fabe.  v1:= temp @kind object;
  #L48fac0.  v1:= (`java.lang.Runnable`) v1 @kind object;
  #L48fac4.  return v1 @kind object;
}
procedure `io.reactivex.Scheduler` `onSingleScheduler`(`io.reactivex.Scheduler` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSingleScheduler:(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f70c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.h` @type ^`io.reactivex.functions.Function` @kind object;
  #L48f710.  if v0 != 0 then goto L48f716;
  #L48f714.  return v1 @kind object;
  #L48f716.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.b:(Lio/reactivex/functions/Function;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f71c.  v1:= temp @kind object;
  #L48f71e.  v1:= (`io.reactivex.Scheduler`) v1 @kind object;
  #L48f722.  return v1 @kind object;
}
procedure `io.reactivex.CompletableObserver` `onSubscribe`(`io.reactivex.Completable` v1 @kind object, `io.reactivex.CompletableObserver` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Completable;Lio/reactivex/CompletableObserver;)Lio/reactivex/CompletableObserver;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f3a4.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.w` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L48f3a8.  if v0 == 0 then goto L48f3ba;
  #L48f3ac.  call temp:= `a`(v0, v1, v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.a:(Lio/reactivex/functions/BiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f3b2.  v1:= temp @kind object;
  #L48f3b4.  v1:= (`io.reactivex.CompletableObserver`) v1 @kind object;
  #L48f3b8.  return v1 @kind object;
  #L48f3ba.  return v2 @kind object;
}
procedure `io.reactivex.MaybeObserver` `onSubscribe`(`io.reactivex.Maybe` v1 @kind object, `io.reactivex.MaybeObserver` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Maybe;Lio/reactivex/MaybeObserver;)Lio/reactivex/MaybeObserver;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f41c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.t` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L48f420.  if v0 == 0 then goto L48f432;
  #L48f424.  call temp:= `a`(v0, v1, v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.a:(Lio/reactivex/functions/BiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f42a.  v1:= temp @kind object;
  #L48f42c.  v1:= (`io.reactivex.MaybeObserver`) v1 @kind object;
  #L48f430.  return v1 @kind object;
  #L48f432.  return v2 @kind object;
}
procedure `io.reactivex.Observer` `onSubscribe`(`io.reactivex.Observable` v1 @kind object, `io.reactivex.Observer` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Observable;Lio/reactivex/Observer;)Lio/reactivex/Observer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f46c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.u` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L48f470.  if v0 == 0 then goto L48f482;
  #L48f474.  call temp:= `a`(v0, v1, v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.a:(Lio/reactivex/functions/BiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f47a.  v1:= temp @kind object;
  #L48f47c.  v1:= (`io.reactivex.Observer`) v1 @kind object;
  #L48f480.  return v1 @kind object;
  #L48f482.  return v2 @kind object;
}
procedure `io.reactivex.SingleObserver` `onSubscribe`(`io.reactivex.Single` v1 @kind object, `io.reactivex.SingleObserver` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Single;Lio/reactivex/SingleObserver;)Lio/reactivex/SingleObserver;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48f75c.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.v` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L48f760.  if v0 == 0 then goto L48f772;
  #L48f764.  call temp:= `a`(v0, v1, v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.a:(Lio/reactivex/functions/BiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f76a.  v1:= temp @kind object;
  #L48f76c.  v1:= (`io.reactivex.SingleObserver`) v1 @kind object;
  #L48f770.  return v1 @kind object;
  #L48f772.  return v2 @kind object;
}
procedure `org.reactivestreams.Subscriber` `onSubscribe`(`io.reactivex.Flowable` v1 @kind object, `org.reactivestreams.Subscriber` v2 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.onSubscribe:(Lio/reactivex/Flowable;Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fad8.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.s` @type ^`io.reactivex.functions.BiFunction` @kind object;
  #L48fadc.  if v0 == 0 then goto L48faee;
  #L48fae0.  call temp:= `a`(v0, v1, v2) @signature `Lio/reactivex/plugins/RxJavaPlugins;.a:(Lio/reactivex/functions/BiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48fae6.  v1:= temp @kind object;
  #L48fae8.  v1:= (`org.reactivestreams.Subscriber`) v1 @kind object;
  #L48faec.  return v1 @kind object;
  #L48faee.  return v2 @kind object;
}
procedure `void` `reset`() @signature `Lio/reactivex/plugins/RxJavaPlugins;.reset:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L48fbb4.  v0:= 0I;
  #L48fbb6.  call `setErrorHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setErrorHandler:(Lio/reactivex/functions/Consumer;)V` @kind static;
  #L48fbbc.  call `setScheduleHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setScheduleHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fbc2.  call `setComputationSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setComputationSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fbc8.  call `setInitComputationSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitComputationSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fbce.  call `setIoSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setIoSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fbd4.  call `setInitIoSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitIoSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fbda.  call `setSingleSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setSingleSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fbe0.  call `setInitSingleSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitSingleSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fbe6.  call `setNewThreadSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setNewThreadSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fbec.  call `setInitNewThreadSchedulerHandler`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitNewThreadSchedulerHandler:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fbf2.  call `setOnFlowableAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnFlowableAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fbf8.  call `setOnFlowableSubscribe`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnFlowableSubscribe:(Lio/reactivex/functions/BiFunction;)V` @kind static;
  #L48fbfe.  call `setOnObservableAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnObservableAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fc04.  call `setOnObservableSubscribe`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnObservableSubscribe:(Lio/reactivex/functions/BiFunction;)V` @kind static;
  #L48fc0a.  call `setOnSingleAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnSingleAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fc10.  call `setOnSingleSubscribe`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnSingleSubscribe:(Lio/reactivex/functions/BiFunction;)V` @kind static;
  #L48fc16.  call `setOnCompletableAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnCompletableAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fc1c.  call `setOnCompletableSubscribe`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnCompletableSubscribe:(Lio/reactivex/functions/BiFunction;)V` @kind static;
  #L48fc22.  call `setOnConnectableFlowableAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnConnectableFlowableAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fc28.  call `setOnConnectableObservableAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnConnectableObservableAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fc2e.  call `setOnMaybeAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnMaybeAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fc34.  call `setOnMaybeSubscribe`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnMaybeSubscribe:(Lio/reactivex/functions/BiFunction;)V` @kind static;
  #L48fc3a.  call `setOnParallelAssembly`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnParallelAssembly:(Lio/reactivex/functions/Function;)V` @kind static;
  #L48fc40.  v1:= 0I;
  #L48fc42.  call `setFailOnNonBlockingScheduler`(v1) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setFailOnNonBlockingScheduler:(Z)V` @kind static;
  #L48fc48.  call `setOnBeforeBlocking`(v0) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnBeforeBlocking:(Lio/reactivex/functions/BooleanSupplier;)V` @kind static;
  #L48fc4e.  return @kind void;
}
procedure `void` `setComputationSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setComputationSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fc60.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fc64.  if v0 != 0 then goto L48fc6e;
  #L48fc68.  `@@io.reactivex.plugins.RxJavaPlugins.g` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L48fc6c.  return @kind void;
  #L48fc6e.  v1:= new `java.lang.IllegalStateException`;
  #L48fc72.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48fc76.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48fc7c.  throw v1;
}
procedure `void` `setErrorHandler`(`io.reactivex.functions.Consumer` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setErrorHandler:(Lio/reactivex/functions/Consumer;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fc90.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fc94.  if v0 != 0 then goto L48fc9e;
  #L48fc98.  `@@io.reactivex.plugins.RxJavaPlugins.a` @type ^`io.reactivex.functions.Consumer` := v1 @kind object;
  #L48fc9c.  return @kind void;
  #L48fc9e.  v1:= new `java.lang.IllegalStateException`;
  #L48fca2.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48fca6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48fcac.  throw v1;
}
procedure `void` `setFailOnNonBlockingScheduler`(`boolean` v1 ) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setFailOnNonBlockingScheduler:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fcc0.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fcc4.  if v0 != 0 then goto L48fcce;
  #L48fcc8.  `@@io.reactivex.plugins.RxJavaPlugins.z` @type ^`boolean` := v1 @kind boolean;
  #L48fccc.  return @kind void;
  #L48fcce.  v1:= new `java.lang.IllegalStateException`;
  #L48fcd2.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48fcd6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48fcdc.  throw v1;
}
procedure `void` `setInitComputationSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitComputationSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fcf0.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fcf4.  if v0 != 0 then goto L48fcfe;
  #L48fcf8.  `@@io.reactivex.plugins.RxJavaPlugins.c` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L48fcfc.  return @kind void;
  #L48fcfe.  v1:= new `java.lang.IllegalStateException`;
  #L48fd02.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48fd06.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48fd0c.  throw v1;
}
procedure `void` `setInitIoSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitIoSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fd20.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fd24.  if v0 != 0 then goto L48fd2e;
  #L48fd28.  `@@io.reactivex.plugins.RxJavaPlugins.e` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L48fd2c.  return @kind void;
  #L48fd2e.  v1:= new `java.lang.IllegalStateException`;
  #L48fd32.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48fd36.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48fd3c.  throw v1;
}
procedure `void` `setInitNewThreadSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitNewThreadSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fd50.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fd54.  if v0 != 0 then goto L48fd5e;
  #L48fd58.  `@@io.reactivex.plugins.RxJavaPlugins.f` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L48fd5c.  return @kind void;
  #L48fd5e.  v1:= new `java.lang.IllegalStateException`;
  #L48fd62.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48fd66.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48fd6c.  throw v1;
}
procedure `void` `setInitSingleSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setInitSingleSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fd80.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fd84.  if v0 != 0 then goto L48fd8e;
  #L48fd88.  `@@io.reactivex.plugins.RxJavaPlugins.d` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L48fd8c.  return @kind void;
  #L48fd8e.  v1:= new `java.lang.IllegalStateException`;
  #L48fd92.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48fd96.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48fd9c.  throw v1;
}
procedure `void` `setIoSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setIoSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fdb0.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fdb4.  if v0 != 0 then goto L48fdbe;
  #L48fdb8.  `@@io.reactivex.plugins.RxJavaPlugins.i` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L48fdbc.  return @kind void;
  #L48fdbe.  v1:= new `java.lang.IllegalStateException`;
  #L48fdc2.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48fdc6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48fdcc.  throw v1;
}
procedure `void` `setNewThreadSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setNewThreadSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fde0.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fde4.  if v0 != 0 then goto L48fdee;
  #L48fde8.  `@@io.reactivex.plugins.RxJavaPlugins.j` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L48fdec.  return @kind void;
  #L48fdee.  v1:= new `java.lang.IllegalStateException`;
  #L48fdf2.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48fdf6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48fdfc.  throw v1;
}
procedure `void` `setOnBeforeBlocking`(`io.reactivex.functions.BooleanSupplier` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnBeforeBlocking:(Lio/reactivex/functions/BooleanSupplier;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fe10.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fe14.  if v0 != 0 then goto L48fe1e;
  #L48fe18.  `@@io.reactivex.plugins.RxJavaPlugins.x` @type ^`io.reactivex.functions.BooleanSupplier` := v1 @kind object;
  #L48fe1c.  return @kind void;
  #L48fe1e.  v1:= new `java.lang.IllegalStateException`;
  #L48fe22.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48fe26.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48fe2c.  throw v1;
}
procedure `void` `setOnCompletableAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnCompletableAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fe40.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fe44.  if v0 != 0 then goto L48fe4e;
  #L48fe48.  `@@io.reactivex.plugins.RxJavaPlugins.q` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L48fe4c.  return @kind void;
  #L48fe4e.  v1:= new `java.lang.IllegalStateException`;
  #L48fe52.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48fe56.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48fe5c.  throw v1;
}
procedure `void` `setOnCompletableSubscribe`(`io.reactivex.functions.BiFunction` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnCompletableSubscribe:(Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fe70.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fe74.  if v0 != 0 then goto L48fe7e;
  #L48fe78.  `@@io.reactivex.plugins.RxJavaPlugins.w` @type ^`io.reactivex.functions.BiFunction` := v1 @kind object;
  #L48fe7c.  return @kind void;
  #L48fe7e.  v1:= new `java.lang.IllegalStateException`;
  #L48fe82.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48fe86.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48fe8c.  throw v1;
}
procedure `void` `setOnConnectableFlowableAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnConnectableFlowableAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fea0.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fea4.  if v0 != 0 then goto L48feae;
  #L48fea8.  `@@io.reactivex.plugins.RxJavaPlugins.l` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L48feac.  return @kind void;
  #L48feae.  v1:= new `java.lang.IllegalStateException`;
  #L48feb2.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48feb6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48febc.  throw v1;
}
procedure `void` `setOnConnectableObservableAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnConnectableObservableAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fed0.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fed4.  if v0 != 0 then goto L48fede;
  #L48fed8.  `@@io.reactivex.plugins.RxJavaPlugins.n` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L48fedc.  return @kind void;
  #L48fede.  v1:= new `java.lang.IllegalStateException`;
  #L48fee2.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48fee6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48feec.  throw v1;
}
procedure `void` `setOnFlowableAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnFlowableAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48ff00.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48ff04.  if v0 != 0 then goto L48ff0e;
  #L48ff08.  `@@io.reactivex.plugins.RxJavaPlugins.k` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L48ff0c.  return @kind void;
  #L48ff0e.  v1:= new `java.lang.IllegalStateException`;
  #L48ff12.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48ff16.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48ff1c.  throw v1;
}
procedure `void` `setOnFlowableSubscribe`(`io.reactivex.functions.BiFunction` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnFlowableSubscribe:(Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48ff30.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48ff34.  if v0 != 0 then goto L48ff3e;
  #L48ff38.  `@@io.reactivex.plugins.RxJavaPlugins.s` @type ^`io.reactivex.functions.BiFunction` := v1 @kind object;
  #L48ff3c.  return @kind void;
  #L48ff3e.  v1:= new `java.lang.IllegalStateException`;
  #L48ff42.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48ff46.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48ff4c.  throw v1;
}
procedure `void` `setOnMaybeAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnMaybeAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48ff60.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48ff64.  if v0 != 0 then goto L48ff6e;
  #L48ff68.  `@@io.reactivex.plugins.RxJavaPlugins.o` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L48ff6c.  return @kind void;
  #L48ff6e.  v1:= new `java.lang.IllegalStateException`;
  #L48ff72.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48ff76.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48ff7c.  throw v1;
}
procedure `void` `setOnMaybeSubscribe`(`io.reactivex.functions.BiFunction` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnMaybeSubscribe:(Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48ff90.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48ff94.  if v0 != 0 then goto L48ff9e;
  #L48ff98.  `@@io.reactivex.plugins.RxJavaPlugins.t` @type ^`io.reactivex.functions.BiFunction` := v1 @kind object;
  #L48ff9c.  return @kind void;
  #L48ff9e.  v1:= new `java.lang.IllegalStateException`;
  #L48ffa2.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48ffa6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48ffac.  throw v1;
}
procedure `void` `setOnObservableAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnObservableAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48ffc0.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48ffc4.  if v0 != 0 then goto L48ffce;
  #L48ffc8.  `@@io.reactivex.plugins.RxJavaPlugins.m` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L48ffcc.  return @kind void;
  #L48ffce.  v1:= new `java.lang.IllegalStateException`;
  #L48ffd2.  v0:= "Plugins can't be changed anymore" @kind object;
  #L48ffd6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48ffdc.  throw v1;
}
procedure `void` `setOnObservableSubscribe`(`io.reactivex.functions.BiFunction` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnObservableSubscribe:(Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48fff0.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L48fff4.  if v0 != 0 then goto L48fffe;
  #L48fff8.  `@@io.reactivex.plugins.RxJavaPlugins.u` @type ^`io.reactivex.functions.BiFunction` := v1 @kind object;
  #L48fffc.  return @kind void;
  #L48fffe.  v1:= new `java.lang.IllegalStateException`;
  #L490002.  v0:= "Plugins can't be changed anymore" @kind object;
  #L490006.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49000c.  throw v1;
}
procedure `void` `setOnParallelAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnParallelAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L490020.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L490024.  if v0 != 0 then goto L49002e;
  #L490028.  `@@io.reactivex.plugins.RxJavaPlugins.r` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L49002c.  return @kind void;
  #L49002e.  v1:= new `java.lang.IllegalStateException`;
  #L490032.  v0:= "Plugins can't be changed anymore" @kind object;
  #L490036.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49003c.  throw v1;
}
procedure `void` `setOnSingleAssembly`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnSingleAssembly:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L490050.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L490054.  if v0 != 0 then goto L49005e;
  #L490058.  `@@io.reactivex.plugins.RxJavaPlugins.p` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L49005c.  return @kind void;
  #L49005e.  v1:= new `java.lang.IllegalStateException`;
  #L490062.  v0:= "Plugins can't be changed anymore" @kind object;
  #L490066.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49006c.  throw v1;
}
procedure `void` `setOnSingleSubscribe`(`io.reactivex.functions.BiFunction` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setOnSingleSubscribe:(Lio/reactivex/functions/BiFunction;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L490080.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L490084.  if v0 != 0 then goto L49008e;
  #L490088.  `@@io.reactivex.plugins.RxJavaPlugins.v` @type ^`io.reactivex.functions.BiFunction` := v1 @kind object;
  #L49008c.  return @kind void;
  #L49008e.  v1:= new `java.lang.IllegalStateException`;
  #L490092.  v0:= "Plugins can't be changed anymore" @kind object;
  #L490096.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49009c.  throw v1;
}
procedure `void` `setScheduleHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setScheduleHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4900b0.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L4900b4.  if v0 != 0 then goto L4900be;
  #L4900b8.  `@@io.reactivex.plugins.RxJavaPlugins.b` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L4900bc.  return @kind void;
  #L4900be.  v1:= new `java.lang.IllegalStateException`;
  #L4900c2.  v0:= "Plugins can't be changed anymore" @kind object;
  #L4900c6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4900cc.  throw v1;
}
procedure `void` `setSingleSchedulerHandler`(`io.reactivex.functions.Function` v1 @kind object) @signature `Lio/reactivex/plugins/RxJavaPlugins;.setSingleSchedulerHandler:(Lio/reactivex/functions/Function;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4900e0.  v0:= `@@io.reactivex.plugins.RxJavaPlugins.y` @type ^`boolean` @kind boolean;
  #L4900e4.  if v0 != 0 then goto L4900ee;
  #L4900e8.  `@@io.reactivex.plugins.RxJavaPlugins.h` @type ^`io.reactivex.functions.Function` := v1 @kind object;
  #L4900ec.  return @kind void;
  #L4900ee.  v1:= new `java.lang.IllegalStateException`;
  #L4900f2.  v0:= "Plugins can't be changed anymore" @kind object;
  #L4900f6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4900fc.  throw v1;
}
