record `kotlin.coroutines.CombinedContext$Serialized` @kind class @AccessFlag FINAL extends `java.io.Serializable` @kind interface {
  `kotlin.coroutines.CoroutineContext`[] `kotlin.coroutines.CombinedContext$Serialized.a` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@kotlin.coroutines.CombinedContext$Serialized.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/coroutines/CombinedContext$Serialized;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L56bc6c.  v0:= new `kotlin.coroutines.CombinedContext$Serialized$Companion`;
  #L56bc70.  v1:= 0I;
  #L56bc72.  call `<init>`(v0, v1) @signature `Lkotlin/coroutines/CombinedContext$Serialized$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L56bc78.  return @kind void;
}
procedure `void` `<init>`(`kotlin.coroutines.CombinedContext$Serialized` v1 @kind this, `kotlin.coroutines.CoroutineContext`[] v2 @kind object) @signature `Lkotlin/coroutines/CombinedContext$Serialized;.<init>:([Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L56bc8c.  v0:= "elements" @kind object;
  #L56bc90.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56bc96.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L56bc9c.  v1.`kotlin.coroutines.CombinedContext$Serialized.a` @type ^`kotlin.coroutines.CoroutineContext`[] := v2 @kind object;
  #L56bca0.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`kotlin.coroutines.CombinedContext$Serialized` v5 @kind this) @signature `Lkotlin/coroutines/CombinedContext$Serialized;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L56bc38.  v0:= v5.`kotlin.coroutines.CombinedContext$Serialized.a` @type ^`kotlin.coroutines.CoroutineContext`[] @kind object;
  #L56bc3c.  v1:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L56bc40.  v2:= length @variable v0;
  #L56bc42.  v3:= 0I;
  #L56bc44.  if v3 >= v2 then goto L56bc5a;
  #L56bc48.  v4:= v0[v3] @kind object;
  #L56bc4c.  call temp:= `plus`(v1, v4) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L56bc52.  v1:= temp @kind object;
  #L56bc54.  v3:= v3 + 1;
  #L56bc58.  goto L56bc44;
  #L56bc5a.  return v1 @kind object;
}
