record `kotlin.coroutines.CoroutineContext$Element` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `kotlin.coroutines.CoroutineContext` @kind interface {
}
procedure `java.lang.Object` `fold`(`java.lang.Object` v0 @kind object, `kotlin.jvm.functions.Function2` v1 @kind object) @signature `Lkotlin/coroutines/CoroutineContext$Element;.fold:(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlin.coroutines.CoroutineContext$Key` v0 @kind object) @signature `Lkotlin/coroutines/CoroutineContext$Element;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlin.coroutines.CoroutineContext$Key` `getKey`() @signature `Lkotlin/coroutines/CoroutineContext$Element;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlin.coroutines.CoroutineContext$Key` v0 @kind object) @signature `Lkotlin/coroutines/CoroutineContext$Element;.minusKey:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
