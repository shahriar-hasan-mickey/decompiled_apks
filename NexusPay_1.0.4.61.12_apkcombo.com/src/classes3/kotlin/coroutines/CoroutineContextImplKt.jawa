record `kotlin.coroutines.CoroutineContextImplKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlin.coroutines.CoroutineContext$Element` `getPolymorphicElement`(`kotlin.coroutines.CoroutineContext$Element` v2 @kind object, `kotlin.coroutines.CoroutineContext$Key` v3 @kind object) @signature `Lkotlin/coroutines/CoroutineContextImplKt;.getPolymorphicElement:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L56c6c4.  v0:= "$this$getPolymorphicElement" @kind object;
  #L56c6c8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c6ce.  v0:= "key" @kind object;
  #L56c6d2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c6d8.  v0:= instanceof @variable v3 @type ^`kotlin.coroutines.AbstractCoroutineContextKey` @kind boolean;
  #L56c6dc.  v1:= 0I;
  #L56c6de.  if v0 == 0 then goto L56c710;
  #L56c6e2.  v3:= (`kotlin.coroutines.AbstractCoroutineContextKey`) v3 @kind object;
  #L56c6e6.  call temp:= `getKey`(v2) @signature `Lkotlin/coroutines/CoroutineContext$Element;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @kind interface;
  #L56c6ec.  v0:= temp @kind object;
  #L56c6ee.  call temp:= `isSubKey$kotlin_stdlib`(v3, v0) @signature `Lkotlin/coroutines/AbstractCoroutineContextKey;.isSubKey$kotlin_stdlib:(Lkotlin/coroutines/CoroutineContext$Key;)Z` @kind virtual;
  #L56c6f4.  v0:= temp;
  #L56c6f6.  if v0 == 0 then goto L56c70e;
  #L56c6fa.  call temp:= `tryCast$kotlin_stdlib`(v3, v2) @signature `Lkotlin/coroutines/AbstractCoroutineContextKey;.tryCast$kotlin_stdlib:(Lkotlin/coroutines/CoroutineContext$Element;)Lkotlin/coroutines/CoroutineContext$Element;` @kind virtual;
  #L56c700.  v2:= temp @kind object;
  #L56c702.  v3:= instanceof @variable v2 @type ^`kotlin.coroutines.CoroutineContext$Element` @kind boolean;
  #L56c706.  if v3 != 0 then goto L56c70c;
  #L56c70a.  goto L56c70e;
  #L56c70c.  v1:= v2 @kind object;
  #L56c70e.  return v1 @kind object;
  #L56c710.  call temp:= `getKey`(v2) @signature `Lkotlin/coroutines/CoroutineContext$Element;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @kind interface;
  #L56c716.  v0:= temp @kind object;
  #L56c718.  if v0 != v3 then goto L56c71e;
  #L56c71c.  goto L56c720;
  #L56c71e.  v2:= v1 @kind object;
  #L56c720.  return v2 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `minusPolymorphicKey`(`kotlin.coroutines.CoroutineContext$Element` v1 @kind object, `kotlin.coroutines.CoroutineContext$Key` v2 @kind object) @signature `Lkotlin/coroutines/CoroutineContextImplKt;.minusPolymorphicKey:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56c65c.  v0:= "$this$minusPolymorphicKey" @kind object;
  #L56c660.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c666.  v0:= "key" @kind object;
  #L56c66a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c670.  v0:= instanceof @variable v2 @type ^`kotlin.coroutines.AbstractCoroutineContextKey` @kind boolean;
  #L56c674.  if v0 == 0 then goto L56c6a2;
  #L56c678.  v2:= (`kotlin.coroutines.AbstractCoroutineContextKey`) v2 @kind object;
  #L56c67c.  call temp:= `getKey`(v1) @signature `Lkotlin/coroutines/CoroutineContext$Element;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @kind interface;
  #L56c682.  v0:= temp @kind object;
  #L56c684.  call temp:= `isSubKey$kotlin_stdlib`(v2, v0) @signature `Lkotlin/coroutines/AbstractCoroutineContextKey;.isSubKey$kotlin_stdlib:(Lkotlin/coroutines/CoroutineContext$Key;)Z` @kind virtual;
  #L56c68a.  v0:= temp;
  #L56c68c.  if v0 == 0 then goto L56c6a0;
  #L56c690.  call temp:= `tryCast$kotlin_stdlib`(v2, v1) @signature `Lkotlin/coroutines/AbstractCoroutineContextKey;.tryCast$kotlin_stdlib:(Lkotlin/coroutines/CoroutineContext$Element;)Lkotlin/coroutines/CoroutineContext$Element;` @kind virtual;
  #L56c696.  v2:= temp @kind object;
  #L56c698.  if v2 == 0 then goto L56c6a0;
  #L56c69c.  v1:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L56c6a0.  return v1 @kind object;
  #L56c6a2.  call temp:= `getKey`(v1) @signature `Lkotlin/coroutines/CoroutineContext$Element;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @kind interface;
  #L56c6a8.  v0:= temp @kind object;
  #L56c6aa.  if v0 != v2 then goto L56c6b2;
  #L56c6ae.  v1:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L56c6b2.  return v1 @kind object;
}
