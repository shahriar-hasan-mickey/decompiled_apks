record `kotlin.coroutines.jvm.internal.DebugMetadataKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`int` v2 , `int` v3 ) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.a:(II)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L56d6e8.  if v3 > v2 then goto L56d6ee;
  #L56d6ec.  return @kind void;
  #L56d6ee.  v0:= new `java.lang.StringBuilder`;
  #L56d6f2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L56d6f8.  v1:= "Debug metadata version mismatch. Expected: " @kind object;
  #L56d6fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56d702.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L56d708.  v2:= ", got " @kind object;
  #L56d70c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56d712.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L56d718.  v2:= ". Please update the Kotlin standard library." @kind object;
  #L56d71c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56d722.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L56d728.  v2:= temp @kind object;
  #L56d72a.  v3:= new `java.lang.IllegalStateException`;
  #L56d72e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L56d734.  v2:= temp @kind object;
  #L56d736.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56d73c.  throw v3;
}
procedure `kotlin.coroutines.jvm.internal.DebugMetadata` `b`(`kotlin.coroutines.jvm.internal.BaseContinuationImpl` v1 @kind object) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.b:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Lkotlin/coroutines/jvm/internal/DebugMetadata;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L56d6bc.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L56d6c2.  v1:= temp @kind object;
  #L56d6c4.  v0:= constclass @type ^`kotlin.coroutines.jvm.internal.DebugMetadata` @kind object;
  #L56d6c8.  call temp:= `getAnnotation`(v1, v0) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L56d6ce.  v1:= temp @kind object;
  #L56d6d0.  v1:= (`kotlin.coroutines.jvm.internal.DebugMetadata`) v1 @kind object;
  #L56d6d4.  return v1 @kind object;
}
procedure `int` `c`(`kotlin.coroutines.jvm.internal.BaseContinuationImpl` v2 @kind object) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.c:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L56d4d4.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L56d4da.  v0:= temp @kind object;
  #L56d4dc.  v1:= "label" @kind object;
  #L56d4e0.  call temp:= `getDeclaredField`(v0, v1) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L56d4e6.  v0:= temp @kind object;
  #L56d4e8.  v1:= "field" @kind object;
  #L56d4ec.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56d4f2.  v1:= 1I;
  #L56d4f4.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L56d4fa.  call temp:= `get`(v0, v2) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L56d500.  v2:= temp @kind object;
  #L56d502.  v0:= instanceof @variable v2 @type ^`java.lang.Integer` @kind boolean;
  #L56d506.  if v0 != 0 then goto L56d50c;
  #L56d50a.  v2:= 0I;
  #L56d50c.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L56d510.  if v2 == 0 then goto L56d51e;
  #L56d514.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L56d51a.  v2:= temp;
  #L56d51c.  goto L56d520;
  #L56d51e.  v2:= 0I;
  #L56d520.  v2:= v2 - v1 @kind int;
  #L56d522.  goto L56d526;
  #L56d524.  v2:= -1I;
  #L56d526.  return v2;
  catch `java.lang.Exception` @[L56d4d4..L56d51c] goto L56d524;
}
procedure `java.lang.String`[] `getSpilledVariableFieldMapping`(`kotlin.coroutines.jvm.internal.BaseContinuationImpl` v7 @kind object) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.getSpilledVariableFieldMapping:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L56d604.  v0:= "$this$getSpilledVariableFieldMapping" @kind object;
  #L56d608.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56d60e.  call temp:= `b`(v7) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.b:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Lkotlin/coroutines/jvm/internal/DebugMetadata;` @kind static;
  #L56d614.  v0:= temp @kind object;
  #L56d616.  if v0 == 0 then goto L56d6a6;
  #L56d61a.  call temp:= `v`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.v:()I` @kind interface;
  #L56d620.  v1:= temp;
  #L56d622.  v2:= 1I;
  #L56d624.  call `a`(v2, v1) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.a:(II)V` @kind static;
  #L56d62a.  v1:= new `java.util.ArrayList`;
  #L56d62e.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L56d634.  call temp:= `c`(v7) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.c:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)I` @kind static;
  #L56d63a.  v7:= temp;
  #L56d63c.  call temp:= `i`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.i:()[I` @kind interface;
  #L56d642.  v2:= temp @kind object;
  #L56d644.  v3:= length @variable v2;
  #L56d646.  v4:= 0I;
  #L56d648.  v5:= 0I;
  #L56d64a.  if v5 >= v3 then goto L56d680;
  #L56d64e.  v6:= v2[v5];
  #L56d652.  if v6 != v7 then goto L56d67a;
  #L56d656.  call temp:= `s`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.s:()[Ljava/lang/String;` @kind interface;
  #L56d65c.  v6:= temp @kind object;
  #L56d65e.  v6:= v6[v5] @kind object;
  #L56d662.  call temp:= `add`(v1, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L56d668.  call temp:= `n`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.n:()[Ljava/lang/String;` @kind interface;
  #L56d66e.  v6:= temp @kind object;
  #L56d670.  v6:= v6[v5] @kind object;
  #L56d674.  call temp:= `add`(v1, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L56d67a.  v5:= v5 + 1;
  #L56d67e.  goto L56d64a;
  #L56d680.  v7:= new `java.lang.String`[v4];
  #L56d684.  call temp:= `toArray`(v1, v7) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L56d68a.  v7:= temp @kind object;
  #L56d68c.  if v7 == 0 then goto L56d696;
  #L56d690.  v7:= (`java.lang.String`[]) v7 @kind object;
  #L56d694.  return v7 @kind object;
  #L56d696.  v7:= new `java.lang.NullPointerException`;
  #L56d69a.  v0:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L56d69e.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56d6a4.  throw v7;
  #L56d6a6.  v7:= 0I;
  #L56d6a8.  return v7 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlin.coroutines.jvm.internal.BaseContinuationImpl` v4 @kind object) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.getStackTraceElement:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L56d548.  v0:= "$this$getStackTraceElementImpl" @kind object;
  #L56d54c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56d552.  call temp:= `b`(v4) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.b:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Lkotlin/coroutines/jvm/internal/DebugMetadata;` @kind static;
  #L56d558.  v0:= temp @kind object;
  #L56d55a.  if v0 == 0 then goto L56d5f0;
  #L56d55e.  v1:= 1I;
  #L56d560.  call temp:= `v`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.v:()I` @kind interface;
  #L56d566.  v2:= temp;
  #L56d568.  call `a`(v1, v2) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.a:(II)V` @kind static;
  #L56d56e.  call temp:= `c`(v4) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.c:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)I` @kind static;
  #L56d574.  v1:= temp;
  #L56d576.  if v1 >= 0 then goto L56d57e;
  #L56d57a.  v1:= -1I;
  #L56d57c.  goto L56d58a;
  #L56d57e.  call temp:= `l`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.l:()[I` @kind interface;
  #L56d584.  v2:= temp @kind object;
  #L56d586.  v1:= v2[v1];
  #L56d58a.  v2:= `@@kotlin.coroutines.jvm.internal.a.c` @type ^`kotlin.coroutines.jvm.internal.a` @kind object;
  #L56d58e.  call temp:= `b`(v2, v4) @signature `Lkotlin/coroutines/jvm/internal/a;.b:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Ljava/lang/String;` @kind virtual;
  #L56d594.  v4:= temp @kind object;
  #L56d596.  if v4 != 0 then goto L56d5a4;
  #L56d59a.  call temp:= `c`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.c:()Ljava/lang/String;` @kind interface;
  #L56d5a0.  v4:= temp @kind object;
  #L56d5a2.  goto L56d5d4;
  #L56d5a4.  v2:= new `java.lang.StringBuilder`;
  #L56d5a8.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L56d5ae.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56d5b4.  v4:= 47I;
  #L56d5b8.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L56d5be.  call temp:= `c`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.c:()Ljava/lang/String;` @kind interface;
  #L56d5c4.  v4:= temp @kind object;
  #L56d5c6.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56d5cc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L56d5d2.  v4:= temp @kind object;
  #L56d5d4.  v2:= new `java.lang.StackTraceElement`;
  #L56d5d8.  call temp:= `m`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.m:()Ljava/lang/String;` @kind interface;
  #L56d5de.  v3:= temp @kind object;
  #L56d5e0.  call temp:= `f`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.f:()Ljava/lang/String;` @kind interface;
  #L56d5e6.  v0:= temp @kind object;
  #L56d5e8.  call `<init>`(v2, v4, v3, v0, v1) @signature `Ljava/lang/StackTraceElement;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L56d5ee.  return v2 @kind object;
  #L56d5f0.  v4:= 0I;
  #L56d5f2.  return v4 @kind object;
}
