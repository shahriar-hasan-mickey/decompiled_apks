record `kotlin.coroutines.jvm.internal.a` @kind class @AccessFlag FINAL {
}
global `kotlin.coroutines.jvm.internal.a$a` `@@kotlin.coroutines.jvm.internal.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlin.coroutines.jvm.internal.a$a` `@@kotlin.coroutines.jvm.internal.a.b` @AccessFlag PRIVATE_STATIC;
global `kotlin.coroutines.jvm.internal.a` `@@kotlin.coroutines.jvm.internal.a.c` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/coroutines/jvm/internal/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L56d90c.  v0:= new `kotlin.coroutines.jvm.internal.a`;
  #L56d910.  call `<init>`(v0) @signature `Lkotlin/coroutines/jvm/internal/a;.<init>:()V` @kind direct;
  #L56d916.  `@@kotlin.coroutines.jvm.internal.a.c` @type ^`kotlin.coroutines.jvm.internal.a` := v0 @kind object;
  #L56d91a.  v0:= new `kotlin.coroutines.jvm.internal.a$a`;
  #L56d91e.  v1:= 0I;
  #L56d920.  call `<init>`(v0, v1, v1, v1) @signature `Lkotlin/coroutines/jvm/internal/a$a;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L56d926.  `@@kotlin.coroutines.jvm.internal.a.a` @type ^`kotlin.coroutines.jvm.internal.a$a` := v0 @kind object;
  #L56d92a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.coroutines.jvm.internal.a` v0 @kind this) @signature `Lkotlin/coroutines/jvm/internal/a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L56d93c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L56d942.  return @kind void;
}
procedure `kotlin.coroutines.jvm.internal.a$a` `a`(`kotlin.coroutines.jvm.internal.a` v5 @kind this, `kotlin.coroutines.jvm.internal.BaseContinuationImpl` v6 @kind object) @signature `Lkotlin/coroutines/jvm/internal/a;.a:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Lkotlin/coroutines/jvm/internal/a$a;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L56d864.  v0:= constclass @type ^`java.lang.Class` @kind object;
  #L56d868.  v1:= "getModule" @kind object;
  #L56d86c.  v2:= 0I;
  #L56d86e.  v3:= new `java.lang.Class`[v2];
  #L56d872.  call temp:= `getDeclaredMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L56d878.  v0:= temp @kind object;
  #L56d87a.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L56d880.  v1:= temp @kind object;
  #L56d882.  call temp:= `getClassLoader`(v1) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L56d888.  v1:= temp @kind object;
  #L56d88a.  v3:= "java.lang.Module" @kind object;
  #L56d88e.  call temp:= `loadClass`(v1, v3) @signature `Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;` @kind virtual;
  #L56d894.  v1:= temp @kind object;
  #L56d896.  v3:= "getDescriptor" @kind object;
  #L56d89a.  v4:= new `java.lang.Class`[v2];
  #L56d89e.  call temp:= `getDeclaredMethod`(v1, v3, v4) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L56d8a4.  v1:= temp @kind object;
  #L56d8a6.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L56d8ac.  v6:= temp @kind object;
  #L56d8ae.  call temp:= `getClassLoader`(v6) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L56d8b4.  v6:= temp @kind object;
  #L56d8b6.  v3:= "java.lang.module.ModuleDescriptor" @kind object;
  #L56d8ba.  call temp:= `loadClass`(v6, v3) @signature `Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;` @kind virtual;
  #L56d8c0.  v6:= temp @kind object;
  #L56d8c2.  v3:= "name" @kind object;
  #L56d8c6.  v2:= new `java.lang.Class`[v2];
  #L56d8ca.  call temp:= `getDeclaredMethod`(v6, v3, v2) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L56d8d0.  v6:= temp @kind object;
  #L56d8d2.  v2:= new `kotlin.coroutines.jvm.internal.a$a`;
  #L56d8d6.  call `<init>`(v2, v0, v1, v6) @signature `Lkotlin/coroutines/jvm/internal/a$a;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L56d8dc.  `@@kotlin.coroutines.jvm.internal.a.b` @type ^`kotlin.coroutines.jvm.internal.a$a` := v2 @kind object;
  #L56d8e0.  return v2 @kind object;
  #L56d8e2.  v6:= `@@kotlin.coroutines.jvm.internal.a.a` @type ^`kotlin.coroutines.jvm.internal.a$a` @kind object;
  #L56d8e6.  `@@kotlin.coroutines.jvm.internal.a.b` @type ^`kotlin.coroutines.jvm.internal.a$a` := v6 @kind object;
  #L56d8ea.  return v6 @kind object;
  catch `java.lang.Exception` @[L56d864..L56d8e0] goto L56d8e2;
}
procedure `java.lang.String` `b`(`kotlin.coroutines.jvm.internal.a` v5 @kind this, `kotlin.coroutines.jvm.internal.BaseContinuationImpl` v6 @kind object) @signature `Lkotlin/coroutines/jvm/internal/a;.b:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L56d7c8.  v0:= "continuation" @kind object;
  #L56d7cc.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56d7d2.  v0:= `@@kotlin.coroutines.jvm.internal.a.b` @type ^`kotlin.coroutines.jvm.internal.a$a` @kind object;
  #L56d7d6.  if v0 == 0 then goto L56d7dc;
  #L56d7da.  goto L56d7e4;
  #L56d7dc.  call temp:= `a`(v5, v6) @signature `Lkotlin/coroutines/jvm/internal/a;.a:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Lkotlin/coroutines/jvm/internal/a$a;` @kind direct;
  #L56d7e2.  v0:= temp @kind object;
  #L56d7e4.  v1:= `@@kotlin.coroutines.jvm.internal.a.a` @type ^`kotlin.coroutines.jvm.internal.a$a` @kind object;
  #L56d7e8.  v2:= 0I;
  #L56d7ea.  if v0 != v1 then goto L56d7f0;
  #L56d7ee.  return v2 @kind object;
  #L56d7f0.  v1:= v0.`kotlin.coroutines.jvm.internal.a$a.a` @type ^`java.lang.reflect.Method` @kind object;
  #L56d7f4.  if v1 == 0 then goto L56d852;
  #L56d7f8.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L56d7fe.  v6:= temp @kind object;
  #L56d800.  v3:= 0I;
  #L56d802.  v4:= new `java.lang.Object`[v3];
  #L56d806.  call temp:= `invoke`(v1, v6, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L56d80c.  v6:= temp @kind object;
  #L56d80e.  if v6 == 0 then goto L56d852;
  #L56d812.  v1:= v0.`kotlin.coroutines.jvm.internal.a$a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L56d816.  if v1 == 0 then goto L56d852;
  #L56d81a.  v4:= new `java.lang.Object`[v3];
  #L56d81e.  call temp:= `invoke`(v1, v6, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L56d824.  v6:= temp @kind object;
  #L56d826.  if v6 == 0 then goto L56d852;
  #L56d82a.  v0:= v0.`kotlin.coroutines.jvm.internal.a$a.c` @type ^`java.lang.reflect.Method` @kind object;
  #L56d82e.  if v0 == 0 then goto L56d840;
  #L56d832.  v1:= new `java.lang.Object`[v3];
  #L56d836.  call temp:= `invoke`(v0, v6, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L56d83c.  v6:= temp @kind object;
  #L56d83e.  goto L56d842;
  #L56d840.  v6:= v2 @kind object;
  #L56d842.  v0:= instanceof @variable v6 @type ^`java.lang.String` @kind boolean;
  #L56d846.  if v0 != 0 then goto L56d84c;
  #L56d84a.  goto L56d84e;
  #L56d84c.  v2:= v6 @kind object;
  #L56d84e.  v2:= (`java.lang.String`) v2 @kind object;
  #L56d852.  return v2 @kind object;
}
