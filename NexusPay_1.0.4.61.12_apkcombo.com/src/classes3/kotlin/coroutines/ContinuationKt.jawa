record `kotlin.coroutines.ContinuationKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlin.coroutines.Continuation` `createCoroutine`(`kotlin.jvm.functions.Function1` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/coroutines/ContinuationKt;.createCoroutine:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56c328.  v0:= "$this$createCoroutine" @kind object;
  #L56c32c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c332.  v0:= "completion" @kind object;
  #L56c336.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c33c.  v0:= new `kotlin.coroutines.SafeContinuation`;
  #L56c340.  call temp:= `createCoroutineUnintercepted`(v1, v2) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.createCoroutineUnintercepted:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L56c346.  v1:= temp @kind object;
  #L56c348.  call temp:= `intercepted`(v1) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L56c34e.  v1:= temp @kind object;
  #L56c350.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L56c356.  v2:= temp @kind object;
  #L56c358.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/SafeContinuation;.<init>:(Lkotlin/coroutines/Continuation;Ljava/lang/Object;)V` @kind direct;
  #L56c35e.  return v0 @kind object;
}
procedure `kotlin.coroutines.Continuation` `createCoroutine`(`kotlin.jvm.functions.Function2` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/coroutines/ContinuationKt;.createCoroutine:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56c370.  v0:= "$this$createCoroutine" @kind object;
  #L56c374.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c37a.  v0:= "completion" @kind object;
  #L56c37e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c384.  v0:= new `kotlin.coroutines.SafeContinuation`;
  #L56c388.  call temp:= `createCoroutineUnintercepted`(v1, v2, v3) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.createCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L56c38e.  v1:= temp @kind object;
  #L56c390.  call temp:= `intercepted`(v1) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L56c396.  v1:= temp @kind object;
  #L56c398.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L56c39e.  v2:= temp @kind object;
  #L56c3a0.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/SafeContinuation;.<init>:(Lkotlin/coroutines/Continuation;Ljava/lang/Object;)V` @kind direct;
  #L56c3a6.  return v0 @kind object;
}
procedure `void` `getCoroutineContext$annotations`() @signature `Lkotlin/coroutines/ContinuationKt;.getCoroutineContext$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L56c3b8.  return @kind void;
}
procedure `void` `startCoroutine`(`kotlin.jvm.functions.Function1` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/coroutines/ContinuationKt;.startCoroutine:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56c3cc.  v0:= "$this$startCoroutine" @kind object;
  #L56c3d0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c3d6.  v0:= "completion" @kind object;
  #L56c3da.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c3e0.  call temp:= `createCoroutineUnintercepted`(v1, v2) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.createCoroutineUnintercepted:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L56c3e6.  v1:= temp @kind object;
  #L56c3e8.  call temp:= `intercepted`(v1) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L56c3ee.  v1:= temp @kind object;
  #L56c3f0.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L56c3f4.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L56c3f8.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L56c3fe.  v2:= temp @kind object;
  #L56c400.  call `resumeWith`(v1, v2) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L56c406.  return @kind void;
}
procedure `void` `startCoroutine`(`kotlin.jvm.functions.Function2` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/coroutines/ContinuationKt;.startCoroutine:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56c418.  v0:= "$this$startCoroutine" @kind object;
  #L56c41c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c422.  v0:= "completion" @kind object;
  #L56c426.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c42c.  call temp:= `createCoroutineUnintercepted`(v1, v2, v3) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.createCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L56c432.  v1:= temp @kind object;
  #L56c434.  call temp:= `intercepted`(v1) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L56c43a.  v1:= temp @kind object;
  #L56c43c.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L56c440.  v3:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L56c444.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L56c44a.  v2:= temp @kind object;
  #L56c44c.  call `resumeWith`(v1, v2) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L56c452.  return @kind void;
}
