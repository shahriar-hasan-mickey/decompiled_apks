record `kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.RestrictedContinuationImpl` @kind class {
  `int` `kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.a` @AccessFlag PRIVATE;
  `kotlin.jvm.functions.Function1` `kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1;.<init>:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L56cb44.  v0.`kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.b` @type ^`kotlin.jvm.functions.Function1` := v1 @kind object;
  #L56cb48.  call `<init>`(v0, v3) @signature `Lkotlin/coroutines/jvm/internal/RestrictedContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L56cb4e.  return @kind void;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L56cae8.  v0:= v2.`kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.a` @type ^`int`;
  #L56caec.  v1:= 1I;
  #L56caee.  if v0 == 0 then goto L56cb1c;
  #L56caf2.  if v0 != v1 then goto L56cb04;
  #L56caf6.  v0:= 2I;
  #L56caf8.  v2.`kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.a` @type ^`int` := v0;
  #L56cafc.  call `throwOnFailure`(v3) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L56cb02.  goto L56cb32;
  #L56cb04.  v3:= new `java.lang.IllegalStateException`;
  #L56cb08.  v0:= "This coroutine had already completed" @kind object;
  #L56cb0c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L56cb12.  v0:= temp @kind object;
  #L56cb14.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56cb1a.  throw v3;
  #L56cb1c.  v2.`kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.a` @type ^`int` := v1;
  #L56cb20.  call `throwOnFailure`(v3) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L56cb26.  v3:= v2.`kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.b` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L56cb2a.  call temp:= `invoke`(v3, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56cb30.  v3:= temp @kind object;
  #L56cb32.  return v3 @kind object;
}
