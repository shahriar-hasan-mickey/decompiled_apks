record `kotlin.coroutines.CoroutineContext$Element$DefaultImpls` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `fold`(`kotlin.coroutines.CoroutineContext$Element` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.fold:(Lkotlin/coroutines/CoroutineContext$Element;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L56c49c.  v0:= "operation" @kind object;
  #L56c4a0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c4a6.  call temp:= `invoke`(v3, v2, v1) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56c4ac.  v1:= temp @kind object;
  #L56c4ae.  return v1 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlin.coroutines.CoroutineContext$Element` v1 @kind object, `kotlin.coroutines.CoroutineContext$Key` v2 @kind object) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.get:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L56c518.  v0:= "key" @kind object;
  #L56c51c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c522.  call temp:= `getKey`(v1) @signature `Lkotlin/coroutines/CoroutineContext$Element;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @kind interface;
  #L56c528.  v0:= temp @kind object;
  #L56c52a.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L56c530.  v2:= temp;
  #L56c532.  if v2 == 0 then goto L56c54c;
  #L56c536.  if v1 == 0 then goto L56c53c;
  #L56c53a.  goto L56c54e;
  #L56c53c.  v1:= new `java.lang.NullPointerException`;
  #L56c540.  v2:= "null cannot be cast to non-null type E" @kind object;
  #L56c544.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56c54a.  throw v1;
  #L56c54c.  v1:= 0I;
  #L56c54e.  return v1 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlin.coroutines.CoroutineContext$Element` v1 @kind object, `kotlin.coroutines.CoroutineContext$Key` v2 @kind object) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.minusKey:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L56c4c0.  v0:= "key" @kind object;
  #L56c4c4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c4ca.  call temp:= `getKey`(v1) @signature `Lkotlin/coroutines/CoroutineContext$Element;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @kind interface;
  #L56c4d0.  v0:= temp @kind object;
  #L56c4d2.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L56c4d8.  v2:= temp;
  #L56c4da.  if v2 == 0 then goto L56c4e2;
  #L56c4de.  v1:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L56c4e2.  return v1 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `plus`(`kotlin.coroutines.CoroutineContext$Element` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.plus:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L56c4f4.  v0:= "context" @kind object;
  #L56c4f8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c4fe.  call temp:= `plus`(v1, v2) @signature `Lkotlin/coroutines/CoroutineContext$DefaultImpls;.plus:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L56c504.  v1:= temp @kind object;
  #L56c506.  return v1 @kind object;
}
