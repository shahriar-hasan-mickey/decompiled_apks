record `kotlin.coroutines.CoroutineContext$DefaultImpls$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
}
global `kotlin.coroutines.CoroutineContext$DefaultImpls$a` `@@kotlin.coroutines.CoroutineContext$DefaultImpls$a.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/coroutines/CoroutineContext$DefaultImpls$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L56c620.  v0:= new `kotlin.coroutines.CoroutineContext$DefaultImpls$a`;
  #L56c624.  call `<init>`(v0) @signature `Lkotlin/coroutines/CoroutineContext$DefaultImpls$a;.<init>:()V` @kind direct;
  #L56c62a.  `@@kotlin.coroutines.CoroutineContext$DefaultImpls$a.a` @type ^`kotlin.coroutines.CoroutineContext$DefaultImpls$a` := v0 @kind object;
  #L56c62e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.coroutines.CoroutineContext$DefaultImpls$a` v1 @kind this) @signature `Lkotlin/coroutines/CoroutineContext$DefaultImpls$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L56c640.  v0:= 2I;
  #L56c642.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L56c648.  return @kind void;
}
procedure `kotlin.coroutines.CoroutineContext` `a`(`kotlin.coroutines.CoroutineContext$DefaultImpls$a` v3 @kind this, `kotlin.coroutines.CoroutineContext` v4 @kind object, `kotlin.coroutines.CoroutineContext$Element` v5 @kind object) @signature `Lkotlin/coroutines/CoroutineContext$DefaultImpls$a;.a:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext$Element;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L56c584.  v0:= "acc" @kind object;
  #L56c588.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c58e.  v0:= "element" @kind object;
  #L56c592.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56c598.  call temp:= `getKey`(v5) @signature `Lkotlin/coroutines/CoroutineContext$Element;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @kind interface;
  #L56c59e.  v0:= temp @kind object;
  #L56c5a0.  call temp:= `minusKey`(v4, v0) @signature `Lkotlin/coroutines/CoroutineContext;.minusKey:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L56c5a6.  v4:= temp @kind object;
  #L56c5a8.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L56c5ac.  if v4 != v0 then goto L56c5b2;
  #L56c5b0.  goto L56c60c;
  #L56c5b2.  v0:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L56c5b6.  call temp:= `get`(v4, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L56c5bc.  v0:= temp @kind object;
  #L56c5be.  v0:= (`kotlin.coroutines.ContinuationInterceptor`) v0 @kind object;
  #L56c5c2.  if v0 != 0 then goto L56c5d4;
  #L56c5c6.  v0:= new `kotlin.coroutines.CombinedContext`;
  #L56c5ca.  call `<init>`(v0, v4, v5) @signature `Lkotlin/coroutines/CombinedContext;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext$Element;)V` @kind direct;
  #L56c5d0.  v5:= v0 @kind object;
  #L56c5d2.  goto L56c60c;
  #L56c5d4.  v1:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L56c5d8.  call temp:= `minusKey`(v4, v1) @signature `Lkotlin/coroutines/CoroutineContext;.minusKey:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L56c5de.  v4:= temp @kind object;
  #L56c5e0.  v1:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L56c5e4.  if v4 != v1 then goto L56c5f6;
  #L56c5e8.  v4:= new `kotlin.coroutines.CombinedContext`;
  #L56c5ec.  call `<init>`(v4, v5, v0) @signature `Lkotlin/coroutines/CombinedContext;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext$Element;)V` @kind direct;
  #L56c5f2.  v5:= v4 @kind object;
  #L56c5f4.  goto L56c60c;
  #L56c5f6.  v1:= new `kotlin.coroutines.CombinedContext`;
  #L56c5fa.  v2:= new `kotlin.coroutines.CombinedContext`;
  #L56c5fe.  call `<init>`(v2, v4, v5) @signature `Lkotlin/coroutines/CombinedContext;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext$Element;)V` @kind direct;
  #L56c604.  call `<init>`(v1, v2, v0) @signature `Lkotlin/coroutines/CombinedContext;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext$Element;)V` @kind direct;
  #L56c60a.  v5:= v1 @kind object;
  #L56c60c.  return v5 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.coroutines.CoroutineContext$DefaultImpls$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/coroutines/CoroutineContext$DefaultImpls$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L56c560.  v1:= (`kotlin.coroutines.CoroutineContext`) v1 @kind object;
  #L56c564.  v2:= (`kotlin.coroutines.CoroutineContext$Element`) v2 @kind object;
  #L56c568.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/coroutines/CoroutineContext$DefaultImpls$a;.a:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext$Element;)Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L56c56e.  v1:= temp @kind object;
  #L56c570.  return v1 @kind object;
}
