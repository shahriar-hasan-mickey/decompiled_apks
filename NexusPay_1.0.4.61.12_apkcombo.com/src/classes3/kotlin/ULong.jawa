record `kotlin.ULong` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Comparable` @kind interface {
  `long` `kotlin.ULong.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.ULong$Companion` `@@kotlin.ULong.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.ULong.MAX_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.ULong.MIN_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.ULong.SIZE_BITS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.ULong.SIZE_BYTES` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/ULong;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L530fa8.  v0:= new `kotlin.ULong$Companion`;
  #L530fac.  v1:= 0I;
  #L530fae.  call `<init>`(v0, v1) @signature `Lkotlin/ULong$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L530fb4.  `@@kotlin.ULong.Companion` @type ^`kotlin.ULong$Companion` := v0 @kind object;
  #L530fb8.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ULong` v0 @kind this, `long` v1 ) @signature `Lkotlin/ULong;.<init>:(J)V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L530fcc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L530fd2.  v0.`kotlin.ULong.a` @type ^`long` := v1 @kind wide;
  #L530fd6.  return @kind void;
}
procedure `int` `a`(`kotlin.ULong` v2 @kind this, `long` v3 ) @signature `Lkotlin/ULong;.a:(J)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L530ea8.  v0:= v2.`kotlin.ULong.a` @type ^`long` @kind wide;
  #L530eac.  call temp:= `b`(v0, v3) @signature `Lkotlin/ULong;.b:(JJ)I` @kind static;
  #L530eb2.  v3:= temp;
  #L530eb4.  return v3;
}
procedure `int` `b`(`long` v0 , `long` v2 ) @signature `Lkotlin/ULong;.b:(JJ)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L530ec8.  call temp:= `ulongCompare`(v0, v2) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L530ece.  v0:= temp;
  #L530ed0.  return v0;
}
procedure `kotlin.ULong` `box-impl`(`long` v1 ) @signature `Lkotlin/ULong;.box-impl:(J)Lkotlin/ULong;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L530f60.  v0:= new `kotlin.ULong`;
  #L530f64.  call `<init>`(v0, v1) @signature `Lkotlin/ULong;.<init>:(J)V` @kind direct;
  #L530f6a.  return v0 @kind object;
}
procedure `long` `constructor-impl`(`long` v0 ) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;

  #L530f7c.  return v0 @kind wide;
}
procedure `boolean` `equals-impl`(`long` v2 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/ULong;.equals-impl:(JLjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L530e2c.  v0:= instanceof @variable v4 @type ^`kotlin.ULong` @kind boolean;
  #L530e30.  if v0 == 0 then goto L530e4c;
  #L530e34.  v4:= (`kotlin.ULong`) v4 @kind object;
  #L530e38.  call temp:= `unbox-impl`(v4) @signature `Lkotlin/ULong;.unbox-impl:()J` @kind virtual;
  #L530e3e.  v0:= temp @kind wide;
  #L530e40.  v4:= lcmp(v2, v0);
  #L530e44.  if v4 != 0 then goto L530e4c;
  #L530e48.  v2:= 1I;
  #L530e4a.  return v2;
  #L530e4c.  v2:= 0I;
  #L530e4e.  return v2;
}
procedure `boolean` `equals-impl0`(`long` v1 , `long` v3 ) @signature `Lkotlin/ULong;.equals-impl0:(JJ)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L530e60.  v0:= lcmp(v1, v3);
  #L530e64.  if v0 != 0 then goto L530e6c;
  #L530e68.  v1:= 1I;
  #L530e6a.  goto L530e6e;
  #L530e6c.  v1:= 0I;
  #L530e6e.  return v1;
}
procedure `void` `getData$annotations`() @signature `Lkotlin/ULong;.getData$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L530fe8.  return @kind void;
}
procedure `int` `hashCode-impl`(`long` v2 ) @signature `Lkotlin/ULong;.hashCode-impl:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L530f04.  v0:= 32I;
  #L530f08.  v0:= v2 ^>> v0 @kind long;
  #L530f0c.  v2:= v2 ^~ v0 @kind long;
  #L530f0e.  v3:= (`int`) v2 @kind l2i;
  #L530f10.  return v3;
}
procedure `java.lang.String` `toString-impl`(`long` v0 ) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L530f44.  call temp:= `ulongToString`(v0) @signature `Lkotlin/UnsignedKt;.ulongToString:(J)Ljava/lang/String;` @kind static;
  #L530f4a.  v0:= temp @kind object;
  #L530f4c.  return v0 @kind object;
}
procedure `int` `compareTo`(`kotlin.ULong` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/ULong;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L530e80.  v3:= (`kotlin.ULong`) v3 @kind object;
  #L530e84.  call temp:= `unbox-impl`(v3) @signature `Lkotlin/ULong;.unbox-impl:()J` @kind virtual;
  #L530e8a.  v0:= temp @kind wide;
  #L530e8c.  call temp:= `a`(v2, v0) @signature `Lkotlin/ULong;.a:(J)I` @kind direct;
  #L530e92.  v3:= temp;
  #L530e94.  return v3;
}
procedure `boolean` `equals`(`kotlin.ULong` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/ULong;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L530e0c.  v0:= v2.`kotlin.ULong.a` @type ^`long` @kind wide;
  #L530e10.  call temp:= `equals-impl`(v0, v3) @signature `Lkotlin/ULong;.equals-impl:(JLjava/lang/Object;)Z` @kind static;
  #L530e16.  v3:= temp;
  #L530e18.  return v3;
}
procedure `int` `hashCode`(`kotlin.ULong` v2 @kind this) @signature `Lkotlin/ULong;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L530ee4.  v0:= v2.`kotlin.ULong.a` @type ^`long` @kind wide;
  #L530ee8.  call temp:= `hashCode-impl`(v0) @signature `Lkotlin/ULong;.hashCode-impl:(J)I` @kind static;
  #L530eee.  v0:= temp;
  #L530ef0.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.ULong` v2 @kind this) @signature `Lkotlin/ULong;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L530f24.  v0:= v2.`kotlin.ULong.a` @type ^`long` @kind wide;
  #L530f28.  call temp:= `toString-impl`(v0) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L530f2e.  v0:= temp @kind object;
  #L530f30.  return v0 @kind object;
}
procedure `long` `unbox-impl`(`kotlin.ULong` v2 @kind this) @signature `Lkotlin/ULong;.unbox-impl:()J` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L530f90.  v0:= v2.`kotlin.ULong.a` @type ^`long` @kind wide;
  #L530f94.  return v0 @kind wide;
}
