record `kotlin.concurrent.TimersKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.util.Timer` `timer`(`java.lang.String` v1 @kind object, `boolean` v2 ) @signature `Lkotlin/concurrent/TimersKt;.timer:(Ljava/lang/String;Z)Ljava/util/Timer;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L56b950.  if v1 != 0 then goto L56b960;
  #L56b954.  v1:= new `java.util.Timer`;
  #L56b958.  call `<init>`(v1, v2) @signature `Ljava/util/Timer;.<init>:(Z)V` @kind direct;
  #L56b95e.  goto L56b96c;
  #L56b960.  v0:= new `java.util.Timer`;
  #L56b964.  call `<init>`(v0, v1, v2) @signature `Ljava/util/Timer;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L56b96a.  v1:= v0 @kind object;
  #L56b96c.  return v1 @kind object;
}
