record `kotlin.io.FileTreeWalk$b$b` @kind class @AccessFlag FINAL extends `kotlin.io.FileTreeWalk$c` @kind class {
  `boolean` `kotlin.io.FileTreeWalk$b$b.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk$b$b` v0 @kind this, `kotlin.io.FileTreeWalk$b` v1 @kind object, `java.io.File` v2 @kind object) @signature `Lkotlin/io/FileTreeWalk$b$b;.<init>:(Lkotlin/io/FileTreeWalk$b;Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L56f118.  v1:= "rootFile" @kind object;
  #L56f11c.  call `checkNotNullParameter`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56f122.  call `<init>`(v0, v2) @signature `Lkotlin/io/FileTreeWalk$c;.<init>:(Ljava/io/File;)V` @kind direct;
  #L56f128.  v1:= `@@kotlin._Assertions.ENABLED` @type ^`boolean` @kind boolean;
  #L56f12c.  if v1 == 0 then goto L56f156;
  #L56f130.  call temp:= `isFile`(v2) @signature `Ljava/io/File;.isFile:()Z` @kind virtual;
  #L56f136.  v1:= temp;
  #L56f138.  v2:= `@@kotlin._Assertions.ENABLED` @type ^`boolean` @kind boolean;
  #L56f13c.  if v2 == 0 then goto L56f156;
  #L56f140.  if v1 == 0 then goto L56f146;
  #L56f144.  goto L56f156;
  #L56f146.  v1:= new `java.lang.AssertionError`;
  #L56f14a.  v2:= "rootFile must be verified to be file beforehand." @kind object;
  #L56f14e.  call `<init>`(v1, v2) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L56f154.  throw v1;
  #L56f156.  return @kind void;
}
procedure `java.io.File` `b`(`kotlin.io.FileTreeWalk$b$b` v1 @kind this) @signature `Lkotlin/io/FileTreeWalk$b$b;.b:()Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56f0ec.  v0:= v1.`kotlin.io.FileTreeWalk$b$b.b` @type ^`boolean` @kind boolean;
  #L56f0f0.  if v0 == 0 then goto L56f0f8;
  #L56f0f4.  v0:= 0I;
  #L56f0f6.  return v0 @kind object;
  #L56f0f8.  v0:= 1I;
  #L56f0fa.  v1.`kotlin.io.FileTreeWalk$b$b.b` @type ^`boolean` := v0 @kind boolean;
  #L56f0fe.  call temp:= `a`(v1) @signature `Lkotlin/io/FileTreeWalk$c;.a:()Ljava/io/File;` @kind virtual;
  #L56f104.  v0:= temp @kind object;
  #L56f106.  return v0 @kind object;
}
