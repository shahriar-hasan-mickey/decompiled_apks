record `kotlin.io.FileTreeWalk$b$c` @kind class @AccessFlag FINAL extends `kotlin.io.FileTreeWalk$a` @kind class {
  `boolean` `kotlin.io.FileTreeWalk$b$c.b` @AccessFlag PRIVATE;
  `java.io.File`[] `kotlin.io.FileTreeWalk$b$c.c` @AccessFlag PRIVATE;
  `int` `kotlin.io.FileTreeWalk$b$c.d` @AccessFlag PRIVATE;
  `kotlin.io.FileTreeWalk$b` `kotlin.io.FileTreeWalk$b$c.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk$b$c` v1 @kind this, `kotlin.io.FileTreeWalk$b` v2 @kind object, `java.io.File` v3 @kind object) @signature `Lkotlin/io/FileTreeWalk$b$c;.<init>:(Lkotlin/io/FileTreeWalk$b;Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L56f2cc.  v0:= "rootDir" @kind object;
  #L56f2d0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56f2d6.  v1.`kotlin.io.FileTreeWalk$b$c.e` @type ^`kotlin.io.FileTreeWalk$b` := v2 @kind object;
  #L56f2da.  call `<init>`(v1, v3) @signature `Lkotlin/io/FileTreeWalk$a;.<init>:(Ljava/io/File;)V` @kind direct;
  #L56f2e0.  return @kind void;
}
procedure `java.io.File` `b`(`kotlin.io.FileTreeWalk$b$c` v10 @kind this) @signature `Lkotlin/io/FileTreeWalk$b$c;.b:()Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L56f168.  v0:= v10.`kotlin.io.FileTreeWalk$b$c.b` @type ^`boolean` @kind boolean;
  #L56f16c.  v1:= 0I;
  #L56f16e.  if v0 != 0 then goto L56f1b8;
  #L56f172.  v0:= v10.`kotlin.io.FileTreeWalk$b$c.e` @type ^`kotlin.io.FileTreeWalk$b` @kind object;
  #L56f176.  v0:= v0.`kotlin.io.FileTreeWalk$b.d` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L56f17a.  call temp:= `access$getOnEnter$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnEnter$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L56f180.  v0:= temp @kind object;
  #L56f182.  if v0 == 0 then goto L56f1a8;
  #L56f186.  call temp:= `a`(v10) @signature `Lkotlin/io/FileTreeWalk$c;.a:()Ljava/io/File;` @kind virtual;
  #L56f18c.  v2:= temp @kind object;
  #L56f18e.  call temp:= `invoke`(v0, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56f194.  v0:= temp @kind object;
  #L56f196.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L56f19a.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L56f1a0.  v0:= temp;
  #L56f1a2.  if v0 != 0 then goto L56f1a8;
  #L56f1a6.  return v1 @kind object;
  #L56f1a8.  v0:= 1I;
  #L56f1aa.  v10.`kotlin.io.FileTreeWalk$b$c.b` @type ^`boolean` := v0 @kind boolean;
  #L56f1ae.  call temp:= `a`(v10) @signature `Lkotlin/io/FileTreeWalk$c;.a:()Ljava/io/File;` @kind virtual;
  #L56f1b4.  v0:= temp @kind object;
  #L56f1b6.  return v0 @kind object;
  #L56f1b8.  v0:= v10.`kotlin.io.FileTreeWalk$b$c.c` @type ^`java.io.File`[] @kind object;
  #L56f1bc.  if v0 == 0 then goto L56f1fc;
  #L56f1c0.  v2:= v10.`kotlin.io.FileTreeWalk$b$c.d` @type ^`int`;
  #L56f1c4.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L56f1ca.  v0:= length @variable v0;
  #L56f1cc.  if v2 >= v0 then goto L56f1d2;
  #L56f1d0.  goto L56f1fc;
  #L56f1d2.  v0:= v10.`kotlin.io.FileTreeWalk$b$c.e` @type ^`kotlin.io.FileTreeWalk$b` @kind object;
  #L56f1d6.  v0:= v0.`kotlin.io.FileTreeWalk$b.d` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L56f1da.  call temp:= `access$getOnLeave$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnLeave$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L56f1e0.  v0:= temp @kind object;
  #L56f1e2.  if v0 == 0 then goto L56f1fa;
  #L56f1e6.  call temp:= `a`(v10) @signature `Lkotlin/io/FileTreeWalk$c;.a:()Ljava/io/File;` @kind virtual;
  #L56f1ec.  v2:= temp @kind object;
  #L56f1ee.  call temp:= `invoke`(v0, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56f1f4.  v0:= temp @kind object;
  #L56f1f6.  v0:= (`kotlin.Unit`) v0 @kind object;
  #L56f1fa.  return v1 @kind object;
  #L56f1fc.  v0:= v10.`kotlin.io.FileTreeWalk$b$c.c` @type ^`java.io.File`[] @kind object;
  #L56f200.  if v0 != 0 then goto L56f2a0;
  #L56f204.  call temp:= `a`(v10) @signature `Lkotlin/io/FileTreeWalk$c;.a:()Ljava/io/File;` @kind virtual;
  #L56f20a.  v0:= temp @kind object;
  #L56f20c.  call temp:= `listFiles`(v0) @signature `Ljava/io/File;.listFiles:()[Ljava/io/File;` @kind virtual;
  #L56f212.  v0:= temp @kind object;
  #L56f214.  v10.`kotlin.io.FileTreeWalk$b$c.c` @type ^`java.io.File`[] := v0 @kind object;
  #L56f218.  if v0 != 0 then goto L56f262;
  #L56f21c.  v0:= v10.`kotlin.io.FileTreeWalk$b$c.e` @type ^`kotlin.io.FileTreeWalk$b` @kind object;
  #L56f220.  v0:= v0.`kotlin.io.FileTreeWalk$b.d` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L56f224.  call temp:= `access$getOnFail$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnFail$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function2;` @kind static;
  #L56f22a.  v0:= temp @kind object;
  #L56f22c.  if v0 == 0 then goto L56f262;
  #L56f230.  call temp:= `a`(v10) @signature `Lkotlin/io/FileTreeWalk$c;.a:()Ljava/io/File;` @kind virtual;
  #L56f236.  v2:= temp @kind object;
  #L56f238.  v9:= new `kotlin.io.AccessDeniedException`;
  #L56f23c.  call temp:= `a`(v10) @signature `Lkotlin/io/FileTreeWalk$c;.a:()Ljava/io/File;` @kind virtual;
  #L56f242.  v4:= temp @kind object;
  #L56f244.  v5:= 0I;
  #L56f246.  v7:= 2I;
  #L56f248.  v8:= 0I;
  #L56f24a.  v6:= "Cannot list files in a directory" @kind object;
  #L56f24e.  v3:= v9 @kind object;
  #L56f250.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lkotlin/io/AccessDeniedException;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L56f256.  call temp:= `invoke`(v0, v2, v9) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56f25c.  v0:= temp @kind object;
  #L56f25e.  v0:= (`kotlin.Unit`) v0 @kind object;
  #L56f262.  v0:= v10.`kotlin.io.FileTreeWalk$b$c.c` @type ^`java.io.File`[] @kind object;
  #L56f266.  if v0 == 0 then goto L56f276;
  #L56f26a.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L56f270.  v0:= length @variable v0;
  #L56f272.  if v0 != 0 then goto L56f2a0;
  #L56f276.  v0:= v10.`kotlin.io.FileTreeWalk$b$c.e` @type ^`kotlin.io.FileTreeWalk$b` @kind object;
  #L56f27a.  v0:= v0.`kotlin.io.FileTreeWalk$b.d` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L56f27e.  call temp:= `access$getOnLeave$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnLeave$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L56f284.  v0:= temp @kind object;
  #L56f286.  if v0 == 0 then goto L56f29e;
  #L56f28a.  call temp:= `a`(v10) @signature `Lkotlin/io/FileTreeWalk$c;.a:()Ljava/io/File;` @kind virtual;
  #L56f290.  v2:= temp @kind object;
  #L56f292.  call temp:= `invoke`(v0, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L56f298.  v0:= temp @kind object;
  #L56f29a.  v0:= (`kotlin.Unit`) v0 @kind object;
  #L56f29e.  return v1 @kind object;
  #L56f2a0.  v0:= v10.`kotlin.io.FileTreeWalk$b$c.c` @type ^`java.io.File`[] @kind object;
  #L56f2a4.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L56f2aa.  v1:= v10.`kotlin.io.FileTreeWalk$b$c.d` @type ^`int`;
  #L56f2ae.  v2:= v1 + 1;
  #L56f2b2.  v10.`kotlin.io.FileTreeWalk$b$c.d` @type ^`int` := v2;
  #L56f2b6.  v0:= v0[v1] @kind object;
  #L56f2ba.  return v0 @kind object;
}
