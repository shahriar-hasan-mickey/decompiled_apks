record `kotlin.io.LineReader` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlin.io.LineReader` `@@kotlin.io.LineReader.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.CharsetDecoder` `@@kotlin.io.LineReader.a` @AccessFlag PRIVATE_STATIC;
global `boolean` `@@kotlin.io.LineReader.b` @AccessFlag PRIVATE_STATIC;
global `byte`[] `@@kotlin.io.LineReader.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `char`[] `@@kotlin.io.LineReader.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.ByteBuffer` `@@kotlin.io.LineReader.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.CharBuffer` `@@kotlin.io.LineReader.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.StringBuilder` `@@kotlin.io.LineReader.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/io/LineReader;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L57160c.  v0:= new `kotlin.io.LineReader`;
  #L571610.  call `<init>`(v0) @signature `Lkotlin/io/LineReader;.<init>:()V` @kind direct;
  #L571616.  `@@kotlin.io.LineReader.INSTANCE` @type ^`kotlin.io.LineReader` := v0 @kind object;
  #L57161a.  v0:= 32I;
  #L57161e.  v1:= new `byte`[v0];
  #L571622.  `@@kotlin.io.LineReader.c` @type ^`byte`[] := v1 @kind object;
  #L571626.  v0:= new `char`[v0];
  #L57162a.  `@@kotlin.io.LineReader.d` @type ^`char`[] := v0 @kind object;
  #L57162e.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L571634.  v0:= temp @kind object;
  #L571636.  v1:= "ByteBuffer.wrap(bytes)" @kind object;
  #L57163a.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L571640.  `@@kotlin.io.LineReader.e` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L571644.  v0:= `@@kotlin.io.LineReader.d` @type ^`char`[] @kind object;
  #L571648.  call temp:= `wrap`(v0) @signature `Ljava/nio/CharBuffer;.wrap:([C)Ljava/nio/CharBuffer;` @kind static;
  #L57164e.  v0:= temp @kind object;
  #L571650.  v1:= "CharBuffer.wrap(chars)" @kind object;
  #L571654.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L57165a.  `@@kotlin.io.LineReader.f` @type ^`java.nio.CharBuffer` := v0 @kind object;
  #L57165e.  v0:= new `java.lang.StringBuilder`;
  #L571662.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L571668.  `@@kotlin.io.LineReader.g` @type ^`java.lang.StringBuilder` := v0 @kind object;
  #L57166c.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.LineReader` v0 @kind this) @signature `Lkotlin/io/LineReader;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L571680.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L571686.  return @kind void;
}
procedure `int` `a`(`kotlin.io.LineReader` v3 @kind this) @signature `Lkotlin/io/LineReader;.a:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L5712d0.  v0:= `@@kotlin.io.LineReader.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L5712d4.  call temp:= `compact`(v0) @signature `Ljava/nio/ByteBuffer;.compact:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L5712da.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L5712e0.  v1:= temp;
  #L5712e2.  v2:= 0I;
  #L5712e4.  call temp:= `position`(v0, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L5712ea.  return v1;
}
procedure `java.nio.charset.CharsetDecoder` `access$getDecoder$p`(`kotlin.io.LineReader` v1 @kind object) @signature `Lkotlin/io/LineReader;.access$getDecoder$p:(Lkotlin/io/LineReader;)Ljava/nio/charset/CharsetDecoder;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L5715e8.  v1:= `@@kotlin.io.LineReader.a` @type ^`java.nio.charset.CharsetDecoder` @kind object;
  #L5715ec.  if v1 != 0 then goto L5715fa;
  #L5715f0.  v0:= "decoder" @kind object;
  #L5715f4.  call `throwUninitializedPropertyAccessException`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L5715fa.  return v1 @kind object;
}
procedure `void` `access$setDecoder$p`(`kotlin.io.LineReader` v0 @kind object, `java.nio.charset.CharsetDecoder` v1 @kind object) @signature `Lkotlin/io/LineReader;.access$setDecoder$p:(Lkotlin/io/LineReader;Ljava/nio/charset/CharsetDecoder;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L571698.  `@@kotlin.io.LineReader.a` @type ^`java.nio.charset.CharsetDecoder` := v1 @kind object;
  #L57169c.  return @kind void;
}
procedure `int` `b`(`kotlin.io.LineReader` v4 @kind this, `boolean` v5 ) @signature `Lkotlin/io/LineReader;.b:(Z)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5712fc.  v0:= `@@kotlin.io.LineReader.a` @type ^`java.nio.charset.CharsetDecoder` @kind object;
  #L571300.  if v0 != 0 then goto L57130e;
  #L571304.  v1:= "decoder" @kind object;
  #L571308.  call `throwUninitializedPropertyAccessException`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L57130e.  v1:= `@@kotlin.io.LineReader.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L571312.  v2:= `@@kotlin.io.LineReader.f` @type ^`java.nio.CharBuffer` @kind object;
  #L571316.  call temp:= `decode`(v0, v1, v2, v5) @signature `Ljava/nio/charset/CharsetDecoder;.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;` @kind virtual;
  #L57131c.  v0:= temp @kind object;
  #L57131e.  v1:= "decoder.decode(byteBuf, charBuf, endOfInput)" @kind object;
  #L571322.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L571328.  call temp:= `isError`(v0) @signature `Ljava/nio/charset/CoderResult;.isError:()Z` @kind virtual;
  #L57132e.  v1:= temp;
  #L571330.  if v1 == 0 then goto L571340;
  #L571334.  call `d`(v4) @signature `Lkotlin/io/LineReader;.d:()V` @kind direct;
  #L57133a.  call `throwException`(v0) @signature `Ljava/nio/charset/CoderResult;.throwException:()V` @kind virtual;
  #L571340.  v1:= `@@kotlin.io.LineReader.f` @type ^`java.nio.CharBuffer` @kind object;
  #L571344.  call temp:= `position`(v1) @signature `Ljava/nio/CharBuffer;.position:()I` @kind virtual;
  #L57134a.  v1:= temp;
  #L57134c.  call temp:= `isOverflow`(v0) @signature `Ljava/nio/charset/CoderResult;.isOverflow:()Z` @kind virtual;
  #L571352.  v0:= temp;
  #L571354.  if v0 != 0 then goto L57135a;
  #L571358.  return v1;
  #L57135a.  v0:= `@@kotlin.io.LineReader.g` @type ^`java.lang.StringBuilder` @kind object;
  #L57135e.  v2:= `@@kotlin.io.LineReader.d` @type ^`char`[] @kind object;
  #L571362.  v1:= v1 + -1;
  #L571366.  v3:= 0I;
  #L571368.  call temp:= `append`(v0, v2, v3, v1) @signature `Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;` @kind virtual;
  #L57136e.  v0:= `@@kotlin.io.LineReader.f` @type ^`java.nio.CharBuffer` @kind object;
  #L571372.  call temp:= `position`(v0, v3) @signature `Ljava/nio/CharBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L571378.  v0:= `@@kotlin.io.LineReader.f` @type ^`java.nio.CharBuffer` @kind object;
  #L57137c.  v2:= 32I;
  #L571380.  call temp:= `limit`(v0, v2) @signature `Ljava/nio/CharBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L571386.  v0:= `@@kotlin.io.LineReader.f` @type ^`java.nio.CharBuffer` @kind object;
  #L57138a.  v2:= `@@kotlin.io.LineReader.d` @type ^`char`[] @kind object;
  #L57138e.  v1:= v2[v1] @kind char;
  #L571392.  call temp:= `put`(v0, v1) @signature `Ljava/nio/CharBuffer;.put:(C)Ljava/nio/CharBuffer;` @kind virtual;
  #L571398.  goto L5712fc;
}
procedure `int` `c`(`kotlin.io.LineReader` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lkotlin/io/LineReader;.c:(II)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L5713ac.  v0:= `@@kotlin.io.LineReader.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L5713b0.  call temp:= `limit`(v0, v2) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L5713b6.  v2:= `@@kotlin.io.LineReader.f` @type ^`java.nio.CharBuffer` @kind object;
  #L5713ba.  call temp:= `position`(v2, v3) @signature `Ljava/nio/CharBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L5713c0.  v2:= 1I;
  #L5713c2.  call temp:= `b`(v1, v2) @signature `Lkotlin/io/LineReader;.b:(Z)I` @kind direct;
  #L5713c8.  v2:= temp;
  #L5713ca.  v3:= `@@kotlin.io.LineReader.a` @type ^`java.nio.charset.CharsetDecoder` @kind object;
  #L5713ce.  if v3 != 0 then goto L5713dc;
  #L5713d2.  v0:= "decoder" @kind object;
  #L5713d6.  call `throwUninitializedPropertyAccessException`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L5713dc.  call temp:= `reset`(v3) @signature `Ljava/nio/charset/CharsetDecoder;.reset:()Ljava/nio/charset/CharsetDecoder;` @kind virtual;
  #L5713e2.  v3:= `@@kotlin.io.LineReader.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L5713e6.  v0:= 0I;
  #L5713e8.  call temp:= `position`(v3, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L5713ee.  return v2;
}
procedure `void` `d`(`kotlin.io.LineReader` v2 @kind this) @signature `Lkotlin/io/LineReader;.d:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L5716b0.  v0:= `@@kotlin.io.LineReader.a` @type ^`java.nio.charset.CharsetDecoder` @kind object;
  #L5716b4.  if v0 != 0 then goto L5716c2;
  #L5716b8.  v1:= "decoder" @kind object;
  #L5716bc.  call `throwUninitializedPropertyAccessException`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L5716c2.  call temp:= `reset`(v0) @signature `Ljava/nio/charset/CharsetDecoder;.reset:()Ljava/nio/charset/CharsetDecoder;` @kind virtual;
  #L5716c8.  v0:= `@@kotlin.io.LineReader.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L5716cc.  v1:= 0I;
  #L5716ce.  call temp:= `position`(v0, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L5716d4.  v0:= `@@kotlin.io.LineReader.g` @type ^`java.lang.StringBuilder` @kind object;
  #L5716d8.  call `setLength`(v0, v1) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L5716de.  return @kind void;
}
procedure `void` `e`(`kotlin.io.LineReader` v2 @kind this) @signature `Lkotlin/io/LineReader;.e:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L5716f0.  v0:= `@@kotlin.io.LineReader.g` @type ^`java.lang.StringBuilder` @kind object;
  #L5716f4.  v1:= 32I;
  #L5716f8.  call `setLength`(v0, v1) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L5716fe.  v0:= `@@kotlin.io.LineReader.g` @type ^`java.lang.StringBuilder` @kind object;
  #L571702.  call `trimToSize`(v0) @signature `Ljava/lang/StringBuilder;.trimToSize:()V` @kind virtual;
  #L571708.  return @kind void;
}
procedure `void` `f`(`kotlin.io.LineReader` v4 @kind this, `java.nio.charset.Charset` v5 @kind object) @signature `Lkotlin/io/LineReader;.f:(Ljava/nio/charset/Charset;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L57171c.  call temp:= `newDecoder`(v5) @signature `Ljava/nio/charset/Charset;.newDecoder:()Ljava/nio/charset/CharsetDecoder;` @kind virtual;
  #L571722.  v5:= temp @kind object;
  #L571724.  v0:= "charset.newDecoder()" @kind object;
  #L571728.  call `checkNotNullExpressionValue`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L57172e.  `@@kotlin.io.LineReader.a` @type ^`java.nio.charset.CharsetDecoder` := v5 @kind object;
  #L571732.  v5:= `@@kotlin.io.LineReader.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L571736.  call temp:= `clear`(v5) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L57173c.  v5:= `@@kotlin.io.LineReader.f` @type ^`java.nio.CharBuffer` @kind object;
  #L571740.  call temp:= `clear`(v5) @signature `Ljava/nio/CharBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L571746.  v5:= `@@kotlin.io.LineReader.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L57174a.  v0:= 10I;
  #L57174e.  v1:= (`byte`) v0 @kind i2b;
  #L571750.  call temp:= `put`(v5, v1) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L571756.  v5:= `@@kotlin.io.LineReader.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L57175a.  call temp:= `flip`(v5) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L571760.  v5:= `@@kotlin.io.LineReader.a` @type ^`java.nio.charset.CharsetDecoder` @kind object;
  #L571764.  if v5 != 0 then goto L571772;
  #L571768.  v1:= "decoder" @kind object;
  #L57176c.  call `throwUninitializedPropertyAccessException`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L571772.  v1:= `@@kotlin.io.LineReader.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L571776.  v2:= `@@kotlin.io.LineReader.f` @type ^`java.nio.CharBuffer` @kind object;
  #L57177a.  v3:= 0I;
  #L57177c.  call temp:= `decode`(v5, v1, v2, v3) @signature `Ljava/nio/charset/CharsetDecoder;.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;` @kind virtual;
  #L571782.  v5:= `@@kotlin.io.LineReader.f` @type ^`java.nio.CharBuffer` @kind object;
  #L571786.  call temp:= `position`(v5) @signature `Ljava/nio/CharBuffer;.position:()I` @kind virtual;
  #L57178c.  v5:= temp;
  #L57178e.  v1:= 1I;
  #L571790.  if v5 != v1 then goto L5717a6;
  #L571794.  v5:= `@@kotlin.io.LineReader.f` @type ^`java.nio.CharBuffer` @kind object;
  #L571798.  call temp:= `get`(v5, v3) @signature `Ljava/nio/CharBuffer;.get:(I)C` @kind virtual;
  #L57179e.  v5:= temp;
  #L5717a0.  if v5 != v0 then goto L5717a6;
  #L5717a4.  v3:= 1I;
  #L5717a6.  `@@kotlin.io.LineReader.b` @type ^`boolean` := v3 @kind boolean;
  #L5717aa.  call `d`(v4) @signature `Lkotlin/io/LineReader;.d:()V` @kind direct;
  #L5717b0.  return @kind void;
}
procedure `java.lang.String` `readLine`(`kotlin.io.LineReader` v9 @kind this, `java.io.InputStream` v10 @kind object, `java.nio.charset.Charset` v11 @kind object) @signature `Lkotlin/io/LineReader;.readLine:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L571400.  @monitorenter v9
  #L571402.  v0:= "inputStream" @kind object;
  #L571406.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L57140c.  v0:= "charset" @kind object;
  #L571410.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L571416.  v0:= `@@kotlin.io.LineReader.a` @type ^`java.nio.charset.CharsetDecoder` @kind object;
  #L57141a.  v1:= 1I;
  #L57141c.  if v0 == 0 then goto L571448;
  #L571420.  v0:= `@@kotlin.io.LineReader.a` @type ^`java.nio.charset.CharsetDecoder` @kind object;
  #L571424.  if v0 != 0 then goto L571432;
  #L571428.  v2:= "decoder" @kind object;
  #L57142c.  call `throwUninitializedPropertyAccessException`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L571432.  call temp:= `charset`(v0) @signature `Ljava/nio/charset/CharsetDecoder;.charset:()Ljava/nio/charset/Charset;` @kind virtual;
  #L571438.  v0:= temp @kind object;
  #L57143a.  call temp:= `areEqual`(v0, v11) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L571440.  v0:= temp;
  #L571442.  v0:= v0 ^~ v1 @kind int;
  #L571444.  if v0 == 0 then goto L57144e;
  #L571448.  call `f`(v9, v11) @signature `Lkotlin/io/LineReader;.f:(Ljava/nio/charset/Charset;)V` @kind direct;
  #L57144e.  v11:= 0I;
  #L571450.  v0:= 0I;
  #L571452.  v2:= 0I;
  #L571454.  call temp:= `read`(v10) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L57145a.  v3:= temp;
  #L57145c.  v4:= 32I;
  #L571460.  v5:= 10I;
  #L571464.  v6:= -1I;
  #L571466.  if v3 != v6 then goto L57149c;
  #L57146a.  v10:= `@@kotlin.io.LineReader.g` @type ^`java.lang.StringBuilder` @kind object;
  #L57146e.  call temp:= `length`(v10) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L571474.  v10:= temp;
  #L571476.  if v10 != 0 then goto L57147e;
  #L57147a.  v10:= 1I;
  #L57147c.  goto L571480;
  #L57147e.  v10:= 0I;
  #L571480.  if v10 == 0 then goto L571492;
  #L571484.  if v0 != 0 then goto L571492;
  #L571488.  if v2 != 0 then goto L571492;
  #L57148c.  v10:= 0I;
  #L57148e.  @monitorexit v9
  #L571490.  return v10 @kind object;
  #L571492.  call temp:= `c`(v9, v0, v2) @signature `Lkotlin/io/LineReader;.c:(II)I` @kind direct;
  #L571498.  v10:= temp;
  #L57149a.  goto L5714fc;
  #L57149c.  v6:= `@@kotlin.io.LineReader.c` @type ^`byte`[] @kind object;
  #L5714a0.  v7:= v0 + 1;
  #L5714a4.  v8:= (`byte`) v3 @kind i2b;
  #L5714a6.  v6[v0]:= v8 @kind byte;
  #L5714aa.  if v3 == v5 then goto L5714c0;
  #L5714ae.  if v7 == v4 then goto L5714c0;
  #L5714b2.  v0:= `@@kotlin.io.LineReader.b` @type ^`boolean` @kind boolean;
  #L5714b6.  if v0 != 0 then goto L5714bc;
  #L5714ba.  goto L5714c0;
  #L5714bc.  v0:= v7;
  #L5714be.  goto L571454;
  #L5714c0.  v0:= `@@kotlin.io.LineReader.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L5714c4.  call temp:= `limit`(v0, v7) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L5714ca.  v0:= `@@kotlin.io.LineReader.f` @type ^`java.nio.CharBuffer` @kind object;
  #L5714ce.  call temp:= `position`(v0, v2) @signature `Ljava/nio/CharBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L5714d4.  call temp:= `b`(v9, v11) @signature `Lkotlin/io/LineReader;.b:(Z)I` @kind direct;
  #L5714da.  v2:= temp;
  #L5714dc.  if v2 <= 0 then goto L5715a2;
  #L5714e0.  v0:= `@@kotlin.io.LineReader.d` @type ^`char`[] @kind object;
  #L5714e4.  v3:= v2 + -1;
  #L5714e8.  v0:= v0[v3] @kind char;
  #L5714ec.  if v0 != v5 then goto L5715a2;
  #L5714f0.  v10:= `@@kotlin.io.LineReader.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L5714f4.  call temp:= `position`(v10, v11) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L5714fa.  v10:= v2;
  #L5714fc.  if v10 <= 0 then goto L571530;
  #L571500.  v0:= `@@kotlin.io.LineReader.d` @type ^`char`[] @kind object;
  #L571504.  v2:= v10 + -1;
  #L571508.  v0:= v0[v2] @kind char;
  #L57150c.  if v0 != v5 then goto L571530;
  #L571510.  v10:= v10 + -1;
  #L571514.  if v10 <= 0 then goto L571530;
  #L571518.  v0:= `@@kotlin.io.LineReader.d` @type ^`char`[] @kind object;
  #L57151c.  v2:= v10 + -1;
  #L571520.  v0:= v0[v2] @kind char;
  #L571524.  v2:= 13I;
  #L571528.  if v0 != v2 then goto L571530;
  #L57152c.  v10:= v10 + -1;
  #L571530.  v0:= `@@kotlin.io.LineReader.g` @type ^`java.lang.StringBuilder` @kind object;
  #L571534.  call temp:= `length`(v0) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L57153a.  v0:= temp;
  #L57153c.  if v0 != 0 then goto L571542;
  #L571540.  goto L571544;
  #L571542.  v1:= 0I;
  #L571544.  if v1 == 0 then goto L57155a;
  #L571548.  v0:= `@@kotlin.io.LineReader.d` @type ^`char`[] @kind object;
  #L57154c.  v1:= new `java.lang.String`;
  #L571550.  call `<init>`(v1, v0, v11, v10) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L571556.  @monitorexit v9
  #L571558.  return v1 @kind object;
  #L57155a.  v0:= `@@kotlin.io.LineReader.g` @type ^`java.lang.StringBuilder` @kind object;
  #L57155e.  v1:= `@@kotlin.io.LineReader.d` @type ^`char`[] @kind object;
  #L571562.  call temp:= `append`(v0, v1, v11, v10) @signature `Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;` @kind virtual;
  #L571568.  v10:= `@@kotlin.io.LineReader.g` @type ^`java.lang.StringBuilder` @kind object;
  #L57156c.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L571572.  v10:= temp @kind object;
  #L571574.  v0:= "sb.toString()" @kind object;
  #L571578.  call `checkNotNullExpressionValue`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L57157e.  v0:= `@@kotlin.io.LineReader.g` @type ^`java.lang.StringBuilder` @kind object;
  #L571582.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L571588.  v0:= temp;
  #L57158a.  if v0 <= v4 then goto L571594;
  #L57158e.  call `e`(v9) @signature `Lkotlin/io/LineReader;.e:()V` @kind direct;
  #L571594.  v0:= `@@kotlin.io.LineReader.g` @type ^`java.lang.StringBuilder` @kind object;
  #L571598.  call `setLength`(v0, v11) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L57159e.  @monitorexit v9
  #L5715a0.  return v10 @kind object;
  #L5715a2.  call temp:= `a`(v9) @signature `Lkotlin/io/LineReader;.a:()I` @kind direct;
  #L5715a8.  v0:= temp;
  #L5715aa.  goto L571454;
  #L5715ae.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5715b0.  @monitorexit v9
  #L5715b2.  throw v10;
  catch `java.lang.Throwable` @[L571402..L571476] goto L5715ae;
  catch `java.lang.Throwable` @[L571492..L571556] goto L5715ae;
  catch `java.lang.Throwable` @[L57155a..L57159e] goto L5715ae;
  catch `java.lang.Throwable` @[L5715a2..L5715aa] goto L5715ae;
}
