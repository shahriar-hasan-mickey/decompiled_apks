record `kotlin.io.FileTreeWalk` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.sequences.Sequence` @kind interface {
  `java.io.File` `kotlin.io.FileTreeWalk.a` @AccessFlag PRIVATE_FINAL;
  `kotlin.io.FileWalkDirection` `kotlin.io.FileTreeWalk.b` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function1` `kotlin.io.FileTreeWalk.c` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function1` `kotlin.io.FileTreeWalk.d` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function2` `kotlin.io.FileTreeWalk.e` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.io.FileTreeWalk.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk` v10 @kind this, `java.io.File` v11 @kind object, `kotlin.io.FileWalkDirection` v12 @kind object) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L56f70c.  v0:= "start" @kind object;
  #L56f710.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56f716.  v0:= "direction" @kind object;
  #L56f71a.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56f720.  v4:= 0I;
  #L56f722.  v5:= 0I;
  #L56f724.  v6:= 0I;
  #L56f726.  v7:= 0I;
  #L56f728.  v8:= 32I;
  #L56f72c.  v9:= 0I;
  #L56f72e.  v1:= v10 @kind object;
  #L56f730.  v2:= v11 @kind object;
  #L56f732.  v3:= v12 @kind object;
  #L56f734.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;IILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L56f73a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk` v0 @kind this, `java.io.File` v1 @kind object, `kotlin.io.FileWalkDirection` v2 @kind object, `int` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L56f74c.  v3:= v3 ^& 2;
  #L56f750.  if v3 == 0 then goto L56f758;
  #L56f754.  v2:= `@@kotlin.io.FileWalkDirection.TOP_DOWN` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L56f758.  call `<init>`(v0, v1, v2) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;)V` @kind direct;
  #L56f75e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk` v0 @kind this, `java.io.File` v1 @kind object, `kotlin.io.FileWalkDirection` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object, `int` v6 ) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L56f770.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L56f776.  v0.`kotlin.io.FileTreeWalk.a` @type ^`java.io.File` := v1 @kind object;
  #L56f77a.  v0.`kotlin.io.FileTreeWalk.b` @type ^`kotlin.io.FileWalkDirection` := v2 @kind object;
  #L56f77e.  v0.`kotlin.io.FileTreeWalk.c` @type ^`kotlin.jvm.functions.Function1` := v3 @kind object;
  #L56f782.  v0.`kotlin.io.FileTreeWalk.d` @type ^`kotlin.jvm.functions.Function1` := v4 @kind object;
  #L56f786.  v0.`kotlin.io.FileTreeWalk.e` @type ^`kotlin.jvm.functions.Function2` := v5 @kind object;
  #L56f78a.  v0.`kotlin.io.FileTreeWalk.f` @type ^`int` := v6;
  #L56f78e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk` v7 @kind this, `java.io.File` v8 @kind object, `kotlin.io.FileWalkDirection` v9 @kind object, `kotlin.jvm.functions.Function1` v10 @kind object, `kotlin.jvm.functions.Function1` v11 @kind object, `kotlin.jvm.functions.Function2` v12 @kind object, `int` v13 , `int` v14 , `kotlin.jvm.internal.DefaultConstructorMarker` v15 @kind object) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;IILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L56f7a0.  v15:= v14 ^& 2;
  #L56f7a4.  if v15 == 0 then goto L56f7ac;
  #L56f7a8.  v9:= `@@kotlin.io.FileWalkDirection.TOP_DOWN` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L56f7ac.  v2:= v9 @kind object;
  #L56f7ae.  v9:= v14 ^& 32;
  #L56f7b2.  if v9 == 0 then goto L56f7c4;
  #L56f7b6.  v13:= 2147483647I;
  #L56f7bc.  v6:= 2147483647I;
  #L56f7c2.  goto L56f7c6;
  #L56f7c4.  v6:= v13;
  #L56f7c6.  v0:= v7 @kind object;
  #L56f7c8.  v1:= v8 @kind object;
  #L56f7ca.  v3:= v10 @kind object;
  #L56f7cc.  v4:= v11 @kind object;
  #L56f7ce.  v5:= v12 @kind object;
  #L56f7d0.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;I)V` @kind direct;
  #L56f7d6.  return @kind void;
}
procedure `kotlin.io.FileWalkDirection` `access$getDirection$p`(`kotlin.io.FileTreeWalk` v0 @kind object) @signature `Lkotlin/io/FileTreeWalk;.access$getDirection$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/io/FileWalkDirection;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L56f6ac.  v0:= v0.`kotlin.io.FileTreeWalk.b` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L56f6b0.  return v0 @kind object;
}
procedure `int` `access$getMaxDepth$p`(`kotlin.io.FileTreeWalk` v0 @kind object) @signature `Lkotlin/io/FileTreeWalk;.access$getMaxDepth$p:(Lkotlin/io/FileTreeWalk;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L56f530.  v0:= v0.`kotlin.io.FileTreeWalk.f` @type ^`int`;
  #L56f534.  return v0;
}
procedure `kotlin.jvm.functions.Function1` `access$getOnEnter$p`(`kotlin.io.FileTreeWalk` v0 @kind object) @signature `Lkotlin/io/FileTreeWalk;.access$getOnEnter$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L56f6c4.  v0:= v0.`kotlin.io.FileTreeWalk.c` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L56f6c8.  return v0 @kind object;
}
procedure `kotlin.jvm.functions.Function2` `access$getOnFail$p`(`kotlin.io.FileTreeWalk` v0 @kind object) @signature `Lkotlin/io/FileTreeWalk;.access$getOnFail$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function2;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L56f6f4.  v0:= v0.`kotlin.io.FileTreeWalk.e` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L56f6f8.  return v0 @kind object;
}
procedure `kotlin.jvm.functions.Function1` `access$getOnLeave$p`(`kotlin.io.FileTreeWalk` v0 @kind object) @signature `Lkotlin/io/FileTreeWalk;.access$getOnLeave$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L56f6dc.  v0:= v0.`kotlin.io.FileTreeWalk.d` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L56f6e0.  return v0 @kind object;
}
procedure `java.io.File` `access$getStart$p`(`kotlin.io.FileTreeWalk` v0 @kind object) @signature `Lkotlin/io/FileTreeWalk;.access$getStart$p:(Lkotlin/io/FileTreeWalk;)Ljava/io/File;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L56f548.  v0:= v0.`kotlin.io.FileTreeWalk.a` @type ^`java.io.File` @kind object;
  #L56f54c.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`kotlin.io.FileTreeWalk` v1 @kind this) @signature `Lkotlin/io/FileTreeWalk;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56f560.  v0:= new `kotlin.io.FileTreeWalk$b`;
  #L56f564.  call `<init>`(v0, v1) @signature `Lkotlin/io/FileTreeWalk$b;.<init>:(Lkotlin/io/FileTreeWalk;)V` @kind direct;
  #L56f56a.  return v0 @kind object;
}
procedure `kotlin.io.FileTreeWalk` `maxDepth`(`kotlin.io.FileTreeWalk` v8 @kind this, `int` v9 ) @signature `Lkotlin/io/FileTreeWalk;.maxDepth:(I)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L56f57c.  if v9 <= 0 then goto L56f5a4;
  #L56f580.  v7:= new `kotlin.io.FileTreeWalk`;
  #L56f584.  v1:= v8.`kotlin.io.FileTreeWalk.a` @type ^`java.io.File` @kind object;
  #L56f588.  v2:= v8.`kotlin.io.FileTreeWalk.b` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L56f58c.  v3:= v8.`kotlin.io.FileTreeWalk.c` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L56f590.  v4:= v8.`kotlin.io.FileTreeWalk.d` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L56f594.  v5:= v8.`kotlin.io.FileTreeWalk.e` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L56f598.  v0:= v7 @kind object;
  #L56f59a.  v6:= v9;
  #L56f59c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;I)V` @kind direct;
  #L56f5a2.  return v7 @kind object;
  #L56f5a4.  v0:= new `java.lang.IllegalArgumentException`;
  #L56f5a8.  v1:= new `java.lang.StringBuilder`;
  #L56f5ac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L56f5b2.  v2:= "depth must be positive, but was " @kind object;
  #L56f5b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56f5bc.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L56f5c2.  v9:= 46I;
  #L56f5c6.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L56f5cc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L56f5d2.  v9:= temp @kind object;
  #L56f5d4.  call `<init>`(v0, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56f5da.  throw v0;
}
procedure `kotlin.io.FileTreeWalk` `onEnter`(`kotlin.io.FileTreeWalk` v8 @kind this, `kotlin.jvm.functions.Function1` v9 @kind object) @signature `Lkotlin/io/FileTreeWalk;.onEnter:(Lkotlin/jvm/functions/Function1;)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L56f5ec.  v0:= "function" @kind object;
  #L56f5f0.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56f5f6.  v0:= new `kotlin.io.FileTreeWalk`;
  #L56f5fa.  v2:= v8.`kotlin.io.FileTreeWalk.a` @type ^`java.io.File` @kind object;
  #L56f5fe.  v3:= v8.`kotlin.io.FileTreeWalk.b` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L56f602.  v5:= v8.`kotlin.io.FileTreeWalk.d` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L56f606.  v6:= v8.`kotlin.io.FileTreeWalk.e` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L56f60a.  v7:= v8.`kotlin.io.FileTreeWalk.f` @type ^`int`;
  #L56f60e.  v1:= v0 @kind object;
  #L56f610.  v4:= v9 @kind object;
  #L56f612.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;I)V` @kind direct;
  #L56f618.  return v0 @kind object;
}
procedure `kotlin.io.FileTreeWalk` `onFail`(`kotlin.io.FileTreeWalk` v8 @kind this, `kotlin.jvm.functions.Function2` v9 @kind object) @signature `Lkotlin/io/FileTreeWalk;.onFail:(Lkotlin/jvm/functions/Function2;)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L56f62c.  v0:= "function" @kind object;
  #L56f630.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56f636.  v0:= new `kotlin.io.FileTreeWalk`;
  #L56f63a.  v2:= v8.`kotlin.io.FileTreeWalk.a` @type ^`java.io.File` @kind object;
  #L56f63e.  v3:= v8.`kotlin.io.FileTreeWalk.b` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L56f642.  v4:= v8.`kotlin.io.FileTreeWalk.c` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L56f646.  v5:= v8.`kotlin.io.FileTreeWalk.d` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L56f64a.  v7:= v8.`kotlin.io.FileTreeWalk.f` @type ^`int`;
  #L56f64e.  v1:= v0 @kind object;
  #L56f650.  v6:= v9 @kind object;
  #L56f652.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;I)V` @kind direct;
  #L56f658.  return v0 @kind object;
}
procedure `kotlin.io.FileTreeWalk` `onLeave`(`kotlin.io.FileTreeWalk` v8 @kind this, `kotlin.jvm.functions.Function1` v9 @kind object) @signature `Lkotlin/io/FileTreeWalk;.onLeave:(Lkotlin/jvm/functions/Function1;)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L56f66c.  v0:= "function" @kind object;
  #L56f670.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L56f676.  v0:= new `kotlin.io.FileTreeWalk`;
  #L56f67a.  v2:= v8.`kotlin.io.FileTreeWalk.a` @type ^`java.io.File` @kind object;
  #L56f67e.  v3:= v8.`kotlin.io.FileTreeWalk.b` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L56f682.  v4:= v8.`kotlin.io.FileTreeWalk.c` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L56f686.  v6:= v8.`kotlin.io.FileTreeWalk.e` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L56f68a.  v7:= v8.`kotlin.io.FileTreeWalk.f` @type ^`int`;
  #L56f68e.  v1:= v0 @kind object;
  #L56f690.  v5:= v9 @kind object;
  #L56f692.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;I)V` @kind direct;
  #L56f698.  return v0 @kind object;
}
